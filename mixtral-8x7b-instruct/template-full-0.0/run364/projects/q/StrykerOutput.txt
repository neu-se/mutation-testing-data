*** using precomputed mutations ***
[32m17:14:06 (3296) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m17:14:06 (3296) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m17:14:06 (3296) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m17:14:06 (3296) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m17:14:06 (3296) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m17:14:07 (3296) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1644 mutants from MUTATION_TESTING/template-full_mixtral-8x7b-instruct_0.0/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with false
Mutant 1 in q.js: typeof bootstrap === "function" replaced with true
Mutant 2 in q.js: typeof bootstrap === "function" replaced with 1 === 0
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promises", definition)
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap(null, definition)
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap(definition, "promise")
Mutant 6 in q.js: bootstrap replaced with null
Mutant 7 in q.js: "promise" replaced with null
Mutant 8 in q.js: "promise" replaced with 42
Mutant 9 in q.js: "promise" replaced with {}
Mutant 10 in q.js: typeof exports === "object" && typeof module === "object" replaced with true
Mutant 11 in q.js: typeof exports === "object" && typeof module === "object" replaced with false
Mutant 12 in q.js: typeof exports === "object" && typeof module === "object" replaced with "undefined" === typeof exports
Mutant 13 in q.js: typeof define === "function" && define.amd replaced with true
Mutant 14 in q.js: typeof define === "function" && define.amd replaced with 1 < 2
Mutant 15 in q.js: typeof define === "function" && define.amd replaced with function () {
  return {
    foo: 'bar'
  };
}
Mutant 16 in q.js: define replaced with null
Mutant 17 in q.js: typeof ses !== "undefined" replaced with false
Mutant 18 in q.js: typeof ses !== "undefined" replaced with typeof ses === "function"
Mutant 19 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined"
Mutant 20 in q.js: !ses.ok() replaced with true
Mutant 21 in q.js: !ses.ok() replaced with 1 === 2
Mutant 22 in q.js: !ses.ok() replaced with ses.noConflict()
Mutant 23 in q.js: ses.ok replaced with false
Mutant 24 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with false
Mutant 25 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with 'undefined' === typeof window
Mutant 26 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with Object.prototype.toString.call(window) === '[object global]'
Mutant 27 in q.js: definition replaced with noop
Mutant 28 in q.js: domain replaced with true
Mutant 29 in q.js: domain replaced with null
Mutant 30 in q.js: domain replaced with head.domain || {}
Mutant 31 in q.js: domain.enter replaced with null
Mutant 32 in q.js: runSingle(task, domain) replaced with runSingle(noop)
Mutant 33 in q.js: runSingle(task, domain) replaced with runSingle(null)
Mutant 34 in q.js: runSingle(task, domain) replaced with runSingle([1, 2, 3])
Mutant 35 in q.js: task replaced with () => task()
Mutant 36 in q.js: domain replaced with null
Mutant 37 in q.js: domain replaced with 123
Mutant 38 in q.js: domain replaced with 'string'
Mutant 39 in q.js: laterQueue.length replaced with laterQueue.length + 1
Mutant 40 in q.js: laterQueue.length replaced with 0
Mutant 41 in q.js: task replaced with () => {
  throw new Error('Buggy!');
}
Mutant 42 in q.js: task replaced with noop
Mutant 43 in q.js: task replaced with null
Mutant 44 in q.js: task replaced with true
Mutant 45 in q.js: task replaced with head.next
Mutant 46 in q.js: isNodeJS replaced with false
Mutant 47 in q.js: isNodeJS replaced with 0
Mutant 48 in q.js: domain replaced with true
Mutant 49 in q.js: domain replaced with false
Mutant 50 in q.js: domain replaced with null
Mutant 51 in q.js: domain.exit replaced with global.Q.exit
Mutant 52 in q.js: domain.exit replaced with null
Mutant 53 in q.js: setTimeout(flush, 0) replaced with setTimeout(requestAnimationFrame(flush))
Mutant 54 in q.js: setTimeout replaced with 0
Mutant 55 in q.js: flush replaced with alert('Flushing the queue')
Mutant 56 in q.js: flush replaced with console.log('Flushing the queue')
Mutant 57 in q.js: 0 replaced with 1
Mutant 58 in q.js: 0 replaced with '1'
Mutant 59 in q.js: 0 replaced with Infinity
Mutant 60 in q.js: domain replaced with false
Mutant 61 in q.js: domain replaced with null
Mutant 62 in q.js: domain replaced with undefined
Mutant 63 in q.js: domain replaced with false
Mutant 64 in q.js: domain replaced with global.domain
Mutant 65 in q.js: domain replaced with null
Mutant 66 in q.js: domain.exit replaced with null
Mutant 67 in q.js: !flushing replaced with false
Mutant 68 in q.js: !flushing replaced with true
Mutant 69 in q.js: !flushing replaced with 1 < 2
Mutant 70 in q.js: flush replaced with function () {
  throw new Error('Mutated code');
}
Mutant 71 in q.js: typeof window !== "undefined" replaced with false
Mutant 72 in q.js: typeof window !== "undefined" replaced with 1 > 0
Mutant 73 in q.js: typeof window !== "undefined" replaced with typeof window !== "undefined" || true
Mutant 74 in q.js: window replaced with function () {
  return flush();
}
Mutant 75 in q.js: window replaced with {}
Mutant 76 in q.js: window replaced with null
Mutant 77 in q.js: setImmediate replaced with 0
Mutant 78 in q.js: setImmediate replaced with requestAnimationFrame
Mutant 79 in q.js: flush replaced with function () {}
Mutant 80 in q.js: flush replaced with 1
Mutant 81 in q.js: typeof MessageChannel !== "undefined" replaced with false
Mutant 82 in q.js: typeof MessageChannel !== "undefined" replaced with 0
Mutant 83 in q.js: typeof MessageChannel !== "undefined" replaced with 'undefined'
Mutant 84 in q.js: channel.port2.postMessage replaced with null
Mutant 85 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 86 in q.js: 0 replaced with 1
Mutant 87 in q.js: 0 replaced with 'some string'
Mutant 88 in q.js: 0 replaced with {
  foo: 'bar'
}
Mutant 89 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush.bind(null))
Mutant 90 in q.js: setTimeout replaced with 0 === 1
Mutant 91 in q.js: 0 replaced with 1000
Mutant 92 in q.js: 0 replaced with Infinity
Mutant 93 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 94 in q.js: setTimeout(flush, 0) replaced with setTimeout(null)
Mutant 95 in q.js: setTimeout(flush, 0) replaced with setTimeout(function () {/* do nothing */})
Mutant 96 in q.js: setTimeout replaced with undefined
Mutant 97 in q.js: setTimeout replaced with alert
Mutant 98 in q.js: flush replaced with function () {}
Mutant 99 in q.js: flush replaced with 1 + 1
Mutant 100 in q.js: flush replaced with flush.bind(this)
Mutant 101 in q.js: 0 replaced with 1
Mutant 102 in q.js: 0 replaced with Infinity
Mutant 103 in q.js: 0 replaced with -1
Mutant 104 in q.js: laterQueue.push replaced with []
Mutant 105 in q.js: laterQueue.push replaced with 42
Mutant 106 in q.js: task replaced with null
Mutant 107 in q.js: task replaced with 42
Mutant 108 in q.js: task replaced with {}
Mutant 109 in q.js: !flushing replaced with false
Mutant 110 in q.js: !flushing replaced with this.flushing
Mutant 111 in q.js: !flushing replaced with 0
Mutant 112 in q.js: requestTick replaced with {}
Mutant 113 in q.js: call.apply(f, arguments) replaced with call.apply(this)
Mutant 114 in q.js: call.apply(f, arguments) replaced with call.apply(null)
Mutant 115 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 116 in q.js: arguments replaced with null
Mutant 117 in q.js: uncurryThis replaced with Function.prototype.bind
Mutant 118 in q.js: uncurryThis replaced with Object.prototype.toString
Mutant 119 in q.js: Array.prototype.slice replaced with function () {
  throw new Error('Buggy slice');
}
Mutant 120 in q.js: Array.prototype.slice replaced with Array.prototype.filter
Mutant 121 in q.js: Array.prototype.slice replaced with Math.floor
Mutant 122 in q.js: arguments.length === 1 replaced with true
Mutant 123 in q.js: arguments.length === 1 replaced with this.length > 0
Mutant 124 in q.js: arguments.length === 1 replaced with index < this.length - 1
Mutant 125 in q.js: 1 replaced with null
Mutant 126 in q.js: 1 replaced with array_slice(arguments, 1)
Mutant 127 in q.js: index in this replaced with true
Mutant 128 in q.js: ++index >= length replaced with index > length
Mutant 129 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index > length; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 130 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index == length; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 131 in q.js: index++ replaced with index + 1
Mutant 132 in q.js: index++ replaced with index = index + 1
Mutant 133 in q.js: index in this replaced with false
Mutant 134 in q.js: index in this replaced with 0 in this
Mutant 135 in q.js: index in this replaced with this.hasOwnProperty(index)
Mutant 136 in q.js: callback(basis, this[index], index) replaced with callback(null)
Mutant 137 in q.js: callback(basis, this[index], index) replaced with callback(index)
Mutant 138 in q.js: callback(basis, this[index], index) replaced with callback(new Date())
Mutant 139 in q.js: callback replaced with callback + 1
Mutant 140 in q.js: this[index] replaced with 0
Mutant 141 in q.js: this[index] replaced with this.length
Mutant 142 in q.js: index replaced with null
Mutant 143 in q.js: index replaced with 42
Mutant 144 in q.js: index replaced with this
Mutant 145 in q.js: i < this.length replaced with i > this.length
Mutant 146 in q.js: i < this.length replaced with i !== this.length
Mutant 147 in q.js: i++ replaced with i--
Mutant 148 in q.js: i++ replaced with Math.random()
Mutant 149 in q.js: i++ replaced with array_indexOf(value, this)
Mutant 150 in q.js: this[i] === value replaced with i === value
Mutant 151 in q.js: this[i] === value replaced with this[i] === undefined
Mutant 152 in q.js: this[i] === value replaced with 0 === value
Mutant 153 in q.js: collect.push replaced with collect.unshift
Mutant 154 in q.js: collect.push replaced with Math.random
Mutant 155 in q.js: collect.push replaced with callback.length
Mutant 156 in q.js: callback.call(thisp, value, index, self) replaced with callback(value, index, self)
Mutant 157 in q.js: callback.call(thisp, value, index, self) replaced with callback.apply(null, [value, index, self])
Mutant 158 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(self, index, value, self)
Mutant 159 in q.js: callback.call replaced with callback.bind
Mutant 160 in q.js: thisp replaced with 42
Mutant 161 in q.js: thisp replaced with function () {}
Mutant 162 in q.js: value replaced with 42
Mutant 163 in q.js: value replaced with this
Mutant 164 in q.js: self replaced with 5
Mutant 165 in q.js: self replaced with function () {}
Mutant 166 in q.js: uncurryThis replaced with Function.prototype.bind
Mutant 167 in q.js: object replaced with Object.prototype
Mutant 168 in q.js: object_hasOwnProperty(object, key) replaced with object.hasOwnProperty(key)
Mutant 169 in q.js: object_hasOwnProperty(object, key) replaced with Array.prototype.hasOwnProperty.call(object, key)
Mutant 170 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(this)
Mutant 171 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(window)
Mutant 172 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(Math)
Mutant 173 in q.js: object_hasOwnProperty replaced with null
Mutant 174 in q.js: object_hasOwnProperty replaced with Array.isArray
Mutant 175 in q.js: key replaced with "toString"
Mutant 176 in q.js: key replaced with null
Mutant 177 in q.js: key replaced with 1
Mutant 178 in q.js: key replaced with null
Mutant 179 in q.js: key replaced with 42
Mutant 180 in q.js: uncurryThis replaced with Function.prototype.bind
Mutant 181 in q.js: Object replaced with null
Mutant 182 in q.js: Object replaced with Array
Mutant 183 in q.js: value replaced with null
Mutant 184 in q.js: value replaced with ''
Mutant 185 in q.js: value replaced with true
Mutant 186 in q.js: object_toString replaced with '[object Object]'
Mutant 187 in q.js: object_toString replaced with 1
Mutant 188 in q.js: exception replaced with null
Mutant 189 in q.js: exception replaced with {}
Mutant 190 in q.js: exception replaced with []
Mutant 191 in q.js: typeof ReturnValue !== "undefined" replaced with true
Mutant 192 in q.js: typeof ReturnValue !== "undefined" replaced with typeof globalThis.ReturnValue !== "undefined"
Mutant 193 in q.js: typeof ReturnValue !== "undefined" replaced with typeof someUndefinedVariable !== "undefined"
Mutant 194 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with promise.stack && typeof error === "object" && error !== null && error.stack && hasStacks
Mutant 195 in q.js: !!p replaced with p ? 1 : 0
Mutant 196 in q.js: !!p replaced with !p.source
Mutant 197 in q.js: !!p replaced with p instanceof Error
Mutant 198 in q.js: p = p.source replaced with null
Mutant 199 in q.js: p = p.source replaced with 1
Mutant 200 in q.js: p = p.source replaced with ''.source
Mutant 201 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ < p.stackCounter
Mutant 202 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(null)
Mutant 203 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty({})
Mutant 204 in q.js: object_defineProperty replaced with Object.defineProperty
Mutant 205 in q.js: error replaced with null
Mutant 206 in q.js: error replaced with 42
Mutant 207 in q.js: error replaced with function () {}
Mutant 208 in q.js: "__minimumStackCounter__" replaced with this.__minimumStackCounter__
Mutant 209 in q.js: "__minimumStackCounter__" replaced with Math.random()
Mutant 210 in q.js: "__minimumStackCounter__" replaced with new Date().getTime()
Mutant 211 in q.js: error.stack replaced with "error.stackStrace"
Mutant 212 in q.js: error.stack replaced with Math.random()
Mutant 213 in q.js: error.stack replaced with Array(100).join('\n')
Mutant 214 in q.js: stacks.join replaced with stacks.concat.join
Mutant 215 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with " From previous event:\n"
Mutant 216 in q.js: concatedStacks replaced with error.stack.toString()
Mutant 217 in q.js: concatedStacks replaced with promise.stack
Mutant 218 in q.js: concatedStacks replaced with new Error().stack
Mutant 219 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(null)
Mutant 220 in q.js: "stack" replaced with error.stack.toString()
Mutant 221 in q.js: "\n" replaced with ";\n"
Mutant 222 in q.js: "\n" replaced with "\n---\n"
Mutant 223 in q.js: "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + "\n"
Mutant 224 in q.js: i < lines.length replaced with i <= lines.length
Mutant 225 in q.js: i < lines.length replaced with i > -1
Mutant 226 in q.js: i < lines.length replaced with i in lines
Mutant 227 in q.js: ++i replaced with i--
Mutant 228 in q.js: ++i replaced with i + 1
Mutant 229 in q.js: ++i replaced with Math.random()
Mutant 230 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with line !== null && line !== undefined && !isInternalFrame(line) && !isNodeFrame(line)
Mutant 231 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !(isInternalFrame(line) || isNodeFrame(line)) && line
Mutant 232 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !object_hasOwnProperty(window, 'line') && !isInternalFrame(line) && !isNodeFrame(line)
Mutant 233 in q.js: isInternalFrame replaced with typeof isInternalFrame !== 'function'
Mutant 234 in q.js: line replaced with false
Mutant 235 in q.js: isNodeFrame replaced with typeof isNodeFrame !== 'function'
Mutant 236 in q.js: isNodeFrame replaced with false
Mutant 237 in q.js: "\n" replaced with "<br>"
Mutant 238 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 239 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 240 in q.js: stackLine.indexOf replaced with stackLine.lastIndexOf
Mutant 241 in q.js: "(node.js:" replaced with "(node)"
Mutant 242 in q.js: "(node.js:" replaced with "(node.exe)"
Mutant 243 in q.js: "(node.js:" replaced with ""
Mutant 244 in q.js: stackLine replaced with "1: " + stackLine
Mutant 245 in q.js: stackLine replaced with stackLine.toUpperCase()
Mutant 246 in q.js: stackLine replaced with global.stackLine
Mutant 247 in q.js: attempt1 replaced with null
Mutant 248 in q.js: attempt1 replaced with 0
Mutant 249 in q.js: attempt1 replaced with ''
Mutant 250 in q.js: Number replaced with value.length
Mutant 251 in q.js: attempt1[2] replaced with value.length
Mutant 252 in q.js: attempt1[2] replaced with this.value
Mutant 253 in q.js: attempt1[2] replaced with attempt2[2]
Mutant 254 in q.js: attempt2 replaced with attempt2 || []
Mutant 255 in q.js: attempt2 replaced with attempt2 || null
Mutant 256 in q.js: attempt2 replaced with attempt2 || {
  foo: 'bar'
}
Mutant 257 in q.js: Number replaced with NaN
Mutant 258 in q.js: Number replaced with 'foo'
Mutant 259 in q.js: Number replaced with Infinity
Mutant 260 in q.js: attempt2[2] replaced with Infinity
Mutant 261 in q.js: attempt2[2] replaced with 1 / 0
Mutant 262 in q.js: attempt2[2] replaced with new Date()
Mutant 263 in q.js: stackLine replaced with "[object GlobalError]"
Mutant 264 in q.js: stackLine replaced with /.*@(.+):(\d+)$/g
Mutant 265 in q.js: attempt3 replaced with /.*@(.+):(\d+)$/.exec(stackLine)[0]
Mutant 266 in q.js: attempt3 replaced with /.*@(.+):(\d+)$/.exec(null)
Mutant 267 in q.js: attempt3 replaced with /.*@(.+):(\d+)$/.exec("some string")
Mutant 268 in q.js: Number replaced with "0"
Mutant 269 in q.js: Number replaced with true
Mutant 270 in q.js: Number replaced with null
Mutant 271 in q.js: attempt3[2] replaced with 1
Mutant 272 in q.js: attempt3[2] replaced with 'PLACEHOLDER'
Mutant 273 in q.js: getFileNameAndLineNumber replaced with null
Mutant 274 in q.js: getFileNameAndLineNumber replaced with []
Mutant 275 in q.js: stackLine replaced with stackLine + 'modified'
Mutant 276 in q.js: stackLine replaced with window.stackLine
Mutant 277 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 278 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === 'undefined'
Mutant 279 in q.js: !fileNameAndLineNumber replaced with !Array.isArray(fileNameAndLineNumber)
Mutant 280 in q.js: !hasStacks replaced with false
Mutant 281 in q.js: !hasStacks replaced with typeof hasStacks === "undefined"
Mutant 282 in q.js: !hasStacks replaced with hasStacks === null
Mutant 283 in q.js: e.stack.split replaced with "<error object>'.stack"
Mutant 284 in q.js: e.stack.split replaced with [1, 2, 3]
Mutant 285 in q.js: "\n" replaced with "\n<script>console.log('This is an injected script');</script>\n"
Mutant 286 in q.js: "\n" replaced with "\n<!-- This is an injected comment -->\n"
Mutant 287 in q.js: "\n" replaced with "\n" + Math.random() + "\n"
Mutant 288 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 289 in q.js: lines[0].indexOf replaced with "PLACEHOLDER".indexOf
Mutant 290 in q.js: lines[0].indexOf replaced with getFileNameAndLineNumber.indexOf
Mutant 291 in q.js: "@" replaced with "<@"
Mutant 292 in q.js: "@" replaced with "@module.js"
Mutant 293 in q.js: "@" replaced with "@ line 1"
Mutant 294 in q.js: getFileNameAndLineNumber replaced with ['<filename>', 0]
Mutant 295 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 296 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === 'undefined'
Mutant 297 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with true
Mutant 298 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with 1 < 2
Mutant 299 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof window !== "undefined" && typeof window.console === "object" && typeof window.console.warn === "function"
Mutant 300 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, null)
Mutant 301 in q.js: callback.apply replaced with callback.call
Mutant 302 in q.js: callback replaced with callback.bind(null, 1)
Mutant 303 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 304 in q.js: arguments replaced with Object.keys(arguments)
Mutant 305 in q.js: arguments replaced with arguments.callee
Mutant 306 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 307 in q.js: value instanceof Promise replaced with Object.prototype.toString.call(value) === '[object Promise]'
Mutant 308 in q.js: value instanceof Promise replaced with value && typeof value.then === 'function'
Mutant 309 in q.js: isPromiseAlike(value) replaced with value instanceof Object
Mutant 310 in q.js: isPromiseAlike(value) replaced with typeof value === 'object' && 'then' in value
Mutant 311 in q.js: isPromiseAlike(value) replaced with value && typeof value === 'object' && typeof value.then === 'function'
Mutant 312 in q.js: isPromiseAlike replaced with value && value.then
Mutant 313 in q.js: isPromiseAlike replaced with value !== null && value.then
Mutant 314 in q.js: isPromiseAlike replaced with value && typeof value.then === 'function'
Mutant 315 in q.js: value replaced with 1 * value
Mutant 316 in q.js: value replaced with value || true
Mutant 317 in q.js: coerce replaced with null
Mutant 318 in q.js: coerce replaced with {}
Mutant 319 in q.js: value replaced with value || true
Mutant 320 in q.js: value replaced with value ? value : 42
Mutant 321 in q.js: value replaced with value && 'some string'
Mutant 322 in q.js: fulfill replaced with value
Mutant 323 in q.js: value replaced with null
Mutant 324 in q.js: object_create replaced with {}
Mutant 325 in q.js: object_create replaced with null
Mutant 326 in q.js: defer.prototype replaced with {}
Mutant 327 in q.js: defer.prototype replaced with null
Mutant 328 in q.js: defer.prototype replaced with Object.create(Array.prototype)
Mutant 329 in q.js: object_create replaced with {}
Mutant 330 in q.js: Promise.prototype replaced with null
Mutant 331 in q.js: Promise.prototype replaced with {}
Mutant 332 in q.js: Promise.prototype replaced with function () {}
Mutant 333 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 334 in q.js: arguments replaced with Array.prototype.slice.call(arguments)
Mutant 335 in q.js: arguments replaced with [...arguments]
Mutant 336 in q.js: messages replaced with messages.length > 0
Mutant 337 in q.js: messages replaced with true
Mutant 338 in q.js: messages replaced with messages === undefined
Mutant 339 in q.js: messages.push replaced with messages.unshift
Mutant 340 in q.js: messages.push replaced with messages.length = 0
Mutant 341 in q.js: messages.push replaced with window.messages.push
Mutant 342 in q.js: args replaced with []
Mutant 343 in q.js: args replaced with null
Mutant 344 in q.js: op === "when" && operands[1] replaced with op === "when" && "someString"
Mutant 345 in q.js: op === "when" && operands[1] replaced with op === "then"
Mutant 346 in q.js: op === "when" && operands[1] replaced with operands[0]
Mutant 347 in q.js: operands[1] replaced with 1
Mutant 348 in q.js: operands[1] replaced with null
Mutant 349 in q.js: operands[1] replaced with messages[0][1]
Mutant 350 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply([resolvedPromise].concat(args))
Mutant 351 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 352 in q.js: resolvedPromise replaced with Promise.resolve()
Mutant 353 in q.js: resolvedPromise replaced with null
Mutant 354 in q.js: resolvedPromise replaced with deferred
Mutant 355 in q.js: messages replaced with true
Mutant 356 in q.js: messages replaced with messages.length
Mutant 357 in q.js: resolvedPromise replaced with null
Mutant 358 in q.js: resolvedPromise replaced with new Promise(function () {})
Mutant 359 in q.js: resolvedPromise replaced with Promise.resolve()
Mutant 360 in q.js: isPromise(nearerValue) replaced with nearerValue instanceof Promise
Mutant 361 in q.js: isPromise replaced with false
Mutant 362 in q.js: isPromise replaced with null
Mutant 363 in q.js: isPromise replaced with messages.length
Mutant 364 in q.js: nearerValue replaced with true
Mutant 365 in q.js: nearerValue replaced with null
Mutant 366 in q.js: !resolvedPromise replaced with this.inspect() === undefined
Mutant 367 in q.js: !resolvedPromise replaced with Q.longStackSupport && hasStacks
Mutant 368 in q.js: !resolvedPromise replaced with typeof resolvedPromise === 'undefined'
Mutant 369 in q.js: resolvedPromise.inspect replaced with resolvedPromise.then
Mutant 370 in q.js: Q.longStackSupport && hasStacks replaced with false
Mutant 371 in q.js: Q.longStackSupport && hasStacks replaced with hasStacks
Mutant 372 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 373 in q.js: e.stack.substring replaced with e.message
Mutant 374 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.split("\n").length
Mutant 375 in q.js: e.stack.indexOf("\n") + 1 replaced with 1
Mutant 376 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.search("\n")
Mutant 377 in q.js: e.stack.indexOf replaced with e.stack.lastIndexOf
Mutant 378 in q.js: "\n" replaced with e.stack.substring(e.stack.indexOf("\n") + 2)
Mutant 379 in q.js: Q.longStackSupport && hasStacks replaced with false
Mutant 380 in q.js: Q.longStackSupport && hasStacks replaced with true
Mutant 381 in q.js: Q.longStackSupport && hasStacks replaced with 1
Mutant 382 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise)
Mutant 383 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 384 in q.js: message replaced with []
Mutant 385 in q.js: message replaced with messages
Mutant 386 in q.js: message replaced with [1, 2, 3]
Mutant 387 in q.js: resolvedPromise replaced with true
Mutant 388 in q.js: resolvedPromise replaced with null
Mutant 389 in q.js: resolvedPromise replaced with deferred
Mutant 390 in q.js: become replaced with deferred.resolve
Mutant 391 in q.js: become replaced with deferred.reject
Mutant 392 in q.js: Q(value) replaced with new Q(value)
Mutant 393 in q.js: Q(value) replaced with Promise.resolve(value)
Mutant 394 in q.js: Q(value) replaced with Q.resolve(value).then(function (val) {
  return val;
})
Mutant 395 in q.js: value replaced with null
Mutant 396 in q.js: value replaced with this
Mutant 397 in q.js: value replaced with new Promise(resolve => resolve(value))
Mutant 398 in q.js: resolvedPromise replaced with false
Mutant 399 in q.js: resolvedPromise replaced with null
Mutant 400 in q.js: fulfill(value) replaced with new Promise(resolve => resolve(value))
Mutant 401 in q.js: fulfill(value) replaced with fulfill(new Value(value))
Mutant 402 in q.js: value replaced with null
Mutant 403 in q.js: value replaced with this
Mutant 404 in q.js: value replaced with new Error('Replacement error')
Mutant 405 in q.js: resolvedPromise replaced with true
Mutant 406 in q.js: resolvedPromise replaced with null
Mutant 407 in q.js: resolvedPromise replaced with new Promise(function () {})
Mutant 408 in q.js: reject(reason) replaced with Promise.reject(reason)
Mutant 409 in q.js: reject(reason) replaced with deferred.reject(reason)
Mutant 410 in q.js: reject replaced with true
Mutant 411 in q.js: reject replaced with deferred.resolve
Mutant 412 in q.js: reason replaced with {
  message: 'An error occurred'
}
Mutant 413 in q.js: reason replaced with new Error('An error occurred')
Mutant 414 in q.js: reason replaced with function () {
  throw new Error('An error occurred');
}
Mutant 415 in q.js: resolvedPromise replaced with false
Mutant 416 in q.js: resolvedPromise replaced with null
Mutant 417 in q.js: resolvedPromise replaced with true
Mutant 418 in q.js: progressListener replaced with null
Mutant 419 in q.js: progress replaced with null
Mutant 420 in q.js: progress replaced with {}
Mutant 421 in q.js: progress replaced with progress + 1
Mutant 422 in q.js: error replaced with true
Mutant 423 in q.js: error replaced with Q.resolve()
Mutant 424 in q.js: error replaced with null
Mutant 425 in q.js: error replaced with true
Mutant 426 in q.js: error replaced with {}
Mutant 427 in q.js: arguments.length > 2 replaced with false
Mutant 428 in q.js: arguments.length > 2 replaced with true
Mutant 429 in q.js: arguments.length > 2 replaced with arguments[0] === undefined
Mutant 430 in q.js: array_slice(arguments, 1) replaced with null
Mutant 431 in q.js: array_slice(arguments, 1) replaced with []
Mutant 432 in q.js: array_slice(arguments, 1) replaced with function () {}
Mutant 433 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 0))
Mutant 434 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 1))
Mutant 435 in q.js: array_slice replaced with arguments.callee.caller
Mutant 436 in q.js: arguments replaced with [1, 2, 3]
Mutant 437 in q.js: arguments replaced with {
  value: 'foo'
}
Mutant 438 in q.js: 1 replaced with arguments.length > 1
Mutant 439 in q.js: 1 replaced with this.resolve(value, undefined)
Mutant 440 in q.js: value replaced with null
Mutant 441 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 442 in q.js: typeof resolver !== "function" replaced with Object.prototype.toString.call(resolver) !== "[object Function]"
Mutant 443 in q.js: typeof resolver !== "function" replaced with typeof resolver !== typeof Function
Mutant 444 in q.js: defer replaced with null
Mutant 445 in q.js: defer replaced with Math.random
Mutant 446 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver([deferred.resolve, deferred.reject, deferred.notify][Math.floor(Math.random() * 3)])
Mutant 447 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve.bind(null, 'hacked value'))
Mutant 448 in q.js: resolver replaced with []
Mutant 449 in q.js: resolver replaced with null
Mutant 450 in q.js: resolver replaced with 0
Mutant 451 in q.js: deferred.resolve replaced with deferred.resolve(null)
Mutant 452 in q.js: deferred.resolve replaced with deferred.reject
Mutant 453 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 454 in q.js: deferred.reject replaced with deferred.resolve
Mutant 455 in q.js: deferred.reject replaced with deferred.notify
Mutant 456 in q.js: deferred.reject replaced with function () {
  throw new Error('Rejecting the promise');
}
Mutant 457 in q.js: deferred.notify replaced with deferred.resolve
Mutant 458 in q.js: deferred.reject replaced with deferred.resolve
Mutant 459 in q.js: deferred.reject replaced with deferred.notify
Mutant 460 in q.js: reason replaced with new Error('Buggy Reason')
Mutant 461 in q.js: reason replaced with null
Mutant 462 in q.js: reason replaced with Q.reject('Buggy Reason')
Mutant 463 in q.js: Q replaced with Promise
Mutant 464 in q.js: Q replaced with null
Mutant 465 in q.js: x replaced with 0
Mutant 466 in q.js: x replaced with null
Mutant 467 in q.js: y replaced with null
Mutant 468 in q.js: [this, that] replaced with [[this, that]]
Mutant 469 in q.js: [this, that] replaced with [null, that]
Mutant 470 in q.js: [this, that] replaced with [that, this]
Mutant 471 in q.js: x === y replaced with x == y
Mutant 472 in q.js: x === y replaced with x.valueOf() === y.valueOf()
Mutant 473 in q.js: x === y replaced with Object.is(x, y)
Mutant 474 in q.js: i < len replaced with i > -1
Mutant 475 in q.js: i++ replaced with i += 2
Mutant 476 in q.js: i++ replaced with Q.resolve(null)
Mutant 477 in q.js: answerPs[i] replaced with null
Mutant 478 in q.js: resolve replaced with deferred.resolve
Mutant 479 in q.js: resolve replaced with deferred.reject
Mutant 480 in q.js: reject replaced with function () {}
Mutant 481 in q.js: this.then replaced with this['then']
Mutant 482 in q.js: Q.race replaced with function () {
  return Q();
}
Mutant 483 in q.js: fallback === void 0 replaced with fallback !== void 0
Mutant 484 in q.js: inspect === void 0 replaced with inspect !== undefined
Mutant 485 in q.js: inspect === void 0 replaced with inspect !== null
Mutant 486 in q.js: inspect === void 0 replaced with inspect !== window.inspect
Mutant 487 in q.js: object_create replaced with null
Mutant 488 in q.js: Promise.prototype replaced with Object.create(null)
Mutant 489 in q.js: Promise.prototype replaced with function () {}
Mutant 490 in q.js: Promise.prototype replaced with Promise.resolve()
Mutant 491 in q.js: descriptor[op] replaced with false
Mutant 492 in q.js: descriptor[op] replaced with descriptor['op']
Mutant 493 in q.js: descriptor[op] replaced with this[op]
Mutant 494 in q.js: descriptor[op].apply replaced with descriptor[op].call
Mutant 495 in q.js: descriptor[op].apply replaced with descriptor.op
Mutant 496 in q.js: args replaced with []
Mutant 497 in q.js: args replaced with null
Mutant 498 in q.js: args replaced with {
  foo: 'bar'
}
Mutant 499 in q.js: fallback.call(promise, op, args) replaced with fallback.call([])
Mutant 500 in q.js: fallback.call(promise, op, args) replaced with fallback.call(null)
Mutant 501 in q.js: fallback.call(promise, op, args) replaced with fallback.call(function () {})
Mutant 502 in q.js: fallback.call replaced with fallback.apply
Mutant 503 in q.js: op replaced with "notAnOp"
Mutant 504 in q.js: op replaced with 123
Mutant 505 in q.js: op replaced with promise
Mutant 506 in q.js: args replaced with []
Mutant 507 in q.js: args replaced with null
Mutant 508 in q.js: args replaced with {
  op: 'some_random_op'
}
Mutant 509 in q.js: exception replaced with new Error("Buggy error message")
Mutant 510 in q.js: exception replaced with null
Mutant 511 in q.js: result replaced with null
Mutant 512 in q.js: result replaced with 42
Mutant 513 in q.js: result replaced with deferred.resolve
Mutant 514 in q.js: inspect replaced with null
Mutant 515 in q.js: inspect replaced with {}
Mutant 516 in q.js: inspected.state === "rejected" replaced with inspected.state !== "fulfilled"
Mutant 517 in q.js: inspected.state === "rejected" replaced with inspected.reason
Mutant 518 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 519 in q.js: inspect replaced with null
Mutant 520 in q.js: inspect replaced with {
  state: 'fulfilled',
  value: 42
}
Mutant 521 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "fulfilled"
Mutant 522 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled" || inspected.state === "rejected"
Mutant 523 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "settled"
Mutant 524 in q.js: defer replaced with {}
Mutant 525 in q.js: fulfilled replaced with 1 + fulfilled
Mutant 526 in q.js: fulfilled replaced with fulfilled || 0
Mutant 527 in q.js: value replaced with null
Mutant 528 in q.js: value replaced with new Promise(function () {})
Mutant 529 in q.js: value replaced with Promise.resolve()
Mutant 530 in q.js: reject replaced with null
Mutant 531 in q.js: exception replaced with new Error("Buggy replacement")
Mutant 532 in q.js: exception replaced with {}
Mutant 533 in q.js: exception replaced with null
Mutant 534 in q.js: typeof rejected === "function" replaced with true
Mutant 535 in q.js: typeof rejected === "function" replaced with 1 < 2
Mutant 536 in q.js: typeof rejected === "function" replaced with typeof rejected !== "function"
Mutant 537 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(new Error())
Mutant 538 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(self)
Mutant 539 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(null)
Mutant 540 in q.js: exception replaced with new Error("New error message")
Mutant 541 in q.js: exception replaced with {}
Mutant 542 in q.js: exception replaced with Q.reject("Rejection message")
Mutant 543 in q.js: exception replaced with new Error("Buggy error")
Mutant 544 in q.js: exception replaced with {}
Mutant 545 in q.js: exception replaced with null
Mutant 546 in q.js: reject replaced with Promise.reject
Mutant 547 in q.js: newException replaced with value
Mutant 548 in q.js: newException replaced with null
Mutant 549 in q.js: newException replaced with Promise.resolve()
Mutant 550 in q.js: exception replaced with new Error("New error message")
Mutant 551 in q.js: exception replaced with null
Mutant 552 in q.js: value replaced with null
Mutant 553 in q.js: value replaced with value + 1
Mutant 554 in q.js: value replaced with this.value
Mutant 555 in q.js: done replaced with true
Mutant 556 in q.js: done replaced with 1 === 1
Mutant 557 in q.js: deferred.resolve replaced with deferred.reject
Mutant 558 in q.js: deferred.resolve replaced with deferred.promise.resolve
Mutant 559 in q.js: _fulfilled(value) replaced with null
Mutant 560 in q.js: _fulfilled(value) replaced with 42
Mutant 561 in q.js: _fulfilled(value) replaced with deferred.reject('An error occurred')
Mutant 562 in q.js: _fulfilled replaced with _rejected
Mutant 563 in q.js: value replaced with {}
Mutant 564 in q.js: value replaced with Promise.resolve()
Mutant 565 in q.js: done replaced with false
Mutant 566 in q.js: done replaced with null
Mutant 567 in q.js: done replaced with exception
Mutant 568 in q.js: deferred.resolve replaced with deferred.reject
Mutant 569 in q.js: deferred.resolve replaced with deferred.notify
Mutant 570 in q.js: _rejected(exception) replaced with Promise.reject(exception)
Mutant 571 in q.js: _rejected(exception) replaced with _rejected(null)
Mutant 572 in q.js: _rejected(exception) replaced with deferred.resolve(exception)
Mutant 573 in q.js: exception replaced with new Error('Intentionally introduced error')
Mutant 574 in q.js: exception replaced with exception.message
Mutant 575 in q.js: _progressed replaced with Promise.resolve
Mutant 576 in q.js: _progressed replaced with null
Mutant 577 in q.js: _progressed replaced with 42
Mutant 578 in q.js: value replaced with 2 * value
Mutant 579 in q.js: value replaced with null
Mutant 580 in q.js: value replaced with promise.value
Mutant 581 in q.js: Q.onerror replaced with () => {}
Mutant 582 in q.js: Q.onerror replaced with null
Mutant 583 in q.js: Q.onerror replaced with console.log
Mutant 584 in q.js: Q.onerror replaced with console.error
Mutant 585 in q.js: e replaced with new Error()
Mutant 586 in q.js: e replaced with null
Mutant 587 in q.js: e replaced with Promise.reject('An error occurred')
Mutant 588 in q.js: !threw replaced with true
Mutant 589 in q.js: !threw replaced with false
Mutant 590 in q.js: !threw replaced with threw === false
Mutant 591 in q.js: deferred.notify replaced with deferred.resolve
Mutant 592 in q.js: newValue replaced with null
Mutant 593 in q.js: newValue replaced with newValue + 1
Mutant 594 in q.js: newValue replaced with Q(newValue)
Mutant 595 in q.js: Q(promise).tap replaced with promise.constructor.prototype.tap
Mutant 596 in q.js: promise replaced with Promise.resolve()
Mutant 597 in q.js: promise replaced with new Promise(function () {})
Mutant 598 in q.js: promise replaced with Q.reject(new Error('Buggy!'))
Mutant 599 in q.js: callback replaced with () => callback
Mutant 600 in q.js: callback replaced with callback.bind(this)
Mutant 601 in q.js: callback.fcall replaced with callback
not replacing callback.fcall with callback
not replacing callback.fcall with callback
Mutant 602 in q.js: value replaced with null
Mutant 603 in q.js: value replaced with value + 1
Mutant 604 in q.js: value replaced with Promise.resolve()
Mutant 605 in q.js: value replaced with Q(value)
Mutant 606 in q.js: value replaced with value + 1
Mutant 607 in q.js: Q(value).then replaced with value.then
Mutant 608 in q.js: value replaced with null
Mutant 609 in q.js: fulfilled replaced with () => fulfilled
Mutant 610 in q.js: fulfilled replaced with Math.max
Mutant 611 in q.js: fulfilled replaced with deferred.resolve
Mutant 612 in q.js: rejected replaced with function () {
  return rejected.apply(this, arguments);
}
Mutant 613 in q.js: rejected replaced with function () {
  return rejected(exception, self);
}
Mutant 614 in q.js: progressed replaced with function () {
  return progressed.apply(this, arguments);
}
Mutant 615 in q.js: progressed replaced with progressed.bind(null)
Mutant 616 in q.js: progressed replaced with Math.max
Mutant 617 in q.js: this.then replaced with this.catch
Mutant 618 in q.js: function () {
  return value;
} replaced with function () {
  throw value;
}
Mutant 619 in q.js: function () {
  return value;
} replaced with function () {
  return;
}
Mutant 620 in q.js: function () {
  return value;
} replaced with function (value) {
  return value + 1;
}
Mutant 621 in q.js: Q replaced with Promise.resolve
Mutant 622 in q.js: Q replaced with Q.reject
Mutant 623 in q.js: promise replaced with Promise.resolve()
Mutant 624 in q.js: promise replaced with new Promise(() => {})
Mutant 625 in q.js: promise replaced with Q.reject(new Error('Bug'))
Mutant 626 in q.js: value replaced with null
Mutant 627 in q.js: function () {
  throw reason;
} replaced with () => {/* empty arrow function */}
Mutant 628 in q.js: function () {
  throw reason;
} replaced with () => {
  return reason;
}
Mutant 629 in q.js: function () {
  throw reason;
} replaced with () => {
  throw new Error(reason);
}
Mutant 630 in q.js: Q(promise).thenReject replaced with Promise.reject
Mutant 631 in q.js: Q replaced with Q.reject
Mutant 632 in q.js: promise replaced with Promise.resolve()
Mutant 633 in q.js: promise replaced with Q.reject(reason)
Mutant 634 in q.js: reason replaced with new Error('Buggy reason')
Mutant 635 in q.js: reason replaced with null
Mutant 636 in q.js: reason replaced with reason.message
Mutant 637 in q.js: isPromise(value) replaced with value instanceof Promise
Mutant 638 in q.js: isPromise(value) replaced with Object.prototype.toString.call(value) === '[object Promise]'
Mutant 639 in q.js: isPromise(value) replaced with value.constructor.name === 'Promise'
Mutant 640 in q.js: isPromise replaced with value && value.then
Mutant 641 in q.js: isPromise replaced with typeof value === 'object' && value.then && value.then.constructor === Function
Mutant 642 in q.js: value replaced with null
Mutant 643 in q.js: value replaced with value + 1
Mutant 644 in q.js: value replaced with value.then(function () {
  return value;
})
Mutant 645 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 646 in q.js: inspected.state === "fulfilled" replaced with inspected.value === null
Mutant 647 in q.js: inspected.state === "fulfilled" replaced with inspected.hasOwnProperty("value")
Mutant 648 in q.js: isObject replaced with typeof object === 'object'
Mutant 649 in q.js: object replaced with null
Mutant 650 in q.js: object replaced with this
Mutant 651 in q.js: object replaced with Promise.resolve(object)
Mutant 652 in q.js: isPromise replaced with typeof value === 'object' && value !== null && typeof value.then === 'function'
Mutant 653 in q.js: isPromise replaced with value instanceof Promise || value.constructor.name === 'Promise'
Mutant 654 in q.js: object replaced with false
Mutant 655 in q.js: object replaced with null
Mutant 656 in q.js: object replaced with new Proxy({}, {
  get: function () {
    throw new Error('Unauthorized access');
  }
})
Mutant 657 in q.js: object.inspect replaced with global.inspect
not replacing object.inspect with global.inspect
Mutant 658 in q.js: this.inspect replaced with {}
not replacing this.inspect with {}
Mutant 659 in q.js: object replaced with true
Mutant 660 in q.js: object replaced with null
Mutant 661 in q.js: object replaced with this
Mutant 662 in q.js: object.inspect replaced with null.inspect
not replacing object.inspect with null.inspect
Mutant 663 in q.js: isPromise replaced with false
Mutant 664 in q.js: isPromise replaced with 0
Mutant 665 in q.js: isPromise replaced with null
Mutant 666 in q.js: object replaced with false
Mutant 667 in q.js: object replaced with null
Mutant 668 in q.js: object replaced with this
Mutant 669 in q.js: object.inspect replaced with false
Mutant 670 in q.js: object.inspect replaced with null
Mutant 671 in q.js: object.inspect replaced with {}['state']
not replacing object.inspect with false
not replacing object.inspect with null
not replacing object.inspect with {}['state']
Mutant 672 in q.js: this.inspect replaced with this.inspect.state
not replacing this.inspect with this.inspect.state
Mutant 673 in q.js: !trackUnhandledRejections replaced with false
Mutant 674 in q.js: !trackUnhandledRejections replaced with 0
Mutant 675 in q.js: !trackUnhandledRejections replaced with null
Mutant 676 in q.js: !trackUnhandledRejections replaced with false
Mutant 677 in q.js: !trackUnhandledRejections replaced with null
Mutant 678 in q.js: !trackUnhandledRejections replaced with 0
Mutant 679 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 680 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.some(p => p === promise)
Mutant 681 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, Q.reject(reason))
Mutant 682 in q.js: unhandledRejections replaced with []
Mutant 683 in q.js: unhandledRejections replaced with null
Mutant 684 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 685 in q.js: promise replaced with null
Mutant 686 in q.js: promise replaced with Promise.resolve()
Mutant 687 in q.js: promise replaced with {
  then: function () {}
}
Mutant 688 in q.js: "unhandledRejection" replaced with "unhandledrejection"
Mutant 689 in q.js: "unhandledRejection" replaced with "unhandledException"
Mutant 690 in q.js: reason replaced with null
Mutant 691 in q.js: reason replaced with {}
Mutant 692 in q.js: promise replaced with null
Mutant 693 in q.js: promise replaced with {}
Mutant 694 in q.js: promise replaced with this
Mutant 695 in q.js: reportedUnhandledRejections.push replaced with []
Mutant 696 in q.js: reportedUnhandledRejections.push replaced with null
Mutant 697 in q.js: reportedUnhandledRejections.push replaced with 123
Mutant 698 in q.js: promise replaced with null
Mutant 699 in q.js: promise replaced with {}
Mutant 700 in q.js: promise replaced with unhandledReasons
Mutant 701 in q.js: unhandledRejections.push replaced with unhandledRejections.splice
Mutant 702 in q.js: promise replaced with null
Mutant 703 in q.js: promise replaced with {}
Mutant 704 in q.js: promise replaced with Promise.resolve()
Mutant 705 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack
Mutant 706 in q.js: reason && typeof reason.stack !== "undefined" replaced with typeof reason !== "undefined"
Mutant 707 in q.js: reason && typeof reason.stack !== "undefined" replaced with true
Mutant 708 in q.js: reason.stack replaced with "reason stack"
Mutant 709 in q.js: reason.stack replaced with null
Mutant 710 in q.js: reason.stack replaced with reason['stack']
Mutant 711 in q.js: unhandledReasons.push replaced with unhandledReasons.unshift
Mutant 712 in q.js: unhandledReasons.push replaced with console.error
Mutant 713 in q.js: "(no stack) " + reason replaced with "<an error occurred>"
Mutant 714 in q.js: "(no stack) " + reason replaced with reason
Mutant 715 in q.js: "(no stack) " + reason replaced with new Error(reason)
Mutant 716 in q.js: !trackUnhandledRejections replaced with false
Mutant 717 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 718 in q.js: !trackUnhandledRejections replaced with 0
Mutant 719 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length, promise)
Mutant 720 in q.js: array_indexOf replaced with unhandledRejections.indexOf
Mutant 721 in q.js: array_indexOf replaced with [].indexOf
Mutant 722 in q.js: array_indexOf replaced with unhandledRejections.includes
Mutant 723 in q.js: unhandledRejections replaced with []
Mutant 724 in q.js: unhandledRejections replaced with {
  push: function () {}
}
Mutant 725 in q.js: unhandledRejections replaced with global.unhandledRejections
Mutant 726 in q.js: promise replaced with null
Mutant 727 in q.js: promise replaced with 123
Mutant 728 in q.js: promise replaced with {}
Mutant 729 in q.js: at !== -1 replaced with at > -1
Mutant 730 in q.js: at !== -1 replaced with unhandledRejections.indexOf(promise) !== -1
Mutant 731 in q.js: at !== -1 replaced with typeof at !== "number"
Mutant 732 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf([])
Mutant 733 in q.js: array_indexOf replaced with unhandledRejections.indexOf
Mutant 734 in q.js: array_indexOf replaced with ['unhandledRejections'].indexOf
Mutant 735 in q.js: reportedUnhandledRejections replaced with []
Mutant 736 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 737 in q.js: reportedUnhandledRejections replaced with unhandledRejections.slice()
Mutant 738 in q.js: promise replaced with null
Mutant 739 in q.js: promise replaced with {}
Mutant 740 in q.js: promise replaced with []
Mutant 741 in q.js: atReport !== -1 replaced with true
Mutant 742 in q.js: atReport !== -1 replaced with atReport === unhandledRejections.length
Mutant 743 in q.js: atReport !== -1 replaced with atReport > -1
Mutant 744 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", "some random string", promise)
Mutant 745 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[Math.floor(Math.random() * unhandledReasons.length)], promise)
Mutant 746 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], Q.reject("some random reason"))
Mutant 747 in q.js: "rejectionHandled" replaced with false
Mutant 748 in q.js: "rejectionHandled" replaced with null
Mutant 749 in q.js: "rejectionHandled" replaced with unhandledReasons[at]
Mutant 750 in q.js: unhandledReasons[at] replaced with null
Mutant 751 in q.js: unhandledReasons[at] replaced with {}
Mutant 752 in q.js: promise replaced with null
Mutant 753 in q.js: promise replaced with {}
Mutant 754 in q.js: promise replaced with unhandledReasons[at]
Mutant 755 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport.length)
Mutant 756 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(0)
Mutant 757 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(unhandledReasons.length)
Mutant 758 in q.js: reportedUnhandledRejections.splice replaced with reportedUnhandledRejections.length--
Mutant 759 in q.js: atReport replaced with atReport.length
Mutant 760 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(unhandledRejections.length)
Mutant 761 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(unhandledReasons.length)
Mutant 762 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(0)
Mutant 763 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(unhandledReasons.slice(at))
Mutant 764 in q.js: at replaced with unhandledReasons.length
Mutant 765 in q.js: at replaced with null
Mutant 766 in q.js: unhandledReasons.slice replaced with unhandledReasons.concat
Mutant 767 in q.js: resetUnhandledRejections replaced with Q.resetUnhandledRejections = resetUnhandledRejections
Mutant 768 in q.js: rejected replaced with false
Mutant 769 in q.js: rejected replaced with 0
Mutant 770 in q.js: rejected replaced with untrackRejection.bind(this)
Mutant 771 in q.js: this replaced with null
Mutant 772 in q.js: this replaced with {}
Mutant 773 in q.js: this replaced with Q
Mutant 774 in q.js: rejected replaced with false
Mutant 775 in q.js: rejected replaced with this
Mutant 776 in q.js: reason replaced with null
Mutant 777 in q.js: reason replaced with true
Mutant 778 in q.js: trackRejection(rejection, reason) replaced with trackRejection(null)
Mutant 779 in q.js: trackRejection(rejection, reason) replaced with trackRejection([])
Mutant 780 in q.js: reason replaced with null
Mutant 781 in q.js: reason replaced with {}
Mutant 782 in q.js: reason replaced with new Error('Unhandled rejection')
Mutant 783 in q.js: name === null || name === void 0 replaced with name === null || name === undefined
Mutant 784 in q.js: name === null || name === void 0 replaced with name !== null && name !== 'undefined'
Mutant 785 in q.js: name === null || name === void 0 replaced with typeof name !== 'undefined'
Mutant 786 in q.js: value.apply(void 0, args) replaced with value.apply(thisp, [args])
Mutant 787 in q.js: value.apply(void 0, args) replaced with value.apply(thisp, arguments)
Mutant 788 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 789 in q.js: void 0 replaced with null
Mutant 790 in q.js: void 0 replaced with 5
Mutant 791 in q.js: void 0 replaced with {}
Mutant 792 in q.js: args replaced with []
Mutant 793 in q.js: args replaced with null
Mutant 794 in q.js: args replaced with {
  length: 0
}
Mutant 795 in q.js: value[name].apply(value, args) replaced with value[name].apply(null)
Mutant 796 in q.js: value[name].apply(value, args) replaced with value[name].apply(this)
Mutant 797 in q.js: value[name].apply(value, args) replaced with value[name].apply(value.constructor.prototype)
Mutant 798 in q.js: value[name].apply replaced with value.apply
Mutant 799 in q.js: value[name].apply replaced with Function.prototype.apply
Mutant 800 in q.js: value[name].apply replaced with Math.max
Mutant 801 in q.js: value replaced with thisp
Mutant 802 in q.js: value replaced with null
Mutant 803 in q.js: value replaced with 0
Mutant 804 in q.js: args replaced with []
Mutant 805 in q.js: args replaced with null
Mutant 806 in q.js: args replaced with function () {
  return;
}
Mutant 807 in q.js: value.apply(thisp, args) replaced with value.apply(null)
Mutant 808 in q.js: value.apply(thisp, args) replaced with value.apply(123)
Mutant 809 in q.js: value.apply replaced with value.call
Mutant 810 in q.js: value.apply replaced with value.bind
Mutant 811 in q.js: thisp replaced with null
Mutant 812 in q.js: thisp replaced with []
Mutant 813 in q.js: thisp replaced with {}
Mutant 814 in q.js: args replaced with []
Mutant 815 in q.js: args replaced with null
Mutant 816 in q.js: args replaced with arguments
Mutant 817 in q.js: object_keys replaced with Object.keys
Mutant 818 in q.js: object_keys replaced with Reflect.ownKeys
Mutant 819 in q.js: object_keys replaced with Object.getOwnPropertyNames
Mutant 820 in q.js: value replaced with null
Mutant 821 in q.js: value replaced with {}
Mutant 822 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve(42))
Mutant 823 in q.js: promise.then replaced with promise['then']
Mutant 824 in q.js: deferred.reject replaced with deferred.resolve
Mutant 825 in q.js: deferred.notify replaced with deferred.resolve
Mutant 826 in q.js: deferred.reject replaced with deferred.resolve
Mutant 827 in q.js: deferred.reject replaced with deferred.notify
Mutant 828 in q.js: exception replaced with new Error('Buggy code fragment')
Mutant 829 in q.js: exception replaced with null
Mutant 830 in q.js: exception replaced with this
Mutant 831 in q.js: dispatch(object, op, args) replaced with dispatch(null, op, args)
Mutant 832 in q.js: dispatch replaced with null
Mutant 833 in q.js: object replaced with null
Mutant 834 in q.js: object replaced with []
Mutant 835 in q.js: object replaced with function () {}
Mutant 836 in q.js: args replaced with null
Mutant 837 in q.js: Q(object).inspect replaced with null
Mutant 838 in q.js: object replaced with {}
Mutant 839 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread([1, 2, 3])
Mutant 840 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled)
Mutant 841 in q.js: Q(value).spread replaced with value.spread
Mutant 842 in q.js: value replaced with null
Mutant 843 in q.js: value replaced with 42
Mutant 844 in q.js: value replaced with this
Mutant 845 in q.js: fulfilled replaced with function () {
  throw new Error('Buggy replacement');
}
Mutant 846 in q.js: fulfilled replaced with null
Mutant 847 in q.js: fulfilled replaced with this
Mutant 848 in q.js: rejected replaced with function () {}
Mutant 849 in q.js: rejected replaced with null
Mutant 850 in q.js: rejected replaced with 'rejected'
Mutant 851 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null, array)
Mutant 852 in q.js: fulfilled.apply replaced with fulfilled.call
Mutant 853 in q.js: void 0 replaced with null
Mutant 854 in q.js: void 0 replaced with true
Mutant 855 in q.js: void 0 replaced with []
Mutant 856 in q.js: array replaced with []
Mutant 857 in q.js: array replaced with Object.create(null)
Mutant 858 in q.js: array replaced with function () {
  return this;
}()
Mutant 859 in q.js: typeof StopIteration === "undefined" replaced with generator.constructor.name === "GeneratorFunction"
Mutant 860 in q.js: typeof StopIteration === "undefined" replaced with generator.constructor.prototype.constructor.name === "GeneratorFunction"
Mutant 861 in q.js: typeof StopIteration === "undefined" replaced with generator.constructor.prototype.constructor.name === "GeneratorFunction" && typeof generator.return === "function"
Mutant 862 in q.js: generator[verb] replaced with generator.verb
Mutant 863 in q.js: generator[verb] replaced with generator['next']
Mutant 864 in q.js: arg replaced with null
Mutant 865 in q.js: arg replaced with 1
Mutant 866 in q.js: reject replaced with Promise.reject
Mutant 867 in q.js: reject replaced with deferred.reject
Mutant 868 in q.js: exception replaced with null
Mutant 869 in q.js: exception replaced with true
Mutant 870 in q.js: result.done replaced with Object.prototype.toString.call(result.value) === "[object Promise]"
Mutant 871 in q.js: result.done replaced with result.value && result.value.constructor.name === "Promise"
Mutant 872 in q.js: result.done replaced with typeof result.value.then === "function"
Mutant 873 in q.js: result.value replaced with null
Mutant 874 in q.js: result.value replaced with 1
Mutant 875 in q.js: result.value replaced with result.value + 1
Mutant 876 in q.js: when(result.value, callback, errback) replaced with when(null, callback, errback)
Mutant 877 in q.js: result.value replaced with null
Mutant 878 in q.js: result.value replaced with result['value']
Mutant 879 in q.js: result.value replaced with function () {
  return result.value;
}()
Mutant 880 in q.js: callback replaced with function () {}
Mutant 881 in q.js: callback replaced with callback.bind(this)
Mutant 882 in q.js: callback replaced with callback(result)
Mutant 883 in q.js: errback replaced with function () {}
Mutant 884 in q.js: errback replaced with 5
Mutant 885 in q.js: errback replaced with deferred.resolve
Mutant 886 in q.js: generator[verb] replaced with generator.verb
Mutant 887 in q.js: generator[verb] replaced with generator["" + verb]
Mutant 888 in q.js: arg replaced with null
Mutant 889 in q.js: arg replaced with 123
Mutant 890 in q.js: arg replaced with function () {}
Mutant 891 in q.js: isStopIteration(exception) replaced with exception.message === "Generator completed"
Mutant 892 in q.js: isStopIteration(exception) replaced with true
Mutant 893 in q.js: isStopIteration(exception) replaced with exception instanceof Error
Mutant 894 in q.js: isStopIteration replaced with {}
Mutant 895 in q.js: exception replaced with new Error('generator error')
Mutant 896 in q.js: exception.value replaced with null
Mutant 897 in q.js: exception.value replaced with false
Mutant 898 in q.js: exception.value replaced with new Error('Dummy error')
Mutant 899 in q.js: reject replaced with deferred.reject
Mutant 900 in q.js: exception replaced with new Error('Generator Error')
Mutant 901 in q.js: exception replaced with {}
Mutant 902 in q.js: exception replaced with null
Mutant 903 in q.js: when(result, callback, errback) replaced with when([])
Mutant 904 in q.js: when(result, callback, errback) replaced with when(null)
Mutant 905 in q.js: when(result, callback, errback) replaced with when(result.value, callback, errback)
Mutant 906 in q.js: when replaced with Promise.resolve
Mutant 907 in q.js: result replaced with null
Mutant 908 in q.js: result replaced with []
Mutant 909 in q.js: result replaced with {}
Mutant 910 in q.js: callback replaced with callback.bind(this)
Mutant 911 in q.js: callback replaced with function () {
  callback();
}
Mutant 912 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null, arguments)
Mutant 913 in q.js: this replaced with null
Mutant 914 in q.js: this replaced with window
Mutant 915 in q.js: this replaced with () => this
Mutant 916 in q.js: arguments replaced with Array.from(arguments)
Mutant 917 in q.js: arguments replaced with [...arguments]
Mutant 918 in q.js: arguments replaced with Object.assign([], arguments)
Mutant 919 in q.js: continuer replaced with this
Mutant 920 in q.js: continuer replaced with window
Mutant 921 in q.js: continuer replaced with function () {
  return continuer;
}
Mutant 922 in q.js: "next" replaced with "next".toUpperCase()
Mutant 923 in q.js: "next" replaced with Symbol("next")
Mutant 924 in q.js: "next" replaced with "thrown"
Mutant 925 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "throw", undefined)
Mutant 926 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "someInvalidOperation")
Mutant 927 in q.js: continuer replaced with function () {}
Mutant 928 in q.js: continuer replaced with callback
Mutant 929 in q.js: "throw" replaced with "return"
Mutant 930 in q.js: "throw" replaced with "continue"
Mutant 931 in q.js: "throw" replaced with "break"
Mutant 932 in q.js: Q.async replaced with Promise.resolve
Mutant 933 in q.js: Q.async replaced with Math.random
Mutant 934 in q.js: Q.async replaced with []
not replacing Q.async with Promise.resolve
not replacing Q.async with Math.random
not replacing Q.async with []
Mutant 935 in q.js: makeGenerator replaced with function* () {}
Mutant 936 in q.js: makeGenerator replaced with 42
Mutant 937 in q.js: all replaced with null
Mutant 938 in q.js: arguments replaced with []
Mutant 939 in q.js: arguments replaced with null
Mutant 940 in q.js: arguments replaced with 1
Mutant 941 in q.js: callback.apply(self, args) replaced with callback.apply(this)
Mutant 942 in q.js: callback.apply(self, args) replaced with callback.apply(globalThis)
Mutant 943 in q.js: callback.apply(self, args) replaced with callback.apply(null)
Mutant 944 in q.js: callback.apply replaced with callback.call
Mutant 945 in q.js: callback.apply replaced with Reflect.apply
Mutant 946 in q.js: callback.apply replaced with Function.prototype.apply
Mutant 947 in q.js: self replaced with this
Mutant 948 in q.js: self replaced with global
Mutant 949 in q.js: self replaced with undefined
Mutant 950 in q.js: args replaced with []
Mutant 951 in q.js: args replaced with this
Mutant 952 in q.js: args replaced with 42
Mutant 953 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(null)
Mutant 954 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch([])
Mutant 955 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch({
  op: 'get',
  args: ['property']
})
Mutant 956 in q.js: Q(object).dispatch replaced with Object.dispatch
Mutant 957 in q.js: object replaced with this
Mutant 958 in q.js: object replaced with Promise.resolve()
Mutant 959 in q.js: op replaced with 1
Mutant 960 in q.js: op replaced with null
Mutant 961 in q.js: args replaced with null
Mutant 962 in q.js: args replaced with []
Mutant 963 in q.js: args replaced with {
  foo: 'bar'
}
Mutant 964 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject)
Mutant 965 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.notify)
Mutant 966 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 967 in q.js: self.promiseDispatch replaced with deferred.promise
Mutant 968 in q.js: self.promiseDispatch replaced with Math.random
Mutant 969 in q.js: op replaced with null
Mutant 970 in q.js: args replaced with null
Mutant 971 in q.js: args replaced with []
Mutant 972 in q.js: args replaced with {
  length: 0
}
Mutant 973 in q.js: Q(object).dispatch replaced with Q.when
Mutant 974 in q.js: Q replaced with null
Mutant 975 in q.js: Q replaced with {}
Mutant 976 in q.js: object replaced with null
Mutant 977 in q.js: object replaced with []
Mutant 978 in q.js: "get" replaced with "GET"
Mutant 979 in q.js: "get" replaced with Symbol("get")
Mutant 980 in q.js: "get" replaced with () => "get"
Mutant 981 in q.js: [key] replaced with null
Mutant 982 in q.js: [key] replaced with {}
Mutant 983 in q.js: [key] replaced with function () {/* empty function */}
Mutant 984 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("GET", [key])
Mutant 985 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("get", [])
Mutant 986 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("get", {
  key: 'value'
})
Mutant 987 in q.js: "get" replaced with "GET"
Mutant 988 in q.js: "get" replaced with null
Mutant 989 in q.js: "get" replaced with () => "get"
Mutant 990 in q.js: [key] replaced with []
Mutant 991 in q.js: [key] replaced with {}
Mutant 992 in q.js: [key] replaced with this
Mutant 993 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch([])
Mutant 994 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("nonexistentMethod")
Mutant 995 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch([key, Q(value)])
Mutant 996 in q.js: Q(object).dispatch replaced with Object.prototype.dispatch
Mutant 997 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 998 in q.js: Q(object).dispatch replaced with Math.dispatch
Mutant 999 in q.js: [key, value] replaced with {}
Mutant 1000 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch([])
Mutant 1001 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch(this)
Mutant 1002 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch(Math.random())
Mutant 1003 in q.js: this.dispatch replaced with null.dispatch
Mutant 1004 in q.js: this.dispatch replaced with this.promiseDispatch
Mutant 1005 in q.js: "set" replaced with "__set__"
Mutant 1006 in q.js: "set" replaced with null
Mutant 1007 in q.js: "set" replaced with this.del
Mutant 1008 in q.js: [key, value] replaced with []
Mutant 1009 in q.js: [key, value] replaced with arguments[1]
Mutant 1010 in q.js: [key, value] replaced with this
Mutant 1011 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("splice", [key, 1])
Mutant 1012 in q.js: Q replaced with null
Mutant 1013 in q.js: Q replaced with 5
Mutant 1014 in q.js: object replaced with null
Mutant 1015 in q.js: object replaced with []
Mutant 1016 in q.js: object replaced with function () {}
Mutant 1017 in q.js: [key] replaced with []
Mutant 1018 in q.js: [key] replaced with {}
Mutant 1019 in q.js: [key] replaced with null
Mutant 1020 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch(["remove", key])
Mutant 1021 in q.js: this.dispatch replaced with deferred.resolveThrown
Mutant 1022 in q.js: this.dispatch replaced with deferred.promise
Mutant 1023 in q.js: "delete" replaced with null
Mutant 1024 in q.js: "delete" replaced with "splice"
Mutant 1025 in q.js: "delete" replaced with function () {
  return 42;
}
Mutant 1026 in q.js: [key] replaced with this
Mutant 1027 in q.js: [key] replaced with null
Mutant 1028 in q.js: [key] replaced with Promise.resolve()
Mutant 1029 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 1030 in q.js: Q(object).dispatch replaced with Q.dispatch
Mutant 1031 in q.js: Q replaced with null
Mutant 1032 in q.js: Q replaced with Q.when
Mutant 1033 in q.js: object replaced with null
Mutant 1034 in q.js: object replaced with 0
Mutant 1035 in q.js: object replaced with Promise.resolve()
Mutant 1036 in q.js: "post" replaced with "POST"
Mutant 1037 in q.js: [name, args] replaced with []
Mutant 1038 in q.js: [name, args] replaced with null
Mutant 1039 in q.js: [name, args] replaced with this
Mutant 1040 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, {
  args: args
}])
Mutant 1041 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("Post", [name, args])
Mutant 1042 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, Q(args)])
Mutant 1043 in q.js: "post" replaced with "POST"
Mutant 1044 in q.js: "post" replaced with null
Mutant 1045 in q.js: [name, args] replaced with []
Mutant 1046 in q.js: [name, args] replaced with null
Mutant 1047 in q.js: [name, args] replaced with this
Mutant 1048 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, arguments])
Mutant 1049 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, 123])
Mutant 1050 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("anotherMethod", [name, array_slice(arguments, 1)])
Mutant 1051 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 1052 in q.js: object replaced with null
Mutant 1053 in q.js: object replaced with true
Mutant 1054 in q.js: "post" replaced with "POST"
Mutant 1055 in q.js: [name, array_slice(arguments, 2)] replaced with [name, Array.prototype.slice.call(arguments, 1)]
Mutant 1056 in q.js: [name, array_slice(arguments, 2)] replaced with [name, arguments.slice(1)]
Mutant 1057 in q.js: [name, array_slice(arguments, 2)] replaced with [name, [].slice.call(arguments, 1)]
Mutant 1058 in q.js: array_slice(arguments, 2) replaced with array_slice([name])
Mutant 1059 in q.js: array_slice(arguments, 2) replaced with array_slice([])
Mutant 1060 in q.js: array_slice replaced with arguments.callee.caller.arguments
Mutant 1061 in q.js: array_slice replaced with null
Mutant 1062 in q.js: array_slice replaced with this
Mutant 1063 in q.js: arguments replaced with null
Mutant 1064 in q.js: arguments replaced with function () {
  return 42;
}
Mutant 1065 in q.js: 2 replaced with null
Mutant 1066 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("POST", [name, array_slice(arguments, 1)])
Mutant 1067 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, 123])
Mutant 1068 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [null, array_slice(arguments, 1)])
Mutant 1069 in q.js: "post" replaced with "POST"
Mutant 1070 in q.js: "post" replaced with function () {}
Mutant 1071 in q.js: [name, array_slice(arguments, 1)] replaced with null
Mutant 1072 in q.js: [name, array_slice(arguments, 1)] replaced with []
Mutant 1073 in q.js: array_slice(arguments, 1) replaced with array_slice([])
Mutant 1074 in q.js: array_slice(arguments, 1) replaced with array_slice(this)
Mutant 1075 in q.js: array_slice(arguments, 1) replaced with array_slice(function () {})
Mutant 1076 in q.js: 1 replaced with arguments.length
Mutant 1077 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [args])
Mutant 1078 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [1, args])
Mutant 1079 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("spread", [args])
Mutant 1080 in q.js: object replaced with null
Mutant 1081 in q.js: object replaced with 42
Mutant 1082 in q.js: object replaced with this
Mutant 1083 in q.js: [void 0, args] replaced with args
Mutant 1084 in q.js: [void 0, args] replaced with [args]
Mutant 1085 in q.js: [void 0, args] replaced with null, args
Mutant 1086 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("spy", [void 0, args])
Mutant 1087 in q.js: "apply" replaced with "applay"
Mutant 1088 in q.js: "apply" replaced with 123
Mutant 1089 in q.js: [void 0, args] replaced with args
Mutant 1090 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("call", [array_slice(arguments, 1)])
Mutant 1091 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [null, array_slice(arguments, 1)])
Mutant 1092 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [, array_slice(arguments, 1)])
Mutant 1093 in q.js: Q(object).dispatch replaced with Object.prototype.dispatch
Mutant 1094 in q.js: Q(object).dispatch replaced with Q.apply
Mutant 1095 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 1096 in q.js: Q replaced with {}
Mutant 1097 in q.js: object replaced with 5
Mutant 1098 in q.js: object replaced with () => {}
Mutant 1099 in q.js: "apply" replaced with "apPLY"
Mutant 1100 in q.js: "apply" replaced with "applyFn"
Mutant 1101 in q.js: "apply" replaced with this.apply
Mutant 1102 in q.js: [void 0, array_slice(arguments, 1)] replaced with [null, array_slice(arguments, 1)]
Mutant 1103 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments))
Mutant 1104 in q.js: array_slice replaced with [].slice
Mutant 1105 in q.js: arguments replaced with Array.prototype.slice.call(arguments, 1)
Mutant 1106 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1107 in q.js: arguments replaced with arguments.slice(1)
Mutant 1108 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("spy", [void 0, array_slice(arguments)])
Mutant 1109 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch(["apply", array_slice(arguments)])
Mutant 1110 in q.js: "apply" replaced with "apPLY"
Mutant 1111 in q.js: "apply" replaced with "applyShim"
Mutant 1112 in q.js: "apply" replaced with "splice"
Mutant 1113 in q.js: [void 0, array_slice(arguments)] replaced with []
Mutant 1114 in q.js: [void 0, array_slice(arguments)] replaced with arguments
Mutant 1115 in q.js: [void 0, array_slice(arguments)] replaced with this
Mutant 1116 in q.js: array_slice replaced with Array.prototype.slice
Mutant 1117 in q.js: array_slice replaced with null
Mutant 1118 in q.js: arguments replaced with 123
Mutant 1119 in q.js: object replaced with null
Mutant 1120 in q.js: object replaced with 5
Mutant 1121 in q.js: object replaced with window
Mutant 1122 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 2))
Mutant 1123 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 2))
Mutant 1124 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(2))
Mutant 1125 in q.js: array_slice replaced with [].slice
Mutant 1126 in q.js: arguments replaced with Array.prototype.slice.call(arguments, 1)
Mutant 1127 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1128 in q.js: arguments replaced with arguments[0]
Mutant 1129 in q.js: 1 replaced with args.length > 0 ? args : [null]
Mutant 1130 in q.js: args.concat replaced with [].concat
Mutant 1131 in q.js: args.concat replaced with args.slice
Mutant 1132 in q.js: array_slice(arguments) replaced with []
Mutant 1133 in q.js: array_slice(arguments) replaced with null
Mutant 1134 in q.js: array_slice(arguments) replaced with [1, 2, 3]
Mutant 1135 in q.js: array_slice replaced with arguments.callee
Mutant 1136 in q.js: array_slice replaced with arguments
Mutant 1137 in q.js: array_slice replaced with [].slice
Mutant 1138 in q.js: arguments replaced with []
Mutant 1139 in q.js: arguments replaced with null
Mutant 1140 in q.js: arguments replaced with {
  length: 0
}
Mutant 1141 in q.js: args.concat replaced with []
Mutant 1142 in q.js: array_slice(arguments) replaced with []
Mutant 1143 in q.js: array_slice(arguments) replaced with this.arguments
Mutant 1144 in q.js: array_slice(arguments) replaced with arguments[0]
Mutant 1145 in q.js: array_slice replaced with arguments.callee
Mutant 1146 in q.js: array_slice replaced with null
Mutant 1147 in q.js: array_slice replaced with eval
Mutant 1148 in q.js: arguments replaced with null
Mutant 1149 in q.js: arguments replaced with 123
Mutant 1150 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", ["dummy"])
Mutant 1151 in q.js: Q replaced with null
Mutant 1152 in q.js: object replaced with {}
Mutant 1153 in q.js: object replaced with null
Mutant 1154 in q.js: "keys" replaced with "nonexistentKey"
Mutant 1155 in q.js: [] replaced with Object.keys(this)
Mutant 1156 in q.js: [] replaced with null
Mutant 1157 in q.js: [] replaced with function () {
  return 42;
}
Mutant 1158 in q.js: this.dispatch("keys", []) replaced with this.dispatch("nonexistentMethod", [])
Mutant 1159 in q.js: "keys" replaced with "nonexistentKey"
Mutant 1160 in q.js: [] replaced with Object.keys(this)
Mutant 1161 in q.js: [] replaced with null
Mutant 1162 in q.js: [] replaced with function () {
  return 42;
}
Mutant 1163 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with snapshot.state === "pending"
Mutant 1164 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with isPromise(promise) && (snapshot = promise.inspect()).state === "rejected"
Mutant 1165 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with snapshot.value !== undefined
Mutant 1166 in q.js: isPromise replaced with typeof promise === 'object'
Mutant 1167 in q.js: isPromise replaced with promise instanceof Object
Mutant 1168 in q.js: isPromise replaced with true
Mutant 1169 in q.js: promise replaced with Promise.resolve()
Mutant 1170 in q.js: promise replaced with null
Mutant 1171 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1172 in q.js: promises replaced with null
Mutant 1173 in q.js: {
  index: index,
  value: progress
} replaced with null
Mutant 1174 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1175 in q.js: pendingCount === 0 replaced with false
Mutant 1176 in q.js: pendingCount === 0 replaced with promises.length === 0
Mutant 1177 in q.js: deferred.resolve replaced with this.resolve
Mutant 1178 in q.js: deferred.resolve replaced with Promise.resolve
Mutant 1179 in q.js: promises replaced with []
Mutant 1180 in q.js: promises replaced with null
Mutant 1181 in q.js: promises replaced with this
Mutant 1182 in q.js: this replaced with null
Mutant 1183 in q.js: this replaced with Promise.resolve()
Mutant 1184 in q.js: this replaced with function () {
  return "I am a buggy function";
}
Mutant 1185 in q.js: promises.length === 0 replaced with Object.keys(promises).length === 0
Mutant 1186 in q.js: Q.resolve replaced with Promise.resolve
Mutant 1187 in q.js: Q.resolve replaced with Q.reject
Mutant 1188 in q.js: when replaced with Promise.resolve
Mutant 1189 in q.js: when replaced with this.constructor
Mutant 1190 in q.js: promise replaced with null
Mutant 1191 in q.js: promise replaced with Promise.resolve()
Mutant 1192 in q.js: promise replaced with this
Mutant 1193 in q.js: onFulfilled replaced with onRejected
Mutant 1194 in q.js: onFulfilled replaced with function () {}
Mutant 1195 in q.js: onFulfilled replaced with this
Mutant 1196 in q.js: onRejected replaced with function () {}
Mutant 1197 in q.js: onRejected replaced with onFulfilled
Mutant 1198 in q.js: onRejected replaced with this
Mutant 1199 in q.js: result replaced with null
Mutant 1200 in q.js: result replaced with promises[index]
Mutant 1201 in q.js: result replaced with this
Mutant 1202 in q.js: pendingCount === 0 replaced with promises.length === 0
Mutant 1203 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1204 in q.js: pendingCount === 0 replaced with true
Mutant 1205 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1206 in q.js: rejection replaced with new Error("This is a buggy error")
Mutant 1207 in q.js: rejection replaced with null
Mutant 1208 in q.js: this replaced with []
Mutant 1209 in q.js: this replaced with Q.resolve()
Mutant 1210 in q.js: this replaced with Promise.resolve()
Mutant 1211 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "all")
Mutant 1212 in q.js: allResolved replaced with function allResolvedBad() {
  return Q.resolve([]);
}
Mutant 1213 in q.js: allResolved replaced with function allResolvedBad(promises) {
  return Q.all(promises);
}
Mutant 1214 in q.js: allResolved replaced with function allResolvedBad(promises) {
  return Q.all(promises).then(function (results) {
    return array_map(results, function (promise) {
      return Q.reject(promise);
    });
  });
}
Mutant 1215 in q.js: "allResolved" replaced with "allSettled"
Mutant 1216 in q.js: "allResolved" replaced with function () {
  return [];
}
Mutant 1217 in q.js: "allResolved" replaced with "spread"
Mutant 1218 in q.js: "allSettled" replaced with "all"
Mutant 1219 in q.js: array_map(promises, Q) replaced with array_map(promises, Array)
Mutant 1220 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.when)
Mutant 1221 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.all)
Mutant 1222 in q.js: promises replaced with promises.slice()
Mutant 1223 in q.js: promises replaced with Object.values(promises)
Mutant 1224 in q.js: promises replaced with promises.filter(x => x)
Mutant 1225 in q.js: Q replaced with Promise.resolve()
Mutant 1226 in q.js: Q replaced with Q.reject(new Error('Placeholder error'))
Mutant 1227 in q.js: when(promise, noop, noop) replaced with when(new Promise(resolve => resolve(null)))
Mutant 1228 in q.js: promise replaced with Promise.resolve()
Mutant 1229 in q.js: promise replaced with null
Mutant 1230 in q.js: promise replaced with function () {}
Mutant 1231 in q.js: noop replaced with Promise.resolve()
Mutant 1232 in q.js: noop replaced with function () {
  throw new Error('Buggy error');
}
Mutant 1233 in q.js: noop replaced with function (value) {
  deferred.resolve(value + 1);
}
Mutant 1234 in q.js: noop replaced with function () {
  throw new Error('Buggy replacement');
}
Mutant 1235 in q.js: noop replaced with null
Mutant 1236 in q.js: noop replaced with function () {
  return undefined;
}
Mutant 1237 in q.js: allResolved replaced with Q.all
Mutant 1238 in q.js: allResolved replaced with Promise.resolve
Mutant 1239 in q.js: this replaced with null
Mutant 1240 in q.js: this replaced with []
Mutant 1241 in q.js: this replaced with {
  foo: 'bar'
}
Mutant 1242 in q.js: promises replaced with []
Mutant 1243 in q.js: promises replaced with promises.slice()
Mutant 1244 in q.js: promises replaced with Object.values(promises)
Mutant 1245 in q.js: promise replaced with Promise.resolve()
Mutant 1246 in q.js: promise replaced with promises[index]
Mutant 1247 in q.js: promise replaced with Q.resolve(promise)
Mutant 1248 in q.js: promise.inspect replaced with promise.always
Mutant 1249 in q.js: promise.then(regardless, regardless) replaced with promise.then(null, null)
Mutant 1250 in q.js: promise.then replaced with Promise.resolve
Mutant 1251 in q.js: promise.then replaced with Math.random
Mutant 1252 in q.js: regardless replaced with function regardless() {
  return {};
}
Mutant 1253 in q.js: regardless replaced with function regardless() {
  return Q.resolve();
}
Mutant 1254 in q.js: regardless replaced with function regardless() {
  return Q.reject(new Error('Artificial rejection'));
}
Mutant 1255 in q.js: regardless replaced with function (err) {
  deferred.reject(err);
}
Mutant 1256 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(Promise.resolve())
Mutant 1257 in q.js: object replaced with null
Mutant 1258 in q.js: object replaced with true
Mutant 1259 in q.js: object replaced with Q.reject("An error occurred")
Mutant 1260 in q.js: void 0 replaced with function () {
  throw new Error('Rejected!');
}
Mutant 1261 in q.js: void 0 replaced with null
Mutant 1262 in q.js: rejected replaced with function () {
  throw rejected;
}
Mutant 1263 in q.js: rejected replaced with Q.reject(rejected)
Mutant 1264 in q.js: this.then(void 0, rejected) replaced with this.then(function () {})
Mutant 1265 in q.js: this.then(void 0, rejected) replaced with this.then(this)
Mutant 1266 in q.js: this.then(void 0, rejected) replaced with this.then(promised.then)
Mutant 1267 in q.js: this.then replaced with this.catch
Mutant 1268 in q.js: void 0 replaced with null
Mutant 1269 in q.js: void 0 replaced with 42
Mutant 1270 in q.js: void 0 replaced with function () {
  return 42;
}
Mutant 1271 in q.js: rejected replaced with function () {
  return Promise.resolve();
}
Mutant 1272 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(null, null, progressed)
Mutant 1273 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(true, true, progressed)
Mutant 1274 in q.js: void 0 replaced with null
Mutant 1275 in q.js: void 0 replaced with function () {}
Mutant 1276 in q.js: void 0 replaced with null
Mutant 1277 in q.js: void 0 replaced with 1
Mutant 1278 in q.js: progressed replaced with function () {}
Mutant 1279 in q.js: progressed replaced with null
Mutant 1280 in q.js: progressed replaced with window
Mutant 1281 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1282 in q.js: void 0 replaced with null
Mutant 1283 in q.js: void 0 replaced with function () {}
Mutant 1284 in q.js: void 0 replaced with null
Mutant 1285 in q.js: void 0 replaced with function () {}
Mutant 1286 in q.js: void 0 replaced with deferred.resolve
Mutant 1287 in q.js: progressed replaced with function () {}
Mutant 1288 in q.js: progressed replaced with null
Mutant 1289 in q.js: progressed replaced with 'not a function'
Mutant 1290 in q.js: object replaced with null
Mutant 1291 in q.js: object replaced with this
Mutant 1292 in q.js: object replaced with Promise.resolve()
Mutant 1293 in q.js: callback replaced with function () {
  return callback;
}
Mutant 1294 in q.js: callback replaced with callback()
Mutant 1295 in q.js: callback replaced with callback.bind(this)
Mutant 1296 in q.js: !callback || typeof callback.apply !== "function" replaced with callback === null || typeof callback.apply !== "function"
Mutant 1297 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback || typeof callback.call !== "function"
Mutant 1298 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback || typeof callback.apply !== "function" && callback !== undefined
Mutant 1299 in q.js: Q replaced with Promise
Mutant 1300 in q.js: Q replaced with null
Mutant 1301 in q.js: callback replaced with function () {
  return callback;
}
Mutant 1302 in q.js: callback replaced with callback.bind(this)
Mutant 1303 in q.js: callback replaced with callback()
Mutant 1304 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(null)
Mutant 1305 in q.js: Q replaced with Q.resolve
Mutant 1306 in q.js: object replaced with Promise.resolve()
Mutant 1307 in q.js: object replaced with function () {
  return "I'm not a promise";
}
Mutant 1308 in q.js: fulfilled replaced with Promise.resolve(fulfilled)
Mutant 1309 in q.js: fulfilled replaced with null
Mutant 1310 in q.js: rejected replaced with Q.reject(new Error('Rejected explicitly'))
Mutant 1311 in q.js: rejected replaced with null
Mutant 1312 in q.js: rejected replaced with function () {
  throw new Error('Rejected explicitly');
}
Mutant 1313 in q.js: progress replaced with function () {}
Mutant 1314 in q.js: progress replaced with null
Mutant 1315 in q.js: progress replaced with function (value) {
  return value;
}
Mutant 1316 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(null, promise)
Mutant 1317 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, null)
Mutant 1318 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong({}, promise)
Mutant 1319 in q.js: error replaced with new Error()
Mutant 1320 in q.js: error replaced with null
Mutant 1321 in q.js: promise replaced with null
Mutant 1322 in q.js: promise replaced with this
Mutant 1323 in q.js: Q.onerror replaced with function () {
  throw new Error('Handled error');
}
Mutant 1324 in q.js: Q.onerror replaced with null
Mutant 1325 in q.js: Q.onerror replaced with function () {}
Mutant 1326 in q.js: Q.onerror replaced with null
Mutant 1327 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(null, rejected, progress)
Mutant 1328 in q.js: this.then replaced with this.fcall
Mutant 1329 in q.js: fulfilled replaced with null
Mutant 1330 in q.js: rejected replaced with true
Mutant 1331 in q.js: rejected replaced with {}
Mutant 1332 in q.js: progress replaced with undefined
Mutant 1333 in q.js: onUnhandledError replaced with function () {
  throw new Error("Unhandled error");
}
Mutant 1334 in q.js: onUnhandledError replaced with Q.onerror
Mutant 1335 in q.js: onUnhandledError replaced with function () {
  throw new Error("Unhandled error");
}.bind(this)
Mutant 1336 in q.js: void 0 replaced with null
Mutant 1337 in q.js: void 0 replaced with function () {}
Mutant 1338 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(0, error)
Mutant 1339 in q.js: object replaced with null
Mutant 1340 in q.js: ms replaced with 0
Mutant 1341 in q.js: ms replaced with this.ms
Mutant 1342 in q.js: ms replaced with Math.random() * 1000
Mutant 1343 in q.js: error replaced with new Error("Timed out after " + (ms - 10) + " ms")
Mutant 1344 in q.js: error replaced with {}
Mutant 1345 in q.js: error replaced with function () {
  throw new Error("An error occurred");
}
Mutant 1346 in q.js: !error || "string" === typeof error replaced with true
Mutant 1347 in q.js: !error || "string" === typeof error replaced with 1 === 1
Mutant 1348 in q.js: !error || "string" === typeof error replaced with null
Mutant 1349 in q.js: error replaced with new Error("Timed out after " + (ms - 10) + " ms")
Mutant 1350 in q.js: error replaced with {}
Mutant 1351 in q.js: error replaced with function () {
  throw new Error("An error occurred");
}
Mutant 1352 in q.js: clearTimeout replaced with clearInterval
Mutant 1353 in q.js: clearTimeout replaced with deferred.reject
Mutant 1354 in q.js: value replaced with null
Mutant 1355 in q.js: value replaced with new Error('Replaced value')
Mutant 1356 in q.js: value replaced with this
Mutant 1357 in q.js: timeoutId replaced with deferred
Mutant 1358 in q.js: timeoutId replaced with null
Mutant 1359 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1360 in q.js: deferred.reject replaced with deferred.promise
Mutant 1361 in q.js: exception replaced with new Error("An error occurred")
Mutant 1362 in q.js: exception replaced with null
Mutant 1363 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1364 in q.js: timeout === void 0 replaced with typeof timeout === "undefined"
Mutant 1365 in q.js: timeout === void 0 replaced with timeout === Q.timeout.NONE
Mutant 1366 in q.js: object replaced with null
Mutant 1367 in q.js: object replaced with true
Mutant 1368 in q.js: object replaced with []
Mutant 1369 in q.js: timeout replaced with 2 * timeout
Mutant 1370 in q.js: timeout replaced with 0
Mutant 1371 in q.js: timeout replaced with null
Mutant 1372 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1373 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1374 in q.js: value replaced with null
Mutant 1375 in q.js: Q(callback).nfapply replaced with callback.nfapply
Mutant 1376 in q.js: Q(callback).nfapply replaced with Q.nfapply
Mutant 1377 in q.js: callback replaced with function () {
  return callback.bind(this);
}
Mutant 1378 in q.js: callback replaced with function () {
  return callback.call(null);
}
Mutant 1379 in q.js: args replaced with []
Mutant 1380 in q.js: args replaced with null
Mutant 1381 in q.js: args replaced with this
Mutant 1382 in q.js: defer replaced with {}
Mutant 1383 in q.js: array_slice replaced with [].slice
Mutant 1384 in q.js: args replaced with [1, 2, 3]
Mutant 1385 in q.js: args replaced with deferred.resolve
Mutant 1386 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1387 in q.js: deferred.makeNodeResolver() replaced with function () {
  throw new Error("Buggy node resolver");
}
Mutant 1388 in q.js: deferred.makeNodeResolver() replaced with deferred.reject
Mutant 1389 in q.js: nodeArgs replaced with []
Mutant 1390 in q.js: nodeArgs replaced with null
Mutant 1391 in q.js: nodeArgs replaced with this
Mutant 1392 in q.js: deferred.reject replaced with () => deferred.reject()
Mutant 1393 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1394 in q.js: deferred.reject replaced with deferred.reject(null)
Mutant 1395 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1396 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 1))
Mutant 1397 in q.js: array_slice replaced with [].slice
Mutant 1398 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1399 in q.js: 1 replaced with Infinity
Mutant 1400 in q.js: 1 replaced with null
Mutant 1401 in q.js: 1 replaced with 0
Mutant 1402 in q.js: Q(callback).nfapply replaced with callback.apply
Mutant 1403 in q.js: Q(callback).nfapply replaced with Q.when.apply
Mutant 1404 in q.js: callback replaced with function () {
  return callback;
}
Mutant 1405 in q.js: callback replaced with callback.bind(null)
Mutant 1406 in q.js: callback replaced with callback || function () {}
Mutant 1407 in q.js: args replaced with []
Mutant 1408 in q.js: args replaced with null
Mutant 1409 in q.js: args replaced with 123
Mutant 1410 in q.js: array_slice replaced with [].slice
Mutant 1411 in q.js: array_slice replaced with Array.prototype.slice
Mutant 1412 in q.js: array_slice replaced with Math.floor
Mutant 1413 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1414 in q.js: arguments replaced with null
Mutant 1415 in q.js: arguments replaced with this.arguments
Mutant 1416 in q.js: deferred.makeNodeResolver() replaced with function () {
  throw new Error("Buggy timeout");
}
Mutant 1417 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve()
Mutant 1418 in q.js: deferred.makeNodeResolver() replaced with deferred.reject("Buggy rejection")
Mutant 1419 in q.js: deferred.makeNodeResolver replaced with null
Mutant 1420 in q.js: nodeArgs replaced with this
Mutant 1421 in q.js: nodeArgs replaced with []
Mutant 1422 in q.js: nodeArgs replaced with nodeArgs.concat(deferred.makeNodeResolver())
Mutant 1423 in q.js: callback === undefined replaced with callback !== null
Mutant 1424 in q.js: callback === undefined replaced with typeof callback === 'function'
Mutant 1425 in q.js: callback === undefined replaced with callback && typeof callback === 'function'
Mutant 1426 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 0))
Mutant 1427 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1428 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 1429 in q.js: array_slice replaced with [].slice
Mutant 1430 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1431 in q.js: arguments replaced with Object.keys(arguments)
Mutant 1432 in q.js: arguments replaced with Function.prototype.apply.call(null, this, arguments)
Mutant 1433 in q.js: 1 replaced with Q.denodeify.length - 1
Mutant 1434 in q.js: 1 replaced with null
Mutant 1435 in q.js: 1 replaced with function () {
  return callback.apply(thisp, arguments);
}
Mutant 1436 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1437 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1438 in q.js: baseArgs.concat replaced with baseArgs.unshift
Mutant 1439 in q.js: array_slice(arguments) replaced with [].slice.call(arguments)
Mutant 1440 in q.js: array_slice(arguments) replaced with Array.prototype.slice.call(arguments)
Mutant 1441 in q.js: array_slice(arguments) replaced with Function.prototype.apply.call([], arguments)
Mutant 1442 in q.js: array_slice replaced with [1, 2, 3]
Mutant 1443 in q.js: array_slice replaced with null
Mutant 1444 in q.js: arguments replaced with Object.keys(arguments).slice()
Mutant 1445 in q.js: nodeArgs.push replaced with deferred.promise
Mutant 1446 in q.js: nodeArgs.push replaced with deferred.reject
Mutant 1447 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1448 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1449 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1450 in q.js: Q(callback).fapply replaced with callback.apply
Mutant 1451 in q.js: Q(callback).fapply replaced with this.fapply
Mutant 1452 in q.js: Q(callback).fapply replaced with Q.fapply
not replacing Q(callback).fapply with callback.apply
not replacing Q(callback).fapply with callback.apply
not replacing Q(callback).fapply with this.fapply
not replacing Q(callback).fapply with this.fapply
not replacing Q(callback).fapply with Q.fapply
not replacing Q(callback).fapply with Q.fapply
Mutant 1453 in q.js: Q replaced with this.thenThrow
Mutant 1454 in q.js: Q replaced with this.all
Mutant 1455 in q.js: callback replaced with function () {}
Mutant 1456 in q.js: callback replaced with callback || function () {}
Mutant 1457 in q.js: deferred.reject replaced with function () {}
Mutant 1458 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1459 in q.js: deferred.reject replaced with deferred.notify
Mutant 1460 in q.js: array_slice replaced with [].slice
Mutant 1461 in q.js: array_slice replaced with Math.max
Mutant 1462 in q.js: array_slice replaced with Promise.all
Mutant 1463 in q.js: arguments replaced with [].slice.call(arguments, 0)
Mutant 1464 in q.js: arguments replaced with Object.keys(arguments).map(function (key) {
  return arguments[key];
})
Mutant 1465 in q.js: arguments replaced with Function.prototype.apply.call(Array.prototype.slice, arguments, 0)
Mutant 1466 in q.js: args.unshift replaced with this.constructor
Mutant 1467 in q.js: args.unshift replaced with null
Mutant 1468 in q.js: this replaced with null
Mutant 1469 in q.js: this replaced with window
Mutant 1470 in q.js: this replaced with function () {
  return this;
}()
Mutant 1471 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null, args)
Mutant 1472 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1473 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1474 in q.js: void 0 replaced with null
Mutant 1475 in q.js: void 0 replaced with true
Mutant 1476 in q.js: void 0 replaced with defer()
Mutant 1477 in q.js: args replaced with args.slice()
Mutant 1478 in q.js: args replaced with [...args]
Mutant 1479 in q.js: array_slice(arguments, 2) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1480 in q.js: array_slice(arguments, 2) replaced with array_slice(Function.prototype.apply.call(arguments, [1]))
Mutant 1481 in q.js: array_slice(arguments, 2) replaced with array_slice([].concat.apply([], arguments))
Mutant 1482 in q.js: array_slice replaced with [].slice
Mutant 1483 in q.js: array_slice replaced with Math.floor
Mutant 1484 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1485 in q.js: arguments replaced with Object.keys(arguments)[0]
Mutant 1486 in q.js: arguments replaced with Reflect.apply(Function.prototype.call, arguments, [].slice.call(arguments, 1))
Mutant 1487 in q.js: 2 replaced with 3
Mutant 1488 in q.js: 2 replaced with null
Mutant 1489 in q.js: 2 replaced with function () {}
Mutant 1490 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1491 in q.js: baseArgs.concat replaced with baseArgs.splice
Mutant 1492 in q.js: baseArgs.concat replaced with baseArgs.join
Mutant 1493 in q.js: array_slice(arguments) replaced with [].slice.call(arguments)
Mutant 1494 in q.js: array_slice(arguments) replaced with Array.prototype.slice.call(arguments)
Mutant 1495 in q.js: array_slice(arguments) replaced with Function.prototype.apply.call([], arguments)
Mutant 1496 in q.js: array_slice replaced with Object.prototype.slice
Mutant 1497 in q.js: arguments replaced with Object.keys(arguments)[0]
Mutant 1498 in q.js: arguments replaced with null
Mutant 1499 in q.js: defer replaced with {}
Mutant 1500 in q.js: deferred.makeNodeResolver() replaced with function () {
  throw new Error('Buggy node resolver');
}
Mutant 1501 in q.js: deferred.makeNodeResolver() replaced with deferred.reject
Mutant 1502 in q.js: deferred.makeNodeResolver() replaced with deferred.promise
Mutant 1503 in q.js: callback.apply replaced with callback.call
Mutant 1504 in q.js: thisp replaced with global
Mutant 1505 in q.js: thisp replaced with null
Mutant 1506 in q.js: thisp replaced with 0
Mutant 1507 in q.js: arguments replaced with thisp
Mutant 1508 in q.js: arguments replaced with null
Mutant 1509 in q.js: arguments replaced with []
Mutant 1510 in q.js: Q(bound).fapply replaced with bound.fapply
Mutant 1511 in q.js: Q(bound).fapply replaced with Function.prototype.fapply
not replacing Q(bound).fapply with bound.fapply
not replacing Q(bound).fapply with bound.fapply
not replacing Q(bound).fapply with Function.prototype.fapply
not replacing Q(bound).fapply with Function.prototype.fapply
Mutant 1512 in q.js: bound replaced with callback.apply(thisp)
Mutant 1513 in q.js: deferred.reject replaced with () => deferred.reject
Mutant 1514 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1515 in q.js: deferred.reject replaced with deferred.reject(null)
Mutant 1516 in q.js: array_slice replaced with [].slice
Mutant 1517 in q.js: array_slice replaced with null
Mutant 1518 in q.js: array_slice replaced with Array.prototype.slice
Mutant 1519 in q.js: arguments replaced with [].slice.call(arguments, 0)
Mutant 1520 in q.js: arguments replaced with Object.keys(arguments)
Mutant 1521 in q.js: 0 replaced with Infinity
Mutant 1522 in q.js: 0 replaced with null
Mutant 1523 in q.js: this replaced with global
Mutant 1524 in q.js: this replaced with window
Mutant 1525 in q.js: this replaced with null
Mutant 1526 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1527 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this, args)
Mutant 1528 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(Q, args)
Mutant 1529 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1530 in q.js: void 0 replaced with null
Mutant 1531 in q.js: void 0 replaced with this
Mutant 1532 in q.js: void 0 replaced with 0
Mutant 1533 in q.js: args replaced with []
Mutant 1534 in q.js: args replaced with null
Mutant 1535 in q.js: args replaced with this
Mutant 1536 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(false)
Mutant 1537 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(null)
Mutant 1538 in q.js: Q(object).npost(name, args) replaced with Q(object).npost([1, 2, 3])
Mutant 1539 in q.js: args replaced with []
Mutant 1540 in q.js: args replaced with null
Mutant 1541 in q.js: args replaced with 1 === 2
Mutant 1542 in q.js: array_slice replaced with [].slice
Mutant 1543 in q.js: args || [] replaced with []
Mutant 1544 in q.js: args || [] replaced with null
Mutant 1545 in q.js: args || [] replaced with globalArgs
Mutant 1546 in q.js: defer replaced with Promise.resolve
Mutant 1547 in q.js: defer replaced with Q.resolve
Mutant 1548 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1549 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1550 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1551 in q.js: deferred.makeNodeResolver() replaced with {}
Mutant 1552 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1553 in q.js: this.dispatch replaced with this.prototype.dispatch
not replacing this.dispatch with this.prototype.dispatch
not replacing this.dispatch with this.prototype.dispatch
Mutant 1554 in q.js: "post" replaced with "Post"
Mutant 1555 in q.js: [name, nodeArgs] replaced with name
Mutant 1556 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1557 in q.js: deferred.reject replaced with function () {}
Mutant 1558 in q.js: deferred.reject replaced with deferred.promise.resolve
Mutant 1559 in q.js: array_slice(arguments, 2) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1560 in q.js: array_slice(arguments, 2) replaced with array_slice(Array.prototype.slice.call(arguments, 1))
Mutant 1561 in q.js: array_slice replaced with [].slice
Mutant 1562 in q.js: array_slice replaced with null
Mutant 1563 in q.js: array_slice replaced with Q.slice
Mutant 1564 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1565 in q.js: arguments replaced with [].concat.apply([], arguments)
Mutant 1566 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1567 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1568 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1569 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1570 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("called", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("called", [name, nodeArgs])
Mutant 1571 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 1572 in q.js: Q(object).dispatch replaced with Q.dispatch
not replacing Q(object).dispatch with this.dispatch
not replacing Q(object).dispatch with this.dispatch
not replacing Q(object).dispatch with Q.dispatch
not replacing Q(object).dispatch with Q.dispatch
Mutant 1573 in q.js: object replaced with null
Mutant 1574 in q.js: object replaced with {}
Mutant 1575 in q.js: "post" replaced with "Post"
Mutant 1576 in q.js: "post" replaced with this.dispatch.bind(this, "post")
Mutant 1577 in q.js: "post" replaced with function () {
  this.dispatch("post");
}
Mutant 1578 in q.js: [name, nodeArgs] replaced with name
Mutant 1579 in q.js: [name, nodeArgs] replaced with nodeArgs
Mutant 1580 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 0))
Mutant 1581 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 0))
Mutant 1582 in q.js: array_slice(arguments, 1) replaced with array_slice(nodeArgs.concat())
Mutant 1583 in q.js: array_slice replaced with [].slice
Mutant 1584 in q.js: array_slice replaced with null
Mutant 1585 in q.js: array_slice replaced with Object.keys
Mutant 1586 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1587 in q.js: arguments replaced with Object.keys(arguments)[1]
Mutant 1588 in q.js: arguments replaced with null
Mutant 1589 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1590 in q.js: deferred.makeNodeResolver replaced with deferred
Mutant 1591 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("call", [name, nodeArgs])
Mutant 1592 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, deferred.resolve])
Mutant 1593 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("apply", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("call", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, deferred.resolve])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("apply", [name, nodeArgs])
Mutant 1594 in q.js: [name, nodeArgs] replaced with this.constructor.prototype.dispatch.call(this, "post", [name, nodeArgs])
Mutant 1595 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1596 in q.js: deferred.reject replaced with function () {}
Mutant 1597 in q.js: deferred.reject replaced with null
Mutant 1598 in q.js: Q replaced with Promise
Mutant 1599 in q.js: Q replaced with []
Mutant 1600 in q.js: object replaced with this
Mutant 1601 in q.js: object replaced with null
Mutant 1602 in q.js: object replaced with function () {}
Mutant 1603 in q.js: nodeback replaced with null
Mutant 1604 in q.js: nodeback replaced with 5
Mutant 1605 in q.js: nodeback replaced with () => {}
Mutant 1606 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1607 in q.js: nodeback replaced with true
Mutant 1608 in q.js: nodeback replaced with null
Mutant 1609 in q.js: null replaced with undefined
Mutant 1610 in q.js: null replaced with 1
Mutant 1611 in q.js: value replaced with undefined
Mutant 1612 in q.js: value replaced with null
Mutant 1613 in q.js: value replaced with arguments[0]
Mutant 1614 in q.js: error replaced with new Error("Different error message")
Mutant 1615 in q.js: error replaced with null
Mutant 1616 in q.js: error replaced with Q.resolve()
Mutant 1617 in queue.js: Q.defer replaced with Q.reject
Mutant 1618 in queue.js: ends.promise.get replaced with ends.promise.then.get
Mutant 1619 in queue.js: ends.promise.get replaced with ends.promise['get']
Mutant 1620 in queue.js: ends.promise.get replaced with ends.promise.head
Mutant 1621 in queue.js: "head" replaced with null
Mutant 1622 in queue.js: "head" replaced with ends.promise
Mutant 1623 in queue.js: "head" replaced with ends.promise.then(function (val) {
  return val.head;
})
Mutant 1624 in queue.js: ends.promise.get replaced with ends.promise.then.get
Mutant 1625 in queue.js: ends.promise.get replaced with ends.promise.head
Mutant 1626 in queue.js: "tail" replaced with null
Mutant 1627 in queue.js: "tail" replaced with ends.promise
Mutant 1628 in queue.js: "tail" replaced with Q.defer().promise
Mutant 1629 in queue.js: error replaced with null
Mutant 1630 in queue.js: error replaced with {}
Mutant 1631 in queue.js: error replaced with Q.resolve()
Mutant 1632 in queue.js: Q.reject replaced with null
Mutant 1633 in queue.js: Q.reject replaced with {}
Mutant 1634 in queue.js: Q.reject replaced with Q.resolve
Mutant 1635 in queue.js: error replaced with new Error("Different error message")
Mutant 1636 in queue.js: error replaced with null
Mutant 1637 in queue.js: error replaced with Q.reject(new Error("Can't get value from closed queue"))
Mutant 1638 in queue.js: ends.resolve replaced with ends.reject
Mutant 1639 in queue.js: ends.resolve replaced with ends.notify
Mutant 1640 in queue.js: ends.resolve replaced with ends.promise.resolve
Mutant 1641 in queue.js: end replaced with null
Mutant 1642 in queue.js: end replaced with Q.reject("Error while closing queue")
Mutant 1643 in queue.js: end replaced with {
  head: Q.resolve(),
  tail: Q.resolve()
}
[32m17:14:07 (3296) INFO Instrumenter[39m Instrumented 2 source file(s) with 1644 mutant(s)
[32m17:14:08 (3296) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m17:14:10 (3296) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m17:14:10 (3296) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m17:14:16 (3296) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6784 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~2h 16m) 2/1644 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 2m) 3/1644 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 43m) 5/1644 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 2m) 6/1644 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 50m) 8/1644 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 1m) 9/1644 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 38m) 12/1644 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 35m) 14/1644 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 42m) 15/1644 tested (12 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 39m) 17/1644 tested (14 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 45m) 18/1644 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 42m) 20/1644 tested (17 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 47m) 21/1644 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 44m) 23/1644 tested (20 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 48m) 24/1644 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 45m) 26/1644 tested (23 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 49m) 27/1644 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~2h 53m) 28/1644 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~2h 56m) 29/1644 tested (25 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~2h 59m) 30/1644 tested (26 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 2m) 31/1644 tested (26 survived, 2 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 4m) 32/1644 tested (27 survived, 2 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 13m) 32/1644 tested (27 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~2h 58m) 36/1644 tested (28 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 0m) 37/1644 tested (29 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 8m) 37/1644 tested (29 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 10m) 38/1644 tested (29 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 7m) 40/1644 tested (29 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 4m) 42/1644 tested (30 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~2h 53m) 46/1644 tested (31 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~2h 51m) 48/1644 tested (33 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~2h 53m) 49/1644 tested (34 survived, 5 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 51m) 51/1644 tested (36 survived, 5 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 53m) 52/1644 tested (37 survived, 5 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 55m) 53/1644 tested (38 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 53m) 55/1644 tested (40 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 54m) 56/1644 tested (41 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 53m) 58/1644 tested (43 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 54m) 59/1644 tested (44 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 53m) 61/1644 tested (46 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 54m) 62/1644 tested (47 survived, 5 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~2h 52m) 64/1644 tested (49 survived, 5 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~2h 54m) 65/1644 tested (50 survived, 5 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~2h 52m) 67/1644 tested (52 survived, 5 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~2h 56m) 67/1644 tested (52 survived, 5 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~2h 55m) 69/1644 tested (53 survived, 6 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~2h 56m) 70/1644 tested (54 survived, 6 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~2h 59m) 70/1644 tested (54 survived, 6 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~2h 58m) 72/1644 tested (55 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~2h 59m) 73/1644 tested (56 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~2h 57m) 75/1644 tested (58 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~2h 58m) 76/1644 tested (59 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~2h 57m) 78/1644 tested (61 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~2h 58m) 79/1644 tested (62 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~2h 56m) 81/1644 tested (64 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~2h 57m) 82/1644 tested (65 survived, 7 timed out)
Mutation testing 5% (elapsed: ~9m, remaining: ~2h 56m) 84/1644 tested (67 survived, 7 timed out)
Mutation testing 5% (elapsed: ~9m, remaining: ~2h 57m) 85/1644 tested (68 survived, 7 timed out)
Mutation testing 5% (elapsed: ~9m, remaining: ~2h 55m) 87/1644 tested (70 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 56m) 88/1644 tested (71 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 55m) 90/1644 tested (73 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 56m) 91/1644 tested (74 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 57m) 92/1644 tested (75 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 55m) 94/1644 tested (77 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 56m) 95/1644 tested (78 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~2h 55m) 97/1644 tested (80 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~2h 56m) 98/1644 tested (81 survived, 7 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 54m) 100/1644 tested (83 survived, 7 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 55m) 101/1644 tested (84 survived, 7 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 54m) 103/1644 tested (86 survived, 7 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 46m) 109/1644 tested (87 survived, 7 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~2h 47m) 110/1644 tested (88 survived, 7 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~2h 46m) 112/1644 tested (90 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 35m) 121/1644 tested (90 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 34m) 123/1644 tested (91 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 35m) 124/1644 tested (92 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 34m) 126/1644 tested (94 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 35m) 127/1644 tested (95 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 34m) 129/1644 tested (97 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 35m) 130/1644 tested (98 survived, 7 timed out)
Mutation testing 8% (elapsed: ~13m, remaining: ~2h 34m) 132/1644 tested (100 survived, 7 timed out)
Mutation testing 8% (elapsed: ~13m, remaining: ~2h 35m) 133/1644 tested (101 survived, 7 timed out)
Mutation testing 8% (elapsed: ~13m, remaining: ~2h 34m) 135/1644 tested (103 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 35m) 136/1644 tested (104 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 34m) 138/1644 tested (106 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 35m) 139/1644 tested (107 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 34m) 141/1644 tested (109 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 35m) 142/1644 tested (110 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 34m) 144/1644 tested (112 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 35m) 145/1644 tested (113 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 34m) 147/1644 tested (115 survived, 7 timed out)
Mutation testing 9% (elapsed: ~15m, remaining: ~2h 34m) 148/1644 tested (116 survived, 7 timed out)
Mutation testing 9% (elapsed: ~15m, remaining: ~2h 34m) 150/1644 tested (118 survived, 7 timed out)
Mutation testing 9% (elapsed: ~15m, remaining: ~2h 34m) 151/1644 tested (119 survived, 7 timed out)
Mutation testing 9% (elapsed: ~15m, remaining: ~2h 34m) 153/1644 tested (121 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 34m) 154/1644 tested (122 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 34m) 156/1644 tested (124 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 34m) 157/1644 tested (125 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 35m) 158/1644 tested (126 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 34m) 160/1644 tested (128 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 35m) 161/1644 tested (129 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 34m) 163/1644 tested (131 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 34m) 164/1644 tested (132 survived, 7 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 33m) 167/1644 tested (134 survived, 7 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 33m) 168/1644 tested (135 survived, 7 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 33m) 170/1644 tested (137 survived, 7 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 33m) 171/1644 tested (138 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 33m) 173/1644 tested (140 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 33m) 174/1644 tested (141 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 32m) 176/1644 tested (143 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 33m) 177/1644 tested (144 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 32m) 179/1644 tested (146 survived, 7 timed out)
Mutation testing 11% (elapsed: ~18m, remaining: ~2h 31m) 182/1644 tested (147 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 31m) 183/1644 tested (147 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 32m) 184/1644 tested (147 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 31m) 186/1644 tested (147 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 31m) 187/1644 tested (148 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 31m) 189/1644 tested (150 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 31m) 190/1644 tested (151 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 30m) 193/1644 tested (153 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 30m) 194/1644 tested (154 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 30m) 196/1644 tested (156 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 30m) 197/1644 tested (157 survived, 7 timed out)
Mutation testing 12% (elapsed: ~20m, remaining: ~2h 30m) 199/1644 tested (159 survived, 7 timed out)
Mutation testing 12% (elapsed: ~20m, remaining: ~2h 30m) 200/1644 tested (160 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 30m) 201/1644 tested (161 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 30m) 203/1644 tested (163 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 30m) 204/1644 tested (164 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 30m) 206/1644 tested (166 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 30m) 207/1644 tested (167 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 29m) 209/1644 tested (169 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 30m) 210/1644 tested (170 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 29m) 212/1644 tested (172 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 30m) 213/1644 tested (173 survived, 7 timed out)
Mutation testing 13% (elapsed: ~22m, remaining: ~2h 29m) 215/1644 tested (175 survived, 7 timed out)
Mutation testing 13% (elapsed: ~22m, remaining: ~2h 29m) 216/1644 tested (176 survived, 7 timed out)
Mutation testing 13% (elapsed: ~22m, remaining: ~2h 29m) 218/1644 tested (178 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 29m) 219/1644 tested (179 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 29m) 221/1644 tested (181 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 29m) 222/1644 tested (182 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 28m) 224/1644 tested (184 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 29m) 225/1644 tested (185 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 28m) 227/1644 tested (187 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 29m) 228/1644 tested (188 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 28m) 230/1644 tested (190 survived, 7 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 28m) 231/1644 tested (191 survived, 7 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 28m) 233/1644 tested (193 survived, 7 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 28m) 234/1644 tested (194 survived, 7 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 28m) 236/1644 tested (196 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 28m) 237/1644 tested (197 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 27m) 239/1644 tested (199 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 28m) 240/1644 tested (200 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 28m) 241/1644 tested (201 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 27m) 243/1644 tested (203 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 28m) 244/1644 tested (204 survived, 7 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 27m) 246/1644 tested (206 survived, 7 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 27m) 247/1644 tested (207 survived, 7 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 27m) 249/1644 tested (209 survived, 7 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 27m) 250/1644 tested (210 survived, 7 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 27m) 252/1644 tested (212 survived, 7 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 27m) 253/1644 tested (213 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 27m) 255/1644 tested (215 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 27m) 256/1644 tested (216 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 25m) 260/1644 tested (217 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 25m) 262/1644 tested (219 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 25m) 263/1644 tested (220 survived, 7 timed out)
Mutation testing 16% (elapsed: ~27m, remaining: ~2h 24m) 265/1644 tested (222 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 25m) 266/1644 tested (223 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 24m) 268/1644 tested (225 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 24m) 269/1644 tested (226 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 24m) 271/1644 tested (228 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 24m) 272/1644 tested (229 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 24m) 274/1644 tested (231 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 24m) 275/1644 tested (232 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 23m) 277/1644 tested (234 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 24m) 278/1644 tested (235 survived, 7 timed out)
Mutation testing 17% (elapsed: ~29m, remaining: ~2h 23m) 280/1644 tested (237 survived, 7 timed out)
Mutation testing 17% (elapsed: ~29m, remaining: ~2h 23m) 281/1644 tested (238 survived, 7 timed out)
Mutation testing 17% (elapsed: ~29m, remaining: ~2h 23m) 283/1644 tested (240 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 22m) 286/1644 tested (241 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 22m) 287/1644 tested (242 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 22m) 289/1644 tested (244 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 21m) 291/1644 tested (245 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 21m) 293/1644 tested (247 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 20m) 295/1644 tested (248 survived, 7 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 21m) 296/1644 tested (249 survived, 7 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 20m) 298/1644 tested (251 survived, 7 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 20m) 299/1644 tested (252 survived, 7 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 20m) 301/1644 tested (254 survived, 7 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 20m) 302/1644 tested (255 survived, 7 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 20m) 304/1644 tested (257 survived, 7 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 20m) 305/1644 tested (258 survived, 7 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 19m) 308/1644 tested (260 survived, 7 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 19m) 309/1644 tested (260 survived, 7 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 20m) 309/1644 tested (260 survived, 7 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 20m) 311/1644 tested (260 survived, 8 timed out)
Mutation testing 19% (elapsed: ~32m, remaining: ~2h 18m) 315/1644 tested (261 survived, 8 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 18m) 316/1644 tested (261 survived, 8 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 18m) 317/1644 tested (262 survived, 8 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 18m) 319/1644 tested (262 survived, 8 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 18m) 320/1644 tested (263 survived, 8 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 17m) 323/1644 tested (264 survived, 8 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 18m) 323/1644 tested (264 survived, 8 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 17m) 326/1644 tested (264 survived, 9 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 17m) 327/1644 tested (265 survived, 9 timed out)
Mutation testing 20% (elapsed: ~34m, remaining: ~2h 16m) 330/1644 tested (267 survived, 9 timed out)
Mutation testing 20% (elapsed: ~34m, remaining: ~2h 15m) 334/1644 tested (268 survived, 9 timed out)
Mutation testing 20% (elapsed: ~34m, remaining: ~2h 15m) 335/1644 tested (269 survived, 9 timed out)
Mutation testing 20% (elapsed: ~34m, remaining: ~2h 14m) 339/1644 tested (270 survived, 9 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 13m) 342/1644 tested (270 survived, 9 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 13m) 342/1644 tested (270 survived, 9 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 14m) 343/1644 tested (270 survived, 10 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 14m) 344/1644 tested (270 survived, 11 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 14m) 345/1644 tested (271 survived, 11 timed out)
Mutation testing 21% (elapsed: ~35m, remaining: ~2h 13m) 347/1644 tested (273 survived, 11 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 14m) 348/1644 tested (274 survived, 11 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 13m) 350/1644 tested (276 survived, 11 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 14m) 350/1644 tested (276 survived, 11 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 13m) 353/1644 tested (276 survived, 12 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 13m) 355/1644 tested (278 survived, 12 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 13m) 356/1644 tested (279 survived, 12 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 12m) 358/1644 tested (281 survived, 12 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 13m) 359/1644 tested (282 survived, 12 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 13m) 360/1644 tested (283 survived, 12 timed out)
Mutation testing 22% (elapsed: ~37m, remaining: ~2h 12m) 362/1644 tested (285 survived, 12 timed out)
Mutation testing 22% (elapsed: ~37m, remaining: ~2h 12m) 363/1644 tested (286 survived, 12 timed out)
Mutation testing 22% (elapsed: ~37m, remaining: ~2h 12m) 365/1644 tested (288 survived, 12 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 12m) 366/1644 tested (289 survived, 12 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 12m) 368/1644 tested (291 survived, 12 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 12m) 369/1644 tested (292 survived, 12 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 12m) 371/1644 tested (294 survived, 12 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 12m) 372/1644 tested (295 survived, 12 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 11m) 374/1644 tested (297 survived, 12 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 11m) 375/1644 tested (298 survived, 12 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 11m) 377/1644 tested (300 survived, 12 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 11m) 378/1644 tested (301 survived, 12 timed out)
Mutation testing 23% (elapsed: ~39m, remaining: ~2h 11m) 380/1644 tested (303 survived, 12 timed out)
Mutation testing 23% (elapsed: ~39m, remaining: ~2h 11m) 381/1644 tested (304 survived, 12 timed out)
Mutation testing 23% (elapsed: ~39m, remaining: ~2h 11m) 382/1644 tested (305 survived, 12 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 11m) 384/1644 tested (305 survived, 13 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 11m) 384/1644 tested (305 survived, 13 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 11m) 385/1644 tested (305 survived, 14 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 11m) 386/1644 tested (305 survived, 15 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 12m) 387/1644 tested (305 survived, 15 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 11m) 389/1644 tested (305 survived, 16 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 12m) 389/1644 tested (305 survived, 16 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 11m) 391/1644 tested (305 survived, 17 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 12m) 392/1644 tested (305 survived, 18 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 11m) 394/1644 tested (306 survived, 18 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 12m) 394/1644 tested (306 survived, 18 timed out)
Mutation testing 24% (elapsed: ~41m, remaining: ~2h 12m) 395/1644 tested (306 survived, 19 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 12m) 396/1644 tested (306 survived, 20 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 12m) 396/1644 tested (306 survived, 20 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 12m) 397/1644 tested (306 survived, 21 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 13m) 398/1644 tested (306 survived, 22 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 13m) 399/1644 tested (307 survived, 22 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 12m) 401/1644 tested (309 survived, 22 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 12m) 402/1644 tested (310 survived, 22 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 12m) 404/1644 tested (312 survived, 22 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 12m) 405/1644 tested (313 survived, 22 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 13m) 405/1644 tested (313 survived, 22 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 12m) 407/1644 tested (313 survived, 23 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 12m) 408/1644 tested (313 survived, 24 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 11m) 412/1644 tested (313 survived, 24 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 11m) 413/1644 tested (313 survived, 24 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 11m) 414/1644 tested (313 survived, 24 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 11m) 415/1644 tested (313 survived, 24 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 11m) 416/1644 tested (314 survived, 24 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 11m) 417/1644 tested (315 survived, 24 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 11m) 419/1644 tested (317 survived, 24 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 11m) 420/1644 tested (318 survived, 24 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 11m) 422/1644 tested (320 survived, 24 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 11m) 423/1644 tested (321 survived, 24 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 10m) 425/1644 tested (323 survived, 24 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 11m) 426/1644 tested (324 survived, 24 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 10m) 428/1644 tested (326 survived, 24 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 10m) 429/1644 tested (327 survived, 24 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 10m) 431/1644 tested (329 survived, 24 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 10m) 432/1644 tested (330 survived, 24 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 10m) 434/1644 tested (332 survived, 24 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 10m) 435/1644 tested (333 survived, 24 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 9m) 437/1644 tested (335 survived, 24 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 9m) 438/1644 tested (336 survived, 24 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 9m) 440/1644 tested (338 survived, 24 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 9m) 441/1644 tested (339 survived, 24 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 9m) 443/1644 tested (341 survived, 24 timed out)
Mutation testing 27% (elapsed: ~47m, remaining: ~2h 9m) 444/1644 tested (342 survived, 24 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 9m) 445/1644 tested (343 survived, 24 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 8m) 447/1644 tested (345 survived, 24 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 9m) 448/1644 tested (346 survived, 24 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 8m) 450/1644 tested (348 survived, 24 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 8m) 451/1644 tested (349 survived, 24 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 8m) 453/1644 tested (351 survived, 24 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 8m) 454/1644 tested (352 survived, 24 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 8m) 456/1644 tested (354 survived, 24 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 8m) 457/1644 tested (355 survived, 24 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 7m) 459/1644 tested (357 survived, 24 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 7m) 460/1644 tested (358 survived, 24 timed out)
Mutation testing 28% (elapsed: ~49m, remaining: ~2h 7m) 462/1644 tested (360 survived, 24 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 7m) 463/1644 tested (361 survived, 24 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 7m) 465/1644 tested (363 survived, 24 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 7m) 466/1644 tested (364 survived, 24 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 6m) 468/1644 tested (366 survived, 24 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 6m) 469/1644 tested (367 survived, 24 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 6m) 470/1644 tested (368 survived, 24 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 6m) 472/1644 tested (370 survived, 24 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 6m) 473/1644 tested (371 survived, 24 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 6m) 475/1644 tested (373 survived, 24 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 6m) 476/1644 tested (374 survived, 24 timed out)
Mutation testing 29% (elapsed: ~51m, remaining: ~2h 6m) 478/1644 tested (376 survived, 24 timed out)
Mutation testing 29% (elapsed: ~51m, remaining: ~2h 6m) 479/1644 tested (377 survived, 24 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 5m) 481/1644 tested (379 survived, 24 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 5m) 482/1644 tested (380 survived, 24 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 5m) 484/1644 tested (382 survived, 24 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 5m) 485/1644 tested (383 survived, 24 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 4m) 488/1644 tested (384 survived, 24 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 4m) 489/1644 tested (384 survived, 25 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 5m) 489/1644 tested (384 survived, 25 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 4m) 491/1644 tested (384 survived, 26 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 5m) 491/1644 tested (384 survived, 26 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 5m) 492/1644 tested (384 survived, 27 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 5m) 493/1644 tested (384 survived, 28 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 5m) 493/1644 tested (384 survived, 28 timed out)
Mutation testing 30% (elapsed: ~54m, remaining: ~2h 5m) 494/1644 tested (384 survived, 29 timed out)
Mutation testing 30% (elapsed: ~54m, remaining: ~2h 5m) 495/1644 tested (384 survived, 30 timed out)
Mutation testing 30% (elapsed: ~54m, remaining: ~2h 6m) 495/1644 tested (384 survived, 30 timed out)
Mutation testing 30% (elapsed: ~54m, remaining: ~2h 6m) 496/1644 tested (384 survived, 31 timed out)
Mutation testing 30% (elapsed: ~54m, remaining: ~2h 6m) 497/1644 tested (384 survived, 32 timed out)
Mutation testing 30% (elapsed: ~54m, remaining: ~2h 6m) 497/1644 tested (384 survived, 32 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 6m) 498/1644 tested (384 survived, 33 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 6m) 499/1644 tested (384 survived, 34 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 6m) 500/1644 tested (385 survived, 34 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 6m) 502/1644 tested (387 survived, 34 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 6m) 503/1644 tested (388 survived, 34 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 5m) 505/1644 tested (390 survived, 34 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 5m) 506/1644 tested (391 survived, 34 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 5m) 508/1644 tested (393 survived, 34 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 5m) 509/1644 tested (394 survived, 34 timed out)
Mutation testing 31% (elapsed: ~56m, remaining: ~2h 5m) 511/1644 tested (396 survived, 34 timed out)
Mutation testing 31% (elapsed: ~56m, remaining: ~2h 5m) 511/1644 tested (396 survived, 34 timed out)
Mutation testing 31% (elapsed: ~56m, remaining: ~2h 5m) 512/1644 tested (396 survived, 35 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 5m) 513/1644 tested (396 survived, 36 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 4m) 517/1644 tested (397 survived, 36 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 4m) 518/1644 tested (398 survived, 36 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 4m) 519/1644 tested (399 survived, 36 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 4m) 521/1644 tested (399 survived, 36 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 4m) 522/1644 tested (400 survived, 36 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 3m) 524/1644 tested (402 survived, 36 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 3m) 525/1644 tested (402 survived, 36 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 3m) 526/1644 tested (402 survived, 37 timed out)
Mutation testing 32% (elapsed: ~58m, remaining: ~2h 3m) 527/1644 tested (403 survived, 37 timed out)
Mutation testing 32% (elapsed: ~58m, remaining: ~2h 4m) 528/1644 tested (403 survived, 38 timed out)
Mutation testing 32% (elapsed: ~58m, remaining: ~2h 4m) 528/1644 tested (403 survived, 38 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 4m) 529/1644 tested (403 survived, 39 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 4m) 530/1644 tested (403 survived, 40 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 4m) 531/1644 tested (403 survived, 40 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 4m) 532/1644 tested (403 survived, 40 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 4m) 533/1644 tested (403 survived, 40 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 4m) 534/1644 tested (403 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 4m) 535/1644 tested (403 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 4m) 536/1644 tested (403 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 4m) 536/1644 tested (403 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 4m) 537/1644 tested (403 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 4m) 538/1644 tested (403 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 5m) 538/1644 tested (403 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 5m) 539/1644 tested (403 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 5m) 540/1644 tested (403 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 5m) 541/1644 tested (404 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 5m) 542/1644 tested (405 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 1m, remaining: ~2h 5m) 543/1644 tested (406 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 1m, remaining: ~2h 5m) 544/1644 tested (406 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 5m) 544/1644 tested (406 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 5m) 545/1644 tested (406 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 5m) 546/1644 tested (406 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 5m) 547/1644 tested (406 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 5m) 547/1644 tested (406 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 5m) 548/1644 tested (406 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 5m) 549/1644 tested (406 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 5m) 550/1644 tested (406 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 5m) 551/1644 tested (406 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 5m) 552/1644 tested (406 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 5m) 554/1644 tested (408 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 5m) 555/1644 tested (409 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 5m) 555/1644 tested (409 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 5m) 556/1644 tested (409 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 5m) 557/1644 tested (409 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 5m) 557/1644 tested (409 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 4m, remaining: ~2h 5m) 559/1644 tested (409 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 4m, remaining: ~2h 5m) 560/1644 tested (409 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 5m) 560/1644 tested (409 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 5m) 561/1644 tested (409 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 5m) 562/1644 tested (409 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 6m) 562/1644 tested (409 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 6m) 563/1644 tested (409 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 6m) 564/1644 tested (409 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 5m) 566/1644 tested (410 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 5m) 567/1644 tested (411 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 5m) 568/1644 tested (411 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 5m) 568/1644 tested (411 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 5m) 569/1644 tested (411 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 6m) 569/1644 tested (411 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 6m) 570/1644 tested (411 survived, 58 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 6m) 571/1644 tested (411 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 6m) 571/1644 tested (411 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 6m) 572/1644 tested (411 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 6m) 573/1644 tested (411 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 6m) 573/1644 tested (411 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 6m) 574/1644 tested (411 survived, 62 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 6m) 575/1644 tested (411 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 6m) 577/1644 tested (413 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 6m) 578/1644 tested (414 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 6m) 579/1644 tested (415 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 5m) 581/1644 tested (417 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 5m) 582/1644 tested (418 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 5m) 584/1644 tested (420 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 5m) 585/1644 tested (421 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 5m) 587/1644 tested (423 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 5m) 588/1644 tested (424 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 4m) 590/1644 tested (426 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 4m) 591/1644 tested (427 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 4m) 593/1644 tested (429 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 4m) 594/1644 tested (430 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 3m) 596/1644 tested (432 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 3m) 597/1644 tested (433 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 3m) 599/1644 tested (435 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 3m) 600/1644 tested (436 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 3m) 602/1644 tested (438 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 3m) 603/1644 tested (439 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 2m) 605/1644 tested (441 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 2m) 606/1644 tested (442 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 2m) 608/1644 tested (444 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 2m) 609/1644 tested (445 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 2m) 611/1644 tested (447 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 1m) 612/1644 tested (448 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 1m) 614/1644 tested (450 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 1m) 615/1644 tested (451 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 1m) 617/1644 tested (453 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 1m) 618/1644 tested (454 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 1m) 619/1644 tested (455 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 0m) 621/1644 tested (457 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 0m) 622/1644 tested (458 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 0m) 624/1644 tested (460 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 13m, remaining: ~2h 0m) 625/1644 tested (461 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~2h 0m) 627/1644 tested (463 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~1h 59m) 628/1644 tested (464 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~1h 59m) 630/1644 tested (466 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~1h 59m) 631/1644 tested (467 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~1h 59m) 633/1644 tested (469 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~1h 59m) 634/1644 tested (470 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~1h 58m) 636/1644 tested (472 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~1h 58m) 637/1644 tested (473 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~1h 58m) 639/1644 tested (475 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~1h 58m) 640/1644 tested (476 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 15m, remaining: ~1h 58m) 642/1644 tested (478 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 15m, remaining: ~1h 58m) 643/1644 tested (479 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 57m) 645/1644 tested (481 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 57m) 646/1644 tested (482 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 57m) 649/1644 tested (484 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 56m) 650/1644 tested (484 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 56m) 652/1644 tested (484 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 56m) 654/1644 tested (486 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~1h 56m) 655/1644 tested (487 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~1h 55m) 657/1644 tested (489 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 17m, remaining: ~1h 55m) 658/1644 tested (490 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 17m, remaining: ~1h 55m) 659/1644 tested (491 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 17m, remaining: ~1h 55m) 661/1644 tested (493 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 17m, remaining: ~1h 55m) 662/1644 tested (494 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 55m) 664/1644 tested (496 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 55m) 665/1644 tested (497 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 54m) 667/1644 tested (499 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 54m) 668/1644 tested (500 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 54m) 670/1644 tested (502 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 54m) 671/1644 tested (503 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 53m) 673/1644 tested (505 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 53m) 674/1644 tested (506 survived, 63 timed out)
Mutation testing 41% (elapsed: ~1h 19m, remaining: ~1h 53m) 676/1644 tested (508 survived, 63 timed out)
Mutation testing 41% (elapsed: ~1h 19m, remaining: ~1h 53m) 677/1644 tested (509 survived, 63 timed out)
Mutation testing 41% (elapsed: ~1h 19m, remaining: ~1h 53m) 679/1644 tested (511 survived, 63 timed out)
Mutation testing 41% (elapsed: ~1h 19m, remaining: ~1h 53m) 680/1644 tested (512 survived, 63 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 53m) 681/1644 tested (513 survived, 63 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 53m) 682/1644 tested (513 survived, 64 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 52m) 684/1644 tested (514 survived, 64 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 52m) 687/1644 tested (516 survived, 64 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 52m) 688/1644 tested (517 survived, 64 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 51m) 690/1644 tested (519 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 51m) 691/1644 tested (520 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 51m) 692/1644 tested (521 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 51m) 694/1644 tested (523 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 50m) 697/1644 tested (524 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 50m) 699/1644 tested (525 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 50m) 700/1644 tested (526 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 50m) 702/1644 tested (528 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 49m) 703/1644 tested (529 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 49m) 705/1644 tested (530 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 22m, remaining: ~1h 49m) 707/1644 tested (531 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 22m, remaining: ~1h 49m) 708/1644 tested (531 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 22m, remaining: ~1h 48m) 710/1644 tested (533 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 48m) 711/1644 tested (534 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 48m) 713/1644 tested (536 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 48m) 714/1644 tested (537 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 48m) 716/1644 tested (539 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 48m) 717/1644 tested (540 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 48m) 718/1644 tested (541 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 47m) 720/1644 tested (543 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 48m) 720/1644 tested (543 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 47m) 721/1644 tested (543 survived, 65 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 47m) 722/1644 tested (543 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 48m) 722/1644 tested (543 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 24m, remaining: ~1h 47m) 724/1644 tested (544 survived, 67 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 47m) 725/1644 tested (545 survived, 67 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 47m) 725/1644 tested (545 survived, 67 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 47m) 727/1644 tested (546 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 47m) 728/1644 tested (547 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 47m) 730/1644 tested (549 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 47m) 731/1644 tested (550 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 46m) 734/1644 tested (552 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 46m) 736/1644 tested (553 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 46m) 737/1644 tested (554 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 45m) 739/1644 tested (556 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 26m, remaining: ~1h 45m) 740/1644 tested (557 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 26m, remaining: ~1h 45m) 742/1644 tested (559 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 45m) 743/1644 tested (560 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 45m) 745/1644 tested (562 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 45m) 746/1644 tested (563 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 44m) 748/1644 tested (565 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 44m) 749/1644 tested (566 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 44m) 751/1644 tested (568 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 44m) 752/1644 tested (569 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 44m) 754/1644 tested (571 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 44m) 755/1644 tested (572 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 28m, remaining: ~1h 43m) 757/1644 tested (574 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 28m, remaining: ~1h 43m) 758/1644 tested (575 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 28m, remaining: ~1h 43m) 760/1644 tested (577 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 43m) 761/1644 tested (578 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 42m) 763/1644 tested (580 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 42m) 764/1644 tested (581 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 42m) 766/1644 tested (583 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 42m) 767/1644 tested (584 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 42m) 768/1644 tested (585 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 42m) 770/1644 tested (587 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 42m) 771/1644 tested (588 survived, 68 timed out)
Mutation testing 47% (elapsed: ~1h 30m, remaining: ~1h 41m) 773/1644 tested (590 survived, 68 timed out)
Mutation testing 47% (elapsed: ~1h 30m, remaining: ~1h 41m) 774/1644 tested (591 survived, 68 timed out)
Mutation testing 47% (elapsed: ~1h 30m, remaining: ~1h 41m) 775/1644 tested (591 survived, 69 timed out)
Mutation testing 47% (elapsed: ~1h 30m, remaining: ~1h 41m) 775/1644 tested (591 survived, 69 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 41m) 776/1644 tested (591 survived, 70 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 41m) 777/1644 tested (591 survived, 71 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 41m) 777/1644 tested (591 survived, 71 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 41m) 778/1644 tested (591 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 41m) 780/1644 tested (593 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 41m) 781/1644 tested (594 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 41m) 783/1644 tested (596 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 41m) 784/1644 tested (597 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 40m) 786/1644 tested (599 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 40m) 787/1644 tested (600 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 40m) 789/1644 tested (602 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 32m, remaining: ~1h 40m) 790/1644 tested (603 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 33m, remaining: ~1h 40m) 792/1644 tested (605 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 33m, remaining: ~1h 39m) 793/1644 tested (606 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 33m, remaining: ~1h 39m) 795/1644 tested (608 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 33m, remaining: ~1h 39m) 796/1644 tested (609 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 33m, remaining: ~1h 39m) 798/1644 tested (611 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 33m, remaining: ~1h 39m) 799/1644 tested (612 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 38m) 801/1644 tested (614 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 38m) 802/1644 tested (615 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 38m) 804/1644 tested (617 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 38m) 805/1644 tested (618 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 34m, remaining: ~1h 38m) 806/1644 tested (619 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 34m, remaining: ~1h 38m) 808/1644 tested (621 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 35m, remaining: ~1h 38m) 809/1644 tested (622 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 35m, remaining: ~1h 37m) 811/1644 tested (624 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 35m, remaining: ~1h 37m) 812/1644 tested (625 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 35m, remaining: ~1h 37m) 814/1644 tested (627 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 35m, remaining: ~1h 37m) 815/1644 tested (628 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 35m, remaining: ~1h 37m) 817/1644 tested (630 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 36m) 818/1644 tested (631 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 36m) 820/1644 tested (633 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 36m) 821/1644 tested (634 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 36m, remaining: ~1h 36m) 823/1644 tested (635 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 36m, remaining: ~1h 36m) 824/1644 tested (636 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 36m, remaining: ~1h 35m) 826/1644 tested (637 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 37m, remaining: ~1h 35m) 827/1644 tested (638 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 37m, remaining: ~1h 35m) 829/1644 tested (640 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 37m, remaining: ~1h 35m) 830/1644 tested (641 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 37m, remaining: ~1h 35m) 831/1644 tested (642 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 37m, remaining: ~1h 35m) 833/1644 tested (644 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 37m, remaining: ~1h 35m) 834/1644 tested (645 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 34m) 836/1644 tested (647 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 34m) 837/1644 tested (648 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 38m, remaining: ~1h 34m) 839/1644 tested (650 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 38m, remaining: ~1h 34m) 840/1644 tested (651 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 38m, remaining: ~1h 33m) 842/1644 tested (653 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 38m, remaining: ~1h 33m) 843/1644 tested (654 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 39m, remaining: ~1h 33m) 845/1644 tested (656 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 39m, remaining: ~1h 33m) 846/1644 tested (657 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 39m, remaining: ~1h 33m) 848/1644 tested (659 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 39m, remaining: ~1h 33m) 849/1644 tested (660 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 39m, remaining: ~1h 32m) 851/1644 tested (662 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 39m, remaining: ~1h 32m) 852/1644 tested (663 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 32m) 854/1644 tested (665 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 40m, remaining: ~1h 32m) 855/1644 tested (666 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 40m, remaining: ~1h 32m) 857/1644 tested (668 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 40m, remaining: ~1h 32m) 858/1644 tested (669 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 40m, remaining: ~1h 31m) 860/1644 tested (671 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 40m, remaining: ~1h 31m) 861/1644 tested (672 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 41m, remaining: ~1h 31m) 863/1644 tested (674 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 41m, remaining: ~1h 31m) 864/1644 tested (675 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 41m, remaining: ~1h 31m) 866/1644 tested (677 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 41m, remaining: ~1h 30m) 867/1644 tested (678 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 41m, remaining: ~1h 30m) 869/1644 tested (680 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 41m, remaining: ~1h 30m) 870/1644 tested (681 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 42m, remaining: ~1h 30m) 872/1644 tested (683 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 42m, remaining: ~1h 30m) 873/1644 tested (684 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 42m, remaining: ~1h 30m) 874/1644 tested (685 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 42m, remaining: ~1h 29m) 876/1644 tested (687 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 42m, remaining: ~1h 29m) 877/1644 tested (688 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 42m, remaining: ~1h 29m) 879/1644 tested (690 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 43m, remaining: ~1h 29m) 880/1644 tested (691 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 43m, remaining: ~1h 29m) 882/1644 tested (693 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 43m, remaining: ~1h 29m) 883/1644 tested (694 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 43m, remaining: ~1h 28m) 885/1644 tested (696 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 43m, remaining: ~1h 28m) 886/1644 tested (697 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 43m, remaining: ~1h 28m) 888/1644 tested (699 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 44m, remaining: ~1h 28m) 889/1644 tested (700 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 44m, remaining: ~1h 28m) 891/1644 tested (702 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 44m, remaining: ~1h 27m) 892/1644 tested (703 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 44m, remaining: ~1h 27m) 894/1644 tested (705 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 44m, remaining: ~1h 27m) 895/1644 tested (706 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 44m, remaining: ~1h 27m) 897/1644 tested (708 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 27m) 898/1644 tested (709 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 26m) 900/1644 tested (711 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 26m) 901/1644 tested (712 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 26m) 903/1644 tested (714 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 26m) 904/1644 tested (715 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 45m, remaining: ~1h 26m) 906/1644 tested (717 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 46m, remaining: ~1h 26m) 907/1644 tested (718 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 46m, remaining: ~1h 25m) 909/1644 tested (720 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 46m, remaining: ~1h 25m) 910/1644 tested (721 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 46m, remaining: ~1h 25m) 911/1644 tested (722 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 46m, remaining: ~1h 25m) 913/1644 tested (724 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 46m, remaining: ~1h 25m) 914/1644 tested (725 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 25m) 916/1644 tested (727 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 24m) 917/1644 tested (728 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 24m) 919/1644 tested (730 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 24m) 920/1644 tested (731 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 47m, remaining: ~1h 24m) 922/1644 tested (733 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 47m, remaining: ~1h 24m) 923/1644 tested (734 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 48m, remaining: ~1h 23m) 925/1644 tested (736 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 48m, remaining: ~1h 23m) 926/1644 tested (737 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 48m, remaining: ~1h 23m) 928/1644 tested (739 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 48m, remaining: ~1h 23m) 929/1644 tested (740 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 48m, remaining: ~1h 23m) 931/1644 tested (742 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 48m, remaining: ~1h 23m) 932/1644 tested (743 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 22m) 934/1644 tested (745 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 22m) 935/1644 tested (746 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 22m) 937/1644 tested (748 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 49m, remaining: ~1h 22m) 938/1644 tested (749 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 49m, remaining: ~1h 22m) 940/1644 tested (751 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 49m, remaining: ~1h 22m) 941/1644 tested (752 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 50m, remaining: ~1h 21m) 943/1644 tested (754 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 50m, remaining: ~1h 21m) 944/1644 tested (755 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 50m, remaining: ~1h 21m) 946/1644 tested (757 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 50m, remaining: ~1h 21m) 947/1644 tested (758 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 50m, remaining: ~1h 21m) 949/1644 tested (760 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 50m, remaining: ~1h 20m) 950/1644 tested (761 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 51m, remaining: ~1h 20m) 951/1644 tested (762 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 51m, remaining: ~1h 20m) 953/1644 tested (764 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 51m, remaining: ~1h 20m) 954/1644 tested (765 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 51m, remaining: ~1h 20m) 956/1644 tested (767 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 51m, remaining: ~1h 20m) 957/1644 tested (768 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 51m, remaining: ~1h 19m) 959/1644 tested (770 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 52m, remaining: ~1h 19m) 960/1644 tested (771 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 52m, remaining: ~1h 19m) 962/1644 tested (773 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 52m, remaining: ~1h 19m) 963/1644 tested (774 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 52m, remaining: ~1h 19m) 965/1644 tested (776 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 52m, remaining: ~1h 19m) 966/1644 tested (777 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 52m, remaining: ~1h 18m) 968/1644 tested (779 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 18m) 969/1644 tested (780 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 53m, remaining: ~1h 18m) 971/1644 tested (782 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 53m, remaining: ~1h 18m) 972/1644 tested (783 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 53m, remaining: ~1h 18m) 974/1644 tested (785 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 53m, remaining: ~1h 17m) 975/1644 tested (786 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 53m, remaining: ~1h 17m) 977/1644 tested (788 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 54m, remaining: ~1h 17m) 978/1644 tested (789 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 54m, remaining: ~1h 17m) 980/1644 tested (791 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 54m, remaining: ~1h 17m) 981/1644 tested (792 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 54m, remaining: ~1h 16m) 983/1644 tested (794 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 54m, remaining: ~1h 16m) 984/1644 tested (795 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 54m, remaining: ~1h 16m) 986/1644 tested (797 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 55m, remaining: ~1h 16m) 987/1644 tested (798 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 55m, remaining: ~1h 16m) 989/1644 tested (800 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 55m, remaining: ~1h 16m) 990/1644 tested (801 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 55m, remaining: ~1h 16m) 991/1644 tested (802 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 55m, remaining: ~1h 15m) 993/1644 tested (804 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 55m, remaining: ~1h 15m) 994/1644 tested (805 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 56m, remaining: ~1h 15m) 996/1644 tested (807 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 56m, remaining: ~1h 15m) 997/1644 tested (808 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 56m, remaining: ~1h 15m) 999/1644 tested (810 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 56m, remaining: ~1h 15m) 1000/1644 tested (811 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 56m, remaining: ~1h 14m) 1002/1644 tested (813 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 56m, remaining: ~1h 14m) 1003/1644 tested (814 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 57m, remaining: ~1h 14m) 1005/1644 tested (816 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 57m, remaining: ~1h 14m) 1006/1644 tested (817 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 57m, remaining: ~1h 14m) 1008/1644 tested (819 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 57m, remaining: ~1h 13m) 1009/1644 tested (820 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 57m, remaining: ~1h 13m) 1011/1644 tested (822 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 57m, remaining: ~1h 13m) 1012/1644 tested (823 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 58m, remaining: ~1h 13m) 1014/1644 tested (825 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 58m, remaining: ~1h 13m) 1015/1644 tested (826 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 58m, remaining: ~1h 12m) 1017/1644 tested (828 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 58m, remaining: ~1h 12m) 1018/1644 tested (829 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 58m, remaining: ~1h 12m) 1020/1644 tested (831 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 58m, remaining: ~1h 12m) 1021/1644 tested (832 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 59m, remaining: ~1h 12m) 1023/1644 tested (834 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 59m, remaining: ~1h 12m) 1024/1644 tested (835 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 59m, remaining: ~1h 11m) 1026/1644 tested (837 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 59m, remaining: ~1h 11m) 1027/1644 tested (838 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 59m, remaining: ~1h 11m) 1029/1644 tested (840 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 59m, remaining: ~1h 11m) 1030/1644 tested (841 survived, 72 timed out)
Mutation testing 62% (elapsed: ~2h 0m, remaining: ~1h 11m) 1032/1644 tested (843 survived, 72 timed out)
Mutation testing 62% (elapsed: ~2h 0m, remaining: ~1h 11m) 1033/1644 tested (844 survived, 72 timed out)
Mutation testing 62% (elapsed: ~2h 0m, remaining: ~1h 10m) 1035/1644 tested (846 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 0m, remaining: ~1h 10m) 1036/1644 tested (847 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 0m, remaining: ~1h 10m) 1037/1644 tested (848 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 0m, remaining: ~1h 10m) 1039/1644 tested (850 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 1m, remaining: ~1h 10m) 1040/1644 tested (851 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 1m, remaining: ~1h 10m) 1042/1644 tested (853 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 1m, remaining: ~1h 9m) 1043/1644 tested (854 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 1m, remaining: ~1h 9m) 1045/1644 tested (856 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 1m, remaining: ~1h 9m) 1046/1644 tested (857 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 1m, remaining: ~1h 9m) 1048/1644 tested (859 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 2m, remaining: ~1h 9m) 1049/1644 tested (860 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 2m, remaining: ~1h 8m) 1051/1644 tested (862 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 2m, remaining: ~1h 8m) 1052/1644 tested (863 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 2m, remaining: ~1h 8m) 1054/1644 tested (865 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 2m, remaining: ~1h 8m) 1055/1644 tested (866 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 2m, remaining: ~1h 8m) 1057/1644 tested (868 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 3m, remaining: ~1h 8m) 1058/1644 tested (869 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 3m, remaining: ~1h 7m) 1060/1644 tested (871 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 3m, remaining: ~1h 7m) 1061/1644 tested (872 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 3m, remaining: ~1h 7m) 1063/1644 tested (874 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 3m, remaining: ~1h 7m) 1064/1644 tested (875 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 3m, remaining: ~1h 7m) 1066/1644 tested (877 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 4m, remaining: ~1h 7m) 1067/1644 tested (878 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 4m, remaining: ~1h 6m) 1069/1644 tested (880 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 4m, remaining: ~1h 6m) 1070/1644 tested (881 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 4m, remaining: ~1h 6m) 1072/1644 tested (883 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 4m, remaining: ~1h 6m) 1073/1644 tested (884 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 4m, remaining: ~1h 6m) 1075/1644 tested (886 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 5m, remaining: ~1h 5m) 1076/1644 tested (887 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 5m, remaining: ~1h 5m) 1078/1644 tested (889 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 5m, remaining: ~1h 5m) 1079/1644 tested (890 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 5m, remaining: ~1h 5m) 1080/1644 tested (891 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 5m, remaining: ~1h 5m) 1082/1644 tested (893 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 5m, remaining: ~1h 5m) 1083/1644 tested (894 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 6m, remaining: ~1h 4m) 1085/1644 tested (896 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 6m, remaining: ~1h 4m) 1086/1644 tested (897 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 6m, remaining: ~1h 4m) 1088/1644 tested (899 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 6m, remaining: ~1h 4m) 1089/1644 tested (900 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 6m, remaining: ~1h 4m) 1091/1644 tested (902 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 6m, remaining: ~1h 4m) 1092/1644 tested (903 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 7m, remaining: ~1h 3m) 1094/1644 tested (905 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 7m, remaining: ~1h 3m) 1095/1644 tested (906 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 7m, remaining: ~1h 3m) 1097/1644 tested (908 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 7m, remaining: ~1h 3m) 1098/1644 tested (909 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 7m, remaining: ~1h 3m) 1100/1644 tested (911 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 7m, remaining: ~1h 3m) 1101/1644 tested (912 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 8m, remaining: ~1h 2m) 1103/1644 tested (914 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 8m, remaining: ~1h 2m) 1104/1644 tested (915 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 8m, remaining: ~1h 2m) 1106/1644 tested (917 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 8m, remaining: ~1h 2m) 1107/1644 tested (918 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 8m, remaining: ~1h 2m) 1109/1644 tested (920 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 8m, remaining: ~1h 1m) 1110/1644 tested (921 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 9m, remaining: ~1h 1m) 1112/1644 tested (923 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 9m, remaining: ~1h 1m) 1113/1644 tested (924 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 9m, remaining: ~1h 1m) 1115/1644 tested (926 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 9m, remaining: ~1h 1m) 1116/1644 tested (927 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 9m, remaining: ~1h 1m) 1118/1644 tested (929 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 9m, remaining: ~1h 0m) 1119/1644 tested (930 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 10m, remaining: ~1h 0m) 1121/1644 tested (932 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 10m, remaining: ~1h 0m) 1122/1644 tested (933 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 10m, remaining: ~1h 0m) 1123/1644 tested (934 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 10m, remaining: ~1h 0m) 1125/1644 tested (936 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 10m, remaining: ~1h 0m) 1126/1644 tested (937 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 10m, remaining: ~59m) 1128/1644 tested (939 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 11m, remaining: ~59m) 1129/1644 tested (940 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 11m, remaining: ~59m) 1131/1644 tested (942 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 11m, remaining: ~59m) 1132/1644 tested (943 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 11m, remaining: ~59m) 1134/1644 tested (945 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 11m, remaining: ~59m) 1135/1644 tested (946 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 11m, remaining: ~58m) 1137/1644 tested (948 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 12m, remaining: ~58m) 1138/1644 tested (949 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 12m, remaining: ~58m) 1140/1644 tested (951 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 12m, remaining: ~58m) 1141/1644 tested (952 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 12m, remaining: ~58m) 1143/1644 tested (954 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 12m, remaining: ~57m) 1144/1644 tested (955 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 12m, remaining: ~57m) 1146/1644 tested (957 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 13m, remaining: ~57m) 1147/1644 tested (958 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 13m, remaining: ~57m) 1149/1644 tested (960 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 13m, remaining: ~57m) 1150/1644 tested (961 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 13m, remaining: ~57m) 1152/1644 tested (963 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 13m, remaining: ~56m) 1153/1644 tested (964 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 13m, remaining: ~56m) 1155/1644 tested (966 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 14m, remaining: ~56m) 1156/1644 tested (967 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 14m, remaining: ~56m) 1158/1644 tested (969 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 14m, remaining: ~56m) 1159/1644 tested (970 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 14m, remaining: ~55m) 1161/1644 tested (972 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 14m, remaining: ~55m) 1162/1644 tested (973 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 14m, remaining: ~55m) 1164/1644 tested (975 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 15m, remaining: ~55m) 1165/1644 tested (976 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 15m, remaining: ~55m) 1166/1644 tested (977 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 15m, remaining: ~55m) 1168/1644 tested (979 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 15m, remaining: ~55m) 1169/1644 tested (980 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 15m, remaining: ~54m) 1171/1644 tested (982 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 15m, remaining: ~54m) 1172/1644 tested (983 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 16m, remaining: ~54m) 1174/1644 tested (985 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 16m, remaining: ~54m) 1175/1644 tested (986 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 16m, remaining: ~54m) 1177/1644 tested (988 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 16m, remaining: ~53m) 1178/1644 tested (989 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 16m, remaining: ~53m) 1180/1644 tested (991 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 16m, remaining: ~53m) 1181/1644 tested (992 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 17m, remaining: ~53m) 1183/1644 tested (994 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 17m, remaining: ~53m) 1184/1644 tested (995 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 17m, remaining: ~53m) 1186/1644 tested (997 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 17m, remaining: ~52m) 1187/1644 tested (998 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 17m, remaining: ~52m) 1189/1644 tested (1000 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 17m, remaining: ~52m) 1190/1644 tested (1001 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 18m, remaining: ~52m) 1192/1644 tested (1003 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 18m, remaining: ~52m) 1193/1644 tested (1004 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 18m, remaining: ~51m) 1195/1644 tested (1006 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 18m, remaining: ~51m) 1196/1644 tested (1007 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 18m, remaining: ~51m) 1198/1644 tested (1009 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 18m, remaining: ~51m) 1199/1644 tested (1010 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 19m, remaining: ~51m) 1201/1644 tested (1012 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 19m, remaining: ~51m) 1202/1644 tested (1013 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 19m, remaining: ~50m) 1204/1644 tested (1015 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 19m, remaining: ~50m) 1205/1644 tested (1016 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 19m, remaining: ~50m) 1207/1644 tested (1018 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 19m, remaining: ~50m) 1208/1644 tested (1019 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 20m, remaining: ~50m) 1209/1644 tested (1020 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 20m, remaining: ~50m) 1211/1644 tested (1022 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 20m, remaining: ~50m) 1212/1644 tested (1023 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 20m, remaining: ~49m) 1214/1644 tested (1025 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 20m, remaining: ~49m) 1215/1644 tested (1026 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 20m, remaining: ~49m) 1217/1644 tested (1028 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 21m, remaining: ~49m) 1218/1644 tested (1029 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 21m, remaining: ~49m) 1220/1644 tested (1031 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 21m, remaining: ~48m) 1221/1644 tested (1032 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 21m, remaining: ~48m) 1223/1644 tested (1034 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 21m, remaining: ~48m) 1224/1644 tested (1035 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 21m, remaining: ~48m) 1226/1644 tested (1037 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 22m, remaining: ~48m) 1227/1644 tested (1038 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 22m, remaining: ~48m) 1229/1644 tested (1040 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 22m, remaining: ~47m) 1230/1644 tested (1041 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 22m, remaining: ~47m) 1232/1644 tested (1043 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 22m, remaining: ~47m) 1233/1644 tested (1044 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 22m, remaining: ~47m) 1235/1644 tested (1046 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 23m, remaining: ~47m) 1236/1644 tested (1047 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 23m, remaining: ~46m) 1238/1644 tested (1049 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 23m, remaining: ~46m) 1239/1644 tested (1050 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 23m, remaining: ~46m) 1241/1644 tested (1052 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 23m, remaining: ~46m) 1242/1644 tested (1053 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 23m, remaining: ~46m) 1244/1644 tested (1055 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 24m, remaining: ~46m) 1245/1644 tested (1056 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 24m, remaining: ~45m) 1247/1644 tested (1058 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 24m, remaining: ~45m) 1248/1644 tested (1059 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 24m, remaining: ~45m) 1250/1644 tested (1061 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 24m, remaining: ~45m) 1251/1644 tested (1062 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 24m, remaining: ~45m) 1252/1644 tested (1063 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 25m, remaining: ~45m) 1254/1644 tested (1065 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 25m, remaining: ~44m) 1255/1644 tested (1066 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 25m, remaining: ~44m) 1257/1644 tested (1068 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 25m, remaining: ~44m) 1258/1644 tested (1069 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 25m, remaining: ~44m) 1260/1644 tested (1071 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 25m, remaining: ~44m) 1261/1644 tested (1072 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 26m, remaining: ~44m) 1263/1644 tested (1074 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 26m, remaining: ~43m) 1264/1644 tested (1075 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 26m, remaining: ~43m) 1266/1644 tested (1077 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 26m, remaining: ~43m) 1267/1644 tested (1078 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 26m, remaining: ~43m) 1269/1644 tested (1080 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 26m, remaining: ~43m) 1270/1644 tested (1081 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 27m, remaining: ~42m) 1272/1644 tested (1083 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 27m, remaining: ~42m) 1273/1644 tested (1084 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 27m, remaining: ~42m) 1275/1644 tested (1086 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 27m, remaining: ~42m) 1276/1644 tested (1087 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 27m, remaining: ~42m) 1278/1644 tested (1089 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 27m, remaining: ~42m) 1279/1644 tested (1090 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 28m, remaining: ~41m) 1281/1644 tested (1092 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 28m, remaining: ~41m) 1282/1644 tested (1093 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 28m, remaining: ~41m) 1284/1644 tested (1095 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 28m, remaining: ~41m) 1285/1644 tested (1096 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 28m, remaining: ~41m) 1287/1644 tested (1098 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 28m, remaining: ~41m) 1288/1644 tested (1099 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 29m, remaining: ~40m) 1290/1644 tested (1101 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 29m, remaining: ~40m) 1291/1644 tested (1102 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 29m, remaining: ~40m) 1293/1644 tested (1104 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 29m, remaining: ~40m) 1294/1644 tested (1105 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 29m, remaining: ~40m) 1295/1644 tested (1106 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 29m, remaining: ~40m) 1297/1644 tested (1108 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 30m, remaining: ~39m) 1298/1644 tested (1109 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 30m, remaining: ~39m) 1300/1644 tested (1111 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 30m, remaining: ~39m) 1301/1644 tested (1112 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 30m, remaining: ~39m) 1303/1644 tested (1114 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 30m, remaining: ~39m) 1304/1644 tested (1115 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 30m, remaining: ~39m) 1306/1644 tested (1117 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 31m, remaining: ~38m) 1307/1644 tested (1118 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 31m, remaining: ~38m) 1309/1644 tested (1120 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 31m, remaining: ~38m) 1310/1644 tested (1121 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 31m, remaining: ~38m) 1312/1644 tested (1123 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 31m, remaining: ~38m) 1313/1644 tested (1124 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 31m, remaining: ~37m) 1315/1644 tested (1126 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 32m, remaining: ~37m) 1316/1644 tested (1127 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 32m, remaining: ~37m) 1318/1644 tested (1129 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 32m, remaining: ~37m) 1319/1644 tested (1130 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 32m, remaining: ~37m) 1321/1644 tested (1132 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 32m, remaining: ~37m) 1322/1644 tested (1133 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 32m, remaining: ~36m) 1324/1644 tested (1135 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 33m, remaining: ~36m) 1325/1644 tested (1136 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 33m, remaining: ~36m) 1327/1644 tested (1138 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 33m, remaining: ~36m) 1328/1644 tested (1139 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 33m, remaining: ~36m) 1330/1644 tested (1141 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 33m, remaining: ~36m) 1331/1644 tested (1142 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 33m, remaining: ~35m) 1333/1644 tested (1144 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 34m, remaining: ~35m) 1334/1644 tested (1145 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 34m, remaining: ~35m) 1336/1644 tested (1147 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 34m, remaining: ~35m) 1337/1644 tested (1148 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 34m, remaining: ~35m) 1339/1644 tested (1150 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 34m, remaining: ~35m) 1340/1644 tested (1151 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 34m, remaining: ~34m) 1341/1644 tested (1152 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 35m, remaining: ~34m) 1343/1644 tested (1154 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 35m, remaining: ~34m) 1344/1644 tested (1155 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 35m, remaining: ~34m) 1346/1644 tested (1157 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 35m, remaining: ~34m) 1347/1644 tested (1158 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 35m, remaining: ~34m) 1349/1644 tested (1160 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 35m, remaining: ~33m) 1350/1644 tested (1161 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 36m, remaining: ~33m) 1352/1644 tested (1163 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 36m, remaining: ~33m) 1353/1644 tested (1164 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 36m, remaining: ~33m) 1355/1644 tested (1166 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 36m, remaining: ~33m) 1356/1644 tested (1167 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 36m, remaining: ~32m) 1358/1644 tested (1169 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 36m, remaining: ~32m) 1359/1644 tested (1170 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 37m, remaining: ~32m) 1361/1644 tested (1172 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 37m, remaining: ~32m) 1362/1644 tested (1173 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 37m, remaining: ~32m) 1364/1644 tested (1175 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 37m, remaining: ~32m) 1365/1644 tested (1176 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 37m, remaining: ~31m) 1367/1644 tested (1178 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 37m, remaining: ~31m) 1368/1644 tested (1179 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 38m, remaining: ~31m) 1370/1644 tested (1181 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 38m, remaining: ~31m) 1371/1644 tested (1182 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 38m, remaining: ~31m) 1373/1644 tested (1184 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 38m, remaining: ~31m) 1374/1644 tested (1185 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 38m, remaining: ~30m) 1376/1644 tested (1187 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 38m, remaining: ~30m) 1377/1644 tested (1188 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 39m, remaining: ~30m) 1379/1644 tested (1190 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 39m, remaining: ~30m) 1380/1644 tested (1191 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 39m, remaining: ~30m) 1382/1644 tested (1193 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 39m, remaining: ~30m) 1383/1644 tested (1194 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 39m, remaining: ~29m) 1384/1644 tested (1195 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 39m, remaining: ~29m) 1386/1644 tested (1197 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 40m, remaining: ~29m) 1387/1644 tested (1198 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 40m, remaining: ~29m) 1389/1644 tested (1200 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 40m, remaining: ~29m) 1390/1644 tested (1201 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 40m, remaining: ~29m) 1392/1644 tested (1203 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 40m, remaining: ~28m) 1393/1644 tested (1204 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 40m, remaining: ~28m) 1395/1644 tested (1206 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 41m, remaining: ~28m) 1396/1644 tested (1207 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 41m, remaining: ~28m) 1398/1644 tested (1209 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 41m, remaining: ~28m) 1399/1644 tested (1210 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 41m, remaining: ~28m) 1401/1644 tested (1212 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 41m, remaining: ~27m) 1402/1644 tested (1213 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 41m, remaining: ~27m) 1404/1644 tested (1215 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 42m, remaining: ~27m) 1405/1644 tested (1216 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 42m, remaining: ~27m) 1407/1644 tested (1218 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 42m, remaining: ~27m) 1408/1644 tested (1219 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 42m, remaining: ~26m) 1410/1644 tested (1221 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 42m, remaining: ~26m) 1411/1644 tested (1222 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 42m, remaining: ~26m) 1413/1644 tested (1224 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 43m, remaining: ~26m) 1414/1644 tested (1225 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 43m, remaining: ~26m) 1416/1644 tested (1227 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 43m, remaining: ~26m) 1417/1644 tested (1228 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 43m, remaining: ~25m) 1419/1644 tested (1230 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 43m, remaining: ~25m) 1420/1644 tested (1231 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 43m, remaining: ~25m) 1422/1644 tested (1233 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 44m, remaining: ~25m) 1423/1644 tested (1234 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 44m, remaining: ~25m) 1425/1644 tested (1236 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 44m, remaining: ~25m) 1426/1644 tested (1237 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 44m, remaining: ~24m) 1428/1644 tested (1239 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 44m, remaining: ~24m) 1429/1644 tested (1240 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 44m, remaining: ~24m) 1430/1644 tested (1241 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 45m, remaining: ~24m) 1432/1644 tested (1243 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 45m, remaining: ~24m) 1433/1644 tested (1244 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 45m, remaining: ~24m) 1435/1644 tested (1246 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 45m, remaining: ~23m) 1436/1644 tested (1247 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 45m, remaining: ~23m) 1438/1644 tested (1249 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 45m, remaining: ~23m) 1439/1644 tested (1250 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 46m, remaining: ~23m) 1441/1644 tested (1252 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 46m, remaining: ~23m) 1442/1644 tested (1253 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 46m, remaining: ~23m) 1444/1644 tested (1255 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 46m, remaining: ~22m) 1445/1644 tested (1256 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 46m, remaining: ~22m) 1447/1644 tested (1258 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 46m, remaining: ~22m) 1448/1644 tested (1259 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 47m, remaining: ~22m) 1450/1644 tested (1261 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 47m, remaining: ~22m) 1451/1644 tested (1262 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 47m, remaining: ~21m) 1453/1644 tested (1264 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 47m, remaining: ~21m) 1454/1644 tested (1265 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 47m, remaining: ~21m) 1456/1644 tested (1267 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 47m, remaining: ~21m) 1457/1644 tested (1268 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 48m, remaining: ~21m) 1459/1644 tested (1270 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 48m, remaining: ~21m) 1460/1644 tested (1271 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 48m, remaining: ~20m) 1462/1644 tested (1273 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 48m, remaining: ~20m) 1463/1644 tested (1274 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 48m, remaining: ~20m) 1465/1644 tested (1276 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 48m, remaining: ~20m) 1466/1644 tested (1277 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 49m, remaining: ~20m) 1468/1644 tested (1279 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 49m, remaining: ~20m) 1469/1644 tested (1280 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 49m, remaining: ~19m) 1471/1644 tested (1282 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 49m, remaining: ~19m) 1472/1644 tested (1283 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 49m, remaining: ~19m) 1473/1644 tested (1284 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 49m, remaining: ~19m) 1475/1644 tested (1286 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 50m, remaining: ~19m) 1476/1644 tested (1287 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 50m, remaining: ~19m) 1478/1644 tested (1289 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 50m, remaining: ~19m) 1479/1644 tested (1290 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 50m, remaining: ~18m) 1481/1644 tested (1292 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 50m, remaining: ~18m) 1482/1644 tested (1293 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 50m, remaining: ~18m) 1484/1644 tested (1295 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 51m, remaining: ~18m) 1485/1644 tested (1296 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 51m, remaining: ~18m) 1487/1644 tested (1298 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 51m, remaining: ~17m) 1488/1644 tested (1299 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 51m, remaining: ~17m) 1490/1644 tested (1301 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 51m, remaining: ~17m) 1491/1644 tested (1302 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 51m, remaining: ~17m) 1493/1644 tested (1304 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 52m, remaining: ~17m) 1494/1644 tested (1305 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 52m, remaining: ~17m) 1496/1644 tested (1307 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 52m, remaining: ~16m) 1497/1644 tested (1308 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 52m, remaining: ~16m) 1499/1644 tested (1310 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 52m, remaining: ~16m) 1500/1644 tested (1311 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 52m, remaining: ~16m) 1502/1644 tested (1313 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 53m, remaining: ~16m) 1503/1644 tested (1314 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 53m, remaining: ~15m) 1505/1644 tested (1316 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 53m, remaining: ~15m) 1506/1644 tested (1317 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 53m, remaining: ~15m) 1508/1644 tested (1319 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 53m, remaining: ~15m) 1509/1644 tested (1320 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 53m, remaining: ~15m) 1511/1644 tested (1322 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 54m, remaining: ~15m) 1512/1644 tested (1323 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 54m, remaining: ~14m) 1514/1644 tested (1325 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 54m, remaining: ~14m) 1515/1644 tested (1326 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 54m, remaining: ~14m) 1516/1644 tested (1327 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 54m, remaining: ~14m) 1518/1644 tested (1329 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 54m, remaining: ~14m) 1519/1644 tested (1330 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 55m, remaining: ~14m) 1521/1644 tested (1332 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 55m, remaining: ~14m) 1522/1644 tested (1333 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 55m, remaining: ~13m) 1524/1644 tested (1335 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 55m, remaining: ~13m) 1525/1644 tested (1336 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 55m, remaining: ~13m) 1527/1644 tested (1338 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 55m, remaining: ~13m) 1528/1644 tested (1339 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 56m, remaining: ~13m) 1530/1644 tested (1341 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 56m, remaining: ~13m) 1531/1644 tested (1342 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 56m, remaining: ~12m) 1533/1644 tested (1344 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 56m, remaining: ~12m) 1534/1644 tested (1345 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 56m, remaining: ~12m) 1536/1644 tested (1347 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 56m, remaining: ~12m) 1537/1644 tested (1348 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 57m, remaining: ~12m) 1539/1644 tested (1350 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 57m, remaining: ~11m) 1540/1644 tested (1351 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 57m, remaining: ~11m) 1542/1644 tested (1353 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 57m, remaining: ~11m) 1543/1644 tested (1354 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 57m, remaining: ~11m) 1545/1644 tested (1356 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 57m, remaining: ~11m) 1546/1644 tested (1357 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 58m, remaining: ~11m) 1548/1644 tested (1359 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 58m, remaining: ~10m) 1549/1644 tested (1360 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 58m, remaining: ~10m) 1551/1644 tested (1362 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 58m, remaining: ~10m) 1552/1644 tested (1363 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 58m, remaining: ~10m) 1554/1644 tested (1365 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 58m, remaining: ~10m) 1555/1644 tested (1366 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 59m, remaining: ~10m) 1557/1644 tested (1368 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 59m, remaining: ~9m) 1558/1644 tested (1369 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 59m, remaining: ~9m) 1559/1644 tested (1370 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 59m, remaining: ~9m) 1561/1644 tested (1372 survived, 72 timed out)
Mutation testing 95% (elapsed: ~2h 59m, remaining: ~9m) 1562/1644 tested (1373 survived, 72 timed out)
Mutation testing 95% (elapsed: ~2h 59m, remaining: ~9m) 1564/1644 tested (1375 survived, 72 timed out)
Mutation testing 95% (elapsed: ~3h 0m, remaining: ~9m) 1565/1644 tested (1376 survived, 72 timed out)
Mutation testing 95% (elapsed: ~3h 0m, remaining: ~8m) 1567/1644 tested (1378 survived, 72 timed out)
Mutation testing 95% (elapsed: ~3h 0m, remaining: ~8m) 1568/1644 tested (1379 survived, 72 timed out)
Mutation testing 95% (elapsed: ~3h 0m, remaining: ~8m) 1570/1644 tested (1381 survived, 72 timed out)
Mutation testing 95% (elapsed: ~3h 0m, remaining: ~8m) 1571/1644 tested (1382 survived, 72 timed out)
Mutation testing 95% (elapsed: ~3h 0m, remaining: ~8m) 1573/1644 tested (1384 survived, 72 timed out)
Mutation testing 95% (elapsed: ~3h 1m, remaining: ~8m) 1574/1644 tested (1385 survived, 72 timed out)
Mutation testing 95% (elapsed: ~3h 1m, remaining: ~7m) 1576/1644 tested (1387 survived, 72 timed out)
Mutation testing 95% (elapsed: ~3h 1m, remaining: ~7m) 1577/1644 tested (1388 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 1m, remaining: ~7m) 1579/1644 tested (1390 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 1m, remaining: ~7m) 1580/1644 tested (1391 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 1m, remaining: ~7m) 1582/1644 tested (1393 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 2m, remaining: ~7m) 1583/1644 tested (1394 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 2m, remaining: ~6m) 1585/1644 tested (1396 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 2m, remaining: ~6m) 1586/1644 tested (1397 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 2m, remaining: ~6m) 1588/1644 tested (1399 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 2m, remaining: ~6m) 1589/1644 tested (1400 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 2m, remaining: ~6m) 1591/1644 tested (1402 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 3m, remaining: ~5m) 1592/1644 tested (1403 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 3m, remaining: ~5m) 1594/1644 tested (1405 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 3m, remaining: ~5m) 1595/1644 tested (1406 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 3m, remaining: ~5m) 1597/1644 tested (1408 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 3m, remaining: ~5m) 1598/1644 tested (1409 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 3m, remaining: ~5m) 1599/1644 tested (1410 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 4m, remaining: ~4m) 1601/1644 tested (1412 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 4m, remaining: ~4m) 1602/1644 tested (1413 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 4m, remaining: ~4m) 1604/1644 tested (1415 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 4m, remaining: ~4m) 1605/1644 tested (1416 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 4m, remaining: ~4m) 1607/1644 tested (1418 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 4m, remaining: ~4m) 1608/1644 tested (1419 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 5m, remaining: ~3m) 1610/1644 tested (1421 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 5m, remaining: ~3m) 1611/1644 tested (1422 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 5m, remaining: ~3m) 1613/1644 tested (1424 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 5m, remaining: ~3m) 1614/1644 tested (1425 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 5m, remaining: ~3m) 1616/1644 tested (1427 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 5m, remaining: ~3m) 1617/1644 tested (1428 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 6m, remaining: ~2m) 1619/1644 tested (1430 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 6m, remaining: ~2m) 1620/1644 tested (1431 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 6m, remaining: ~2m) 1622/1644 tested (1433 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 6m, remaining: ~2m) 1623/1644 tested (1434 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 6m, remaining: ~2m) 1625/1644 tested (1436 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 6m, remaining: ~2m) 1626/1644 tested (1437 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 7m, remaining: ~1m) 1628/1644 tested (1439 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 7m, remaining: ~1m) 1629/1644 tested (1440 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 7m, remaining: ~1m) 1631/1644 tested (1442 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 7m, remaining: ~1m) 1632/1644 tested (1443 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 7m, remaining: ~1m) 1634/1644 tested (1445 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 7m, remaining: ~1m) 1635/1644 tested (1446 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 8m, remaining: <1m) 1637/1644 tested (1448 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 8m, remaining: <1m) 1638/1644 tested (1449 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 8m, remaining: <1m) 1640/1644 tested (1451 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 8m, remaining: <1m) 1641/1644 tested (1452 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 8m, remaining: <1m) 1642/1644 tested (1453 survived, 72 timed out)

All tests
  ✓ All tests (killed 117)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (false) {

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (1 === 0) {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promises", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap(null, definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap(definition, "promise");

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           null("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(null, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(42, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap({}, definition);

[Survived] PrecomputedMutator
q.js:42:16
-       } else if (typeof exports === "object" && typeof module === "object") {
+       } else if (true) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (true) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (1 < 2) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (function () {
+     return {
+       foo: 'bar'
+     };
+   }) {

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           null(definition);

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (false) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "function") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined") {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (1 === 2) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.noConflict()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!false()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (false) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if ('undefined' === typeof window) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (Object.prototype.toString.call(window) === '[object global]') {

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = noop();

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   null();

[Survived] PrecomputedMutator
q.js:125:23
-               runSingle(task, domain);
+               runSingle(() => task(), domain);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (0) {

[Survived] PrecomputedMutator
q.js:130:23
-               runSingle(task);
+               runSingle(noop);

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (0) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (true) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (false) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (null) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       global.Q.exit();

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       null();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(requestAnimationFrame(flush));

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   0(flush, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(alert('Flushing the queue'), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(console.log('Flushing the queue'), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, '1');

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (false) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (null) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (undefined) {

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (global.domain) {

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               null();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (1 < 2) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (false) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (1 > 0) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "undefined" || true) {

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(function () {
+     return flush();
+   }, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind({}, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:206:17
-                   setImmediate(flush);
+                   0(flush);

[Survived] PrecomputedMutator
q.js:206:17
-                   setImmediate(flush);
+                   requestAnimationFrame(flush);

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(function () {});

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(1);

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (false) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (0) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if ('undefined') {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               null(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage('some string');

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage({
+     foo: 'bar'
+   });

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush.bind(null));

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               0 === 1(flush, 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(null);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(function () {/* do nothing */});

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               undefined(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               alert(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(function () {}, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(1 + 1, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush.bind(this), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (this.flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (this.length > 0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (index < this.length - 1) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (null);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (true) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index > length) {

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index > length; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index == length; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index + 1) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = index + 1) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (0 in this) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (this.hasOwnProperty(index)) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(null);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(new Date());

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback + 1(basis, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, 0, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this.length, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], null);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], 42);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], this);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i !== this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; Math.random()) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; array_indexOf(value, this)) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (i === value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] === undefined) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (0 === value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               Math.random(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               callback.length(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback(value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(null, [value, index, self]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(self, index, value, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(42, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(function () {}, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, 42, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, this, index, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, 5));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, function () {}));

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in Object.prototype) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object.hasOwnProperty(key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (Array.prototype.hasOwnProperty.call(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(this)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(window)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(Math)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (null(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (Array.isArray(object, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, "toString")) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, null)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, 1)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(null);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(42);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           '[object Object]'(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           1(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(null) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString({}) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString([]) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof globalThis.ReturnValue !== "undefined") {

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof someUndefinedVariable !== "undefined") {

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (promise.stack && typeof error === "object" && error !== null && error.stack && hasStacks

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p ? 1 : 0; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p.source; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p instanceof Error; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; null) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; 1) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; ''.source) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ < p.stackCounter) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(null);

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty({});

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   Object.defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(null, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(42, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(function () {}, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, this.__minimumStackCounter__, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, Math.random(), {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, new Date().getTime(), {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift("error.stackStrace");

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(Math.random());

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(Array(100).join('\n'));

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.concat.join("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join(" From previous event:\n");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(error.stack.toString());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(promise.stack);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(new Error().stack);

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(null);

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, error.stack.toString(), {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(";\n");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\n---\n");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > -1; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i in lines; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i + 1) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; Math.random()) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (line !== null && line !== undefined && !isInternalFrame(line) && !isNodeFrame(line)) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!(isInternalFrame(line) || isNodeFrame(line)) && line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!object_hasOwnProperty(window, 'line') && !isInternalFrame(line) && !isNodeFrame(line)) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!typeof isInternalFrame !== 'function'(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(false) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !typeof isNodeFrame !== 'function'(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !false(line) && line) {

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("<br>");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.lastIndexOf("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(node)") !== -1;

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(node.exe)") !== -1;

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec("1: " + stackLine);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.toUpperCase());

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(global.stackLine);

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (null) {

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (0) {

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if ('') {

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], value.length(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(value.length)];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(this.value)];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[2])];

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2 || []) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2 || null) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2 || {
+     foo: 'bar'
+   }) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(Infinity)];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(1 / 0)];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(new Date())];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec("[object GlobalError]");

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(/.*@(.+):(\d+)$/g);

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (/.*@(.+):(\d+)$/.exec(stackLine)[0]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (/.*@(.+):(\d+)$/.exec(null)) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (/.*@(.+):(\d+)$/.exec("some string")) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "0"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], true(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(1)];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number('PLACEHOLDER')];

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = null(stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = [](stackLine);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine + 'modified');

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(window.stackLine);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (typeof fileNameAndLineNumber === 'undefined') {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (!Array.isArray(fileNameAndLineNumber)) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (typeof hasStacks === "undefined") {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks === null) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\n<script>console.log('This is an injected script');</script>\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\n<!-- This is an injected comment -->\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\n" + Math.random() + "\n");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = "PLACEHOLDER".indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("<@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("@module.js") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("@ line 1") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (typeof fileNameAndLineNumber === 'undefined') {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (true) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (1 < 2) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof window !== "undefined" && typeof window.console === "object" && typeof window.console.warn === "function") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.bind(null, 1), arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, [].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, Object.keys(arguments));

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, arguments.callee);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (Object.prototype.toString.call(value) === '[object Promise]') {

[Survived] PrecomputedMutator
q.js:506:9
-       if (isPromiseAlike(value)) {
+       if (value && typeof value === 'object' && typeof value.then === 'function') {

[Survived] PrecomputedMutator
q.js:506:24
-       if (isPromiseAlike(value)) {
+       if (isPromiseAlike(value || true)) {

[Survived] PrecomputedMutator
q.js:507:23
-           return coerce(value);
+           return coerce(value || true);

[Survived] PrecomputedMutator
q.js:507:23
-           return coerce(value);
+           return coerce(value ? value : 42);

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create({});

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(null);

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(Object.create(Array.prototype));

[Survived] PrecomputedMutator
q.js:562:32
-           var args = array_slice(arguments);
+           var args = array_slice([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:562:32
-           var args = array_slice(arguments);
+           var args = array_slice(Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:562:32
-           var args = array_slice(arguments);
+           var args = array_slice([...arguments]);

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && "someString") { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "then") { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (operands[0]) { // progress operand

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(1);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(null);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(messages[0][1]);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(deferred, args);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(null);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(new Promise(function () {}));

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(Promise.resolve());

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue instanceof Promise) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (false(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (null(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (messages.length(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(true)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(null)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (this.inspect() === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (typeof resolvedPromise === 'undefined') {

[Survived] PrecomputedMutator
q.js:591:16
-           return resolvedPromise.inspect();
+           return resolvedPromise.then();

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:604:29
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.message(e.stack.indexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.split("\n").length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.search("\n"));

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(e.stack.substring(e.stack.indexOf("\n") + 2)) + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (1) {

[Survived] PrecomputedMutator
q.js:638:16
-           become(Q(value));
+           become(new Q(value));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(new Promise(resolve => resolve(value)));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(new Value(value)));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(this));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(new Error('Replacement error')));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   null(progress);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(null);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener({});

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress + 1);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (Q.resolve()) {

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(null);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(true);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject({});

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (false) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (true) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments[0] === undefined) {

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve([]);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(function () {});

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(Array.prototype.slice.call(arguments, 0)));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice([].slice.call(arguments, 1)));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(arguments.callee.caller(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice([1, 2, 3], 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice({
+     value: 'foo'
+   }, 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, arguments.length > 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, this.resolve(value, undefined)));

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (Object.prototype.toString.call(resolver) !== "[object Function]") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== typeof Function) {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = null();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = Math.random();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver([deferred.resolve, deferred.reject, deferred.notify][Math.floor(Math.random() * 3)]);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve.bind(null, 'hacked value'));

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           [](deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           null(deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           0(deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve(null), deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, function () {
+     throw new Error('Rejecting the promise');
+   }, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(new Error('Buggy Reason'));

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(Q.reject('Buggy Reason'));

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Promise(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return null(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(0).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(null).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(null);

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([[this, that]]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([null, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x == y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x.valueOf() === y.valueOf()) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (Object.is(x, y)) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > -1; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; Q.resolve(null)) {

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(null).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(deferred.resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(deferred.reject, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, function () {});

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return this['then'](Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(function () {
+     return Q();
+   });

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== undefined) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== null) {

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call([]);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(function () {});

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.apply(promise, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "notAnOp", args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, 123, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, promise, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, []);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, null);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, {
+     op: 'some_random_op'
+   });

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("Buggy error message"));

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.reason) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled" || inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "settled") {

[Survived] PrecomputedMutator
q.js:854:54
-               return typeof fulfilled === "function" ? fulfilled(value) : value;
+               return typeof fulfilled === "function" ? fulfilled || 0(value) : value;

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(new Error("New error message"), self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong({}, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(Q.reject("Rejection message"), self);

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(value + 1) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(this.value) : value;

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = Promise.resolve(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = null(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = 42(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(2 * value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(promise.value);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (() => {}) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (console.log) {

[Survived] PrecomputedMutator
q.js:903:17
-                   Q.onerror(e);
+                   console.error(e);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(new Error());

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(Promise.reject('An error occurred'));

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw === false) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.resolve(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue + 1);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(Q(newValue));

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return promise.constructor.prototype.tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Promise.resolve()).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(new Promise(function () {})).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Q.reject(new Error('Buggy!'))).tap(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(() => callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.bind(this));

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value + 1).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(Promise.resolve());

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(Q(value));

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(value + 1);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return value.then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(null).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(() => fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(Math.max, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(deferred.resolve, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function () {
+     return rejected.apply(this, arguments);
+   }, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function () {
+     return rejected(exception, self);
+   }, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function () {
+     return progressed.apply(this, arguments);
+   });

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed.bind(null));

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, Math.max);

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return this.catch(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     throw value;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function (value) {
+     return value + 1;
+   });

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Promise.resolve(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.reject(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Promise.resolve()).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(new Promise(() => {})).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Q.reject(new Error('Bug'))).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(() => {/* empty arrow function */});

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(() => {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(() => {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Promise.reject(reason);

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Q.reject(promise).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Promise.resolve()).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.reject(reason)).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(new Error('Buggy reason'));

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(reason.message);

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value instanceof Promise) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (Object.prototype.toString.call(value) === '[object Promise]') {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value.constructor.name === 'Promise') {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value && value.then(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (typeof value === 'object' && value.then && value.then.constructor === Function(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(null)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value.then(function () {
+     return value;
+   }))) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.value === null) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.hasOwnProperty("value")) {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return typeof value === 'object' && value !== null && typeof value.then === 'function'(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return value instanceof Promise || value.constructor.name === 'Promise'(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(false) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(null) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(new Proxy({}, {
+     get: function () {
+       throw new Error('Unauthorized access');
+     }
+   })) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && global.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return {}().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(true) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(null) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(this) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:34
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object) || null.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return false(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return 0(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return null(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(false) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(null) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(this) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && false().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && null().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && {}['state']().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return this.inspect.state().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (0) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (null) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (null) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.some(p => p === promise)) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf([], promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.slice(), promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, null) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, {
+     then: function () {}
+   }) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledrejection", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledException", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", null, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", {}, promise);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, {});

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, this);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push({});

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(unhandledReasons);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.splice(promise);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push({});

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack) {

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push("reason stack");

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(null);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason['stack']);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.unshift("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           console.error("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push("<an error occurred>");

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(reason);

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(new Error(reason));

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (0) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf({
+     push: function () {}
+   }, promise);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, 123);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, {});

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (unhandledRejections.indexOf(promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (typeof at !== "number") {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([]);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, {});

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, []);

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (true) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === unhandledRejections.length) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport > -1) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", "some random string", promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[Math.floor(Math.random() * unhandledReasons.length)], promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], Q.reject("some random reason"));

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit(false, unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit(null, unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit(unhandledReasons[at], unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", null, promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", {}, promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], null);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], {});

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(0);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.length--(atReport, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length, 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(unhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons.slice(at));

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons.length, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(null, 1);

[Survived] PrecomputedMutator
q.js:1118:12
-       return unhandledReasons.slice();
+       return unhandledReasons.concat();

[Survived] PrecomputedMutator
q.js:1126:1
-   resetUnhandledRejections();
+   Q.resetUnhandledRejections = resetUnhandledRejections();

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (0) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (untrackRejection.bind(this)) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection({});

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(Q);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection([]);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, {});

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, new Error('Unhandled rejection'));

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === null || name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name !== null && name !== 'undefined') {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (typeof name !== 'undefined') {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(thisp, [args]);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(5, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, {
+     length: 0
+   });

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(null);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(this);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value.constructor.prototype);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value.apply(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return Function.prototype.apply(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return Math.max(value, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(thisp, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(0, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, []);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, null);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(null);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(123);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply([], args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.keys(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Reflect.ownKeys(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.getOwnPropertyNames(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys({});

[Survived] PrecomputedMutator
q.js:1204:13
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise['then'](deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(new Error('Buggy code fragment'));

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(this);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return null(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch([], op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(function () {}, op, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, null);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return null();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return value.spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(null).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(42).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(this).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(function () {
+     throw new Error('Buggy replacement');
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(this, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, function () {});

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, 'rejected');

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.call(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(true, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply([], array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, Object.create(null));

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, function () {
+     return this;
+   }());

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (generator.constructor.name === "GeneratorFunction") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (generator.constructor.prototype.constructor.name === "GeneratorFunction") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (generator.constructor.prototype.constructor.name === "GeneratorFunction" && typeof generator.return === "function") {

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generator.verb(arg);

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generator['next'](arg);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](1);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return Promise.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return deferred.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(null);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(true);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (Object.prototype.toString.call(result.value) === "[object Promise]") {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value && result.value.constructor.name === "Promise") {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (typeof result.value.then === "function") {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(null);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value + 1);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result['value'], callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(function () {
+     return result.value;
+   }(), callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, function () {}, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback.bind(this), errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback(result), errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, function () {});

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, 5);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = generator.verb(arg);

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = generator["" + verb](arg);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](123);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](function () {});

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.message === "Generator completed") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (true) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception instanceof Error) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if ({}(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(new Error('generator error'))) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(null);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(false);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(new Error('Dummy error'));

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return deferred.reject(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(new Error('Generator Error'));

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject({});

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(null);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when([]);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(null);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Promise.resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when([], callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when({}, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, callback.bind(this), errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, function () {
+     callback();
+   }, errback);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(window, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(() => this, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, Array.from(arguments));

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, [...arguments]);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, Object.assign([], arguments));

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(this, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(window, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(function () {
+     return continuer;
+   }, "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "next".toUpperCase());

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, Symbol("next"));

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "thrown");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "throw", undefined);

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "someInvalidOperation");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(function () {}, "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(callback, "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "continue");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "break");

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Promise.resolve(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Math.random(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done([](makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(function* () {})());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(42)());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, null(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(1)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(this);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(globalThis);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(null);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return Reflect.apply(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return Function.prototype.apply(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(this, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(global, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, []);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, this);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, 42);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(null);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch([]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch({
+     op: 'get',
+     args: ['property']
+   });

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Object.dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(this).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(Promise.resolve()).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(null, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, []);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, {
+     foo: 'bar'
+   });

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.promise(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           Math.random(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, null, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, {
+     length: 0
+   });

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.when("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return null(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return {}(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q([]).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("GET", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch(Symbol("get"), [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch(() => "get", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", null);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", {});

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", function () {/* empty function */});

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("GET", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", []);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", {
+     key: 'value'
+   });

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("GET", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch(null, [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch(() => "get", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", []);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", {});

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", this);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch([]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("nonexistentMethod");

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch([key, Q(value)]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Object.prototype.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Math.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", {});

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch([]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(this);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(Math.random());

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return null.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.promiseDispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("__set__", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(null, [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(this.del, [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", []);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", arguments[1]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", this);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("splice", [key, 1]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return null(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return 5(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(null).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q([]).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(function () {}).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", []);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", {});

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", null);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch(["remove", key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return deferred.resolveThrown("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return deferred.promise("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch(null, [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("splice", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch(function () {
+     return 42;
+   }, [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", this);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", null);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", Promise.resolve());

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return null(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.when(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(0).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(Promise.resolve()).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("POST", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", []);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", null);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", this);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, {
+     args: args
+   }]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("Post", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, Q(args)]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("POST", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch(null, [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", []);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", null);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", this);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, arguments]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, 123]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("anotherMethod", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(true).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("POST", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, Array.prototype.slice.call(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, arguments.slice(1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, [].slice.call(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([name])]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([])]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, arguments.callee.caller.arguments(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, null(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, this(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(null, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(function () {
+     return 42;
+   }, 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, null)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("POST", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, 123]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("POST", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch(function () {}, [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", null);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", []);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([])]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(this)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(function () {})]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, arguments.length)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [1, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("spread", [args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(42).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(this).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", args);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", null, args);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("spy", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("applay", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch(123, [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", args);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Object.prototype.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.apply("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return {}(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(5).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(() => {}).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apPLY", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("applyFn", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch(this.apply, [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(Array.prototype.slice.call(arguments))]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, [].slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(Array.prototype.slice.call(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([].slice.call(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments.slice(1), 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("spy", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch(["apply", array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apPLY", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("applyShim", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("splice", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", []);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", arguments);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", this);

[Survived] PrecomputedMutator
q.js:1527:44
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, Array.prototype.slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:44
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, null(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(123)]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(5);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(window);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(Array.prototype.slice.call(arguments, 2));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 2));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments.slice(2));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(Array.prototype.slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments[0], 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, args.length > 0 ? args : [null]);

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               [].concat(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args.slice(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat([])

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(null)

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat([1, 2, 3])

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments.callee(arguments))

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = arguments(arguments);

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = [].slice(arguments);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice([]);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice({
+     length: 0
+   });

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               [](array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat([])

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(this.arguments)

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments[0])

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments.callee(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(null(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(eval(arguments))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(123))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", ["dummy"]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return null(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q({}).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(null).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("nonexistentKey", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", Object.keys(this));

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", function () {
+     return 42;
+   });

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("nonexistentMethod", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("nonexistentKey", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", Object.keys(this));

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", function () {
+     return 42;
+   });

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   snapshot.state === "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   isPromise(promise) && (snapshot = promise.inspect()).state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   snapshot.value !== undefined

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   typeof promise === 'object'(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   promise instanceof Object(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   true(promise) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(Promise.resolve()) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(null) &&

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify(null);

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               this.resolve(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               Promise.resolve(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(null);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(function () {
+     return "I am a buggy function";
+   });

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (Object.keys(promises).length === 0) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Promise.resolve();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           Promise.resolve(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           this.constructor(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(null, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(Promise.resolve(), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(this, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, function () {}, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, this, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, function () {}, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, this, onProgress);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promises[index]);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(this);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (true) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(new Error("This is a buggy error"));

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any([]);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Q.resolve());

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(function allResolvedBad() {
+     return Q.resolve([]);
+   }, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(function allResolvedBad(promises) {
+     return Q.all(promises);
+   }, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(function allResolvedBad(promises) {
+     return Q.all(promises).then(function (results) {
+       return array_map(results, function (promise) {
+         return Q.reject(promise);
+       });
+     });
+   }, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, function () {
+     return [];
+   }, "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "spread", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Array);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.when);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.all);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(Object.values(promises), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.filter(x => x), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Promise.resolve());

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject(new Error('Placeholder error')));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(new Promise(resolve => resolve(null)));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(Promise.resolve(), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(null, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(function () {}, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, Promise.resolve(), noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function () {
+     throw new Error('Buggy error');
+   }, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function (value) {
+     deferred.resolve(value + 1);
+   }, noop);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function () {
+     throw new Error('Buggy replacement');
+   });

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, null);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function () {
+     return undefined;
+   });

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return Q.all(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return Promise.resolve(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved([]);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved({
+     foo: 'bar'
+   });

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q([]).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(Object.values(promises)).allSettled();

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promises[index]);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(Q.resolve(promise));

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.always();

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(null, null);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return Promise.resolve(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return Math.random(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function regardless() {
+     return {};
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function regardless() {
+     return Q.resolve();
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function regardless() {
+     return Q.reject(new Error('Artificial rejection'));
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function (err) {
+     deferred.reject(err);
+   });

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(null).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(true).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(Q.reject("An error occurred")).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(function () {
+     throw new Error('Rejected!');
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function () {
+     throw rejected;
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, Q.reject(rejected));

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(function () {});

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(this);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(promised.then);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.catch(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(42, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(function () {
+     return 42;
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, function () {
+     return Promise.resolve();
+   });

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(true, true, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, 1, progressed);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, function () {});

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, window);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, function () {}, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, deferred.resolve, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, function () {});

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, 'not a function');

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(this)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Promise.resolve())["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](function () {
+     return callback;
+   });

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.bind(this));

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback === null || typeof callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback || typeof callback.call !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback || typeof callback.apply !== "function" && callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Promise(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = null(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(function () {
+     return callback;
+   });

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.bind(this));

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback());

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.resolve(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(Promise.resolve()).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(function () {
+     return "I'm not a promise";
+   }).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(Promise.resolve(fulfilled), rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, Q.reject(new Error('Rejected explicitly')), progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, null, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, function () {
+     throw new Error('Rejected explicitly');
+   }, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function (value) {
+     return value;
+   });

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, null);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong({}, promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(new Error(), promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, null);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, this);

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (function () {
+     throw new Error('Handled error');
+   }) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (function () {}) {

[Survived] PrecomputedMutator
q.js:1810:17
-                   Q.onerror(error);
+                   null(error);

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.fcall(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, true, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, {}, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, undefined) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(function () {
+     throw new Error("Unhandled error");
+   });

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(Q.onerror);

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(function () {
+     throw new Error("Unhandled error");
+   }.bind(this));

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(function () {}, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(this.ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(Math.random() * 1000, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Timed out after " + (ms - 10) + " ms"));

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, {});

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, function () {
+     throw new Error("An error occurred");
+   });

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (1 === 1) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(new Error("Timed out after " + (ms - 10) + " ms"));

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject({});

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(function () {
+     throw new Error("An error occurred");
+   });

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           deferred.reject(timeoutId);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(new Error('Replaced value'));

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(this);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(deferred);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.promise(exception);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(new Error("An error occurred"));

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (typeof timeout === "undefined") {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === Q.timeout.NONE) {

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(true).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q([]).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(2 * timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(0);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(null);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return callback.nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return callback.bind(this);
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return callback.call(null);
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(this);

[Survived] PrecomputedMutator
q.js:1904:20
-       var deferred = defer();
+       var deferred = {}();

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = [].slice(args);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {
+     throw new Error("Buggy node resolver");
+   });

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(this).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(() => deferred.reject());

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.reject(null));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(Array.prototype.slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, Infinity);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return callback.apply(args);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return Q.when.apply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return callback;
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(callback.bind(null)).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(callback || function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(123);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = [].slice(arguments);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = Array.prototype.slice(arguments);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = Math.floor(arguments);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(this.arguments);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {
+     throw new Error("Buggy timeout");
+   });

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject("Buggy rejection"));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null());

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(this).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat(deferred.makeNodeResolver())).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback === 'function') {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback && typeof callback === 'function') {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(Array.prototype.slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([].slice.call(arguments), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(Object.keys(arguments), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(Function.prototype.apply.call(null, this, arguments), 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, Q.denodeify.length - 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, function () {
+     return callback.apply(thisp, arguments);
+   });

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.unshift(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Function.prototype.apply.call([], arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([1, 2, 3](arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(null(arguments));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(Object.keys(arguments).slice()));

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           deferred.promise(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           deferred.reject(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           callback.apply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           this.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           this.thenThrow(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           this.all(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback || function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(function () {});

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = [].slice(arguments);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = Math.max(arguments);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = Promise.all(arguments);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice([].slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(Object.keys(arguments).map(function (key) {
+     return arguments[key];
+   }));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(Function.prototype.apply.call(Array.prototype.slice, arguments, 0));

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       this.constructor(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       null(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(window);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(function () {
+     return this;
+   }());

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(true, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(defer(), args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice());

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, [...args]);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(Function.prototype.apply.call(arguments, [1]));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([].concat.apply([], arguments));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = [].slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = Math.floor(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([].slice.call(arguments), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(Object.keys(arguments)[0], 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(Reflect.apply(Function.prototype.call, arguments, [].slice.call(arguments, 1)), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, function () {});

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.splice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.join(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Function.prototype.apply.call([], arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Object.prototype.slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(Object.keys(arguments)[0]));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1967:24
-           var deferred = defer();
+           var deferred = {}();

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(function () {
+     throw new Error('Buggy node resolver');
+   });

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.reject);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.promise);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(global, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(0, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, thisp);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           bound.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Function.prototype.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback.apply(thisp)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(() => deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.reject(null));

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = [].slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = null(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = Array.prototype.slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([].slice.call(arguments, 0), 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(Object.keys(arguments), 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, Infinity);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(global);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(window);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(Q, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(0, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, this);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(false);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(null);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, []);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, null);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, 1 === 2);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = [].slice(args || []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(globalArgs);

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = Promise.resolve();

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = Q.resolve();

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push({});

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.prototype.dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("Post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", name).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(function () {});

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.promise.resolve);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(Array.prototype.slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = [].slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = null(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = Q.slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([].slice.call(arguments, 1), 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([].concat.apply([], arguments), 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([].slice.call(arguments), 2);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("called", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(null).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q({}).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("Post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch(this.dispatch.bind(this, "post"), [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch(function () {
+     this.dispatch("post");
+   }, [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", name).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([].slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(Array.prototype.slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(nodeArgs.concat());

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = null(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = Object.keys(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([].slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(Object.keys(arguments)[1], 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred());

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("call", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, deferred.resolve]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", this.constructor.prototype.dispatch.call(this, "post", [name, nodeArgs])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(function () {});

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Promise(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return [](object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(this).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(function () {}).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(null);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(5);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(() => {});

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   true(null, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   null(null, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(1, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, arguments[0]);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(new Error("Different error message"));

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(Q.resolve());

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.reject();

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.then.get("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise['get']("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.head("head");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(null);

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(ends.promise);

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(ends.promise.then(function (val) {
+     return val.head;
+   }));

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.then.get("tail");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.head("tail");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(null);

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(ends.promise);

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(Q.defer().promise);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve({});

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(Q.resolve());

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: null(error)};

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: {}(error)};

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(new Error("Different error message"))};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(Q.reject(new Error("Can't get value from closed queue")))};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.notify(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.promise.resolve(end);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(null);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(Q.reject("Error while closing queue"));

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve({
+     head: Q.resolve(),
+     tail: Q.resolve()
+   });

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.50 |      117 |        72 |       1455 |        0 |        0 |
 q.js     |   11.69 |      117 |        72 |       1428 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         27 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m20:23:04 (3296) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m20:23:04 (3296) INFO MutationTestExecutor[39m Done in 188 minutes 58 seconds.

real	188m59.607s
user	32m31.292s
sys	5m38.877s
