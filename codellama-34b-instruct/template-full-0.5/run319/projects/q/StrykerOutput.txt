*** using precomputed mutations ***
[32m13:14:42 (3019) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m13:14:42 (3019) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m13:14:42 (3019) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m13:14:42 (3019) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m13:14:42 (3019) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m13:14:43 (3019) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 2020 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.5/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "string"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", function () {})
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", null)
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", 42)
Mutant 6 in q.js: "promise" replaced with "fulfilled"
Mutant 7 in q.js: "promise" replaced with "rejected"
Mutant 8 in q.js: "promise" replaced with "pending"
Mutant 9 in q.js: definition replaced with null
Mutant 10 in q.js: definition replaced with 0
Mutant 11 in q.js: definition replaced with false
Mutant 12 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "function"
Mutant 13 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof module === "number"
Mutant 14 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "undefined"
Mutant 15 in q.js: definition replaced with 1 + 1
Mutant 16 in q.js: definition replaced with "Hello, world!"
Mutant 17 in q.js: definition replaced with null
Mutant 18 in q.js: typeof define === "function" && define.amd replaced with typeof define !== "function" && define.amd
Mutant 19 in q.js: typeof define === "function" && define.amd replaced with typeof define !== "function" || !define.amd
Mutant 20 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && !define.amd
Mutant 21 in q.js: define replaced with undefined
Mutant 22 in q.js: define replaced with null
Mutant 23 in q.js: definition replaced with definition()
Mutant 24 in q.js: definition replaced with console.log(definition)
Mutant 25 in q.js: typeof ses !== "undefined" replaced with ses === "undefined"
Mutant 26 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined"
Mutant 27 in q.js: typeof ses !== "undefined" replaced with ses !== "undefined"
Mutant 28 in q.js: !ses.ok() replaced with ses.notOk()
Mutant 29 in q.js: !ses.ok() replaced with ses.ok()
Mutant 30 in q.js: ses.ok replaced with ses.maybeOk
Mutant 31 in q.js: ses.ok replaced with ses.okay
Mutant 32 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window === "undefined" && typeof self === "undefined"
Mutant 33 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined"
Mutant 34 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined" && typeof global !== "undefined"
Mutant 35 in q.js: captureLine replaced with captureLine + 1
Mutant 36 in q.js: captureLine replaced with captureLine - 1
Mutant 37 in q.js: captureLine replaced with captureLine * 2
Mutant 38 in q.js: head.next replaced with head.next.next
Mutant 39 in q.js: head.next replaced with head.next.next.next
Mutant 40 in q.js: head.next replaced with head.next.next.next.next
Mutant 41 in q.js: domain replaced with domain.exit()
Mutant 42 in q.js: domain replaced with domain.enter()
Mutant 43 in q.js: domain replaced with domain.destroy()
Mutant 44 in q.js: domain.enter replaced with domain.exit
Mutant 45 in q.js: domain.enter replaced with domain.run
Mutant 46 in q.js: domain.enter replaced with domain.bind
Mutant 47 in q.js: runSingle(task, domain) replaced with runSingle(task, undefined)
Mutant 48 in q.js: runSingle(task, domain) replaced with runSingle(task, null)
Mutant 49 in q.js: runSingle(task, domain) replaced with runSingle(task, "domain")
Mutant 50 in q.js: task replaced with task + 1
Mutant 51 in q.js: task replaced with task() + 1
Mutant 52 in q.js: task replaced with task.bind(null)
Mutant 53 in q.js: domain replaced with 1 + 1
Mutant 54 in q.js: domain replaced with "hello"
Mutant 55 in q.js: domain replaced with undefined
Mutant 56 in q.js: laterQueue.length replaced with laterQueue.pop()
Mutant 57 in q.js: laterQueue.length replaced with laterQueue.shift()
Mutant 58 in q.js: laterQueue.length replaced with laterQueue.slice(0, 1)
Mutant 59 in q.js: laterQueue.pop replaced with laterQueue.shift
Mutant 60 in q.js: laterQueue.pop replaced with laterQueue.push
Mutant 61 in q.js: laterQueue.pop replaced with laterQueue.unshift
Mutant 62 in q.js: runSingle replaced with noop
Mutant 63 in q.js: runSingle replaced with flush
Mutant 64 in q.js: task replaced with undefined
Mutant 65 in q.js: task replaced with null
Mutant 66 in q.js: task replaced with () => {}
Mutant 67 in q.js: task replaced with null
Mutant 68 in q.js: task replaced with undefined
Mutant 69 in q.js: task replaced with 0
Mutant 70 in q.js: isNodeJS replaced with !isNodeJS
Mutant 71 in q.js: isNodeJS replaced with isBrowser
Mutant 72 in q.js: domain replaced with !domain
Mutant 73 in q.js: domain replaced with domain + 1
Mutant 74 in q.js: domain replaced with domain.foo
Mutant 75 in q.js: domain.exit replaced with domain.enter
Mutant 76 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush())
Mutant 77 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush.call())
Mutant 78 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush.apply())
Mutant 79 in q.js: setTimeout replaced with setInterval
Mutant 80 in q.js: 0 replaced with 1
Mutant 81 in q.js: 0 replaced with -1
Mutant 82 in q.js: 0 replaced with null
Mutant 83 in q.js: domain replaced with domain.exit()
Mutant 84 in q.js: domain replaced with !domain
Mutant 85 in q.js: domain replaced with domain === null
Mutant 86 in q.js: domain.enter replaced with domain.exit
Mutant 87 in q.js: domain replaced with !domain
Mutant 88 in q.js: domain replaced with domain + 1
Mutant 89 in q.js: domain replaced with domain.foo
Mutant 90 in q.js: domain.exit replaced with domain.enter
Mutant 91 in q.js: domain.exit replaced with null
Mutant 92 in q.js: domain.exit replaced with undefined
Mutant 93 in q.js: !flushing replaced with flushing
Mutant 94 in q.js: !flushing replaced with !flushing || true
Mutant 95 in q.js: !flushing replaced with flushing && false
Mutant 96 in q.js: requestTick replaced with nextTick
Mutant 97 in q.js: requestTick replaced with null
Mutant 98 in q.js: flush replaced with flush()
Mutant 99 in q.js: typeof window !== "undefined" replaced with typeof window === "undefined"
Mutant 100 in q.js: typeof window !== "undefined" replaced with typeof self !== "undefined"
Mutant 101 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 102 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 103 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(0)
Mutant 104 in q.js: setImmediate.bind replaced with requestAnimationFrame.bind
Mutant 105 in q.js: window replaced with null
Mutant 106 in q.js: window replaced with undefined
Mutant 107 in q.js: window replaced with this
Mutant 108 in q.js: flush replaced with flush()
Mutant 109 in q.js: flush replaced with undefined
Mutant 110 in q.js: flush replaced with null
Mutant 111 in q.js: setImmediate replaced with requestAnimationFrame
Mutant 112 in q.js: setImmediate replaced with setInterval
Mutant 113 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel == "undefined"
Mutant 114 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "object"
Mutant 115 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "function"
Mutant 116 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 117 in q.js: 0 replaced with 1
Mutant 118 in q.js: 0 replaced with null
Mutant 119 in q.js: 0 replaced with undefined
Mutant 120 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 121 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 122 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "Hello, World!")
Mutant 123 in q.js: setTimeout replaced with setInterval
Mutant 124 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 125 in q.js: 0 replaced with 1
Mutant 126 in q.js: 0 replaced with -1
Mutant 127 in q.js: 0 replaced with null
Mutant 128 in q.js: setTimeout(flush, 0) replaced with setTimeout(requestPortTick)
Mutant 129 in q.js: setTimeout(flush, 0) replaced with setTimeout(laterQueue.push(flush))
Mutant 130 in q.js: setTimeout(flush, 0) replaced with setTimeout(laterQueue.push(requestTick))
Mutant 131 in q.js: setTimeout replaced with setInterval
Mutant 132 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 133 in q.js: flush replaced with flush()
Mutant 134 in q.js: 0 replaced with 1
Mutant 135 in q.js: 0 replaced with -1
Mutant 136 in q.js: 0 replaced with null
Mutant 137 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 138 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 139 in q.js: laterQueue.push replaced with laterQueue.length = 0
Mutant 140 in q.js: task replaced with false
Mutant 141 in q.js: task replaced with null
Mutant 142 in q.js: task replaced with undefined
Mutant 143 in q.js: !flushing replaced with flushing
Mutant 144 in q.js: !flushing replaced with !flushing && true
Mutant 145 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[0])
Mutant 146 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[1])
Mutant 147 in q.js: call.apply(f, arguments) replaced with call.apply(f, [])
Mutant 148 in q.js: call.apply replaced with call.call
Mutant 149 in q.js: call.apply replaced with call.bind
Mutant 150 in q.js: call.apply replaced with call.apply.bind
Mutant 151 in q.js: f replaced with f(arguments)
Mutant 152 in q.js: f replaced with f(this)
Mutant 153 in q.js: f replaced with f(undefined)
Mutant 154 in q.js: arguments replaced with undefined
Mutant 155 in q.js: arguments replaced with null
Mutant 156 in q.js: arguments replaced with []
Mutant 157 in q.js: Array.prototype.slice replaced with Array.prototype.concat
Mutant 158 in q.js: Array.prototype.slice replaced with Array.prototype.splice
Mutant 159 in q.js: Array.prototype.slice replaced with Array.prototype.filter
Mutant 160 in q.js: arguments.length === 1 replaced with arguments.length < 1
Mutant 161 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 162 in q.js: arguments.length === 1 replaced with arguments.length !== 1
Mutant 163 in q.js: 1 replaced with 0
Mutant 164 in q.js: 1 replaced with "0"
Mutant 165 in q.js: 1 replaced with null
Mutant 166 in q.js: index in this replaced with this.hasOwnProperty(index)
Mutant 167 in q.js: index in this replaced with index >= 0 && index < this.length
Mutant 168 in q.js: index in this replaced with typeof index === "number" && index >= 0 && index < this.length
Mutant 169 in q.js: ++index >= length replaced with index > length
Mutant 170 in q.js: ++index >= length replaced with length > index
Mutant 171 in q.js: ++index >= length replaced with index >= length
Mutant 172 in q.js: index < length replaced with index > length
Mutant 173 in q.js: index < length replaced with index <= length
Mutant 174 in q.js: index < length replaced with index >= length
Mutant 175 in q.js: index++ replaced with index--
Mutant 176 in q.js: index++ replaced with index += 2
Mutant 177 in q.js: index++ replaced with index = length - index - 1
Mutant 178 in q.js: index in this replaced with index < this.length
Mutant 179 in q.js: index in this replaced with index > this.length
Mutant 180 in q.js: index in this replaced with index !== this.length
Mutant 181 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index + 1)
Mutant 182 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index - 1)
Mutant 183 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index * 2)
Mutant 184 in q.js: basis replaced with basis + 1
Mutant 185 in q.js: basis replaced with basis - 1
Mutant 186 in q.js: basis replaced with basis * 2
Mutant 187 in q.js: this[index] replaced with this[index]++
Mutant 188 in q.js: this[index] replaced with this[index] = null
Mutant 189 in q.js: this[index] replaced with this[index] = "foo"
Mutant 190 in q.js: index replaced with index + 1
Mutant 191 in q.js: index replaced with index - 1
Mutant 192 in q.js: index replaced with index * 2
Mutant 193 in q.js: i < this.length replaced with i >= this.length
Mutant 194 in q.js: i < this.length replaced with i > this.length
Mutant 195 in q.js: i < this.length replaced with i <= this.length
Mutant 196 in q.js: i++ replaced with i--
Mutant 197 in q.js: i++ replaced with i += 2
Mutant 198 in q.js: i++ replaced with i = 0
Mutant 199 in q.js: this[i] === value replaced with this[i] !== value
Mutant 200 in q.js: this[i] === value replaced with this.foo[i] === value
Mutant 201 in q.js: this[i] === value replaced with this.bar[i] === value
Mutant 202 in q.js: collect.push replaced with collect.pop
Mutant 203 in q.js: collect.push replaced with collect.shift
Mutant 204 in q.js: collect.push replaced with collect.unshift
Mutant 205 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, index, value, self)
Mutant 206 in q.js: callback.call(thisp, value, index, self) replaced with callback.apply(thisp, [value, index, self])
Mutant 207 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self, undefined)
Mutant 208 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(null, value, index, self)
Mutant 209 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(self, value, index, self)
Mutant 210 in q.js: callback.call replaced with callback.bind
Mutant 211 in q.js: thisp replaced with null
Mutant 212 in q.js: thisp replaced with 0
Mutant 213 in q.js: value replaced with value + 1
Mutant 214 in q.js: value replaced with value * 2
Mutant 215 in q.js: value replaced with value - 1
Mutant 216 in q.js: index replaced with index + 1
Mutant 217 in q.js: index replaced with index - 1
Mutant 218 in q.js: index replaced with length - index - 1
Mutant 219 in q.js: self replaced with null
Mutant 220 in q.js: self replaced with {}
Mutant 221 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key of object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 222 in q.js: object replaced with null
Mutant 223 in q.js: object replaced with undefined
Mutant 224 in q.js: object replaced with {}
Mutant 225 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(key, object)
Mutant 226 in q.js: object_hasOwnProperty(object, key) replaced with !object_hasOwnProperty(object, key)
Mutant 227 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && key !== "prototype"
Mutant 228 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object[key])
Mutant 229 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object.hasOwnProperty(key))
Mutant 230 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object.key)
Mutant 231 in q.js: object replaced with undefined
Mutant 232 in q.js: object replaced with null
Mutant 233 in q.js: object replaced with {}
Mutant 234 in q.js: key replaced with this.key
Mutant 235 in q.js: key replaced with key++
Mutant 236 in q.js: key replaced with key + 1
Mutant 237 in q.js: key replaced with "key" + 1
Mutant 238 in q.js: key replaced with "key" + "1"
Mutant 239 in q.js: key replaced with "key" + undefined
Mutant 240 in q.js: Object replaced with undefined
Mutant 241 in q.js: Object replaced with null
Mutant 242 in q.js: Object replaced with NaN
Mutant 243 in q.js: value replaced with value + 1
Mutant 244 in q.js: value replaced with value * 2
Mutant 245 in q.js: value replaced with value - 1
Mutant 246 in q.js: object_toString replaced with object_hasOwnProperty
Mutant 247 in q.js: object_toString replaced with object_keys
Mutant 248 in q.js: object_toString replaced with object_create
Mutant 249 in q.js: exception replaced with exception.name
Mutant 250 in q.js: exception replaced with exception.message
Mutant 251 in q.js: exception replaced with QReturnValue(exception)
Mutant 252 in q.js: typeof ReturnValue !== "undefined" replaced with ReturnValue !== undefined
Mutant 253 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue === "undefined"
Mutant 254 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && error instanceof Error && error.stack
Mutant 255 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && error.stack
Mutant 256 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 257 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p.source; !p) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 258 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p.source; p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 259 in q.js: !!p replaced with !p
Mutant 260 in q.js: !!p replaced with p && !p
Mutant 261 in q.js: p = p.source replaced with p = p.source.next
Mutant 262 in q.js: p = p.source replaced with p = p.source + 1
Mutant 263 in q.js: p = p.source replaced with p = p.source.then(function () {
  return p.source.next;
})
Mutant 264 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)
Mutant 265 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ !== p.stackCounter)
Mutant 266 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ >= p.stackCounter)
Mutant 267 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 268 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 269 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter * 2,
  configurable: true
})
Mutant 270 in q.js: "__minimumStackCounter__" replaced with "__maximumStackCounter__"
Mutant 271 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__"
Mutant 272 in q.js: "__minimumStackCounter__" replaced with "__stackTrace__"
Mutant 273 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 274 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 275 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 276 in q.js: stacks.unshift replaced with stacks.pop
Mutant 277 in q.js: stacks.unshift replaced with stacks.shift
Mutant 278 in q.js: stacks.unshift replaced with stacks.push
Mutant 279 in q.js: p.stack replaced with p.source.stack
Mutant 280 in q.js: p.stack replaced with p.stack.slice(0)
Mutant 281 in q.js: p.stack replaced with p.stack.reverse()
Mutant 282 in q.js: stacks.unshift replaced with stacks.push
Mutant 283 in q.js: stacks.unshift replaced with stacks.pop
Mutant 284 in q.js: stacks.unshift replaced with stacks.shift
Mutant 285 in q.js: error.stack replaced with error.message
Mutant 286 in q.js: error.stack replaced with error.name
Mutant 287 in q.js: error.stack replaced with error.code
Mutant 288 in q.js: stacks.join replaced with stacks.concat
Mutant 289 in q.js: stacks.join replaced with stacks.push
Mutant 290 in q.js: stacks.join replaced with stacks.pop
Mutant 291 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + "From previous event:\n"
Mutant 292 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + "From previous event:\n" + "\n"
Mutant 293 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + "From previous event:\n" + "From previous event:\n"
Mutant 294 in q.js: concatedStacks replaced with concatedStacks.split("\n").reverse().join("\n")
Mutant 295 in q.js: concatedStacks replaced with concatedStacks.split("\n").slice(1).join("\n")
Mutant 296 in q.js: concatedStacks replaced with concatedStacks.split("\n").slice(-1).join("\n")
Mutant 297 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  writable: true
})
Mutant 298 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  enumerable: true
})
Mutant 299 in q.js: "stack" replaced with "stackTrace"
Mutant 300 in q.js: "stack" replaced with "stack" + "Trace"
Mutant 301 in q.js: "stack" replaced with "stack" + 1
Mutant 302 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack + "foo",
  configurable: true
}
Mutant 303 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack * 2,
  configurable: true
}
Mutant 304 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack.slice(1),
  configurable: true
}
Mutant 305 in q.js: "\n" replaced with "\t"
Mutant 306 in q.js: "\n" replaced with "\r"
Mutant 307 in q.js: "\n" replaced with "\b"
Mutant 308 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 309 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = -1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 310 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = this.length - 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 311 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 0; i <= lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 312 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 0; i < lines.length - 1; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 313 in q.js: i < lines.length replaced with i <= lines.length
Mutant 314 in q.js: i < lines.length replaced with i > lines.length
Mutant 315 in q.js: i < lines.length replaced with i + 1 < lines.length
Mutant 316 in q.js: ++i replaced with i--
Mutant 317 in q.js: ++i replaced with i += 2
Mutant 318 in q.js: ++i replaced with i *= 2
Mutant 319 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && !isNodeFrame(line) && !line
Mutant 320 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && !isNodeFrame(line) && line !== ""
Mutant 321 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && !isNodeFrame(line) && line.indexOf(" ") === -1
Mutant 322 in q.js: isInternalFrame replaced with isExternalFrame
Mutant 323 in q.js: line replaced with line + 1
Mutant 324 in q.js: line replaced with line - 1
Mutant 325 in q.js: line replaced with line * 2
Mutant 326 in q.js: desiredLines.push replaced with desiredLines.pop
Mutant 327 in q.js: desiredLines.push replaced with desiredLines.shift
Mutant 328 in q.js: desiredLines.push replaced with desiredLines.unshift
Mutant 329 in q.js: line replaced with "line"
Mutant 330 in q.js: line replaced with "line" + 1
Mutant 331 in q.js: line replaced with "line" * 2
Mutant 332 in q.js: "\n" replaced with " "
Mutant 333 in q.js: "\n" replaced with "\\n"
Mutant 334 in q.js: "\n" replaced with "\r"
Mutant 335 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 336 in q.js: stackLine.indexOf replaced with stackLine.startsWith
Mutant 337 in q.js: stackLine.indexOf replaced with stackLine.endsWith
Mutant 338 in q.js: "(module.js:" replaced with "(node.js:)"
Mutant 339 in q.js: stackLine.indexOf replaced with stackLine.contains
Mutant 340 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 341 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 342 in q.js: "(node.js:" replaced with "(node.js:)"
Mutant 343 in q.js: stackLine replaced with stackLine.split("@")[1]
Mutant 344 in q.js: stackLine replaced with stackLine.replace(/^.*@/, "")
Mutant 345 in q.js: stackLine replaced with stackLine.split(":")[1]
Mutant 346 in q.js: attempt1 replaced with attempt1[1] === "module.js"
Mutant 347 in q.js: attempt1 replaced with attempt1[1] === "node.js"
Mutant 348 in q.js: attempt1 replaced with attempt1[1] === "node.js" && attempt1[2] > 100
Mutant 349 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 350 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 351 in q.js: attempt1[2] replaced with attempt1[4]
Mutant 352 in q.js: stackLine replaced with stackLine.toLowerCase()
Mutant 353 in q.js: stackLine replaced with stackLine.split("").reverse().join("")
Mutant 354 in q.js: stackLine replaced with stackLine.replace(/\d/g, "")
Mutant 355 in q.js: attempt2 replaced with attempt2[1]
Mutant 356 in q.js: attempt2 replaced with attempt2[0]
Mutant 357 in q.js: attempt2 replaced with attempt2[2]
Mutant 358 in q.js: Number replaced with "PLACEHOLDER"
Mutant 359 in q.js: Number replaced with null
Mutant 360 in q.js: Number replaced with undefined
Mutant 361 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 362 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 363 in q.js: attempt2[2] replaced with attempt2[0]
Mutant 364 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 365 in q.js: stackLine replaced with stackLine.split(" ")[1]
Mutant 366 in q.js: stackLine replaced with stackLine.split(" ")[2]
Mutant 367 in q.js: attempt3 replaced with attempt3 !== null
Mutant 368 in q.js: attempt3 replaced with attempt3.length > 0
Mutant 369 in q.js: attempt3 replaced with attempt3[0] !== undefined
Mutant 370 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 371 in q.js: attempt3[2] replaced with attempt3[0]
Mutant 372 in q.js: attempt3[2] replaced with attempt3.length
Mutant 373 in q.js: stackLine replaced with stackLine.split("at ")[1]
Mutant 374 in q.js: stackLine replaced with stackLine.split("at ")[0]
Mutant 375 in q.js: stackLine replaced with stackLine.split("at ")[2]
Mutant 376 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === undefined
Mutant 377 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber !== null
Mutant 378 in q.js: !fileNameAndLineNumber replaced with !fileNameAndLineNumber.length
Mutant 379 in q.js: !hasStacks replaced with hasStacks
Mutant 380 in q.js: !hasStacks replaced with !hasStacks && !isNodeFrame(stackLine)
Mutant 381 in q.js: !hasStacks replaced with hasStacks || isNodeFrame(stackLine)
Mutant 382 in q.js: "\n" replaced with "\t"
Mutant 383 in q.js: "\n" replaced with " "
Mutant 384 in q.js: "\n" replaced with "\\n"
Mutant 385 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 386 in q.js: lines[0].indexOf replaced with lines[lines.length - 1].indexOf
Mutant 387 in q.js: "@" replaced with "at"
Mutant 388 in q.js: "@" replaced with "in"
Mutant 389 in q.js: "@" replaced with "#"
Mutant 390 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber !== null
Mutant 391 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 392 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === undefined
Mutant 393 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn !== "function"
Mutant 394 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn !== undefined
Mutant 395 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console.warn === "undefined"
Mutant 396 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, null)
Mutant 397 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, [])
Mutant 398 in q.js: callback.apply replaced with callback.call
Mutant 399 in q.js: callback.apply replaced with callback.bind
Mutant 400 in q.js: callback.apply replaced with callback.toString
Mutant 401 in q.js: arguments replaced with "Hello, world!"
Mutant 402 in q.js: arguments replaced with 42
Mutant 403 in q.js: arguments replaced with null
Mutant 404 in q.js: value instanceof Promise replaced with value === Promise
Mutant 405 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 406 in q.js: value instanceof Promise replaced with Object.getPrototypeOf(value) === Promise.prototype
Mutant 407 in q.js: isPromiseAlike(value) replaced with value !== Object(value)
Mutant 408 in q.js: isPromiseAlike(value) replaced with value.constructor !== Promise
Mutant 409 in q.js: isPromiseAlike(value) replaced with typeof value.then === "function"
Mutant 410 in q.js: value replaced with value.length
Mutant 411 in q.js: value replaced with value + 1
Mutant 412 in q.js: value replaced with value.toString()
Mutant 413 in q.js: coerce replaced with Q.reject
Mutant 414 in q.js: coerce replaced with Q.resolve
Mutant 415 in q.js: coerce replaced with Q.all
Mutant 416 in q.js: value replaced with !value
Mutant 417 in q.js: value replaced with value + 1
Mutant 418 in q.js: value replaced with value - 1
Mutant 419 in q.js: fulfill replaced with reject
Mutant 420 in q.js: value replaced with !value
Mutant 421 in q.js: value replaced with value + 1
Mutant 422 in q.js: value replaced with value[0]
Mutant 423 in q.js: object_create replaced with Q.defer.prototype
Mutant 424 in q.js: object_create replaced with Q.defer.resolve
Mutant 425 in q.js: object_create replaced with Q.defer.reject
Mutant 426 in q.js: Promise.prototype replaced with Object.prototype
Mutant 427 in q.js: Promise.prototype replaced with function () {}
Mutant 428 in q.js: Promise.prototype replaced with null
Mutant 429 in q.js: arguments replaced with "test"
Mutant 430 in q.js: arguments replaced with 42
Mutant 431 in q.js: arguments replaced with null
Mutant 432 in q.js: messages replaced with messages.length
Mutant 433 in q.js: messages replaced with !messages.length
Mutant 434 in q.js: messages replaced with messages[0]
Mutant 435 in q.js: messages.push replaced with messages.unshift
Mutant 436 in q.js: messages.push replaced with messages.pop
Mutant 437 in q.js: messages.push replaced with messages.shift
Mutant 438 in q.js: args replaced with args[0]
Mutant 439 in q.js: args replaced with args.slice()
Mutant 440 in q.js: args replaced with args.concat()
Mutant 441 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 442 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[1]
Mutant 443 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[1] === undefined
Mutant 444 in q.js: progressListeners.push replaced with progressListeners.pop
Mutant 445 in q.js: progressListeners.push replaced with progressListeners.shift
Mutant 446 in q.js: progressListeners.push replaced with progressListeners.unshift
Mutant 447 in q.js: operands[1] replaced with operands[2]
Mutant 448 in q.js: operands[1] replaced with operands[0]
Mutant 449 in q.js: operands[1] replaced with undefined
Mutant 450 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.then.apply
Mutant 451 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.reject.apply
Mutant 452 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.notify.apply
Mutant 453 in q.js: resolvedPromise replaced with null
Mutant 454 in q.js: resolvedPromise replaced with undefined
Mutant 455 in q.js: resolvedPromise replaced with 0
Mutant 456 in q.js: args replaced with args[0]
Mutant 457 in q.js: args replaced with args.slice(1)
Mutant 458 in q.js: args replaced with args[0] + args[1]
Mutant 459 in q.js: messages replaced with messages.length
Mutant 460 in q.js: messages replaced with messages[0]
Mutant 461 in q.js: messages replaced with messages.slice(1)
Mutant 462 in q.js: nearer replaced with nearerValue + 1
Mutant 463 in q.js: nearer replaced with nearerValue - 1
Mutant 464 in q.js: nearer replaced with nearerValue * 2
Mutant 465 in q.js: resolvedPromise replaced with undefined
Mutant 466 in q.js: resolvedPromise replaced with null
Mutant 467 in q.js: resolvedPromise replaced with Promise.reject(new Error("Test error"))
Mutant 468 in q.js: isPromise(nearerValue) replaced with nearerValue === null
Mutant 469 in q.js: isPromise(nearerValue) replaced with nearerValue === undefined
Mutant 470 in q.js: isPromise(nearerValue) replaced with nearerValue.valueOf() === null
Mutant 471 in q.js: isPromise replaced with isPromiseAlike
Mutant 472 in q.js: isPromise replaced with !isPromise
Mutant 473 in q.js: nearerValue replaced with nearerValue + 1
Mutant 474 in q.js: nearerValue replaced with nearerValue * 2
Mutant 475 in q.js: nearerValue replaced with nearerValue - 1
Mutant 476 in q.js: !resolvedPromise replaced with resolvedPromise === false
Mutant 477 in q.js: !resolvedPromise replaced with resolvedPromise !== true
Mutant 478 in q.js: !resolvedPromise replaced with !resolvedPromise.valueOf()
Mutant 479 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport || !hasStacks
Mutant 480 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 481 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.lastIndexOf("\n") + 1
Mutant 482 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.split("\n").length - 1
Mutant 483 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n", e.stack.indexOf("\n") + 1)
Mutant 484 in q.js: "\n" replaced with "\t"
Mutant 485 in q.js: "\n" replaced with "\n\n"
Mutant 486 in q.js: "\n" replaced with "\\n"
Mutant 487 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport && hasStacks
Mutant 488 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 489 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport || hasStacks
Mutant 490 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message[0])
Mutant 491 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.slice(1))
Mutant 492 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.concat(newPromise))
Mutant 493 in q.js: newPromise replaced with undefined
Mutant 494 in q.js: newPromise replaced with null
Mutant 495 in q.js: newPromise replaced with "foo"
Mutant 496 in q.js: message replaced with message.slice(1)
Mutant 497 in q.js: message replaced with message.slice(-1)
Mutant 498 in q.js: message replaced with message.slice(0, 1)
Mutant 499 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 500 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 501 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 502 in q.js: Q replaced with null
Mutant 503 in q.js: Q replaced with undefined
Mutant 504 in q.js: Q replaced with 0
Mutant 505 in q.js: value replaced with null
Mutant 506 in q.js: value replaced with undefined
Mutant 507 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 508 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 509 in q.js: fulfill(value) replaced with fulfill(reject(value))
Mutant 510 in q.js: fulfill(value) replaced with fulfill(value + 1)
Mutant 511 in q.js: fulfill(value) replaced with fulfill(value, 1)
Mutant 512 in q.js: fulfill replaced with resolve
Mutant 513 in q.js: fulfill replaced with notify
Mutant 514 in q.js: value replaced with undefined
Mutant 515 in q.js: value replaced with null
Mutant 516 in q.js: value replaced with 0
Mutant 517 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 518 in q.js: resolvedPromise replaced with resolvedPromise === null
Mutant 519 in q.js: resolvedPromise replaced with resolvedPromise !== undefined
Mutant 520 in q.js: reject(reason) replaced with become(reject(reason))
Mutant 521 in q.js: reject(reason) replaced with become(Q.reject(reason))
Mutant 522 in q.js: reject(reason) replaced with become(fulfill(reason))
Mutant 523 in q.js: reason replaced with null
Mutant 524 in q.js: reason replaced with undefined
Mutant 525 in q.js: reason replaced with "error"
Mutant 526 in q.js: resolvedPromise replaced with resolvedPromise = true
Mutant 527 in q.js: resolvedPromise replaced with resolvedPromise = false
Mutant 528 in q.js: resolvedPromise replaced with resolvedPromise = !resolvedPromise
Mutant 529 in q.js: progress replaced with null
Mutant 530 in q.js: progress replaced with undefined
Mutant 531 in q.js: progress replaced with "hello"
Mutant 532 in q.js: error replaced with null
Mutant 533 in q.js: error replaced with undefined
Mutant 534 in q.js: error replaced with "error"
Mutant 535 in q.js: arguments.length > 2 replaced with arguments.length < 2
Mutant 536 in q.js: arguments.length > 2 replaced with arguments.length === 2
Mutant 537 in q.js: arguments.length > 2 replaced with arguments.length > 1
Mutant 538 in q.js: self.resolve replaced with self.reject
Mutant 539 in q.js: self.resolve replaced with self.notify
Mutant 540 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 541 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 1, 2)
Mutant 542 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0, 1)
Mutant 543 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 544 in q.js: array_slice(arguments, 1) replaced with array_slice(null)
Mutant 545 in q.js: arguments replaced with null
Mutant 546 in q.js: arguments replaced with undefined
Mutant 547 in q.js: arguments replaced with []
Mutant 548 in q.js: 1 replaced with null
Mutant 549 in q.js: self.resolve replaced with self.reject
Mutant 550 in q.js: self.resolve replaced with self.fulfill
Mutant 551 in q.js: self.resolve replaced with self.notify
Mutant 552 in q.js: value replaced with null
Mutant 553 in q.js: value replaced with undefined
Mutant 554 in q.js: value replaced with 0
Mutant 555 in q.js: typeof resolver !== "function" replaced with resolver !== undefined
Mutant 556 in q.js: typeof resolver !== "function" replaced with resolver !== null
Mutant 557 in q.js: typeof resolver !== "function" replaced with typeof resolver !== "object"
Mutant 558 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.reject, deferred.notify)
Mutant 559 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.notify, deferred.notify, deferred.notify)
Mutant 560 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.fulfill, deferred.fulfill, deferred.notify)
Mutant 561 in q.js: deferred.resolve replaced with deferred.reject
Mutant 562 in q.js: deferred.resolve replaced with Q.reject
Mutant 563 in q.js: deferred.resolve replaced with deferred.notify
Mutant 564 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 565 in q.js: deferred.reject replaced with deferred.notify
Mutant 566 in q.js: deferred.reject replaced with deferred.resolve
Mutant 567 in q.js: deferred.notify replaced with deferred.notify(null)
Mutant 568 in q.js: deferred.notify replaced with deferred.notify(undefined)
Mutant 569 in q.js: deferred.notify replaced with deferred.notify("")
Mutant 570 in q.js: deferred.reject replaced with deferred.resolve
Mutant 571 in q.js: deferred.reject replaced with deferred.notify
Mutant 572 in q.js: deferred.reject replaced with undefined
Mutant 573 in q.js: reason replaced with reason + 1
Mutant 574 in q.js: reason replaced with reason.toUpperCase()
Mutant 575 in q.js: reason replaced with reason.split(" ").reverse().join(" ")
Mutant 576 in q.js: Q replaced with 1 + 1
Mutant 577 in q.js: Q replaced with "Q"
Mutant 578 in q.js: x replaced with y
Mutant 579 in q.js: x replaced with x + 1
Mutant 580 in q.js: x replaced with null
Mutant 581 in q.js: y replaced with x
Mutant 582 in q.js: y replaced with x + y
Mutant 583 in q.js: y replaced with y * 2
Mutant 584 in q.js: Q replaced with Q.reject
Mutant 585 in q.js: Q replaced with Q.resolve
Mutant 586 in q.js: Q replaced with Q.all
Mutant 587 in q.js: [this, that] replaced with [that, this]
Mutant 588 in q.js: [this, that] replaced with [this, this]
Mutant 589 in q.js: [this, that] replaced with [null, that]
Mutant 590 in q.js: x === y replaced with x !== y
Mutant 591 in q.js: x === y replaced with x == y
Mutant 592 in q.js: x === y replaced with x >= y
Mutant 593 in q.js: i < len replaced with i > len
Mutant 594 in q.js: i < len replaced with i -= len
Mutant 595 in q.js: i < len replaced with i = len - 1
Mutant 596 in q.js: i++ replaced with i--
Mutant 597 in q.js: i++ replaced with i += 2
Mutant 598 in q.js: i++ replaced with i *= 2
Mutant 599 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve)
Mutant 600 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve)
Mutant 601 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject())
Mutant 602 in q.js: answerPs[i] replaced with answerPs[i] + 1
Mutant 603 in q.js: answerPs[i] replaced with answerPs.length - i
Mutant 604 in q.js: resolve replaced with reject
Mutant 605 in q.js: reject replaced with resolve
Mutant 606 in q.js: reject replaced with undefined
Mutant 607 in q.js: this.then replaced with null
Mutant 608 in q.js: this.then replaced with undefined
Mutant 609 in q.js: this.then replaced with reject
Mutant 610 in q.js: Q.race replaced with Q.reject
Mutant 611 in q.js: Q.race replaced with Q.resolve
Mutant 612 in q.js: Q.race replaced with Q.all
Mutant 613 in q.js: fallback === void 0 replaced with fallback === null
Mutant 614 in q.js: fallback === void 0 replaced with fallback === undefined
Mutant 615 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 616 in q.js: inspect === void 0 replaced with inspect == void 0
Mutant 617 in q.js: inspect === void 0 replaced with inspect === undefined
Mutant 618 in q.js: object_create replaced with null
Mutant 619 in q.js: object_create replaced with undefined
Mutant 620 in q.js: object_create replaced with {}
Mutant 621 in q.js: Promise.prototype replaced with Object.prototype
Mutant 622 in q.js: Promise.prototype replaced with null
Mutant 623 in q.js: Promise.prototype replaced with {}
Mutant 624 in q.js: descriptor[op] replaced with descriptor.hasOwnProperty(op)
Mutant 625 in q.js: descriptor[op] replaced with op in descriptor
Mutant 626 in q.js: descriptor[op] replaced with typeof descriptor[op] === "function"
Mutant 627 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args, 1)
Mutant 628 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(args, promise)
Mutant 629 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise[args])
Mutant 630 in q.js: promise replaced with null
Mutant 631 in q.js: promise replaced with undefined
Mutant 632 in q.js: promise replaced with Q.reject("error")
Mutant 633 in q.js: args replaced with args.slice(1)
Mutant 634 in q.js: args replaced with args.concat(1)
Mutant 635 in q.js: args replaced with args.reverse()
Mutant 636 in q.js: promise replaced with null
Mutant 637 in q.js: promise replaced with undefined
Mutant 638 in q.js: promise replaced with {}
Mutant 639 in q.js: op replaced with op + 1
Mutant 640 in q.js: op replaced with op - 1
Mutant 641 in q.js: op replaced with op * 2
Mutant 642 in q.js: args replaced with args[0]
Mutant 643 in q.js: args replaced with args.slice(1)
Mutant 644 in q.js: args replaced with [args[0]]
Mutant 645 in q.js: exception replaced with 0
Mutant 646 in q.js: exception replaced with null
Mutant 647 in q.js: exception replaced with undefined
Mutant 648 in q.js: resolve replaced with resolve(reject(new Error("test error")))
Mutant 649 in q.js: resolve replaced with resolve(undefined)
Mutant 650 in q.js: resolve replaced with deferred.reject
Mutant 651 in q.js: resolve replaced with deferred.notify
Mutant 652 in q.js: result replaced with result + 1
Mutant 653 in q.js: result replaced with result * 2
Mutant 654 in q.js: result replaced with result - 1
Mutant 655 in q.js: inspect replaced with inspect.state
Mutant 656 in q.js: inspect replaced with inspect.toString()
Mutant 657 in q.js: inspect replaced with inspect.valueOf()
Mutant 658 in q.js: inspect replaced with inspect.state
Mutant 659 in q.js: inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 660 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 661 in q.js: inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 662 in q.js: inspect replaced with promise.inspect.state
Mutant 663 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 664 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 665 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "pending" && inspected.value === undefined
Mutant 666 in q.js: defer replaced with defer.reject
Mutant 667 in q.js: defer replaced with defer.promise
Mutant 668 in q.js: defer replaced with defer.resolve
Mutant 669 in q.js: fulfilled replaced with rejected
Mutant 670 in q.js: value replaced with null
Mutant 671 in q.js: value replaced with undefined
Mutant 672 in q.js: exception replaced with exception.message
Mutant 673 in q.js: exception replaced with new Error(exception)
Mutant 674 in q.js: typeof rejected === "function" replaced with rejected !== null
Mutant 675 in q.js: typeof rejected === "function" replaced with typeof rejected === "undefined"
Mutant 676 in q.js: typeof rejected === "function" replaced with rejected !== "function"
Mutant 677 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception.message, self)
Mutant 678 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception.stack, self)
Mutant 679 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception.toString(), self)
Mutant 680 in q.js: exception replaced with undefined
Mutant 681 in q.js: exception replaced with null
Mutant 682 in q.js: exception replaced with {}
Mutant 683 in q.js: exception replaced with undefined
Mutant 684 in q.js: exception replaced with null
Mutant 685 in q.js: exception replaced with new Error("Test error")
Mutant 686 in q.js: reject replaced with resolve
Mutant 687 in q.js: reject replaced with Promise.reject
Mutant 688 in q.js: newException replaced with reject(exception)
Mutant 689 in q.js: newException replaced with resolve(exception)
Mutant 690 in q.js: reject replaced with resolve
Mutant 691 in q.js: reject replaced with Q.reject
Mutant 692 in q.js: exception replaced with null
Mutant 693 in q.js: exception replaced with undefined
Mutant 694 in q.js: exception replaced with 0
Mutant 695 in q.js: value replaced with null
Mutant 696 in q.js: value replaced with undefined
Mutant 697 in q.js: value replaced with 0
Mutant 698 in q.js: done replaced with !done
Mutant 699 in q.js: done replaced with done = false
Mutant 700 in q.js: done replaced with done && false
Mutant 701 in q.js: deferred.resolve replaced with deferred.reject
Mutant 702 in q.js: deferred.resolve replaced with deferred.notify
Mutant 703 in q.js: deferred.resolve replaced with Q.reject
Mutant 704 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 705 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 706 in q.js: _fulfilled(value) replaced with _fulfilled(reject(value))
Mutant 707 in q.js: value replaced with null
Mutant 708 in q.js: value replaced with undefined
Mutant 709 in q.js: value replaced with "hello"
Mutant 710 in q.js: done replaced with !done
Mutant 711 in q.js: done replaced with done && false
Mutant 712 in q.js: done replaced with done || true
Mutant 713 in q.js: deferred.resolve replaced with deferred.reject
Mutant 714 in q.js: deferred.resolve replaced with deferred.notify
Mutant 715 in q.js: _rejected(exception) replaced with _fulfilled(exception)
Mutant 716 in q.js: _rejected(exception) replaced with _progressed(exception)
Mutant 717 in q.js: _rejected(exception) replaced with _rejected(new Error("Different error message"))
Mutant 718 in q.js: _rejected replaced with _resolved
Mutant 719 in q.js: exception replaced with null
Mutant 720 in q.js: exception replaced with undefined
Mutant 721 in q.js: exception replaced with 0
Mutant 722 in q.js: _progressed replaced with _rejected
Mutant 723 in q.js: _progressed replaced with _fulfilled
Mutant 724 in q.js: value replaced with null
Mutant 725 in q.js: value replaced with undefined
Mutant 726 in q.js: value replaced with NaN
Mutant 727 in q.js: e replaced with e.message
Mutant 728 in q.js: e replaced with e.toString()
Mutant 729 in q.js: e replaced with e.stack
Mutant 730 in q.js: !threw replaced with threw
Mutant 731 in q.js: !threw replaced with !newValue
Mutant 732 in q.js: !threw replaced with threw && !newValue
Mutant 733 in q.js: deferred.notify replaced with deferred.resolve
Mutant 734 in q.js: deferred.notify replaced with deferred.reject
Mutant 735 in q.js: newValue replaced with null
Mutant 736 in q.js: newValue replaced with undefined
Mutant 737 in q.js: newValue replaced with "some string"
Mutant 738 in q.js: promise replaced with promise.thenResolve()
Mutant 739 in q.js: promise replaced with promise.thenReject()
Mutant 740 in q.js: promise replaced with promise.then(function () {
  return Q.reject();
})
Mutant 741 in q.js: callback replaced with null
Mutant 742 in q.js: callback replaced with undefined
Mutant 743 in q.js: callback replaced with false
Mutant 744 in q.js: Q replaced with undefined
Mutant 745 in q.js: callback replaced with 1
Mutant 746 in q.js: callback replaced with null
Mutant 747 in q.js: callback replaced with undefined
Mutant 748 in q.js: callback.fcall replaced with callback.fapply
Mutant 749 in q.js: callback.fcall replaced with callback.fbind
not replacing callback.fcall with callback.fapply
not replacing callback.fcall with callback.fapply
not replacing callback.fcall with callback.fbind
not replacing callback.fcall with callback.fbind
Mutant 750 in q.js: value replaced with null
Mutant 751 in q.js: value replaced with undefined
Mutant 752 in q.js: value replaced with 0
Mutant 753 in q.js: value replaced with undefined
Mutant 754 in q.js: value replaced with null
Mutant 755 in q.js: value replaced with NaN
Mutant 756 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed)
Mutant 757 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed, 42)
Mutant 758 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed, Q.when(value, fulfilled, rejected, progressed))
Mutant 759 in q.js: Q replaced with Q.reject
Mutant 760 in q.js: Q replaced with Q.resolve
Mutant 761 in q.js: Q replaced with Q.all
Mutant 762 in q.js: value replaced with null
Mutant 763 in q.js: value replaced with undefined
Mutant 764 in q.js: value replaced with 0
Mutant 765 in q.js: fulfilled replaced with rejected
Mutant 766 in q.js: fulfilled replaced with undefined
Mutant 767 in q.js: fulfilled replaced with null
Mutant 768 in q.js: rejected replaced with fulfilled
Mutant 769 in q.js: progressed replaced with progressed()
Mutant 770 in q.js: progressed replaced with progressed(value)
Mutant 771 in q.js: progressed replaced with progressed(rejected)
Mutant 772 in q.js: function () {
  return value;
} replaced with function () {
  return undefined;
}
Mutant 773 in q.js: function () {
  return value;
} replaced with function () {
  return null;
}
Mutant 774 in q.js: function () {
  return value;
} replaced with function () {
  throw new Error();
}
Mutant 775 in q.js: Q replaced with Q.reject
Mutant 776 in q.js: Q replaced with Q.defer
Mutant 777 in q.js: Q replaced with Q.async
Mutant 778 in q.js: promise replaced with null
Mutant 779 in q.js: promise replaced with undefined
Mutant 780 in q.js: promise replaced with "foo"
Mutant 781 in q.js: value replaced with null
Mutant 782 in q.js: value replaced with undefined
Mutant 783 in q.js: this.then replaced with this.then.then
Mutant 784 in q.js: this.then replaced with this.then.catch
Mutant 785 in q.js: this.then replaced with this.then.finally
Mutant 786 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 787 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error(reason);
}
Mutant 788 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason.message;
}
Mutant 789 in q.js: promise replaced with Q.reject(reason)
Mutant 790 in q.js: promise replaced with Q.resolve(reason)
Mutant 791 in q.js: promise replaced with Q.defer()
Mutant 792 in q.js: reason replaced with reason + 1
Mutant 793 in q.js: reason replaced with reason * 2
Mutant 794 in q.js: reason replaced with reason - 1
Mutant 795 in q.js: isPromise(value) replaced with value instanceof Promise
Mutant 796 in q.js: isPromise(value) replaced with value.constructor === Promise
Mutant 797 in q.js: isPromise(value) replaced with Q.isPromise(value) || value instanceof Promise
Mutant 798 in q.js: isPromise replaced with isPromiseAlike
Mutant 799 in q.js: isPromise replaced with isFulfilled
Mutant 800 in q.js: isPromise replaced with isRejected
Mutant 801 in q.js: value replaced with value + 1
Mutant 802 in q.js: value replaced with value * 2
Mutant 803 in q.js: value replaced with value - 1
Mutant 804 in q.js: inspected.state === "fulfilled" replaced with inspected.state !== "fulfilled"
Mutant 805 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 806 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "pending"
Mutant 807 in q.js: isObject replaced with typeof object === "function"
Mutant 808 in q.js: isObject replaced with object instanceof Object
Mutant 809 in q.js: isObject replaced with object && typeof object.then === "function"
Mutant 810 in q.js: object replaced with object.then
Mutant 811 in q.js: object replaced with object.thenResolve
Mutant 812 in q.js: object replaced with object.thenReject
Mutant 813 in q.js: isPromise replaced with !isPromise
Mutant 814 in q.js: isPromise replaced with isPromiseAlike
Mutant 815 in q.js: isPromise replaced with isFulfilled
Mutant 816 in q.js: object replaced with object.inspect().state === "fulfilled"
Mutant 817 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 818 in q.js: object replaced with object.inspect().state === "pending"
Mutant 819 in q.js: this.inspect replaced with this.inspect.value
not replacing this.inspect with this.inspect.value
Mutant 820 in q.js: object replaced with null
Mutant 821 in q.js: object replaced with undefined
Mutant 822 in q.js: object replaced with "object"
Mutant 823 in q.js: object.inspect replaced with object.then
not replacing object.inspect with object.then
Mutant 824 in q.js: isPromise replaced with isPromiseAlike
Mutant 825 in q.js: object replaced with null
Mutant 826 in q.js: object replaced with undefined
Mutant 827 in q.js: object replaced with {}
Mutant 828 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 829 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== false
Mutant 830 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections === false
Mutant 831 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 832 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections && unhandledRejections.length > 0
Mutant 833 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections || unhandledRejections.length === 0
Mutant 834 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 835 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.indexOf(promise) !== -1
Mutant 836 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.length > 0
Mutant 837 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, reason)
Mutant 838 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, promise)
Mutant 839 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons, promise)
Mutant 840 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 841 in q.js: array_indexOf replaced with array_includes
Mutant 842 in q.js: array_indexOf replaced with array_findIndex
Mutant 843 in q.js: unhandledRejections replaced with unhandledReasons
Mutant 844 in q.js: unhandledRejections replaced with reportedUnhandledRejections
Mutant 845 in q.js: unhandledRejections replaced with Q.getUnhandledReasons()
Mutant 846 in q.js: promise replaced with promise.then()
Mutant 847 in q.js: promise replaced with promise.catch()
Mutant 848 in q.js: promise replaced with promise.finally()
Mutant 849 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("rejectionHandled", reason, promise)
Mutant 850 in q.js: "unhandledRejection" replaced with "rejectionHandled"
Mutant 851 in q.js: "unhandledRejection" replaced with "rejection"
Mutant 852 in q.js: reason replaced with reason + 1
Mutant 853 in q.js: reason replaced with reason.toString()
Mutant 854 in q.js: reason replaced with reason.valueOf()
Mutant 855 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.pop
Mutant 856 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.shift
Mutant 857 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.unshift
Mutant 858 in q.js: unhandledRejections.push replaced with unhandledRejections.pop
Mutant 859 in q.js: unhandledRejections.push replaced with unhandledRejections.shift
Mutant 860 in q.js: promise replaced with rejection
Mutant 861 in q.js: promise replaced with null
Mutant 862 in q.js: promise replaced with rejected
Mutant 863 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== undefined
Mutant 864 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== null
Mutant 865 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined"
Mutant 866 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 867 in q.js: unhandledReasons.push replaced with unhandledReasons.shift
Mutant 868 in q.js: unhandledReasons.push replaced with unhandledReasons.unshift
Mutant 869 in q.js: reason.stack replaced with reason.message
Mutant 870 in q.js: reason.stack replaced with reason.toString()
Mutant 871 in q.js: reason.stack replaced with reason.error
Mutant 872 in q.js: "(no stack) " + reason replaced with reason.stack.length
Mutant 873 in q.js: "(no stack) " + reason replaced with reason.stack.split('\n')[0]
Mutant 874 in q.js: "(no stack) " + reason replaced with reason.stack.split('\n').slice(-2).join('\n')
Mutant 875 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 876 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections && unhandledRejections.length > 0
Mutant 877 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.slice(), promise)
Mutant 878 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.concat(promise))
Mutant 879 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.splice(0, 1))
Mutant 880 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 881 in q.js: array_indexOf replaced with array_includes
Mutant 882 in q.js: array_indexOf replaced with array_findIndex
Mutant 883 in q.js: unhandledRejections replaced with unhandledReasons
Mutant 884 in q.js: unhandledRejections replaced with reportedUnhandledRejections
Mutant 885 in q.js: unhandledRejections replaced with unhandledRejections.length
Mutant 886 in q.js: promise replaced with promise.then(function () {})
Mutant 887 in q.js: promise replaced with promise.catch(function () {})
Mutant 888 in q.js: promise replaced with promise.then(function () {}, function () {})
Mutant 889 in q.js: at !== -1 replaced with at == -1
Mutant 890 in q.js: at !== -1 replaced with at === -1
Mutant 891 in q.js: at !== -1 replaced with at !== -2
Mutant 892 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, unhandledRejections)
Mutant 893 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(unhandledRejections, reportedUnhandledRejections)
Mutant 894 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(unhandledRejections, unhandledReasons)
Mutant 895 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 896 in q.js: array_indexOf replaced with array_includes
Mutant 897 in q.js: array_indexOf replaced with array_findIndex
Mutant 898 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 899 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.length
Mutant 900 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.length > 0
Mutant 901 in q.js: promise replaced with promise.then(function () {})
Mutant 902 in q.js: promise replaced with promise.catch(function () {})
Mutant 903 in q.js: promise replaced with promise.finally(function () {})
Mutant 904 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at])
Mutant 905 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], null)
Mutant 906 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", null, unhandledReasons[at])
Mutant 907 in q.js: "rejectionHandled" replaced with "rejectionUnhandled"
Mutant 908 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 909 in q.js: unhandledReasons[at] replaced with unhandledReasons[at - 1]
Mutant 910 in q.js: unhandledReasons[at] replaced with unhandledReasons[at * 2]
Mutant 911 in q.js: promise replaced with promise.then(null, function () {})
Mutant 912 in q.js: promise replaced with promise.catch(function () {})
Mutant 913 in q.js: promise replaced with promise.finally(function () {})
Mutant 914 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 2)
Mutant 915 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 3)
Mutant 916 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 0)
Mutant 917 in q.js: atReport replaced with atReport + 1
Mutant 918 in q.js: atReport replaced with atReport - 1
Mutant 919 in q.js: atReport replaced with atReport + 2
Mutant 920 in q.js: 1 replaced with 0
Mutant 921 in q.js: 1 replaced with -1
Mutant 922 in q.js: 1 replaced with array.length - 1
Mutant 923 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 0)
Mutant 924 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, -1)
Mutant 925 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 2)
Mutant 926 in q.js: at replaced with at + 1
Mutant 927 in q.js: at replaced with at - 1
Mutant 928 in q.js: 1 replaced with 2
Mutant 929 in q.js: 1 replaced with 0
Mutant 930 in q.js: 1 replaced with -1
Mutant 931 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 2)
Mutant 932 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, unhandledReasons.length - 1)
Mutant 933 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, Math.floor(Math.random() * unhandledReasons.length))
Mutant 934 in q.js: at replaced with at - 1
Mutant 935 in q.js: at replaced with at + 1
Mutant 936 in q.js: at replaced with at.length - 1
Mutant 937 in q.js: 1 replaced with -1
Mutant 938 in q.js: 1 replaced with 0
Mutant 939 in q.js: 1 replaced with unhandledReasons.length
Mutant 940 in q.js: rejected replaced with !rejected
Mutant 941 in q.js: rejected replaced with rejected && false
Mutant 942 in q.js: rejected replaced with rejected || false
Mutant 943 in q.js: this replaced with null
Mutant 944 in q.js: this replaced with undefined
Mutant 945 in q.js: reason replaced with null
Mutant 946 in q.js: reason replaced with undefined
Mutant 947 in q.js: reason replaced with Promise.resolve(reason)
Mutant 948 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, null)
Mutant 949 in q.js: trackRejection(rejection, reason) replaced with trackRejection(undefined, reason)
Mutant 950 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, "different reason")
Mutant 951 in q.js: trackRejection replaced with untrackRejection
Mutant 952 in q.js: trackRejection replaced with trackUnhandledRejection
Mutant 953 in q.js: trackRejection replaced with resetUnhandledRejections
Mutant 954 in q.js: rejection replaced with rejection.message
Mutant 955 in q.js: rejection replaced with rejection.stack
Mutant 956 in q.js: rejection replaced with rejection.name
Mutant 957 in q.js: reason replaced with reason + 1
Mutant 958 in q.js: reason replaced with reason.toUpperCase()
Mutant 959 in q.js: reason replaced with reason.split("")
Mutant 960 in q.js: name === null || name === void 0 replaced with name === null
Mutant 961 in q.js: name === null || name === void 0 replaced with name === void 0
Mutant 962 in q.js: name === null || name === void 0 replaced with name !== null && name !== void 0
Mutant 963 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 964 in q.js: value.apply(void 0, args) replaced with value.apply(void 0, null)
Mutant 965 in q.js: value.apply(void 0, args) replaced with value.apply(undefined, args)
Mutant 966 in q.js: value.apply replaced with value.call
Mutant 967 in q.js: value.apply replaced with value.bind
Mutant 968 in q.js: value.apply replaced with value.toString
Mutant 969 in q.js: void 0 replaced with null
Mutant 970 in q.js: void 0 replaced with undefined
Mutant 971 in q.js: void 0 replaced with "PLACEHOLDER"
Mutant 972 in q.js: args replaced with null
Mutant 973 in q.js: args replaced with undefined
Mutant 974 in q.js: args replaced with []
Mutant 975 in q.js: value[name].apply(value, args) replaced with value[name].apply(this, args)
Mutant 976 in q.js: value[name].apply(value, args) replaced with value[name].apply(null, args)
Mutant 977 in q.js: value replaced with null
Mutant 978 in q.js: value replaced with undefined
Mutant 979 in q.js: value replaced with this
Mutant 980 in q.js: args replaced with []
Mutant 981 in q.js: args replaced with null
Mutant 982 in q.js: args replaced with undefined
Mutant 983 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.slice())
Mutant 984 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.concat())
Mutant 985 in q.js: value.apply replaced with value.call
Mutant 986 in q.js: value.apply replaced with value.bind
Mutant 987 in q.js: value.apply replaced with value.toString
Mutant 988 in q.js: thisp replaced with null
Mutant 989 in q.js: args replaced with undefined
Mutant 990 in q.js: args replaced with null
Mutant 991 in q.js: args replaced with []
Mutant 992 in q.js: object_keys replaced with object_values
Mutant 993 in q.js: object_keys replaced with object_entries
Mutant 994 in q.js: value replaced with "PLACEHOLDER"
Mutant 995 in q.js: value replaced with null
Mutant 996 in q.js: value replaced with undefined
Mutant 997 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.reject)
Mutant 998 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.notify)
Mutant 999 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.reject(new Error()))
Mutant 1000 in q.js: promise.then replaced with promise.catch
Mutant 1001 in q.js: promise.then replaced with promise.finally
Mutant 1002 in q.js: promise.then replaced with promise.always
Mutant 1003 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1004 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1005 in q.js: deferred.resolve replaced with deferred.resolve(reason)
Mutant 1006 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1007 in q.js: deferred.reject replaced with deferred.notify
Mutant 1008 in q.js: deferred.reject replaced with deferred.reject("error")
Mutant 1009 in q.js: deferred.notify replaced with deferred.reject
Mutant 1010 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1011 in q.js: deferred.notify replaced with undefined
Mutant 1012 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1013 in q.js: deferred.reject replaced with deferred.notify
Mutant 1014 in q.js: deferred.reject replaced with deferred.done
Mutant 1015 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args + 1)
Mutant 1016 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[0])
Mutant 1017 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args.slice(1))
Mutant 1018 in q.js: object replaced with null
Mutant 1019 in q.js: object replaced with undefined
Mutant 1020 in q.js: object replaced with {}
Mutant 1021 in q.js: op replaced with op + 1
Mutant 1022 in q.js: op replaced with op * 2
Mutant 1023 in q.js: op replaced with op - 1
Mutant 1024 in q.js: args replaced with args.length
Mutant 1025 in q.js: args replaced with args[0]
Mutant 1026 in q.js: args replaced with null
Mutant 1027 in q.js: object replaced with null
Mutant 1028 in q.js: object replaced with undefined
Mutant 1029 in q.js: object replaced with "different object"
Mutant 1030 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 1031 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(null, null)
Mutant 1032 in q.js: Q replaced with undefined
Mutant 1033 in q.js: value replaced with undefined
Mutant 1034 in q.js: value replaced with []
Mutant 1035 in q.js: fulfilled replaced with rejected
Mutant 1036 in q.js: fulfilled replaced with undefined
Mutant 1037 in q.js: fulfilled replaced with null
Mutant 1038 in q.js: rejected replaced with undefined
Mutant 1039 in q.js: rejected replaced with null
Mutant 1040 in q.js: rejected replaced with () => {}
Mutant 1041 in q.js: this.all replaced with this.then
Mutant 1042 in q.js: this.all replaced with this.catch
Mutant 1043 in q.js: this.all replaced with this.resolve
not replacing this.all with this.then
not replacing this.all with this.then
not replacing this.all with this.catch
not replacing this.all with this.catch
not replacing this.all with this.resolve
not replacing this.all with this.resolve
Mutant 1044 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null, array)
Mutant 1045 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(array, null)
Mutant 1046 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(array, undefined)
Mutant 1047 in q.js: fulfilled.apply replaced with fulfilled.call
Mutant 1048 in q.js: fulfilled.apply replaced with fulfilled.bind
Mutant 1049 in q.js: fulfilled.apply replaced with rejected.apply
Mutant 1050 in q.js: void 0 replaced with null
Mutant 1051 in q.js: void 0 replaced with undefined
Mutant 1052 in q.js: void 0 replaced with "undefined"
Mutant 1053 in q.js: array replaced with array[0]
Mutant 1054 in q.js: array replaced with array.slice(1)
Mutant 1055 in q.js: array replaced with array.concat(array)
Mutant 1056 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 1057 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration === "object"
Mutant 1058 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration === "function"
Mutant 1059 in q.js: arg replaced with null
Mutant 1060 in q.js: arg replaced with undefined
Mutant 1061 in q.js: arg replaced with "next"
Mutant 1062 in q.js: reject replaced with Q.reject
Mutant 1063 in q.js: reject replaced with Q.resolve
Mutant 1064 in q.js: reject replaced with Q.defer
Mutant 1065 in q.js: exception replaced with null
Mutant 1066 in q.js: exception replaced with undefined
Mutant 1067 in q.js: exception replaced with new Error("mutated error")
Mutant 1068 in q.js: result.done replaced with result.value
Mutant 1069 in q.js: result.done replaced with result.rejected
Mutant 1070 in q.js: result.done replaced with !result.done
Mutant 1071 in q.js: result.value replaced with result.value + 1
Mutant 1072 in q.js: result.value replaced with result.value - 1
Mutant 1073 in q.js: result.value replaced with result.value * 2
Mutant 1074 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, callback)
Mutant 1075 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback, callback)
Mutant 1076 in q.js: when(result.value, callback, errback) replaced with when(result.value, null, callback)
Mutant 1077 in q.js: result.value replaced with result.value + 1
Mutant 1078 in q.js: result.value replaced with result.value - 1
Mutant 1079 in q.js: result.value replaced with result.value * 2
Mutant 1080 in q.js: callback replaced with null
Mutant 1081 in q.js: callback replaced with undefined
Mutant 1082 in q.js: callback replaced with false
Mutant 1083 in q.js: errback replaced with null
Mutant 1084 in q.js: errback replaced with function () {}
Mutant 1085 in q.js: errback replaced with function (error) {
  throw error;
}
Mutant 1086 in q.js: arg replaced with undefined
Mutant 1087 in q.js: arg replaced with null
Mutant 1088 in q.js: arg replaced with 0
Mutant 1089 in q.js: isStopIteration(exception) replaced with isStopIteration(exception) || exception instanceof StopIteration
Mutant 1090 in q.js: isStopIteration(exception) replaced with isStopIteration(exception) && exception.value
Mutant 1091 in q.js: isStopIteration(exception) replaced with isStopIteration(exception) || exception.value
Mutant 1092 in q.js: isStopIteration replaced with isStopIteration + 1
Mutant 1093 in q.js: isStopIteration replaced with isStopIteration * 2
Mutant 1094 in q.js: isStopIteration replaced with isStopIteration = !isStopIteration
Mutant 1095 in q.js: exception replaced with exception.message
Mutant 1096 in q.js: exception replaced with exception.name
Mutant 1097 in q.js: exception.value replaced with exception
Mutant 1098 in q.js: exception.value replaced with exception.message
Mutant 1099 in q.js: exception.value replaced with exception.stack
Mutant 1100 in q.js: reject replaced with Q.reject
Mutant 1101 in q.js: reject replaced with Promise.reject
Mutant 1102 in q.js: when(result, callback, errback) replaced with when(result.value)
Mutant 1103 in q.js: when(result, callback, errback) replaced with when(Q(result.value))
Mutant 1104 in q.js: when(result, callback, errback) replaced with when(Q(result).value)
Mutant 1105 in q.js: when replaced with deferred.reject
Mutant 1106 in q.js: when replaced with Q.reject
Mutant 1107 in q.js: when replaced with Q.resolve
Mutant 1108 in q.js: result replaced with undefined
Mutant 1109 in q.js: result replaced with null
Mutant 1110 in q.js: callback replaced with deferred.reject
Mutant 1111 in q.js: callback replaced with self.promiseDispatch
Mutant 1112 in q.js: callback replaced with Q.resolve
Mutant 1113 in q.js: errback replaced with undefined
Mutant 1114 in q.js: errback replaced with null
Mutant 1115 in q.js: errback replaced with true
Mutant 1116 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1117 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(undefined)
Mutant 1118 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply("foo")
Mutant 1119 in q.js: this replaced with null
Mutant 1120 in q.js: this replaced with undefined
Mutant 1121 in q.js: this replaced with {}
Mutant 1122 in q.js: arguments replaced with null
Mutant 1123 in q.js: arguments replaced with []
Mutant 1124 in q.js: arguments replaced with undefined
Mutant 1125 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "throw")
Mutant 1126 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "return")
Mutant 1127 in q.js: continuer.bind replaced with continuer.call
Mutant 1128 in q.js: continuer.bind replaced with continuer.apply
Mutant 1129 in q.js: continuer replaced with continuer.bind(continuer, "next")
Mutant 1130 in q.js: continuer replaced with continuer.bind(null, "next")
Mutant 1131 in q.js: continuer replaced with function () {
  return continuer.call(null, "next");
}
Mutant 1132 in q.js: "next" replaced with "throw"
Mutant 1133 in q.js: "next" replaced with "done"
Mutant 1134 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "reject")
Mutant 1135 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "resolve")
Mutant 1136 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "next")
Mutant 1137 in q.js: "throw" replaced with "reject"
Mutant 1138 in q.js: "throw" replaced with "resolve"
Mutant 1139 in q.js: "throw" replaced with "foobar"
Mutant 1140 in q.js: callback replaced with errback
Mutant 1141 in q.js: callback replaced with reject
Mutant 1142 in q.js: callback replaced with resolve
Mutant 1143 in q.js: makeGenerator replaced with makeGenerator()
Mutant 1144 in q.js: makeGenerator replaced with makeGenerator.call(this)
Mutant 1145 in q.js: makeGenerator replaced with makeGenerator.apply(this, arguments)
Mutant 1146 in q.js: all replaced with any
Mutant 1147 in q.js: all replaced with some
Mutant 1148 in q.js: all replaced with none
Mutant 1149 in q.js: arguments replaced with []
Mutant 1150 in q.js: arguments replaced with [1]
Mutant 1151 in q.js: arguments replaced with [null]
Mutant 1152 in q.js: callback.apply(self, args) replaced with callback.apply(self, args[0])
Mutant 1153 in q.js: callback.apply(self, args) replaced with callback.apply(args)
Mutant 1154 in q.js: callback.apply(self, args) replaced with callback.apply(null)
Mutant 1155 in q.js: self replaced with this
Mutant 1156 in q.js: self replaced with null
Mutant 1157 in q.js: self replaced with undefined
Mutant 1158 in q.js: args replaced with args[0]
Mutant 1159 in q.js: args replaced with args.slice(1)
Mutant 1160 in q.js: args replaced with args.concat(["extra argument"])
Mutant 1161 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op + args)
Mutant 1162 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args + 1)
Mutant 1163 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.slice())
Mutant 1164 in q.js: object replaced with undefined
Mutant 1165 in q.js: object replaced with null
Mutant 1166 in q.js: object replaced with {}
Mutant 1167 in q.js: op replaced with op + 1
Mutant 1168 in q.js: op replaced with op + "1"
Mutant 1169 in q.js: op replaced with op.concat("1")
Mutant 1170 in q.js: args replaced with args[0]
Mutant 1171 in q.js: args replaced with args.slice(1)
Mutant 1172 in q.js: args replaced with null
Mutant 1173 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1174 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.slice())
Mutant 1175 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.concat([null]))
Mutant 1176 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1177 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1178 in q.js: deferred.resolve replaced with deferred.resolve(null)
Mutant 1179 in q.js: op replaced with op + 1
Mutant 1180 in q.js: op replaced with op * 2
Mutant 1181 in q.js: op replaced with op - 1
Mutant 1182 in q.js: args replaced with null
Mutant 1183 in q.js: args replaced with undefined
Mutant 1184 in q.js: args replaced with []
Mutant 1185 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key])
Mutant 1186 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("post", [key, value])
Mutant 1187 in q.js: object replaced with null
Mutant 1188 in q.js: object replaced with undefined
Mutant 1189 in q.js: object replaced with object.property
Mutant 1190 in q.js: "get" replaced with "set"
Mutant 1191 in q.js: "get" replaced with "post"
Mutant 1192 in q.js: [key] replaced with [key + 1]
Mutant 1193 in q.js: [key] replaced with [key - 1]
Mutant 1194 in q.js: [key] replaced with [key * 2]
Mutant 1195 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key])
Mutant 1196 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key, value])
Mutant 1197 in q.js: this.dispatch replaced with this.promiseDispatch
Mutant 1198 in q.js: "get" replaced with "set"
Mutant 1199 in q.js: "get" replaced with "apply"
Mutant 1200 in q.js: "get" replaced with "dispatch"
Mutant 1201 in q.js: [key] replaced with [key + 1]
Mutant 1202 in q.js: [key] replaced with [key - 1]
Mutant 1203 in q.js: [key] replaced with ["key"]
Mutant 1204 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, key])
Mutant 1205 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, null])
Mutant 1206 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, key])
Mutant 1207 in q.js: object replaced with object[key]
Mutant 1208 in q.js: object replaced with object.key
Mutant 1209 in q.js: "set" replaced with "get"
Mutant 1210 in q.js: "set" replaced with "apply"
Mutant 1211 in q.js: [key, value] replaced with [value, key]
Mutant 1212 in q.js: [key, value] replaced with [key, value, "extra argument"]
Mutant 1213 in q.js: [key, value] replaced with [key, Q(value)]
Mutant 1214 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value + 1])
Mutant 1215 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key + 1, value])
Mutant 1216 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value - 1])
Mutant 1217 in q.js: this.dispatch replaced with this.resolve
Mutant 1218 in q.js: this.dispatch replaced with this.reject
Mutant 1219 in q.js: this.dispatch replaced with this.then
Mutant 1220 in q.js: "set" replaced with "setValue"
Mutant 1221 in q.js: "set" replaced with "set" + "Value"
Mutant 1222 in q.js: [key, value] replaced with [key, value, 0]
Mutant 1223 in q.js: [key, value] replaced with [key, value, key]
Mutant 1224 in q.js: [key, value] replaced with [key, value, "value"]
Mutant 1225 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1226 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("get", [key])
Mutant 1227 in q.js: object replaced with null
Mutant 1228 in q.js: object replaced with 0
Mutant 1229 in q.js: "delete" replaced with "set"
Mutant 1230 in q.js: "delete" replaced with "post"
Mutant 1231 in q.js: "delete" replaced with "apply"
Mutant 1232 in q.js: [key] replaced with [key, key]
Mutant 1233 in q.js: [key] replaced with [key, ""]
Mutant 1234 in q.js: [key] replaced with [key, undefined]
Mutant 1235 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, undefined])
Mutant 1236 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, null])
Mutant 1237 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, false])
Mutant 1238 in q.js: this.dispatch replaced with this.reject
Mutant 1239 in q.js: this.dispatch replaced with this.then
Mutant 1240 in q.js: this.dispatch replaced with this.catch
Mutant 1241 in q.js: "delete" replaced with "remove"
Mutant 1242 in q.js: [key] replaced with [key, key]
Mutant 1243 in q.js: [key] replaced with [key + 1]
Mutant 1244 in q.js: [key] replaced with [key - 1]
Mutant 1245 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("get", [name, args])
Mutant 1246 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [args, name])
Mutant 1247 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, null])
Mutant 1248 in q.js: Q replaced with Q.reject
Mutant 1249 in q.js: Q replaced with Q.resolve
Mutant 1250 in q.js: Q replaced with Q.defer
Mutant 1251 in q.js: object replaced with undefined
Mutant 1252 in q.js: object replaced with this
Mutant 1253 in q.js: "post" replaced with "put"
Mutant 1254 in q.js: "post" replaced with "patch"
Mutant 1255 in q.js: [name, args] replaced with [name, args[0]]
Mutant 1256 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1257 in q.js: [name, args] replaced with [name, args.concat([42])]
Mutant 1258 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("put", [name, args])
Mutant 1259 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [args, name])
Mutant 1260 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.reverse()])
Mutant 1261 in q.js: "post" replaced with "get"
Mutant 1262 in q.js: "post" replaced with "apply"
Mutant 1263 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1264 in q.js: [name, args] replaced with [name, args.concat(args)]
Mutant 1265 in q.js: [name, args] replaced with [name, args.filter(function (arg) {
  return arg !== name;
})]
Mutant 1266 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1267 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1268 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)])
Mutant 1269 in q.js: Q replaced with Q.reject
Mutant 1270 in q.js: Q replaced with Q.resolve
Mutant 1271 in q.js: Q replaced with Q.defer
Mutant 1272 in q.js: object replaced with null
Mutant 1273 in q.js: object replaced with undefined
Mutant 1274 in q.js: object replaced with 0
Mutant 1275 in q.js: "post" replaced with "put"
Mutant 1276 in q.js: "post" replaced with "get"
Mutant 1277 in q.js: "post" replaced with "resolve"
Mutant 1278 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1279 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 0)]
Mutant 1280 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 3)]
Mutant 1281 in q.js: array_slice(arguments, 2) replaced with array_slice(void 0)
Mutant 1282 in q.js: array_slice(arguments, 2) replaced with array_slice(null)
Mutant 1283 in q.js: arguments replaced with array_slice(arguments, 0, 1)
Mutant 1284 in q.js: arguments replaced with array_slice(arguments, 1, 2)
Mutant 1285 in q.js: 2 replaced with arguments.length
Mutant 1286 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1287 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1288 in q.js: this.dispatch replaced with this.resolve
Mutant 1289 in q.js: this.dispatch replaced with this.reject
Mutant 1290 in q.js: "post" replaced with "get"
Mutant 1291 in q.js: "post" replaced with "set"
Mutant 1292 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1293 in q.js: [name, array_slice(arguments, 1)] replaced with [name, arguments.slice(1)]
Mutant 1294 in q.js: [name, array_slice(arguments, 1)] replaced with [name, [].slice.call(arguments, 1)]
Mutant 1295 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1296 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1297 in q.js: arguments replaced with 1 + 1
Mutant 1298 in q.js: arguments replaced with "hello world"
Mutant 1299 in q.js: arguments replaced with Math.random()
Mutant 1300 in q.js: 1 replaced with 0
Mutant 1301 in q.js: 1 replaced with -1
Mutant 1302 in q.js: 1 replaced with void 0
Mutant 1303 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [void 0, args])
Mutant 1304 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, [args]])
Mutant 1305 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, args.slice(0)])
Mutant 1306 in q.js: object replaced with null
Mutant 1307 in q.js: object replaced with undefined
Mutant 1308 in q.js: object replaced with function () {}
Mutant 1309 in q.js: "apply" replaced with "call"
Mutant 1310 in q.js: "apply" replaced with "bind"
Mutant 1311 in q.js: "apply" replaced with "post"
Mutant 1312 in q.js: [void 0, args] replaced with [void 1, args]
Mutant 1313 in q.js: [void 0, args] replaced with [void 0, args.slice()]
Mutant 1314 in q.js: [void 0, args] replaced with [void 0, args.concat()]
Mutant 1315 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("call", [void 0, args])
Mutant 1316 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [void 0, [args]])
Mutant 1317 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [null, args])
Mutant 1318 in q.js: this.dispatch replaced with this.reject
Mutant 1319 in q.js: this.dispatch replaced with this.notify
Mutant 1320 in q.js: this.dispatch replaced with this.resolve
Mutant 1321 in q.js: "apply" replaced with "call"
Mutant 1322 in q.js: "apply" replaced with "bind"
Mutant 1323 in q.js: "apply" replaced with "concat"
Mutant 1324 in q.js: [void 0, args] replaced with [void 0, args, void 0]
Mutant 1325 in q.js: [void 0, args] replaced with [void 0, args, null]
Mutant 1326 in q.js: [void 0, args] replaced with [void 0, args, undefined]
Mutant 1327 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1328 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)])
Mutant 1329 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 4)])
Mutant 1330 in q.js: Q replaced with Q.reject
Mutant 1331 in q.js: Q replaced with Q.resolve
Mutant 1332 in q.js: Q replaced with Q.all
Mutant 1333 in q.js: object replaced with null
Mutant 1334 in q.js: object replaced with undefined
Mutant 1335 in q.js: object replaced with "foo"
Mutant 1336 in q.js: "apply" replaced with "call"
Mutant 1337 in q.js: "apply" replaced with "bind"
Mutant 1338 in q.js: "apply" replaced with "applyAsync"
Mutant 1339 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1340 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, arguments]
Mutant 1341 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 1, 2)]
Mutant 1342 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1343 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1, 2))
Mutant 1344 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1345 in q.js: arguments replaced with array_slice(arguments, 0, -1)
Mutant 1346 in q.js: arguments replaced with array_slice(arguments, 0, arguments.length - 1)
Mutant 1347 in q.js: 1 replaced with arguments.length - 1
Mutant 1348 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [null, array_slice(arguments)])
Mutant 1349 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1350 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments).reverse()])
Mutant 1351 in q.js: "apply" replaced with "call"
Mutant 1352 in q.js: "apply" replaced with "bind"
Mutant 1353 in q.js: "apply" replaced with "concat"
Mutant 1354 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1355 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1356 in q.js: arguments replaced with array_slice(arguments, 1, 1)
Mutant 1357 in q.js: object replaced with null
Mutant 1358 in q.js: object replaced with undefined
Mutant 1359 in q.js: object replaced with this
Mutant 1360 in q.js: array_slice(arguments, 1) replaced with array_slice(args[0])
Mutant 1361 in q.js: array_slice(arguments, 1) replaced with array_slice(args.length)
Mutant 1362 in q.js: array_slice(arguments, 1) replaced with array_slice(args[1])
Mutant 1363 in q.js: array_slice replaced with array_splice
Mutant 1364 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1365 in q.js: arguments replaced with array_slice(arguments, 0, 1)
Mutant 1366 in q.js: arguments replaced with array_slice(arguments, 1, 2)
Mutant 1367 in q.js: 1 replaced with 0
Mutant 1368 in q.js: 1 replaced with -1
Mutant 1369 in q.js: 1 replaced with array.length - 1
Mutant 1370 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1371 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, -1)
Mutant 1372 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, arguments.length - 1)
Mutant 1373 in q.js: arguments replaced with null
Mutant 1374 in q.js: arguments replaced with undefined
Mutant 1375 in q.js: arguments replaced with {}
Mutant 1376 in q.js: arguments replaced with args
Mutant 1377 in q.js: arguments replaced with this.args
Mutant 1378 in q.js: arguments replaced with arguments.slice()
Mutant 1379 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1380 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1381 in q.js: array_slice(arguments) replaced with arguments.slice(1)
Mutant 1382 in q.js: array_slice replaced with arguments[0]
Mutant 1383 in q.js: arguments replaced with void 0
Mutant 1384 in q.js: arguments replaced with null
Mutant 1385 in q.js: arguments replaced with "foo"
Mutant 1386 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1387 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [1])
Mutant 1388 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", ["foo"])
Mutant 1389 in q.js: Q replaced with Q.reject
Mutant 1390 in q.js: object replaced with null
Mutant 1391 in q.js: object replaced with {}
Mutant 1392 in q.js: object replaced with object.length
Mutant 1393 in q.js: "keys" replaced with "values"
Mutant 1394 in q.js: "keys" replaced with "length"
Mutant 1395 in q.js: "keys" replaced with "getOwnPropertyNames"
Mutant 1396 in q.js: [] replaced with [1]
Mutant 1397 in q.js: [] replaced with [undefined]
Mutant 1398 in q.js: [] replaced with [null]
Mutant 1399 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1400 in q.js: this.dispatch("keys", []) replaced with this.dispatch("keys", [1, 2, 3])
Mutant 1401 in q.js: this.dispatch("keys", []) replaced with this.dispatch("keys", [object])
Mutant 1402 in q.js: "keys" replaced with "values"
Mutant 1403 in q.js: "keys" replaced with "length"
Mutant 1404 in q.js: "keys" replaced with "filter"
Mutant 1405 in q.js: [] replaced with [1]
Mutant 1406 in q.js: [] replaced with null
Mutant 1407 in q.js: [] replaced with "foo"
Mutant 1408 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "rejected"
Mutant 1409 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "pending"
Mutant 1410 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "fulfilled" && promise.inspect().value === undefined
Mutant 1411 in q.js: promise.inspect replaced with promise.state
Mutant 1412 in q.js: promise.inspect replaced with promise.fulfillmentValue
Mutant 1413 in q.js: promise.inspect replaced with promise.rejectionReason
Mutant 1414 in q.js: --pendingCount === 0 replaced with pendingCount < 0
Mutant 1415 in q.js: --pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1416 in q.js: --pendingCount === 0 replaced with pendingCount === 0 && promises.length > 0
Mutant 1417 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1418 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1419 in q.js: promises replaced with promises.slice(1)
Mutant 1420 in q.js: promises replaced with promises.concat([])
Mutant 1421 in q.js: promises replaced with promises.filter(function () {
  return true;
})
Mutant 1422 in q.js: deferred.notify replaced with deferred.reject
Mutant 1423 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1424 in q.js: deferred.notify replaced with deferred.progress
Mutant 1425 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: index
}
Mutant 1426 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress + 1
}
Mutant 1427 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress - 1
}
Mutant 1428 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1429 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1430 in q.js: pendingCount === 0 replaced with promises.length === 0
Mutant 1431 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1432 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1433 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1434 in q.js: promises replaced with promises.slice(1)
Mutant 1435 in q.js: promises replaced with promises.slice(0, -1)
Mutant 1436 in q.js: promises replaced with promises.slice(-1)
Mutant 1437 in q.js: all replaced with any
Mutant 1438 in q.js: all replaced with none
Mutant 1439 in q.js: all replaced with allSettled
Mutant 1440 in q.js: this replaced with null
Mutant 1441 in q.js: this replaced with []
Mutant 1442 in q.js: this replaced with [1, 2, 3]
Mutant 1443 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1444 in q.js: promises.length === 0 replaced with promises.length === 1
Mutant 1445 in q.js: promises.length === 0 replaced with promises.length > 1
Mutant 1446 in q.js: Q.resolve replaced with Q.reject
Mutant 1447 in q.js: Q.resolve replaced with Q.defer
Mutant 1448 in q.js: Q.resolve replaced with Q.all
Mutant 1449 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected, onProgress))
Mutant 1450 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onRejected, onFulfilled, onProgress))
Mutant 1451 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onProgress, onRejected, onFulfilled))
Mutant 1452 in q.js: promise replaced with promise.then()
Mutant 1453 in q.js: promise replaced with promise.catch()
Mutant 1454 in q.js: promise replaced with promise.finally()
Mutant 1455 in q.js: onFulfilled replaced with onRejected
Mutant 1456 in q.js: onFulfilled replaced with onProgress
Mutant 1457 in q.js: onFulfilled replaced with noop
Mutant 1458 in q.js: onRejected replaced with onFulfilled
Mutant 1459 in q.js: onRejected replaced with noop
Mutant 1460 in q.js: onProgress replaced with onRejected
Mutant 1461 in q.js: onProgress replaced with onFulfilled
Mutant 1462 in q.js: onProgress replaced with noop
Mutant 1463 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1464 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1465 in q.js: deferred.resolve replaced with undefined
Mutant 1466 in q.js: result replaced with promise
Mutant 1467 in q.js: result replaced with index
Mutant 1468 in q.js: result replaced with promise.value
Mutant 1469 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1470 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1471 in q.js: pendingCount === 0 replaced with promise.state === "rejected"
Mutant 1472 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1473 in q.js: deferred.reject replaced with deferred.notify
Mutant 1474 in q.js: rejection replaced with null
Mutant 1475 in q.js: rejection replaced with undefined
Mutant 1476 in q.js: rejection replaced with new Error("Custom error message")
Mutant 1477 in q.js: any replaced with all
Mutant 1478 in q.js: any replaced with anyResolved
Mutant 1479 in q.js: any replaced with allSettled
Mutant 1480 in q.js: this replaced with null
Mutant 1481 in q.js: this replaced with undefined
Mutant 1482 in q.js: this replaced with 0
Mutant 1483 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "anySettled", "allSettled")
Mutant 1484 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allSettled", "allResolved")
Mutant 1485 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allSettled", "allFulfilled")
Mutant 1486 in q.js: allResolved replaced with allRejected
Mutant 1487 in q.js: allResolved replaced with anyResolved
Mutant 1488 in q.js: allResolved replaced with allSettled
Mutant 1489 in q.js: "allResolved" replaced with "allSettled"
Mutant 1490 in q.js: "allResolved" replaced with "any"
Mutant 1491 in q.js: "allResolved" replaced with "all"
Mutant 1492 in q.js: "allSettled" replaced with "allFulfilled"
Mutant 1493 in q.js: "allSettled" replaced with "allRejected"
Mutant 1494 in q.js: "allSettled" replaced with "anySettled"
Mutant 1495 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.reject)
Mutant 1496 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.defer)
Mutant 1497 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.all)
Mutant 1498 in q.js: array_map replaced with array_filter
Mutant 1499 in q.js: array_map replaced with array_reduce
Mutant 1500 in q.js: array_map replaced with array_find
Mutant 1501 in q.js: promises replaced with promises.length
Mutant 1502 in q.js: promises replaced with promises.reverse()
Mutant 1503 in q.js: promises replaced with promises.slice(1)
Mutant 1504 in q.js: Q replaced with Q.reject
Mutant 1505 in q.js: Q replaced with Q.resolve
Mutant 1506 in q.js: Q replaced with Q.defer
Mutant 1507 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop))
Mutant 1508 in q.js: promise replaced with null
Mutant 1509 in q.js: promise replaced with undefined
Mutant 1510 in q.js: promise replaced with Q.reject()
Mutant 1511 in q.js: noop replaced with null
Mutant 1512 in q.js: noop replaced with undefined
Mutant 1513 in q.js: noop replaced with function () {}
Mutant 1514 in q.js: noop replaced with function (err) {
  throw err;
}
Mutant 1515 in q.js: noop replaced with function (err) {
  return err;
}
Mutant 1516 in q.js: allResolved replaced with allSettled
Mutant 1517 in q.js: allResolved replaced with any
Mutant 1518 in q.js: this replaced with null
Mutant 1519 in q.js: this replaced with undefined
Mutant 1520 in q.js: this replaced with Q.resolve(promises)
Mutant 1521 in q.js: Q replaced with Q.reject
Mutant 1522 in q.js: Q replaced with Q.defer
Mutant 1523 in q.js: Q replaced with Q.resolve
Mutant 1524 in q.js: promises replaced with promises.length
Mutant 1525 in q.js: promises replaced with promises[0]
Mutant 1526 in q.js: promises replaced with promises.slice(1)
Mutant 1527 in q.js: Q replaced with Q.reject
Mutant 1528 in q.js: Q replaced with Q.when
Mutant 1529 in q.js: Q replaced with Q.defer
Mutant 1530 in q.js: promise replaced with promise.inspect()
Mutant 1531 in q.js: promise replaced with deferred.promise
Mutant 1532 in q.js: promise replaced with Q.reject(promise)
Mutant 1533 in q.js: promise.then(regardless, regardless) replaced with promise.then(regardless, regardless, regardless)
Mutant 1534 in q.js: promise.then(regardless, regardless) replaced with promise.then(regardless, regardless, regardless, regardless)
Mutant 1535 in q.js: promise.then(regardless, regardless) replaced with promise.then(regardless, regardless, regardless, regardless, regardless)
Mutant 1536 in q.js: regardless replaced with promise.inspect()
Mutant 1537 in q.js: regardless replaced with promise.then(noop, noop)
Mutant 1538 in q.js: regardless replaced with promise.then(function (value) {
  return value;
}, function (reason) {
  throw reason;
})
Mutant 1539 in q.js: regardless replaced with regardless()
Mutant 1540 in q.js: regardless replaced with function () {}
Mutant 1541 in q.js: regardless replaced with undefined
Mutant 1542 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(null, rejected)
Mutant 1543 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(undefined, rejected)
Mutant 1544 in q.js: object replaced with Q.reject("error")
Mutant 1545 in q.js: void 0 replaced with null
Mutant 1546 in q.js: void 0 replaced with undefined
Mutant 1547 in q.js: rejected replaced with function (reason) {
  throw reason;
}
Mutant 1548 in q.js: rejected replaced with function (reason) {
  return reason;
}
Mutant 1549 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1550 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, rejected)
Mutant 1551 in q.js: this.then(void 0, rejected) replaced with this.then(rejected, null)
Mutant 1552 in q.js: void 0 replaced with null
Mutant 1553 in q.js: void 0 replaced with undefined
Mutant 1554 in q.js: void 0 replaced with 0
Mutant 1555 in q.js: rejected replaced with resolved
Mutant 1556 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(null, null, progressed)
Mutant 1557 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(undefined, undefined, progressed)
Mutant 1558 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(this, this, progressed)
Mutant 1559 in q.js: object replaced with 0
Mutant 1560 in q.js: void 0 replaced with null
Mutant 1561 in q.js: void 0 replaced with undefined
Mutant 1562 in q.js: void 0 replaced with 0
Mutant 1563 in q.js: void 0 replaced with null
Mutant 1564 in q.js: void 0 replaced with undefined
Mutant 1565 in q.js: void 0 replaced with 0
Mutant 1566 in q.js: progressed replaced with deferred.notify()
Mutant 1567 in q.js: progressed replaced with deferred.reject()
Mutant 1568 in q.js: progressed replaced with deferred.resolve()
Mutant 1569 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1570 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, progressed)
Mutant 1571 in q.js: void 0 replaced with null
Mutant 1572 in q.js: void 0 replaced with undefined
Mutant 1573 in q.js: void 0 replaced with "undefined"
Mutant 1574 in q.js: void 0 replaced with null
Mutant 1575 in q.js: void 0 replaced with true
Mutant 1576 in q.js: void 0 replaced with function () {}
Mutant 1577 in q.js: progressed replaced with null
Mutant 1578 in q.js: progressed replaced with undefined
Mutant 1579 in q.js: progressed replaced with function () {}
Mutant 1580 in q.js: Q replaced with Q.reject
Mutant 1581 in q.js: Q replaced with Q.when
Mutant 1582 in q.js: Q replaced with Q.delay
Mutant 1583 in q.js: object replaced with null
Mutant 1584 in q.js: object replaced with undefined
Mutant 1585 in q.js: object replaced with 0
Mutant 1586 in q.js: callback replaced with callback.apply(null, arguments)
Mutant 1587 in q.js: callback replaced with callback.bind(null, arguments)
Mutant 1588 in q.js: callback replaced with callback.call(null, arguments)
Mutant 1589 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.apply !== "function"
Mutant 1590 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback && typeof callback.apply === "function"
Mutant 1591 in q.js: Q replaced with Q.reject
Mutant 1592 in q.js: Q replaced with Q.resolve
Mutant 1593 in q.js: Q replaced with Q.when
Mutant 1594 in q.js: callback replaced with null
Mutant 1595 in q.js: callback replaced with undefined
Mutant 1596 in q.js: callback replaced with false
Mutant 1597 in q.js: callback.fcall replaced with callback.call
Mutant 1598 in q.js: callback.fcall replaced with callback.bind
Mutant 1599 in q.js: callback.fcall replaced with callback.apply
not replacing callback.fcall with callback.call
not replacing callback.fcall with callback.call
not replacing callback.fcall with callback.bind
not replacing callback.fcall with callback.bind
not replacing callback.fcall with callback.apply
not replacing callback.fcall with callback.apply
Mutant 1600 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress, 1 + 1)
Mutant 1601 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress, Q.delay(1000))
Mutant 1602 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress, Q.reject("error"))
Mutant 1603 in q.js: object replaced with 42
Mutant 1604 in q.js: object replaced with "hello world"
Mutant 1605 in q.js: fulfilled replaced with rejected
Mutant 1606 in q.js: fulfilled replaced with progressed
Mutant 1607 in q.js: fulfilled replaced with notified
Mutant 1608 in q.js: rejected replaced with rejected.then(null, fulfilled)
Mutant 1609 in q.js: rejected replaced with rejected.then(function () {
  return fulfilled;
})
Mutant 1610 in q.js: rejected replaced with rejected.then(function () {
  throw fulfilled;
})
Mutant 1611 in q.js: progress replaced with null
Mutant 1612 in q.js: progress replaced with undefined
Mutant 1613 in q.js: progress replaced with Q.reject
Mutant 1614 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(null, promise)
Mutant 1615 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(promise, error)
Mutant 1616 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, progressed)
Mutant 1617 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected)
Mutant 1618 in q.js: fulfilled replaced with rejected
Mutant 1619 in q.js: fulfilled replaced with progressed
Mutant 1620 in q.js: fulfilled replaced with void 0
Mutant 1621 in q.js: progress replaced with void 0
Mutant 1622 in q.js: progress replaced with null
Mutant 1623 in q.js: progress replaced with function () {}
Mutant 1624 in q.js: onUnhandledError replaced with onUnhandledError()
Mutant 1625 in q.js: onUnhandledError replaced with null
Mutant 1626 in q.js: onUnhandledError replaced with undefined
Mutant 1627 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(null, onUnhandledError)
Mutant 1628 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(undefined, onUnhandledError)
Mutant 1629 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError, null)
Mutant 1630 in q.js: void 0 replaced with null
Mutant 1631 in q.js: void 0 replaced with undefined
Mutant 1632 in q.js: void 0 replaced with 0
Mutant 1633 in q.js: onUnhandledError replaced with onUnhandledRejection
Mutant 1634 in q.js: onUnhandledError replaced with onUnhandledException
Mutant 1635 in q.js: onUnhandledError replaced with onUnhandledFailure
Mutant 1636 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, null)
Mutant 1637 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, "Error message")
Mutant 1638 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, new Error("Error message"))
Mutant 1639 in q.js: Q replaced with Q.reject
Mutant 1640 in q.js: Q replaced with undefined
Mutant 1641 in q.js: object replaced with undefined
Mutant 1642 in q.js: object replaced with 42
Mutant 1643 in q.js: ms replaced with 0
Mutant 1644 in q.js: ms replaced with -1
Mutant 1645 in q.js: ms replaced with NaN
Mutant 1646 in q.js: error replaced with null
Mutant 1647 in q.js: error replaced with undefined
Mutant 1648 in q.js: error replaced with "ERROR"
Mutant 1649 in q.js: defer replaced with defer.reject
Mutant 1650 in q.js: defer replaced with defer.resolve
Mutant 1651 in q.js: defer replaced with defer.notify
Mutant 1652 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1653 in q.js: !error || "string" === typeof error replaced with !error && "string" === typeof error
Mutant 1654 in q.js: !error || "string" === typeof error replaced with error || "string" === typeof error
Mutant 1655 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1656 in q.js: deferred.reject replaced with deferred.notify
Mutant 1657 in q.js: deferred.reject replaced with null
Mutant 1658 in q.js: error replaced with null
Mutant 1659 in q.js: error replaced with {}
Mutant 1660 in q.js: error replaced with "error"
Mutant 1661 in q.js: clearTimeout replaced with clearInterval
Mutant 1662 in q.js: timeoutId replaced with null
Mutant 1663 in q.js: timeoutId replaced with undefined
Mutant 1664 in q.js: timeoutId replaced with 0
Mutant 1665 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1666 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1667 in q.js: deferred.resolve replaced with undefined
Mutant 1668 in q.js: value replaced with null
Mutant 1669 in q.js: value replaced with undefined
Mutant 1670 in q.js: clearTimeout replaced with clearInterval
Mutant 1671 in q.js: timeoutId replaced with null
Mutant 1672 in q.js: timeoutId replaced with undefined
Mutant 1673 in q.js: timeoutId replaced with 0
Mutant 1674 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1675 in q.js: deferred.reject replaced with deferred.notify
Mutant 1676 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1677 in q.js: timeout === void 0 replaced with timeout > 0
Mutant 1678 in q.js: timeout === void 0 replaced with timeout < 0
Mutant 1679 in q.js: object replaced with null
Mutant 1680 in q.js: object replaced with undefined
Mutant 1681 in q.js: object replaced with NaN
Mutant 1682 in q.js: timeout replaced with "0"
Mutant 1683 in q.js: timeout replaced with "-1"
Mutant 1684 in q.js: timeout replaced with "NaN"
Mutant 1685 in q.js: value replaced with undefined
Mutant 1686 in q.js: value replaced with null
Mutant 1687 in q.js: value replaced with 0
Mutant 1688 in q.js: callback replaced with null
Mutant 1689 in q.js: callback replaced with function () {}
Mutant 1690 in q.js: callback replaced with function (error) {
  throw error;
}
Mutant 1691 in q.js: args replaced with null
Mutant 1692 in q.js: args replaced with []
Mutant 1693 in q.js: args replaced with {}
Mutant 1694 in q.js: args replaced with args.slice(1)
Mutant 1695 in q.js: args replaced with args.concat([null])
Mutant 1696 in q.js: args replaced with [].concat(args)
Mutant 1697 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1698 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1699 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1700 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1701 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1702 in q.js: deferred.makeNodeResolver() replaced with () => {}
Mutant 1703 in q.js: this.fapply replaced with this.fail
Mutant 1704 in q.js: this.fapply replaced with this.then
Mutant 1705 in q.js: this.fapply replaced with this.dispatch
not replacing this.fapply with this.fail
not replacing this.fapply with this.fail
not replacing this.fapply with this.then
not replacing this.fapply with this.then
not replacing this.fapply with this.dispatch
not replacing this.fapply with this.dispatch
Mutant 1706 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1707 in q.js: deferred.reject replaced with deferred.notify
Mutant 1708 in q.js: deferred.reject replaced with undefined
Mutant 1709 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1710 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 3))
Mutant 1711 in q.js: arguments replaced with args.slice(1)
Mutant 1712 in q.js: arguments replaced with [].slice.call(args, 1)
Mutant 1713 in q.js: arguments replaced with args.slice(0, -1)
Mutant 1714 in q.js: 1 replaced with 0
Mutant 1715 in q.js: 1 replaced with -1
Mutant 1716 in q.js: 1 replaced with NaN
Mutant 1717 in q.js: Q replaced with Q.reject
Mutant 1718 in q.js: Q replaced with Q.resolve
Mutant 1719 in q.js: Q replaced with Q.defer
Mutant 1720 in q.js: callback replaced with null
Mutant 1721 in q.js: callback replaced with undefined
Mutant 1722 in q.js: callback replaced with () => {}
Mutant 1723 in q.js: args replaced with args[0]
Mutant 1724 in q.js: args replaced with null
Mutant 1725 in q.js: args replaced with undefined
Mutant 1726 in q.js: array_slice replaced with array_slice.length
Mutant 1727 in q.js: arguments replaced with deferred.reject
Mutant 1728 in q.js: arguments replaced with undefined
Mutant 1729 in q.js: arguments replaced with null
Mutant 1730 in q.js: defer replaced with deferred.resolve
Mutant 1731 in q.js: defer replaced with deferred.reject
Mutant 1732 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1733 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1734 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1735 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1736 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(false)
Mutant 1737 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(0)
Mutant 1738 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeRejector
Mutant 1739 in q.js: deferred.makeNodeResolver replaced with deferred.resolve
Mutant 1740 in q.js: deferred.makeNodeResolver replaced with deferred.reject
Mutant 1741 in q.js: nodeArgs replaced with nodeArgs.shift()
Mutant 1742 in q.js: nodeArgs replaced with nodeArgs.pop()
Mutant 1743 in q.js: nodeArgs replaced with nodeArgs.reverse()
Mutant 1744 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1745 in q.js: deferred.reject replaced with null
Mutant 1746 in q.js: deferred.reject replaced with function () {}
Mutant 1747 in q.js: callback === undefined replaced with callback !== undefined
Mutant 1748 in q.js: callback === undefined replaced with typeof callback !== "function"
Mutant 1749 in q.js: callback === undefined replaced with callback.length > 0
Mutant 1750 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1751 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 1752 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[0] + 1)
Mutant 1753 in q.js: arguments replaced with 1
Mutant 1754 in q.js: arguments replaced with null
Mutant 1755 in q.js: arguments replaced with {}
Mutant 1756 in q.js: 1 replaced with -1
Mutant 1757 in q.js: 1 replaced with 2
Mutant 1758 in q.js: 1 replaced with 0
Mutant 1759 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1760 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1761 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1762 in q.js: arguments replaced with null
Mutant 1763 in q.js: arguments replaced with {}
Mutant 1764 in q.js: arguments replaced with this
Mutant 1765 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1766 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1767 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1768 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(true)
Mutant 1769 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(false)
Mutant 1770 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1771 in q.js: Q replaced with undefined
Mutant 1772 in q.js: Q replaced with null
Mutant 1773 in q.js: Q replaced with 1
Mutant 1774 in q.js: callback replaced with undefined
Mutant 1775 in q.js: callback replaced with null
Mutant 1776 in q.js: callback replaced with Promise.resolve()
Mutant 1777 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1778 in q.js: nodeArgs replaced with nodeArgs.pop()
Mutant 1779 in q.js: nodeArgs replaced with nodeArgs.shift()
Mutant 1780 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1781 in q.js: deferred.reject replaced with deferred.notify
Mutant 1782 in q.js: deferred.reject replaced with undefined
Mutant 1783 in q.js: arguments replaced with arguments[0]
Mutant 1784 in q.js: arguments replaced with arguments[arguments.length - 1]
Mutant 1785 in q.js: arguments replaced with arguments.slice(1)
Mutant 1786 in q.js: args.unshift replaced with args.shift
Mutant 1787 in q.js: args.unshift replaced with args.pop
Mutant 1788 in q.js: args.unshift replaced with args.push
Mutant 1789 in q.js: this replaced with null
Mutant 1790 in q.js: this replaced with undefined
Mutant 1791 in q.js: this replaced with Q.makeNodeResolver()
Mutant 1792 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null)
Mutant 1793 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(undefined)
Mutant 1794 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(function () {})
Mutant 1795 in q.js: Q.denodeify.apply replaced with Q.nbind
Mutant 1796 in q.js: Q.denodeify.apply replaced with Q.nfcall
Mutant 1797 in q.js: Q.denodeify.apply replaced with Q.nfapply
Mutant 1798 in q.js: void 0 replaced with null
Mutant 1799 in q.js: void 0 replaced with undefined
Mutant 1800 in q.js: void 0 replaced with void 1
Mutant 1801 in q.js: args replaced with args.unshift(this)
Mutant 1802 in q.js: args replaced with args.push(this)
Mutant 1803 in q.js: args replaced with args.unshift(null)
Mutant 1804 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 1, 2))
Mutant 1805 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 2))
Mutant 1806 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 3))
Mutant 1807 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1808 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1809 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1810 in q.js: 2 replaced with 1
Mutant 1811 in q.js: 2 replaced with 3
Mutant 1812 in q.js: 2 replaced with 0
Mutant 1813 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1814 in q.js: baseArgs.concat replaced with baseArgs.shift
Mutant 1815 in q.js: baseArgs.concat replaced with baseArgs.pop
Mutant 1816 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1817 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, arguments.length - 1)
Mutant 1818 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1819 in q.js: arguments replaced with null
Mutant 1820 in q.js: arguments replaced with undefined
Mutant 1821 in q.js: arguments replaced with NaN
Mutant 1822 in q.js: defer replaced with defer.resolve
Mutant 1823 in q.js: defer replaced with defer.reject
Mutant 1824 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1825 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1826 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1827 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve()
Mutant 1828 in q.js: deferred.makeNodeResolver() replaced with deferred.reject()
Mutant 1829 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1830 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments.slice())
Mutant 1831 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments.concat())
Mutant 1832 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments.splice())
Mutant 1833 in q.js: callback.apply replaced with callback.call
Mutant 1834 in q.js: callback.apply replaced with callback.bind
Mutant 1835 in q.js: thisp replaced with null
Mutant 1836 in q.js: thisp replaced with {}
Mutant 1837 in q.js: thisp replaced with this
Mutant 1838 in q.js: arguments replaced with baseArgs
Mutant 1839 in q.js: arguments replaced with nodeArgs[0]
Mutant 1840 in q.js: arguments replaced with undefined
Mutant 1841 in q.js: bound replaced with callback.apply(thisp, nodeArgs)
Mutant 1842 in q.js: bound replaced with Q(callback.apply(thisp, nodeArgs)).fail(deferred.reject)
Mutant 1843 in q.js: bound replaced with Q(callback.apply(thisp, nodeArgs)).fail(deferred.reject).then(deferred.resolve)
Mutant 1844 in q.js: nodeArgs replaced with null
Mutant 1845 in q.js: nodeArgs replaced with undefined
Mutant 1846 in q.js: nodeArgs replaced with {}.push
Mutant 1847 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1848 in q.js: deferred.reject replaced with deferred.notify
Mutant 1849 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1850 in q.js: array_slice(arguments, 0) replaced with array_slice(args, 1)
Mutant 1851 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments.slice(1))
Mutant 1852 in q.js: arguments replaced with null
Mutant 1853 in q.js: arguments replaced with undefined
Mutant 1854 in q.js: arguments replaced with "foo"
Mutant 1855 in q.js: 0 replaced with 1
Mutant 1856 in q.js: 0 replaced with -1
Mutant 1857 in q.js: 0 replaced with null
Mutant 1858 in q.js: args.unshift replaced with args.push
Mutant 1859 in q.js: args.unshift replaced with args.concat
Mutant 1860 in q.js: args.unshift replaced with args.slice
Mutant 1861 in q.js: this replaced with null
Mutant 1862 in q.js: this replaced with undefined
Mutant 1863 in q.js: this replaced with 0
Mutant 1864 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this)
Mutant 1865 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null)
Mutant 1866 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined)
Mutant 1867 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1868 in q.js: Q.nbind.apply replaced with Q.nbind.bind
Mutant 1869 in q.js: Q.nbind.apply replaced with Q.nbind.dispatch
Mutant 1870 in q.js: void 0 replaced with null
Mutant 1871 in q.js: void 0 replaced with undefined
Mutant 1872 in q.js: void 0 replaced with 0
Mutant 1873 in q.js: args replaced with args.slice()
Mutant 1874 in q.js: args replaced with args.concat()
Mutant 1875 in q.js: args replaced with args.slice(0)
Mutant 1876 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.reverse())
Mutant 1877 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.slice(1))
Mutant 1878 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.concat([1, 2, 3]))
Mutant 1879 in q.js: Q replaced with 0
Mutant 1880 in q.js: Q replaced with "Q"
Mutant 1881 in q.js: Q replaced with null
Mutant 1882 in q.js: object replaced with null
Mutant 1883 in q.js: object replaced with undefined
Mutant 1884 in q.js: name replaced with name + 1
Mutant 1885 in q.js: name replaced with name.toUpperCase()
Mutant 1886 in q.js: name replaced with name.length
Mutant 1887 in q.js: args replaced with args.slice(1)
Mutant 1888 in q.js: args replaced with args.concat(["newArg"])
Mutant 1889 in q.js: args replaced with null
Mutant 1890 in q.js: array_slice replaced with [1, 2, 3]
Mutant 1891 in q.js: array_slice replaced with null
Mutant 1892 in q.js: array_slice replaced with "hello"
Mutant 1893 in q.js: args || [] replaced with null
Mutant 1894 in q.js: args || [] replaced with undefined
Mutant 1895 in q.js: args || [] replaced with []
Mutant 1896 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1897 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1898 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1899 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1900 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1901 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver.bind(null)
Mutant 1902 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeResolver + 1
Mutant 1903 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1904 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("put", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("put", [name, nodeArgs])
Mutant 1905 in q.js: "post" replaced with "get"
Mutant 1906 in q.js: "post" replaced with "put"
Mutant 1907 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1908 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1909 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(1)]
Mutant 1910 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1911 in q.js: deferred.reject replaced with deferred.notify
Mutant 1912 in q.js: deferred.reject replaced with undefined
Mutant 1913 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1914 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1915 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 2, 3)
Mutant 1916 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1917 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1918 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1919 in q.js: 2 replaced with 1
Mutant 1920 in q.js: 2 replaced with 3
Mutant 1921 in q.js: 2 replaced with Math.random()
Mutant 1922 in q.js: defer replaced with deferred.reject
Mutant 1923 in q.js: defer replaced with deferred.resolve
Mutant 1924 in q.js: defer replaced with Q.reject
Mutant 1925 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1926 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1927 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1928 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1929 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1930 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().bind(null)
Mutant 1931 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeRejector
Mutant 1932 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1933 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [nodeArgs, name])
Mutant 1934 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, null])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [nodeArgs, name])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, null])
Mutant 1935 in q.js: Q replaced with object[name]
Mutant 1936 in q.js: object replaced with object.prototype
Mutant 1937 in q.js: object replaced with object.constructor
Mutant 1938 in q.js: object replaced with object.toString()
Mutant 1939 in q.js: "post" replaced with "pre"
Mutant 1940 in q.js: "post" replaced with "send"
Mutant 1941 in q.js: "post" replaced with "npost"
Mutant 1942 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.reverse()]
Mutant 1943 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(0, -1)]
Mutant 1944 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.concat(["extra argument"])]
Mutant 1945 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1946 in q.js: deferred.reject replaced with deferred.notify
Mutant 1947 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1948 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1949 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1950 in q.js: array_slice(arguments, 1) replaced with array_slice(nodeArgs.length)
Mutant 1951 in q.js: array_slice replaced with array_slice.length
Mutant 1952 in q.js: arguments replaced with null
Mutant 1953 in q.js: arguments replaced with undefined
Mutant 1954 in q.js: arguments replaced with []
Mutant 1955 in q.js: 1 replaced with 2
Mutant 1956 in q.js: 1 replaced with 0
Mutant 1957 in q.js: 1 replaced with -1
Mutant 1958 in q.js: defer replaced with defer.promise
Mutant 1959 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1960 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1961 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1962 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().bind(null)
Mutant 1963 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("send", [name, nodeArgs])
Mutant 1964 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("dispatch", [name, nodeArgs])
Mutant 1965 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("apply", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("send", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("dispatch", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("apply", [name, nodeArgs])
Mutant 1966 in q.js: "post" replaced with "send"
Mutant 1967 in q.js: "post" replaced with "dispatch"
Mutant 1968 in q.js: "post" replaced with "apply"
Mutant 1969 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1970 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, undefined]
Mutant 1971 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, {}]
Mutant 1972 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1973 in q.js: deferred.reject replaced with nodeback(error, null)
Mutant 1974 in q.js: Q replaced with Q.reject
Mutant 1975 in q.js: object replaced with object.foo
Mutant 1976 in q.js: object replaced with null
Mutant 1977 in q.js: object replaced with undefined
Mutant 1978 in q.js: nodeback replaced with nodeback(error, null)
Mutant 1979 in q.js: nodeback replaced with nodeback(null)
Mutant 1980 in q.js: nodeback replaced with nodeback(error, value)
Mutant 1981 in q.js: nodeback replaced with !nodeback
Mutant 1982 in q.js: nodeback replaced with nodeback === undefined
Mutant 1983 in q.js: nodeback replaced with nodeback != null
Mutant 1984 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1985 in q.js: nodeback(null, value) replaced with nodeback(value, null)
Mutant 1986 in q.js: nodeback(null, value) replaced with nodeback(value, undefined)
Mutant 1987 in q.js: null replaced with undefined
Mutant 1988 in q.js: null replaced with 0
Mutant 1989 in q.js: null replaced with ""
Mutant 1990 in q.js: value replaced with undefined
Mutant 1991 in q.js: value replaced with null
Mutant 1992 in q.js: value replaced with 0
Mutant 1993 in q.js: nodeback replaced with null
Mutant 1994 in q.js: nodeback replaced with undefined
Mutant 1995 in q.js: captureLine replaced with captureLine + 1
Mutant 1996 in q.js: captureLine replaced with captureLine - 1
Mutant 1997 in queue.js: Q.defer replaced with Q.reject
Mutant 1998 in queue.js: Q.defer replaced with Q.resolve
Mutant 1999 in queue.js: "head" replaced with "tail"
Mutant 2000 in queue.js: "head" replaced with "head.tail"
Mutant 2001 in queue.js: "head" replaced with "tail.head"
Mutant 2002 in queue.js: "tail" replaced with "head"
Mutant 2003 in queue.js: "tail" replaced with "tail.head"
Mutant 2004 in queue.js: "tail" replaced with "tail.head.value"
Mutant 2005 in queue.js: closed.resolve replaced with closed.reject
Mutant 2006 in queue.js: closed.resolve replaced with closed.promise.reject
Mutant 2007 in queue.js: error replaced with null
Mutant 2008 in queue.js: error replaced with undefined
Mutant 2009 in queue.js: error replaced with new Error("Different error message")
Mutant 2010 in queue.js: Q.reject replaced with Q.resolve
Mutant 2011 in queue.js: Q.reject replaced with Q.all
Mutant 2012 in queue.js: error replaced with null
Mutant 2013 in queue.js: error replaced with undefined
Mutant 2014 in queue.js: error replaced with false
Mutant 2015 in queue.js: ends.resolve replaced with ends.reject
Mutant 2016 in queue.js: ends.resolve replaced with closed.resolve
Mutant 2017 in queue.js: end replaced with ends
Mutant 2018 in queue.js: end replaced with null
Mutant 2019 in queue.js: end replaced with Q.reject(error)
[32m13:14:43 (3019) INFO Instrumenter[39m Instrumented 2 source file(s) with 2020 mutant(s)
[32m13:14:44 (3019) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m13:14:46 (3019) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m13:14:46 (3019) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m13:14:53 (3019) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6835 ms, overhead 0 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 52m) 3/2020 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 48m) 4/2020 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 47m) 6/2020 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 11m) 7/2020 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 29m) 8/2020 tested (6 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 21m) 10/2020 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 33m) 11/2020 tested (9 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 28m) 18/2020 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 37m) 19/2020 tested (11 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 38m) 21/2020 tested (13 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 46m) 22/2020 tested (14 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 46m) 24/2020 tested (16 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 52m) 25/2020 tested (17 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 52m) 27/2020 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 57m) 28/2020 tested (20 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 56m) 30/2020 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 1m) 31/2020 tested (23 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 0m) 33/2020 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 4m) 34/2020 tested (26 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~2h 53m) 38/2020 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 2m) 38/2020 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 6m) 39/2020 tested (27 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 9m) 40/2020 tested (27 survived, 2 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 18m) 40/2020 tested (27 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 21m) 41/2020 tested (27 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 24m) 42/2020 tested (27 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 31m) 42/2020 tested (27 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 34m) 43/2020 tested (27 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 37m) 44/2020 tested (27 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 39m) 45/2020 tested (28 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 36m) 47/2020 tested (30 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 39m) 48/2020 tested (31 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 41m) 49/2020 tested (32 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 34m) 52/2020 tested (32 survived, 7 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 36m) 53/2020 tested (33 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 42m) 53/2020 tested (33 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 44m) 54/2020 tested (33 survived, 8 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 46m) 55/2020 tested (33 survived, 9 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 43m) 57/2020 tested (34 survived, 9 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 34m) 61/2020 tested (35 survived, 9 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 32m) 63/2020 tested (36 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 27m) 66/2020 tested (37 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 19m) 70/2020 tested (38 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 21m) 71/2020 tested (39 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 20m) 73/2020 tested (41 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 21m) 74/2020 tested (42 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 20m) 76/2020 tested (44 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 21m) 77/2020 tested (45 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 20m) 79/2020 tested (47 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 22m) 80/2020 tested (48 survived, 9 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 20m) 82/2020 tested (50 survived, 9 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 22m) 83/2020 tested (51 survived, 9 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 21m) 85/2020 tested (53 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 22m) 86/2020 tested (54 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 23m) 87/2020 tested (55 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 24m) 88/2020 tested (55 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 28m) 88/2020 tested (55 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 29m) 89/2020 tested (55 survived, 11 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 30m) 90/2020 tested (55 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 31m) 91/2020 tested (56 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 30m) 93/2020 tested (58 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 34m) 93/2020 tested (58 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 35m) 94/2020 tested (58 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 36m) 95/2020 tested (59 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 37m) 96/2020 tested (59 survived, 14 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 40m) 96/2020 tested (59 survived, 14 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 41m) 97/2020 tested (59 survived, 15 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 39m) 99/2020 tested (59 survived, 16 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 40m) 100/2020 tested (60 survived, 16 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 39m) 102/2020 tested (62 survived, 16 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 40m) 103/2020 tested (63 survived, 16 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 38m) 105/2020 tested (65 survived, 16 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 39m) 106/2020 tested (66 survived, 16 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 38m) 108/2020 tested (68 survived, 16 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 39m) 109/2020 tested (69 survived, 16 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 37m) 111/2020 tested (71 survived, 16 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 38m) 112/2020 tested (72 survived, 16 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 37m) 114/2020 tested (74 survived, 16 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 38m) 115/2020 tested (75 survived, 16 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 36m) 117/2020 tested (77 survived, 16 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 37m) 118/2020 tested (78 survived, 16 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 38m) 119/2020 tested (79 survived, 16 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 37m) 121/2020 tested (81 survived, 16 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 37m) 122/2020 tested (82 survived, 16 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 36m) 124/2020 tested (84 survived, 16 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 37m) 125/2020 tested (85 survived, 16 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 36m) 127/2020 tested (87 survived, 16 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 36m) 128/2020 tested (88 survived, 16 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 35m) 130/2020 tested (90 survived, 16 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 36m) 131/2020 tested (91 survived, 16 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 35m) 133/2020 tested (93 survived, 16 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 35m) 134/2020 tested (94 survived, 16 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 34m) 136/2020 tested (96 survived, 16 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 35m) 137/2020 tested (97 survived, 16 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 34m) 139/2020 tested (99 survived, 16 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 30m) 143/2020 tested (99 survived, 16 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 25m) 147/2020 tested (101 survived, 16 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 25m) 149/2020 tested (101 survived, 16 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 25m) 150/2020 tested (101 survived, 17 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 27m) 150/2020 tested (101 survived, 17 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 19m) 157/2020 tested (101 survived, 18 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 20m) 158/2020 tested (101 survived, 18 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 19m) 160/2020 tested (101 survived, 19 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 20m) 161/2020 tested (102 survived, 19 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 19m) 163/2020 tested (104 survived, 19 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 19m) 164/2020 tested (105 survived, 19 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 19m) 166/2020 tested (107 survived, 19 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 19m) 167/2020 tested (108 survived, 19 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 18m) 169/2020 tested (110 survived, 19 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 19m) 170/2020 tested (111 survived, 19 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 18m) 172/2020 tested (113 survived, 19 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 19m) 173/2020 tested (114 survived, 19 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 18m) 175/2020 tested (116 survived, 19 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 19m) 176/2020 tested (117 survived, 19 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 18m) 178/2020 tested (119 survived, 19 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 18m) 179/2020 tested (120 survived, 19 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 18m) 181/2020 tested (122 survived, 19 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 18m) 182/2020 tested (123 survived, 19 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 19m) 183/2020 tested (124 survived, 19 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 18m) 185/2020 tested (126 survived, 19 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 18m) 186/2020 tested (127 survived, 19 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 18m) 188/2020 tested (129 survived, 19 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 18m) 189/2020 tested (130 survived, 19 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 17m) 191/2020 tested (132 survived, 19 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 18m) 192/2020 tested (133 survived, 19 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 17m) 194/2020 tested (135 survived, 19 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 18m) 195/2020 tested (136 survived, 19 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 17m) 197/2020 tested (138 survived, 19 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 17m) 198/2020 tested (139 survived, 19 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 17m) 200/2020 tested (141 survived, 19 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 17m) 201/2020 tested (142 survived, 19 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 16m) 203/2020 tested (144 survived, 19 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 17m) 204/2020 tested (145 survived, 19 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 16m) 206/2020 tested (147 survived, 19 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 17m) 207/2020 tested (148 survived, 19 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 17m) 208/2020 tested (149 survived, 19 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 16m) 210/2020 tested (151 survived, 19 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 17m) 211/2020 tested (152 survived, 19 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 16m) 213/2020 tested (154 survived, 19 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 16m) 214/2020 tested (155 survived, 19 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 16m) 216/2020 tested (157 survived, 19 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 16m) 217/2020 tested (158 survived, 19 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 15m) 219/2020 tested (160 survived, 19 timed out)
Mutation testing 10% (elapsed: ~24m, remaining: ~3h 16m) 220/2020 tested (161 survived, 19 timed out)
Mutation testing 10% (elapsed: ~24m, remaining: ~3h 15m) 222/2020 tested (163 survived, 19 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 16m) 223/2020 tested (164 survived, 19 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 15m) 225/2020 tested (166 survived, 19 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 15m) 226/2020 tested (167 survived, 19 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 15m) 228/2020 tested (169 survived, 19 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 15m) 229/2020 tested (170 survived, 19 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 14m) 231/2020 tested (172 survived, 19 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 15m) 232/2020 tested (173 survived, 19 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 15m) 233/2020 tested (174 survived, 19 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 14m) 235/2020 tested (176 survived, 19 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 15m) 236/2020 tested (177 survived, 19 timed out)
Mutation testing 11% (elapsed: ~26m, remaining: ~3h 14m) 238/2020 tested (179 survived, 19 timed out)
Mutation testing 11% (elapsed: ~26m, remaining: ~3h 14m) 239/2020 tested (180 survived, 19 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 12m) 243/2020 tested (181 survived, 19 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 11m) 245/2020 tested (181 survived, 19 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 12m) 246/2020 tested (181 survived, 19 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 12m) 247/2020 tested (182 survived, 19 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 12m) 249/2020 tested (184 survived, 19 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 12m) 250/2020 tested (185 survived, 19 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 10m) 253/2020 tested (187 survived, 19 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 10m) 255/2020 tested (188 survived, 19 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 10m) 256/2020 tested (189 survived, 19 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 10m) 258/2020 tested (191 survived, 19 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 10m) 259/2020 tested (192 survived, 19 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 9m) 261/2020 tested (194 survived, 19 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 10m) 262/2020 tested (195 survived, 19 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 9m) 264/2020 tested (197 survived, 19 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 9m) 265/2020 tested (198 survived, 19 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 9m) 267/2020 tested (200 survived, 19 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 268/2020 tested (201 survived, 19 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 270/2020 tested (203 survived, 19 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 271/2020 tested (204 survived, 19 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 8m) 273/2020 tested (206 survived, 19 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 274/2020 tested (207 survived, 19 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 275/2020 tested (208 survived, 19 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 8m) 277/2020 tested (210 survived, 19 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 9m) 278/2020 tested (211 survived, 19 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 8m) 280/2020 tested (213 survived, 19 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 8m) 281/2020 tested (214 survived, 19 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 8m) 283/2020 tested (216 survived, 19 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 8m) 284/2020 tested (217 survived, 19 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 286/2020 tested (219 survived, 19 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 8m) 287/2020 tested (220 survived, 19 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 289/2020 tested (222 survived, 19 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 290/2020 tested (223 survived, 19 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 292/2020 tested (225 survived, 19 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 293/2020 tested (226 survived, 19 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 7m) 295/2020 tested (228 survived, 19 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 7m) 296/2020 tested (229 survived, 19 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 7m) 297/2020 tested (230 survived, 19 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 7m) 299/2020 tested (232 survived, 19 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 7m) 300/2020 tested (233 survived, 19 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 6m) 302/2020 tested (235 survived, 19 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 7m) 303/2020 tested (236 survived, 19 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 305/2020 tested (238 survived, 19 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 306/2020 tested (239 survived, 19 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 308/2020 tested (241 survived, 19 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 309/2020 tested (242 survived, 19 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 5m) 311/2020 tested (244 survived, 19 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 6m) 312/2020 tested (245 survived, 19 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 314/2020 tested (247 survived, 19 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 315/2020 tested (248 survived, 19 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 317/2020 tested (250 survived, 19 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 318/2020 tested (251 survived, 19 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 319/2020 tested (252 survived, 19 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 5m) 321/2020 tested (254 survived, 19 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 5m) 322/2020 tested (255 survived, 19 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 4m) 324/2020 tested (257 survived, 19 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 5m) 325/2020 tested (258 survived, 19 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 4m) 327/2020 tested (260 survived, 19 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 4m) 328/2020 tested (261 survived, 19 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 330/2020 tested (263 survived, 19 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 331/2020 tested (264 survived, 19 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 333/2020 tested (266 survived, 19 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 334/2020 tested (267 survived, 19 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 3m) 336/2020 tested (269 survived, 19 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 3m) 337/2020 tested (270 survived, 19 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 3m) 339/2020 tested (272 survived, 19 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 3m) 340/2020 tested (273 survived, 19 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 3m) 342/2020 tested (275 survived, 19 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 3m) 343/2020 tested (276 survived, 19 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 3m) 344/2020 tested (277 survived, 19 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 1m) 348/2020 tested (279 survived, 19 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 1m) 350/2020 tested (280 survived, 19 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 1m) 351/2020 tested (281 survived, 19 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 1m) 353/2020 tested (283 survived, 19 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 1m) 354/2020 tested (284 survived, 19 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 0m) 356/2020 tested (286 survived, 19 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 0m) 357/2020 tested (287 survived, 19 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~2h 59m) 361/2020 tested (288 survived, 19 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~2h 58m) 363/2020 tested (290 survived, 19 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 58m) 364/2020 tested (291 survived, 19 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 58m) 366/2020 tested (293 survived, 19 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 58m) 367/2020 tested (294 survived, 19 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 58m) 369/2020 tested (296 survived, 19 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 58m) 370/2020 tested (297 survived, 19 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 57m) 372/2020 tested (299 survived, 19 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 58m) 373/2020 tested (300 survived, 19 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 58m) 374/2020 tested (301 survived, 19 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 57m) 376/2020 tested (303 survived, 19 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 57m) 377/2020 tested (304 survived, 19 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 57m) 379/2020 tested (306 survived, 19 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 57m) 380/2020 tested (307 survived, 19 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 57m) 382/2020 tested (309 survived, 19 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 57m) 383/2020 tested (310 survived, 19 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 56m) 385/2020 tested (312 survived, 19 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 57m) 386/2020 tested (313 survived, 19 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 56m) 388/2020 tested (315 survived, 19 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 56m) 389/2020 tested (316 survived, 19 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 56m) 391/2020 tested (318 survived, 19 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 56m) 392/2020 tested (319 survived, 19 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 56m) 394/2020 tested (321 survived, 19 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 56m) 395/2020 tested (322 survived, 19 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 56m) 396/2020 tested (323 survived, 19 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 55m) 398/2020 tested (325 survived, 19 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 56m) 399/2020 tested (326 survived, 19 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 55m) 401/2020 tested (328 survived, 19 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 55m) 402/2020 tested (329 survived, 19 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 55m) 404/2020 tested (331 survived, 19 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 407/2020 tested (332 survived, 19 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 408/2020 tested (332 survived, 19 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 55m) 408/2020 tested (332 survived, 19 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 411/2020 tested (332 survived, 20 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 53m) 413/2020 tested (332 survived, 20 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 53m) 414/2020 tested (332 survived, 20 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 53m) 416/2020 tested (332 survived, 20 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 53m) 417/2020 tested (332 survived, 20 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 53m) 418/2020 tested (332 survived, 20 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 53m) 419/2020 tested (332 survived, 20 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 53m) 420/2020 tested (332 survived, 21 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 420/2020 tested (332 survived, 21 timed out)
Mutation testing 20% (elapsed: ~46m, remaining: ~2h 54m) 421/2020 tested (332 survived, 22 timed out)
Mutation testing 20% (elapsed: ~46m, remaining: ~2h 53m) 424/2020 tested (332 survived, 23 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 51m) 430/2020 tested (332 survived, 23 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 51m) 430/2020 tested (332 survived, 23 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 50m) 435/2020 tested (332 survived, 24 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 50m) 436/2020 tested (332 survived, 24 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 50m) 436/2020 tested (332 survived, 24 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 50m) 437/2020 tested (332 survived, 25 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 50m) 438/2020 tested (332 survived, 26 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 51m) 438/2020 tested (332 survived, 26 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 51m) 440/2020 tested (333 survived, 27 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 51m) 441/2020 tested (334 survived, 27 timed out)
Mutation testing 21% (elapsed: ~48m, remaining: ~2h 50m) 443/2020 tested (336 survived, 27 timed out)
Mutation testing 21% (elapsed: ~48m, remaining: ~2h 50m) 444/2020 tested (337 survived, 27 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 50m) 446/2020 tested (339 survived, 27 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 50m) 447/2020 tested (340 survived, 27 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 50m) 449/2020 tested (342 survived, 27 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 50m) 450/2020 tested (343 survived, 27 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 50m) 450/2020 tested (343 survived, 27 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 50m) 453/2020 tested (343 survived, 28 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 455/2020 tested (345 survived, 28 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 456/2020 tested (346 survived, 28 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 50m) 456/2020 tested (346 survived, 28 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 459/2020 tested (346 survived, 29 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 49m) 461/2020 tested (348 survived, 29 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 49m) 462/2020 tested (349 survived, 29 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 48m) 464/2020 tested (351 survived, 29 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 48m) 465/2020 tested (352 survived, 29 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 48m) 467/2020 tested (354 survived, 29 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 48m) 468/2020 tested (355 survived, 29 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 470/2020 tested (357 survived, 29 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 471/2020 tested (358 survived, 29 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 47m) 473/2020 tested (360 survived, 29 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 47m) 474/2020 tested (361 survived, 29 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 47m) 476/2020 tested (363 survived, 29 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 47m) 477/2020 tested (364 survived, 29 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 479/2020 tested (366 survived, 29 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 480/2020 tested (367 survived, 29 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 46m) 482/2020 tested (369 survived, 29 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 483/2020 tested (370 survived, 29 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 484/2020 tested (371 survived, 29 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 46m) 486/2020 tested (373 survived, 29 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 487/2020 tested (374 survived, 29 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 489/2020 tested (376 survived, 29 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 490/2020 tested (377 survived, 29 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 491/2020 tested (377 survived, 30 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 493/2020 tested (378 survived, 30 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 494/2020 tested (379 survived, 30 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 497/2020 tested (381 survived, 30 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 498/2020 tested (381 survived, 30 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 499/2020 tested (381 survived, 31 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 501/2020 tested (381 survived, 31 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 502/2020 tested (381 survived, 32 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 44m) 505/2020 tested (381 survived, 32 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 44m) 506/2020 tested (381 survived, 33 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 45m) 506/2020 tested (381 survived, 33 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 44m) 508/2020 tested (382 survived, 34 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 44m) 509/2020 tested (383 survived, 34 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 44m) 510/2020 tested (384 survived, 34 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 44m) 512/2020 tested (386 survived, 34 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 44m) 513/2020 tested (387 survived, 34 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 44m) 515/2020 tested (389 survived, 34 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 44m) 516/2020 tested (390 survived, 34 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 43m) 519/2020 tested (391 survived, 34 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 42m) 522/2020 tested (392 survived, 34 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 42m) 523/2020 tested (392 survived, 34 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 42m) 524/2020 tested (392 survived, 34 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 42m) 525/2020 tested (392 survived, 34 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 42m) 526/2020 tested (392 survived, 34 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 42m) 528/2020 tested (394 survived, 34 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 42m) 529/2020 tested (395 survived, 34 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 42m) 531/2020 tested (397 survived, 34 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 42m) 532/2020 tested (398 survived, 34 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 41m) 534/2020 tested (400 survived, 34 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 41m) 535/2020 tested (401 survived, 34 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 41m) 537/2020 tested (403 survived, 34 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 41m) 538/2020 tested (404 survived, 34 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 41m) 540/2020 tested (406 survived, 34 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 41m) 541/2020 tested (407 survived, 34 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 40m) 543/2020 tested (409 survived, 34 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 40m) 544/2020 tested (410 survived, 34 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 40m) 546/2020 tested (412 survived, 34 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 40m) 547/2020 tested (413 survived, 34 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 40m) 549/2020 tested (415 survived, 34 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 40m) 550/2020 tested (416 survived, 34 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 40m) 551/2020 tested (417 survived, 34 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 40m) 553/2020 tested (419 survived, 34 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 40m) 554/2020 tested (420 survived, 34 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 39m) 556/2020 tested (422 survived, 34 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 39m) 557/2020 tested (423 survived, 34 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 39m) 559/2020 tested (425 survived, 34 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 39m) 560/2020 tested (426 survived, 34 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 39m) 562/2020 tested (428 survived, 34 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 39m) 563/2020 tested (429 survived, 34 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 38m) 565/2020 tested (431 survived, 34 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 38m) 566/2020 tested (432 survived, 34 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 38m) 568/2020 tested (434 survived, 34 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 38m) 569/2020 tested (435 survived, 34 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 38m) 571/2020 tested (437 survived, 34 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 38m) 572/2020 tested (438 survived, 34 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 37m) 574/2020 tested (440 survived, 34 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 37m) 575/2020 tested (441 survived, 34 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 37m) 576/2020 tested (442 survived, 34 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 37m) 578/2020 tested (444 survived, 34 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 37m) 579/2020 tested (445 survived, 34 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 37m) 581/2020 tested (447 survived, 34 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 37m) 582/2020 tested (448 survived, 34 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 36m) 584/2020 tested (450 survived, 34 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 36m) 585/2020 tested (451 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 36m) 587/2020 tested (453 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 36m) 588/2020 tested (454 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 36m) 590/2020 tested (456 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 36m) 591/2020 tested (457 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 36m) 593/2020 tested (459 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 36m) 594/2020 tested (460 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 35m) 596/2020 tested (462 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 35m) 597/2020 tested (463 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 35m) 598/2020 tested (464 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 35m) 600/2020 tested (466 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 35m) 601/2020 tested (467 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 35m) 603/2020 tested (469 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 35m) 604/2020 tested (470 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 34m) 606/2020 tested (472 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 34m) 607/2020 tested (473 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 34m) 609/2020 tested (475 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 34m) 610/2020 tested (476 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 34m) 612/2020 tested (478 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 34m) 613/2020 tested (479 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 33m) 615/2020 tested (481 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 33m) 616/2020 tested (482 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 33m) 618/2020 tested (484 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 32m) 621/2020 tested (484 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 32m) 622/2020 tested (484 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 33m) 622/2020 tested (484 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 33m) 623/2020 tested (484 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 33m) 624/2020 tested (484 survived, 37 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 33m) 625/2020 tested (485 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 32m) 627/2020 tested (487 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 32m) 628/2020 tested (488 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 33m) 628/2020 tested (488 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 33m) 629/2020 tested (488 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 33m) 630/2020 tested (488 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 33m) 632/2020 tested (490 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 33m) 633/2020 tested (491 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 33m) 633/2020 tested (491 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 33m) 635/2020 tested (492 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 33m) 636/2020 tested (493 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 32m) 638/2020 tested (495 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 32m) 639/2020 tested (496 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 32m) 641/2020 tested (498 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 32m) 642/2020 tested (499 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 32m) 643/2020 tested (500 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 32m) 645/2020 tested (502 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 32m) 646/2020 tested (503 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 31m) 650/2020 tested (505 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 30m) 652/2020 tested (505 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 30m) 653/2020 tested (505 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 31m) 653/2020 tested (505 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 31m) 654/2020 tested (505 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 31m) 655/2020 tested (505 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 31m) 656/2020 tested (506 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 30m) 659/2020 tested (508 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 30m) 660/2020 tested (509 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 30m) 662/2020 tested (511 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 30m) 663/2020 tested (511 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 30m) 664/2020 tested (512 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 29m) 667/2020 tested (514 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 29m) 669/2020 tested (514 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 29m) 670/2020 tested (514 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 29m) 670/2020 tested (514 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 29m) 671/2020 tested (514 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 29m) 672/2020 tested (514 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 29m) 673/2020 tested (514 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 29m) 673/2020 tested (514 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 29m) 674/2020 tested (514 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 29m) 675/2020 tested (514 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 29m) 676/2020 tested (514 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 29m) 677/2020 tested (514 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 29m) 678/2020 tested (514 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 29m) 679/2020 tested (514 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 29m) 680/2020 tested (514 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 29m) 682/2020 tested (516 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 29m) 683/2020 tested (517 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 29m) 684/2020 tested (517 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 29m) 684/2020 tested (517 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 29m) 685/2020 tested (517 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 30m) 685/2020 tested (517 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 30m) 686/2020 tested (517 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 30m) 687/2020 tested (517 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 30m) 688/2020 tested (517 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 30m) 689/2020 tested (517 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 30m) 689/2020 tested (517 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 30m) 690/2020 tested (517 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 30m) 692/2020 tested (518 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 29m) 693/2020 tested (518 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 29m) 694/2020 tested (518 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 29m) 695/2020 tested (518 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 29m) 696/2020 tested (519 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 29m) 698/2020 tested (521 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 29m) 698/2020 tested (521 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 29m) 699/2020 tested (521 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 29m) 700/2020 tested (521 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 29m) 701/2020 tested (521 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 29m) 702/2020 tested (521 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 702/2020 tested (521 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 703/2020 tested (521 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 704/2020 tested (521 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 704/2020 tested (521 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 705/2020 tested (521 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 706/2020 tested (521 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 30m) 706/2020 tested (521 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 30m) 707/2020 tested (521 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 30m) 708/2020 tested (521 survived, 58 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 31m) 708/2020 tested (521 survived, 58 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 31m) 709/2020 tested (521 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 30m) 710/2020 tested (521 survived, 60 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 31m) 710/2020 tested (521 survived, 60 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 31m) 711/2020 tested (521 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 31m) 712/2020 tested (522 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 31m) 713/2020 tested (522 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 31m) 713/2020 tested (522 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 31m) 714/2020 tested (522 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 31m) 715/2020 tested (522 survived, 64 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 31m) 715/2020 tested (522 survived, 64 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 31m) 716/2020 tested (522 survived, 65 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 31m) 717/2020 tested (522 survived, 66 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 32m) 717/2020 tested (522 survived, 66 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 32m) 718/2020 tested (522 survived, 67 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 31m) 719/2020 tested (522 survived, 68 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 32m) 719/2020 tested (522 survived, 68 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 32m) 720/2020 tested (522 survived, 69 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 32m) 721/2020 tested (522 survived, 70 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 32m) 721/2020 tested (522 survived, 70 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 32m) 723/2020 tested (523 survived, 71 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 32m) 724/2020 tested (524 survived, 71 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 32m) 725/2020 tested (525 survived, 71 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 31m) 727/2020 tested (527 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 31m) 728/2020 tested (528 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 31m) 730/2020 tested (530 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 31m) 731/2020 tested (531 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 30m) 733/2020 tested (533 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 30m) 734/2020 tested (534 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 30m) 736/2020 tested (536 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 30m) 737/2020 tested (537 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 30m) 739/2020 tested (539 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 30m) 740/2020 tested (540 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 29m) 742/2020 tested (542 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 29m) 743/2020 tested (543 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 29m) 745/2020 tested (545 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 29m) 746/2020 tested (546 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 29m) 747/2020 tested (547 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 29m) 749/2020 tested (549 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 29m) 750/2020 tested (550 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 28m) 752/2020 tested (552 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 28m) 753/2020 tested (553 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 28m) 755/2020 tested (555 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 28m) 756/2020 tested (556 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 27m) 758/2020 tested (558 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 27m) 759/2020 tested (559 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 27m) 761/2020 tested (561 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 27m) 762/2020 tested (562 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 27m) 764/2020 tested (564 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 27m) 765/2020 tested (565 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 27m) 766/2020 tested (566 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 26m) 768/2020 tested (568 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 26m) 769/2020 tested (569 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 26m) 771/2020 tested (571 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 26m) 772/2020 tested (572 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 25m) 774/2020 tested (574 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 25m) 775/2020 tested (575 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 25m) 777/2020 tested (577 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 25m) 778/2020 tested (578 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 25m) 780/2020 tested (580 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 25m) 781/2020 tested (581 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 24m) 783/2020 tested (583 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 24m) 784/2020 tested (584 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 24m) 786/2020 tested (586 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 24m) 787/2020 tested (587 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 24m) 789/2020 tested (589 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 24m) 790/2020 tested (590 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 23m) 792/2020 tested (592 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 23m) 793/2020 tested (593 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 23m) 794/2020 tested (594 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 23m) 796/2020 tested (596 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 23m) 797/2020 tested (597 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 22m) 799/2020 tested (599 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 22m) 800/2020 tested (600 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 22m) 802/2020 tested (602 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 22m) 803/2020 tested (603 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 22m) 805/2020 tested (605 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 22m) 806/2020 tested (606 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 20m) 813/2020 tested (607 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 20m) 814/2020 tested (608 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 19m) 816/2020 tested (610 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 19m) 817/2020 tested (611 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 19m) 819/2020 tested (613 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 19m) 820/2020 tested (614 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 19m) 822/2020 tested (616 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 19m) 823/2020 tested (617 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 18m) 825/2020 tested (619 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 18m) 826/2020 tested (620 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 18m) 827/2020 tested (621 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 18m) 829/2020 tested (623 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 18m) 830/2020 tested (624 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 18m) 832/2020 tested (626 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 17m) 833/2020 tested (627 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 17m) 835/2020 tested (629 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 17m) 836/2020 tested (630 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 17m) 838/2020 tested (632 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 17m) 839/2020 tested (633 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 16m) 843/2020 tested (634 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 16m) 845/2020 tested (636 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 15m) 846/2020 tested (637 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 15m) 847/2020 tested (638 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 15m) 850/2020 tested (640 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 15m) 851/2020 tested (641 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 14m) 853/2020 tested (643 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 14m) 854/2020 tested (644 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 14m) 856/2020 tested (646 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 14m) 857/2020 tested (647 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 14m) 859/2020 tested (649 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 13m) 861/2020 tested (650 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 13m) 863/2020 tested (651 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 13m) 865/2020 tested (653 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 13m) 866/2020 tested (654 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 12m) 868/2020 tested (656 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 12m) 869/2020 tested (657 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 12m) 871/2020 tested (659 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 11m) 875/2020 tested (660 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 11m) 876/2020 tested (661 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 11m) 878/2020 tested (663 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 11m) 879/2020 tested (664 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 11m) 880/2020 tested (665 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 11m) 881/2020 tested (665 survived, 72 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 11m) 881/2020 tested (665 survived, 72 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 11m) 882/2020 tested (665 survived, 73 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 11m) 883/2020 tested (665 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 11m) 884/2020 tested (666 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 10m) 886/2020 tested (668 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 11m) 886/2020 tested (668 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 11m) 887/2020 tested (668 survived, 75 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 11m) 887/2020 tested (668 survived, 75 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 11m) 888/2020 tested (668 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 11m) 889/2020 tested (668 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 10m) 891/2020 tested (670 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 10m) 892/2020 tested (671 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 10m) 894/2020 tested (673 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 9m) 898/2020 tested (674 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 9m) 899/2020 tested (675 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 9m) 900/2020 tested (676 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 9m) 902/2020 tested (678 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 9m) 903/2020 tested (679 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 8m) 905/2020 tested (681 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 8m) 906/2020 tested (682 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 8m) 908/2020 tested (684 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 8m) 909/2020 tested (685 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 8m) 911/2020 tested (687 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 8m) 912/2020 tested (688 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 7m) 914/2020 tested (690 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 7m) 915/2020 tested (691 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 7m) 917/2020 tested (693 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 7m) 918/2020 tested (694 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 7m) 920/2020 tested (696 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 7m) 921/2020 tested (697 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 6m) 923/2020 tested (699 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 6m) 924/2020 tested (700 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 6m) 925/2020 tested (701 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 6m) 927/2020 tested (703 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 6m) 928/2020 tested (704 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 5m) 930/2020 tested (706 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 5m) 931/2020 tested (707 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 5m) 933/2020 tested (709 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 5m) 934/2020 tested (710 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 5m) 936/2020 tested (712 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 5m) 937/2020 tested (713 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 4m) 939/2020 tested (715 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 4m) 940/2020 tested (716 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 4m) 942/2020 tested (718 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 4m) 943/2020 tested (719 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 4m) 945/2020 tested (721 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 4m) 945/2020 tested (721 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 4m) 946/2020 tested (721 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 4m) 947/2020 tested (721 survived, 79 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 4m) 947/2020 tested (721 survived, 79 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 4m) 948/2020 tested (721 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 4m) 950/2020 tested (723 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 4m) 951/2020 tested (724 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 3m) 954/2020 tested (726 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 3m) 955/2020 tested (727 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 3m) 956/2020 tested (728 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 2m) 960/2020 tested (730 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 2m) 961/2020 tested (731 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 2m) 963/2020 tested (733 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 2m) 964/2020 tested (734 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 2m) 965/2020 tested (735 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 1m) 967/2020 tested (737 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 1m) 968/2020 tested (738 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~2h 1m) 970/2020 tested (740 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~2h 1m) 971/2020 tested (741 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~2h 1m) 973/2020 tested (743 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~2h 0m) 974/2020 tested (744 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~2h 0m) 976/2020 tested (746 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~2h 0m) 977/2020 tested (747 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~2h 0m) 979/2020 tested (749 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~2h 0m) 980/2020 tested (750 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~1h 59m) 982/2020 tested (752 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~1h 59m) 983/2020 tested (753 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~1h 59m) 985/2020 tested (755 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~1h 59m) 986/2020 tested (756 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~1h 59m) 988/2020 tested (758 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~1h 59m) 989/2020 tested (759 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 58m) 991/2020 tested (761 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 58m) 992/2020 tested (762 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 58m) 993/2020 tested (763 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 58m) 995/2020 tested (765 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 58m) 996/2020 tested (766 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 58m) 998/2020 tested (767 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 58m) 999/2020 tested (767 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 57m) 1000/2020 tested (767 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 57m) 1002/2020 tested (767 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~1h 57m) 1003/2020 tested (767 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~1h 57m) 1004/2020 tested (767 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~1h 57m) 1006/2020 tested (767 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~1h 57m) 1007/2020 tested (767 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~1h 57m) 1008/2020 tested (767 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 56m) 1010/2020 tested (768 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 56m) 1011/2020 tested (769 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 56m) 1013/2020 tested (771 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 56m) 1014/2020 tested (772 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 56m) 1016/2020 tested (774 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 56m) 1017/2020 tested (775 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 55m) 1019/2020 tested (777 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 55m) 1020/2020 tested (778 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 55m) 1022/2020 tested (780 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 55m) 1023/2020 tested (781 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 55m) 1025/2020 tested (783 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 54m) 1026/2020 tested (784 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 54m) 1028/2020 tested (786 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 54m) 1029/2020 tested (787 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 54m) 1031/2020 tested (789 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 54m) 1032/2020 tested (790 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 54m) 1033/2020 tested (791 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 53m) 1035/2020 tested (793 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 53m) 1036/2020 tested (794 survived, 80 timed out)
Mutation testing 51% (elapsed: ~2h 0m, remaining: ~1h 53m) 1038/2020 tested (796 survived, 80 timed out)
Mutation testing 51% (elapsed: ~2h 0m, remaining: ~1h 53m) 1039/2020 tested (797 survived, 80 timed out)
Mutation testing 51% (elapsed: ~2h 0m, remaining: ~1h 53m) 1041/2020 tested (799 survived, 80 timed out)
Mutation testing 51% (elapsed: ~2h 0m, remaining: ~1h 53m) 1042/2020 tested (800 survived, 80 timed out)
Mutation testing 51% (elapsed: ~2h 0m, remaining: ~1h 52m) 1044/2020 tested (802 survived, 80 timed out)
Mutation testing 51% (elapsed: ~2h 0m, remaining: ~1h 52m) 1045/2020 tested (803 survived, 80 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 52m) 1047/2020 tested (805 survived, 80 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 52m) 1048/2020 tested (806 survived, 80 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 52m) 1050/2020 tested (808 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 52m) 1051/2020 tested (809 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 51m) 1053/2020 tested (811 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 51m) 1054/2020 tested (812 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 51m) 1056/2020 tested (814 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 51m) 1057/2020 tested (815 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 51m) 1059/2020 tested (817 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 50m) 1060/2020 tested (818 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 50m) 1061/2020 tested (819 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 50m) 1063/2020 tested (821 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 50m) 1064/2020 tested (822 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 50m) 1066/2020 tested (824 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 50m) 1067/2020 tested (825 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 49m) 1069/2020 tested (827 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 49m) 1070/2020 tested (828 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 49m) 1072/2020 tested (830 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 49m) 1073/2020 tested (831 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 49m) 1075/2020 tested (833 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 49m) 1076/2020 tested (834 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 48m) 1078/2020 tested (836 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 48m) 1079/2020 tested (837 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 48m) 1081/2020 tested (839 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 48m) 1082/2020 tested (840 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 48m) 1083/2020 tested (841 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 48m) 1085/2020 tested (843 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 47m) 1086/2020 tested (844 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 47m) 1088/2020 tested (846 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 47m) 1089/2020 tested (847 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 47m) 1091/2020 tested (849 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 47m) 1092/2020 tested (850 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 46m) 1094/2020 tested (852 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 46m) 1095/2020 tested (853 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 46m) 1097/2020 tested (855 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 46m) 1098/2020 tested (856 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 7m, remaining: ~1h 46m) 1100/2020 tested (858 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 7m, remaining: ~1h 46m) 1101/2020 tested (859 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 7m, remaining: ~1h 45m) 1103/2020 tested (861 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 7m, remaining: ~1h 45m) 1104/2020 tested (862 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 7m, remaining: ~1h 45m) 1106/2020 tested (864 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 7m, remaining: ~1h 45m) 1107/2020 tested (865 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 45m) 1108/2020 tested (866 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 45m) 1110/2020 tested (868 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 45m) 1111/2020 tested (869 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 44m) 1113/2020 tested (871 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 44m) 1114/2020 tested (872 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 44m) 1116/2020 tested (874 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 9m, remaining: ~1h 44m) 1117/2020 tested (875 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 9m, remaining: ~1h 44m) 1119/2020 tested (877 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 9m, remaining: ~1h 43m) 1120/2020 tested (878 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 9m, remaining: ~1h 43m) 1122/2020 tested (880 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 9m, remaining: ~1h 43m) 1123/2020 tested (881 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 9m, remaining: ~1h 43m) 1125/2020 tested (883 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 43m) 1126/2020 tested (884 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 42m) 1128/2020 tested (886 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 42m) 1129/2020 tested (887 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 42m) 1131/2020 tested (889 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 42m) 1132/2020 tested (890 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 42m) 1134/2020 tested (892 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 11m, remaining: ~1h 42m) 1135/2020 tested (893 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 11m, remaining: ~1h 42m) 1136/2020 tested (894 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 11m, remaining: ~1h 41m) 1138/2020 tested (896 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 11m, remaining: ~1h 41m) 1139/2020 tested (897 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 11m, remaining: ~1h 41m) 1141/2020 tested (899 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 11m, remaining: ~1h 41m) 1142/2020 tested (900 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 41m) 1144/2020 tested (902 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 41m) 1145/2020 tested (903 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 40m) 1147/2020 tested (905 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 40m) 1148/2020 tested (906 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 40m) 1150/2020 tested (908 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 40m) 1151/2020 tested (909 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 13m, remaining: ~1h 40m) 1153/2020 tested (911 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 13m, remaining: ~1h 39m) 1154/2020 tested (912 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 13m, remaining: ~1h 39m) 1156/2020 tested (914 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 13m, remaining: ~1h 39m) 1157/2020 tested (915 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 13m, remaining: ~1h 39m) 1158/2020 tested (916 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 13m, remaining: ~1h 39m) 1160/2020 tested (918 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 39m) 1161/2020 tested (919 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 38m) 1163/2020 tested (921 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 38m) 1164/2020 tested (922 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 38m) 1166/2020 tested (924 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 38m) 1167/2020 tested (925 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 38m) 1169/2020 tested (927 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 38m) 1170/2020 tested (928 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 37m) 1172/2020 tested (930 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 37m) 1173/2020 tested (931 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 37m) 1175/2020 tested (933 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 37m) 1176/2020 tested (934 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 37m) 1178/2020 tested (936 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 16m, remaining: ~1h 37m) 1179/2020 tested (937 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 16m, remaining: ~1h 36m) 1181/2020 tested (939 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 16m, remaining: ~1h 36m) 1182/2020 tested (940 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 16m, remaining: ~1h 36m) 1183/2020 tested (941 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 16m, remaining: ~1h 36m) 1185/2020 tested (943 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 16m, remaining: ~1h 36m) 1186/2020 tested (944 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 35m) 1188/2020 tested (946 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 35m) 1189/2020 tested (947 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 35m) 1191/2020 tested (949 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 35m) 1192/2020 tested (950 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 35m) 1194/2020 tested (952 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 35m) 1195/2020 tested (953 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 18m, remaining: ~1h 34m) 1197/2020 tested (955 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 18m, remaining: ~1h 34m) 1198/2020 tested (956 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 18m, remaining: ~1h 34m) 1200/2020 tested (958 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 18m, remaining: ~1h 34m) 1201/2020 tested (959 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 18m, remaining: ~1h 34m) 1203/2020 tested (961 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 18m, remaining: ~1h 34m) 1204/2020 tested (962 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 34m) 1205/2020 tested (963 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 33m) 1207/2020 tested (965 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 33m) 1208/2020 tested (966 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 33m) 1210/2020 tested (968 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 33m) 1211/2020 tested (969 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 33m) 1213/2020 tested (971 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 20m, remaining: ~1h 32m) 1214/2020 tested (972 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 20m, remaining: ~1h 32m) 1216/2020 tested (974 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 20m, remaining: ~1h 32m) 1217/2020 tested (975 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 20m, remaining: ~1h 32m) 1219/2020 tested (977 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 20m, remaining: ~1h 32m) 1220/2020 tested (978 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 20m, remaining: ~1h 31m) 1222/2020 tested (980 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 31m) 1223/2020 tested (981 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 31m) 1225/2020 tested (983 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 31m) 1226/2020 tested (984 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 31m) 1227/2020 tested (985 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 31m) 1229/2020 tested (987 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 31m) 1230/2020 tested (988 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 30m) 1232/2020 tested (990 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 22m, remaining: ~1h 30m) 1233/2020 tested (991 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 22m, remaining: ~1h 30m) 1235/2020 tested (993 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 22m, remaining: ~1h 30m) 1236/2020 tested (994 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 22m, remaining: ~1h 30m) 1238/2020 tested (996 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 22m, remaining: ~1h 30m) 1239/2020 tested (997 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 23m, remaining: ~1h 29m) 1241/2020 tested (999 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 23m, remaining: ~1h 29m) 1242/2020 tested (1000 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 23m, remaining: ~1h 29m) 1244/2020 tested (1002 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 23m, remaining: ~1h 29m) 1245/2020 tested (1003 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 23m, remaining: ~1h 29m) 1247/2020 tested (1005 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 23m, remaining: ~1h 28m) 1248/2020 tested (1006 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 28m) 1249/2020 tested (1007 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 28m) 1251/2020 tested (1009 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 28m) 1252/2020 tested (1010 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 24m, remaining: ~1h 28m) 1254/2020 tested (1012 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 24m, remaining: ~1h 28m) 1255/2020 tested (1013 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 24m, remaining: ~1h 27m) 1257/2020 tested (1015 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 25m, remaining: ~1h 27m) 1258/2020 tested (1016 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 25m, remaining: ~1h 27m) 1260/2020 tested (1018 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 25m, remaining: ~1h 27m) 1261/2020 tested (1019 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 25m, remaining: ~1h 27m) 1263/2020 tested (1021 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 25m, remaining: ~1h 27m) 1264/2020 tested (1022 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 25m, remaining: ~1h 26m) 1266/2020 tested (1024 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 26m) 1267/2020 tested (1025 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 26m) 1269/2020 tested (1027 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 26m) 1270/2020 tested (1028 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 26m) 1271/2020 tested (1029 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 26m, remaining: ~1h 26m) 1273/2020 tested (1031 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 26m, remaining: ~1h 25m) 1274/2020 tested (1032 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 27m, remaining: ~1h 25m) 1276/2020 tested (1034 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 27m, remaining: ~1h 25m) 1277/2020 tested (1035 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 27m, remaining: ~1h 25m) 1279/2020 tested (1037 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 27m, remaining: ~1h 25m) 1280/2020 tested (1038 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 27m, remaining: ~1h 25m) 1282/2020 tested (1040 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 27m, remaining: ~1h 24m) 1283/2020 tested (1041 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 24m) 1285/2020 tested (1043 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 24m) 1286/2020 tested (1044 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 24m) 1288/2020 tested (1046 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 24m) 1289/2020 tested (1047 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 23m) 1291/2020 tested (1049 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 23m) 1292/2020 tested (1050 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 29m, remaining: ~1h 23m) 1294/2020 tested (1052 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 29m, remaining: ~1h 23m) 1295/2020 tested (1053 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 29m, remaining: ~1h 23m) 1296/2020 tested (1054 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 29m, remaining: ~1h 23m) 1298/2020 tested (1056 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 29m, remaining: ~1h 23m) 1299/2020 tested (1057 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 29m, remaining: ~1h 22m) 1301/2020 tested (1059 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 22m) 1302/2020 tested (1060 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 22m) 1304/2020 tested (1062 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 22m) 1305/2020 tested (1063 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 22m) 1307/2020 tested (1065 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 22m) 1308/2020 tested (1066 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 21m) 1310/2020 tested (1068 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 21m) 1311/2020 tested (1069 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 31m, remaining: ~1h 21m) 1313/2020 tested (1071 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 31m, remaining: ~1h 21m) 1314/2020 tested (1072 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 31m, remaining: ~1h 21m) 1316/2020 tested (1074 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 31m, remaining: ~1h 20m) 1317/2020 tested (1075 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 31m, remaining: ~1h 20m) 1319/2020 tested (1077 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 32m, remaining: ~1h 20m) 1320/2020 tested (1078 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 32m, remaining: ~1h 20m) 1321/2020 tested (1079 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 32m, remaining: ~1h 20m) 1323/2020 tested (1081 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 32m, remaining: ~1h 20m) 1324/2020 tested (1082 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 32m, remaining: ~1h 19m) 1326/2020 tested (1084 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 32m, remaining: ~1h 19m) 1327/2020 tested (1085 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 19m) 1329/2020 tested (1087 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 19m) 1330/2020 tested (1088 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 19m) 1332/2020 tested (1090 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 19m) 1333/2020 tested (1091 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 33m, remaining: ~1h 18m) 1335/2020 tested (1093 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 33m, remaining: ~1h 18m) 1336/2020 tested (1094 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 34m, remaining: ~1h 18m) 1338/2020 tested (1096 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 34m, remaining: ~1h 18m) 1339/2020 tested (1097 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 34m, remaining: ~1h 18m) 1341/2020 tested (1099 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 34m, remaining: ~1h 18m) 1342/2020 tested (1100 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 34m, remaining: ~1h 17m) 1343/2020 tested (1101 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 34m, remaining: ~1h 17m) 1345/2020 tested (1103 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 17m) 1346/2020 tested (1104 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 17m) 1348/2020 tested (1106 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 17m) 1349/2020 tested (1107 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 17m) 1351/2020 tested (1109 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 16m) 1352/2020 tested (1110 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 35m, remaining: ~1h 16m) 1354/2020 tested (1112 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 36m, remaining: ~1h 16m) 1355/2020 tested (1113 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 36m, remaining: ~1h 16m) 1357/2020 tested (1115 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 36m, remaining: ~1h 16m) 1358/2020 tested (1116 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 36m, remaining: ~1h 15m) 1360/2020 tested (1118 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 36m, remaining: ~1h 15m) 1361/2020 tested (1119 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 36m, remaining: ~1h 15m) 1363/2020 tested (1121 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 15m) 1364/2020 tested (1122 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 15m) 1366/2020 tested (1124 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 15m) 1367/2020 tested (1125 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 15m) 1368/2020 tested (1126 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 14m) 1370/2020 tested (1128 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 14m) 1371/2020 tested (1129 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 14m) 1373/2020 tested (1131 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 38m, remaining: ~1h 14m) 1374/2020 tested (1132 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 38m, remaining: ~1h 14m) 1376/2020 tested (1134 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 38m, remaining: ~1h 14m) 1377/2020 tested (1135 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 38m, remaining: ~1h 13m) 1379/2020 tested (1137 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 38m, remaining: ~1h 13m) 1380/2020 tested (1138 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 39m, remaining: ~1h 13m) 1382/2020 tested (1140 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 39m, remaining: ~1h 13m) 1383/2020 tested (1141 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 39m, remaining: ~1h 13m) 1385/2020 tested (1143 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 39m, remaining: ~1h 12m) 1386/2020 tested (1144 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 39m, remaining: ~1h 12m) 1388/2020 tested (1146 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 39m, remaining: ~1h 12m) 1389/2020 tested (1147 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 12m) 1391/2020 tested (1149 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 12m) 1392/2020 tested (1150 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 12m) 1393/2020 tested (1151 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 40m, remaining: ~1h 11m) 1395/2020 tested (1153 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 40m, remaining: ~1h 11m) 1396/2020 tested (1154 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 40m, remaining: ~1h 11m) 1398/2020 tested (1156 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 41m, remaining: ~1h 11m) 1399/2020 tested (1157 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 41m, remaining: ~1h 11m) 1401/2020 tested (1159 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 41m, remaining: ~1h 11m) 1402/2020 tested (1160 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 41m, remaining: ~1h 10m) 1404/2020 tested (1162 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 41m, remaining: ~1h 10m) 1405/2020 tested (1163 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 41m, remaining: ~1h 10m) 1407/2020 tested (1165 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 10m) 1408/2020 tested (1166 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 10m) 1410/2020 tested (1168 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 10m) 1411/2020 tested (1169 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 9m) 1413/2020 tested (1171 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 42m, remaining: ~1h 9m) 1414/2020 tested (1172 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 42m, remaining: ~1h 9m) 1416/2020 tested (1174 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 43m, remaining: ~1h 9m) 1417/2020 tested (1175 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 43m, remaining: ~1h 9m) 1418/2020 tested (1176 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 43m, remaining: ~1h 9m) 1420/2020 tested (1178 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 43m, remaining: ~1h 8m) 1421/2020 tested (1179 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 43m, remaining: ~1h 8m) 1423/2020 tested (1181 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 43m, remaining: ~1h 8m) 1424/2020 tested (1182 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 8m) 1426/2020 tested (1184 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 8m) 1427/2020 tested (1185 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 7m) 1429/2020 tested (1187 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 7m) 1430/2020 tested (1188 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 7m) 1432/2020 tested (1190 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 7m) 1433/2020 tested (1191 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 45m, remaining: ~1h 7m) 1435/2020 tested (1193 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 45m, remaining: ~1h 7m) 1436/2020 tested (1194 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 45m, remaining: ~1h 6m) 1438/2020 tested (1196 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 45m, remaining: ~1h 6m) 1439/2020 tested (1197 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 45m, remaining: ~1h 6m) 1441/2020 tested (1199 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 45m, remaining: ~1h 6m) 1442/2020 tested (1200 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 6m) 1443/2020 tested (1201 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 6m) 1445/2020 tested (1203 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 6m) 1446/2020 tested (1204 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 5m) 1448/2020 tested (1206 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 5m) 1449/2020 tested (1207 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 5m) 1451/2020 tested (1209 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 5m) 1452/2020 tested (1210 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 5m) 1454/2020 tested (1212 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 47m, remaining: ~1h 4m) 1455/2020 tested (1213 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 47m, remaining: ~1h 4m) 1457/2020 tested (1215 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 47m, remaining: ~1h 4m) 1458/2020 tested (1216 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 47m, remaining: ~1h 4m) 1460/2020 tested (1218 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 48m, remaining: ~1h 4m) 1461/2020 tested (1219 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 48m, remaining: ~1h 4m) 1463/2020 tested (1221 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 48m, remaining: ~1h 3m) 1464/2020 tested (1222 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 48m, remaining: ~1h 3m) 1466/2020 tested (1224 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 48m, remaining: ~1h 3m) 1467/2020 tested (1225 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 48m, remaining: ~1h 3m) 1468/2020 tested (1226 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 3m) 1470/2020 tested (1228 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 3m) 1471/2020 tested (1229 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 2m) 1473/2020 tested (1231 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 2m) 1474/2020 tested (1232 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 49m, remaining: ~1h 2m) 1476/2020 tested (1234 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 49m, remaining: ~1h 2m) 1477/2020 tested (1235 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 50m, remaining: ~1h 2m) 1479/2020 tested (1237 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 50m, remaining: ~1h 2m) 1480/2020 tested (1238 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 50m, remaining: ~1h 1m) 1482/2020 tested (1240 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 50m, remaining: ~1h 1m) 1483/2020 tested (1241 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 50m, remaining: ~1h 1m) 1485/2020 tested (1243 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 50m, remaining: ~1h 1m) 1488/2020 tested (1244 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 0m) 1489/2020 tested (1245 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 0m) 1491/2020 tested (1247 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 0m) 1492/2020 tested (1248 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 0m) 1494/2020 tested (1250 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 51m, remaining: ~1h 0m) 1495/2020 tested (1251 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 51m, remaining: ~1h 0m) 1497/2020 tested (1253 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 52m, remaining: ~59m) 1498/2020 tested (1254 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 52m, remaining: ~59m) 1500/2020 tested (1256 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 52m, remaining: ~59m) 1501/2020 tested (1257 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 52m, remaining: ~59m) 1502/2020 tested (1258 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 52m, remaining: ~59m) 1504/2020 tested (1260 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 52m, remaining: ~59m) 1505/2020 tested (1261 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~58m) 1507/2020 tested (1263 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~58m) 1508/2020 tested (1264 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~58m) 1510/2020 tested (1266 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~58m) 1511/2020 tested (1267 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~58m) 1513/2020 tested (1269 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~58m) 1514/2020 tested (1270 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 54m, remaining: ~57m) 1516/2020 tested (1272 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 54m, remaining: ~57m) 1517/2020 tested (1273 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 54m, remaining: ~57m) 1519/2020 tested (1275 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 54m, remaining: ~57m) 1520/2020 tested (1276 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 54m, remaining: ~57m) 1522/2020 tested (1278 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 54m, remaining: ~57m) 1523/2020 tested (1279 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 55m, remaining: ~56m) 1524/2020 tested (1280 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 55m, remaining: ~56m) 1526/2020 tested (1282 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 55m, remaining: ~56m) 1527/2020 tested (1283 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 55m, remaining: ~56m) 1529/2020 tested (1285 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 55m, remaining: ~56m) 1530/2020 tested (1286 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 55m, remaining: ~56m) 1532/2020 tested (1288 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~55m) 1533/2020 tested (1289 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~55m) 1535/2020 tested (1291 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 56m, remaining: ~55m) 1536/2020 tested (1292 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 56m, remaining: ~55m) 1538/2020 tested (1294 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 56m, remaining: ~55m) 1539/2020 tested (1295 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 56m, remaining: ~54m) 1541/2020 tested (1297 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 57m, remaining: ~54m) 1542/2020 tested (1298 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 57m, remaining: ~54m) 1544/2020 tested (1300 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 57m, remaining: ~54m) 1545/2020 tested (1301 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 57m, remaining: ~54m) 1547/2020 tested (1303 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 57m, remaining: ~54m) 1548/2020 tested (1304 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 57m, remaining: ~54m) 1549/2020 tested (1305 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~53m) 1551/2020 tested (1307 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~53m) 1552/2020 tested (1308 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~53m) 1554/2020 tested (1310 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~53m) 1555/2020 tested (1311 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 58m, remaining: ~53m) 1557/2020 tested (1313 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 58m, remaining: ~53m) 1558/2020 tested (1314 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 59m, remaining: ~52m) 1560/2020 tested (1316 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 59m, remaining: ~52m) 1561/2020 tested (1317 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 59m, remaining: ~52m) 1563/2020 tested (1319 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 59m, remaining: ~52m) 1564/2020 tested (1320 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 59m, remaining: ~52m) 1566/2020 tested (1322 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 59m, remaining: ~51m) 1567/2020 tested (1323 survived, 80 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~51m) 1569/2020 tested (1325 survived, 80 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~51m) 1570/2020 tested (1326 survived, 80 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~51m) 1571/2020 tested (1327 survived, 80 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~51m) 1573/2020 tested (1329 survived, 80 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~51m) 1574/2020 tested (1330 survived, 80 timed out)
Mutation testing 78% (elapsed: ~3h 0m, remaining: ~50m) 1576/2020 tested (1332 survived, 80 timed out)
Mutation testing 78% (elapsed: ~3h 1m, remaining: ~50m) 1577/2020 tested (1333 survived, 80 timed out)
Mutation testing 78% (elapsed: ~3h 1m, remaining: ~50m) 1579/2020 tested (1335 survived, 80 timed out)
Mutation testing 78% (elapsed: ~3h 1m, remaining: ~50m) 1580/2020 tested (1336 survived, 80 timed out)
Mutation testing 78% (elapsed: ~3h 1m, remaining: ~50m) 1582/2020 tested (1338 survived, 80 timed out)
Mutation testing 78% (elapsed: ~3h 1m, remaining: ~50m) 1583/2020 tested (1339 survived, 80 timed out)
Mutation testing 78% (elapsed: ~3h 1m, remaining: ~49m) 1585/2020 tested (1341 survived, 80 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~49m) 1586/2020 tested (1342 survived, 80 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~49m) 1588/2020 tested (1344 survived, 80 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~49m) 1589/2020 tested (1345 survived, 80 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~49m) 1590/2020 tested (1346 survived, 80 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~49m) 1592/2020 tested (1348 survived, 80 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~49m) 1593/2020 tested (1349 survived, 80 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~48m) 1595/2020 tested (1351 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 3m, remaining: ~48m) 1596/2020 tested (1352 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 3m, remaining: ~48m) 1598/2020 tested (1354 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 3m, remaining: ~48m) 1599/2020 tested (1355 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 3m, remaining: ~48m) 1601/2020 tested (1357 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 3m, remaining: ~47m) 1602/2020 tested (1358 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 4m, remaining: ~47m) 1604/2020 tested (1360 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 4m, remaining: ~47m) 1605/2020 tested (1361 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 4m, remaining: ~47m) 1607/2020 tested (1363 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 4m, remaining: ~47m) 1608/2020 tested (1364 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 4m, remaining: ~47m) 1610/2020 tested (1366 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 4m, remaining: ~46m) 1611/2020 tested (1367 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~46m) 1613/2020 tested (1369 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~46m) 1614/2020 tested (1370 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~46m) 1615/2020 tested (1371 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 5m, remaining: ~46m) 1617/2020 tested (1373 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 5m, remaining: ~46m) 1618/2020 tested (1374 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 5m, remaining: ~45m) 1620/2020 tested (1376 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 6m, remaining: ~45m) 1621/2020 tested (1377 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 6m, remaining: ~45m) 1623/2020 tested (1379 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 6m, remaining: ~45m) 1624/2020 tested (1380 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 6m, remaining: ~45m) 1626/2020 tested (1382 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 6m, remaining: ~45m) 1627/2020 tested (1383 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 6m, remaining: ~44m) 1629/2020 tested (1385 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~44m) 1630/2020 tested (1386 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~44m) 1632/2020 tested (1388 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~44m) 1633/2020 tested (1389 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~44m) 1635/2020 tested (1391 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~44m) 1636/2020 tested (1392 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 7m, remaining: ~43m) 1638/2020 tested (1394 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 8m, remaining: ~43m) 1639/2020 tested (1395 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 8m, remaining: ~43m) 1640/2020 tested (1396 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 8m, remaining: ~43m) 1642/2020 tested (1398 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 8m, remaining: ~43m) 1643/2020 tested (1399 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 8m, remaining: ~43m) 1645/2020 tested (1401 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 8m, remaining: ~42m) 1646/2020 tested (1402 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~42m) 1648/2020 tested (1404 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~42m) 1649/2020 tested (1405 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~42m) 1651/2020 tested (1407 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~42m) 1652/2020 tested (1408 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~41m) 1654/2020 tested (1410 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~41m) 1655/2020 tested (1411 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 10m, remaining: ~41m) 1657/2020 tested (1413 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 10m, remaining: ~41m) 1658/2020 tested (1414 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 10m, remaining: ~41m) 1660/2020 tested (1416 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 10m, remaining: ~41m) 1661/2020 tested (1417 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 10m, remaining: ~41m) 1662/2020 tested (1418 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 10m, remaining: ~40m) 1664/2020 tested (1420 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~40m) 1665/2020 tested (1421 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~40m) 1667/2020 tested (1423 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~40m) 1668/2020 tested (1424 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~40m) 1670/2020 tested (1426 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~40m) 1671/2020 tested (1427 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~39m) 1673/2020 tested (1429 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~39m) 1674/2020 tested (1430 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~39m) 1676/2020 tested (1432 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 12m, remaining: ~39m) 1677/2020 tested (1433 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 12m, remaining: ~39m) 1679/2020 tested (1435 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 12m, remaining: ~38m) 1680/2020 tested (1436 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 12m, remaining: ~38m) 1682/2020 tested (1438 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 13m, remaining: ~38m) 1683/2020 tested (1439 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 13m, remaining: ~38m) 1684/2020 tested (1440 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 13m, remaining: ~38m) 1686/2020 tested (1442 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 13m, remaining: ~38m) 1687/2020 tested (1443 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 13m, remaining: ~37m) 1689/2020 tested (1445 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 13m, remaining: ~37m) 1690/2020 tested (1446 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~37m) 1692/2020 tested (1448 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~37m) 1693/2020 tested (1449 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~37m) 1695/2020 tested (1451 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~37m) 1696/2020 tested (1452 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 14m, remaining: ~36m) 1698/2020 tested (1454 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 14m, remaining: ~36m) 1699/2020 tested (1455 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 15m, remaining: ~36m) 1701/2020 tested (1457 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 15m, remaining: ~36m) 1702/2020 tested (1458 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 15m, remaining: ~36m) 1704/2020 tested (1460 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 15m, remaining: ~36m) 1705/2020 tested (1461 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 15m, remaining: ~35m) 1707/2020 tested (1463 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 15m, remaining: ~35m) 1708/2020 tested (1464 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~35m) 1709/2020 tested (1465 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~35m) 1711/2020 tested (1467 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~35m) 1712/2020 tested (1468 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~35m) 1714/2020 tested (1470 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~34m) 1715/2020 tested (1471 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 16m, remaining: ~34m) 1717/2020 tested (1473 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 17m, remaining: ~34m) 1718/2020 tested (1474 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 17m, remaining: ~34m) 1720/2020 tested (1476 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 17m, remaining: ~34m) 1721/2020 tested (1477 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 17m, remaining: ~34m) 1723/2020 tested (1479 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 17m, remaining: ~33m) 1724/2020 tested (1480 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 17m, remaining: ~33m) 1726/2020 tested (1482 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~33m) 1727/2020 tested (1483 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~33m) 1729/2020 tested (1485 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~33m) 1730/2020 tested (1486 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~33m) 1732/2020 tested (1488 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~32m) 1733/2020 tested (1489 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~32m) 1735/2020 tested (1491 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~32m) 1736/2020 tested (1492 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~32m) 1737/2020 tested (1493 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 19m, remaining: ~32m) 1739/2020 tested (1495 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 19m, remaining: ~32m) 1740/2020 tested (1496 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 19m, remaining: ~31m) 1742/2020 tested (1498 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 19m, remaining: ~31m) 1743/2020 tested (1499 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 20m, remaining: ~31m) 1745/2020 tested (1501 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 20m, remaining: ~31m) 1746/2020 tested (1502 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 20m, remaining: ~31m) 1748/2020 tested (1504 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 20m, remaining: ~31m) 1749/2020 tested (1505 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 20m, remaining: ~30m) 1751/2020 tested (1507 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 20m, remaining: ~30m) 1752/2020 tested (1508 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~30m) 1754/2020 tested (1510 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~30m) 1755/2020 tested (1511 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~30m) 1757/2020 tested (1513 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 21m, remaining: ~30m) 1758/2020 tested (1514 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 21m, remaining: ~29m) 1759/2020 tested (1515 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 21m, remaining: ~29m) 1761/2020 tested (1517 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 22m, remaining: ~29m) 1762/2020 tested (1518 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 22m, remaining: ~29m) 1764/2020 tested (1520 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 22m, remaining: ~29m) 1765/2020 tested (1521 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 22m, remaining: ~28m) 1767/2020 tested (1523 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 22m, remaining: ~28m) 1768/2020 tested (1524 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 22m, remaining: ~28m) 1770/2020 tested (1526 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~28m) 1771/2020 tested (1527 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~28m) 1773/2020 tested (1529 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~28m) 1774/2020 tested (1530 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~27m) 1776/2020 tested (1532 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~27m) 1777/2020 tested (1533 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 23m, remaining: ~27m) 1779/2020 tested (1535 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 24m, remaining: ~27m) 1780/2020 tested (1536 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 24m, remaining: ~27m) 1782/2020 tested (1538 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 24m, remaining: ~27m) 1783/2020 tested (1539 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 24m, remaining: ~27m) 1784/2020 tested (1540 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 24m, remaining: ~26m) 1786/2020 tested (1542 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 24m, remaining: ~26m) 1787/2020 tested (1543 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~26m) 1789/2020 tested (1545 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~26m) 1790/2020 tested (1546 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~26m) 1792/2020 tested (1548 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~26m) 1793/2020 tested (1549 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~25m) 1795/2020 tested (1551 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~25m) 1796/2020 tested (1552 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 26m, remaining: ~25m) 1798/2020 tested (1554 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 26m, remaining: ~25m) 1799/2020 tested (1555 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 26m, remaining: ~25m) 1801/2020 tested (1557 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 26m, remaining: ~24m) 1802/2020 tested (1558 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 26m, remaining: ~24m) 1804/2020 tested (1560 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 26m, remaining: ~24m) 1805/2020 tested (1561 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~24m) 1807/2020 tested (1563 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~24m) 1808/2020 tested (1564 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~24m) 1810/2020 tested (1566 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~23m) 1811/2020 tested (1567 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~23m) 1812/2020 tested (1568 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~23m) 1814/2020 tested (1570 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~23m) 1815/2020 tested (1571 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~23m) 1817/2020 tested (1573 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 28m, remaining: ~23m) 1818/2020 tested (1574 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 28m, remaining: ~22m) 1820/2020 tested (1576 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 28m, remaining: ~22m) 1821/2020 tested (1577 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 28m, remaining: ~22m) 1823/2020 tested (1579 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 29m, remaining: ~22m) 1824/2020 tested (1580 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 29m, remaining: ~22m) 1826/2020 tested (1582 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 29m, remaining: ~22m) 1827/2020 tested (1583 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 29m, remaining: ~21m) 1829/2020 tested (1585 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 29m, remaining: ~21m) 1830/2020 tested (1586 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 29m, remaining: ~21m) 1832/2020 tested (1588 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~21m) 1833/2020 tested (1589 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~21m) 1835/2020 tested (1591 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~21m) 1836/2020 tested (1592 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~20m) 1838/2020 tested (1594 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 30m, remaining: ~20m) 1839/2020 tested (1595 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 30m, remaining: ~20m) 1841/2020 tested (1597 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 31m, remaining: ~20m) 1842/2020 tested (1598 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 31m, remaining: ~20m) 1843/2020 tested (1599 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 31m, remaining: ~20m) 1845/2020 tested (1601 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 31m, remaining: ~19m) 1846/2020 tested (1602 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 31m, remaining: ~19m) 1848/2020 tested (1604 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 31m, remaining: ~19m) 1849/2020 tested (1605 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~19m) 1851/2020 tested (1607 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~19m) 1852/2020 tested (1608 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~19m) 1854/2020 tested (1610 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~18m) 1855/2020 tested (1611 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~18m) 1857/2020 tested (1613 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~18m) 1858/2020 tested (1614 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 33m, remaining: ~18m) 1860/2020 tested (1616 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 33m, remaining: ~18m) 1861/2020 tested (1617 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 33m, remaining: ~17m) 1863/2020 tested (1619 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 33m, remaining: ~17m) 1864/2020 tested (1620 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 33m, remaining: ~17m) 1866/2020 tested (1622 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 33m, remaining: ~17m) 1867/2020 tested (1623 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~17m) 1869/2020 tested (1625 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~17m) 1870/2020 tested (1626 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~17m) 1871/2020 tested (1627 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~16m) 1873/2020 tested (1629 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~16m) 1874/2020 tested (1630 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~16m) 1876/2020 tested (1632 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~16m) 1877/2020 tested (1633 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 35m, remaining: ~16m) 1879/2020 tested (1635 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 35m, remaining: ~16m) 1880/2020 tested (1636 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 35m, remaining: ~15m) 1882/2020 tested (1638 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 35m, remaining: ~15m) 1883/2020 tested (1639 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 35m, remaining: ~15m) 1885/2020 tested (1641 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 36m, remaining: ~15m) 1886/2020 tested (1642 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 36m, remaining: ~15m) 1888/2020 tested (1644 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 36m, remaining: ~15m) 1889/2020 tested (1645 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 36m, remaining: ~14m) 1891/2020 tested (1647 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 36m, remaining: ~14m) 1892/2020 tested (1648 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 36m, remaining: ~14m) 1894/2020 tested (1650 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~14m) 1895/2020 tested (1651 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~14m) 1897/2020 tested (1653 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~13m) 1898/2020 tested (1654 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 37m, remaining: ~13m) 1899/2020 tested (1655 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 37m, remaining: ~13m) 1901/2020 tested (1657 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 37m, remaining: ~13m) 1902/2020 tested (1658 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 38m, remaining: ~13m) 1904/2020 tested (1660 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 38m, remaining: ~13m) 1905/2020 tested (1661 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 38m, remaining: ~12m) 1907/2020 tested (1663 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 38m, remaining: ~12m) 1908/2020 tested (1664 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 38m, remaining: ~12m) 1910/2020 tested (1666 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 38m, remaining: ~12m) 1911/2020 tested (1667 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~12m) 1913/2020 tested (1669 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~12m) 1914/2020 tested (1670 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~11m) 1916/2020 tested (1672 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~11m) 1917/2020 tested (1673 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 39m, remaining: ~11m) 1919/2020 tested (1675 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 39m, remaining: ~11m) 1920/2020 tested (1676 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 40m, remaining: ~11m) 1922/2020 tested (1678 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 40m, remaining: ~11m) 1923/2020 tested (1679 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 40m, remaining: ~10m) 1925/2020 tested (1681 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 40m, remaining: ~10m) 1926/2020 tested (1682 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 40m, remaining: ~10m) 1927/2020 tested (1683 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 40m, remaining: ~10m) 1929/2020 tested (1685 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~10m) 1930/2020 tested (1686 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~10m) 1932/2020 tested (1688 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~9m) 1933/2020 tested (1689 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~9m) 1935/2020 tested (1691 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~9m) 1936/2020 tested (1692 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~9m) 1938/2020 tested (1694 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~9m) 1939/2020 tested (1695 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 42m, remaining: ~9m) 1941/2020 tested (1697 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 42m, remaining: ~8m) 1942/2020 tested (1698 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 42m, remaining: ~8m) 1944/2020 tested (1700 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 42m, remaining: ~8m) 1945/2020 tested (1701 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 42m, remaining: ~8m) 1947/2020 tested (1703 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~8m) 1948/2020 tested (1704 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~8m) 1950/2020 tested (1706 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~7m) 1951/2020 tested (1707 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~7m) 1953/2020 tested (1709 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~7m) 1954/2020 tested (1710 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~7m) 1955/2020 tested (1711 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~7m) 1957/2020 tested (1713 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~7m) 1958/2020 tested (1714 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 44m, remaining: ~6m) 1960/2020 tested (1716 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 44m, remaining: ~6m) 1961/2020 tested (1717 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 44m, remaining: ~6m) 1963/2020 tested (1719 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 44m, remaining: ~6m) 1964/2020 tested (1720 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 45m, remaining: ~6m) 1966/2020 tested (1722 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 45m, remaining: ~6m) 1967/2020 tested (1723 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 45m, remaining: ~5m) 1969/2020 tested (1725 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 45m, remaining: ~5m) 1970/2020 tested (1726 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 45m, remaining: ~5m) 1972/2020 tested (1728 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 45m, remaining: ~5m) 1973/2020 tested (1729 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~5m) 1975/2020 tested (1731 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~5m) 1976/2020 tested (1732 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~4m) 1978/2020 tested (1734 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~4m) 1979/2020 tested (1735 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 46m, remaining: ~4m) 1981/2020 tested (1737 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 46m, remaining: ~4m) 1982/2020 tested (1738 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 47m, remaining: ~4m) 1983/2020 tested (1739 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 47m, remaining: ~4m) 1985/2020 tested (1741 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 47m, remaining: ~3m) 1986/2020 tested (1742 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 47m, remaining: ~3m) 1988/2020 tested (1744 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 47m, remaining: ~3m) 1989/2020 tested (1745 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 47m, remaining: ~3m) 1991/2020 tested (1747 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~3m) 1992/2020 tested (1748 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~2m) 1994/2020 tested (1750 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~2m) 1997/2020 tested (1751 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~2m) 1998/2020 tested (1752 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 48m, remaining: ~2m) 2000/2020 tested (1754 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 48m, remaining: ~2m) 2001/2020 tested (1755 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 49m, remaining: ~1m) 2003/2020 tested (1757 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 49m, remaining: ~1m) 2004/2020 tested (1758 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 49m, remaining: ~1m) 2006/2020 tested (1760 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 49m, remaining: ~1m) 2007/2020 tested (1761 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 49m, remaining: ~1m) 2009/2020 tested (1763 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 49m, remaining: ~1m) 2010/2020 tested (1764 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: <1m) 2012/2020 tested (1766 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: <1m) 2013/2020 tested (1767 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: <1m) 2015/2020 tested (1769 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: <1m) 2016/2020 tested (1770 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: <1m) 2018/2020 tested (1772 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: <1m) 2019/2020 tested (1773 survived, 80 timed out)

All tests
  ✓ All tests (killed 166)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap === "string") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {});

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", 42);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("fulfilled", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("rejected", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("pending", definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", 0);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", false);

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define !== "function" && define.amd) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define !== "function" || !define.amd) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && !define.amd) {

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           undefined(definition);

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           null(definition);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(definition());

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(console.log(definition));

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses === "undefined") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses !== "undefined") {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.ok()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.maybeOk()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.okay()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window === "undefined" && typeof self === "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined" && typeof global !== "undefined") {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.exit();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.run();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.bind();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:23
-               runSingle(task, domain);
+               runSingle(task.bind(null), domain);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:129:20
-               task = laterQueue.pop();
+               task = laterQueue.shift();

[Survived] PrecomputedMutator
q.js:130:13
-               runSingle(task);
+               noop(task);

[Survived] PrecomputedMutator
q.js:130:13
-               runSingle(task);
+               flush(task);

[Survived] PrecomputedMutator
q.js:130:23
-               runSingle(task);
+               runSingle(() => {});

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isBrowser) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain + 1) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.foo) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush());

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush.call());

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush.apply());

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain === null) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               null();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               undefined();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (!flushing || true) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(0);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(this, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush());

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, undefined);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, null);

[Survived] PrecomputedMutator
q.js:206:17
-                   setImmediate(flush);
+                   requestAnimationFrame(flush);

[Survived] PrecomputedMutator
q.js:206:17
-                   setImmediate(flush);
+                   setInterval(flush);

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel == "undefined") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "object") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "function") {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(undefined);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, "Hello, World!");

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(requestPortTick);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(laterQueue.push(flush));

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(laterQueue.push(requestTick));

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (!flushing && true) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length < 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length !== 1) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (0);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while ("0");

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (null);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (this.hasOwnProperty(index)) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index >= 0 && index < this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (typeof index === "number" && index >= 0 && index < this.length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index > length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (length > index) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index >= length) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index >= length; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = length - index - 1) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index < this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index > this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index !== this.length) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis * 2, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index]++, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] = null, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] = "foo", index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i >= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i = 0) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this.foo[i] === value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this.bar[i] === value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.pop(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.shift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, index, value, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, [value, index, self]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self, undefined));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(self, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(0, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value + 1, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value * 2, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value - 1, index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index - 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, length - index - 1, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, null));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, {}));

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key of object) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {}) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(key, object)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (!object_hasOwnProperty(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && key !== "prototype") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object[key])) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object.hasOwnProperty(key))) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object.key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(undefined, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty({}, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, this.key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key++)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push("key" + 1);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push("key" + "1");

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push("key" + undefined);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_hasOwnProperty(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_keys(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_create(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.name) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(QReturnValue(exception)) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && error instanceof Error && error.stack

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && error.stack

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p.source; !p) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p.source; p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p && !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.next) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source + 1) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.then(function () {
+     return p.source.next;
+   })) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ !== p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ >= p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__maximumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackTrace__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.pop(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.shift(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.source.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.slice(0));

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.reverse());

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.pop(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.shift(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.name);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.code);

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.concat("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.push("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.pop("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + "From previous event:\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + "From previous event:\n" + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + "From previous event:\n" + "From previous event:\n");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n").reverse().join("\n"));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n").slice(1).join("\n"));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n").slice(-1).join("\n"));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack" + "Trace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack" + 1, {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack.slice(1),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\t");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\r");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\b");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = -1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = this.length - 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 0; i <= lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 0; i < lines.length - 1; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i + 1 < lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i *= 2) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(line) && !line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(line) && line !== "") {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(line) && line.indexOf(" ") === -1) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isExternalFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line + 1) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line - 1) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line * 2) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.pop(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.shift(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.unshift(line);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push("line");

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push("line" + 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push("line" * 2);

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\\n");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\r");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.startsWith("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.endsWith("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:30
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.indexOf("(node.js:)") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.contains("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.search("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(node.js:)") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split("@")[1]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.replace(/^.*@/, ""));

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(":")[1]);

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[4])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.toLowerCase());

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split("").reverse().join(""));

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.replace(/\d/g, ""));

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[0]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[2]) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[0])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(" ")[1]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(" ")[2]);

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3 !== null) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3.length > 0) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[0] !== undefined) {

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[0])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3.length)];

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split("at ")[1]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split("at ")[0]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split("at ")[2]);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber === undefined) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber !== null) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (!fileNameAndLineNumber.length) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (!hasStacks && !isNodeFrame(stackLine)) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks || isNodeFrame(stackLine)) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\t");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(" ");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\\n");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[lines.length - 1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("at") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("in") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber !== null) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[0] === undefined) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn !== undefined) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console.warn === "undefined") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, []);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.bind(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.toString(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, "Hello, world!");

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, 42);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (value === Promise) {

[Survived] PrecomputedMutator
q.js:564:27
-               messages.push(args);
+               messages.push(args.slice());

[Survived] PrecomputedMutator
q.js:564:27
-               messages.push(args);
+               messages.push(args.concat());

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[1] === undefined) { // progress operand

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.pop(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.shift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.unshift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(undefined);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(0, args);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages[0]) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.slice(1)) {

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue + 1(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue - 1(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue * 2(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(undefined);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(null);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(Promise.reject(new Error("Test error")));

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === undefined) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue.valueOf() === null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (!isPromise(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue + 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue * 2)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue - 1)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === false) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise !== true) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (!resolvedPromise.valueOf()) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (!Q.longStackSupport || !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.split("\n").length - 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n", e.stack.indexOf("\n") + 1));

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\\n") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:624:17
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message.concat(newPromise));

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(undefined, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(null, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply("foo", message);

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(reject(value)));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(value + 1));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(value, 1));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(resolve(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(notify(value));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(undefined));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(0));

[Survived] PrecomputedMutator
q.js:649:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== undefined) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise = true) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise = false) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise = !resolvedPromise) {

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(null);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(undefined);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener("hello");

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(null);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(undefined);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject("error");

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length < 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(null));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(null, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(undefined, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice([], 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, null));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.fulfill(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.notify(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(0);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== undefined) {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== null) {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== "object") {

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.fulfill, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(Q.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.fulfill, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(null));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(undefined));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(""));

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           undefined(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(reason + 1);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(reason.toUpperCase());

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(reason.split(" ").reverse().join(" "));

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return 1 + 1(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return "Q"(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + 1).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(null).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x + y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(y * 2);

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.reject([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.resolve([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.all([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([null, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x == y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x >= y) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i -= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i = len - 1; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i *= 2) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject());

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] + 1).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs.length - i).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, undefined);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return null(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return undefined(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return reject(Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === undefined) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect == void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === undefined) {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (descriptor.hasOwnProperty(op)) {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (op in descriptor) {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (typeof descriptor[op] === "function") {

[Survived] PrecomputedMutator
q.js:808:26
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args, 1);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(null, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(Q.reject("error"), args);

[Survived] PrecomputedMutator
q.js:808:56
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args.concat(1));

[Survived] PrecomputedMutator
q.js:808:56
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args.reverse());

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(undefined, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call({}, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op + 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op - 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op * 2, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[0]);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, [args[0]]);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(0);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(undefined);

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.state) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.toString()) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.valueOf()) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "pending" && inspected.value === undefined) {

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(undefined, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(null, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong({}, self);

[Survived] PrecomputedMutator
q.js:869:16
-           return reject(exception);
+           return Q.reject(exception);

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(0) : value;

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done && false) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(undefined);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(NaN);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.message);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.toString());

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.stack);

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (!newValue) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw && !newValue) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.resolve(newValue);

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.reject(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(undefined);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify("some string");

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(promise.thenResolve()).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(promise.thenReject()).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(promise.then(function () {
+     return Q.reject();
+   })).tap(callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(null);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(undefined);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(false);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = undefined(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(1);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(null);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(undefined);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.fapply(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.fbind(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(NaN);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed, 42);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed, Q.when(value, fulfilled, rejected, progressed));

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.reject(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.resolve(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.all(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(null).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(undefined).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(0).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(null, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed());

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed(value));

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed(rejected));

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return undefined;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     throw new Error();
+   });

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.reject(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.defer(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.async(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q("foo").thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:971:12
-       return this.then(function () { throw reason; });
+       return this.then.then(function () { throw reason; });

[Survived] PrecomputedMutator
q.js:971:12
-       return this.then(function () { throw reason; });
+       return this.then.catch(function () { throw reason; });

[Survived] PrecomputedMutator
q.js:971:12
-       return this.then(function () { throw reason; });
+       return this.then.finally(function () { throw reason; });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason.message;
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.reject(reason)).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.resolve(reason)).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.defer()).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(reason + 1);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(reason * 2);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(reason - 1);

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value instanceof Promise) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value.constructor === Promise) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (Q.isPromise(value) || value instanceof Promise) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isFulfilled(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isRejected(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value * 2)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value - 1)) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return !isPromise(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isFulfilled(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "fulfilled") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "rejected") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "pending") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.value().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(null) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(undefined) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise("object") || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:34
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object) || object.then().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(null) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(undefined) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise({}) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections && unhandledRejections.length > 0) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections || unhandledRejections.length === 0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.indexOf(promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.length > 0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(Q.getUnhandledReasons(), promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then()) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.catch()) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejection", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason + 1, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.toString(), promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.valueOf(), promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.unshift(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== undefined) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== null) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined") {

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.pop(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.shift(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.unshift(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.message);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.toString());

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.error);

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections && unhandledRejections.length > 0) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.concat(promise));

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.splice(0, 1));

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledReasons, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(reportedUnhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at == -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at !== -2) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, unhandledRejections);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, reportedUnhandledRejections);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, unhandledReasons);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length > 0, promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.then(function () {}));

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.catch(function () {}));

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.finally(function () {}));

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], null);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", null, unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionUnhandled", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at * 2], promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then(null, function () {}));

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.catch(function () {}));

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.finally(function () {}));

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 3);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 2, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, array.length - 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, unhandledReasons.length - 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, Math.floor(Math.random() * unhandledReasons.length));

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at.length - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected && false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected || false) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, "different reason");

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       untrackRejection(rejection, reason);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       resetUnhandledRejections(rejection, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(rejection.message, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(rejection.stack, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(rejection.name, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason + 1);

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === null) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === void 0) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name !== null && name !== void 0) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.toString(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply("PLACEHOLDER", args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(this, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(this, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, []);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, null);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, undefined);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.toString(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, undefined);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_entries(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys("PLACEHOLDER");

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(undefined);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, undefined);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.done(exception);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args + 1);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch({}, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op + 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op * 2, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op - 1, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.length);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, null);

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q("different object").inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, null);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return undefined(value).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(undefined).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q([]).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, () => {});

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.then().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.catch().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.resolve().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(array, null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(array, undefined);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.call(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.bind(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return rejected.apply(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply("undefined", array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array[0]);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.slice(1));

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.concat(array));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration === "object") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration === "function") {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("next");

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return Q.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return Q.resolve(exception);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return Q.defer(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(null);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(undefined);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(new Error("mutated error"));

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.rejected) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (!result.done) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value + 1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value - 1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value * 2);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, null, callback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value - 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value * 2, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, null, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, undefined, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, false, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, null);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, function () {});

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, function (error) {
+     throw error;
+   });

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](0);

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception) || exception instanceof StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception) && exception.value) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception) || exception.value) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration + 1(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration * 2(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration = !isStopIteration(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.message)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.name)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.message);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.stack);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return Q.reject(exception);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return Promise.reject(exception);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result.value);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(Q(result.value));

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(Q(result).value);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return deferred.reject(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.reject(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(undefined, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, deferred.reject, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, self.promiseDispatch, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, Q.resolve, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, undefined);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, null);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, true);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply("foo");

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.call(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.apply(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(null, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(function () {
+     return continuer.call(null, "next");
+   }, "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "done");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "reject");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "resolve");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "reject");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "resolve");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "foobar");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return reject();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return resolve();

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator())());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.apply(this, arguments))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, any(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, some(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([1])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([null])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, args[0]);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(null);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(this, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args[0]);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args + 1);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice());

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q({}).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + "1", args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op.concat("1"), args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[0]);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice());

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.concat([null]));

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve(null), op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op * 2, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op - 1, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, undefined);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(undefined).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(object.property).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key * 2]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.promiseDispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("apply", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("dispatch", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", ["key"]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object[key]).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object.key).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("apply", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, "extra argument"]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, Q(value)]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key + 1, value]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value - 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.resolve("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.reject("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.then("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("setValue", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set" + "Value", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, 0]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, key]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, "value"]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(null).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(0).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("apply", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, ""]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, false]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.reject("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.then("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.catch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key + 1]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key - 1]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, null]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.reject(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.resolve(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.defer(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(this).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("patch", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args[0]]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat([42])]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("apply", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.concat(args)]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.filter(function (arg) {
+     return arg !== name;
+   })]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.reject(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.resolve(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.defer(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(undefined).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(0).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("put", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("resolve", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(void 0)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(null)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 0, 1), 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 1, 2), 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, arguments.length)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.resolve("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.reject("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("get", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("set", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, arguments.slice(1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, [].slice.call(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 2))]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(1 + 1, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice("hello world", 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(Math.random(), 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, void 0)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, [args]]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice(0)]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(function () {}).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("post", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 1, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice()]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.concat()]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, [args]]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.reject("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.notify("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.resolve("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("concat", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, void 0]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, null]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, undefined]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.reject(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.resolve(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.all(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(null).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q("foo").dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("applyAsync", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, arguments]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 2))]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 1, 2))]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 0, -1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 0, arguments.length - 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, arguments.length - 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [null, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments).reverse()]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("concat", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(array_slice(arguments, 1, 1))]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(this);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args[0]);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.length);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args[1]);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_splice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 0, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1, 2), 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, array.length - 1);

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, -1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, arguments.length - 1))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(undefined))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice({}))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(this.args);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments.slice());

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments.slice(1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments[0](arguments))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(void 0))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice("foo"))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", ["foo"]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.reject(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(null).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q({}).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.length).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("getOwnPropertyNames", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [undefined]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [null]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [object]);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("filter", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", "foo");

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "fulfilled" && promise.inspect().value === undefined

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.fulfillmentValue()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.rejectionReason()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === 0 && promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.concat([]));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.filter(function () {
+     return true;
+   }));

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.resolve({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.progress({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: index
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress + 1
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress - 1
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.cancel(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.slice(0, -1));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.slice(-1));

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(null);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all([]);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === 1) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 1) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.defer();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.all();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onRejected, onFulfilled, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onProgress, onRejected, onFulfilled));

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.catch(), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.finally(), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, noop, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, noop, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, noop);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               undefined(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(index);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise.value);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (promise.state === "rejected") {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(new Error("Custom error message"));

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return all(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return anyResolved(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(null);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(undefined);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(0);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "anySettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allFulfilled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "any", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "all", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allFulfilled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allRejected");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "anySettled");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.all);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_find(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.length, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.reverse(), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(1), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(null, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(undefined, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(Q.reject(), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, null, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, undefined, noop);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function () {});

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function (err) {
+     throw err;
+   });

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function (err) {
+     return err;
+   });

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(undefined);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(Q.resolve(promises));

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.reject(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.defer(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.resolve(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.length).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises[0]).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice(1)).allSettled();

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = Q.reject(promise);

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = Q.when(promise);

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = Q.defer(promise);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.inspect());

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(deferred.promise);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(Q.reject(promise));

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, regardless, regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, regardless, regardless, regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.inspect(), regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.then(noop, noop), regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.then(function (value) {
+     return value;
+   }, function (reason) {
+     throw reason;
+   }), regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, regardless());

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function () {});

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, undefined);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(Q.reject("error")).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (reason) {
+     throw reason;
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (reason) {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(rejected, null);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(0, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(this, this, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(0).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, deferred.notify());

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, deferred.reject());

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, deferred.resolve());

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then("undefined", void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, true, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, function () {}, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, undefined);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, function () {});

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.reject(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.when(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.delay(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(undefined)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(0)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.apply(null, arguments));

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.bind(null, arguments));

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.call(null, arguments));

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback && typeof callback.apply === "function") {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.when(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(null);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(undefined);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(false);

[Survived] PrecomputedMutator
q.js:1787:16
-           return callback.fcall().then(function () {
+           return callback.call().then(function () {

[Survived] PrecomputedMutator
q.js:1787:16
-           return callback.fcall().then(function () {
+           return callback.bind().then(function () {

[Survived] PrecomputedMutator
q.js:1787:16
-           return callback.fcall().then(function () {
+           return callback.apply().then(function () {

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress, 1 + 1);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress, Q.delay(1000));

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress, Q.reject("error"));

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(42).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q("hello world").done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progressed, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(notified, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected.then(null, fulfilled), progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected.then(function () {
+     return fulfilled;
+   }), progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected.then(function () {
+     throw fulfilled;
+   }), progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, Q.reject);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(promise, error);

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, progressed) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(progressed, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(void 0, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, void 0) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, null) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, function () {}) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError());

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(null);

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(undefined);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError, null);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(0, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledRejection);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledException);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledFailure);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, "Error message");

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Error message"));

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.reject(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return undefined(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(42).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(-1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(NaN, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, undefined);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, "ERROR");

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = defer.reject();

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = defer.resolve();

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = defer.notify();

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (!error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.notify(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           null(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject({});

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           undefined(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout > 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout < 0) {

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(NaN).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay("0");

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay("-1");

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay("NaN");

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(0);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function (error) {
+     throw error;
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply({});

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.slice(1));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.concat([null]));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([].concat(args));

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(() => {});

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fail(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.then(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.dispatch(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.slice(1), 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(args, 1), 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.slice(0, -1), 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, NaN);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return Q.reject(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return Q.resolve(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return Q.defer(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(() => {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(args[0]);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice.length(arguments);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(deferred.reject);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = deferred.resolve();

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = deferred.reject();

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(false));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(0));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeRejector());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.shift()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.pop()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.reverse()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(function () {});

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback !== "function") {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback.length > 0) {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments[0] + 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(1, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice({}, 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice({}));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(this));

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(true));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(false));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           undefined(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           null(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           1(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(Promise.resolve()).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.pop()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.shift()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments[arguments.length - 1]);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(Q.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(function () {});

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.nbind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.nfcall(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.nfapply(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 1, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.unshift(this));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.push(this));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.unshift(null));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 1), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 2), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 3), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.shift(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.pop(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, arguments.length - 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(NaN));

[Survived] PrecomputedMutator
q.js:1967:24
-           var deferred = defer();
+           var deferred = defer.resolve();

[Survived] PrecomputedMutator
q.js:1967:24
-           var deferred = defer();
+           var deferred = defer.reject();

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments.slice());

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments.concat());

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments.splice());

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(this, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, baseArgs);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, nodeArgs[0]);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, undefined);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback.apply(thisp, nodeArgs)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(Q(callback.apply(thisp, nodeArgs)).fail(deferred.reject)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(Q(callback.apply(thisp, nodeArgs)).fail(deferred.reject).then(deferred.resolve)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(undefined).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply({}.push).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(args, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice("foo", 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.concat(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.slice(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.dispatch(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(0, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice());

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.concat());

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(0));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.reverse());

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return 0(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return "Q"(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return null(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name + 1, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.length, args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat(["newArg"]));

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, null);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = [1, 2, 3](args || []);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = null(args || []);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = "hello"(args || []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver.bind(null));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver + 1());

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.slice(1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 2, 3);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(array_slice(arguments, 1), 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(array_slice(arguments, 2), 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(array_slice(arguments, 3), 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, Math.random());

[Survived] PrecomputedMutator
q.js:2020:20
-       var deferred = defer();
+       var deferred = deferred.reject();

[Survived] PrecomputedMutator
q.js:2020:20
-       var deferred = defer();
+       var deferred = deferred.resolve();

[Survived] PrecomputedMutator
q.js:2020:20
-       var deferred = defer();
+       var deferred = Q.reject();

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().bind(null));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeRejector());

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       object[name](object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object.prototype).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object.constructor).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object.toString()).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("pre", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("npost", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.slice(0, -1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.concat(["extra argument"])]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(nodeArgs.length);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice.length(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:2030:20
-       var deferred = defer();
+       var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().bind(null));

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(nodeback(error, null));

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.reject(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(object.foo).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(error, null));

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(null));

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(error, value));

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback === undefined) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback != null) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, undefined);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback("", value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, 0);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   null(error);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   undefined(error);

[Survived] PrecomputedMutator
queue.js:10:24
-               var next = Q.defer();
+               var next = Q.reject();

[Survived] PrecomputedMutator
queue.js:10:24
-               var next = Q.defer();
+               var next = Q.resolve();

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail.head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail.head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail.head.value");

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.promise.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(new Error("Different error message"));

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.all(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(undefined)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(false)};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               closed.resolve(end);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(ends);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(null);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(Q.reject(error));

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   12.18 |      166 |        80 |       1774 |        0 |        0 |
 q.js     |   12.32 |      166 |        80 |       1751 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         23 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m17:05:46 (3019) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m17:05:46 (3019) INFO MutationTestExecutor[39m Done in 231 minutes 4 seconds.

real	231m5.937s
user	42m15.508s
sys	7m14.365s
