*** using precomputed mutations ***
[32m15:10:46 (3295) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m15:10:46 (3295) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m15:10:46 (3295) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m15:10:47 (3295) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m15:10:47 (3295) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m15:10:47 (3295) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1660 mutants from MUTATION_TESTING/template-full_mixtral-8x7b-instruct_0.0/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with false
Mutant 1 in q.js: typeof bootstrap === "function" replaced with true
Mutant 2 in q.js: typeof bootstrap === "function" replaced with 1 === 0
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promisfe", definition)
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("deferred", definition)
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap(promise, function () {})
Mutant 6 in q.js: bootstrap replaced with null
Mutant 7 in q.js: "promise" replaced with null
Mutant 8 in q.js: "promise" replaced with 42
Mutant 9 in q.js: "promise" replaced with {}
Mutant 10 in q.js: typeof exports === "object" && typeof module === "object" replaced with true
Mutant 11 in q.js: typeof exports === "object" && typeof module === "object" replaced with "string"
Mutant 12 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof window === "undefined"
Mutant 13 in q.js: typeof define === "function" && define.amd replaced with true
Mutant 14 in q.js: typeof define === "function" && define.amd replaced with 1
Mutant 15 in q.js: typeof define === "function" && define.amd replaced with null
Mutant 16 in q.js: define replaced with null
Mutant 17 in q.js: definition replaced with function () {
  throw new Error('Buggy!');
}
Mutant 18 in q.js: definition replaced with function () {
  nextTick.laterQueue.push(noop);
}
Mutant 19 in q.js: typeof ses !== "undefined" replaced with false
Mutant 20 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined"
Mutant 21 in q.js: typeof ses !== "undefined" replaced with true
Mutant 22 in q.js: !ses.ok() replaced with true
Mutant 23 in q.js: !ses.ok() replaced with 1 === 2
Mutant 24 in q.js: !ses.ok() replaced with ses.noConflict()
Mutant 25 in q.js: ses.ok replaced with false
Mutant 26 in q.js: ses.ok replaced with null
Mutant 27 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with false
Mutant 28 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with 'undefined' === typeof window
Mutant 29 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with Object.prototype.toString.call(window) === '[object global]'
Mutant 30 in q.js: definition replaced with noop
Mutant 31 in q.js: domain replaced with true
Mutant 32 in q.js: domain replaced with null
Mutant 33 in q.js: domain replaced with head.domain || {}
Mutant 34 in q.js: domain.enter replaced with null
Mutant 35 in q.js: runSingle(task, domain) replaced with runSingle(noop)
Mutant 36 in q.js: task replaced with () => task()
Mutant 37 in q.js: domain replaced with null
Mutant 38 in q.js: domain replaced with 123
Mutant 39 in q.js: domain replaced with 'string'
Mutant 40 in q.js: laterQueue.length replaced with laterQueue.length + 1
Mutant 41 in q.js: laterQueue.length replaced with 0
Mutant 42 in q.js: laterQueue.length replaced with new Date().getTime()
Mutant 43 in q.js: task replaced with null
Mutant 44 in q.js: task replaced with true
Mutant 45 in q.js: task replaced with head.next
Mutant 46 in q.js: isNodeJS replaced with false
Mutant 47 in q.js: isNodeJS replaced with 1 < 2
Mutant 48 in q.js: isNodeJS replaced with typeof isNodeJS === 'undefined'
Mutant 49 in q.js: domain replaced with true
Mutant 50 in q.js: domain replaced with null
Mutant 51 in q.js: domain.exit replaced with global.Q.exit
Mutant 52 in q.js: domain.exit replaced with null
Mutant 53 in q.js: setTimeout(flush, 0) replaced with setTimeout(requestAnimationFrame(flush))
Mutant 54 in q.js: setTimeout replaced with 0
Mutant 55 in q.js: flush replaced with alert('Flushing tasks...')
Mutant 56 in q.js: flush replaced with console.log(global.Q)
Mutant 57 in q.js: 0 replaced with 1
Mutant 58 in q.js: 0 replaced with '1'
Mutant 59 in q.js: 0 replaced with Infinity
Mutant 60 in q.js: domain replaced with false
Mutant 61 in q.js: domain replaced with null
Mutant 62 in q.js: domain replaced with undefined
Mutant 63 in q.js: domain replaced with false
Mutant 64 in q.js: domain replaced with null
Mutant 65 in q.js: domain replaced with undefined
Mutant 66 in q.js: domain.exit replaced with null
Mutant 67 in q.js: !flushing replaced with false
Mutant 68 in q.js: !flushing replaced with true
Mutant 69 in q.js: !flushing replaced with 1 < 2
Mutant 70 in q.js: flush replaced with function () {
  throw new Error('Mutated code');
}
Mutant 71 in q.js: typeof window !== "undefined" replaced with false
Mutant 72 in q.js: typeof window !== "undefined" replaced with 1 > 0
Mutant 73 in q.js: typeof window !== "undefined" replaced with typeof window !== "undefined" ? false : true
Mutant 74 in q.js: setImmediate.bind replaced with null
Mutant 75 in q.js: window replaced with function () {
  return flush();
}
Mutant 76 in q.js: window replaced with {}
Mutant 77 in q.js: window replaced with null
Mutant 78 in q.js: setImmediate replaced with 0
Mutant 79 in q.js: flush replaced with function () {}
Mutant 80 in q.js: flush replaced with 1
Mutant 81 in q.js: typeof MessageChannel !== "undefined" replaced with false
Mutant 82 in q.js: typeof MessageChannel !== "undefined" replaced with 0
Mutant 83 in q.js: typeof MessageChannel !== "undefined" replaced with 'undefined'
Mutant 84 in q.js: channel.port2.postMessage replaced with null
Mutant 85 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 86 in q.js: 0 replaced with 1
Mutant 87 in q.js: 0 replaced with 'some string'
Mutant 88 in q.js: 0 replaced with {
  foo: 'bar'
}
Mutant 89 in q.js: setTimeout replaced with 0 === 1
Mutant 90 in q.js: 0 replaced with 1000
Mutant 91 in q.js: 0 replaced with Infinity
Mutant 92 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 93 in q.js: setTimeout(flush, 0) replaced with setTimeout(null)
Mutant 94 in q.js: setTimeout(flush, 0) replaced with setTimeout(function () {/* empty function */})
Mutant 95 in q.js: setTimeout replaced with undefined
Mutant 96 in q.js: setTimeout replaced with alert
Mutant 97 in q.js: flush replaced with 1 + flush
Mutant 98 in q.js: 0 replaced with 1
Mutant 99 in q.js: 0 replaced with Infinity
Mutant 100 in q.js: 0 replaced with -1
Mutant 101 in q.js: laterQueue.push replaced with []
Mutant 102 in q.js: laterQueue.push replaced with 42
Mutant 103 in q.js: task replaced with null
Mutant 104 in q.js: task replaced with 42
Mutant 105 in q.js: task replaced with {}
Mutant 106 in q.js: !flushing replaced with flushing === false
Mutant 107 in q.js: call.apply(f, arguments) replaced with call.apply(this)
Mutant 108 in q.js: call.apply(f, arguments) replaced with call.apply(null)
Mutant 109 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 110 in q.js: arguments replaced with null
Mutant 111 in q.js: uncurryThis replaced with Function.prototype.bind
Mutant 112 in q.js: uncurryThis replaced with Object.prototype.toString
Mutant 113 in q.js: Array.prototype.slice replaced with function () {
  throw new Error('Buggy slice');
}
Mutant 114 in q.js: Array.prototype.slice replaced with Array.prototype.filter
Mutant 115 in q.js: arguments.length === 1 replaced with true
Mutant 116 in q.js: arguments.length === 1 replaced with this.length > 0
Mutant 117 in q.js: arguments.length === 1 replaced with index < this.length - 1
Mutant 118 in q.js: 1 replaced with null
Mutant 119 in q.js: 1 replaced with array_slice(arguments, 1)
Mutant 120 in q.js: index in this replaced with true
Mutant 121 in q.js: index in this replaced with index < this.length
Mutant 122 in q.js: index in this replaced with 0 in this
Mutant 123 in q.js: ++index >= length replaced with index > length
Mutant 124 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index > length; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 125 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index == length; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 126 in q.js: index++ replaced with index + 1
Mutant 127 in q.js: index++ replaced with index = index + 1
Mutant 128 in q.js: index in this replaced with false
Mutant 129 in q.js: index in this replaced with this.hasOwnProperty(index)
Mutant 130 in q.js: index in this replaced with index < this.length
Mutant 131 in q.js: callback(basis, this[index], index) replaced with callback(0)
Mutant 132 in q.js: callback(basis, this[index], index) replaced with callback(this)
Mutant 133 in q.js: callback replaced with callback + 1
Mutant 134 in q.js: this[index] replaced with 0
Mutant 135 in q.js: this[index] replaced with this.length
Mutant 136 in q.js: index replaced with null
Mutant 137 in q.js: index replaced with 42
Mutant 138 in q.js: index replaced with this
Mutant 139 in q.js: i < this.length replaced with i > this.length
Mutant 140 in q.js: i++ replaced with i--
Mutant 141 in q.js: i++ replaced with Math.random()
Mutant 142 in q.js: i++ replaced with array_indexOf(value, this)
Mutant 143 in q.js: this[i] === value replaced with i === value
Mutant 144 in q.js: collect.push replaced with collect.unshift
Mutant 145 in q.js: collect.push replaced with Math.random
Mutant 146 in q.js: collect.push replaced with callback.length
Mutant 147 in q.js: callback.call(thisp, value, index, self) replaced with callback(value, index, self)
Mutant 148 in q.js: callback.call(thisp, value, index, self) replaced with callback.apply(null, [value, index, self])
Mutant 149 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(self, index, value, self)
Mutant 150 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(null)
Mutant 151 in q.js: callback.call(thisp, value, index, self) replaced with callback.call([])
Mutant 152 in q.js: callback.call replaced with callback.bind
Mutant 153 in q.js: thisp replaced with 42
Mutant 154 in q.js: thisp replaced with function () {}
Mutant 155 in q.js: value replaced with 1 / 0
Mutant 156 in q.js: self replaced with 5
Mutant 157 in q.js: self replaced with function () {}
Mutant 158 in q.js: uncurryThis replaced with Function.prototype.bind
Mutant 159 in q.js: object replaced with Object.prototype
Mutant 160 in q.js: object replaced with null
Mutant 161 in q.js: object replaced with function () {
  return 42;
}
Mutant 162 in q.js: object_hasOwnProperty(object, key) replaced with object.hasOwnProperty(key)
Mutant 163 in q.js: object_hasOwnProperty(object, key) replaced with Array.prototype.hasOwnProperty.call(object, key)
Mutant 164 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(this)
Mutant 165 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(window)
Mutant 166 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(Math)
Mutant 167 in q.js: object_hasOwnProperty replaced with Array.isArray
Mutant 168 in q.js: key replaced with "toString"
Mutant 169 in q.js: key replaced with null
Mutant 170 in q.js: key replaced with 1
Mutant 171 in q.js: key replaced with null
Mutant 172 in q.js: key replaced with 1
Mutant 173 in q.js: key replaced with function () {}
Mutant 174 in q.js: uncurryThis replaced with Function.prototype.bind
Mutant 175 in q.js: uncurryThis replaced with eval
Mutant 176 in q.js: Object replaced with null
Mutant 177 in q.js: Object replaced with Array
Mutant 178 in q.js: value replaced with null
Mutant 179 in q.js: value replaced with ''
Mutant 180 in q.js: value replaced with true
Mutant 181 in q.js: object_toString replaced with '[object Object]'
Mutant 182 in q.js: object_toString replaced with 1
Mutant 183 in q.js: exception replaced with null
Mutant 184 in q.js: exception replaced with {}
Mutant 185 in q.js: exception replaced with []
Mutant 186 in q.js: typeof ReturnValue !== "undefined" replaced with true
Mutant 187 in q.js: typeof ReturnValue !== "undefined" replaced with typeof globalThis.ReturnValue !== "undefined"
Mutant 188 in q.js: typeof ReturnValue !== "undefined" replaced with typeof someUndefinedVariable !== "undefined"
Mutant 189 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with promise.stack && typeof error === "object" && error !== null && error.stack && hasStacks
Mutant 190 in q.js: !!p replaced with p ? 1 : 0
Mutant 191 in q.js: !!p replaced with !p.source
Mutant 192 in q.js: !!p replaced with p instanceof Error
Mutant 193 in q.js: p = p.source replaced with null
Mutant 194 in q.js: p = p.source replaced with 1
Mutant 195 in q.js: p = p.source replaced with p.length
Mutant 196 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ < p.stackCounter
Mutant 197 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(null)
Mutant 198 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty({})
Mutant 199 in q.js: object_defineProperty replaced with Object.defineProperty
Mutant 200 in q.js: error replaced with null
Mutant 201 in q.js: error replaced with 42
Mutant 202 in q.js: error replaced with function () {}
Mutant 203 in q.js: "__minimumStackCounter__" replaced with this.__minimumStackCounter__
Mutant 204 in q.js: "__minimumStackCounter__" replaced with Math.random()
Mutant 205 in q.js: "__minimumStackCounter__" replaced with new Date().getTime()
Mutant 206 in q.js: stacks.unshift replaced with stacks = []
Mutant 207 in q.js: error.stack replaced with "error.stackStrace"
Mutant 208 in q.js: error.stack replaced with Math.random()
Mutant 209 in q.js: error.stack replaced with this.someNonExistentProperty
Mutant 210 in q.js: stacks.join replaced with stacks.concat.join
Mutant 211 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with " From previous event:\n"
Mutant 212 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with STACK_JUMP_SEPARATOR + "\n"
Mutant 213 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\nAnother event separator:\n"
Mutant 214 in q.js: filterStackString replaced with "<PLACEHOLDER>"
Mutant 215 in q.js: filterStackString replaced with []
Mutant 216 in q.js: concatedStacks replaced with error.stack.toString()
Mutant 217 in q.js: concatedStacks replaced with promise.stack
Mutant 218 in q.js: concatedStacks replaced with new Error().stack
Mutant 219 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(null)
Mutant 220 in q.js: "stack" replaced with error.stack.toString()
Mutant 221 in q.js: stackString.split replaced with ['\n']
Mutant 222 in q.js: "\n" replaced with "\n<script>alert('Mutated code!');</script>\n"
Mutant 223 in q.js: "\n" replaced with "\n\t\t"
Mutant 224 in q.js: "\n" replaced with "\n</body>"
Mutant 225 in q.js: i < lines.length replaced with i <= lines.length
Mutant 226 in q.js: i < lines.length replaced with i > -1
Mutant 227 in q.js: i < lines.length replaced with i in lines
Mutant 228 in q.js: ++i replaced with i += 2
Mutant 229 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with line !== null && line !== undefined && !isInternalFrame(line) && !isNodeFrame(line)
Mutant 230 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !(isInternalFrame(line) || isNodeFrame(line)) && line
Mutant 231 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !object_hasOwnProperty(window, 'line') && !isInternalFrame(line) && !isNodeFrame(line)
Mutant 232 in q.js: isInternalFrame replaced with typeof isInternalFrame !== 'function'
Mutant 233 in q.js: line replaced with false
Mutant 234 in q.js: isNodeFrame replaced with typeof isNodeFrame !== 'function'
Mutant 235 in q.js: line replaced with "<PLACEHOLDER>"
Mutant 236 in q.js: line replaced with Math.random()
Mutant 237 in q.js: line replaced with new Error()
Mutant 238 in q.js: "\n" replaced with "<br>"
Mutant 239 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 240 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 241 in q.js: stackLine.indexOf replaced with stackLine.lastIndexOf
Mutant 242 in q.js: stackLine replaced with "1: " + stackLine
Mutant 243 in q.js: stackLine replaced with stackLine.toUpperCase()
Mutant 244 in q.js: stackLine replaced with global.stackLine
Mutant 245 in q.js: attempt1 replaced with attempt1 && attempt1.length > 1
Mutant 246 in q.js: attempt1 replaced with getFileNameAndLineNumber(stackLine)[0] === 'attempt1'
Mutant 247 in q.js: Number replaced with value.length
Mutant 248 in q.js: attempt1[2] replaced with value.length
Mutant 249 in q.js: attempt1[2] replaced with this.value
Mutant 250 in q.js: attempt1[2] replaced with attempt2[2]
Mutant 251 in q.js: attempt2 replaced with attempt2 || []
Mutant 252 in q.js: attempt2 replaced with attempt2 || null
Mutant 253 in q.js: attempt2 replaced with attempt2 || {
  foo: 'bar'
}
Mutant 254 in q.js: Number replaced with 1
Mutant 255 in q.js: Number replaced with Infinity
Mutant 256 in q.js: attempt2[2] replaced with Infinity
Mutant 257 in q.js: attempt2[2] replaced with 1 / 0
Mutant 258 in q.js: attempt2[2] replaced with new Date()
Mutant 259 in q.js: stackLine replaced with "[object GlobalError]"
Mutant 260 in q.js: stackLine replaced with /.*@(.+):(\d+)$/g
Mutant 261 in q.js: stackLine replaced with null
Mutant 262 in q.js: attempt3 replaced with /.*@(.+):(\d+)$/.exec(stackLine)[0]
Mutant 263 in q.js: attempt3 replaced with /.*@(.+):(\d+)$/.exec(null)
Mutant 264 in q.js: attempt3 replaced with /.*@(.+):(\d+)$/.exec("some string")
Mutant 265 in q.js: Number replaced with "0"
Mutant 266 in q.js: Number replaced with true
Mutant 267 in q.js: Number replaced with null
Mutant 268 in q.js: attempt3[2] replaced with 1
Mutant 269 in q.js: attempt3[2] replaced with 'PLACEHOLDER'
Mutant 270 in q.js: getFileNameAndLineNumber replaced with null
Mutant 271 in q.js: getFileNameAndLineNumber replaced with []
Mutant 272 in q.js: stackLine replaced with stackLine + ''
Mutant 273 in q.js: stackLine replaced with global.stackLine
Mutant 274 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 275 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === ''
Mutant 276 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === 'undefined'
Mutant 277 in q.js: !hasStacks replaced with false
Mutant 278 in q.js: !hasStacks replaced with typeof hasStacks === "undefined"
Mutant 279 in q.js: !hasStacks replaced with hasStacks === null
Mutant 280 in q.js: e.stack.split replaced with "<error object>'.stack"
Mutant 281 in q.js: e.stack.split replaced with [1, 2, 3]
Mutant 282 in q.js: "\n" replaced with "\n<script>console.log('This is an injected script');</script>\n"
Mutant 283 in q.js: "\n" replaced with "\n<!-- This is an injected comment -->\n"
Mutant 284 in q.js: "\n" replaced with "\n" + Math.random() + "\n"
Mutant 285 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 286 in q.js: lines[0].indexOf replaced with "PLACEHOLDER".indexOf
Mutant 287 in q.js: lines[0].indexOf replaced with getFileNameAndLineNumber.indexOf
Mutant 288 in q.js: "@" replaced with "<@"
Mutant 289 in q.js: "@" replaced with "@module.js"
Mutant 290 in q.js: "@" replaced with "@" + new Date().getTime()
Mutant 291 in q.js: getFileNameAndLineNumber replaced with ['<filename>', 0]
Mutant 292 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 293 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === 'undefined'
Mutant 294 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with true
Mutant 295 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, null)
Mutant 296 in q.js: callback.apply replaced with callback.call
Mutant 297 in q.js: callback replaced with callback.bind(null, 1)
Mutant 298 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 299 in q.js: arguments replaced with Object.keys(arguments)
Mutant 300 in q.js: arguments replaced with arguments.callee
Mutant 301 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 302 in q.js: value instanceof Promise replaced with Object.prototype.toString.call(value) === '[object Promise]'
Mutant 303 in q.js: value instanceof Promise replaced with value && typeof value.then === 'function'
Mutant 304 in q.js: isPromiseAlike(value) replaced with value instanceof Object
Mutant 305 in q.js: isPromiseAlike(value) replaced with typeof value === 'object' && 'then' in value
Mutant 306 in q.js: isPromiseAlike(value) replaced with value && typeof value === 'object' && typeof value.then === 'function'
Mutant 307 in q.js: isPromiseAlike replaced with value && value.then
Mutant 308 in q.js: isPromiseAlike replaced with value && typeof value.then === 'function'
Mutant 309 in q.js: isPromiseAlike replaced with value && value.constructor.name === 'Promise'
Mutant 310 in q.js: value replaced with 1 * value
Mutant 311 in q.js: value replaced with value || true
Mutant 312 in q.js: coerce replaced with null
Mutant 313 in q.js: coerce replaced with {}
Mutant 314 in q.js: value replaced with value || true
Mutant 315 in q.js: value replaced with value ? value : 42
Mutant 316 in q.js: value replaced with value && 'some string'
Mutant 317 in q.js: value replaced with null
Mutant 318 in q.js: object_create replaced with {}
Mutant 319 in q.js: object_create replaced with null
Mutant 320 in q.js: defer.prototype replaced with {}
Mutant 321 in q.js: defer.prototype replaced with null
Mutant 322 in q.js: defer.prototype replaced with Object.create(Array.prototype)
Mutant 323 in q.js: object_create replaced with {}
Mutant 324 in q.js: Promise.prototype replaced with null
Mutant 325 in q.js: Promise.prototype replaced with {}
Mutant 326 in q.js: Promise.prototype replaced with function () {}
Mutant 327 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 328 in q.js: arguments replaced with Array.prototype.slice.call(arguments)
Mutant 329 in q.js: arguments replaced with [...arguments]
Mutant 330 in q.js: messages replaced with messages.length > 0
Mutant 331 in q.js: messages replaced with true
Mutant 332 in q.js: messages replaced with typeof messages !== 'undefined'
Mutant 333 in q.js: messages.push replaced with messages.unshift
Mutant 334 in q.js: messages.push replaced with messages.length = 0
Mutant 335 in q.js: messages.push replaced with window.messages.push
Mutant 336 in q.js: args replaced with []
Mutant 337 in q.js: args replaced with null
Mutant 338 in q.js: op === "when" && operands[1] replaced with op === "when" && "someString"
Mutant 339 in q.js: op === "when" && operands[1] replaced with op === "then"
Mutant 340 in q.js: op === "when" && operands[1] replaced with operands[0]
Mutant 341 in q.js: operands[1] replaced with 1
Mutant 342 in q.js: operands[1] replaced with null
Mutant 343 in q.js: operands[1] replaced with Math.random()
Mutant 344 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply([resolvedPromise].concat(args))
Mutant 345 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise, progressListeners)
Mutant 346 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch, args)
Mutant 347 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 348 in q.js: resolvedPromise replaced with Promise.resolve()
Mutant 349 in q.js: resolvedPromise replaced with null
Mutant 350 in q.js: resolvedPromise replaced with deferred
Mutant 351 in q.js: messages replaced with null
Mutant 352 in q.js: messages replaced with []
Mutant 353 in q.js: resolvedPromise replaced with null
Mutant 354 in q.js: resolvedPromise replaced with true
Mutant 355 in q.js: resolvedPromise replaced with messages
Mutant 356 in q.js: isPromise(nearerValue) replaced with 1 === 0
Mutant 357 in q.js: isPromise(nearerValue) replaced with null === nearerValue
Mutant 358 in q.js: isPromise(nearerValue) replaced with typeof nearerValue !== 'promise'
Mutant 359 in q.js: isPromise replaced with !isPromise
Mutant 360 in q.js: isPromise replaced with isPromiseAlike
Mutant 361 in q.js: nearerValue replaced with true
Mutant 362 in q.js: nearerValue replaced with Math.random()
Mutant 363 in q.js: !resolvedPromise replaced with resolvedPromise === undefined
Mutant 364 in q.js: !resolvedPromise replaced with this.resolvedPromise === void 0
Mutant 365 in q.js: !resolvedPromise replaced with !this.resolvedPromise
Mutant 366 in q.js: Q.longStackSupport && hasStacks replaced with false
Mutant 367 in q.js: Q.longStackSupport && hasStacks replaced with hasStacks
Mutant 368 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 369 in q.js: e.stack.substring replaced with e.message
Mutant 370 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.split("\n").length
Mutant 371 in q.js: e.stack.indexOf("\n") + 1 replaced with 1
Mutant 372 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.search("\n")
Mutant 373 in q.js: e.stack.indexOf replaced with e.stack.lastIndexOf
Mutant 374 in q.js: "\n" replaced with e.stack.substring(e.stack.indexOf("\n") + 2)
Mutant 375 in q.js: Q.longStackSupport && hasStacks replaced with false
Mutant 376 in q.js: Q.longStackSupport && hasStacks replaced with true
Mutant 377 in q.js: Q.longStackSupport && hasStacks replaced with 1
Mutant 378 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise)
Mutant 379 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 380 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.someOtherMethod
Mutant 381 in q.js: message replaced with []
Mutant 382 in q.js: message replaced with messages
Mutant 383 in q.js: resolvedPromise replaced with true
Mutant 384 in q.js: resolvedPromise replaced with null
Mutant 385 in q.js: resolvedPromise replaced with deferred
Mutant 386 in q.js: become replaced with deferred.resolve
Mutant 387 in q.js: become replaced with deferred.reject
Mutant 388 in q.js: Q(value) replaced with new Q(value)
Mutant 389 in q.js: Q(value) replaced with Promise.resolve(value)
Mutant 390 in q.js: Q(value) replaced with Q.resolve(value).then(function (val) {
  return val;
})
Mutant 391 in q.js: value replaced with null
Mutant 392 in q.js: value replaced with this
Mutant 393 in q.js: value replaced with new Promise(resolve => resolve(value))
Mutant 394 in q.js: resolvedPromise replaced with false
Mutant 395 in q.js: resolvedPromise replaced with null
Mutant 396 in q.js: resolvedPromise replaced with messages
Mutant 397 in q.js: fulfill(value) replaced with new Promise(resolve => resolve(value))
Mutant 398 in q.js: value replaced with null
Mutant 399 in q.js: value replaced with this
Mutant 400 in q.js: value replaced with new Error('Replacement error')
Mutant 401 in q.js: resolvedPromise replaced with true
Mutant 402 in q.js: resolvedPromise replaced with null
Mutant 403 in q.js: resolvedPromise replaced with new Promise(function () {})
Mutant 404 in q.js: reject(reason) replaced with Promise.reject(reason)
Mutant 405 in q.js: reject(reason) replaced with deferred.reject(reason)
Mutant 406 in q.js: reject replaced with true
Mutant 407 in q.js: reject replaced with deferred.resolve
Mutant 408 in q.js: reason replaced with new Error("New error message")
Mutant 409 in q.js: reason replaced with {}
Mutant 410 in q.js: reason replaced with null
Mutant 411 in q.js: resolvedPromise replaced with false
Mutant 412 in q.js: resolvedPromise replaced with null
Mutant 413 in q.js: resolvedPromise replaced with []
Mutant 414 in q.js: progressListener replaced with progressListeners[0]
Mutant 415 in q.js: progress replaced with null
Mutant 416 in q.js: progress replaced with {}
Mutant 417 in q.js: progress replaced with progress + 1
Mutant 418 in q.js: error replaced with true
Mutant 419 in q.js: error replaced with Q.resolve()
Mutant 420 in q.js: self.reject replaced with self.resolve
Mutant 421 in q.js: self.reject replaced with Q.resolve
Mutant 422 in q.js: error replaced with null
Mutant 423 in q.js: error replaced with true
Mutant 424 in q.js: error replaced with {}
Mutant 425 in q.js: arguments.length > 2 replaced with false
Mutant 426 in q.js: arguments.length > 2 replaced with true
Mutant 427 in q.js: arguments.length > 2 replaced with arguments[0] === undefined
Mutant 428 in q.js: self.resolve replaced with global.resolve
Mutant 429 in q.js: array_slice(arguments, 1) replaced with null
Mutant 430 in q.js: array_slice(arguments, 1) replaced with [1]
Mutant 431 in q.js: array_slice(arguments, 1) replaced with function () {}
Mutant 432 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 0))
Mutant 433 in q.js: array_slice replaced with arguments.callee.caller
Mutant 434 in q.js: arguments replaced with [1, 2, 3]
Mutant 435 in q.js: arguments replaced with {
  value: 'foo'
}
Mutant 436 in q.js: 1 replaced with arguments.length > 1
Mutant 437 in q.js: 1 replaced with this.resolve(value, undefined)
Mutant 438 in q.js: value replaced with null
Mutant 439 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 440 in q.js: typeof resolver !== "function" replaced with Object.prototype.toString.call(resolver) !== "[object Function]"
Mutant 441 in q.js: typeof resolver !== "function" replaced with typeof resolver !== typeof Function
Mutant 442 in q.js: defer replaced with null
Mutant 443 in q.js: defer replaced with {}
Mutant 444 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver([deferred.resolve, deferred.reject, deferred.notify][Math.floor(Math.random() * 3)])
Mutant 445 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve.bind(null, 'hacked value'))
Mutant 446 in q.js: resolver replaced with []
Mutant 447 in q.js: resolver replaced with null
Mutant 448 in q.js: resolver replaced with 0
Mutant 449 in q.js: deferred.resolve replaced with deferred.resolve(null)
Mutant 450 in q.js: deferred.resolve replaced with deferred.reject
Mutant 451 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 452 in q.js: deferred.reject replaced with deferred.resolve
Mutant 453 in q.js: deferred.reject replaced with deferred.notify
Mutant 454 in q.js: deferred.reject replaced with function () {
  throw new Error('Rejecting the promise');
}
Mutant 455 in q.js: deferred.notify replaced with deferred.resolve
Mutant 456 in q.js: deferred.reject replaced with deferred.resolve
Mutant 457 in q.js: deferred.reject replaced with deferred.notify
Mutant 458 in q.js: reason replaced with new Error('Buggy Reason')
Mutant 459 in q.js: reason replaced with null
Mutant 460 in q.js: reason replaced with Q.reject('Buggy Reason')
Mutant 461 in q.js: Q replaced with Promise
Mutant 462 in q.js: Q replaced with null
Mutant 463 in q.js: x replaced with 0
Mutant 464 in q.js: x replaced with null
Mutant 465 in q.js: y replaced with null
Mutant 466 in q.js: [this, that] replaced with [[this, that]]
Mutant 467 in q.js: [this, that] replaced with [null, that]
Mutant 468 in q.js: [this, that] replaced with [that, this]
Mutant 469 in q.js: x === y replaced with x == y
Mutant 470 in q.js: x === y replaced with x.valueOf() === y.valueOf()
Mutant 471 in q.js: x === y replaced with Object.is(x, y)
Mutant 472 in q.js: i < len replaced with i > -1
Mutant 473 in q.js: i++ replaced with i += 2
Mutant 474 in q.js: i++ replaced with Q.resolve()
Mutant 475 in q.js: answerPs[i] replaced with null
Mutant 476 in q.js: answerPs[i] replaced with answerPs[i] || {}
Mutant 477 in q.js: answerPs[i] replaced with Promise.resolve()
Mutant 478 in q.js: resolve replaced with deferred.resolve
Mutant 479 in q.js: resolve replaced with deferred.resolve(null)
Mutant 480 in q.js: reject replaced with function () {}
Mutant 481 in q.js: this.then replaced with this['then']
Mutant 482 in q.js: Q.race replaced with function () {
  return Q();
}
Mutant 483 in q.js: fallback === void 0 replaced with fallback !== void 0
Mutant 484 in q.js: fallback === void 0 replaced with typeof fallback === 'undefined'
Mutant 485 in q.js: fallback === void 0 replaced with fallback === null
Mutant 486 in q.js: inspect === void 0 replaced with inspect !== undefined
Mutant 487 in q.js: inspect === void 0 replaced with inspect && inspect !== Object.prototype.inspect
Mutant 488 in q.js: inspect === void 0 replaced with typeof inspect === "function"
Mutant 489 in q.js: object_create replaced with null
Mutant 490 in q.js: Promise.prototype replaced with Object.create(null)
Mutant 491 in q.js: Promise.prototype replaced with {}
Mutant 492 in q.js: Promise.prototype replaced with function () {}
Mutant 493 in q.js: descriptor[op] replaced with descriptor['op']
Mutant 494 in q.js: descriptor[op].apply replaced with descriptor[op].call
Mutant 495 in q.js: descriptor[op].apply replaced with descriptor.op
Mutant 496 in q.js: args replaced with []
Mutant 497 in q.js: args replaced with null
Mutant 498 in q.js: args replaced with {
  foo: 'bar'
}
Mutant 499 in q.js: fallback.call(promise, op, args) replaced with fallback.call([])
Mutant 500 in q.js: fallback.call(promise, op, args) replaced with fallback.call(null)
Mutant 501 in q.js: fallback.call(promise, op, args) replaced with fallback.call(function () {})
Mutant 502 in q.js: fallback.call replaced with fallback
Mutant 503 in q.js: fallback.call replaced with fallback.apply
Mutant 504 in q.js: op replaced with "notAnOp"
Mutant 505 in q.js: op replaced with 123
Mutant 506 in q.js: op replaced with promise
Mutant 507 in q.js: args replaced with []
Mutant 508 in q.js: args replaced with null
Mutant 509 in q.js: args replaced with {
  then: function () {}
}
Mutant 510 in q.js: exception replaced with new Error("Buggy error message")
Mutant 511 in q.js: exception replaced with null
Mutant 512 in q.js: exception replaced with {}
Mutant 513 in q.js: result replaced with null
Mutant 514 in q.js: result replaced with 42
Mutant 515 in q.js: result replaced with deferred.resolve
Mutant 516 in q.js: inspect replaced with function () {
  return {};
}
Mutant 517 in q.js: inspect replaced with null
Mutant 518 in q.js: inspect replaced with {}
Mutant 519 in q.js: inspected.state === "rejected" replaced with inspected.state !== "fulfilled"
Mutant 520 in q.js: inspected.state === "rejected" replaced with inspected.reason
Mutant 521 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 522 in q.js: inspect replaced with null
Mutant 523 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "fulfilled"
Mutant 524 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled" || inspected.state === "rejected"
Mutant 525 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "settled"
Mutant 526 in q.js: defer replaced with {}
Mutant 527 in q.js: fulfilled replaced with 1 + fulfilled
Mutant 528 in q.js: value replaced with null
Mutant 529 in q.js: value replaced with new Promise(function () {})
Mutant 530 in q.js: value replaced with Promise.resolve()
Mutant 531 in q.js: reject replaced with null
Mutant 532 in q.js: exception replaced with new Error("Buggy replacement")
Mutant 533 in q.js: exception replaced with {}
Mutant 534 in q.js: exception replaced with null
Mutant 535 in q.js: typeof rejected === "function" replaced with true
Mutant 536 in q.js: typeof rejected === "function" replaced with 1 < 2
Mutant 537 in q.js: typeof rejected === "function" replaced with typeof rejected !== "function"
Mutant 538 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(new Error())
Mutant 539 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(self)
Mutant 540 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(null)
Mutant 541 in q.js: exception replaced with new Error('New error message')
Mutant 542 in q.js: exception replaced with {}
Mutant 543 in q.js: exception replaced with Q.reject('Rejection message')
Mutant 544 in q.js: exception replaced with new Error("Buggy error")
Mutant 545 in q.js: exception replaced with {}
Mutant 546 in q.js: exception replaced with null
Mutant 547 in q.js: reject replaced with Promise.reject
Mutant 548 in q.js: reject replaced with Q.reject
Mutant 549 in q.js: newException replaced with value
Mutant 550 in q.js: newException replaced with null
Mutant 551 in q.js: newException replaced with Promise.resolve()
Mutant 552 in q.js: exception replaced with new Error("New error message")
Mutant 553 in q.js: exception replaced with null
Mutant 554 in q.js: value replaced with null
Mutant 555 in q.js: value replaced with value + 1
Mutant 556 in q.js: value replaced with this.value
Mutant 557 in q.js: done replaced with true
Mutant 558 in q.js: done replaced with 1 === 1
Mutant 559 in q.js: done replaced with void 0
Mutant 560 in q.js: deferred.resolve replaced with deferred.reject
Mutant 561 in q.js: deferred.resolve replaced with deferred.promise.resolve
Mutant 562 in q.js: deferred.resolve replaced with deferred.notify
Mutant 563 in q.js: _fulfilled(value) replaced with null
Mutant 564 in q.js: _fulfilled(value) replaced with 42
Mutant 565 in q.js: _fulfilled(value) replaced with this.inspect()
Mutant 566 in q.js: _fulfilled replaced with _rejected
Mutant 567 in q.js: value replaced with {}
Mutant 568 in q.js: value replaced with Promise.resolve()
Mutant 569 in q.js: done replaced with false
Mutant 570 in q.js: done replaced with true
Mutant 571 in q.js: deferred.resolve replaced with deferred.reject
Mutant 572 in q.js: deferred.resolve replaced with deferred.notify
Mutant 573 in q.js: _rejected(exception) replaced with Promise.reject(exception)
Mutant 574 in q.js: _rejected(exception) replaced with _rejected(null)
Mutant 575 in q.js: _rejected(exception) replaced with deferred.resolve(exception)
Mutant 576 in q.js: exception replaced with new Error('Intentionally introduced error')
Mutant 577 in q.js: exception replaced with exception.message
Mutant 578 in q.js: value replaced with 2 * value
Mutant 579 in q.js: value replaced with null
Mutant 580 in q.js: value replaced with promise.value
Mutant 581 in q.js: Q.onerror replaced with () => {}
Mutant 582 in q.js: Q.onerror replaced with null
Mutant 583 in q.js: Q.onerror replaced with console.log
Mutant 584 in q.js: Q.onerror replaced with console.error
Mutant 585 in q.js: Q.onerror replaced with null
Mutant 586 in q.js: e replaced with new Error()
Mutant 587 in q.js: e replaced with null
Mutant 588 in q.js: e replaced with Promise.reject('An error occurred')
Mutant 589 in q.js: !threw replaced with true
Mutant 590 in q.js: !threw replaced with false
Mutant 591 in q.js: !threw replaced with threw === false
Mutant 592 in q.js: deferred.notify replaced with deferred.resolve
Mutant 593 in q.js: deferred.notify replaced with deferred.reject
Mutant 594 in q.js: deferred.notify replaced with console.log
Mutant 595 in q.js: newValue replaced with null
Mutant 596 in q.js: newValue replaced with newValue + 1
Mutant 597 in q.js: newValue replaced with Q(newValue)
Mutant 598 in q.js: Q(promise).tap replaced with promise.constructor.prototype.tap
Mutant 599 in q.js: Q replaced with Promise.resolve
Mutant 600 in q.js: Q replaced with Q.when
Mutant 601 in q.js: Q replaced with Promise.reject
Mutant 602 in q.js: promise replaced with Promise.resolve()
Mutant 603 in q.js: promise replaced with Q.reject(new Error('Replacement error'))
Mutant 604 in q.js: callback replaced with () => callback
Mutant 605 in q.js: callback replaced with callback.bind(this)
Mutant 606 in q.js: callback.fcall replaced with callback
not replacing callback.fcall with callback
not replacing callback.fcall with callback
Mutant 607 in q.js: value replaced with null
Mutant 608 in q.js: value replaced with value + 1
Mutant 609 in q.js: value replaced with Promise.resolve()
Mutant 610 in q.js: value replaced with Q.reject(new Error('Replacement error'))
Mutant 611 in q.js: value replaced with value + 1
Mutant 612 in q.js: value replaced with null
Mutant 613 in q.js: value replaced with value + 1
Mutant 614 in q.js: value replaced with this.value
Mutant 615 in q.js: fulfilled replaced with () => fulfilled
Mutant 616 in q.js: fulfilled replaced with Math.max
Mutant 617 in q.js: fulfilled replaced with deferred.resolve
Mutant 618 in q.js: rejected replaced with function () {
  return rejected.apply(this, arguments);
}
Mutant 619 in q.js: rejected replaced with function () {
  return rejected(exception, self);
}
Mutant 620 in q.js: progressed replaced with function () {
  return progressed.apply(this, arguments);
}
Mutant 621 in q.js: progressed replaced with progressed.bind(null)
Mutant 622 in q.js: progressed replaced with Math.max
Mutant 623 in q.js: this.then replaced with this.catch
Mutant 624 in q.js: function () {
  return value;
} replaced with function () {
  throw value;
}
Mutant 625 in q.js: function () {
  return value;
} replaced with function () {
  return;
}
Mutant 626 in q.js: function () {
  return value;
} replaced with function () {
  value = null;
  return value;
}
Mutant 627 in q.js: promise replaced with Promise.resolve()
Mutant 628 in q.js: promise replaced with Q.reject('An error occurred')
Mutant 629 in q.js: value replaced with null
Mutant 630 in q.js: function () {
  throw reason;
} replaced with () => {/* empty arrow function */}
Mutant 631 in q.js: function () {
  throw reason;
} replaced with () => {
  return reason;
}
Mutant 632 in q.js: function () {
  throw reason;
} replaced with () => {
  throw new Error(reason);
}
Mutant 633 in q.js: Q(promise).thenReject replaced with Promise.reject
Mutant 634 in q.js: promise replaced with Promise.resolve()
Mutant 635 in q.js: promise replaced with Q.reject('An error')
Mutant 636 in q.js: reason replaced with new Error('Replacement error')
Mutant 637 in q.js: reason replaced with null
Mutant 638 in q.js: reason replaced with reason.message
Mutant 639 in q.js: isPromise(value) replaced with value instanceof Object
Mutant 640 in q.js: isPromise(value) replaced with value.constructor.name === 'Promise'
Mutant 641 in q.js: isPromise(value) replaced with typeof value.then === 'undefined'
Mutant 642 in q.js: isPromise replaced with value && value.then
Mutant 643 in q.js: value replaced with null
Mutant 644 in q.js: value replaced with value + 1
Mutant 645 in q.js: value replaced with value.then(function () {
  return value;
})
Mutant 646 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 647 in q.js: inspected.state === "fulfilled" replaced with inspected.value === null
Mutant 648 in q.js: inspected.state === "fulfilled" replaced with inspected.hasOwnProperty("value")
Mutant 649 in q.js: isObject replaced with typeof object === 'object'
Mutant 650 in q.js: object replaced with null
Mutant 651 in q.js: object replaced with this
Mutant 652 in q.js: object replaced with Promise.resolve(object)
Mutant 653 in q.js: isPromise replaced with typeof value === 'object' && value !== null && typeof value.then === 'function'
Mutant 654 in q.js: isPromise replaced with value instanceof Promise || value.constructor.name === 'Promise'
Mutant 655 in q.js: object replaced with false
Mutant 656 in q.js: object replaced with null
Mutant 657 in q.js: object replaced with new Proxy(object, {})
Mutant 658 in q.js: object.inspect replaced with global.inspect
not replacing object.inspect with global.inspect
Mutant 659 in q.js: this.inspect replaced with {}
not replacing this.inspect with {}
Mutant 660 in q.js: object replaced with true
Mutant 661 in q.js: object replaced with null
Mutant 662 in q.js: object replaced with this
Mutant 663 in q.js: object.inspect replaced with null.inspect
not replacing object.inspect with null.inspect
Mutant 664 in q.js: isPromise replaced with false
Mutant 665 in q.js: isPromise replaced with 0
Mutant 666 in q.js: isPromise replaced with null
Mutant 667 in q.js: object replaced with false
Mutant 668 in q.js: object replaced with null
Mutant 669 in q.js: object replaced with this
Mutant 670 in q.js: object.inspect replaced with false
Mutant 671 in q.js: object.inspect replaced with null
not replacing object.inspect with false
not replacing object.inspect with null
Mutant 672 in q.js: !trackUnhandledRejections replaced with false
Mutant 673 in q.js: !trackUnhandledRejections replaced with 0
Mutant 674 in q.js: !trackUnhandledRejections replaced with null
Mutant 675 in q.js: !trackUnhandledRejections replaced with false
Mutant 676 in q.js: !trackUnhandledRejections replaced with null
Mutant 677 in q.js: !trackUnhandledRejections replaced with 0
Mutant 678 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 679 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, Q.reject(reason))
Mutant 680 in q.js: array_indexOf replaced with unhandledRejections.length
Mutant 681 in q.js: unhandledRejections replaced with []
Mutant 682 in q.js: unhandledRejections replaced with null
Mutant 683 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 684 in q.js: promise replaced with null
Mutant 685 in q.js: promise replaced with Promise.resolve()
Mutant 686 in q.js: promise replaced with {
  then: function () {}
}
Mutant 687 in q.js: "unhandledRejection" replaced with "unhandledrejection"
Mutant 688 in q.js: reason replaced with null
Mutant 689 in q.js: reason replaced with {}
Mutant 690 in q.js: reason replaced with unhandledReasons[at]
Mutant 691 in q.js: promise replaced with null
Mutant 692 in q.js: promise replaced with {}
Mutant 693 in q.js: promise replaced with () => {}
Mutant 694 in q.js: reportedUnhandledRejections.push replaced with []
Mutant 695 in q.js: reportedUnhandledRejections.push replaced with null
Mutant 696 in q.js: reportedUnhandledRejections.push replaced with 123
Mutant 697 in q.js: promise replaced with null
Mutant 698 in q.js: promise replaced with {}
Mutant 699 in q.js: promise replaced with unhandledReasons
Mutant 700 in q.js: unhandledRejections.push replaced with []
Mutant 701 in q.js: promise replaced with null
Mutant 702 in q.js: promise replaced with {}
Mutant 703 in q.js: promise replaced with Promise.resolve()
Mutant 704 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack
Mutant 705 in q.js: reason && typeof reason.stack !== "undefined" replaced with typeof reason !== "undefined" && reason.stack
Mutant 706 in q.js: reason.stack replaced with "reason stack"
Mutant 707 in q.js: unhandledReasons.push replaced with unhandledReasons.unshift
Mutant 708 in q.js: unhandledReasons.push replaced with console.error
Mutant 709 in q.js: "(no stack) " + reason replaced with "<no stack>"
Mutant 710 in q.js: !trackUnhandledRejections replaced with false
Mutant 711 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 712 in q.js: !trackUnhandledRejections replaced with !global.trackUnhandledRejections
Mutant 713 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf([], promise)
Mutant 714 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, 'constant')
Mutant 715 in q.js: array_indexOf replaced with unhandledRejections.indexOf
Mutant 716 in q.js: unhandledRejections replaced with []
Mutant 717 in q.js: unhandledRejections replaced with {
  promise: []
}
Mutant 718 in q.js: unhandledRejections replaced with unhandledPromises
Mutant 719 in q.js: promise replaced with null
Mutant 720 in q.js: promise replaced with 123
Mutant 721 in q.js: promise replaced with {}
Mutant 722 in q.js: at !== -1 replaced with at > -1
Mutant 723 in q.js: at !== -1 replaced with unhandledRejections.indexOf(promise) !== -1
Mutant 724 in q.js: at !== -1 replaced with typeof at !== "number"
Mutant 725 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf([])
Mutant 726 in q.js: array_indexOf replaced with unhandledRejections.indexOf
Mutant 727 in q.js: array_indexOf replaced with ['unhandledRejections'].indexOf
Mutant 728 in q.js: reportedUnhandledRejections replaced with []
Mutant 729 in q.js: reportedUnhandledRejections replaced with null
Mutant 730 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 731 in q.js: promise replaced with null
Mutant 732 in q.js: promise replaced with {}
Mutant 733 in q.js: promise replaced with []
Mutant 734 in q.js: atReport !== -1 replaced with true
Mutant 735 in q.js: atReport !== -1 replaced with atReport === unhandledRejections.length
Mutant 736 in q.js: atReport !== -1 replaced with atReport > -1
Mutant 737 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", "some random string", promise)
Mutant 738 in q.js: "rejectionHandled" replaced with false
Mutant 739 in q.js: "rejectionHandled" replaced with null
Mutant 740 in q.js: "rejectionHandled" replaced with unhandledReasons[at]
Mutant 741 in q.js: unhandledReasons[at] replaced with null
Mutant 742 in q.js: unhandledReasons[at] replaced with {}
Mutant 743 in q.js: promise replaced with null
Mutant 744 in q.js: promise replaced with {}
Mutant 745 in q.js: promise replaced with unhandledReasons[at]
Mutant 746 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport.length)
Mutant 747 in q.js: reportedUnhandledRejections.splice replaced with reportedUnhandledRejections.length--
Mutant 748 in q.js: atReport replaced with atReport.length
Mutant 749 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(unhandledRejections.length)
Mutant 750 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(unhandledReasons.length)
Mutant 751 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(0)
Mutant 752 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(Math.floor(Math.random() * unhandledReasons.length))
Mutant 753 in q.js: at replaced with unhandledReasons.length
Mutant 754 in q.js: at replaced with null
Mutant 755 in q.js: at replaced with 0
Mutant 756 in q.js: unhandledReasons.slice replaced with unhandledReasons.concat
Mutant 757 in q.js: rejected replaced with false
Mutant 758 in q.js: rejected replaced with 0
Mutant 759 in q.js: rejected replaced with undefined
Mutant 760 in q.js: this replaced with null
Mutant 761 in q.js: this replaced with {}
Mutant 762 in q.js: this replaced with Q
Mutant 763 in q.js: rejected replaced with false
Mutant 764 in q.js: reason replaced with null
Mutant 765 in q.js: reason replaced with true
Mutant 766 in q.js: trackRejection(rejection, reason) replaced with trackRejection(null)
Mutant 767 in q.js: trackRejection(rejection, reason) replaced with trackRejection([])
Mutant 768 in q.js: reason replaced with null
Mutant 769 in q.js: reason replaced with true
Mutant 770 in q.js: reason replaced with {}
Mutant 771 in q.js: name === null || name === void 0 replaced with name === null || name === undefined
Mutant 772 in q.js: name === null || name === void 0 replaced with name !== null && name !== 'undefined'
Mutant 773 in q.js: name === null || name === void 0 replaced with this.hasOwnProperty('name')
Mutant 774 in q.js: value.apply(void 0, args) replaced with value.apply(thisp, [args])
Mutant 775 in q.js: value.apply(void 0, args) replaced with value.apply(thisp, arguments)
Mutant 776 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 777 in q.js: void 0 replaced with null
Mutant 778 in q.js: void 0 replaced with 5
Mutant 779 in q.js: void 0 replaced with {}
Mutant 780 in q.js: args replaced with []
Mutant 781 in q.js: args replaced with null
Mutant 782 in q.js: args replaced with {
  length: 0
}
Mutant 783 in q.js: value[name].apply(value, args) replaced with value[name].apply(null)
Mutant 784 in q.js: value[name].apply(value, args) replaced with value[name].apply([])
Mutant 785 in q.js: value[name].apply(value, args) replaced with value[name].apply({})
Mutant 786 in q.js: value[name].apply replaced with value.apply
Mutant 787 in q.js: value[name].apply replaced with window.apply
Mutant 788 in q.js: value[name].apply replaced with Math.apply
Mutant 789 in q.js: value replaced with thisp
Mutant 790 in q.js: value replaced with null
Mutant 791 in q.js: value replaced with Math.random()
Mutant 792 in q.js: args replaced with []
Mutant 793 in q.js: args replaced with null
Mutant 794 in q.js: args replaced with function () {
  return;
}
Mutant 795 in q.js: value.apply(thisp, args) replaced with value.apply(null)
Mutant 796 in q.js: value.apply(thisp, args) replaced with value.apply(123)
Mutant 797 in q.js: value.apply(thisp, args) replaced with value.apply(window)
Mutant 798 in q.js: value.apply replaced with value.call
Mutant 799 in q.js: value.apply replaced with value.bind
Mutant 800 in q.js: thisp replaced with null
Mutant 801 in q.js: thisp replaced with []
Mutant 802 in q.js: thisp replaced with {}
Mutant 803 in q.js: args replaced with []
Mutant 804 in q.js: args replaced with null
Mutant 805 in q.js: args replaced with arguments
Mutant 806 in q.js: object_keys replaced with Object.keys
Mutant 807 in q.js: value replaced with null
Mutant 808 in q.js: value replaced with {}
Mutant 809 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve(42))
Mutant 810 in q.js: promise.then replaced with promise.catch
Mutant 811 in q.js: deferred.reject replaced with deferred.resolve
Mutant 812 in q.js: deferred.reject replaced with function () {
  throw new Error('Replacement error');
}
Mutant 813 in q.js: deferred.reject replaced with deferred.notify
Mutant 814 in q.js: deferred.notify replaced with deferred.resolve
Mutant 815 in q.js: deferred.reject replaced with deferred.resolve
Mutant 816 in q.js: deferred.reject replaced with deferred.notify
Mutant 817 in q.js: exception replaced with new Error('Buggy replacement')
Mutant 818 in q.js: exception replaced with null
Mutant 819 in q.js: exception replaced with this
Mutant 820 in q.js: dispatch(object, op, args) replaced with dispatch(null, op, args)
Mutant 821 in q.js: dispatch replaced with null
Mutant 822 in q.js: object replaced with null
Mutant 823 in q.js: object replaced with function () {}
Mutant 824 in q.js: object replaced with this
Mutant 825 in q.js: args replaced with null
Mutant 826 in q.js: Q(object).inspect replaced with null
Mutant 827 in q.js: Q(object).inspect replaced with {}
Mutant 828 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(() => fulfilled(value))
Mutant 829 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(null)
Mutant 830 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(() => rejected('An error occurred'))
Mutant 831 in q.js: value replaced with 42
Mutant 832 in q.js: value replaced with this
Mutant 833 in q.js: fulfilled replaced with function () {
  throw new Error('Buggy replacement');
}
Mutant 834 in q.js: fulfilled replaced with null
Mutant 835 in q.js: fulfilled replaced with [1, 2, 3]
Mutant 836 in q.js: rejected replaced with function () {}
Mutant 837 in q.js: rejected replaced with null
Mutant 838 in q.js: rejected replaced with this
Mutant 839 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null, array)
Mutant 840 in q.js: void 0 replaced with null
Mutant 841 in q.js: void 0 replaced with true
Mutant 842 in q.js: void 0 replaced with []
Mutant 843 in q.js: array replaced with []
Mutant 844 in q.js: typeof StopIteration === "undefined" replaced with generator.constructor.name === "GeneratorFunction"
Mutant 845 in q.js: typeof StopIteration === "undefined" replaced with generator.constructor.prototype.constructor.name === "GeneratorFunction"
Mutant 846 in q.js: typeof StopIteration === "undefined" replaced with generator.constructor.toString().indexOf("GeneratorFunction") > -1
Mutant 847 in q.js: generator[verb] replaced with generator.verb
Mutant 848 in q.js: generator[verb] replaced with generator['next']
Mutant 849 in q.js: arg replaced with null
Mutant 850 in q.js: arg replaced with 1
Mutant 851 in q.js: reject replaced with Promise.reject
Mutant 852 in q.js: reject replaced with deferred.reject
Mutant 853 in q.js: exception replaced with new Error('Buggy error')
Mutant 854 in q.js: exception replaced with null
Mutant 855 in q.js: exception replaced with true
Mutant 856 in q.js: result.done replaced with Object.prototype.toString.call(result.value) === "[object Promise]"
Mutant 857 in q.js: result.done replaced with result.value && result.value.constructor === Promise
Mutant 858 in q.js: result.done replaced with typeof result.value.then === "function"
Mutant 859 in q.js: result.value replaced with null
Mutant 860 in q.js: result.value replaced with 1
Mutant 861 in q.js: result.value replaced with result.value + 1
Mutant 862 in q.js: when(result.value, callback, errback) replaced with when(null, callback, errback)
Mutant 863 in q.js: result.value replaced with null
Mutant 864 in q.js: result.value replaced with result['value']
Mutant 865 in q.js: result.value replaced with function () {
  return result.value;
}()
Mutant 866 in q.js: callback replaced with function () {}
Mutant 867 in q.js: callback replaced with callback.bind(this)
Mutant 868 in q.js: callback replaced with callback(result.value)
Mutant 869 in q.js: errback replaced with function () {}
Mutant 870 in q.js: errback replaced with 5
Mutant 871 in q.js: errback replaced with deferred.resolve
Mutant 872 in q.js: generator[verb] replaced with generator.verb
Mutant 873 in q.js: generator[verb] replaced with generator["" + verb]
Mutant 874 in q.js: arg replaced with null
Mutant 875 in q.js: arg replaced with undefined
Mutant 876 in q.js: arg replaced with 123
Mutant 877 in q.js: isStopIteration(exception) replaced with exception.message === "Generator completed"
Mutant 878 in q.js: isStopIteration(exception) replaced with true
Mutant 879 in q.js: isStopIteration(exception) replaced with exception instanceof Error
Mutant 880 in q.js: isStopIteration replaced with {}
Mutant 881 in q.js: exception replaced with new Error('generator error')
Mutant 882 in q.js: exception replaced with {
  message: 'generator error'
}
Mutant 883 in q.js: exception replaced with null
Mutant 884 in q.js: exception.value replaced with null
Mutant 885 in q.js: exception.value replaced with false
Mutant 886 in q.js: exception.value replaced with new Error('Dummy error')
Mutant 887 in q.js: exception replaced with new Error('Generator Error')
Mutant 888 in q.js: exception replaced with {}
Mutant 889 in q.js: exception replaced with null
Mutant 890 in q.js: when(result, callback, errback) replaced with when([])
Mutant 891 in q.js: when(result, callback, errback) replaced with when(42)
Mutant 892 in q.js: when(result, callback, errback) replaced with when(Q)
Mutant 893 in q.js: when replaced with Promise.resolve
Mutant 894 in q.js: result replaced with null
Mutant 895 in q.js: result replaced with []
Mutant 896 in q.js: result replaced with {}
Mutant 897 in q.js: callback replaced with callback.bind(this)
Mutant 898 in q.js: callback replaced with function () {
  callback();
}
Mutant 899 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null, arguments)
Mutant 900 in q.js: makeGenerator.apply replaced with Function.prototype.apply.call
Mutant 901 in q.js: this replaced with null
Mutant 902 in q.js: this replaced with window
Mutant 903 in q.js: this replaced with Math.random()
Mutant 904 in q.js: arguments replaced with Array.from(arguments)
Mutant 905 in q.js: arguments replaced with [...arguments]
Mutant 906 in q.js: arguments replaced with Object.assign([], arguments)
Mutant 907 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "then")
Mutant 908 in q.js: continuer replaced with this
Mutant 909 in q.js: continuer replaced with window
Mutant 910 in q.js: continuer replaced with function () {
  return continuer;
}
Mutant 911 in q.js: "next" replaced with "next".toUpperCase()
Mutant 912 in q.js: "next" replaced with Symbol("next")
Mutant 913 in q.js: "next" replaced with 1
Mutant 914 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "throw", undefined)
Mutant 915 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "someInvalidOperation")
Mutant 916 in q.js: continuer.bind replaced with null
Mutant 917 in q.js: continuer replaced with function () {}
Mutant 918 in q.js: continuer replaced with 123
Mutant 919 in q.js: "throw" replaced with "return"
Mutant 920 in q.js: "throw" replaced with "continue"
Mutant 921 in q.js: "throw" replaced with "break"
Mutant 922 in q.js: Q.async replaced with Promise.resolve
Mutant 923 in q.js: Q.async replaced with Math.random
Mutant 924 in q.js: Q.async replaced with []
not replacing Q.async with Promise.resolve
not replacing Q.async with Math.random
not replacing Q.async with []
Mutant 925 in q.js: makeGenerator replaced with function* () {}
Mutant 926 in q.js: makeGenerator replaced with 42
Mutant 927 in q.js: all replaced with null
Mutant 928 in q.js: arguments replaced with []
Mutant 929 in q.js: arguments replaced with null
Mutant 930 in q.js: arguments replaced with 1
Mutant 931 in q.js: callback.apply(self, args) replaced with callback.apply(this)
Mutant 932 in q.js: callback.apply(self, args) replaced with callback.apply(globalThis)
Mutant 933 in q.js: callback.apply(self, args) replaced with callback.apply(null)
Mutant 934 in q.js: callback.apply replaced with callback.call
Mutant 935 in q.js: callback.apply replaced with Reflect.apply
Mutant 936 in q.js: callback.apply replaced with Function.prototype.apply
Mutant 937 in q.js: self replaced with this
Mutant 938 in q.js: args replaced with []
Mutant 939 in q.js: args replaced with null
Mutant 940 in q.js: args replaced with {
  foo: 'bar'
}
Mutant 941 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(null)
Mutant 942 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch([])
Mutant 943 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch({
  op: 1,
  args: [2, 3]
})
Mutant 944 in q.js: Q(object).dispatch replaced with Object.dispatch
Mutant 945 in q.js: Q replaced with Promise.resolve
Mutant 946 in q.js: object replaced with 123
Mutant 947 in q.js: object replaced with Promise.resolve()
Mutant 948 in q.js: op replaced with 1
Mutant 949 in q.js: op replaced with null
Mutant 950 in q.js: args replaced with null
Mutant 951 in q.js: args replaced with []
Mutant 952 in q.js: args replaced with {
  foo: 'bar'
}
Mutant 953 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject)
Mutant 954 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.notify)
Mutant 955 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 956 in q.js: self.promiseDispatch replaced with deferred.promise
Mutant 957 in q.js: self.promiseDispatch replaced with self.promise.dispatch
Mutant 958 in q.js: op replaced with null
Mutant 959 in q.js: args replaced with null
Mutant 960 in q.js: args replaced with []
Mutant 961 in q.js: args replaced with {
  length: 0
}
Mutant 962 in q.js: Q replaced with null
Mutant 963 in q.js: Q replaced with {}
Mutant 964 in q.js: object replaced with null
Mutant 965 in q.js: object replaced with []
Mutant 966 in q.js: object replaced with function () {}
Mutant 967 in q.js: "get" replaced with "GET"
Mutant 968 in q.js: "get" replaced with Symbol("get")
Mutant 969 in q.js: "get" replaced with () => "get"
Mutant 970 in q.js: [key] replaced with null
Mutant 971 in q.js: [key] replaced with {}
Mutant 972 in q.js: [key] replaced with function () {/* empty function */}
Mutant 973 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("GET", [key])
Mutant 974 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("get", [])
Mutant 975 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("get", {
  key: 'value'
})
Mutant 976 in q.js: this.dispatch replaced with this.promiseDispatch
Mutant 977 in q.js: this.dispatch replaced with this.get
Mutant 978 in q.js: "get" replaced with "GET"
Mutant 979 in q.js: "get" replaced with symbol("get")
Mutant 980 in q.js: [key] replaced with this
Mutant 981 in q.js: [key] replaced with null
Mutant 982 in q.js: [key] replaced with {}[key]
Mutant 983 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch(["setProperty", key, value])
Mutant 984 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch(["set", value, key])
Mutant 985 in q.js: Q(object).dispatch replaced with Object.prototype.dispatch
Mutant 986 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 987 in q.js: Q(object).dispatch replaced with Math.dispatch
Mutant 988 in q.js: object replaced with null
Mutant 989 in q.js: [key, value] replaced with {}
Mutant 990 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch([])
Mutant 991 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch(this)
Mutant 992 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch(Math.random())
Mutant 993 in q.js: "set" replaced with "__set__"
Mutant 994 in q.js: "set" replaced with null
Mutant 995 in q.js: "set" replaced with this.del
Mutant 996 in q.js: [key, value] replaced with []
Mutant 997 in q.js: [key, value] replaced with this
Mutant 998 in q.js: [key, value] replaced with null
Mutant 999 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch(["remove", key])
Mutant 1000 in q.js: Q replaced with null
Mutant 1001 in q.js: Q replaced with 5
Mutant 1002 in q.js: object replaced with null
Mutant 1003 in q.js: object replaced with []
Mutant 1004 in q.js: object replaced with function () {}
Mutant 1005 in q.js: [key] replaced with []
Mutant 1006 in q.js: [key] replaced with {}
Mutant 1007 in q.js: [key] replaced with null
Mutant 1008 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch(["remove", key])
Mutant 1009 in q.js: this.dispatch replaced with deferred.resolve
Mutant 1010 in q.js: this.dispatch replaced with deferred.promise
Mutant 1011 in q.js: "delete" replaced with null
Mutant 1012 in q.js: "delete" replaced with 'use strict'
Mutant 1013 in q.js: "delete" replaced with () => {}
Mutant 1014 in q.js: [key] replaced with this
Mutant 1015 in q.js: [key] replaced with null
Mutant 1016 in q.js: [key] replaced with Promise.resolve()
Mutant 1017 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("Post", [name, args])
Mutant 1018 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 1019 in q.js: Q(object).dispatch replaced with Q.dispatch
Mutant 1020 in q.js: Q replaced with null
Mutant 1021 in q.js: Q replaced with Q.when
Mutant 1022 in q.js: object replaced with null
Mutant 1023 in q.js: object replaced with []
Mutant 1024 in q.js: object replaced with function () {}
Mutant 1025 in q.js: "post" replaced with "POST"
Mutant 1026 in q.js: [name, args] replaced with []
Mutant 1027 in q.js: [name, args] replaced with null
Mutant 1028 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, eval(args)])
Mutant 1029 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [window[name], args])
Mutant 1030 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("POST", [name, args])
Mutant 1031 in q.js: "post" replaced with "POST"
Mutant 1032 in q.js: "post" replaced with null
Mutant 1033 in q.js: "post" replaced with function () {}
Mutant 1034 in q.js: [name, args] replaced with []
Mutant 1035 in q.js: [name, args] replaced with null
Mutant 1036 in q.js: [name, args] replaced with this
Mutant 1037 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, arguments])
Mutant 1038 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, 123])
Mutant 1039 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("anotherMethod", [name, array_slice(arguments, 1)])
Mutant 1040 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 1041 in q.js: Q replaced with {}['dispatch']
Mutant 1042 in q.js: object replaced with null
Mutant 1043 in q.js: object replaced with true
Mutant 1044 in q.js: object replaced with function () {
  return "I am a buggy function";
}
Mutant 1045 in q.js: "post" replaced with "POST"
Mutant 1046 in q.js: [name, array_slice(arguments, 2)] replaced with [name, Array.prototype.slice.call(arguments, 1)]
Mutant 1047 in q.js: [name, array_slice(arguments, 2)] replaced with [name, arguments.slice(1)]
Mutant 1048 in q.js: [name, array_slice(arguments, 2)] replaced with [name, [].slice.call(arguments, 1)]
Mutant 1049 in q.js: array_slice(arguments, 2) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1050 in q.js: array_slice replaced with arguments.callee.caller.arguments
Mutant 1051 in q.js: array_slice replaced with null
Mutant 1052 in q.js: arguments replaced with null
Mutant 1053 in q.js: arguments replaced with function () {
  return 42;
}
Mutant 1054 in q.js: 2 replaced with null
Mutant 1055 in q.js: 2 replaced with this
Mutant 1056 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("POST", [name, array_slice(arguments, 1)])
Mutant 1057 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, 123])
Mutant 1058 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [null, array_slice(arguments, 1)])
Mutant 1059 in q.js: "post" replaced with "POST"
Mutant 1060 in q.js: "post" replaced with function () {}
Mutant 1061 in q.js: [name, array_slice(arguments, 1)] replaced with null
Mutant 1062 in q.js: [name, array_slice(arguments, 1)] replaced with []
Mutant 1063 in q.js: array_slice(arguments, 1) replaced with array_slice([])
Mutant 1064 in q.js: array_slice(arguments, 1) replaced with array_slice(this)
Mutant 1065 in q.js: array_slice(arguments, 1) replaced with array_slice(function () {})
Mutant 1066 in q.js: 1 replaced with arguments.length
Mutant 1067 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [args])
Mutant 1068 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [1, args])
Mutant 1069 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("spread", [args])
Mutant 1070 in q.js: object replaced with null
Mutant 1071 in q.js: object replaced with 123
Mutant 1072 in q.js: object replaced with {}
Mutant 1073 in q.js: [void 0, args] replaced with args
Mutant 1074 in q.js: [void 0, args] replaced with [args]
Mutant 1075 in q.js: [void 0, args] replaced with null, args
Mutant 1076 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("spy", [void 0, args])
Mutant 1077 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [null, args])
Mutant 1078 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [args, []])
Mutant 1079 in q.js: [void 0, args] replaced with args
Mutant 1080 in q.js: [void 0, args] replaced with [this, args]
Mutant 1081 in q.js: [void 0, args] replaced with [[], args]
Mutant 1082 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("call", [array_slice(arguments, 1)])
Mutant 1083 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [null, array_slice(arguments, 1)])
Mutant 1084 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [, array_slice(arguments, 1)])
Mutant 1085 in q.js: Q(object).dispatch replaced with Object.prototype.dispatch
Mutant 1086 in q.js: Q(object).dispatch replaced with Math.random
Mutant 1087 in q.js: Q(object).dispatch replaced with Q.all
Mutant 1088 in q.js: Q replaced with {}
Mutant 1089 in q.js: object replaced with 5
Mutant 1090 in q.js: object replaced with () => {}
Mutant 1091 in q.js: "apply" replaced with "apPLY"
Mutant 1092 in q.js: "apply" replaced with "applyFn"
Mutant 1093 in q.js: "apply" replaced with this.apply
Mutant 1094 in q.js: [void 0, array_slice(arguments, 1)] replaced with [null, array_slice(arguments, 1)]
Mutant 1095 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments))
Mutant 1096 in q.js: array_slice replaced with [1, 2, 3]
Mutant 1097 in q.js: arguments replaced with Array.prototype.slice.call(arguments, 1)
Mutant 1098 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1099 in q.js: arguments replaced with arguments.slice(1)
Mutant 1100 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("spy", [void 0, array_slice(arguments)])
Mutant 1101 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch(["apply", array_slice(arguments)])
Mutant 1102 in q.js: "apply" replaced with "apPLY"
Mutant 1103 in q.js: "apply" replaced with "applyShim"
Mutant 1104 in q.js: "apply" replaced with "splice"
Mutant 1105 in q.js: [void 0, array_slice(arguments)] replaced with []
Mutant 1106 in q.js: [void 0, array_slice(arguments)] replaced with arguments
Mutant 1107 in q.js: [void 0, array_slice(arguments)] replaced with this
Mutant 1108 in q.js: array_slice replaced with Array.prototype.slice
Mutant 1109 in q.js: array_slice replaced with null
Mutant 1110 in q.js: arguments replaced with 123
Mutant 1111 in q.js: object replaced with null
Mutant 1112 in q.js: object replaced with this
Mutant 1113 in q.js: object replaced with Promise.resolve()
Mutant 1114 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 2))
Mutant 1115 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 2))
Mutant 1116 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(2))
Mutant 1117 in q.js: array_slice replaced with [].slice
Mutant 1118 in q.js: arguments replaced with Array.prototype.slice.call(arguments, 1)
Mutant 1119 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1120 in q.js: arguments replaced with arguments[0]
Mutant 1121 in q.js: args.concat replaced with []
Mutant 1122 in q.js: args.concat replaced with null
Mutant 1123 in q.js: args.concat replaced with this
Mutant 1124 in q.js: array_slice(arguments) replaced with []
Mutant 1125 in q.js: array_slice(arguments) replaced with null
Mutant 1126 in q.js: array_slice(arguments) replaced with [1, 2, 3]
Mutant 1127 in q.js: array_slice replaced with arguments.callee
Mutant 1128 in q.js: arguments replaced with {
  length: 0
}
Mutant 1129 in q.js: array_slice replaced with arguments
Mutant 1130 in q.js: array_slice replaced with [].slice
Mutant 1131 in q.js: arguments replaced with []
Mutant 1132 in q.js: arguments replaced with null
Mutant 1133 in q.js: arguments replaced with {
  length: 0
}
Mutant 1134 in q.js: args.concat replaced with []
Mutant 1135 in q.js: array_slice(arguments) replaced with []
Mutant 1136 in q.js: array_slice(arguments) replaced with this.arguments
Mutant 1137 in q.js: array_slice(arguments) replaced with arguments[0]
Mutant 1138 in q.js: array_slice replaced with arguments.callee
Mutant 1139 in q.js: array_slice replaced with null
Mutant 1140 in q.js: array_slice replaced with eval
Mutant 1141 in q.js: arguments replaced with null
Mutant 1142 in q.js: arguments replaced with 123
Mutant 1143 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1144 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", ["toString"])
Mutant 1145 in q.js: Q replaced with null
Mutant 1146 in q.js: object replaced with {}
Mutant 1147 in q.js: object replaced with null
Mutant 1148 in q.js: "keys" replaced with "nonexistentKey"
Mutant 1149 in q.js: [] replaced with Object.keys(this)
Mutant 1150 in q.js: [] replaced with null
Mutant 1151 in q.js: [] replaced with function () {
  return 42;
}
Mutant 1152 in q.js: this.dispatch("keys", []) replaced with this.dispatch("nonexistentMethod", [])
Mutant 1153 in q.js: "keys" replaced with "nonexistentKey"
Mutant 1154 in q.js: [] replaced with Object.keys(this)
Mutant 1155 in q.js: [] replaced with null
Mutant 1156 in q.js: [] replaced with function () {
  return 42;
}
Mutant 1157 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with snapshot.state === "pending"
Mutant 1158 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with isPromise(promise) && (snapshot = promise.inspect()).state === "rejected"
Mutant 1159 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with snapshot.value !== undefined
Mutant 1160 in q.js: isPromise replaced with typeof promise === 'object'
Mutant 1161 in q.js: isPromise replaced with promise instanceof Object
Mutant 1162 in q.js: isPromise replaced with true
Mutant 1163 in q.js: promise replaced with Promise.resolve()
Mutant 1164 in q.js: promise replaced with null
Mutant 1165 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1166 in q.js: promises replaced with null
Mutant 1167 in q.js: promises replaced with []
Mutant 1168 in q.js: promises replaced with promises.slice()
Mutant 1169 in q.js: {
  index: index,
  value: progress
} replaced with index
Mutant 1170 in q.js: {
  index: index,
  value: progress
} replaced with null
Mutant 1171 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: 'mutated'
}
Mutant 1172 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1173 in q.js: pendingCount === 0 replaced with false
Mutant 1174 in q.js: pendingCount === 0 replaced with promises.length === 0
Mutant 1175 in q.js: promises replaced with []
Mutant 1176 in q.js: promises replaced with null
Mutant 1177 in q.js: promises replaced with this
Mutant 1178 in q.js: this replaced with null
Mutant 1179 in q.js: this replaced with []
Mutant 1180 in q.js: this replaced with Promise.resolve()
Mutant 1181 in q.js: promises.length === 0 replaced with Object.prototype.toString.call(promises) === '[object Array]'
Mutant 1182 in q.js: promises.length === 0 replaced with promises instanceof Array
Mutant 1183 in q.js: promises.length === 0 replaced with Array.isArray(promises)
Mutant 1184 in q.js: Q.resolve replaced with Promise.resolve
Mutant 1185 in q.js: Q.resolve replaced with Q.reject
Mutant 1186 in q.js: Q.defer replaced with Promise.resolve
Mutant 1187 in q.js: when replaced with Promise.resolve
Mutant 1188 in q.js: when replaced with this.constructor
Mutant 1189 in q.js: promise replaced with null
Mutant 1190 in q.js: promise replaced with Promise.resolve()
Mutant 1191 in q.js: promise replaced with this
Mutant 1192 in q.js: onFulfilled replaced with onRejected
Mutant 1193 in q.js: onFulfilled replaced with function () {}
Mutant 1194 in q.js: onFulfilled replaced with this
Mutant 1195 in q.js: onRejected replaced with function () {}
Mutant 1196 in q.js: onRejected replaced with onRejected = function () {}
Mutant 1197 in q.js: onRejected replaced with function onRejected() {}
Mutant 1198 in q.js: result replaced with null
Mutant 1199 in q.js: result replaced with promises[index]
Mutant 1200 in q.js: result replaced with this
Mutant 1201 in q.js: pendingCount === 0 replaced with promises.length === 0
Mutant 1202 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1203 in q.js: pendingCount === 0 replaced with true
Mutant 1204 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1205 in q.js: deferred.reject replaced with console.error
Mutant 1206 in q.js: rejection replaced with new Error("Dummy rejection")
Mutant 1207 in q.js: rejection replaced with null
Mutant 1208 in q.js: rejection replaced with promise
Mutant 1209 in q.js: this replaced with []
Mutant 1210 in q.js: this replaced with Promise.resolve()
Mutant 1211 in q.js: this replaced with Q.reject(new Error('Test error'))
Mutant 1212 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "all")
Mutant 1213 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", Q.reject("Placeholder error"))
Mutant 1214 in q.js: allResolved replaced with function allResolvedBad(promises) {
  return Q(promises).allSettled();
}
Mutant 1215 in q.js: "allResolved" replaced with "allSettled"
Mutant 1216 in q.js: "allResolved" replaced with function allResolved(promises) {
  return Q(promises).all();
}
Mutant 1217 in q.js: "allResolved" replaced with function allResolved(promises) {
  return Q(promises).all().then(function (results) {
    return Q.resolve(results.map(function (result) {
      return {
        state: 'fulfilled',
        value: result
      };
    }));
  });
}
Mutant 1218 in q.js: "allSettled" replaced with "all"
Mutant 1219 in q.js: array_map(promises, Q) replaced with array_map([])
Mutant 1220 in q.js: array_map(promises, Q) replaced with array_map(promises, null)
Mutant 1221 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.resolve())
Mutant 1222 in q.js: promises replaced with promises.slice()
Mutant 1223 in q.js: promises replaced with Object.values(promises)
Mutant 1224 in q.js: promises replaced with promises.filter(x => x)
Mutant 1225 in q.js: Q replaced with Promise.resolve()
Mutant 1226 in q.js: Q replaced with Q.reject(new Error('Placeholder error'))
Mutant 1227 in q.js: when(promise, noop, noop) replaced with when(new Promise(resolve => resolve(promise)))
Mutant 1228 in q.js: promise replaced with Promise.resolve()
Mutant 1229 in q.js: promise replaced with null
Mutant 1230 in q.js: promise replaced with function () {}
Mutant 1231 in q.js: noop replaced with Promise.resolve()
Mutant 1232 in q.js: noop replaced with function () {
  throw new Error('Buggy error');
}
Mutant 1233 in q.js: noop replaced with function (value) {
  deferred.resolve(value + 1);
}
Mutant 1234 in q.js: noop replaced with Promise.resolve()
Mutant 1235 in q.js: noop replaced with function () {
  throw new Error('handled');
}
Mutant 1236 in q.js: allResolved replaced with Q.all
Mutant 1237 in q.js: allResolved replaced with Promise.resolve
Mutant 1238 in q.js: this replaced with null
Mutant 1239 in q.js: this replaced with []
Mutant 1240 in q.js: promises replaced with []
Mutant 1241 in q.js: promises replaced with promises || []
Mutant 1242 in q.js: promises replaced with Q([])
Mutant 1243 in q.js: promise replaced with Promise.resolve()
Mutant 1244 in q.js: promise replaced with promises[index]
Mutant 1245 in q.js: promise replaced with Q.resolve(promise)
Mutant 1246 in q.js: promise.inspect replaced with promise.always
Mutant 1247 in q.js: promise.then(regardless, regardless) replaced with promise.then(null, null)
Mutant 1248 in q.js: promise.then replaced with Promise.resolve
Mutant 1249 in q.js: promise.then replaced with Math.random
Mutant 1250 in q.js: regardless replaced with function regardless() {
  return {};
}
Mutant 1251 in q.js: regardless replaced with function regardless() {
  return Q.resolve();
}
Mutant 1252 in q.js: regardless replaced with function regardless() {
  return Q.reject();
}
Mutant 1253 in q.js: regardless replaced with function () {
  return {};
}
Mutant 1254 in q.js: regardless replaced with function () {
  throw new Error('Buggy!');
}
Mutant 1255 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(Promise.resolve())
Mutant 1256 in q.js: object replaced with null
Mutant 1257 in q.js: object replaced with true
Mutant 1258 in q.js: object replaced with Q.reject("An error occurred")
Mutant 1259 in q.js: void 0 replaced with function () {
  throw new Error('Rejected!');
}
Mutant 1260 in q.js: void 0 replaced with null
Mutant 1261 in q.js: void 0 replaced with this
Mutant 1262 in q.js: rejected replaced with function () {
  throw rejected;
}
Mutant 1263 in q.js: rejected replaced with Q.reject(rejected)
Mutant 1264 in q.js: rejected replaced with Promise.reject(rejected)
Mutant 1265 in q.js: this.then(void 0, rejected) replaced with this.then(function () {})
Mutant 1266 in q.js: this.then(void 0, rejected) replaced with this.then(this)
Mutant 1267 in q.js: this.then(void 0, rejected) replaced with this.then(42)
Mutant 1268 in q.js: this.then replaced with this.catch
Mutant 1269 in q.js: void 0 replaced with null
Mutant 1270 in q.js: void 0 replaced with 42
Mutant 1271 in q.js: void 0 replaced with function () {
  return 42;
}
Mutant 1272 in q.js: rejected replaced with function () {
  return Promise.resolve();
}
Mutant 1273 in q.js: rejected replaced with function () {
  throw new Error('New error');
}
Mutant 1274 in q.js: rejected replaced with function () {
  return Q.reject(new Error('New error'));
}
Mutant 1275 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(null, null, progressed)
Mutant 1276 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(true, true, progressed)
Mutant 1277 in q.js: void 0 replaced with null
Mutant 1278 in q.js: void 0 replaced with function () {}
Mutant 1279 in q.js: void 0 replaced with null
Mutant 1280 in q.js: void 0 replaced with 1
Mutant 1281 in q.js: progressed replaced with function () {}
Mutant 1282 in q.js: progressed replaced with 42
Mutant 1283 in q.js: progressed replaced with deferred.resolve
Mutant 1284 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1285 in q.js: void 0 replaced with null
Mutant 1286 in q.js: void 0 replaced with 0
Mutant 1287 in q.js: void 0 replaced with function () {}
Mutant 1288 in q.js: void 0 replaced with null
Mutant 1289 in q.js: void 0 replaced with function () {}
Mutant 1290 in q.js: progressed replaced with function () {}
Mutant 1291 in q.js: progressed replaced with null
Mutant 1292 in q.js: progressed replaced with "string"
Mutant 1293 in q.js: object replaced with null
Mutant 1294 in q.js: object replaced with this
Mutant 1295 in q.js: object replaced with Promise.resolve()
Mutant 1296 in q.js: callback replaced with function () {
  return callback;
}
Mutant 1297 in q.js: callback replaced with callback()
Mutant 1298 in q.js: callback replaced with callback.bind(this)
Mutant 1299 in q.js: !callback || typeof callback.apply !== "function" replaced with callback === null || typeof callback.apply !== "function"
Mutant 1300 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback || typeof callback.call !== "function"
Mutant 1301 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback || callback.constructor.name !== "Function"
Mutant 1302 in q.js: Q replaced with Promise
Mutant 1303 in q.js: Q replaced with null
Mutant 1304 in q.js: callback replaced with function () {
  throw new Error('Buggy callback');
}
Mutant 1305 in q.js: callback replaced with null
Mutant 1306 in q.js: callback replaced with Q.resolve
Mutant 1307 in q.js: callback.fcall replaced with callback.fapply
not replacing callback.fcall with callback.fapply
not replacing callback.fcall with callback.fapply
Mutant 1308 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(null)
Mutant 1309 in q.js: object replaced with Q.resolve(2)
Mutant 1310 in q.js: object replaced with Q.reject(new Error('Failed'))
Mutant 1311 in q.js: fulfilled replaced with Promise.resolve(fulfilled)
Mutant 1312 in q.js: fulfilled replaced with null
Mutant 1313 in q.js: rejected replaced with Q.reject(new Error('Rejected explicitly'))
Mutant 1314 in q.js: rejected replaced with null
Mutant 1315 in q.js: rejected replaced with function () {
  return true;
}
Mutant 1316 in q.js: progress replaced with function () {}
Mutant 1317 in q.js: progress replaced with null
Mutant 1318 in q.js: progress replaced with function (value) {
  return value;
}
Mutant 1319 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(null, promise)
Mutant 1320 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, null)
Mutant 1321 in q.js: error replaced with new Error('Timed out after ' + (ms - 10) + ' ms')
Mutant 1322 in q.js: error replaced with null
Mutant 1323 in q.js: error replaced with function () {
  throw new Error('An unexpected error occurred');
}
Mutant 1324 in q.js: promise replaced with Promise.resolve()
Mutant 1325 in q.js: promise replaced with null
Mutant 1326 in q.js: Q.onerror replaced with function () {
  throw new Error('Handled error');
}
Mutant 1327 in q.js: Q.onerror replaced with null
Mutant 1328 in q.js: Q.onerror replaced with function () {}
Mutant 1329 in q.js: Q.onerror replaced with null
Mutant 1330 in q.js: error replaced with new Error("Timed out after " + (ms || 0) + " ms")
Mutant 1331 in q.js: error replaced with {}
Mutant 1332 in q.js: error replaced with null
Mutant 1333 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(null, rejected, progress)
Mutant 1334 in q.js: this.then replaced with this.fcall
Mutant 1335 in q.js: this.then replaced with this.spread
Mutant 1336 in q.js: this.then replaced with this.nodeify
Mutant 1337 in q.js: fulfilled replaced with null
Mutant 1338 in q.js: fulfilled replaced with function () {}
Mutant 1339 in q.js: fulfilled replaced with 42
Mutant 1340 in q.js: rejected replaced with true
Mutant 1341 in q.js: rejected replaced with {}
Mutant 1342 in q.js: progress replaced with undefined
Mutant 1343 in q.js: onUnhandledError replaced with function () {
  throw new Error("Unhandled error");
}
Mutant 1344 in q.js: onUnhandledError replaced with Q.onerror
Mutant 1345 in q.js: onUnhandledError replaced with function () {
  throw new Error("Unhandled error");
}.bind(this)
Mutant 1346 in q.js: void 0 replaced with null
Mutant 1347 in q.js: void 0 replaced with 42
Mutant 1348 in q.js: void 0 replaced with function () {
  return true;
}
Mutant 1349 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(0, error)
Mutant 1350 in q.js: object replaced with null
Mutant 1351 in q.js: ms replaced with 0
Mutant 1352 in q.js: ms replaced with this.ms
Mutant 1353 in q.js: ms replaced with Math.random() * 1000
Mutant 1354 in q.js: error replaced with new Error("Timed out after " + (ms - 10) + " ms")
Mutant 1355 in q.js: error replaced with {}
Mutant 1356 in q.js: error replaced with function () {
  throw new Error("An error occurred");
}
Mutant 1357 in q.js: !error || "string" === typeof error replaced with true
Mutant 1358 in q.js: !error || "string" === typeof error replaced with 1 === 1
Mutant 1359 in q.js: !error || "string" === typeof error replaced with null
Mutant 1360 in q.js: error replaced with new Error("Timed out after " + (ms - 10) + " ms")
Mutant 1361 in q.js: error replaced with {}
Mutant 1362 in q.js: error replaced with function () {
  throw error;
}
Mutant 1363 in q.js: clearTimeout replaced with clearInterval
Mutant 1364 in q.js: clearTimeout replaced with deferred.reject
Mutant 1365 in q.js: timeoutId replaced with 0
Mutant 1366 in q.js: timeoutId replaced with deferred
Mutant 1367 in q.js: timeoutId replaced with null
Mutant 1368 in q.js: value replaced with null
Mutant 1369 in q.js: value replaced with new Error('Replaced value')
Mutant 1370 in q.js: value replaced with this
Mutant 1371 in q.js: clearTimeout replaced with clearInterval
Mutant 1372 in q.js: clearTimeout replaced with deferred.resolve
Mutant 1373 in q.js: timeoutId replaced with deferred
Mutant 1374 in q.js: timeoutId replaced with null
Mutant 1375 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1376 in q.js: deferred.reject replaced with deferred.promise.resolve
Mutant 1377 in q.js: exception replaced with new Error("An error occurred")
Mutant 1378 in q.js: exception replaced with null
Mutant 1379 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1380 in q.js: timeout === void 0 replaced with typeof timeout === "undefined"
Mutant 1381 in q.js: timeout === void 0 replaced with timeout === Q.timeout.NONE
Mutant 1382 in q.js: object replaced with null
Mutant 1383 in q.js: object replaced with []
Mutant 1384 in q.js: timeout replaced with 2 * timeout
Mutant 1385 in q.js: timeout replaced with 0
Mutant 1386 in q.js: timeout replaced with null
Mutant 1387 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1388 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1389 in q.js: value replaced with null
Mutant 1390 in q.js: value replaced with new Error('Replacement error')
Mutant 1391 in q.js: Q(callback).nfapply replaced with callback.nfapply
Mutant 1392 in q.js: Q(callback).nfapply replaced with Q.nfapply
Mutant 1393 in q.js: callback replaced with function () {
  return callback.bind(this);
}
Mutant 1394 in q.js: callback replaced with function () {
  return callback.call(this, arguments);
}
Mutant 1395 in q.js: callback replaced with function () {
  return callback.apply(this, [arguments]);
}
Mutant 1396 in q.js: args replaced with []
Mutant 1397 in q.js: args replaced with null
Mutant 1398 in q.js: defer replaced with deferred = {}
Mutant 1399 in q.js: array_slice replaced with []
Mutant 1400 in q.js: array_slice replaced with null
Mutant 1401 in q.js: args replaced with [1, 2, 3]
Mutant 1402 in q.js: args replaced with deferred.resolve
Mutant 1403 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1404 in q.js: deferred.makeNodeResolver() replaced with function () {
  throw new Error("Buggy node resolver");
}
Mutant 1405 in q.js: deferred.makeNodeResolver() replaced with deferred.reject
Mutant 1406 in q.js: nodeArgs replaced with []
Mutant 1407 in q.js: nodeArgs replaced with null
Mutant 1408 in q.js: nodeArgs replaced with this
Mutant 1409 in q.js: deferred.reject replaced with () => deferred.reject('HACKED')
Mutant 1410 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1411 in q.js: deferred.reject replaced with deferred.notify
Mutant 1412 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1413 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 1))
Mutant 1414 in q.js: array_slice replaced with [].slice
Mutant 1415 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1416 in q.js: 1 replaced with Infinity
Mutant 1417 in q.js: 1 replaced with null
Mutant 1418 in q.js: 1 replaced with setInterval
Mutant 1419 in q.js: Q(callback).nfapply replaced with callback.apply
Mutant 1420 in q.js: callback replaced with function () {
  return callback;
}
Mutant 1421 in q.js: callback replaced with callback.bind(null)
Mutant 1422 in q.js: callback replaced with callback || function () {}
Mutant 1423 in q.js: args replaced with []
Mutant 1424 in q.js: args replaced with null
Mutant 1425 in q.js: args replaced with 123
Mutant 1426 in q.js: array_slice replaced with [].slice
Mutant 1427 in q.js: array_slice replaced with Function.prototype.slice
Mutant 1428 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1429 in q.js: arguments replaced with null
Mutant 1430 in q.js: arguments replaced with this.arguments
Mutant 1431 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1432 in q.js: deferred.makeNodeResolver() replaced with function () {
  throw new Error("Buggy timeout");
}
Mutant 1433 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve()
Mutant 1434 in q.js: deferred.makeNodeResolver() replaced with deferred.reject("Buggy rejection")
Mutant 1435 in q.js: deferred.makeNodeResolver replaced with null
Mutant 1436 in q.js: nodeArgs replaced with this
Mutant 1437 in q.js: nodeArgs replaced with []
Mutant 1438 in q.js: nodeArgs replaced with nodeArgs.concat(deferred.makeNodeResolver())
Mutant 1439 in q.js: callback === undefined replaced with callback !== null
Mutant 1440 in q.js: callback === undefined replaced with typeof callback === 'function'
Mutant 1441 in q.js: callback === undefined replaced with callback && typeof callback === 'function'
Mutant 1442 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 0))
Mutant 1443 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1444 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 1445 in q.js: array_slice replaced with Object.keys
Mutant 1446 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1447 in q.js: arguments replaced with Object.keys(arguments)
Mutant 1448 in q.js: arguments replaced with Function.prototype.bind.apply(arguments.slice, [null, 1, 2])
Mutant 1449 in q.js: 1 replaced with Q.denodeify.length - 1
Mutant 1450 in q.js: 1 replaced with null
Mutant 1451 in q.js: 1 replaced with function () {
  return callback.apply(thisp, arguments);
}
Mutant 1452 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1453 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1454 in q.js: baseArgs.concat replaced with baseArgs.unshift
Mutant 1455 in q.js: array_slice(arguments) replaced with [].slice.call(arguments)
Mutant 1456 in q.js: array_slice(arguments) replaced with Array.prototype.slice.call(arguments)
Mutant 1457 in q.js: array_slice(arguments) replaced with Function.prototype.apply.call([], arguments)
Mutant 1458 in q.js: array_slice replaced with [1, 2, 3]
Mutant 1459 in q.js: array_slice replaced with null
Mutant 1460 in q.js: arguments replaced with this.arguments
Mutant 1461 in q.js: arguments replaced with null
Mutant 1462 in q.js: arguments replaced with [1, 2, 3]
Mutant 1463 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1464 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1465 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1466 in q.js: Q(callback).fapply replaced with callback.apply
Mutant 1467 in q.js: Q(callback).fapply replaced with this.fapply
Mutant 1468 in q.js: Q(callback).fapply replaced with Q.fapply
not replacing Q(callback).fapply with callback.apply
not replacing Q(callback).fapply with callback.apply
not replacing Q(callback).fapply with this.fapply
not replacing Q(callback).fapply with this.fapply
not replacing Q(callback).fapply with Q.fapply
not replacing Q(callback).fapply with Q.fapply
Mutant 1469 in q.js: Q replaced with Q.resolve
Mutant 1470 in q.js: Q replaced with Promise.prototype.then.call
Mutant 1471 in q.js: callback replaced with function () {}
Mutant 1472 in q.js: callback replaced with callback || function () {}
Mutant 1473 in q.js: deferred.reject replaced with function () {}
Mutant 1474 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1475 in q.js: deferred.reject replaced with deferred.notify
Mutant 1476 in q.js: array_slice replaced with [].slice
Mutant 1477 in q.js: array_slice replaced with Math.floor
Mutant 1478 in q.js: arguments replaced with [].slice.call(arguments, 0)
Mutant 1479 in q.js: args.unshift replaced with this.constructor
Mutant 1480 in q.js: args.unshift replaced with null
Mutant 1481 in q.js: this replaced with null
Mutant 1482 in q.js: this replaced with window
Mutant 1483 in q.js: this replaced with 123
Mutant 1484 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null, args)
Mutant 1485 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1486 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1487 in q.js: void 0 replaced with null
Mutant 1488 in q.js: void 0 replaced with true
Mutant 1489 in q.js: void 0 replaced with defer()
Mutant 1490 in q.js: args replaced with args.slice()
Mutant 1491 in q.js: args replaced with [...args]
Mutant 1492 in q.js: array_slice(arguments, 2) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1493 in q.js: array_slice(arguments, 2) replaced with array_slice(Function.prototype.apply.call(arguments, [1]))
Mutant 1494 in q.js: array_slice(arguments, 2) replaced with array_slice([].concat.apply([], arguments))
Mutant 1495 in q.js: array_slice replaced with [].slice
Mutant 1496 in q.js: array_slice replaced with Math.floor
Mutant 1497 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1498 in q.js: arguments replaced with Object.keys(arguments)[0]
Mutant 1499 in q.js: arguments replaced with Reflect.apply(Function.prototype.call, arguments, [].slice.call(arguments, 1))
Mutant 1500 in q.js: 2 replaced with 3
Mutant 1501 in q.js: 2 replaced with null
Mutant 1502 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1503 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1504 in q.js: baseArgs.concat replaced with baseArgs.sort
Mutant 1505 in q.js: array_slice(arguments) replaced with [].slice.call(arguments)
Mutant 1506 in q.js: array_slice(arguments) replaced with Array.prototype.slice.call(arguments)
Mutant 1507 in q.js: array_slice(arguments) replaced with Function.prototype.apply.call([], arguments)
Mutant 1508 in q.js: array_slice replaced with null
Mutant 1509 in q.js: arguments replaced with null
Mutant 1510 in q.js: arguments replaced with deferred.resolve
Mutant 1511 in q.js: defer replaced with {}
Mutant 1512 in q.js: deferred.makeNodeResolver() replaced with function () {
  throw new Error('Buggy node resolver');
}
Mutant 1513 in q.js: deferred.makeNodeResolver() replaced with deferred.reject
Mutant 1514 in q.js: deferred.makeNodeResolver() replaced with deferred.promise
Mutant 1515 in q.js: callback.apply replaced with callback.call
Mutant 1516 in q.js: callback.apply replaced with callback.bind
Mutant 1517 in q.js: thisp replaced with global
Mutant 1518 in q.js: thisp replaced with null
Mutant 1519 in q.js: thisp replaced with window
Mutant 1520 in q.js: arguments replaced with thisp
Mutant 1521 in q.js: arguments replaced with null
Mutant 1522 in q.js: arguments replaced with [].slice.call(arguments, 0)
Mutant 1523 in q.js: Q(bound).fapply replaced with bound.fapply
Mutant 1524 in q.js: Q(bound).fapply replaced with Function.prototype.fapply
not replacing Q(bound).fapply with bound.fapply
not replacing Q(bound).fapply with bound.fapply
not replacing Q(bound).fapply with Function.prototype.fapply
not replacing Q(bound).fapply with Function.prototype.fapply
Mutant 1525 in q.js: bound replaced with callback.apply(thisp)
Mutant 1526 in q.js: bound replaced with callback.call(thisp, null, deferred)
Mutant 1527 in q.js: bound replaced with callback.call(null, deferred)
Mutant 1528 in q.js: nodeArgs replaced with nodeArgs.slice()
Mutant 1529 in q.js: nodeArgs replaced with [...nodeArgs]
Mutant 1530 in q.js: deferred.reject replaced with () => deferred.reject
Mutant 1531 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1532 in q.js: deferred.reject replaced with deferred.reject(null)
Mutant 1533 in q.js: array_slice replaced with [].slice
Mutant 1534 in q.js: array_slice replaced with null
Mutant 1535 in q.js: array_slice replaced with Array.prototype.slice
Mutant 1536 in q.js: arguments replaced with [].slice.call(arguments, 0)
Mutant 1537 in q.js: arguments replaced with Object.keys(arguments)[0]
Mutant 1538 in q.js: arguments replaced with Function.prototype.apply.call(null, this, arguments)
Mutant 1539 in q.js: 0 replaced with Infinity
Mutant 1540 in q.js: 0 replaced with null
Mutant 1541 in q.js: args.unshift replaced with [].unshift
Mutant 1542 in q.js: args.unshift replaced with null.unshift
Mutant 1543 in q.js: args.unshift replaced with Object.prototype.unshift
Mutant 1544 in q.js: this replaced with global
Mutant 1545 in q.js: this replaced with 0
Mutant 1546 in q.js: this replaced with null
Mutant 1547 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1548 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this, args)
Mutant 1549 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(Q, args)
Mutant 1550 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1551 in q.js: void 0 replaced with null
Mutant 1552 in q.js: void 0 replaced with 0
Mutant 1553 in q.js: void 0 replaced with function () {}
Mutant 1554 in q.js: args replaced with []
Mutant 1555 in q.js: args replaced with null
Mutant 1556 in q.js: args replaced with this
Mutant 1557 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(false)
Mutant 1558 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(null)
Mutant 1559 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(this)
Mutant 1560 in q.js: Q replaced with Q.npost
Mutant 1561 in q.js: args replaced with []
Mutant 1562 in q.js: args replaced with null
Mutant 1563 in q.js: array_slice replaced with [].slice
Mutant 1564 in q.js: array_slice replaced with nodeArgs.slice
Mutant 1565 in q.js: array_slice replaced with Array.prototype.slice
Mutant 1566 in q.js: args || [] replaced with []
Mutant 1567 in q.js: args || [] replaced with null
Mutant 1568 in q.js: args || [] replaced with globalArgs
Mutant 1569 in q.js: defer replaced with Promise.resolve
Mutant 1570 in q.js: defer replaced with Q.resolve
Mutant 1571 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1572 in q.js: deferred.makeNodeResolver() replaced with {}
Mutant 1573 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1574 in q.js: deferred.makeNodeResolver replaced with this.makeNodeResolver
Mutant 1575 in q.js: "post" replaced with "Post"
Mutant 1576 in q.js: [name, nodeArgs] replaced with name
Mutant 1577 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1578 in q.js: deferred.reject replaced with function () {}
Mutant 1579 in q.js: array_slice(arguments, 2) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1580 in q.js: array_slice(arguments, 2) replaced with array_slice(Array.prototype.slice.call(arguments, 1))
Mutant 1581 in q.js: array_slice replaced with [].slice
Mutant 1582 in q.js: array_slice replaced with null
Mutant 1583 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1584 in q.js: arguments replaced with [].concat.apply([], arguments)
Mutant 1585 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1586 in q.js: deferred.makeNodeResolver() replaced with {}
Mutant 1587 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1588 in q.js: deferred.makeNodeResolver() replaced with function () {
  return true;
}
Mutant 1589 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("called", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("called", [name, nodeArgs])
Mutant 1590 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 1591 in q.js: Q(object).dispatch replaced with Q.dispatch
not replacing Q(object).dispatch with this.dispatch
not replacing Q(object).dispatch with this.dispatch
not replacing Q(object).dispatch with Q.dispatch
not replacing Q(object).dispatch with Q.dispatch
Mutant 1592 in q.js: "post" replaced with "Post"
Mutant 1593 in q.js: "post" replaced with this.dispatch.bind(this, "post")
Mutant 1594 in q.js: "post" replaced with function () {
  return this.dispatch("post");
}
Mutant 1595 in q.js: [name, nodeArgs] replaced with name
Mutant 1596 in q.js: [name, nodeArgs] replaced with null
Mutant 1597 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 0))
Mutant 1598 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 0))
Mutant 1599 in q.js: array_slice(arguments, 1) replaced with array_slice(nodeArgs.concat())
Mutant 1600 in q.js: array_slice replaced with [].slice
Mutant 1601 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1602 in q.js: arguments replaced with Object.keys(arguments)[1]
Mutant 1603 in q.js: 1 replaced with arguments.length - 2
Mutant 1604 in q.js: 1 replaced with nodeArgs.length
Mutant 1605 in q.js: 1 replaced with 0
Mutant 1606 in q.js: nodeArgs.push replaced with null
Mutant 1607 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1608 in q.js: deferred.makeNodeResolver replaced with deferred
Mutant 1609 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("call", [name, nodeArgs])
Mutant 1610 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, deferred.resolve])
Mutant 1611 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("apply", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("call", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, deferred.resolve])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("apply", [name, nodeArgs])
Mutant 1612 in q.js: [name, nodeArgs] replaced with this.constructor.prototype.dispatch.call(this, "post", [name, nodeArgs])
Mutant 1613 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1614 in q.js: deferred.reject replaced with function () {}
Mutant 1615 in q.js: deferred.reject replaced with null
Mutant 1616 in q.js: Q replaced with Promise
Mutant 1617 in q.js: Q replaced with []
Mutant 1618 in q.js: object replaced with this
Mutant 1619 in q.js: object replaced with null
Mutant 1620 in q.js: object replaced with function () {}
Mutant 1621 in q.js: nodeback replaced with function () {
  nodeback && nodeback(null, value);
}
Mutant 1622 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1623 in q.js: nodeback replaced with true
Mutant 1624 in q.js: nodeback replaced with null
Mutant 1625 in q.js: null replaced with value
Mutant 1626 in q.js: null replaced with 1
Mutant 1627 in q.js: value replaced with undefined
Mutant 1628 in q.js: value replaced with null
Mutant 1629 in q.js: value replaced with arguments[0]
Mutant 1630 in q.js: error replaced with new Error("Hand-crafted error")
Mutant 1631 in q.js: error replaced with null
Mutant 1632 in q.js: error replaced with Q.when(null, function () {
  throw new Error("Error message");
})
Mutant 1633 in queue.js: Q.defer replaced with Q.reject
Mutant 1634 in queue.js: Q.defer replaced with Q.reject
Mutant 1635 in queue.js: Q.defer replaced with Q.reject
Mutant 1636 in queue.js: ends.promise.get replaced with ends.promise.then.get
Mutant 1637 in queue.js: "head" replaced with null
Mutant 1638 in queue.js: "head" replaced with ends.promise
Mutant 1639 in queue.js: "head" replaced with ends.promise.then(function (val) {
  return val.head;
})
Mutant 1640 in queue.js: ends.promise.get replaced with ends.promise.then.get
Mutant 1641 in queue.js: ends.promise.get replaced with ends.promise.head
Mutant 1642 in queue.js: "tail" replaced with null
Mutant 1643 in queue.js: "tail" replaced with ends.promise
Mutant 1644 in queue.js: "tail" replaced with Q.defer().promise
Mutant 1645 in queue.js: error replaced with null
Mutant 1646 in queue.js: error replaced with {}
Mutant 1647 in queue.js: error replaced with Q.reject(error)
Mutant 1648 in queue.js: Q.reject replaced with null
Mutant 1649 in queue.js: Q.reject replaced with {}
Mutant 1650 in queue.js: Q.reject replaced with Q.resolve
Mutant 1651 in queue.js: error replaced with new Error("Different error message")
Mutant 1652 in queue.js: error replaced with null
Mutant 1653 in queue.js: error replaced with Q.reject(new Error("Can't get value from closed queue"))
Mutant 1654 in queue.js: ends.resolve replaced with ends.reject
Mutant 1655 in queue.js: ends.resolve replaced with ends.notify
Mutant 1656 in queue.js: ends.resolve replaced with ends.promise.resolve
Mutant 1657 in queue.js: end replaced with null
Mutant 1658 in queue.js: end replaced with Q.reject(new Error('Unexpected closure'))
Mutant 1659 in queue.js: end replaced with {
  head: Q.resolve(),
  tail: Q.resolve()
}
[32m15:10:48 (3295) INFO Instrumenter[39m Instrumented 2 source file(s) with 1660 mutant(s)
[32m15:10:48 (3295) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m15:10:50 (3295) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m15:10:50 (3295) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m15:10:57 (3295) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6848 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~2h 18m) 2/1660 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 4m) 3/1660 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 45m) 5/1660 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 3m) 6/1660 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 52m) 8/1660 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 3m) 9/1660 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 54m) 11/1660 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 3m) 12/1660 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 56m) 14/1660 tested (13 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 2m) 15/1660 tested (14 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 8m) 16/1660 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 2m) 18/1660 tested (17 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 7m) 19/1660 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 2m) 21/1660 tested (20 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 6m) 22/1660 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 1m) 24/1660 tested (23 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 5m) 25/1660 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 1m) 27/1660 tested (26 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 4m) 28/1660 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 1m) 30/1660 tested (29 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 3m) 31/1660 tested (30 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 12m) 31/1660 tested (30 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 8m) 33/1660 tested (31 survived, 1 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 17m) 33/1660 tested (31 survived, 1 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 13m) 35/1660 tested (32 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 21m) 35/1660 tested (32 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 22m) 36/1660 tested (32 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 19m) 38/1660 tested (34 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 26m) 38/1660 tested (34 survived, 3 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 27m) 39/1660 tested (34 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 29m) 40/1660 tested (34 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 15m) 44/1660 tested (35 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 8m) 47/1660 tested (36 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 10m) 48/1660 tested (37 survived, 5 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~3h 7m) 50/1660 tested (39 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 9m) 51/1660 tested (40 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 6m) 53/1660 tested (42 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 8m) 54/1660 tested (43 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 6m) 56/1660 tested (45 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 7m) 57/1660 tested (46 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 8m) 58/1660 tested (47 survived, 5 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 6m) 60/1660 tested (49 survived, 5 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 7m) 61/1660 tested (50 survived, 5 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 5m) 63/1660 tested (52 survived, 5 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 7m) 64/1660 tested (53 survived, 5 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 5m) 66/1660 tested (55 survived, 5 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~3h 6m) 67/1660 tested (56 survived, 5 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 10m) 67/1660 tested (56 survived, 5 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 8m) 69/1660 tested (57 survived, 6 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 9m) 70/1660 tested (58 survived, 6 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 10m) 71/1660 tested (58 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 11m) 72/1660 tested (59 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 9m) 74/1660 tested (61 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 10m) 75/1660 tested (62 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 11m) 76/1660 tested (63 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 9m) 78/1660 tested (65 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 10m) 79/1660 tested (66 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 8m) 81/1660 tested (68 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 9m) 82/1660 tested (69 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 7m) 84/1660 tested (71 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 8m) 85/1660 tested (72 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 6m) 87/1660 tested (74 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 7m) 88/1660 tested (75 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 6m) 90/1660 tested (77 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 6m) 91/1660 tested (78 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 5m) 93/1660 tested (80 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 6m) 94/1660 tested (81 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 4m) 96/1660 tested (83 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 5m) 97/1660 tested (84 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 3m) 99/1660 tested (86 survived, 7 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~3h 4m) 100/1660 tested (87 survived, 7 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~2h 55m) 106/1660 tested (88 survived, 7 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~2h 51m) 110/1660 tested (89 survived, 7 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~2h 45m) 115/1660 tested (89 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 44m) 117/1660 tested (91 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 45m) 118/1660 tested (92 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 44m) 120/1660 tested (94 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 45m) 121/1660 tested (95 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 44m) 123/1660 tested (97 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 45m) 124/1660 tested (98 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 44m) 126/1660 tested (100 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 44m) 127/1660 tested (101 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 45m) 128/1660 tested (102 survived, 7 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~2h 44m) 130/1660 tested (104 survived, 7 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~2h 45m) 131/1660 tested (105 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 44m) 133/1660 tested (107 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 45m) 134/1660 tested (108 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 44m) 136/1660 tested (110 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 44m) 137/1660 tested (111 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 44m) 139/1660 tested (113 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 44m) 140/1660 tested (114 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 43m) 142/1660 tested (116 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 44m) 143/1660 tested (117 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 43m) 145/1660 tested (119 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 44m) 146/1660 tested (120 survived, 7 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 43m) 148/1660 tested (122 survived, 7 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 43m) 149/1660 tested (123 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 44m) 150/1660 tested (124 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 43m) 152/1660 tested (126 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 44m) 153/1660 tested (127 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 43m) 155/1660 tested (129 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 43m) 156/1660 tested (130 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 42m) 159/1660 tested (132 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 42m) 160/1660 tested (133 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 41m) 162/1660 tested (135 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 42m) 163/1660 tested (136 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 41m) 165/1660 tested (138 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 42m) 166/1660 tested (139 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 42m) 167/1660 tested (140 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 41m) 169/1660 tested (142 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 42m) 170/1660 tested (143 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 41m) 172/1660 tested (145 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 41m) 173/1660 tested (146 survived, 7 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 40m) 176/1660 tested (148 survived, 7 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 39m) 178/1660 tested (148 survived, 7 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 39m) 179/1660 tested (148 survived, 7 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 40m) 180/1660 tested (148 survived, 7 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 39m) 182/1660 tested (149 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 40m) 183/1660 tested (150 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 39m) 185/1660 tested (152 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 38m) 187/1660 tested (153 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 38m) 189/1660 tested (155 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 38m) 190/1660 tested (156 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 38m) 192/1660 tested (158 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 38m) 193/1660 tested (159 survived, 7 timed out)
Mutation testing 11% (elapsed: ~21m, remaining: ~2h 38m) 194/1660 tested (160 survived, 7 timed out)
Mutation testing 11% (elapsed: ~21m, remaining: ~2h 38m) 196/1660 tested (162 survived, 7 timed out)
Mutation testing 11% (elapsed: ~21m, remaining: ~2h 38m) 197/1660 tested (163 survived, 7 timed out)
Mutation testing 11% (elapsed: ~21m, remaining: ~2h 37m) 199/1660 tested (165 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 38m) 200/1660 tested (166 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 37m) 202/1660 tested (168 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 37m) 203/1660 tested (169 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 37m) 205/1660 tested (171 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 37m) 206/1660 tested (172 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 37m) 208/1660 tested (174 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 37m) 209/1660 tested (175 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 36m) 211/1660 tested (177 survived, 7 timed out)
Mutation testing 12% (elapsed: ~23m, remaining: ~2h 37m) 212/1660 tested (178 survived, 7 timed out)
Mutation testing 12% (elapsed: ~23m, remaining: ~2h 36m) 214/1660 tested (180 survived, 7 timed out)
Mutation testing 12% (elapsed: ~23m, remaining: ~2h 36m) 215/1660 tested (181 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 37m) 216/1660 tested (182 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 36m) 218/1660 tested (184 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 36m) 219/1660 tested (185 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 36m) 221/1660 tested (187 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 36m) 222/1660 tested (188 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 35m) 224/1660 tested (190 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 36m) 225/1660 tested (191 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 35m) 227/1660 tested (193 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 35m) 228/1660 tested (194 survived, 7 timed out)
Mutation testing 13% (elapsed: ~25m, remaining: ~2h 35m) 230/1660 tested (196 survived, 7 timed out)
Mutation testing 13% (elapsed: ~25m, remaining: ~2h 35m) 231/1660 tested (197 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 35m) 233/1660 tested (199 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 35m) 234/1660 tested (200 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 34m) 236/1660 tested (202 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 35m) 237/1660 tested (203 survived, 7 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 35m) 238/1660 tested (204 survived, 7 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 34m) 240/1660 tested (206 survived, 7 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 35m) 241/1660 tested (207 survived, 7 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 34m) 243/1660 tested (209 survived, 7 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 34m) 244/1660 tested (210 survived, 7 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 33m) 247/1660 tested (212 survived, 7 timed out)
Mutation testing 14% (elapsed: ~27m, remaining: ~2h 33m) 248/1660 tested (213 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 33m) 250/1660 tested (215 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 33m) 251/1660 tested (216 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 32m) 253/1660 tested (218 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 31m) 256/1660 tested (219 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 31m) 257/1660 tested (220 survived, 7 timed out)
Mutation testing 15% (elapsed: ~28m, remaining: ~2h 31m) 259/1660 tested (222 survived, 7 timed out)
Mutation testing 15% (elapsed: ~28m, remaining: ~2h 31m) 260/1660 tested (223 survived, 7 timed out)
Mutation testing 15% (elapsed: ~28m, remaining: ~2h 31m) 262/1660 tested (225 survived, 7 timed out)
Mutation testing 15% (elapsed: ~28m, remaining: ~2h 31m) 263/1660 tested (226 survived, 7 timed out)
Mutation testing 15% (elapsed: ~28m, remaining: ~2h 31m) 264/1660 tested (227 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 31m) 266/1660 tested (229 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 31m) 267/1660 tested (230 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 30m) 269/1660 tested (232 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 31m) 270/1660 tested (233 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 30m) 272/1660 tested (235 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 30m) 273/1660 tested (236 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 30m) 275/1660 tested (238 survived, 7 timed out)
Mutation testing 16% (elapsed: ~30m, remaining: ~2h 30m) 276/1660 tested (239 survived, 7 timed out)
Mutation testing 16% (elapsed: ~30m, remaining: ~2h 29m) 278/1660 tested (241 survived, 7 timed out)
Mutation testing 16% (elapsed: ~30m, remaining: ~2h 30m) 279/1660 tested (242 survived, 7 timed out)
Mutation testing 16% (elapsed: ~30m, remaining: ~2h 29m) 282/1660 tested (243 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 28m) 284/1660 tested (245 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 28m) 285/1660 tested (246 survived, 7 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 27m) 288/1660 tested (248 survived, 7 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 27m) 289/1660 tested (249 survived, 7 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 27m) 291/1660 tested (251 survived, 7 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 26m) 293/1660 tested (252 survived, 7 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 27m) 294/1660 tested (253 survived, 7 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 26m) 296/1660 tested (255 survived, 7 timed out)
Mutation testing 17% (elapsed: ~32m, remaining: ~2h 26m) 297/1660 tested (256 survived, 7 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 26m) 299/1660 tested (258 survived, 7 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 26m) 300/1660 tested (259 survived, 7 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 26m) 302/1660 tested (260 survived, 7 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 25m) 304/1660 tested (261 survived, 7 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 26m) 304/1660 tested (261 survived, 7 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 26m) 305/1660 tested (261 survived, 8 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 25m) 309/1660 tested (262 survived, 8 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 24m) 311/1660 tested (262 survived, 8 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 24m) 312/1660 tested (263 survived, 8 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 24m) 314/1660 tested (263 survived, 8 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 24m) 315/1660 tested (264 survived, 8 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 24m) 316/1660 tested (265 survived, 8 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 24m) 317/1660 tested (265 survived, 8 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 23m) 320/1660 tested (265 survived, 9 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 23m) 321/1660 tested (266 survived, 9 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 23m) 323/1660 tested (268 survived, 9 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 21m) 327/1660 tested (268 survived, 9 timed out)
Mutation testing 19% (elapsed: ~35m, remaining: ~2h 21m) 329/1660 tested (270 survived, 9 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 20m) 332/1660 tested (271 survived, 9 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 20m) 333/1660 tested (272 survived, 9 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 19m) 336/1660 tested (272 survived, 9 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 20m) 337/1660 tested (272 survived, 10 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 20m) 337/1660 tested (272 survived, 10 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 20m) 338/1660 tested (272 survived, 11 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 20m) 340/1660 tested (274 survived, 11 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 20m) 341/1660 tested (275 survived, 11 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 20m) 343/1660 tested (277 survived, 11 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 20m) 344/1660 tested (278 survived, 11 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 20m) 344/1660 tested (278 survived, 11 timed out)
Mutation testing 20% (elapsed: ~37m, remaining: ~2h 21m) 345/1660 tested (278 survived, 12 timed out)
Mutation testing 20% (elapsed: ~37m, remaining: ~2h 21m) 346/1660 tested (278 survived, 13 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 20m) 349/1660 tested (279 survived, 13 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 20m) 350/1660 tested (280 survived, 13 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 19m) 352/1660 tested (282 survived, 13 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 20m) 353/1660 tested (283 survived, 13 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 19m) 355/1660 tested (285 survived, 13 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 19m) 356/1660 tested (286 survived, 13 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 19m) 358/1660 tested (288 survived, 13 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 19m) 359/1660 tested (289 survived, 13 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 19m) 361/1660 tested (291 survived, 13 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 19m) 362/1660 tested (292 survived, 13 timed out)
Mutation testing 21% (elapsed: ~39m, remaining: ~2h 18m) 364/1660 tested (294 survived, 13 timed out)
Mutation testing 21% (elapsed: ~39m, remaining: ~2h 18m) 365/1660 tested (295 survived, 13 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 18m) 367/1660 tested (297 survived, 13 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 18m) 368/1660 tested (298 survived, 13 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 18m) 369/1660 tested (299 survived, 13 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 18m) 371/1660 tested (301 survived, 13 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 18m) 372/1660 tested (302 survived, 13 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 18m) 374/1660 tested (304 survived, 13 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 18m) 375/1660 tested (305 survived, 13 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 17m) 377/1660 tested (307 survived, 13 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 17m) 378/1660 tested (308 survived, 13 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 18m) 378/1660 tested (308 survived, 13 timed out)
Mutation testing 22% (elapsed: ~41m, remaining: ~2h 17m) 381/1660 tested (308 survived, 14 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 17m) 382/1660 tested (308 survived, 15 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 18m) 382/1660 tested (308 survived, 15 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 18m) 383/1660 tested (308 survived, 16 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 18m) 384/1660 tested (308 survived, 17 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 18m) 385/1660 tested (308 survived, 17 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 18m) 387/1660 tested (308 survived, 18 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 18m) 387/1660 tested (308 survived, 18 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 18m) 389/1660 tested (309 survived, 19 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 18m) 390/1660 tested (309 survived, 19 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 18m) 391/1660 tested (309 survived, 20 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 19m) 391/1660 tested (309 survived, 20 timed out)
Mutation testing 23% (elapsed: ~43m, remaining: ~2h 19m) 392/1660 tested (309 survived, 21 timed out)
Mutation testing 23% (elapsed: ~43m, remaining: ~2h 19m) 393/1660 tested (309 survived, 22 timed out)
Mutation testing 23% (elapsed: ~43m, remaining: ~2h 19m) 393/1660 tested (309 survived, 22 timed out)
Mutation testing 23% (elapsed: ~43m, remaining: ~2h 19m) 395/1660 tested (310 survived, 23 timed out)
Mutation testing 23% (elapsed: ~43m, remaining: ~2h 19m) 396/1660 tested (311 survived, 23 timed out)
Mutation testing 23% (elapsed: ~43m, remaining: ~2h 18m) 398/1660 tested (313 survived, 23 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 19m) 399/1660 tested (314 survived, 23 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 18m) 401/1660 tested (316 survived, 23 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 19m) 401/1660 tested (316 survived, 23 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 18m) 403/1660 tested (316 survived, 24 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 19m) 403/1660 tested (316 survived, 24 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 17m) 408/1660 tested (316 survived, 25 timed out)
Mutation testing 24% (elapsed: ~45m, remaining: ~2h 18m) 408/1660 tested (316 survived, 25 timed out)
Mutation testing 24% (elapsed: ~45m, remaining: ~2h 18m) 409/1660 tested (316 survived, 25 timed out)
Mutation testing 24% (elapsed: ~45m, remaining: ~2h 18m) 410/1660 tested (316 survived, 25 timed out)
Mutation testing 24% (elapsed: ~45m, remaining: ~2h 17m) 412/1660 tested (317 survived, 25 timed out)
Mutation testing 24% (elapsed: ~45m, remaining: ~2h 17m) 413/1660 tested (318 survived, 25 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 17m) 415/1660 tested (320 survived, 25 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 17m) 416/1660 tested (321 survived, 25 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 17m) 417/1660 tested (322 survived, 25 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 17m) 419/1660 tested (324 survived, 25 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 17m) 420/1660 tested (325 survived, 25 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 16m) 422/1660 tested (327 survived, 25 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 16m) 423/1660 tested (328 survived, 25 timed out)
Mutation testing 25% (elapsed: ~47m, remaining: ~2h 16m) 425/1660 tested (330 survived, 25 timed out)
Mutation testing 25% (elapsed: ~47m, remaining: ~2h 16m) 426/1660 tested (331 survived, 25 timed out)
Mutation testing 25% (elapsed: ~47m, remaining: ~2h 16m) 428/1660 tested (333 survived, 25 timed out)
Mutation testing 25% (elapsed: ~47m, remaining: ~2h 16m) 429/1660 tested (334 survived, 25 timed out)
Mutation testing 25% (elapsed: ~47m, remaining: ~2h 15m) 431/1660 tested (336 survived, 25 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 15m) 432/1660 tested (337 survived, 25 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 15m) 434/1660 tested (339 survived, 25 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 15m) 435/1660 tested (340 survived, 25 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 15m) 437/1660 tested (342 survived, 25 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 15m) 438/1660 tested (343 survived, 25 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 14m) 440/1660 tested (345 survived, 25 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 14m) 441/1660 tested (346 survived, 25 timed out)
Mutation testing 26% (elapsed: ~49m, remaining: ~2h 14m) 443/1660 tested (348 survived, 25 timed out)
Mutation testing 26% (elapsed: ~49m, remaining: ~2h 14m) 444/1660 tested (349 survived, 25 timed out)
Mutation testing 26% (elapsed: ~49m, remaining: ~2h 14m) 446/1660 tested (351 survived, 25 timed out)
Mutation testing 26% (elapsed: ~49m, remaining: ~2h 14m) 447/1660 tested (352 survived, 25 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 13m) 449/1660 tested (354 survived, 25 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 13m) 450/1660 tested (355 survived, 25 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 13m) 452/1660 tested (357 survived, 25 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 13m) 453/1660 tested (358 survived, 25 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 13m) 454/1660 tested (359 survived, 25 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 13m) 456/1660 tested (361 survived, 25 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 13m) 457/1660 tested (362 survived, 25 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 13m) 459/1660 tested (364 survived, 25 timed out)
Mutation testing 27% (elapsed: ~51m, remaining: ~2h 13m) 460/1660 tested (365 survived, 25 timed out)
Mutation testing 27% (elapsed: ~51m, remaining: ~2h 12m) 462/1660 tested (367 survived, 25 timed out)
Mutation testing 27% (elapsed: ~51m, remaining: ~2h 12m) 463/1660 tested (368 survived, 25 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 12m) 465/1660 tested (370 survived, 25 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 12m) 466/1660 tested (371 survived, 25 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 12m) 468/1660 tested (373 survived, 25 timed out)
Mutation testing 28% (elapsed: ~52m, remaining: ~2h 12m) 469/1660 tested (374 survived, 25 timed out)
Mutation testing 28% (elapsed: ~52m, remaining: ~2h 11m) 471/1660 tested (376 survived, 25 timed out)
Mutation testing 28% (elapsed: ~52m, remaining: ~2h 11m) 472/1660 tested (377 survived, 25 timed out)
Mutation testing 28% (elapsed: ~52m, remaining: ~2h 11m) 474/1660 tested (379 survived, 25 timed out)
Mutation testing 28% (elapsed: ~52m, remaining: ~2h 11m) 475/1660 tested (380 survived, 25 timed out)
Mutation testing 28% (elapsed: ~52m, remaining: ~2h 11m) 477/1660 tested (382 survived, 25 timed out)
Mutation testing 28% (elapsed: ~53m, remaining: ~2h 11m) 478/1660 tested (383 survived, 25 timed out)
Mutation testing 28% (elapsed: ~53m, remaining: ~2h 10m) 480/1660 tested (385 survived, 25 timed out)
Mutation testing 28% (elapsed: ~53m, remaining: ~2h 10m) 481/1660 tested (386 survived, 25 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 10m) 483/1660 tested (388 survived, 25 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 10m) 484/1660 tested (389 survived, 25 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 10m) 486/1660 tested (391 survived, 25 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 10m) 487/1660 tested (392 survived, 25 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 10m) 488/1660 tested (393 survived, 25 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 9m) 490/1660 tested (394 survived, 25 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 9m) 491/1660 tested (394 survived, 25 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 10m) 491/1660 tested (394 survived, 25 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 10m) 492/1660 tested (394 survived, 26 timed out)
Mutation testing 29% (elapsed: ~55m, remaining: ~2h 10m) 493/1660 tested (394 survived, 26 timed out)
Mutation testing 29% (elapsed: ~55m, remaining: ~2h 10m) 493/1660 tested (394 survived, 26 timed out)
Mutation testing 29% (elapsed: ~55m, remaining: ~2h 10m) 494/1660 tested (394 survived, 27 timed out)
Mutation testing 29% (elapsed: ~55m, remaining: ~2h 10m) 495/1660 tested (394 survived, 28 timed out)
Mutation testing 29% (elapsed: ~55m, remaining: ~2h 11m) 495/1660 tested (394 survived, 28 timed out)
Mutation testing 29% (elapsed: ~55m, remaining: ~2h 11m) 496/1660 tested (394 survived, 29 timed out)
Mutation testing 29% (elapsed: ~56m, remaining: ~2h 11m) 497/1660 tested (394 survived, 30 timed out)
Mutation testing 29% (elapsed: ~56m, remaining: ~2h 11m) 497/1660 tested (394 survived, 30 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 11m) 498/1660 tested (394 survived, 31 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 11m) 499/1660 tested (394 survived, 32 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 11m) 500/1660 tested (395 survived, 32 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 11m) 502/1660 tested (397 survived, 32 timed out)
Mutation testing 30% (elapsed: ~57m, remaining: ~2h 11m) 503/1660 tested (398 survived, 32 timed out)
Mutation testing 30% (elapsed: ~57m, remaining: ~2h 10m) 505/1660 tested (400 survived, 32 timed out)
Mutation testing 30% (elapsed: ~57m, remaining: ~2h 10m) 506/1660 tested (401 survived, 32 timed out)
Mutation testing 30% (elapsed: ~57m, remaining: ~2h 10m) 508/1660 tested (403 survived, 32 timed out)
Mutation testing 30% (elapsed: ~57m, remaining: ~2h 10m) 509/1660 tested (404 survived, 32 timed out)
Mutation testing 30% (elapsed: ~57m, remaining: ~2h 10m) 510/1660 tested (405 survived, 32 timed out)
Mutation testing 30% (elapsed: ~58m, remaining: ~2h 10m) 512/1660 tested (407 survived, 32 timed out)
Mutation testing 30% (elapsed: ~58m, remaining: ~2h 10m) 513/1660 tested (408 survived, 32 timed out)
Mutation testing 30% (elapsed: ~58m, remaining: ~2h 10m) 514/1660 tested (408 survived, 33 timed out)
Mutation testing 30% (elapsed: ~58m, remaining: ~2h 10m) 514/1660 tested (408 survived, 33 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 10m) 516/1660 tested (408 survived, 34 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 9m) 519/1660 tested (409 survived, 34 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 8m) 521/1660 tested (411 survived, 34 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 8m) 522/1660 tested (412 survived, 34 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 8m) 524/1660 tested (413 survived, 34 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 8m) 525/1660 tested (414 survived, 34 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 8m) 527/1660 tested (415 survived, 34 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 8m) 528/1660 tested (415 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 0m, remaining: ~2h 8m) 528/1660 tested (415 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 0m, remaining: ~2h 8m) 529/1660 tested (415 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 0m, remaining: ~2h 8m) 529/1660 tested (415 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 0m, remaining: ~2h 8m) 530/1660 tested (415 survived, 37 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 8m) 532/1660 tested (415 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 8m) 532/1660 tested (415 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 8m) 533/1660 tested (415 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 8m) 534/1660 tested (415 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 8m) 535/1660 tested (415 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 8m) 536/1660 tested (415 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 8m) 537/1660 tested (415 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 9m) 537/1660 tested (415 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 9m) 538/1660 tested (415 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 9m) 539/1660 tested (415 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 9m) 539/1660 tested (415 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 9m) 540/1660 tested (415 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 9m) 541/1660 tested (415 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 9m) 542/1660 tested (416 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 3m, remaining: ~2h 9m) 544/1660 tested (418 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 3m, remaining: ~2h 9m) 544/1660 tested (418 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 3m, remaining: ~2h 9m) 545/1660 tested (418 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 3m, remaining: ~2h 9m) 546/1660 tested (418 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 3m, remaining: ~2h 9m) 546/1660 tested (418 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 3m, remaining: ~2h 9m) 547/1660 tested (418 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 9m) 548/1660 tested (418 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 9m) 549/1660 tested (419 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 9m) 550/1660 tested (419 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 9m) 551/1660 tested (419 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 10m) 551/1660 tested (419 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 10m) 552/1660 tested (419 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 10m) 553/1660 tested (419 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 9m) 555/1660 tested (420 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 9m) 556/1660 tested (421 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 9m) 557/1660 tested (422 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 9m) 558/1660 tested (422 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 10m) 558/1660 tested (422 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 6m, remaining: ~2h 9m) 559/1660 tested (422 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 6m, remaining: ~2h 9m) 560/1660 tested (422 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 6m, remaining: ~2h 9m) 562/1660 tested (422 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 6m, remaining: ~2h 9m) 562/1660 tested (422 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 6m, remaining: ~2h 9m) 563/1660 tested (422 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 6m, remaining: ~2h 9m) 564/1660 tested (422 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 7m, remaining: ~2h 10m) 564/1660 tested (422 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 9m) 566/1660 tested (422 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 9m) 567/1660 tested (422 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 10m) 567/1660 tested (422 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 9m) 569/1660 tested (422 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 9m) 570/1660 tested (423 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 9m) 571/1660 tested (423 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 10m) 571/1660 tested (423 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 9m) 572/1660 tested (423 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 9m) 573/1660 tested (423 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 10m) 573/1660 tested (423 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 10m) 574/1660 tested (423 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 9m, remaining: ~2h 10m) 574/1660 tested (423 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 9m, remaining: ~2h 10m) 575/1660 tested (423 survived, 58 timed out)
Mutation testing 34% (elapsed: ~1h 9m, remaining: ~2h 10m) 576/1660 tested (423 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 9m, remaining: ~2h 10m) 576/1660 tested (423 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 9m, remaining: ~2h 10m) 577/1660 tested (423 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 9m, remaining: ~2h 10m) 578/1660 tested (423 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 10m, remaining: ~2h 10m) 580/1660 tested (425 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 10m) 581/1660 tested (426 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 9m) 583/1660 tested (428 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 9m) 584/1660 tested (429 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 9m) 585/1660 tested (430 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 9m) 587/1660 tested (432 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 11m, remaining: ~2h 9m) 588/1660 tested (433 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 11m, remaining: ~2h 9m) 590/1660 tested (435 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 11m, remaining: ~2h 9m) 591/1660 tested (436 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 11m, remaining: ~2h 8m) 593/1660 tested (438 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 11m, remaining: ~2h 8m) 594/1660 tested (439 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 11m, remaining: ~2h 8m) 596/1660 tested (441 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 12m, remaining: ~2h 8m) 597/1660 tested (442 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 7m) 599/1660 tested (444 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 7m) 600/1660 tested (445 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 7m) 602/1660 tested (447 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 7m) 603/1660 tested (448 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 7m) 605/1660 tested (450 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 13m, remaining: ~2h 6m) 606/1660 tested (451 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 13m, remaining: ~2h 6m) 608/1660 tested (453 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 13m, remaining: ~2h 6m) 609/1660 tested (454 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 13m, remaining: ~2h 6m) 611/1660 tested (456 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 13m, remaining: ~2h 6m) 612/1660 tested (457 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 13m, remaining: ~2h 5m) 614/1660 tested (459 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 5m) 615/1660 tested (460 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 5m) 617/1660 tested (462 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 5m) 618/1660 tested (463 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 5m) 619/1660 tested (464 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 4m) 621/1660 tested (466 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 4m) 622/1660 tested (467 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 15m, remaining: ~2h 4m) 624/1660 tested (469 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 15m, remaining: ~2h 4m) 625/1660 tested (470 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 15m, remaining: ~2h 4m) 627/1660 tested (472 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 15m, remaining: ~2h 4m) 628/1660 tested (473 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 15m, remaining: ~2h 3m) 630/1660 tested (475 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~2h 3m) 631/1660 tested (476 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~2h 3m) 633/1660 tested (478 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~2h 3m) 634/1660 tested (479 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~2h 2m) 636/1660 tested (481 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~2h 2m) 637/1660 tested (482 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~2h 2m) 639/1660 tested (484 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~2h 2m) 640/1660 tested (485 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 17m, remaining: ~2h 2m) 642/1660 tested (487 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 17m, remaining: ~2h 2m) 643/1660 tested (488 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 17m, remaining: ~2h 1m) 645/1660 tested (490 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 17m, remaining: ~2h 1m) 646/1660 tested (491 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~2h 1m) 648/1660 tested (493 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~2h 0m) 650/1660 tested (494 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 18m, remaining: ~2h 0m) 651/1660 tested (494 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 18m, remaining: ~2h 0m) 654/1660 tested (495 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 18m, remaining: ~2h 0m) 655/1660 tested (496 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 18m, remaining: ~2h 0m) 656/1660 tested (497 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 18m, remaining: ~1h 59m) 658/1660 tested (499 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 18m, remaining: ~1h 59m) 659/1660 tested (500 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 19m, remaining: ~1h 59m) 661/1660 tested (502 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 19m, remaining: ~1h 59m) 662/1660 tested (503 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 59m) 664/1660 tested (505 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 58m) 665/1660 tested (506 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 58m) 667/1660 tested (508 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 58m) 668/1660 tested (509 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 20m, remaining: ~1h 58m) 670/1660 tested (511 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 20m, remaining: ~1h 58m) 671/1660 tested (512 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 20m, remaining: ~1h 57m) 673/1660 tested (514 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 20m, remaining: ~1h 57m) 674/1660 tested (515 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 20m, remaining: ~1h 57m) 676/1660 tested (517 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 20m, remaining: ~1h 57m) 677/1660 tested (518 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 21m, remaining: ~1h 57m) 679/1660 tested (520 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 21m, remaining: ~1h 57m) 679/1660 tested (520 survived, 61 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 56m) 681/1660 tested (520 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 56m) 684/1660 tested (522 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 55m) 686/1660 tested (523 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 55m) 687/1660 tested (524 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 22m, remaining: ~1h 55m) 689/1660 tested (526 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 22m, remaining: ~1h 55m) 691/1660 tested (527 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 22m, remaining: ~1h 55m) 692/1660 tested (528 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 22m, remaining: ~1h 54m) 694/1660 tested (530 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 22m, remaining: ~1h 54m) 697/1660 tested (530 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 54m) 698/1660 tested (531 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 53m) 701/1660 tested (533 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 53m) 702/1660 tested (534 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 52m) 705/1660 tested (536 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 52m) 706/1660 tested (536 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 52m) 707/1660 tested (537 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 52m) 709/1660 tested (539 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 24m, remaining: ~1h 52m) 710/1660 tested (540 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 24m, remaining: ~1h 52m) 712/1660 tested (542 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 24m, remaining: ~1h 52m) 713/1660 tested (543 survived, 62 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 51m) 715/1660 tested (545 survived, 62 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 51m) 715/1660 tested (545 survived, 62 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 51m) 717/1660 tested (546 survived, 63 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 51m) 718/1660 tested (547 survived, 63 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 51m) 718/1660 tested (547 survived, 63 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 51m) 720/1660 tested (548 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 51m) 721/1660 tested (549 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 51m) 723/1660 tested (551 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 50m) 724/1660 tested (552 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 26m, remaining: ~1h 50m) 726/1660 tested (554 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 26m, remaining: ~1h 49m) 730/1660 tested (555 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 49m) 731/1660 tested (556 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 49m) 733/1660 tested (558 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 49m) 734/1660 tested (559 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 49m) 735/1660 tested (560 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 27m, remaining: ~1h 48m) 737/1660 tested (562 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 27m, remaining: ~1h 48m) 738/1660 tested (563 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 27m, remaining: ~1h 48m) 740/1660 tested (565 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 27m, remaining: ~1h 48m) 741/1660 tested (566 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 27m, remaining: ~1h 48m) 743/1660 tested (568 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 27m, remaining: ~1h 48m) 744/1660 tested (569 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 28m, remaining: ~1h 47m) 746/1660 tested (571 survived, 64 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 47m) 747/1660 tested (572 survived, 64 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 47m) 749/1660 tested (574 survived, 64 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 47m) 750/1660 tested (575 survived, 64 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 47m) 752/1660 tested (577 survived, 64 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 47m) 753/1660 tested (578 survived, 64 timed out)
Mutation testing 45% (elapsed: ~1h 29m, remaining: ~1h 46m) 755/1660 tested (580 survived, 64 timed out)
Mutation testing 45% (elapsed: ~1h 29m, remaining: ~1h 46m) 756/1660 tested (581 survived, 64 timed out)
Mutation testing 45% (elapsed: ~1h 29m, remaining: ~1h 46m) 758/1660 tested (583 survived, 64 timed out)
Mutation testing 45% (elapsed: ~1h 29m, remaining: ~1h 46m) 759/1660 tested (584 survived, 64 timed out)
Mutation testing 45% (elapsed: ~1h 29m, remaining: ~1h 45m) 761/1660 tested (586 survived, 64 timed out)
Mutation testing 45% (elapsed: ~1h 29m, remaining: ~1h 45m) 762/1660 tested (587 survived, 64 timed out)
Mutation testing 45% (elapsed: ~1h 30m, remaining: ~1h 45m) 763/1660 tested (588 survived, 64 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 45m) 764/1660 tested (588 survived, 65 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 45m) 764/1660 tested (588 survived, 65 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 45m) 765/1660 tested (588 survived, 66 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 45m) 766/1660 tested (588 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 45m) 767/1660 tested (589 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 31m, remaining: ~1h 45m) 769/1660 tested (591 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 31m, remaining: ~1h 45m) 770/1660 tested (592 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 31m, remaining: ~1h 45m) 772/1660 tested (594 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 31m, remaining: ~1h 44m) 773/1660 tested (595 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 31m, remaining: ~1h 44m) 775/1660 tested (597 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 31m, remaining: ~1h 44m) 776/1660 tested (598 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 32m, remaining: ~1h 44m) 777/1660 tested (599 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 32m, remaining: ~1h 44m) 779/1660 tested (601 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 32m, remaining: ~1h 44m) 780/1660 tested (602 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 43m) 782/1660 tested (604 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 43m) 783/1660 tested (605 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 43m) 785/1660 tested (607 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 43m) 786/1660 tested (608 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 43m) 788/1660 tested (610 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 43m) 789/1660 tested (611 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 42m) 791/1660 tested (613 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 42m) 792/1660 tested (614 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 42m) 794/1660 tested (616 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 34m, remaining: ~1h 42m) 795/1660 tested (617 survived, 67 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 41m) 797/1660 tested (619 survived, 67 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 41m) 798/1660 tested (620 survived, 67 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 41m) 799/1660 tested (621 survived, 67 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 41m) 801/1660 tested (623 survived, 67 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 41m) 802/1660 tested (624 survived, 67 timed out)
Mutation testing 48% (elapsed: ~1h 35m, remaining: ~1h 41m) 804/1660 tested (626 survived, 67 timed out)
Mutation testing 48% (elapsed: ~1h 35m, remaining: ~1h 41m) 805/1660 tested (627 survived, 67 timed out)
Mutation testing 48% (elapsed: ~1h 35m, remaining: ~1h 40m) 807/1660 tested (629 survived, 67 timed out)
Mutation testing 48% (elapsed: ~1h 35m, remaining: ~1h 40m) 808/1660 tested (630 survived, 67 timed out)
Mutation testing 48% (elapsed: ~1h 35m, remaining: ~1h 40m) 810/1660 tested (631 survived, 67 timed out)
Mutation testing 48% (elapsed: ~1h 35m, remaining: ~1h 40m) 811/1660 tested (631 survived, 67 timed out)
Mutation testing 48% (elapsed: ~1h 36m, remaining: ~1h 40m) 812/1660 tested (631 survived, 67 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 39m) 814/1660 tested (631 survived, 67 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 39m) 815/1660 tested (632 survived, 67 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 39m) 817/1660 tested (634 survived, 67 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 39m) 818/1660 tested (635 survived, 67 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 39m) 820/1660 tested (637 survived, 67 timed out)
Mutation testing 49% (elapsed: ~1h 37m, remaining: ~1h 39m) 821/1660 tested (638 survived, 67 timed out)
Mutation testing 49% (elapsed: ~1h 37m, remaining: ~1h 38m) 823/1660 tested (640 survived, 67 timed out)
Mutation testing 49% (elapsed: ~1h 37m, remaining: ~1h 38m) 824/1660 tested (641 survived, 67 timed out)
Mutation testing 49% (elapsed: ~1h 37m, remaining: ~1h 38m) 825/1660 tested (642 survived, 67 timed out)
Mutation testing 49% (elapsed: ~1h 37m, remaining: ~1h 38m) 827/1660 tested (644 survived, 67 timed out)
Mutation testing 49% (elapsed: ~1h 37m, remaining: ~1h 38m) 828/1660 tested (645 survived, 67 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 38m) 830/1660 tested (647 survived, 67 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 37m) 831/1660 tested (648 survived, 67 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 37m) 833/1660 tested (650 survived, 67 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 37m) 834/1660 tested (651 survived, 67 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 37m) 836/1660 tested (653 survived, 67 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 37m) 837/1660 tested (654 survived, 67 timed out)
Mutation testing 50% (elapsed: ~1h 39m, remaining: ~1h 36m) 839/1660 tested (656 survived, 67 timed out)
Mutation testing 50% (elapsed: ~1h 39m, remaining: ~1h 36m) 840/1660 tested (657 survived, 67 timed out)
Mutation testing 50% (elapsed: ~1h 39m, remaining: ~1h 36m) 842/1660 tested (659 survived, 67 timed out)
Mutation testing 50% (elapsed: ~1h 39m, remaining: ~1h 36m) 843/1660 tested (660 survived, 67 timed out)
Mutation testing 50% (elapsed: ~1h 39m, remaining: ~1h 36m) 845/1660 tested (662 survived, 67 timed out)
Mutation testing 50% (elapsed: ~1h 39m, remaining: ~1h 36m) 846/1660 tested (663 survived, 67 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 35m) 847/1660 tested (664 survived, 67 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 35m) 849/1660 tested (666 survived, 67 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 35m) 850/1660 tested (667 survived, 67 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 35m) 852/1660 tested (669 survived, 67 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 35m) 853/1660 tested (670 survived, 67 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 34m) 855/1660 tested (672 survived, 67 timed out)
Mutation testing 51% (elapsed: ~1h 41m, remaining: ~1h 34m) 856/1660 tested (673 survived, 67 timed out)
Mutation testing 51% (elapsed: ~1h 41m, remaining: ~1h 34m) 858/1660 tested (675 survived, 67 timed out)
Mutation testing 51% (elapsed: ~1h 41m, remaining: ~1h 34m) 859/1660 tested (676 survived, 67 timed out)
Mutation testing 51% (elapsed: ~1h 41m, remaining: ~1h 34m) 861/1660 tested (678 survived, 67 timed out)
Mutation testing 51% (elapsed: ~1h 41m, remaining: ~1h 34m) 862/1660 tested (679 survived, 67 timed out)
Mutation testing 52% (elapsed: ~1h 41m, remaining: ~1h 33m) 864/1660 tested (681 survived, 67 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 33m) 865/1660 tested (682 survived, 67 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 33m) 867/1660 tested (684 survived, 67 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 33m) 868/1660 tested (685 survived, 67 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 33m) 870/1660 tested (687 survived, 67 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 33m) 871/1660 tested (688 survived, 67 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 32m) 872/1660 tested (689 survived, 67 timed out)
Mutation testing 52% (elapsed: ~1h 43m, remaining: ~1h 32m) 874/1660 tested (691 survived, 67 timed out)
Mutation testing 52% (elapsed: ~1h 43m, remaining: ~1h 32m) 875/1660 tested (692 survived, 67 timed out)
Mutation testing 52% (elapsed: ~1h 43m, remaining: ~1h 32m) 877/1660 tested (694 survived, 67 timed out)
Mutation testing 52% (elapsed: ~1h 43m, remaining: ~1h 32m) 878/1660 tested (695 survived, 67 timed out)
Mutation testing 53% (elapsed: ~1h 43m, remaining: ~1h 31m) 880/1660 tested (697 survived, 67 timed out)
Mutation testing 53% (elapsed: ~1h 43m, remaining: ~1h 31m) 881/1660 tested (698 survived, 67 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 31m) 883/1660 tested (700 survived, 67 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 31m) 884/1660 tested (701 survived, 67 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 31m) 886/1660 tested (703 survived, 67 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 31m) 887/1660 tested (704 survived, 67 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 30m) 889/1660 tested (706 survived, 67 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 30m) 890/1660 tested (707 survived, 67 timed out)
Mutation testing 53% (elapsed: ~1h 45m, remaining: ~1h 30m) 892/1660 tested (709 survived, 67 timed out)
Mutation testing 53% (elapsed: ~1h 45m, remaining: ~1h 30m) 893/1660 tested (710 survived, 67 timed out)
Mutation testing 53% (elapsed: ~1h 45m, remaining: ~1h 30m) 894/1660 tested (711 survived, 67 timed out)
Mutation testing 53% (elapsed: ~1h 45m, remaining: ~1h 29m) 896/1660 tested (713 survived, 67 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 29m) 897/1660 tested (714 survived, 67 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 29m) 899/1660 tested (716 survived, 67 timed out)
Mutation testing 54% (elapsed: ~1h 46m, remaining: ~1h 29m) 900/1660 tested (717 survived, 67 timed out)
Mutation testing 54% (elapsed: ~1h 46m, remaining: ~1h 29m) 902/1660 tested (719 survived, 67 timed out)
Mutation testing 54% (elapsed: ~1h 46m, remaining: ~1h 29m) 903/1660 tested (720 survived, 67 timed out)
Mutation testing 54% (elapsed: ~1h 46m, remaining: ~1h 28m) 905/1660 tested (722 survived, 67 timed out)
Mutation testing 54% (elapsed: ~1h 46m, remaining: ~1h 28m) 906/1660 tested (723 survived, 67 timed out)
Mutation testing 54% (elapsed: ~1h 46m, remaining: ~1h 28m) 908/1660 tested (725 survived, 67 timed out)
Mutation testing 54% (elapsed: ~1h 47m, remaining: ~1h 28m) 909/1660 tested (726 survived, 67 timed out)
Mutation testing 54% (elapsed: ~1h 47m, remaining: ~1h 28m) 911/1660 tested (728 survived, 67 timed out)
Mutation testing 54% (elapsed: ~1h 47m, remaining: ~1h 28m) 912/1660 tested (729 survived, 67 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 27m) 914/1660 tested (731 survived, 67 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 27m) 915/1660 tested (732 survived, 67 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 27m) 916/1660 tested (733 survived, 67 timed out)
Mutation testing 55% (elapsed: ~1h 48m, remaining: ~1h 27m) 918/1660 tested (735 survived, 67 timed out)
Mutation testing 55% (elapsed: ~1h 48m, remaining: ~1h 27m) 919/1660 tested (736 survived, 67 timed out)
Mutation testing 55% (elapsed: ~1h 48m, remaining: ~1h 26m) 921/1660 tested (738 survived, 67 timed out)
Mutation testing 55% (elapsed: ~1h 48m, remaining: ~1h 26m) 922/1660 tested (739 survived, 67 timed out)
Mutation testing 55% (elapsed: ~1h 48m, remaining: ~1h 26m) 924/1660 tested (741 survived, 67 timed out)
Mutation testing 55% (elapsed: ~1h 48m, remaining: ~1h 26m) 925/1660 tested (742 survived, 67 timed out)
Mutation testing 55% (elapsed: ~1h 49m, remaining: ~1h 26m) 927/1660 tested (744 survived, 67 timed out)
Mutation testing 55% (elapsed: ~1h 49m, remaining: ~1h 26m) 928/1660 tested (745 survived, 67 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 25m) 930/1660 tested (747 survived, 67 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 25m) 931/1660 tested (748 survived, 67 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 25m) 933/1660 tested (750 survived, 67 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 25m) 934/1660 tested (751 survived, 67 timed out)
Mutation testing 56% (elapsed: ~1h 50m, remaining: ~1h 25m) 936/1660 tested (753 survived, 67 timed out)
Mutation testing 56% (elapsed: ~1h 50m, remaining: ~1h 25m) 937/1660 tested (754 survived, 67 timed out)
Mutation testing 56% (elapsed: ~1h 50m, remaining: ~1h 24m) 939/1660 tested (756 survived, 67 timed out)
Mutation testing 56% (elapsed: ~1h 50m, remaining: ~1h 24m) 940/1660 tested (757 survived, 67 timed out)
Mutation testing 56% (elapsed: ~1h 50m, remaining: ~1h 24m) 941/1660 tested (758 survived, 67 timed out)
Mutation testing 56% (elapsed: ~1h 50m, remaining: ~1h 24m) 943/1660 tested (760 survived, 67 timed out)
Mutation testing 56% (elapsed: ~1h 51m, remaining: ~1h 24m) 944/1660 tested (761 survived, 67 timed out)
Mutation testing 56% (elapsed: ~1h 51m, remaining: ~1h 23m) 946/1660 tested (763 survived, 67 timed out)
Mutation testing 57% (elapsed: ~1h 51m, remaining: ~1h 23m) 947/1660 tested (764 survived, 67 timed out)
Mutation testing 57% (elapsed: ~1h 51m, remaining: ~1h 23m) 949/1660 tested (766 survived, 67 timed out)
Mutation testing 57% (elapsed: ~1h 51m, remaining: ~1h 23m) 950/1660 tested (767 survived, 67 timed out)
Mutation testing 57% (elapsed: ~1h 51m, remaining: ~1h 23m) 952/1660 tested (769 survived, 67 timed out)
Mutation testing 57% (elapsed: ~1h 52m, remaining: ~1h 23m) 953/1660 tested (770 survived, 67 timed out)
Mutation testing 57% (elapsed: ~1h 52m, remaining: ~1h 22m) 955/1660 tested (772 survived, 67 timed out)
Mutation testing 57% (elapsed: ~1h 52m, remaining: ~1h 22m) 956/1660 tested (773 survived, 67 timed out)
Mutation testing 57% (elapsed: ~1h 52m, remaining: ~1h 22m) 958/1660 tested (775 survived, 67 timed out)
Mutation testing 57% (elapsed: ~1h 52m, remaining: ~1h 22m) 959/1660 tested (776 survived, 67 timed out)
Mutation testing 57% (elapsed: ~1h 52m, remaining: ~1h 22m) 961/1660 tested (778 survived, 67 timed out)
Mutation testing 57% (elapsed: ~1h 53m, remaining: ~1h 21m) 962/1660 tested (779 survived, 67 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 21m) 963/1660 tested (780 survived, 67 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 21m) 965/1660 tested (782 survived, 67 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 21m) 966/1660 tested (783 survived, 67 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 21m) 968/1660 tested (785 survived, 67 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 21m) 969/1660 tested (786 survived, 67 timed out)
Mutation testing 58% (elapsed: ~1h 54m, remaining: ~1h 20m) 971/1660 tested (788 survived, 67 timed out)
Mutation testing 58% (elapsed: ~1h 54m, remaining: ~1h 20m) 972/1660 tested (789 survived, 67 timed out)
Mutation testing 58% (elapsed: ~1h 54m, remaining: ~1h 20m) 974/1660 tested (791 survived, 67 timed out)
Mutation testing 58% (elapsed: ~1h 54m, remaining: ~1h 20m) 975/1660 tested (792 survived, 67 timed out)
Mutation testing 58% (elapsed: ~1h 54m, remaining: ~1h 20m) 977/1660 tested (794 survived, 67 timed out)
Mutation testing 58% (elapsed: ~1h 54m, remaining: ~1h 20m) 978/1660 tested (795 survived, 67 timed out)
Mutation testing 59% (elapsed: ~1h 55m, remaining: ~1h 19m) 980/1660 tested (797 survived, 67 timed out)
Mutation testing 59% (elapsed: ~1h 55m, remaining: ~1h 19m) 981/1660 tested (798 survived, 67 timed out)
Mutation testing 59% (elapsed: ~1h 55m, remaining: ~1h 19m) 983/1660 tested (800 survived, 67 timed out)
Mutation testing 59% (elapsed: ~1h 55m, remaining: ~1h 19m) 984/1660 tested (801 survived, 67 timed out)
Mutation testing 59% (elapsed: ~1h 55m, remaining: ~1h 19m) 986/1660 tested (803 survived, 67 timed out)
Mutation testing 59% (elapsed: ~1h 55m, remaining: ~1h 18m) 987/1660 tested (804 survived, 67 timed out)
Mutation testing 59% (elapsed: ~1h 56m, remaining: ~1h 18m) 989/1660 tested (806 survived, 67 timed out)
Mutation testing 59% (elapsed: ~1h 56m, remaining: ~1h 18m) 990/1660 tested (807 survived, 67 timed out)
Mutation testing 59% (elapsed: ~1h 56m, remaining: ~1h 18m) 992/1660 tested (809 survived, 67 timed out)
Mutation testing 59% (elapsed: ~1h 56m, remaining: ~1h 18m) 993/1660 tested (810 survived, 67 timed out)
Mutation testing 59% (elapsed: ~1h 56m, remaining: ~1h 17m) 995/1660 tested (812 survived, 67 timed out)
Mutation testing 60% (elapsed: ~1h 56m, remaining: ~1h 17m) 996/1660 tested (813 survived, 67 timed out)
Mutation testing 60% (elapsed: ~1h 57m, remaining: ~1h 17m) 997/1660 tested (814 survived, 67 timed out)
Mutation testing 60% (elapsed: ~1h 57m, remaining: ~1h 17m) 999/1660 tested (816 survived, 67 timed out)
Mutation testing 60% (elapsed: ~1h 57m, remaining: ~1h 17m) 1000/1660 tested (817 survived, 67 timed out)
Mutation testing 60% (elapsed: ~1h 57m, remaining: ~1h 17m) 1002/1660 tested (819 survived, 67 timed out)
Mutation testing 60% (elapsed: ~1h 57m, remaining: ~1h 17m) 1003/1660 tested (820 survived, 67 timed out)
Mutation testing 60% (elapsed: ~1h 57m, remaining: ~1h 16m) 1005/1660 tested (822 survived, 67 timed out)
Mutation testing 60% (elapsed: ~1h 58m, remaining: ~1h 16m) 1006/1660 tested (823 survived, 67 timed out)
Mutation testing 60% (elapsed: ~1h 58m, remaining: ~1h 16m) 1008/1660 tested (825 survived, 67 timed out)
Mutation testing 60% (elapsed: ~1h 58m, remaining: ~1h 16m) 1009/1660 tested (826 survived, 67 timed out)
Mutation testing 60% (elapsed: ~1h 58m, remaining: ~1h 16m) 1011/1660 tested (828 survived, 67 timed out)
Mutation testing 60% (elapsed: ~1h 58m, remaining: ~1h 15m) 1012/1660 tested (829 survived, 67 timed out)
Mutation testing 61% (elapsed: ~1h 58m, remaining: ~1h 15m) 1014/1660 tested (831 survived, 67 timed out)
Mutation testing 61% (elapsed: ~1h 59m, remaining: ~1h 15m) 1015/1660 tested (832 survived, 67 timed out)
Mutation testing 61% (elapsed: ~1h 59m, remaining: ~1h 15m) 1017/1660 tested (834 survived, 67 timed out)
Mutation testing 61% (elapsed: ~1h 59m, remaining: ~1h 15m) 1018/1660 tested (835 survived, 67 timed out)
Mutation testing 61% (elapsed: ~1h 59m, remaining: ~1h 14m) 1020/1660 tested (837 survived, 67 timed out)
Mutation testing 61% (elapsed: ~1h 59m, remaining: ~1h 14m) 1021/1660 tested (838 survived, 67 timed out)
Mutation testing 61% (elapsed: ~1h 59m, remaining: ~1h 14m) 1023/1660 tested (840 survived, 67 timed out)
Mutation testing 61% (elapsed: ~2h 0m, remaining: ~1h 14m) 1024/1660 tested (841 survived, 67 timed out)
Mutation testing 61% (elapsed: ~2h 0m, remaining: ~1h 14m) 1026/1660 tested (843 survived, 67 timed out)
Mutation testing 61% (elapsed: ~2h 0m, remaining: ~1h 14m) 1027/1660 tested (844 survived, 67 timed out)
Mutation testing 61% (elapsed: ~2h 0m, remaining: ~1h 13m) 1029/1660 tested (846 survived, 67 timed out)
Mutation testing 62% (elapsed: ~2h 0m, remaining: ~1h 13m) 1030/1660 tested (847 survived, 67 timed out)
Mutation testing 62% (elapsed: ~2h 0m, remaining: ~1h 13m) 1032/1660 tested (849 survived, 67 timed out)
Mutation testing 62% (elapsed: ~2h 1m, remaining: ~1h 13m) 1033/1660 tested (850 survived, 67 timed out)
Mutation testing 62% (elapsed: ~2h 1m, remaining: ~1h 13m) 1034/1660 tested (851 survived, 67 timed out)
Mutation testing 62% (elapsed: ~2h 1m, remaining: ~1h 13m) 1036/1660 tested (853 survived, 67 timed out)
Mutation testing 62% (elapsed: ~2h 1m, remaining: ~1h 12m) 1037/1660 tested (854 survived, 67 timed out)
Mutation testing 62% (elapsed: ~2h 1m, remaining: ~1h 12m) 1039/1660 tested (856 survived, 67 timed out)
Mutation testing 62% (elapsed: ~2h 1m, remaining: ~1h 12m) 1040/1660 tested (857 survived, 67 timed out)
Mutation testing 62% (elapsed: ~2h 2m, remaining: ~1h 12m) 1042/1660 tested (859 survived, 67 timed out)
Mutation testing 62% (elapsed: ~2h 2m, remaining: ~1h 12m) 1043/1660 tested (860 survived, 67 timed out)
Mutation testing 62% (elapsed: ~2h 2m, remaining: ~1h 11m) 1045/1660 tested (862 survived, 67 timed out)
Mutation testing 63% (elapsed: ~2h 2m, remaining: ~1h 11m) 1046/1660 tested (863 survived, 67 timed out)
Mutation testing 63% (elapsed: ~2h 2m, remaining: ~1h 11m) 1048/1660 tested (865 survived, 67 timed out)
Mutation testing 63% (elapsed: ~2h 2m, remaining: ~1h 11m) 1049/1660 tested (866 survived, 67 timed out)
Mutation testing 63% (elapsed: ~2h 3m, remaining: ~1h 11m) 1051/1660 tested (868 survived, 67 timed out)
Mutation testing 63% (elapsed: ~2h 3m, remaining: ~1h 11m) 1052/1660 tested (869 survived, 67 timed out)
Mutation testing 63% (elapsed: ~2h 3m, remaining: ~1h 10m) 1054/1660 tested (871 survived, 67 timed out)
Mutation testing 63% (elapsed: ~2h 3m, remaining: ~1h 10m) 1055/1660 tested (872 survived, 67 timed out)
Mutation testing 63% (elapsed: ~2h 3m, remaining: ~1h 10m) 1057/1660 tested (874 survived, 67 timed out)
Mutation testing 63% (elapsed: ~2h 3m, remaining: ~1h 10m) 1058/1660 tested (875 survived, 67 timed out)
Mutation testing 63% (elapsed: ~2h 4m, remaining: ~1h 10m) 1060/1660 tested (877 survived, 67 timed out)
Mutation testing 63% (elapsed: ~2h 4m, remaining: ~1h 10m) 1061/1660 tested (878 survived, 67 timed out)
Mutation testing 64% (elapsed: ~2h 4m, remaining: ~1h 9m) 1063/1660 tested (880 survived, 67 timed out)
Mutation testing 64% (elapsed: ~2h 4m, remaining: ~1h 9m) 1064/1660 tested (881 survived, 67 timed out)
Mutation testing 64% (elapsed: ~2h 4m, remaining: ~1h 9m) 1066/1660 tested (883 survived, 67 timed out)
Mutation testing 64% (elapsed: ~2h 4m, remaining: ~1h 9m) 1067/1660 tested (884 survived, 67 timed out)
Mutation testing 64% (elapsed: ~2h 5m, remaining: ~1h 9m) 1069/1660 tested (886 survived, 67 timed out)
Mutation testing 64% (elapsed: ~2h 5m, remaining: ~1h 9m) 1070/1660 tested (887 survived, 67 timed out)
Mutation testing 64% (elapsed: ~2h 5m, remaining: ~1h 8m) 1071/1660 tested (888 survived, 67 timed out)
Mutation testing 64% (elapsed: ~2h 5m, remaining: ~1h 8m) 1073/1660 tested (890 survived, 67 timed out)
Mutation testing 64% (elapsed: ~2h 5m, remaining: ~1h 8m) 1074/1660 tested (891 survived, 67 timed out)
Mutation testing 64% (elapsed: ~2h 5m, remaining: ~1h 8m) 1076/1660 tested (893 survived, 67 timed out)
Mutation testing 64% (elapsed: ~2h 6m, remaining: ~1h 8m) 1077/1660 tested (894 survived, 67 timed out)
Mutation testing 65% (elapsed: ~2h 6m, remaining: ~1h 7m) 1079/1660 tested (896 survived, 67 timed out)
Mutation testing 65% (elapsed: ~2h 6m, remaining: ~1h 7m) 1080/1660 tested (897 survived, 67 timed out)
Mutation testing 65% (elapsed: ~2h 6m, remaining: ~1h 7m) 1082/1660 tested (899 survived, 67 timed out)
Mutation testing 65% (elapsed: ~2h 6m, remaining: ~1h 7m) 1083/1660 tested (900 survived, 67 timed out)
Mutation testing 65% (elapsed: ~2h 6m, remaining: ~1h 7m) 1085/1660 tested (902 survived, 67 timed out)
Mutation testing 65% (elapsed: ~2h 7m, remaining: ~1h 7m) 1086/1660 tested (903 survived, 67 timed out)
Mutation testing 65% (elapsed: ~2h 7m, remaining: ~1h 6m) 1088/1660 tested (905 survived, 67 timed out)
Mutation testing 65% (elapsed: ~2h 7m, remaining: ~1h 6m) 1089/1660 tested (906 survived, 67 timed out)
Mutation testing 65% (elapsed: ~2h 7m, remaining: ~1h 6m) 1091/1660 tested (908 survived, 67 timed out)
Mutation testing 65% (elapsed: ~2h 7m, remaining: ~1h 6m) 1092/1660 tested (909 survived, 67 timed out)
Mutation testing 65% (elapsed: ~2h 7m, remaining: ~1h 6m) 1094/1660 tested (911 survived, 67 timed out)
Mutation testing 65% (elapsed: ~2h 8m, remaining: ~1h 6m) 1095/1660 tested (912 survived, 67 timed out)
Mutation testing 66% (elapsed: ~2h 8m, remaining: ~1h 5m) 1097/1660 tested (914 survived, 67 timed out)
Mutation testing 66% (elapsed: ~2h 8m, remaining: ~1h 5m) 1098/1660 tested (915 survived, 67 timed out)
Mutation testing 66% (elapsed: ~2h 8m, remaining: ~1h 5m) 1100/1660 tested (917 survived, 67 timed out)
Mutation testing 66% (elapsed: ~2h 8m, remaining: ~1h 5m) 1101/1660 tested (918 survived, 67 timed out)
Mutation testing 66% (elapsed: ~2h 8m, remaining: ~1h 5m) 1103/1660 tested (920 survived, 67 timed out)
Mutation testing 66% (elapsed: ~2h 9m, remaining: ~1h 4m) 1104/1660 tested (921 survived, 67 timed out)
Mutation testing 66% (elapsed: ~2h 9m, remaining: ~1h 4m) 1106/1660 tested (923 survived, 67 timed out)
Mutation testing 66% (elapsed: ~2h 9m, remaining: ~1h 4m) 1107/1660 tested (924 survived, 67 timed out)
Mutation testing 66% (elapsed: ~2h 9m, remaining: ~1h 4m) 1109/1660 tested (926 survived, 67 timed out)
Mutation testing 66% (elapsed: ~2h 9m, remaining: ~1h 4m) 1110/1660 tested (927 survived, 67 timed out)
Mutation testing 66% (elapsed: ~2h 9m, remaining: ~1h 4m) 1111/1660 tested (928 survived, 67 timed out)
Mutation testing 67% (elapsed: ~2h 10m, remaining: ~1h 3m) 1113/1660 tested (930 survived, 67 timed out)
Mutation testing 67% (elapsed: ~2h 10m, remaining: ~1h 3m) 1114/1660 tested (931 survived, 67 timed out)
Mutation testing 67% (elapsed: ~2h 10m, remaining: ~1h 3m) 1116/1660 tested (933 survived, 67 timed out)
Mutation testing 67% (elapsed: ~2h 10m, remaining: ~1h 3m) 1117/1660 tested (934 survived, 67 timed out)
Mutation testing 67% (elapsed: ~2h 10m, remaining: ~1h 3m) 1119/1660 tested (936 survived, 67 timed out)
Mutation testing 67% (elapsed: ~2h 10m, remaining: ~1h 3m) 1120/1660 tested (937 survived, 67 timed out)
Mutation testing 67% (elapsed: ~2h 11m, remaining: ~1h 2m) 1122/1660 tested (939 survived, 67 timed out)
Mutation testing 67% (elapsed: ~2h 11m, remaining: ~1h 2m) 1123/1660 tested (940 survived, 67 timed out)
Mutation testing 67% (elapsed: ~2h 11m, remaining: ~1h 2m) 1125/1660 tested (942 survived, 67 timed out)
Mutation testing 67% (elapsed: ~2h 11m, remaining: ~1h 2m) 1126/1660 tested (943 survived, 67 timed out)
Mutation testing 67% (elapsed: ~2h 11m, remaining: ~1h 2m) 1128/1660 tested (945 survived, 67 timed out)
Mutation testing 68% (elapsed: ~2h 11m, remaining: ~1h 2m) 1129/1660 tested (946 survived, 67 timed out)
Mutation testing 68% (elapsed: ~2h 12m, remaining: ~1h 1m) 1131/1660 tested (948 survived, 67 timed out)
Mutation testing 68% (elapsed: ~2h 12m, remaining: ~1h 1m) 1132/1660 tested (949 survived, 67 timed out)
Mutation testing 68% (elapsed: ~2h 12m, remaining: ~1h 1m) 1134/1660 tested (951 survived, 67 timed out)
Mutation testing 68% (elapsed: ~2h 12m, remaining: ~1h 1m) 1135/1660 tested (952 survived, 67 timed out)
Mutation testing 68% (elapsed: ~2h 12m, remaining: ~1h 1m) 1137/1660 tested (954 survived, 67 timed out)
Mutation testing 68% (elapsed: ~2h 12m, remaining: ~1h 0m) 1138/1660 tested (955 survived, 67 timed out)
Mutation testing 68% (elapsed: ~2h 13m, remaining: ~1h 0m) 1140/1660 tested (957 survived, 67 timed out)
Mutation testing 68% (elapsed: ~2h 13m, remaining: ~1h 0m) 1141/1660 tested (958 survived, 67 timed out)
Mutation testing 68% (elapsed: ~2h 13m, remaining: ~1h 0m) 1143/1660 tested (960 survived, 67 timed out)
Mutation testing 68% (elapsed: ~2h 13m, remaining: ~1h 0m) 1144/1660 tested (961 survived, 67 timed out)
Mutation testing 69% (elapsed: ~2h 13m, remaining: ~59m) 1146/1660 tested (963 survived, 67 timed out)
Mutation testing 69% (elapsed: ~2h 13m, remaining: ~59m) 1147/1660 tested (964 survived, 67 timed out)
Mutation testing 69% (elapsed: ~2h 14m, remaining: ~59m) 1148/1660 tested (965 survived, 67 timed out)
Mutation testing 69% (elapsed: ~2h 14m, remaining: ~59m) 1150/1660 tested (967 survived, 67 timed out)
Mutation testing 69% (elapsed: ~2h 14m, remaining: ~59m) 1151/1660 tested (968 survived, 67 timed out)
Mutation testing 69% (elapsed: ~2h 14m, remaining: ~59m) 1153/1660 tested (970 survived, 67 timed out)
Mutation testing 69% (elapsed: ~2h 14m, remaining: ~59m) 1154/1660 tested (971 survived, 67 timed out)
Mutation testing 69% (elapsed: ~2h 14m, remaining: ~58m) 1156/1660 tested (973 survived, 67 timed out)
Mutation testing 69% (elapsed: ~2h 15m, remaining: ~58m) 1157/1660 tested (974 survived, 67 timed out)
Mutation testing 69% (elapsed: ~2h 15m, remaining: ~58m) 1159/1660 tested (976 survived, 67 timed out)
Mutation testing 69% (elapsed: ~2h 15m, remaining: ~58m) 1160/1660 tested (977 survived, 67 timed out)
Mutation testing 70% (elapsed: ~2h 15m, remaining: ~58m) 1162/1660 tested (979 survived, 67 timed out)
Mutation testing 70% (elapsed: ~2h 15m, remaining: ~57m) 1163/1660 tested (980 survived, 67 timed out)
Mutation testing 70% (elapsed: ~2h 15m, remaining: ~57m) 1165/1660 tested (982 survived, 67 timed out)
Mutation testing 70% (elapsed: ~2h 16m, remaining: ~57m) 1166/1660 tested (983 survived, 67 timed out)
Mutation testing 70% (elapsed: ~2h 16m, remaining: ~57m) 1168/1660 tested (985 survived, 67 timed out)
Mutation testing 70% (elapsed: ~2h 16m, remaining: ~57m) 1169/1660 tested (986 survived, 67 timed out)
Mutation testing 70% (elapsed: ~2h 16m, remaining: ~57m) 1171/1660 tested (988 survived, 67 timed out)
Mutation testing 70% (elapsed: ~2h 16m, remaining: ~56m) 1172/1660 tested (989 survived, 67 timed out)
Mutation testing 70% (elapsed: ~2h 16m, remaining: ~56m) 1174/1660 tested (991 survived, 67 timed out)
Mutation testing 70% (elapsed: ~2h 17m, remaining: ~56m) 1175/1660 tested (992 survived, 67 timed out)
Mutation testing 70% (elapsed: ~2h 17m, remaining: ~56m) 1177/1660 tested (994 survived, 67 timed out)
Mutation testing 70% (elapsed: ~2h 17m, remaining: ~56m) 1178/1660 tested (995 survived, 67 timed out)
Mutation testing 71% (elapsed: ~2h 17m, remaining: ~55m) 1180/1660 tested (997 survived, 67 timed out)
Mutation testing 71% (elapsed: ~2h 17m, remaining: ~55m) 1181/1660 tested (998 survived, 67 timed out)
Mutation testing 71% (elapsed: ~2h 17m, remaining: ~55m) 1183/1660 tested (1000 survived, 67 timed out)
Mutation testing 71% (elapsed: ~2h 18m, remaining: ~55m) 1184/1660 tested (1001 survived, 67 timed out)
Mutation testing 71% (elapsed: ~2h 18m, remaining: ~55m) 1186/1660 tested (1003 survived, 67 timed out)
Mutation testing 71% (elapsed: ~2h 18m, remaining: ~55m) 1187/1660 tested (1004 survived, 67 timed out)
Mutation testing 71% (elapsed: ~2h 18m, remaining: ~55m) 1188/1660 tested (1005 survived, 67 timed out)
Mutation testing 71% (elapsed: ~2h 18m, remaining: ~54m) 1190/1660 tested (1007 survived, 67 timed out)
Mutation testing 71% (elapsed: ~2h 18m, remaining: ~54m) 1191/1660 tested (1008 survived, 67 timed out)
Mutation testing 71% (elapsed: ~2h 19m, remaining: ~54m) 1193/1660 tested (1010 survived, 67 timed out)
Mutation testing 71% (elapsed: ~2h 19m, remaining: ~54m) 1194/1660 tested (1011 survived, 67 timed out)
Mutation testing 72% (elapsed: ~2h 19m, remaining: ~54m) 1196/1660 tested (1013 survived, 67 timed out)
Mutation testing 72% (elapsed: ~2h 19m, remaining: ~53m) 1197/1660 tested (1014 survived, 67 timed out)
Mutation testing 72% (elapsed: ~2h 19m, remaining: ~53m) 1199/1660 tested (1016 survived, 67 timed out)
Mutation testing 72% (elapsed: ~2h 19m, remaining: ~53m) 1200/1660 tested (1017 survived, 67 timed out)
Mutation testing 72% (elapsed: ~2h 20m, remaining: ~53m) 1202/1660 tested (1019 survived, 67 timed out)
Mutation testing 72% (elapsed: ~2h 20m, remaining: ~53m) 1203/1660 tested (1020 survived, 67 timed out)
Mutation testing 72% (elapsed: ~2h 20m, remaining: ~52m) 1205/1660 tested (1022 survived, 67 timed out)
Mutation testing 72% (elapsed: ~2h 20m, remaining: ~52m) 1206/1660 tested (1023 survived, 67 timed out)
Mutation testing 72% (elapsed: ~2h 20m, remaining: ~52m) 1208/1660 tested (1025 survived, 67 timed out)
Mutation testing 72% (elapsed: ~2h 20m, remaining: ~52m) 1209/1660 tested (1026 survived, 67 timed out)
Mutation testing 72% (elapsed: ~2h 21m, remaining: ~52m) 1211/1660 tested (1028 survived, 67 timed out)
Mutation testing 73% (elapsed: ~2h 21m, remaining: ~52m) 1212/1660 tested (1029 survived, 67 timed out)
Mutation testing 73% (elapsed: ~2h 21m, remaining: ~51m) 1214/1660 tested (1031 survived, 67 timed out)
Mutation testing 73% (elapsed: ~2h 21m, remaining: ~51m) 1215/1660 tested (1032 survived, 67 timed out)
Mutation testing 73% (elapsed: ~2h 21m, remaining: ~51m) 1217/1660 tested (1034 survived, 67 timed out)
Mutation testing 73% (elapsed: ~2h 21m, remaining: ~51m) 1218/1660 tested (1035 survived, 67 timed out)
Mutation testing 73% (elapsed: ~2h 22m, remaining: ~51m) 1220/1660 tested (1037 survived, 67 timed out)
Mutation testing 73% (elapsed: ~2h 22m, remaining: ~51m) 1221/1660 tested (1038 survived, 67 timed out)
Mutation testing 73% (elapsed: ~2h 22m, remaining: ~50m) 1223/1660 tested (1040 survived, 67 timed out)
Mutation testing 73% (elapsed: ~2h 22m, remaining: ~50m) 1224/1660 tested (1041 survived, 67 timed out)
Mutation testing 73% (elapsed: ~2h 22m, remaining: ~50m) 1225/1660 tested (1042 survived, 67 timed out)
Mutation testing 73% (elapsed: ~2h 22m, remaining: ~50m) 1227/1660 tested (1044 survived, 67 timed out)
Mutation testing 73% (elapsed: ~2h 23m, remaining: ~50m) 1228/1660 tested (1045 survived, 67 timed out)
Mutation testing 74% (elapsed: ~2h 23m, remaining: ~50m) 1230/1660 tested (1047 survived, 67 timed out)
Mutation testing 74% (elapsed: ~2h 23m, remaining: ~49m) 1231/1660 tested (1048 survived, 67 timed out)
Mutation testing 74% (elapsed: ~2h 23m, remaining: ~49m) 1233/1660 tested (1050 survived, 67 timed out)
Mutation testing 74% (elapsed: ~2h 23m, remaining: ~49m) 1234/1660 tested (1051 survived, 67 timed out)
Mutation testing 74% (elapsed: ~2h 23m, remaining: ~49m) 1236/1660 tested (1053 survived, 67 timed out)
Mutation testing 74% (elapsed: ~2h 24m, remaining: ~49m) 1237/1660 tested (1054 survived, 67 timed out)
Mutation testing 74% (elapsed: ~2h 24m, remaining: ~48m) 1239/1660 tested (1056 survived, 67 timed out)
Mutation testing 74% (elapsed: ~2h 24m, remaining: ~48m) 1240/1660 tested (1057 survived, 67 timed out)
Mutation testing 74% (elapsed: ~2h 24m, remaining: ~48m) 1242/1660 tested (1059 survived, 67 timed out)
Mutation testing 74% (elapsed: ~2h 24m, remaining: ~48m) 1243/1660 tested (1060 survived, 67 timed out)
Mutation testing 75% (elapsed: ~2h 24m, remaining: ~48m) 1245/1660 tested (1062 survived, 67 timed out)
Mutation testing 75% (elapsed: ~2h 25m, remaining: ~48m) 1246/1660 tested (1063 survived, 67 timed out)
Mutation testing 75% (elapsed: ~2h 25m, remaining: ~47m) 1248/1660 tested (1065 survived, 67 timed out)
Mutation testing 75% (elapsed: ~2h 25m, remaining: ~47m) 1249/1660 tested (1066 survived, 67 timed out)
Mutation testing 75% (elapsed: ~2h 25m, remaining: ~47m) 1251/1660 tested (1068 survived, 67 timed out)
Mutation testing 75% (elapsed: ~2h 25m, remaining: ~47m) 1252/1660 tested (1069 survived, 67 timed out)
Mutation testing 75% (elapsed: ~2h 25m, remaining: ~47m) 1254/1660 tested (1071 survived, 67 timed out)
Mutation testing 75% (elapsed: ~2h 26m, remaining: ~47m) 1255/1660 tested (1072 survived, 67 timed out)
Mutation testing 75% (elapsed: ~2h 26m, remaining: ~46m) 1257/1660 tested (1074 survived, 67 timed out)
Mutation testing 75% (elapsed: ~2h 26m, remaining: ~46m) 1258/1660 tested (1075 survived, 67 timed out)
Mutation testing 75% (elapsed: ~2h 26m, remaining: ~46m) 1260/1660 tested (1077 survived, 67 timed out)
Mutation testing 75% (elapsed: ~2h 26m, remaining: ~46m) 1261/1660 tested (1078 survived, 67 timed out)
Mutation testing 76% (elapsed: ~2h 26m, remaining: ~46m) 1262/1660 tested (1079 survived, 67 timed out)
Mutation testing 76% (elapsed: ~2h 27m, remaining: ~46m) 1264/1660 tested (1081 survived, 67 timed out)
Mutation testing 76% (elapsed: ~2h 27m, remaining: ~45m) 1265/1660 tested (1082 survived, 67 timed out)
Mutation testing 76% (elapsed: ~2h 27m, remaining: ~45m) 1267/1660 tested (1084 survived, 67 timed out)
Mutation testing 76% (elapsed: ~2h 27m, remaining: ~45m) 1268/1660 tested (1085 survived, 67 timed out)
Mutation testing 76% (elapsed: ~2h 27m, remaining: ~45m) 1270/1660 tested (1087 survived, 67 timed out)
Mutation testing 76% (elapsed: ~2h 27m, remaining: ~45m) 1271/1660 tested (1088 survived, 67 timed out)
Mutation testing 76% (elapsed: ~2h 28m, remaining: ~44m) 1273/1660 tested (1090 survived, 67 timed out)
Mutation testing 76% (elapsed: ~2h 28m, remaining: ~44m) 1274/1660 tested (1091 survived, 67 timed out)
Mutation testing 76% (elapsed: ~2h 28m, remaining: ~44m) 1276/1660 tested (1093 survived, 67 timed out)
Mutation testing 76% (elapsed: ~2h 28m, remaining: ~44m) 1277/1660 tested (1094 survived, 67 timed out)
Mutation testing 77% (elapsed: ~2h 28m, remaining: ~44m) 1279/1660 tested (1096 survived, 67 timed out)
Mutation testing 77% (elapsed: ~2h 28m, remaining: ~44m) 1280/1660 tested (1097 survived, 67 timed out)
Mutation testing 77% (elapsed: ~2h 29m, remaining: ~43m) 1282/1660 tested (1099 survived, 67 timed out)
Mutation testing 77% (elapsed: ~2h 29m, remaining: ~43m) 1283/1660 tested (1100 survived, 67 timed out)
Mutation testing 77% (elapsed: ~2h 29m, remaining: ~43m) 1285/1660 tested (1102 survived, 67 timed out)
Mutation testing 77% (elapsed: ~2h 29m, remaining: ~43m) 1286/1660 tested (1103 survived, 67 timed out)
Mutation testing 77% (elapsed: ~2h 29m, remaining: ~43m) 1288/1660 tested (1105 survived, 67 timed out)
Mutation testing 77% (elapsed: ~2h 29m, remaining: ~43m) 1289/1660 tested (1106 survived, 67 timed out)
Mutation testing 77% (elapsed: ~2h 30m, remaining: ~42m) 1291/1660 tested (1108 survived, 67 timed out)
Mutation testing 77% (elapsed: ~2h 30m, remaining: ~42m) 1292/1660 tested (1109 survived, 67 timed out)
Mutation testing 77% (elapsed: ~2h 30m, remaining: ~42m) 1294/1660 tested (1111 survived, 67 timed out)
Mutation testing 78% (elapsed: ~2h 30m, remaining: ~42m) 1295/1660 tested (1112 survived, 67 timed out)
Mutation testing 78% (elapsed: ~2h 30m, remaining: ~42m) 1297/1660 tested (1114 survived, 67 timed out)
Mutation testing 78% (elapsed: ~2h 30m, remaining: ~42m) 1298/1660 tested (1115 survived, 67 timed out)
Mutation testing 78% (elapsed: ~2h 31m, remaining: ~41m) 1300/1660 tested (1117 survived, 67 timed out)
Mutation testing 78% (elapsed: ~2h 31m, remaining: ~41m) 1301/1660 tested (1118 survived, 67 timed out)
Mutation testing 78% (elapsed: ~2h 31m, remaining: ~41m) 1302/1660 tested (1119 survived, 67 timed out)
Mutation testing 78% (elapsed: ~2h 31m, remaining: ~41m) 1304/1660 tested (1121 survived, 67 timed out)
Mutation testing 78% (elapsed: ~2h 31m, remaining: ~41m) 1305/1660 tested (1122 survived, 67 timed out)
Mutation testing 78% (elapsed: ~2h 31m, remaining: ~41m) 1307/1660 tested (1124 survived, 67 timed out)
Mutation testing 78% (elapsed: ~2h 32m, remaining: ~40m) 1308/1660 tested (1125 survived, 67 timed out)
Mutation testing 78% (elapsed: ~2h 32m, remaining: ~40m) 1310/1660 tested (1127 survived, 67 timed out)
Mutation testing 78% (elapsed: ~2h 32m, remaining: ~40m) 1311/1660 tested (1128 survived, 67 timed out)
Mutation testing 79% (elapsed: ~2h 32m, remaining: ~40m) 1313/1660 tested (1130 survived, 67 timed out)
Mutation testing 79% (elapsed: ~2h 32m, remaining: ~40m) 1314/1660 tested (1131 survived, 67 timed out)
Mutation testing 79% (elapsed: ~2h 32m, remaining: ~39m) 1316/1660 tested (1133 survived, 67 timed out)
Mutation testing 79% (elapsed: ~2h 33m, remaining: ~39m) 1317/1660 tested (1134 survived, 67 timed out)
Mutation testing 79% (elapsed: ~2h 33m, remaining: ~39m) 1319/1660 tested (1136 survived, 67 timed out)
Mutation testing 79% (elapsed: ~2h 33m, remaining: ~39m) 1320/1660 tested (1137 survived, 67 timed out)
Mutation testing 79% (elapsed: ~2h 33m, remaining: ~39m) 1322/1660 tested (1139 survived, 67 timed out)
Mutation testing 79% (elapsed: ~2h 33m, remaining: ~39m) 1323/1660 tested (1140 survived, 67 timed out)
Mutation testing 79% (elapsed: ~2h 33m, remaining: ~38m) 1325/1660 tested (1142 survived, 67 timed out)
Mutation testing 79% (elapsed: ~2h 34m, remaining: ~38m) 1326/1660 tested (1143 survived, 67 timed out)
Mutation testing 79% (elapsed: ~2h 34m, remaining: ~38m) 1327/1660 tested (1144 survived, 67 timed out)
Mutation testing 80% (elapsed: ~2h 34m, remaining: ~38m) 1329/1660 tested (1146 survived, 67 timed out)
Mutation testing 80% (elapsed: ~2h 34m, remaining: ~38m) 1330/1660 tested (1147 survived, 67 timed out)
Mutation testing 80% (elapsed: ~2h 34m, remaining: ~38m) 1332/1660 tested (1149 survived, 67 timed out)
Mutation testing 80% (elapsed: ~2h 34m, remaining: ~37m) 1333/1660 tested (1150 survived, 67 timed out)
Mutation testing 80% (elapsed: ~2h 35m, remaining: ~37m) 1335/1660 tested (1152 survived, 67 timed out)
Mutation testing 80% (elapsed: ~2h 35m, remaining: ~37m) 1336/1660 tested (1153 survived, 67 timed out)
Mutation testing 80% (elapsed: ~2h 35m, remaining: ~37m) 1338/1660 tested (1155 survived, 67 timed out)
Mutation testing 80% (elapsed: ~2h 35m, remaining: ~37m) 1339/1660 tested (1156 survived, 67 timed out)
Mutation testing 80% (elapsed: ~2h 35m, remaining: ~37m) 1341/1660 tested (1158 survived, 67 timed out)
Mutation testing 80% (elapsed: ~2h 35m, remaining: ~36m) 1342/1660 tested (1159 survived, 67 timed out)
Mutation testing 80% (elapsed: ~2h 36m, remaining: ~36m) 1344/1660 tested (1161 survived, 67 timed out)
Mutation testing 81% (elapsed: ~2h 36m, remaining: ~36m) 1345/1660 tested (1162 survived, 67 timed out)
Mutation testing 81% (elapsed: ~2h 36m, remaining: ~36m) 1347/1660 tested (1164 survived, 67 timed out)
Mutation testing 81% (elapsed: ~2h 36m, remaining: ~36m) 1348/1660 tested (1165 survived, 67 timed out)
Mutation testing 81% (elapsed: ~2h 36m, remaining: ~35m) 1350/1660 tested (1167 survived, 67 timed out)
Mutation testing 81% (elapsed: ~2h 36m, remaining: ~35m) 1351/1660 tested (1168 survived, 67 timed out)
Mutation testing 81% (elapsed: ~2h 37m, remaining: ~35m) 1353/1660 tested (1170 survived, 67 timed out)
Mutation testing 81% (elapsed: ~2h 37m, remaining: ~35m) 1354/1660 tested (1171 survived, 67 timed out)
Mutation testing 81% (elapsed: ~2h 37m, remaining: ~35m) 1356/1660 tested (1173 survived, 67 timed out)
Mutation testing 81% (elapsed: ~2h 37m, remaining: ~35m) 1357/1660 tested (1174 survived, 67 timed out)
Mutation testing 81% (elapsed: ~2h 37m, remaining: ~34m) 1359/1660 tested (1176 survived, 67 timed out)
Mutation testing 81% (elapsed: ~2h 37m, remaining: ~34m) 1360/1660 tested (1177 survived, 67 timed out)
Mutation testing 82% (elapsed: ~2h 38m, remaining: ~34m) 1362/1660 tested (1179 survived, 67 timed out)
Mutation testing 82% (elapsed: ~2h 38m, remaining: ~34m) 1363/1660 tested (1180 survived, 67 timed out)
Mutation testing 82% (elapsed: ~2h 38m, remaining: ~34m) 1364/1660 tested (1181 survived, 67 timed out)
Mutation testing 82% (elapsed: ~2h 38m, remaining: ~34m) 1366/1660 tested (1183 survived, 67 timed out)
Mutation testing 82% (elapsed: ~2h 38m, remaining: ~34m) 1367/1660 tested (1184 survived, 67 timed out)
Mutation testing 82% (elapsed: ~2h 38m, remaining: ~33m) 1369/1660 tested (1186 survived, 67 timed out)
Mutation testing 82% (elapsed: ~2h 39m, remaining: ~33m) 1370/1660 tested (1187 survived, 67 timed out)
Mutation testing 82% (elapsed: ~2h 39m, remaining: ~33m) 1372/1660 tested (1189 survived, 67 timed out)
Mutation testing 82% (elapsed: ~2h 39m, remaining: ~33m) 1373/1660 tested (1190 survived, 67 timed out)
Mutation testing 82% (elapsed: ~2h 39m, remaining: ~33m) 1375/1660 tested (1192 survived, 67 timed out)
Mutation testing 82% (elapsed: ~2h 39m, remaining: ~32m) 1376/1660 tested (1193 survived, 67 timed out)
Mutation testing 83% (elapsed: ~2h 39m, remaining: ~32m) 1378/1660 tested (1195 survived, 67 timed out)
Mutation testing 83% (elapsed: ~2h 40m, remaining: ~32m) 1379/1660 tested (1196 survived, 67 timed out)
Mutation testing 83% (elapsed: ~2h 40m, remaining: ~32m) 1381/1660 tested (1198 survived, 67 timed out)
Mutation testing 83% (elapsed: ~2h 40m, remaining: ~32m) 1382/1660 tested (1199 survived, 67 timed out)
Mutation testing 83% (elapsed: ~2h 40m, remaining: ~32m) 1384/1660 tested (1201 survived, 67 timed out)
Mutation testing 83% (elapsed: ~2h 40m, remaining: ~31m) 1385/1660 tested (1202 survived, 67 timed out)
Mutation testing 83% (elapsed: ~2h 40m, remaining: ~31m) 1387/1660 tested (1204 survived, 67 timed out)
Mutation testing 83% (elapsed: ~2h 41m, remaining: ~31m) 1388/1660 tested (1205 survived, 67 timed out)
Mutation testing 83% (elapsed: ~2h 41m, remaining: ~31m) 1390/1660 tested (1207 survived, 67 timed out)
Mutation testing 83% (elapsed: ~2h 41m, remaining: ~31m) 1391/1660 tested (1208 survived, 67 timed out)
Mutation testing 83% (elapsed: ~2h 41m, remaining: ~30m) 1393/1660 tested (1210 survived, 67 timed out)
Mutation testing 83% (elapsed: ~2h 41m, remaining: ~30m) 1394/1660 tested (1211 survived, 67 timed out)
Mutation testing 84% (elapsed: ~2h 41m, remaining: ~30m) 1396/1660 tested (1213 survived, 67 timed out)
Mutation testing 84% (elapsed: ~2h 42m, remaining: ~30m) 1397/1660 tested (1214 survived, 67 timed out)
Mutation testing 84% (elapsed: ~2h 42m, remaining: ~30m) 1399/1660 tested (1216 survived, 67 timed out)
Mutation testing 84% (elapsed: ~2h 42m, remaining: ~30m) 1400/1660 tested (1217 survived, 67 timed out)
Mutation testing 84% (elapsed: ~2h 42m, remaining: ~30m) 1401/1660 tested (1218 survived, 67 timed out)
Mutation testing 84% (elapsed: ~2h 42m, remaining: ~29m) 1403/1660 tested (1220 survived, 67 timed out)
Mutation testing 84% (elapsed: ~2h 42m, remaining: ~29m) 1404/1660 tested (1221 survived, 67 timed out)
Mutation testing 84% (elapsed: ~2h 43m, remaining: ~29m) 1406/1660 tested (1223 survived, 67 timed out)
Mutation testing 84% (elapsed: ~2h 43m, remaining: ~29m) 1407/1660 tested (1224 survived, 67 timed out)
Mutation testing 84% (elapsed: ~2h 43m, remaining: ~29m) 1409/1660 tested (1226 survived, 67 timed out)
Mutation testing 84% (elapsed: ~2h 43m, remaining: ~28m) 1410/1660 tested (1227 survived, 67 timed out)
Mutation testing 85% (elapsed: ~2h 43m, remaining: ~28m) 1412/1660 tested (1229 survived, 67 timed out)
Mutation testing 85% (elapsed: ~2h 43m, remaining: ~28m) 1413/1660 tested (1230 survived, 67 timed out)
Mutation testing 85% (elapsed: ~2h 44m, remaining: ~28m) 1415/1660 tested (1232 survived, 67 timed out)
Mutation testing 85% (elapsed: ~2h 44m, remaining: ~28m) 1416/1660 tested (1233 survived, 67 timed out)
Mutation testing 85% (elapsed: ~2h 44m, remaining: ~28m) 1418/1660 tested (1235 survived, 67 timed out)
Mutation testing 85% (elapsed: ~2h 44m, remaining: ~27m) 1419/1660 tested (1236 survived, 67 timed out)
Mutation testing 85% (elapsed: ~2h 44m, remaining: ~27m) 1421/1660 tested (1238 survived, 67 timed out)
Mutation testing 85% (elapsed: ~2h 44m, remaining: ~27m) 1422/1660 tested (1239 survived, 67 timed out)
Mutation testing 85% (elapsed: ~2h 45m, remaining: ~27m) 1424/1660 tested (1241 survived, 67 timed out)
Mutation testing 85% (elapsed: ~2h 45m, remaining: ~27m) 1425/1660 tested (1242 survived, 67 timed out)
Mutation testing 85% (elapsed: ~2h 45m, remaining: ~26m) 1427/1660 tested (1244 survived, 67 timed out)
Mutation testing 86% (elapsed: ~2h 45m, remaining: ~26m) 1428/1660 tested (1245 survived, 67 timed out)
Mutation testing 86% (elapsed: ~2h 45m, remaining: ~26m) 1430/1660 tested (1247 survived, 67 timed out)
Mutation testing 86% (elapsed: ~2h 45m, remaining: ~26m) 1431/1660 tested (1248 survived, 67 timed out)
Mutation testing 86% (elapsed: ~2h 46m, remaining: ~26m) 1432/1660 tested (1249 survived, 67 timed out)
Mutation testing 86% (elapsed: ~2h 46m, remaining: ~26m) 1434/1660 tested (1251 survived, 67 timed out)
Mutation testing 86% (elapsed: ~2h 46m, remaining: ~26m) 1435/1660 tested (1252 survived, 67 timed out)
Mutation testing 86% (elapsed: ~2h 46m, remaining: ~25m) 1437/1660 tested (1254 survived, 67 timed out)
Mutation testing 86% (elapsed: ~2h 46m, remaining: ~25m) 1438/1660 tested (1255 survived, 67 timed out)
Mutation testing 86% (elapsed: ~2h 46m, remaining: ~25m) 1440/1660 tested (1257 survived, 67 timed out)
Mutation testing 86% (elapsed: ~2h 47m, remaining: ~25m) 1441/1660 tested (1258 survived, 67 timed out)
Mutation testing 86% (elapsed: ~2h 47m, remaining: ~25m) 1443/1660 tested (1260 survived, 67 timed out)
Mutation testing 86% (elapsed: ~2h 47m, remaining: ~25m) 1444/1660 tested (1261 survived, 67 timed out)
Mutation testing 87% (elapsed: ~2h 47m, remaining: ~24m) 1446/1660 tested (1263 survived, 67 timed out)
Mutation testing 87% (elapsed: ~2h 47m, remaining: ~24m) 1447/1660 tested (1264 survived, 67 timed out)
Mutation testing 87% (elapsed: ~2h 47m, remaining: ~24m) 1449/1660 tested (1266 survived, 67 timed out)
Mutation testing 87% (elapsed: ~2h 48m, remaining: ~24m) 1450/1660 tested (1267 survived, 67 timed out)
Mutation testing 87% (elapsed: ~2h 48m, remaining: ~24m) 1452/1660 tested (1269 survived, 67 timed out)
Mutation testing 87% (elapsed: ~2h 48m, remaining: ~23m) 1453/1660 tested (1270 survived, 67 timed out)
Mutation testing 87% (elapsed: ~2h 48m, remaining: ~23m) 1455/1660 tested (1272 survived, 67 timed out)
Mutation testing 87% (elapsed: ~2h 48m, remaining: ~23m) 1456/1660 tested (1273 survived, 67 timed out)
Mutation testing 87% (elapsed: ~2h 48m, remaining: ~23m) 1458/1660 tested (1275 survived, 67 timed out)
Mutation testing 87% (elapsed: ~2h 49m, remaining: ~23m) 1459/1660 tested (1276 survived, 67 timed out)
Mutation testing 88% (elapsed: ~2h 49m, remaining: ~23m) 1461/1660 tested (1278 survived, 67 timed out)
Mutation testing 88% (elapsed: ~2h 49m, remaining: ~22m) 1462/1660 tested (1279 survived, 67 timed out)
Mutation testing 88% (elapsed: ~2h 49m, remaining: ~22m) 1463/1660 tested (1280 survived, 67 timed out)
Mutation testing 88% (elapsed: ~2h 49m, remaining: ~22m) 1465/1660 tested (1282 survived, 67 timed out)
Mutation testing 88% (elapsed: ~2h 49m, remaining: ~22m) 1466/1660 tested (1283 survived, 67 timed out)
Mutation testing 88% (elapsed: ~2h 50m, remaining: ~22m) 1468/1660 tested (1285 survived, 67 timed out)
Mutation testing 88% (elapsed: ~2h 50m, remaining: ~22m) 1469/1660 tested (1286 survived, 67 timed out)
Mutation testing 88% (elapsed: ~2h 50m, remaining: ~21m) 1471/1660 tested (1288 survived, 67 timed out)
Mutation testing 88% (elapsed: ~2h 50m, remaining: ~21m) 1472/1660 tested (1289 survived, 67 timed out)
Mutation testing 88% (elapsed: ~2h 50m, remaining: ~21m) 1474/1660 tested (1291 survived, 67 timed out)
Mutation testing 88% (elapsed: ~2h 50m, remaining: ~21m) 1475/1660 tested (1292 survived, 67 timed out)
Mutation testing 88% (elapsed: ~2h 51m, remaining: ~21m) 1477/1660 tested (1294 survived, 67 timed out)
Mutation testing 89% (elapsed: ~2h 51m, remaining: ~21m) 1478/1660 tested (1295 survived, 67 timed out)
Mutation testing 89% (elapsed: ~2h 51m, remaining: ~20m) 1480/1660 tested (1297 survived, 67 timed out)
Mutation testing 89% (elapsed: ~2h 51m, remaining: ~20m) 1481/1660 tested (1298 survived, 67 timed out)
Mutation testing 89% (elapsed: ~2h 51m, remaining: ~20m) 1483/1660 tested (1300 survived, 67 timed out)
Mutation testing 89% (elapsed: ~2h 51m, remaining: ~20m) 1484/1660 tested (1301 survived, 67 timed out)
Mutation testing 89% (elapsed: ~2h 52m, remaining: ~20m) 1486/1660 tested (1303 survived, 67 timed out)
Mutation testing 89% (elapsed: ~2h 52m, remaining: ~20m) 1487/1660 tested (1304 survived, 67 timed out)
Mutation testing 89% (elapsed: ~2h 52m, remaining: ~19m) 1489/1660 tested (1306 survived, 67 timed out)
Mutation testing 89% (elapsed: ~2h 52m, remaining: ~19m) 1490/1660 tested (1307 survived, 67 timed out)
Mutation testing 89% (elapsed: ~2h 52m, remaining: ~19m) 1492/1660 tested (1309 survived, 67 timed out)
Mutation testing 89% (elapsed: ~2h 52m, remaining: ~19m) 1493/1660 tested (1310 survived, 67 timed out)
Mutation testing 90% (elapsed: ~2h 53m, remaining: ~19m) 1495/1660 tested (1312 survived, 67 timed out)
Mutation testing 90% (elapsed: ~2h 53m, remaining: ~18m) 1496/1660 tested (1313 survived, 67 timed out)
Mutation testing 90% (elapsed: ~2h 53m, remaining: ~18m) 1498/1660 tested (1315 survived, 67 timed out)
Mutation testing 90% (elapsed: ~2h 53m, remaining: ~18m) 1499/1660 tested (1316 survived, 67 timed out)
Mutation testing 90% (elapsed: ~2h 53m, remaining: ~18m) 1500/1660 tested (1317 survived, 67 timed out)
Mutation testing 90% (elapsed: ~2h 53m, remaining: ~18m) 1502/1660 tested (1319 survived, 67 timed out)
Mutation testing 90% (elapsed: ~2h 54m, remaining: ~18m) 1503/1660 tested (1320 survived, 67 timed out)
Mutation testing 90% (elapsed: ~2h 54m, remaining: ~17m) 1505/1660 tested (1322 survived, 67 timed out)
Mutation testing 90% (elapsed: ~2h 54m, remaining: ~17m) 1506/1660 tested (1323 survived, 67 timed out)
Mutation testing 90% (elapsed: ~2h 54m, remaining: ~17m) 1508/1660 tested (1325 survived, 67 timed out)
Mutation testing 90% (elapsed: ~2h 54m, remaining: ~17m) 1509/1660 tested (1326 survived, 67 timed out)
Mutation testing 91% (elapsed: ~2h 54m, remaining: ~17m) 1511/1660 tested (1328 survived, 67 timed out)
Mutation testing 91% (elapsed: ~2h 55m, remaining: ~17m) 1512/1660 tested (1329 survived, 67 timed out)
Mutation testing 91% (elapsed: ~2h 55m, remaining: ~16m) 1514/1660 tested (1331 survived, 67 timed out)
Mutation testing 91% (elapsed: ~2h 55m, remaining: ~16m) 1515/1660 tested (1332 survived, 67 timed out)
Mutation testing 91% (elapsed: ~2h 55m, remaining: ~16m) 1517/1660 tested (1334 survived, 67 timed out)
Mutation testing 91% (elapsed: ~2h 55m, remaining: ~16m) 1518/1660 tested (1335 survived, 67 timed out)
Mutation testing 91% (elapsed: ~2h 55m, remaining: ~16m) 1520/1660 tested (1337 survived, 67 timed out)
Mutation testing 91% (elapsed: ~2h 56m, remaining: ~16m) 1521/1660 tested (1338 survived, 67 timed out)
Mutation testing 91% (elapsed: ~2h 56m, remaining: ~15m) 1523/1660 tested (1340 survived, 67 timed out)
Mutation testing 91% (elapsed: ~2h 56m, remaining: ~15m) 1524/1660 tested (1341 survived, 67 timed out)
Mutation testing 91% (elapsed: ~2h 56m, remaining: ~15m) 1526/1660 tested (1343 survived, 67 timed out)
Mutation testing 91% (elapsed: ~2h 56m, remaining: ~15m) 1527/1660 tested (1344 survived, 67 timed out)
Mutation testing 92% (elapsed: ~2h 56m, remaining: ~15m) 1529/1660 tested (1346 survived, 67 timed out)
Mutation testing 92% (elapsed: ~2h 57m, remaining: ~15m) 1530/1660 tested (1347 survived, 67 timed out)
Mutation testing 92% (elapsed: ~2h 57m, remaining: ~14m) 1532/1660 tested (1349 survived, 67 timed out)
Mutation testing 92% (elapsed: ~2h 57m, remaining: ~14m) 1533/1660 tested (1350 survived, 67 timed out)
Mutation testing 92% (elapsed: ~2h 57m, remaining: ~14m) 1535/1660 tested (1352 survived, 67 timed out)
Mutation testing 92% (elapsed: ~2h 57m, remaining: ~14m) 1536/1660 tested (1353 survived, 67 timed out)
Mutation testing 92% (elapsed: ~2h 57m, remaining: ~14m) 1537/1660 tested (1354 survived, 67 timed out)
Mutation testing 92% (elapsed: ~2h 58m, remaining: ~13m) 1539/1660 tested (1356 survived, 67 timed out)
Mutation testing 92% (elapsed: ~2h 58m, remaining: ~13m) 1540/1660 tested (1357 survived, 67 timed out)
Mutation testing 92% (elapsed: ~2h 58m, remaining: ~13m) 1542/1660 tested (1359 survived, 67 timed out)
Mutation testing 92% (elapsed: ~2h 58m, remaining: ~13m) 1543/1660 tested (1360 survived, 67 timed out)
Mutation testing 93% (elapsed: ~2h 58m, remaining: ~13m) 1545/1660 tested (1362 survived, 67 timed out)
Mutation testing 93% (elapsed: ~2h 58m, remaining: ~13m) 1546/1660 tested (1363 survived, 67 timed out)
Mutation testing 93% (elapsed: ~2h 59m, remaining: ~12m) 1548/1660 tested (1365 survived, 67 timed out)
Mutation testing 93% (elapsed: ~2h 59m, remaining: ~12m) 1549/1660 tested (1366 survived, 67 timed out)
Mutation testing 93% (elapsed: ~2h 59m, remaining: ~12m) 1551/1660 tested (1368 survived, 67 timed out)
Mutation testing 93% (elapsed: ~2h 59m, remaining: ~12m) 1552/1660 tested (1369 survived, 67 timed out)
Mutation testing 93% (elapsed: ~2h 59m, remaining: ~12m) 1554/1660 tested (1371 survived, 67 timed out)
Mutation testing 93% (elapsed: ~2h 59m, remaining: ~12m) 1555/1660 tested (1372 survived, 67 timed out)
Mutation testing 93% (elapsed: ~3h 0m, remaining: ~11m) 1557/1660 tested (1374 survived, 67 timed out)
Mutation testing 93% (elapsed: ~3h 0m, remaining: ~11m) 1558/1660 tested (1375 survived, 67 timed out)
Mutation testing 93% (elapsed: ~3h 0m, remaining: ~11m) 1560/1660 tested (1377 survived, 67 timed out)
Mutation testing 94% (elapsed: ~3h 0m, remaining: ~11m) 1561/1660 tested (1378 survived, 67 timed out)
Mutation testing 94% (elapsed: ~3h 0m, remaining: ~11m) 1563/1660 tested (1380 survived, 67 timed out)
Mutation testing 94% (elapsed: ~3h 0m, remaining: ~11m) 1564/1660 tested (1381 survived, 67 timed out)
Mutation testing 94% (elapsed: ~3h 1m, remaining: ~10m) 1566/1660 tested (1383 survived, 67 timed out)
Mutation testing 94% (elapsed: ~3h 1m, remaining: ~10m) 1567/1660 tested (1384 survived, 67 timed out)
Mutation testing 94% (elapsed: ~3h 1m, remaining: ~10m) 1569/1660 tested (1386 survived, 67 timed out)
Mutation testing 94% (elapsed: ~3h 1m, remaining: ~10m) 1570/1660 tested (1387 survived, 67 timed out)
Mutation testing 94% (elapsed: ~3h 1m, remaining: ~10m) 1572/1660 tested (1389 survived, 67 timed out)
Mutation testing 94% (elapsed: ~3h 1m, remaining: ~10m) 1573/1660 tested (1390 survived, 67 timed out)
Mutation testing 94% (elapsed: ~3h 2m, remaining: ~9m) 1574/1660 tested (1391 survived, 67 timed out)
Mutation testing 94% (elapsed: ~3h 2m, remaining: ~9m) 1576/1660 tested (1393 survived, 67 timed out)
Mutation testing 95% (elapsed: ~3h 2m, remaining: ~9m) 1577/1660 tested (1394 survived, 67 timed out)
Mutation testing 95% (elapsed: ~3h 2m, remaining: ~9m) 1579/1660 tested (1396 survived, 67 timed out)
Mutation testing 95% (elapsed: ~3h 2m, remaining: ~9m) 1580/1660 tested (1397 survived, 67 timed out)
Mutation testing 95% (elapsed: ~3h 2m, remaining: ~9m) 1582/1660 tested (1399 survived, 67 timed out)
Mutation testing 95% (elapsed: ~3h 3m, remaining: ~8m) 1583/1660 tested (1400 survived, 67 timed out)
Mutation testing 95% (elapsed: ~3h 3m, remaining: ~8m) 1585/1660 tested (1402 survived, 67 timed out)
Mutation testing 95% (elapsed: ~3h 3m, remaining: ~8m) 1586/1660 tested (1403 survived, 67 timed out)
Mutation testing 95% (elapsed: ~3h 3m, remaining: ~8m) 1588/1660 tested (1405 survived, 67 timed out)
Mutation testing 95% (elapsed: ~3h 3m, remaining: ~8m) 1589/1660 tested (1406 survived, 67 timed out)
Mutation testing 95% (elapsed: ~3h 3m, remaining: ~7m) 1591/1660 tested (1408 survived, 67 timed out)
Mutation testing 95% (elapsed: ~3h 4m, remaining: ~7m) 1592/1660 tested (1409 survived, 67 timed out)
Mutation testing 96% (elapsed: ~3h 4m, remaining: ~7m) 1594/1660 tested (1411 survived, 67 timed out)
Mutation testing 96% (elapsed: ~3h 4m, remaining: ~7m) 1595/1660 tested (1412 survived, 67 timed out)
Mutation testing 96% (elapsed: ~3h 4m, remaining: ~7m) 1597/1660 tested (1414 survived, 67 timed out)
Mutation testing 96% (elapsed: ~3h 4m, remaining: ~7m) 1598/1660 tested (1415 survived, 67 timed out)
Mutation testing 96% (elapsed: ~3h 4m, remaining: ~6m) 1600/1660 tested (1417 survived, 67 timed out)
Mutation testing 96% (elapsed: ~3h 5m, remaining: ~6m) 1601/1660 tested (1418 survived, 67 timed out)
Mutation testing 96% (elapsed: ~3h 5m, remaining: ~6m) 1603/1660 tested (1420 survived, 67 timed out)
Mutation testing 96% (elapsed: ~3h 5m, remaining: ~6m) 1604/1660 tested (1421 survived, 67 timed out)
Mutation testing 96% (elapsed: ~3h 5m, remaining: ~6m) 1606/1660 tested (1423 survived, 67 timed out)
Mutation testing 96% (elapsed: ~3h 5m, remaining: ~6m) 1607/1660 tested (1424 survived, 67 timed out)
Mutation testing 96% (elapsed: ~3h 5m, remaining: ~5m) 1609/1660 tested (1426 survived, 67 timed out)
Mutation testing 96% (elapsed: ~3h 6m, remaining: ~5m) 1610/1660 tested (1427 survived, 67 timed out)
Mutation testing 97% (elapsed: ~3h 6m, remaining: ~5m) 1611/1660 tested (1428 survived, 67 timed out)
Mutation testing 97% (elapsed: ~3h 6m, remaining: ~5m) 1613/1660 tested (1430 survived, 67 timed out)
Mutation testing 97% (elapsed: ~3h 6m, remaining: ~5m) 1614/1660 tested (1431 survived, 67 timed out)
Mutation testing 97% (elapsed: ~3h 6m, remaining: ~5m) 1616/1660 tested (1433 survived, 67 timed out)
Mutation testing 97% (elapsed: ~3h 6m, remaining: ~4m) 1617/1660 tested (1434 survived, 67 timed out)
Mutation testing 97% (elapsed: ~3h 7m, remaining: ~4m) 1619/1660 tested (1436 survived, 67 timed out)
Mutation testing 97% (elapsed: ~3h 7m, remaining: ~4m) 1620/1660 tested (1437 survived, 67 timed out)
Mutation testing 97% (elapsed: ~3h 7m, remaining: ~4m) 1622/1660 tested (1439 survived, 67 timed out)
Mutation testing 97% (elapsed: ~3h 7m, remaining: ~4m) 1623/1660 tested (1440 survived, 67 timed out)
Mutation testing 97% (elapsed: ~3h 7m, remaining: ~4m) 1625/1660 tested (1442 survived, 67 timed out)
Mutation testing 97% (elapsed: ~3h 7m, remaining: ~3m) 1626/1660 tested (1443 survived, 67 timed out)
Mutation testing 98% (elapsed: ~3h 8m, remaining: ~3m) 1628/1660 tested (1445 survived, 67 timed out)
Mutation testing 98% (elapsed: ~3h 8m, remaining: ~3m) 1629/1660 tested (1446 survived, 67 timed out)
Mutation testing 98% (elapsed: ~3h 8m, remaining: ~3m) 1631/1660 tested (1448 survived, 67 timed out)
Mutation testing 98% (elapsed: ~3h 8m, remaining: ~3m) 1632/1660 tested (1449 survived, 67 timed out)
Mutation testing 98% (elapsed: ~3h 8m, remaining: ~3m) 1634/1660 tested (1451 survived, 67 timed out)
Mutation testing 98% (elapsed: ~3h 8m, remaining: ~2m) 1635/1660 tested (1452 survived, 67 timed out)
Mutation testing 98% (elapsed: ~3h 9m, remaining: ~2m) 1637/1660 tested (1454 survived, 67 timed out)
Mutation testing 98% (elapsed: ~3h 9m, remaining: ~2m) 1638/1660 tested (1455 survived, 67 timed out)
Mutation testing 98% (elapsed: ~3h 9m, remaining: ~2m) 1640/1660 tested (1457 survived, 67 timed out)
Mutation testing 98% (elapsed: ~3h 9m, remaining: ~2m) 1641/1660 tested (1458 survived, 67 timed out)
Mutation testing 98% (elapsed: ~3h 9m, remaining: ~1m) 1643/1660 tested (1460 survived, 67 timed out)
Mutation testing 99% (elapsed: ~3h 9m, remaining: ~1m) 1644/1660 tested (1461 survived, 67 timed out)
Mutation testing 99% (elapsed: ~3h 10m, remaining: ~1m) 1646/1660 tested (1463 survived, 67 timed out)
Mutation testing 99% (elapsed: ~3h 10m, remaining: ~1m) 1647/1660 tested (1464 survived, 67 timed out)
Mutation testing 99% (elapsed: ~3h 10m, remaining: ~1m) 1648/1660 tested (1465 survived, 67 timed out)
Mutation testing 99% (elapsed: ~3h 10m, remaining: ~1m) 1650/1660 tested (1467 survived, 67 timed out)
Mutation testing 99% (elapsed: ~3h 10m, remaining: ~1m) 1651/1660 tested (1468 survived, 67 timed out)
Mutation testing 99% (elapsed: ~3h 10m, remaining: <1m) 1653/1660 tested (1470 survived, 67 timed out)
Mutation testing 99% (elapsed: ~3h 11m, remaining: <1m) 1654/1660 tested (1471 survived, 67 timed out)
Mutation testing 99% (elapsed: ~3h 11m, remaining: <1m) 1656/1660 tested (1473 survived, 67 timed out)
Mutation testing 99% (elapsed: ~3h 11m, remaining: <1m) 1657/1660 tested (1474 survived, 67 timed out)
Mutation testing 99% (elapsed: ~3h 11m, remaining: <1m) 1659/1660 tested (1476 survived, 67 timed out)

All tests
  ✓ All tests (killed 116)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (false) {

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (1 === 0) {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promisfe", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("deferred", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap(promise, function () {});

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           null("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(null, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(42, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap({}, definition);

[Survived] PrecomputedMutator
q.js:42:16
-       } else if (typeof exports === "object" && typeof module === "object") {
+       } else if (true) {

[Survived] PrecomputedMutator
q.js:42:16
-       } else if (typeof exports === "object" && typeof module === "object") {
+       } else if ("string") {

[Survived] PrecomputedMutator
q.js:42:16
-       } else if (typeof exports === "object" && typeof module === "object") {
+       } else if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (true) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (1) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (null) {

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           null(definition);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(function () {
+     throw new Error('Buggy!');
+   });

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(function () {
+     nextTick.laterQueue.push(noop);
+   });

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (false) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (true) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (1 === 2) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.noConflict()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!false()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!null()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (false) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if ('undefined' === typeof window) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (Object.prototype.toString.call(window) === '[object global]') {

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = noop();

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   null();

[Survived] PrecomputedMutator
q.js:125:23
-               runSingle(task, domain);
+               runSingle(() => task(), domain);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (0) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (1 < 2) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (typeof isNodeJS === 'undefined') {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (true) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (null) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       global.Q.exit();

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       null();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(requestAnimationFrame(flush));

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   0(flush, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(alert('Flushing tasks...'), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(console.log(global.Q), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, '1');

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (false) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (null) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (undefined) {

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (undefined) {

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               null();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (1 < 2) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (false) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (1 > 0) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "undefined" ? false : true) {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = null(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(function () {
+     return flush();
+   }, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind({}, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:206:17
-                   setImmediate(flush);
+                   0(flush);

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(function () {});

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(1);

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (false) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (0) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if ('undefined') {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               null(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage('some string');

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage({
+     foo: 'bar'
+   });

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               0 === 1(flush, 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(null);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(function () {/* empty function */});

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               undefined(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               alert(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(1 + flush, 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing === false) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (this.length > 0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (index < this.length - 1) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (null);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (true) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index < this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (0 in this) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index > length) {

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index > length; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index == length; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index + 1) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = index + 1) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (this.hasOwnProperty(index)) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index < this.length) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(0);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(this);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback + 1(basis, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, 0, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this.length, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], null);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], 42);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], this);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; Math.random()) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; array_indexOf(value, this)) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (i === value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               Math.random(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               callback.length(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback(value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(null, [value, index, self]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(self, index, value, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call([]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(42, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(function () {}, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, 1 / 0, index, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, 5));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, function () {}));

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in Object.prototype) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in function () {
+     return 42;
+   }) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object.hasOwnProperty(key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (Array.prototype.hasOwnProperty.call(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(this)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(window)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(Math)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (Array.isArray(object, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, "toString")) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, null)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, 1)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(null);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(1);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(function () {});

[Survived] PrecomputedMutator
q.js:347:23
-   var object_toString = uncurryThis(Object.prototype.toString);
+   var object_toString = eval(Object.prototype.toString);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           '[object Object]'(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           1(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(null) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString({}) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString([]) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof globalThis.ReturnValue !== "undefined") {

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof someUndefinedVariable !== "undefined") {

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (promise.stack && typeof error === "object" && error !== null && error.stack && hasStacks

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p ? 1 : 0; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p.source; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p instanceof Error; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; null) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; 1) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p.length) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ < p.stackCounter) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(null);

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty({});

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   Object.defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(null, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(42, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(function () {}, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, this.__minimumStackCounter__, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, Math.random(), {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, new Date().getTime(), {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks = [](error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift("error.stackStrace");

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(Math.random());

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(this.someNonExistentProperty);

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.concat.join("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join(" From previous event:\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join(STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\nAnother event separator:\n");

[Survived] PrecomputedMutator
q.js:397:21
-           var stack = filterStackString(concatedStacks);
+           var stack = "<PLACEHOLDER>"(concatedStacks);

[Survived] PrecomputedMutator
q.js:397:21
-           var stack = filterStackString(concatedStacks);
+           var stack = [](concatedStacks);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(error.stack.toString());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(promise.stack);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(new Error().stack);

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(null);

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, error.stack.toString(), {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:403:17
-       var lines = stackString.split("\n");
+       var lines = ['\n']("\n");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\n<script>alert('Mutated code!');</script>\n");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\n\t\t");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\n</body>");

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > -1; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i in lines; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (line !== null && line !== undefined && !isInternalFrame(line) && !isNodeFrame(line)) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!(isInternalFrame(line) || isNodeFrame(line)) && line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!object_hasOwnProperty(window, 'line') && !isInternalFrame(line) && !isNodeFrame(line)) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!typeof isInternalFrame !== 'function'(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(false) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !typeof isNodeFrame !== 'function'(line) && line) {

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push("<PLACEHOLDER>");

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(Math.random());

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(new Error());

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("<br>");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.lastIndexOf("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec("1: " + stackLine);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.toUpperCase());

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(global.stackLine);

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (attempt1 && attempt1.length > 1) {

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], value.length(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(value.length)];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(this.value)];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[2])];

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2 || []) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2 || null) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2 || {
+     foo: 'bar'
+   }) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(Infinity)];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(1 / 0)];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(new Date())];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec("[object GlobalError]");

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(/.*@(.+):(\d+)$/g);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(null);

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (/.*@(.+):(\d+)$/.exec(stackLine)[0]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (/.*@(.+):(\d+)$/.exec(null)) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (/.*@(.+):(\d+)$/.exec("some string")) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "0"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], true(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(1)];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number('PLACEHOLDER')];

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = null(stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = [](stackLine);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine + '');

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(global.stackLine);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[0] === '') {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (typeof fileNameAndLineNumber === 'undefined') {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (typeof hasStacks === "undefined") {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks === null) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\n<script>console.log('This is an injected script');</script>\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\n<!-- This is an injected comment -->\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\n" + Math.random() + "\n");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = "PLACEHOLDER".indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("<@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("@module.js") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("@" + new Date().getTime()) > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (typeof fileNameAndLineNumber === 'undefined') {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (true) {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.bind(null, 1), arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, [].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, Object.keys(arguments));

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, arguments.callee);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (Object.prototype.toString.call(value) === '[object Promise]') {

[Survived] PrecomputedMutator
q.js:506:9
-       if (isPromiseAlike(value)) {
+       if (value && typeof value === 'object' && typeof value.then === 'function') {

[Survived] PrecomputedMutator
q.js:506:24
-       if (isPromiseAlike(value)) {
+       if (isPromiseAlike(value || true)) {

[Survived] PrecomputedMutator
q.js:507:23
-           return coerce(value);
+           return coerce(value || true);

[Survived] PrecomputedMutator
q.js:507:23
-           return coerce(value);
+           return coerce(value ? value : 42);

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create({});

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(null);

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(Object.create(Array.prototype));

[Survived] PrecomputedMutator
q.js:562:32
-           var args = array_slice(arguments);
+           var args = array_slice([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:562:32
-           var args = array_slice(arguments);
+           var args = array_slice(Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:562:32
-           var args = array_slice(arguments);
+           var args = array_slice([...arguments]);

[Survived] PrecomputedMutator
q.js:563:13
-           if (messages) {
+           if (typeof messages !== 'undefined') {

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && "someString") { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "then") { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (operands[0]) { // progress operand

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(1);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(null);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(Math.random());

[Survived] PrecomputedMutator
q.js:570:17
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(deferred, args);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if ([]) {

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(null);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(true);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(messages);

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (1 === 0) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (null === nearerValue) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (typeof nearerValue !== 'promise') {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (!isPromise(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(true)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(Math.random())) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (this.resolvedPromise === void 0) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (!this.resolvedPromise) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:604:29
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.message(e.stack.indexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.split("\n").length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.search("\n"));

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(e.stack.substring(e.stack.indexOf("\n") + 2)) + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (1) {

[Survived] PrecomputedMutator
q.js:638:16
-           become(Q(value));
+           become(new Q(value));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (messages) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(new Promise(resolve => resolve(value)));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(this));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(new Error('Replacement error')));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if ([]) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListeners[0](progress);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(null);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener({});

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress + 1);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (Q.resolve()) {

[Survived] PrecomputedMutator
q.js:679:13
-               self.reject(error);
+               self.resolve(error);

[Survived] PrecomputedMutator
q.js:679:13
-               self.reject(error);
+               Q.resolve(error);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(null);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(true);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject({});

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (false) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (true) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments[0] === undefined) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               global.resolve(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve([1]);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(function () {});

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(Array.prototype.slice.call(arguments, 0)));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(arguments.callee.caller(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice([1, 2, 3], 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice({
+     value: 'foo'
+   }, 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, arguments.length > 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, this.resolve(value, undefined)));

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (Object.prototype.toString.call(resolver) !== "[object Function]") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== typeof Function) {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = null();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = {}();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver([deferred.resolve, deferred.reject, deferred.notify][Math.floor(Math.random() * 3)]);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve.bind(null, 'hacked value'));

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           [](deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           null(deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           0(deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve(null), deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, function () {
+     throw new Error('Rejecting the promise');
+   }, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(new Error('Buggy Reason'));

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(Q.reject('Buggy Reason'));

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Promise(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return null(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(0).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(null).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(null);

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([[this, that]]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([null, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x == y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x.valueOf() === y.valueOf()) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (Object.is(x, y)) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > -1; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; Q.resolve()) {

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(null).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] || {}).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(Promise.resolve()).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(deferred.resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(deferred.resolve(null), reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, function () {});

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return this['then'](Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(function () {
+     return Q();
+   });

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback !== void 0) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (typeof fallback === 'undefined') {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== undefined) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect && inspect !== Object.prototype.inspect) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (typeof inspect === "function") {

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call([]);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(function () {});

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback(promise, op, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.apply(promise, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "notAnOp", args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, 123, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, promise, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, []);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, null);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, {
+     then: function () {}
+   });

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("Buggy error message"));

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject({});

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (function () {
+     return {};
+   }) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.reason) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled" || inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "settled") {

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(new Error('New error message'), self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong({}, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(Q.reject('Rejection message'), self);

[Survived] PrecomputedMutator
q.js:866:24
-                   return reject(newException);
+                   return Q.reject(newException);

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(value + 1) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(this.value) : value;

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(2 * value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(promise.value);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (() => {}) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (console.log) {

[Survived] PrecomputedMutator
q.js:903:17
-                   Q.onerror(e);
+                   console.error(e);

[Survived] PrecomputedMutator
q.js:903:17
-                   Q.onerror(e);
+                   null(e);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(new Error());

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(Promise.reject('An error occurred'));

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw === false) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.resolve(newValue);

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.reject(newValue);

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               console.log(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue + 1);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(Q(newValue));

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return promise.constructor.prototype.tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Promise.resolve(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Q.when(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Promise.reject(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Promise.resolve()).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Q.reject(new Error('Replacement error'))).tap(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(() => callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.bind(this));

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value + 1).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(Promise.resolve());

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(Q.reject(new Error('Replacement error')));

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(value + 1);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(null).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value + 1).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(this.value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(() => fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(Math.max, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(deferred.resolve, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function () {
+     return rejected.apply(this, arguments);
+   }, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function () {
+     return rejected(exception, self);
+   }, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function () {
+     return progressed.apply(this, arguments);
+   });

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed.bind(null));

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, Math.max);

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return this.catch(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     throw value;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     value = null;
+     return value;
+   });

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Promise.resolve()).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Q.reject('An error occurred')).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(() => {/* empty arrow function */});

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(() => {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(() => {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Promise.reject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Promise.resolve()).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.reject('An error')).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(new Error('Replacement error'));

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(reason.message);

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value instanceof Object) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value.constructor.name === 'Promise') {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (typeof value.then === 'undefined') {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value && value.then(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(null)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value.then(function () {
+     return value;
+   }))) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.value === null) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.hasOwnProperty("value")) {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return typeof value === 'object' && value !== null && typeof value.then === 'function'(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return value instanceof Promise || value.constructor.name === 'Promise'(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(false) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(null) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(new Proxy(object, {})) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && global.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return {}().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(true) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(null) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(this) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:34
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object) || null.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return false(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return 0(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return null(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(false) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(null) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(this) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && false().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && null().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (0) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (null) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (null) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf([], promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.slice(), promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, null) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, {
+     then: function () {}
+   }) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledrejection", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", null, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", {}, promise);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, {});

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, () => {});

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push({});

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(unhandledReasons);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push({});

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack) {

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push("reason stack");

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.unshift("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           console.error("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push("<no stack>");

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (!global.trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, 'constant');

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf({
+     promise: []
+   }, promise);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, 123);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, {});

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (unhandledRejections.indexOf(promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (typeof at !== "number") {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([]);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, {});

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, []);

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (true) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === unhandledRejections.length) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport > -1) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", "some random string", promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit(false, unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit(null, unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit(unhandledReasons[at], unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", null, promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", {}, promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], null);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], {});

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.length--(atReport, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length, 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(unhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(Math.floor(Math.random() * unhandledReasons.length));

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons.length, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(null, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(0, 1);

[Survived] PrecomputedMutator
q.js:1118:12
-       return unhandledReasons.slice();
+       return unhandledReasons.concat();

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (0) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (undefined) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection({});

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(Q);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection([]);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, true);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, {});

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === null || name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name !== null && name !== 'undefined') {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (this.hasOwnProperty('name')) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(thisp, [args]);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(5, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, {
+     length: 0
+   });

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(null);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply([]);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply({});

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value.apply(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return window.apply(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return Math.apply(value, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(thisp, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(Math.random(), args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, []);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, null);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(null);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(123);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(window);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply([], args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.keys(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys({});

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(new Error('Buggy replacement'));

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(this);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return null(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(function () {}, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(this, op, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, null);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return null();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return {}();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(() => fulfilled(value));

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(() => rejected('An error occurred'));

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(42).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(this).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(function () {
+     throw new Error('Buggy replacement');
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread([1, 2, 3], rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, function () {});

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, this);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(true, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply([], array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (generator.constructor.name === "GeneratorFunction") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (generator.constructor.prototype.constructor.name === "GeneratorFunction") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (generator.constructor.toString().indexOf("GeneratorFunction") > -1) {

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generator.verb(arg);

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generator['next'](arg);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](1);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return Promise.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return deferred.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(new Error('Buggy error'));

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(null);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(true);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (Object.prototype.toString.call(result.value) === "[object Promise]") {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value && result.value.constructor === Promise) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (typeof result.value.then === "function") {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(null);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value + 1);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result['value'], callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(function () {
+     return result.value;
+   }(), callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, function () {}, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback.bind(this), errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback(result.value), errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, function () {});

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, 5);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = generator.verb(arg);

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = generator["" + verb](arg);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](123);

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.message === "Generator completed") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (true) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception instanceof Error) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if ({}(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(new Error('generator error'))) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration({
+     message: 'generator error'
+   })) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(null)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(null);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(false);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(new Error('Dummy error'));

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(new Error('Generator Error'));

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject({});

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(null);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when([]);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(42);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(Q);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Promise.resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when([], callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when({}, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, callback.bind(this), errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, function () {
+     callback();
+   }, errback);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = Function.prototype.apply.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(window, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(Math.random(), arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, Array.from(arguments));

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, [...arguments]);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, Object.assign([], arguments));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "then");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(this, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(window, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(function () {
+     return continuer;
+   }, "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "next".toUpperCase());

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, Symbol("next"));

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, 1);

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "throw", undefined);

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "someInvalidOperation");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = null(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(function () {}, "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(123, "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "continue");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "break");

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Promise.resolve(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Math.random(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done([](makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(function* () {})());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(42)());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, null(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(1)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(this);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(globalThis);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(null);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return Reflect.apply(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return Function.prototype.apply(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(this, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, []);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, null);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, {
+     foo: 'bar'
+   });

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(null);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch([]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch({
+     op: 1,
+     args: [2, 3]
+   });

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Object.dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Promise.resolve(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(123).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(Promise.resolve()).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(null, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, []);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, {
+     foo: 'bar'
+   });

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.promise(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promise.dispatch(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, null, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, {
+     length: 0
+   });

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return null(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return {}(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q([]).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(function () {}).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("GET", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch(Symbol("get"), [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch(() => "get", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", null);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", {});

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", function () {/* empty function */});

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("GET", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", []);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", {
+     key: 'value'
+   });

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.promiseDispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.get("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("GET", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch(symbol("get"), [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", this);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", null);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", {}[key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch(["setProperty", key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch(["set", value, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Object.prototype.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Math.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", {});

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch([]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(this);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(Math.random());

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("__set__", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(null, [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(this.del, [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", []);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", this);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", null);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch(["remove", key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return null(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return 5(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(null).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q([]).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(function () {}).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", []);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", {});

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", null);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch(["remove", key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return deferred.resolve("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return deferred.promise("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch(null, [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch('use strict', [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch(() => {}, [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", this);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", null);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", Promise.resolve());

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("Post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return null(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.when(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q([]).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(function () {}).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("POST", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", []);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", null);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, eval(args)]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [window[name], args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("POST", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("POST", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch(null, [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch(function () {}, [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", []);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", null);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", this);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, arguments]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, 123]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("anotherMethod", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return {}['dispatch'](object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(true).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(function () {
+     return "I am a buggy function";
+   }).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("POST", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, Array.prototype.slice.call(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, arguments.slice(1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, [].slice.call(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([].slice.call(arguments, 1))]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, arguments.callee.caller.arguments(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, null(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(null, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(function () {
+     return 42;
+   }, 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, null)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, this)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("POST", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, 123]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("POST", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch(function () {}, [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", null);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", []);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([])]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(this)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(function () {})]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, arguments.length)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [1, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("spread", [args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(123).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q({}).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", args);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", null, args);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("spy", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args, []]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", args);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [this, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [[], args]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Object.prototype.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Math.random("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.all("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return {}(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(5).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(() => {}).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apPLY", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("applyFn", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch(this.apply, [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(Array.prototype.slice.call(arguments))]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, [1, 2, 3](arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(Array.prototype.slice.call(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([].slice.call(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments.slice(1), 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("spy", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch(["apply", array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apPLY", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("applyShim", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("splice", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", []);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", arguments);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", this);

[Survived] PrecomputedMutator
q.js:1527:44
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, Array.prototype.slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:44
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, null(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(123)]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(this);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(Array.prototype.slice.call(arguments, 2));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 2));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments.slice(2));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(Array.prototype.slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments[0], 1);

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               [](array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               null(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               this(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat([])

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(null)

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat([1, 2, 3])

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments.callee(arguments))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice({
+     length: 0
+   }))

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = arguments(arguments);

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = [].slice(arguments);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice([]);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice({
+     length: 0
+   });

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               [](array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat([])

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(this.arguments)

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments[0])

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments.callee(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(null(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(eval(arguments))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(123))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", ["toString"]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return null(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q({}).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(null).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("nonexistentKey", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", Object.keys(this));

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", function () {
+     return 42;
+   });

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("nonexistentMethod", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("nonexistentKey", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", Object.keys(this));

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", function () {
+     return 42;
+   });

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   snapshot.state === "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   isPromise(promise) && (snapshot = promise.inspect()).state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   snapshot.value !== undefined

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   typeof promise === 'object'(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   promise instanceof Object(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   true(promise) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(Promise.resolve()) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(null) &&

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice());

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify(index);

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify(null);

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: 'mutated'
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(null);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all([]);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (Object.prototype.toString.call(promises) === '[object Array]') {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises instanceof Array) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (Array.isArray(promises)) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Promise.resolve();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1634:20
-       var deferred = Q.defer();
+       var deferred = Promise.resolve();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           Promise.resolve(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           this.constructor(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(null, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(Promise.resolve(), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(this, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, function () {}, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, this, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, function () {}, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected = function () {}, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, function onRejected() {}, onProgress);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promises[index]);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(this);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (true) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   console.error(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(new Error("Dummy rejection"));

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(promise);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any([]);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Q.reject(new Error('Test error')));

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", Q.reject("Placeholder error"));

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(function allResolvedBad(promises) {
+     return Q(promises).allSettled();
+   }, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, function allResolved(promises) {
+     return Q(promises).all();
+   }, "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, function allResolved(promises) {
+     return Q(promises).all().then(function (results) {
+       return Q.resolve(results.map(function (result) {
+         return {
+           state: 'fulfilled',
+           value: result
+         };
+       }));
+     });
+   }, "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map([]);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, null);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve());

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(Object.values(promises), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.filter(x => x), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Promise.resolve());

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject(new Error('Placeholder error')));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(new Promise(resolve => resolve(promise)));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(Promise.resolve(), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(null, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(function () {}, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, Promise.resolve(), noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function () {
+     throw new Error('Buggy error');
+   }, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function (value) {
+     deferred.resolve(value + 1);
+   }, noop);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, Promise.resolve());

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function () {
+     throw new Error('handled');
+   });

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return Q.all(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return Promise.resolve(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved([]);

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q([]).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises || []).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(Q([])).allSettled();

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promises[index]);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(Q.resolve(promise));

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.always();

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(null, null);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return Promise.resolve(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return Math.random(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function regardless() {
+     return {};
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function regardless() {
+     return Q.resolve();
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function regardless() {
+     return Q.reject();
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function () {
+     return {};
+   });

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function () {
+     throw new Error('Buggy!');
+   });

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(null).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(true).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(Q.reject("An error occurred")).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(function () {
+     throw new Error('Rejected!');
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(this, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function () {
+     throw rejected;
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, Q.reject(rejected));

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, Promise.reject(rejected));

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(function () {});

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(this);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(42);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.catch(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(42, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(function () {
+     return 42;
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, function () {
+     return Promise.resolve();
+   });

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, function () {
+     throw new Error('New error');
+   });

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, function () {
+     return Q.reject(new Error('New error'));
+   });

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(true, true, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, 1, progressed);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, function () {});

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, 42);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, function () {}, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, function () {});

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, "string");

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(this)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Promise.resolve())["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](function () {
+     return callback;
+   });

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.bind(this));

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback === null || typeof callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback || typeof callback.call !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback || callback.constructor.name !== "Function") {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Promise(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = null(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(function () {
+     throw new Error('Buggy callback');
+   });

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(null);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(Q.resolve);

[Survived] PrecomputedMutator
q.js:1782:16
-           return callback.fcall().then(function () {
+           return callback.fapply().then(function () {

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(Q.resolve(2)).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(Q.reject(new Error('Failed'))).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(Promise.resolve(fulfilled), rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, Q.reject(new Error('Rejected explicitly')), progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, null, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, function () {
+     return true;
+   }, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function (value) {
+     return value;
+   });

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, null);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(new Error('Timed out after ' + (ms - 10) + ' ms'), promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(function () {
+     throw new Error('An unexpected error occurred');
+   }, promise);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, Promise.resolve());

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, null);

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (function () {
+     throw new Error('Handled error');
+   }) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (function () {}) {

[Survived] PrecomputedMutator
q.js:1810:17
-                   Q.onerror(error);
+                   null(error);

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(new Error("Timed out after " + (ms || 0) + " ms"));

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror({});

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.fcall(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.spread(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.nodeify(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(function () {}, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(42, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, true, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, {}, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, undefined) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(function () {
+     throw new Error("Unhandled error");
+   });

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(Q.onerror);

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(function () {
+     throw new Error("Unhandled error");
+   }.bind(this));

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(42, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(function () {
+     return true;
+   }, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(this.ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(Math.random() * 1000, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Timed out after " + (ms - 10) + " ms"));

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, {});

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, function () {
+     throw new Error("An error occurred");
+   });

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (1 === 1) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(new Error("Timed out after " + (ms - 10) + " ms"));

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject({});

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(function () {
+     throw error;
+   });

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           deferred.reject(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(deferred);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(new Error('Replaced value'));

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(this);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           deferred.resolve(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(deferred);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.promise.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(new Error("An error occurred"));

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (typeof timeout === "undefined") {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === Q.timeout.NONE) {

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q([]).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(2 * timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(0);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(null);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(new Error('Replacement error'));

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return callback.nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return callback.bind(this);
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return callback.call(this, arguments);
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return callback.apply(this, [arguments]);
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1904:20
-       var deferred = defer();
+       var deferred = deferred = {}();

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = [](args);

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = null(args);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {
+     throw new Error("Buggy node resolver");
+   });

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(this).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(() => deferred.reject('HACKED'));

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(Array.prototype.slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, Infinity);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, setInterval);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return callback.apply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return callback;
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(callback.bind(null)).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(callback || function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(123);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = [].slice(arguments);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = Function.prototype.slice(arguments);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(this.arguments);

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {
+     throw new Error("Buggy timeout");
+   });

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject("Buggy rejection"));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null());

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(this).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat(deferred.makeNodeResolver())).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback === 'function') {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback && typeof callback === 'function') {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(Array.prototype.slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = Object.keys(arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([].slice.call(arguments), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(Object.keys(arguments), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(Function.prototype.bind.apply(arguments.slice, [null, 1, 2]), 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, Q.denodeify.length - 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, function () {
+     return callback.apply(thisp, arguments);
+   });

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.unshift(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Function.prototype.apply.call([], arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([1, 2, 3](arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(null(arguments));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(this.arguments));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           callback.apply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           this.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.resolve(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Promise.prototype.then.call(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback || function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(function () {});

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = [].slice(arguments);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = Math.floor(arguments);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice([].slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       this.constructor(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       null(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(window);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(123);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(true, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(defer(), args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice());

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, [...args]);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(Function.prototype.apply.call(arguments, [1]));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([].concat.apply([], arguments));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = [].slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = Math.floor(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([].slice.call(arguments), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(Object.keys(arguments)[0], 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(Reflect.apply(Function.prototype.call, arguments, [].slice.call(arguments, 1)), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.sort(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Function.prototype.apply.call([], arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(null(arguments));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(deferred.resolve));

[Survived] PrecomputedMutator
q.js:1967:24
-           var deferred = defer();
+           var deferred = {}();

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(function () {
+     throw new Error('Buggy node resolver');
+   });

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.reject);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.promise);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(global, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(window, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, thisp);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, [].slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           bound.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Function.prototype.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback.apply(thisp)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback.call(thisp, null, deferred)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback.call(null, deferred)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply([...nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(() => deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.reject(null));

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = [].slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = null(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = Array.prototype.slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([].slice.call(arguments, 0), 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(Object.keys(arguments)[0], 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(Function.prototype.apply.call(null, this, arguments), 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, Infinity);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       [].unshift(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       null.unshift(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       Object.prototype.unshift(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(global);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(Q, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(function () {}, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, this);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(false);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(null);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(this);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.npost(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, []);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, null);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = [].slice(args || []);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = nodeArgs.slice(args || []);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = Array.prototype.slice(args || []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(globalArgs);

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = Promise.resolve();

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = Q.resolve();

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push({});

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(this.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("Post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", name).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(function () {});

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(Array.prototype.slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = [].slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = null(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([].slice.call(arguments, 1), 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([].concat.apply([], arguments), 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([].slice.call(arguments), 2);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push({});

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {
+     return true;
+   });

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("called", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("Post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch(this.dispatch.bind(this, "post"), [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch(function () {
+     return this.dispatch("post");
+   }, [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", name).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([].slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(Array.prototype.slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(nodeArgs.concat());

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([].slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(Object.keys(arguments)[1], 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, arguments.length - 2);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, nodeArgs.length);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       null(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred());

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("call", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, deferred.resolve]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", this.constructor.prototype.dispatch.call(this, "post", [name, nodeArgs])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(function () {});

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Promise(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return [](object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(this).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(function () {}).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(function () {
+     nodeback && nodeback(null, value);
+   });

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   true(null, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   null(null, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(value, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(1, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, arguments[0]);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(new Error("Hand-crafted error"));

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(Q.when(null, function () {
+     throw new Error("Error message");
+   }));

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.reject();

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.reject();

[Survived] PrecomputedMutator
queue.js:10:24
-               var next = Q.defer();
+               var next = Q.reject();

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.then.get("head");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(null);

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(ends.promise);

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(ends.promise.then(function (val) {
+     return val.head;
+   }));

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.then.get("tail");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.head("tail");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(null);

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(ends.promise);

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(Q.defer().promise);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve({});

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(Q.reject(error));

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: null(error)};

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: {}(error)};

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(new Error("Different error message"))};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(Q.reject(new Error("Can't get value from closed queue")))};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.notify(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.promise.resolve(end);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(null);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(Q.reject(new Error('Unexpected closure')));

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve({
+     head: Q.resolve(),
+     tail: Q.resolve()
+   });

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.02 |      116 |        67 |       1477 |        0 |        0 |
 q.js     |   11.21 |      116 |        67 |       1450 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         27 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m18:22:32 (3295) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m18:22:32 (3295) INFO MutationTestExecutor[39m Done in 191 minutes 46 seconds.

real	191m47.748s
user	33m45.935s
sys	5m52.891s
