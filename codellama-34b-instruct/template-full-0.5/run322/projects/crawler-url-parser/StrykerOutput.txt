*** using precomputed mutations ***
[32m17:16:09 (2574) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m17:16:09 (2574) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m17:16:09 (2574) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m17:16:09 (2574) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m17:16:09 (2574) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m17:16:10 (2574) INFO ProjectReader[39m Found 1 of 741 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 297 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.5/mutants.json ***
Mutant 0 in crawler-url-parser.js: typeof currentUrlStr === 'undefined' replaced with currentUrlStr === null
Mutant 1 in crawler-url-parser.js: typeof currentUrlStr === 'undefined' replaced with currentUrlStr == 'null'
Mutant 2 in crawler-url-parser.js: typeof currentUrlStr === 'undefined' replaced with currentUrlStr === ''
Mutant 3 in crawler-url-parser.js: currentUrlStr && _has_illegal_chars(currentUrlStr) replaced with currentUrlStr && _has_illegal_chars(baseUrlStr)
Mutant 4 in crawler-url-parser.js: currentUrlStr && _has_illegal_chars(currentUrlStr) replaced with !currentUrlStr || _has_illegal_chars(currentUrlStr)
Mutant 5 in crawler-url-parser.js: currentUrlStr && _has_illegal_chars(currentUrlStr) replaced with currentUrlStr != baseUrlStr && _has_illegal_chars(currentUrlStr)
Mutant 6 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.split('').reverse().join('')
Mutant 7 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.toLowerCase()
Mutant 8 in crawler-url-parser.js: baseUrlStr && _has_illegal_chars(baseUrlStr) replaced with baseUrlStr && !_has_illegal_chars(baseUrlStr)
Mutant 9 in crawler-url-parser.js: baseUrlStr && _has_illegal_chars(baseUrlStr) replaced with baseUrlStr && _has_illegal_chars(baseUrlStr) && baseUrlStr.length > 0
Mutant 10 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.toLowerCase()
Mutant 11 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.substring(1)
Mutant 12 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.split('').reverse().join('')
Mutant 13 in crawler-url-parser.js: currentUrlStr.replace(/#.*$/, '') replaced with currentUrlStr.replace(/#.*$/i, '')
Mutant 14 in crawler-url-parser.js: currentUrlStr.replace(/#.*$/, '') replaced with currentUrlStr.replace(/#.*$/g, '')
Mutant 15 in crawler-url-parser.js: currentUrlStr.replace(/#.*$/, '') replaced with currentUrlStr.replace(/#.*$/gi, '')
Mutant 16 in crawler-url-parser.js: /#.*$/ replaced with /^#.*$/
Mutant 17 in crawler-url-parser.js: /#.*$/ replaced with /#.*$/g
Mutant 18 in crawler-url-parser.js: /#.*$/ replaced with /#.*$/i
Mutant 19 in crawler-url-parser.js: '' replaced with '#'
Mutant 20 in crawler-url-parser.js: '' replaced with '#' + Math.random()
Mutant 21 in crawler-url-parser.js: '' replaced with '#' + Date.now()
Mutant 22 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.length
Mutant 23 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.indexOf('http')
Mutant 24 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.match(/^http/)
Mutant 25 in crawler-url-parser.js: baseUrlStr.replace(/#.*$/, '') replaced with baseUrlStr.replace(/#.*$/, '&')
Mutant 26 in crawler-url-parser.js: baseUrlStr.replace(/#.*$/, '') replaced with baseUrlStr.replace(/#.*$/, ' ')
Mutant 27 in crawler-url-parser.js: /#.*$/ replaced with /[^#].*$/
Mutant 28 in crawler-url-parser.js: /#.*$/ replaced with /#.*$/g
Mutant 29 in crawler-url-parser.js: /#.*$/ replaced with /\/#.*$/
Mutant 30 in crawler-url-parser.js: '' replaced with '#'
Mutant 31 in crawler-url-parser.js: '' replaced with '#' + 'foo'
Mutant 32 in crawler-url-parser.js: '' replaced with '#' + parseInt(currentUrlStr, 16)
Mutant 33 in crawler-url-parser.js: !/^\.*\/|^(?!localhost)\w+:/.test(currentUrlStr) replaced with currentUrlStr.includes('http')
Mutant 34 in crawler-url-parser.js: !/^\.*\/|^(?!localhost)\w+:/.test(currentUrlStr) replaced with currentUrlStr.startsWith('https')
Mutant 35 in crawler-url-parser.js: !/^\.*\/|^(?!localhost)\w+:/.test(currentUrlStr) replaced with currentUrlStr.endsWith('http')
Mutant 36 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.toLowerCase()
Mutant 37 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.slice(1)
Mutant 38 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.split('').reverse().join('')
Mutant 39 in crawler-url-parser.js: /^(?!(?:\w+:)?\/\/)/ replaced with /^(?!(?:\w+:)?\/\/)/g
Mutant 40 in crawler-url-parser.js: /^(?!(?:\w+:)?\/\/)/ replaced with /^(?!(?:\w+:)?\/\/)/i
Mutant 41 in crawler-url-parser.js: /^(?!(?:\w+:)?\/\/)/ replaced with /^(?!(?:\w+:)?\/\/)/m
Mutant 42 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(URL.parse(currentUrlStr, false, true))
Mutant 43 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(URL.parse(currentUrlStr, true, false))
Mutant 44 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(URL.parse(currentUrlStr, true, true))
Mutant 45 in crawler-url-parser.js: true replaced with false
Mutant 46 in crawler-url-parser.js: true replaced with 0
Mutant 47 in crawler-url-parser.js: true replaced with null
Mutant 48 in crawler-url-parser.js: true replaced with false
Mutant 49 in crawler-url-parser.js: true replaced with null
Mutant 50 in crawler-url-parser.js: true replaced with undefined
Mutant 51 in crawler-url-parser.js: parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' replaced with parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' && parsedUrl.protocol != 'ftp:'
Mutant 52 in crawler-url-parser.js: parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' replaced with parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' && parsedUrl.host == null
Mutant 53 in crawler-url-parser.js: parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' replaced with parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' && parsedUrl.pathname == null
Mutant 54 in crawler-url-parser.js: parsedUrl.host == null && baseUrlStr replaced with parsedUrl.host === null && baseUrlStr
Mutant 55 in crawler-url-parser.js: parsedUrl.host == null && baseUrlStr replaced with parsedUrl.host !== null && baseUrlStr
Mutant 56 in crawler-url-parser.js: URL.parse(baseUrlStr, true, true) replaced with URL.parse(baseUrlStr, false, false)
Mutant 57 in crawler-url-parser.js: URL.parse(baseUrlStr, true, true) replaced with URL.parse(baseUrlStr, true, false)
Mutant 58 in crawler-url-parser.js: URL.parse(baseUrlStr, true, true) replaced with URL.parse(baseUrlStr, false, true)
Mutant 59 in crawler-url-parser.js: true replaced with false
Mutant 60 in crawler-url-parser.js: true replaced with undefined
Mutant 61 in crawler-url-parser.js: true replaced with false
Mutant 62 in crawler-url-parser.js: true replaced with null
Mutant 63 in crawler-url-parser.js: true replaced with "hello"
Mutant 64 in crawler-url-parser.js: URL.format replaced with URL.parse
Mutant 65 in crawler-url-parser.js: URL.format replaced with URL.resolve
Mutant 66 in crawler-url-parser.js: URL.format replaced with URL.pathToFileURL
Mutant 67 in crawler-url-parser.js: parsedBaseUrl replaced with parsedUrl
Mutant 68 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.href
Mutant 69 in crawler-url-parser.js: parsedBaseUrl replaced with baseUrl
Mutant 70 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.parse(currentUrlStr, true, true)
Mutant 71 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.format(parsedUrl)
Mutant 72 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.parse(currentUrlStr, true, false)
Mutant 73 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(parsedBaseUrl, parsedUrl.path)
Mutant 74 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(parsedBaseUrl, parsedUrl.hostname)
Mutant 75 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(parsedBaseUrl, parsedUrl.protocol)
Mutant 76 in crawler-url-parser.js: URL.resolve replaced with URL.resolveObject
Mutant 77 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.protocol
Mutant 78 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.host
Mutant 79 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.pathname
Mutant 80 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.pathname
Mutant 81 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.host + parsedUrl.pathname
Mutant 82 in crawler-url-parser.js: URL.format replaced with URL.resolve
Mutant 83 in crawler-url-parser.js: URL.format replaced with URL.parse
Mutant 84 in crawler-url-parser.js: absoluteUrl replaced with absoluteUrl.pathname
Mutant 85 in crawler-url-parser.js: absoluteUrl replaced with absoluteUrl.search
Mutant 86 in crawler-url-parser.js: absoluteUrl replaced with absoluteUrl.hash
Mutant 87 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(URL.parse(currentUrlStr, false, true))
Mutant 88 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(URL.parse(currentUrlStr, true, false))
Mutant 89 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(URL.parse(currentUrlStr, true, true))
Mutant 90 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.replace(/#.*$/, '')
Mutant 91 in crawler-url-parser.js: true replaced with false
Mutant 92 in crawler-url-parser.js: true replaced with parsedUrl.protocol !== 'http:'
Mutant 93 in crawler-url-parser.js: true replaced with false
Mutant 94 in crawler-url-parser.js: true replaced with null
Mutant 95 in crawler-url-parser.js: true replaced with 1
Mutant 96 in crawler-url-parser.js: URL.format replaced with URL.parse
Mutant 97 in crawler-url-parser.js: URL.format replaced with URL.resolve
Mutant 98 in crawler-url-parser.js: URL.format replaced with URL.searchParams
Mutant 99 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.search
Mutant 100 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.query
Mutant 101 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.query.split("=")[0]
Mutant 102 in crawler-url-parser.js: ret.host replaced with ret.hostname
Mutant 103 in crawler-url-parser.js: ret.host replaced with ret.host.split('.').pop()
Mutant 104 in crawler-url-parser.js: ret.host replaced with ret.host !== 'localhost'
Mutant 105 in crawler-url-parser.js: ret.host replaced with ret.hostname
Mutant 106 in crawler-url-parser.js: ret.host replaced with ret.host + ':' + ret.port
Mutant 107 in crawler-url-parser.js: ret.host replaced with ret.host.split(':')[0]
Mutant 108 in crawler-url-parser.js: "=" replaced with "!="
Mutant 109 in crawler-url-parser.js: "=" replaced with "-"
Mutant 110 in crawler-url-parser.js: "=" replaced with "+"
Mutant 111 in crawler-url-parser.js: sourceUrl replaced with baseUrl
Mutant 112 in crawler-url-parser.js: sourceUrl replaced with sourceUrl + '/'
Mutant 113 in crawler-url-parser.js: cheerio.load replaced with cheerio.parse
Mutant 114 in crawler-url-parser.js: 'base' replaced with 'a'
Mutant 115 in crawler-url-parser.js: 'base' replaced with 'a:not(.base)'
Mutant 116 in crawler-url-parser.js: 'href' replaced with 'src'
Mutant 117 in crawler-url-parser.js: 'href' replaced with 'title'
Mutant 118 in crawler-url-parser.js: 'href' replaced with 'data-href'
Mutant 119 in crawler-url-parser.js: 'a' replaced with 'b'
Mutant 120 in crawler-url-parser.js: 'a' replaced with 'a' + 'b'
Mutant 121 in crawler-url-parser.js: 'a' replaced with 'a' + 'b' + 'c'
Mutant 122 in crawler-url-parser.js: this replaced with $(this).attr('href')
Mutant 123 in crawler-url-parser.js: this replaced with $(this).find('a').attr('href')
Mutant 124 in crawler-url-parser.js: this replaced with $(this).closest('a').attr('href')
Mutant 125 in crawler-url-parser.js: 'href' replaced with 'src'
Mutant 126 in crawler-url-parser.js: 'href' replaced with 'text'
Mutant 127 in crawler-url-parser.js: 'href' replaced with 'val'
Mutant 128 in crawler-url-parser.js: this replaced with $(this).text().trim().length
Mutant 129 in crawler-url-parser.js: this replaced with $(this).text().toLowerCase()
Mutant 130 in crawler-url-parser.js: this replaced with $(this).parent().text().trim()
Mutant 131 in crawler-url-parser.js: typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href) replaced with typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/gi.test(href)
Mutant 132 in crawler-url-parser.js: typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href) replaced with typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/i.test(href)
Mutant 133 in crawler-url-parser.js: typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href) replaced with typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/i.test(href.toLowerCase())
Mutant 134 in crawler-url-parser.js: parse(href, baseUrlStr) replaced with parse(href + baseUrlStr)
Mutant 135 in crawler-url-parser.js: parse(href, baseUrlStr) replaced with parse(href - baseUrlStr)
Mutant 136 in crawler-url-parser.js: parse(href, baseUrlStr) replaced with parse(href * baseUrlStr)
Mutant 137 in crawler-url-parser.js: href replaced with href + "test"
Mutant 138 in crawler-url-parser.js: href replaced with $(this).attr("href") + "test"
Mutant 139 in crawler-url-parser.js: href replaced with href.split("/")[0]
Mutant 140 in crawler-url-parser.js: currentUrl && currentUrl.url replaced with currentUrl || currentUrl.url
Mutant 141 in crawler-url-parser.js: currentUrl && currentUrl.url replaced with currentUrl && currentUrl.url !== ''
Mutant 142 in crawler-url-parser.js: currentUrl && currentUrl.url replaced with currentUrl && currentUrl.url !== null && currentUrl.url !== ''
Mutant 143 in crawler-url-parser.js: urlMap.has(currentUrl.url) replaced with urlMap.has(currentUrl.url) && urlMap.get(currentUrl.url).text.includes(text)
Mutant 144 in crawler-url-parser.js: urlMap.has(currentUrl.url) replaced with urlMap.has(currentUrl.url) && urlMap.get(currentUrl.url).text.length > 0
Mutant 145 in crawler-url-parser.js: urlMap.has(currentUrl.url) replaced with urlMap.has(currentUrl.url) || urlMap.get(currentUrl.url).text.includes(text)
Mutant 146 in crawler-url-parser.js: urlMap.has replaced with urlMap.hasOwnProperty
Mutant 147 in crawler-url-parser.js: urlMap.has replaced with urlMap.size
Mutant 148 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.url + "123"
Mutant 149 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.url.replace("www.", "")
Mutant 150 in crawler-url-parser.js: urlMap.get replaced with urlMap.set
Mutant 151 in crawler-url-parser.js: urlMap.get replaced with urlMap.clear
Mutant 152 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.baseurl
Mutant 153 in crawler-url-parser.js: currentUrl.url replaced with baseUrl.url
Mutant 154 in crawler-url-parser.js: currentUrl.url replaced with null
Mutant 155 in crawler-url-parser.js: !tmpUrl.text.includes(text) replaced with tmpUrl.text.includes(text)
Mutant 156 in crawler-url-parser.js: !tmpUrl.text.includes(text) replaced with tmpUrl.text !== text
Mutant 157 in crawler-url-parser.js: !tmpUrl.text.includes(text) replaced with tmpUrl.text.split(" ").includes(text)
Mutant 158 in crawler-url-parser.js: text replaced with text.substring(0)
Mutant 159 in crawler-url-parser.js: text replaced with text.replace(/^/, ' ')
Mutant 160 in crawler-url-parser.js: text replaced with text.split('').reverse().join('')
Mutant 161 in crawler-url-parser.js: urlMap.set(currentUrl.url, currentUrl) replaced with urlMap.set(currentUrl.url, currentUrl.url)
Mutant 162 in crawler-url-parser.js: urlMap.set(currentUrl.url, currentUrl) replaced with urlMap.set(currentUrl.url, currentUrl.host)
Mutant 163 in crawler-url-parser.js: urlMap.set(currentUrl.url, currentUrl) replaced with urlMap.set(currentUrl.url, currentUrl.path)
Mutant 164 in crawler-url-parser.js: urlMap.set replaced with urlMap.add
Mutant 165 in crawler-url-parser.js: urlMap.set replaced with urlMap.clear
Mutant 166 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.baseurl
Mutant 167 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.protocol
Mutant 168 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.host
Mutant 169 in crawler-url-parser.js: currentUrl replaced with currentUrl.url
Mutant 170 in crawler-url-parser.js: currentUrl replaced with null
Mutant 171 in crawler-url-parser.js: currentUrl replaced with {}
Mutant 172 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.substring(1)
Mutant 173 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.toUpperCase()
Mutant 174 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.split('').reverse().join('')
Mutant 175 in crawler-url-parser.js: for (let currentUrl of urlMap.values()) {
  currentUrl.type = gettype(currentUrl, baseUrl);
} replaced with for (let currentUrl of urlMap.keys()) {
  currentUrl.type = gettype(currentUrl, baseUrl);
}
Mutant 176 in crawler-url-parser.js: for (let currentUrl of urlMap.values()) {
  currentUrl.type = gettype(currentUrl, baseUrl);
} replaced with for (let currentUrl of urlMap.entries()) {
  currentUrl.type = gettype(currentUrl, baseUrl);
}
Mutant 177 in crawler-url-parser.js: for (let currentUrl of urlMap.values()) {
  currentUrl.type = gettype(currentUrl, baseUrl);
} replaced with for (let currentUrl of urlMap.values().reverse()) {
  currentUrl.type = gettype(currentUrl, baseUrl);
}
Mutant 178 in crawler-url-parser.js: urlMap.values() replaced with urlMap.keys()
Mutant 179 in crawler-url-parser.js: urlMap.values() replaced with urlMap.entries()
Mutant 180 in crawler-url-parser.js: urlMap.values() replaced with urlMap.forEach((url, currentUrl) => console.log(currentUrl))
Mutant 181 in crawler-url-parser.js: gettype(currentUrl, baseUrl) replaced with gettype(currentUrl, currentUrl)
Mutant 182 in crawler-url-parser.js: gettype(currentUrl, baseUrl) replaced with gettype(baseUrl, baseUrl)
Mutant 183 in crawler-url-parser.js: gettype(currentUrl, baseUrl) replaced with gettype(currentUrl, baseUrl.url)
Mutant 184 in crawler-url-parser.js: currentUrl replaced with null
Mutant 185 in crawler-url-parser.js: currentUrl replaced with undefined
Mutant 186 in crawler-url-parser.js: currentUrl replaced with "www.example.com"
Mutant 187 in crawler-url-parser.js: baseUrl replaced with baseUrl.protocol
Mutant 188 in crawler-url-parser.js: baseUrl replaced with baseUrl.hostname
Mutant 189 in crawler-url-parser.js: baseUrl replaced with baseUrl.pathname
Mutant 190 in crawler-url-parser.js: Array.from replaced with Array.prototype.map.call
Mutant 191 in crawler-url-parser.js: Array.from replaced with Object.values
Mutant 192 in crawler-url-parser.js: Array.from replaced with Array.prototype.filter.call
Mutant 193 in crawler-url-parser.js: urlMap.values() replaced with urlMap.keys()
Mutant 194 in crawler-url-parser.js: urlMap.values() replaced with urlMap.entries()
Mutant 195 in crawler-url-parser.js: urlMap.values() replaced with urlMap.values().reverse()
Mutant 196 in crawler-url-parser.js: typeof linkurl == "string" replaced with linkurl == "object"
Mutant 197 in crawler-url-parser.js: typeof linkurl == "string" replaced with linkurl === "object"
Mutant 198 in crawler-url-parser.js: typeof linkurl == "string" replaced with linkurl.constructor === "object"
Mutant 199 in crawler-url-parser.js: linkurl replaced with linkurl.subdomain.length
Mutant 200 in crawler-url-parser.js: linkurl replaced with linkurl.path.length
Mutant 201 in crawler-url-parser.js: linkurl replaced with linkurl.host.length
Mutant 202 in crawler-url-parser.js: typeof pageurl == "string" replaced with pageurl === "string"
Mutant 203 in crawler-url-parser.js: typeof pageurl == "string" replaced with pageurl.type === "string"
Mutant 204 in crawler-url-parser.js: typeof pageurl == "string" replaced with pageurl.toString() === "string"
Mutant 205 in crawler-url-parser.js: pageurl replaced with pageurl.protocol
Mutant 206 in crawler-url-parser.js: pageurl replaced with pageurl.hostname
Mutant 207 in crawler-url-parser.js: pageurl replaced with pageurl.pathname
Mutant 208 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/') replaced with linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '')
Mutant 209 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/') replaced with linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '\\')
Mutant 210 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with linkurl_path.replace(/\/index\.[a-z]+$/, '')
Mutant 211 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with linkurl_path.replace(/\/index\.[a-z]+$/, 'abc')
Mutant 212 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with linkurl_path.replace(/\/index\.[a-z]+$/, '\\1')
not replacing linkurl_path.replace(/\/index\.[a-z]+$/, '/') with linkurl_path.replace(/\/index\.[a-z]+$/, '')
not replacing linkurl_path.replace(/\/index\.[a-z]+$/, '/') with linkurl_path.replace(/\/index\.[a-z]+$/, 'abc')
not replacing linkurl_path.replace(/\/index\.[a-z]+$/, '/') with linkurl_path.replace(/\/index\.[a-z]+$/, '\\1')
Mutant 213 in crawler-url-parser.js: linkurl_path.replace replaced with linkurl_path.split
Mutant 214 in crawler-url-parser.js: linkurl_path.replace replaced with linkurl_path.substring
Mutant 215 in crawler-url-parser.js: linkurl_path.replace replaced with linkurl_path.toLowerCase
not replacing linkurl_path.replace with linkurl_path.split
not replacing linkurl_path.replace with linkurl_path.split
not replacing linkurl_path.replace with linkurl_path.substring
not replacing linkurl_path.replace with linkurl_path.substring
not replacing linkurl_path.replace with linkurl_path.toLowerCase
not replacing linkurl_path.replace with linkurl_path.toLowerCase
Mutant 216 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/[a-z]+\.[a-z]+$/
Mutant 217 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/[a-z]+[0-9]+\.[a-z]+$/
Mutant 218 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /default\.[a-z]+$/g
Mutant 219 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /default\.[a-z]+$/i
Mutant 220 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /default\.[a-z]+$/m
Mutant 221 in crawler-url-parser.js: '/' replaced with '\\'
Mutant 222 in crawler-url-parser.js: '/' replaced with ' '
Mutant 223 in crawler-url-parser.js: '/' replaced with '#'
Mutant 224 in crawler-url-parser.js: pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/') replaced with pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, ' ')
Mutant 225 in crawler-url-parser.js: pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/') replaced with pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '')
Mutant 226 in crawler-url-parser.js: pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/') replaced with pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, 'default')
Mutant 227 in crawler-url-parser.js: pageurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with pageurl_path.replace(/\/index\.[a-z]+$/, '')
Mutant 228 in crawler-url-parser.js: pageurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with pageurl_path.replace(/\/index\.[a-z]+$/, '/default')
not replacing pageurl_path.replace(/\/index\.[a-z]+$/, '/') with pageurl_path.replace(/\/index\.[a-z]+$/, '')
not replacing pageurl_path.replace(/\/index\.[a-z]+$/, '/') with pageurl_path.replace(/\/index\.[a-z]+$/, '/default')
Mutant 229 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/i
Mutant 230 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/g
Mutant 231 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/m
Mutant 232 in crawler-url-parser.js: '/' replaced with '\\'
Mutant 233 in crawler-url-parser.js: '/' replaced with '\\\\'
Mutant 234 in crawler-url-parser.js: '/' replaced with '/' + '\\'
Mutant 235 in crawler-url-parser.js: '/' replaced with '#'
Mutant 236 in crawler-url-parser.js: '/' replaced with '*'
Mutant 237 in crawler-url-parser.js: '/' replaced with '^'
Mutant 238 in crawler-url-parser.js: "/" replaced with "\\"
Mutant 239 in crawler-url-parser.js: "/" replaced with "\\\\"
Mutant 240 in crawler-url-parser.js: "/" replaced with "\\"
Mutant 241 in crawler-url-parser.js: "/" replaced with " "
Mutant 242 in crawler-url-parser.js: "/" replaced with "|"
Mutant 243 in crawler-url-parser.js: pageurl.host == linkurl.host replaced with linkurl.host !== pageurl.host
Mutant 244 in crawler-url-parser.js: pageurl.host == linkurl.host replaced with linkurl.host.includes(pageurl.host)
Mutant 245 in crawler-url-parser.js: pageurl.host == linkurl.host replaced with linkurl.hostname === pageurl.hostname
Mutant 246 in crawler-url-parser.js: part_count_diff == 0 replaced with part_count_diff < 0
Mutant 247 in crawler-url-parser.js: part_count_diff == 0 replaced with part_count_diff > 0
Mutant 248 in crawler-url-parser.js: part_count_diff == 0 replaced with linkurl_parts.length < pageurl_parts.length
Mutant 249 in crawler-url-parser.js: linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "foo")
Mutant 250 in crawler-url-parser.js: linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "bar")
Mutant 251 in crawler-url-parser.js: linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "baz")
Mutant 252 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/g
Mutant 253 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/i
Mutant 254 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/m
Mutant 255 in crawler-url-parser.js: "" replaced with "/"
Mutant 256 in crawler-url-parser.js: "" replaced with " "
Mutant 257 in crawler-url-parser.js: pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with pageurl_path.replace(/(\/[^\/]*)[\/]?$/, " ")
Mutant 258 in crawler-url-parser.js: pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "\\")
Mutant 259 in crawler-url-parser.js: pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "$1")
Mutant 260 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/g
Mutant 261 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/i
Mutant 262 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/m
Mutant 263 in crawler-url-parser.js: "" replaced with "/"
Mutant 264 in crawler-url-parser.js: linkurl_without_last_part == pageurl_without_last_part replaced with linkurl_without_last_part === pageurl_without_last_part
Mutant 265 in crawler-url-parser.js: linkurl_without_last_part == pageurl_without_last_part replaced with linkurl_without_last_part.includes(pageurl_without_last_part)
Mutant 266 in crawler-url-parser.js: linkurl_without_last_part == pageurl_without_last_part replaced with linkurl_without_last_part.indexOf(pageurl_without_last_part) === 0
Mutant 267 in crawler-url-parser.js: part_count_diff == 1 replaced with part_count_diff > 1
Mutant 268 in crawler-url-parser.js: part_count_diff == 1 replaced with part_count_diff != 1
Mutant 269 in crawler-url-parser.js: part_count_diff == 1 replaced with part_count_diff <= 1
Mutant 270 in crawler-url-parser.js: linkurl_path.includes(pageurl_path) replaced with linkurl_path.startsWith(pageurl_path)
Mutant 271 in crawler-url-parser.js: linkurl_path.includes(pageurl_path) replaced with linkurl_path.endsWith(pageurl_path)
Mutant 272 in crawler-url-parser.js: linkurl_path.includes(pageurl_path) replaced with linkurl_path.indexOf(pageurl_path) === -1
Mutant 273 in crawler-url-parser.js: pageurl_path replaced with pageurl_path.toLowerCase()
Mutant 274 in crawler-url-parser.js: pageurl_path replaced with pageurl_path.slice(1)
Mutant 275 in crawler-url-parser.js: pageurl_path replaced with pageurl_path.split("/").pop()
Mutant 276 in crawler-url-parser.js: part_count_diff == -1 replaced with part_count_diff > 1
Mutant 277 in crawler-url-parser.js: part_count_diff == -1 replaced with part_count_diff != -1
Mutant 278 in crawler-url-parser.js: part_count_diff == -1 replaced with linkurl_parts.length > pageurl_parts.length
Mutant 279 in crawler-url-parser.js: pageurl_path.includes(linkurl_path) replaced with linkurl_path.includes(pageurl_path)
Mutant 280 in crawler-url-parser.js: pageurl_path.includes(linkurl_path) replaced with !pageurl_path.includes(linkurl_path)
Mutant 281 in crawler-url-parser.js: pageurl_path.includes(linkurl_path) replaced with linkurl_path.startsWith(pageurl_path)
Mutant 282 in crawler-url-parser.js: pageurl_path.includes replaced with linkurl_path.endsWith
Mutant 283 in crawler-url-parser.js: linkurl_path replaced with linkurl.pathname
Mutant 284 in crawler-url-parser.js: linkurl_path replaced with linkurl.search
Mutant 285 in crawler-url-parser.js: linkurl_path replaced with linkurl.hash
Mutant 286 in crawler-url-parser.js: linkurl.domain == pageurl.domain replaced with linkurl.domain === pageurl.domain
Mutant 287 in crawler-url-parser.js: linkurl.domain == pageurl.domain replaced with linkurl.domain !== pageurl.domain
Mutant 288 in crawler-url-parser.js: linkurl.domain == pageurl.domain replaced with linkurl.domain.includes(pageurl.domain)
Mutant 289 in crawler-url-parser.js: linkurl_subdomain_len < pageurl_subdomain_len replaced with linkurl_subdomain_len > pageurl_subdomain_len
Mutant 290 in crawler-url-parser.js: linkurl_subdomain_len < pageurl_subdomain_len replaced with linkurl_subdomain_len == pageurl_subdomain_len
Mutant 291 in crawler-url-parser.js: console.log replaced with console.error
Mutant 292 in crawler-url-parser.js: console.log replaced with console.warn
Mutant 293 in crawler-url-parser.js: console.log replaced with console.info
Mutant 294 in crawler-url-parser.js: url replaced with url.host
Mutant 295 in crawler-url-parser.js: url replaced with url.pathname
Mutant 296 in crawler-url-parser.js: url replaced with url.search
[32m17:16:10 (2574) INFO Instrumenter[39m Instrumented 1 source file(s) with 297 mutant(s)
[33m17:16:10 (2574) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/test/05_tubitak.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/test/05_tubitak.html (73:43) Opening tag "a" not terminated.
    at ngHtmlParser (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 736)
    at async DisableTypeChecksPreprocessor.preprocess (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m17:16:10 (2574) WARN DisableTypeChecksPreprocessor[39m (disable "warnings.preprocessorErrors" to ignore this warning
[32m17:16:10 (2574) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m17:16:11 (2574) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m17:16:11 (2574) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m17:16:16 (2574) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 5 seconds (net 5384 ms, overhead 1 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~16m) 3/297 tested (0 survived, 0 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~16m) 6/297 tested (2 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~16m) 9/297 tested (4 survived, 0 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~15m) 12/297 tested (7 survived, 0 timed out)
Mutation testing 5% (elapsed: <1m, remaining: ~15m) 15/297 tested (10 survived, 0 timed out)
Mutation testing 6% (elapsed: ~1m, remaining: ~15m) 18/297 tested (13 survived, 0 timed out)
Mutation testing 7% (elapsed: ~1m, remaining: ~15m) 21/297 tested (16 survived, 0 timed out)
Mutation testing 8% (elapsed: ~1m, remaining: ~14m) 25/297 tested (17 survived, 0 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~14m) 28/297 tested (19 survived, 0 timed out)
Mutation testing 10% (elapsed: ~1m, remaining: ~14m) 31/297 tested (22 survived, 0 timed out)
Mutation testing 11% (elapsed: ~1m, remaining: ~14m) 34/297 tested (24 survived, 0 timed out)
Mutation testing 12% (elapsed: ~2m, remaining: ~14m) 37/297 tested (25 survived, 0 timed out)
Mutation testing 13% (elapsed: ~2m, remaining: ~13m) 40/297 tested (26 survived, 0 timed out)
Mutation testing 14% (elapsed: ~2m, remaining: ~13m) 43/297 tested (29 survived, 0 timed out)
Mutation testing 15% (elapsed: ~2m, remaining: ~13m) 46/297 tested (32 survived, 0 timed out)
Mutation testing 16% (elapsed: ~2m, remaining: ~13m) 49/297 tested (35 survived, 0 timed out)
Mutation testing 17% (elapsed: ~2m, remaining: ~13m) 52/297 tested (37 survived, 0 timed out)
Mutation testing 18% (elapsed: ~3m, remaining: ~13m) 55/297 tested (38 survived, 0 timed out)
Mutation testing 19% (elapsed: ~3m, remaining: ~13m) 58/297 tested (40 survived, 0 timed out)
Mutation testing 20% (elapsed: ~3m, remaining: ~12m) 61/297 tested (43 survived, 0 timed out)
Mutation testing 21% (elapsed: ~3m, remaining: ~12m) 64/297 tested (46 survived, 0 timed out)
Mutation testing 22% (elapsed: ~3m, remaining: ~12m) 67/297 tested (46 survived, 0 timed out)
Mutation testing 23% (elapsed: ~3m, remaining: ~12m) 71/297 tested (47 survived, 0 timed out)
Mutation testing 24% (elapsed: ~4m, remaining: ~12m) 74/297 tested (47 survived, 0 timed out)
Mutation testing 26% (elapsed: ~4m, remaining: ~11m) 78/297 tested (48 survived, 0 timed out)
Mutation testing 27% (elapsed: ~4m, remaining: ~11m) 81/297 tested (48 survived, 0 timed out)
Mutation testing 28% (elapsed: ~4m, remaining: ~11m) 84/297 tested (49 survived, 0 timed out)
Mutation testing 29% (elapsed: ~4m, remaining: ~11m) 87/297 tested (49 survived, 0 timed out)
Mutation testing 30% (elapsed: ~4m, remaining: ~11m) 90/297 tested (52 survived, 0 timed out)
Mutation testing 31% (elapsed: ~5m, remaining: ~10m) 93/297 tested (55 survived, 0 timed out)
Mutation testing 32% (elapsed: ~5m, remaining: ~10m) 96/297 tested (58 survived, 0 timed out)
Mutation testing 33% (elapsed: ~5m, remaining: ~10m) 100/297 tested (58 survived, 0 timed out)
Mutation testing 35% (elapsed: ~5m, remaining: ~10m) 104/297 tested (58 survived, 0 timed out)
Mutation testing 36% (elapsed: ~5m, remaining: ~10m) 107/297 tested (58 survived, 0 timed out)
Mutation testing 37% (elapsed: ~5m, remaining: ~9m) 110/297 tested (59 survived, 0 timed out)
Mutation testing 38% (elapsed: ~6m, remaining: ~9m) 114/297 tested (60 survived, 0 timed out)
Mutation testing 39% (elapsed: ~6m, remaining: ~9m) 117/297 tested (60 survived, 0 timed out)
Mutation testing 40% (elapsed: ~6m, remaining: ~9m) 120/297 tested (60 survived, 0 timed out)
Mutation testing 41% (elapsed: ~6m, remaining: ~9m) 124/297 tested (60 survived, 0 timed out)
Mutation testing 43% (elapsed: ~6m, remaining: ~8m) 128/297 tested (60 survived, 0 timed out)
Mutation testing 44% (elapsed: ~6m, remaining: ~8m) 131/297 tested (60 survived, 0 timed out)
Mutation testing 45% (elapsed: ~7m, remaining: ~8m) 134/297 tested (63 survived, 0 timed out)
Mutation testing 46% (elapsed: ~7m, remaining: ~8m) 138/297 tested (63 survived, 0 timed out)
Mutation testing 47% (elapsed: ~7m, remaining: ~8m) 141/297 tested (63 survived, 0 timed out)
Mutation testing 48% (elapsed: ~7m, remaining: ~7m) 144/297 tested (66 survived, 0 timed out)
Mutation testing 49% (elapsed: ~7m, remaining: ~7m) 147/297 tested (68 survived, 0 timed out)
Mutation testing 50% (elapsed: ~7m, remaining: ~7m) 150/297 tested (70 survived, 0 timed out)
Mutation testing 51% (elapsed: ~8m, remaining: ~7m) 154/297 tested (70 survived, 0 timed out)
Mutation testing 52% (elapsed: ~8m, remaining: ~7m) 156/297 tested (71 survived, 0 timed out)
Mutation testing 53% (elapsed: ~8m, remaining: ~7m) 160/297 tested (75 survived, 0 timed out)
Mutation testing 54% (elapsed: ~8m, remaining: ~6m) 163/297 tested (76 survived, 0 timed out)
Mutation testing 55% (elapsed: ~8m, remaining: ~6m) 166/297 tested (76 survived, 0 timed out)
Mutation testing 56% (elapsed: ~8m, remaining: ~6m) 169/297 tested (76 survived, 0 timed out)
Mutation testing 58% (elapsed: ~9m, remaining: ~6m) 173/297 tested (77 survived, 0 timed out)
Mutation testing 59% (elapsed: ~9m, remaining: ~6m) 176/297 tested (79 survived, 0 timed out)
Mutation testing 60% (elapsed: ~9m, remaining: ~6m) 179/297 tested (79 survived, 0 timed out)
Mutation testing 61% (elapsed: ~9m, remaining: ~6m) 182/297 tested (79 survived, 0 timed out)
Mutation testing 61% (elapsed: ~9m, remaining: ~5m) 184/297 tested (80 survived, 0 timed out)
Mutation testing 62% (elapsed: ~9m, remaining: ~5m) 187/297 tested (80 survived, 0 timed out)
Mutation testing 63% (elapsed: ~10m, remaining: ~5m) 190/297 tested (80 survived, 0 timed out)
Mutation testing 64% (elapsed: ~10m, remaining: ~5m) 193/297 tested (80 survived, 0 timed out)
Mutation testing 65% (elapsed: ~10m, remaining: ~5m) 196/297 tested (80 survived, 0 timed out)
Mutation testing 67% (elapsed: ~10m, remaining: ~5m) 199/297 tested (80 survived, 0 timed out)
Mutation testing 68% (elapsed: ~10m, remaining: ~5m) 202/297 tested (80 survived, 0 timed out)
Mutation testing 69% (elapsed: ~10m, remaining: ~4m) 205/297 tested (80 survived, 0 timed out)
Mutation testing 70% (elapsed: ~11m, remaining: ~4m) 208/297 tested (80 survived, 0 timed out)
Mutation testing 71% (elapsed: ~11m, remaining: ~4m) 211/297 tested (83 survived, 0 timed out)
Mutation testing 72% (elapsed: ~11m, remaining: ~4m) 214/297 tested (83 survived, 0 timed out)
Mutation testing 73% (elapsed: ~11m, remaining: ~4m) 217/297 tested (83 survived, 0 timed out)
Mutation testing 74% (elapsed: ~11m, remaining: ~4m) 220/297 tested (85 survived, 0 timed out)
Mutation testing 75% (elapsed: ~11m, remaining: ~3m) 223/297 tested (88 survived, 0 timed out)
Mutation testing 76% (elapsed: ~12m, remaining: ~3m) 226/297 tested (91 survived, 0 timed out)
Mutation testing 77% (elapsed: ~12m, remaining: ~3m) 229/297 tested (94 survived, 0 timed out)
Mutation testing 78% (elapsed: ~12m, remaining: ~3m) 232/297 tested (97 survived, 0 timed out)
Mutation testing 79% (elapsed: ~12m, remaining: ~3m) 235/297 tested (100 survived, 0 timed out)
Mutation testing 80% (elapsed: ~12m, remaining: ~3m) 238/297 tested (103 survived, 0 timed out)
Mutation testing 81% (elapsed: ~12m, remaining: ~2m) 241/297 tested (103 survived, 0 timed out)
Mutation testing 82% (elapsed: ~13m, remaining: ~2m) 244/297 tested (103 survived, 0 timed out)
Mutation testing 83% (elapsed: ~13m, remaining: ~2m) 247/297 tested (103 survived, 0 timed out)
Mutation testing 84% (elapsed: ~13m, remaining: ~2m) 250/297 tested (103 survived, 0 timed out)
Mutation testing 85% (elapsed: ~13m, remaining: ~2m) 253/297 tested (104 survived, 0 timed out)
Mutation testing 86% (elapsed: ~13m, remaining: ~2m) 256/297 tested (106 survived, 0 timed out)
Mutation testing 87% (elapsed: ~13m, remaining: ~2m) 259/297 tested (106 survived, 0 timed out)
Mutation testing 88% (elapsed: ~14m, remaining: ~1m) 262/297 tested (108 survived, 0 timed out)
Mutation testing 88% (elapsed: ~14m, remaining: ~1m) 264/297 tested (109 survived, 0 timed out)
Mutation testing 89% (elapsed: ~14m, remaining: ~1m) 267/297 tested (112 survived, 0 timed out)
Mutation testing 90% (elapsed: ~14m, remaining: ~1m) 270/297 tested (112 survived, 0 timed out)
Mutation testing 91% (elapsed: ~14m, remaining: ~1m) 273/297 tested (113 survived, 0 timed out)
Mutation testing 92% (elapsed: ~14m, remaining: ~1m) 276/297 tested (116 survived, 0 timed out)
Mutation testing 93% (elapsed: ~15m, remaining: <1m) 279/297 tested (116 survived, 0 timed out)
Mutation testing 94% (elapsed: ~15m, remaining: <1m) 282/297 tested (116 survived, 0 timed out)
Mutation testing 95% (elapsed: ~15m, remaining: <1m) 285/297 tested (116 survived, 0 timed out)
Mutation testing 96% (elapsed: ~15m, remaining: <1m) 288/297 tested (117 survived, 0 timed out)
Mutation testing 97% (elapsed: ~15m, remaining: <1m) 291/297 tested (118 survived, 0 timed out)
Mutation testing 98% (elapsed: ~15m, remaining: <1m) 294/297 tested (121 survived, 0 timed out)

All tests
  ✓ All tests (killed 173)

[Survived] PrecomputedMutator
crawler-url-parser.js:32:6
-   	if (currentUrlStr && _has_illegal_chars(currentUrlStr)) return null;
+   	if (!currentUrlStr || _has_illegal_chars(currentUrlStr)) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:32:6
-   	if (currentUrlStr && _has_illegal_chars(currentUrlStr)) return null;
+   	if (currentUrlStr != baseUrlStr && _has_illegal_chars(currentUrlStr)) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:32:42
-   	if (currentUrlStr && _has_illegal_chars(currentUrlStr)) return null;
+   	if (currentUrlStr && _has_illegal_chars(currentUrlStr.split('').reverse().join(''))) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:32:42
-   	if (currentUrlStr && _has_illegal_chars(currentUrlStr)) return null;
+   	if (currentUrlStr && _has_illegal_chars(currentUrlStr.toLowerCase())) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:33:6
-   	if (baseUrlStr && _has_illegal_chars(baseUrlStr)) return null;
+   	if (baseUrlStr && _has_illegal_chars(baseUrlStr) && baseUrlStr.length > 0) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:33:39
-   	if (baseUrlStr && _has_illegal_chars(baseUrlStr)) return null;
+   	if (baseUrlStr && _has_illegal_chars(baseUrlStr.toLowerCase())) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:33:39
-   	if (baseUrlStr && _has_illegal_chars(baseUrlStr)) return null;
+   	if (baseUrlStr && _has_illegal_chars(baseUrlStr.substring(1))) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:33:39
-   	if (baseUrlStr && _has_illegal_chars(baseUrlStr)) return null;
+   	if (baseUrlStr && _has_illegal_chars(baseUrlStr.split('').reverse().join(''))) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:36:18
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/i, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:18
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/g, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:18
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/gi, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:40
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/^#.*$/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:40
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/g, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:40
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/i, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:48
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/, '#');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:48
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/, '#' + Math.random());

[Survived] PrecomputedMutator
crawler-url-parser.js:36:48
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/, '#' + Date.now());

[Survived] PrecomputedMutator
crawler-url-parser.js:40:16
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, '&');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:16
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:35
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/g, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:35
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/\/#.*$/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:43
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, '#');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:43
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, '#' + 'foo');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:43
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, '#' + parseInt(currentUrlStr, 16));

[Survived] PrecomputedMutator
crawler-url-parser.js:42:41
-   		if (!/^\.*\/|^(?!localhost)\w+:/.test(currentUrlStr)) {
+   		if (!/^\.*\/|^(?!localhost)\w+:/.test(currentUrlStr.toLowerCase())) {

[Survived] PrecomputedMutator
crawler-url-parser.js:43:42
-   			currentUrlStr = currentUrlStr.replace(/^(?!(?:\w+:)?\/\/)/, 'http://');
+   			currentUrlStr = currentUrlStr.replace(/^(?!(?:\w+:)?\/\/)/g, 'http://');

[Survived] PrecomputedMutator
crawler-url-parser.js:43:42
-   			currentUrlStr = currentUrlStr.replace(/^(?!(?:\w+:)?\/\/)/, 'http://');
+   			currentUrlStr = currentUrlStr.replace(/^(?!(?:\w+:)?\/\/)/i, 'http://');

[Survived] PrecomputedMutator
crawler-url-parser.js:43:42
-   			currentUrlStr = currentUrlStr.replace(/^(?!(?:\w+:)?\/\/)/, 'http://');
+   			currentUrlStr = currentUrlStr.replace(/^(?!(?:\w+:)?\/\/)/m, 'http://');

[Survived] PrecomputedMutator
crawler-url-parser.js:47:18
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(URL.parse(currentUrlStr, false, true));

[Survived] PrecomputedMutator
crawler-url-parser.js:47:18
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(URL.parse(currentUrlStr, true, false));

[Survived] PrecomputedMutator
crawler-url-parser.js:47:18
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(URL.parse(currentUrlStr, true, true));

[Survived] PrecomputedMutator
crawler-url-parser.js:47:43
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:43
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, 0, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:43
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, null, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:49
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:49
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, null);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:49
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, undefined);

[Survived] PrecomputedMutator
crawler-url-parser.js:54:6
-   	if (parsedUrl.host == null && baseUrlStr) {
+   	if (parsedUrl.host === null && baseUrlStr) {

[Survived] PrecomputedMutator
crawler-url-parser.js:55:23
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, false, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:23
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:23
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:45
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:45
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, undefined, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:51
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:51
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, null);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:51
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, "hello");

[Survived] PrecomputedMutator
crawler-url-parser.js:57:28
-   		ret.baseurl = URL.format(parsedBaseUrl);
+   		ret.baseurl = URL.format(parsedBaseUrl.href);

[Survived] PrecomputedMutator
crawler-url-parser.js:59:31
-   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, parsedUrl));
+   		let absoluteUrl = URL.parse(URL.resolveObject(parsedBaseUrl, parsedUrl));

[Survived] PrecomputedMutator
crawler-url-parser.js:60:19
-   		currentUrlStr = URL.format(absoluteUrl);
+   		currentUrlStr = URL.parse(absoluteUrl);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:14
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(URL.parse(currentUrlStr, false, true));

[Survived] PrecomputedMutator
crawler-url-parser.js:63:14
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(URL.parse(currentUrlStr, true, false));

[Survived] PrecomputedMutator
crawler-url-parser.js:63:14
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(URL.parse(currentUrlStr, true, true));

[Survived] PrecomputedMutator
crawler-url-parser.js:63:24
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr.replace(/#.*$/, ''), true, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:39
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:39
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, parsedUrl.protocol !== 'http:', true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:45
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:45
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, null);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:45
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, 1);

[Survived] PrecomputedMutator
crawler-url-parser.js:72:30
-   		let parsedHost = psl.parse(ret.host);
+   		let parsedHost = psl.parse(ret.host.split(':')[0]);

[Survived] PrecomputedMutator
crawler-url-parser.js:85:22
-   	var baseUrl = parse(sourceUrl);
+   	var baseUrl = parse(sourceUrl + '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:97:7
-   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href)) return;
+   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/gi.test(href)) return;

[Survived] PrecomputedMutator
crawler-url-parser.js:97:7
-   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href)) return;
+   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/i.test(href)) return;

[Survived] PrecomputedMutator
crawler-url-parser.js:97:7
-   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href)) return;
+   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/i.test(href.toLowerCase())) return;

[Survived] PrecomputedMutator
crawler-url-parser.js:101:7
-   		if (currentUrl && currentUrl.url) {
+   		if (currentUrl && currentUrl.url !== '') {

[Survived] PrecomputedMutator
crawler-url-parser.js:101:7
-   		if (currentUrl && currentUrl.url) {
+   		if (currentUrl && currentUrl.url !== null && currentUrl.url !== '') {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:8
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.url) && urlMap.get(currentUrl.url).text.includes(text)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:8
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.url) && urlMap.get(currentUrl.url).text.length > 0) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:8
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.hasOwnProperty(currentUrl.url)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:19
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.url + "123")) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:19
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.url.replace("www.", ""))) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:9
-   				if (!tmpUrl.text.includes(text)) {
+   				if (tmpUrl.text.includes(text)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:9
-   				if (!tmpUrl.text.includes(text)) {
+   				if (tmpUrl.text !== text) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:9
-   				if (!tmpUrl.text.includes(text)) {
+   				if (tmpUrl.text.split(" ").includes(text)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:31
-   				if (!tmpUrl.text.includes(text)) {
+   				if (!tmpUrl.text.includes(text.substring(0))) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:31
-   				if (!tmpUrl.text.includes(text)) {
+   				if (!tmpUrl.text.includes(text.replace(/^/, ' '))) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:31
-   				if (!tmpUrl.text.includes(text)) {
+   				if (!tmpUrl.text.includes(text.split('').reverse().join(''))) {

[Survived] PrecomputedMutator
crawler-url-parser.js:116:16
-   	urlMap.delete(baseUrlStr);
+   	urlMap.delete(baseUrlStr.substring(1));

[Survived] PrecomputedMutator
crawler-url-parser.js:116:16
-   	urlMap.delete(baseUrlStr);
+   	urlMap.delete(baseUrlStr.toUpperCase());

[Survived] PrecomputedMutator
crawler-url-parser.js:116:16
-   	urlMap.delete(baseUrlStr);
+   	urlMap.delete(baseUrlStr.split('').reverse().join(''));

[Survived] PrecomputedMutator
crawler-url-parser.js:119:21
-   		currentUrl.type = gettype(currentUrl, baseUrl);
+   		currentUrl.type = gettype(currentUrl, baseUrl.url);

[Survived] PrecomputedMutator
crawler-url-parser.js:146:17
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:17
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '\\');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:17
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:71
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/default\.[a-z]+$/g, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:71
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/default\.[a-z]+$/i, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:71
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/default\.[a-z]+$/m, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:93
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '\\');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:93
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:93
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '#');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:17
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:17
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:17
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, 'default');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:17
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:17
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/default').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:38
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/i, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:38
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/g, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:38
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/m, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:58
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '\\').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:58
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '\\\\').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:58
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/' + '\\').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:93
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '#');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:93
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '*');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:93
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '^');

[Survived] PrecomputedMutator
crawler-url-parser.js:161:57
-   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/g, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:161:57
-   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/i, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:161:57
-   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/m, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:162:57
-   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/g, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:162:57
-   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/i, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:162:57
-   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/m, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:163:8
-   			if (linkurl_without_last_part == pageurl_without_last_part) return "samelevel"
+   			if (linkurl_without_last_part === pageurl_without_last_part) return "samelevel"

[Survived] PrecomputedMutator
crawler-url-parser.js:163:8
-   			if (linkurl_without_last_part == pageurl_without_last_part) return "samelevel"
+   			if (linkurl_without_last_part.includes(pageurl_without_last_part)) return "samelevel"

[Survived] PrecomputedMutator
crawler-url-parser.js:163:8
-   			if (linkurl_without_last_part == pageurl_without_last_part) return "samelevel"
+   			if (linkurl_without_last_part.indexOf(pageurl_without_last_part) === 0) return "samelevel"

[Survived] PrecomputedMutator
crawler-url-parser.js:165:8
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.startsWith(pageurl_path)) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:165:30
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.includes(pageurl_path.toLowerCase())) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:165:30
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.includes(pageurl_path.slice(1))) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:165:30
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.includes(pageurl_path.split("/").pop())) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:171:13
-   	} else if (linkurl.domain == pageurl.domain) {
+   	} else if (linkurl.domain === pageurl.domain) {

[Survived] PrecomputedMutator
crawler-url-parser.js:171:13
-   	} else if (linkurl.domain == pageurl.domain) {
+   	} else if (linkurl.domain.includes(pageurl.domain)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:186:2
-   	console.log("for testing purpose");
+   	console.error("for testing purpose");

[Survived] PrecomputedMutator
crawler-url-parser.js:186:2
-   	console.log("for testing purpose");
+   	console.warn("for testing purpose");

[Survived] PrecomputedMutator
crawler-url-parser.js:186:2
-   	console.log("for testing purpose");
+   	console.info("for testing purpose");

[Survived] PrecomputedMutator
crawler-url-parser.js:205:18
-   	let res = parse(url);
+   	let res = parse(url.host);

[Survived] PrecomputedMutator
crawler-url-parser.js:205:18
-   	let res = parse(url);
+   	let res = parse(url.pathname);

[Survived] PrecomputedMutator
crawler-url-parser.js:205:18
-   	let res = parse(url);
+   	let res = parse(url.search);

Ran 1.00 tests per mutant on average.
-----------------------|---------|----------|-----------|------------|----------|----------|
File                   | % score | # killed | # timeout | # survived | # no cov | # errors |
-----------------------|---------|----------|-----------|------------|----------|----------|
All files              |   58.25 |      173 |         0 |        124 |        0 |        0 |
 crawler-url-parser.js |   58.25 |      173 |         0 |        124 |        0 |        0 |
-----------------------|---------|----------|-----------|------------|----------|----------|
[32m17:32:14 (2574) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/reports/mutation/mutation.html
[32m17:32:14 (2574) INFO MutationTestExecutor[39m Done in 16 minutes 5 seconds.

real	16m6.357s
user	12m15.159s
sys	1m0.932s
