*** using precomputed mutations ***
[32m12:44:52 (2720) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m12:44:52 (2720) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m12:44:52 (2720) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/pull-stream/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m12:44:53 (2720) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m12:44:53 (2720) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m12:44:54 (2720) INFO ProjectReader[39m Found 31 of 1504 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 741 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k in sources.keys()) exports[k] = sources[k];
Mutant 1 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k in sources.values()) exports[k] = sources[k];
Mutant 2 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k in sources.entries()) exports[k] = sources[k];
Mutant 3 in index.js: sources replaced with sources[0]
Mutant 4 in index.js: sources replaced with sources.length
Mutant 5 in index.js: sources replaced with sources.keys()
Mutant 6 in index.js: for (var k in throughs) exports[k] = throughs[k]; replaced with for (var k in throughs.method()) exports[k] = throughs[k];
Mutant 7 in index.js: for (var k in throughs) exports[k] = throughs[k]; replaced with for (var k in throughs.stream()) exports[k] = throughs[k];
Mutant 8 in index.js: throughs replaced with sinks
Mutant 9 in index.js: throughs replaced with throughs.reverse()
Mutant 10 in index.js: throughs replaced with throughs.pop()
Mutant 11 in index.js: for (var k in sinks) exports[k] = sinks[k]; replaced with for (var k in sinks.reverse()) exports[k] = sinks[k];
Mutant 12 in index.js: sinks replaced with throughs
Mutant 13 in index.js: sinks replaced with sources[0]
Mutant 14 in index.js: sinks replaced with sinks.filter(sink => sink.name === 'PLACEHOLDER')
Mutant 15 in pull.js: typeof a === 'function' && a.length === 1 replaced with typeof a === 'function' && a.length > 1
Mutant 16 in pull.js: typeof a === 'function' && a.length === 1 replaced with typeof a === 'function' && a.length < 1
Mutant 17 in pull.js: typeof a === 'function' && a.length === 1 replaced with typeof a === 'function' && a.parameterTypes && a.parameterTypes[0].kind !== 'function'
Mutant 18 in pull.js: for (var i = 0; i < length; i++) args[i] = arguments[i]; replaced with for (var i = 0; i > length; i--) args[i] = arguments[i];
Mutant 19 in pull.js: for (var i = 0; i < length; i++) args[i] = arguments[i]; replaced with for (var i = length - 1; i >= 0; i--) args[i] = arguments[i];
Mutant 20 in pull.js: i < length replaced with i <= length
Mutant 21 in pull.js: i < length replaced with i < length - 1
Mutant 22 in pull.js: i < length replaced with i > 0 && i < length
Mutant 23 in pull.js: i++ replaced with i--
Mutant 24 in pull.js: i++ replaced with i += 2
Mutant 25 in pull.js: i++ replaced with i = Math.floor(i / 2)
Mutant 26 in pull.js: args == null replaced with args[0] == null
Mutant 27 in pull.js: args == null replaced with args === []
Mutant 28 in pull.js: args == null replaced with ref === null
Mutant 29 in pull.js: length replaced with length - 1
Mutant 30 in pull.js: length replaced with length + 1
Mutant 31 in pull.js: length replaced with length * 2
Mutant 32 in pull.js: pull(read, ref[0]) replaced with pull(read, ref[1])
Mutant 33 in pull.js: pull(read, ref[0]) replaced with pull(read, 1)
Mutant 34 in pull.js: pull(read, ref[0]) replaced with pull(read + ref[0])
Mutant 35 in pull.js: read replaced with read * 2
Mutant 36 in pull.js: read replaced with read + 1
Mutant 37 in pull.js: read replaced with read - 1
Mutant 38 in pull.js: ref[0] replaced with ref[1]
Mutant 39 in pull.js: ref[0] replaced with ref[ref.length - 1]
Mutant 40 in pull.js: ref[0] replaced with ref[Math.random() * ref.length | 0]
Mutant 41 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[1], ref[0])
Mutant 42 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[0], ref[0])
Mutant 43 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[0] + ref[1])
Mutant 44 in pull.js: pull replaced with read && ref[1]
Mutant 45 in pull.js: pull replaced with read || ref[1]
Mutant 46 in pull.js: read replaced with 1
Mutant 47 in pull.js: read replaced with null
Mutant 48 in pull.js: read replaced with {
  read: read
}
Mutant 49 in pull.js: ref[0] replaced with ref[1]
Mutant 50 in pull.js: ref[0] replaced with ref[2]
Mutant 51 in pull.js: ref[0] replaced with read.source
Mutant 52 in pull.js: ref[1] replaced with ref[2]
Mutant 53 in pull.js: ref[1] replaced with ref[0] + 1
Mutant 54 in pull.js: ref[1] replaced with null
Mutant 55 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[2], ref[3], ref[4])
Mutant 56 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[1], ref[2], ref[3])
Mutant 57 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[0], ref[2], ref[3])
Mutant 58 in pull.js: read replaced with read + 1
Mutant 59 in pull.js: read replaced with read - 1
Mutant 60 in pull.js: ref[0] replaced with undefined
Mutant 61 in pull.js: ref[0] replaced with null
Mutant 62 in pull.js: ref[0] replaced with "string"
Mutant 63 in pull.js: ref[1] replaced with ref[2]
Mutant 64 in pull.js: ref[1] replaced with ref[0]
Mutant 65 in pull.js: ref[1] replaced with null
Mutant 66 in pull.js: ref[2] replaced with ref[3]
Mutant 67 in pull.js: ref[2] replaced with ref[1] + ref[2]
Mutant 68 in pull.js: ref[2] replaced with function () {
  return ref[2];
}
Mutant 69 in pull.js: pull(read, ref[0], ref[1], ref[2], ref[3]) replaced with pull(ref[0], ref[1], ref[2], ref[3], ref[4])
Mutant 70 in pull.js: pull(read, ref[0], ref[1], ref[2], ref[3]) replaced with pull(read, ref[0], ref[1], ref[2], ref[3] + 1)
Mutant 71 in pull.js: read replaced with read + 1
Mutant 72 in pull.js: read replaced with read && null
Mutant 73 in pull.js: read replaced with read || null
Mutant 74 in pull.js: ref[0] replaced with ref[1]
Mutant 75 in pull.js: ref[0] replaced with ref.length
Mutant 76 in pull.js: ref[0] replaced with args[0]
Mutant 77 in pull.js: ref[1] replaced with ref[0]
Mutant 78 in pull.js: ref[1] replaced with "test"
Mutant 79 in pull.js: ref[1] replaced with ref[2]
Mutant 80 in pull.js: ref[2] replaced with ref[3]
Mutant 81 in pull.js: ref[2] replaced with ref.length
Mutant 82 in pull.js: ref[2] replaced with "foobar"
Mutant 83 in pull.js: ref[3] replaced with ref[4]
Mutant 84 in pull.js: ref[3] replaced with ref[2]
Mutant 85 in pull.js: ref[3] replaced with ref[0]
Mutant 86 in pull.js: ref.unshift replaced with ref.forEach
Mutant 87 in pull.js: ref.unshift replaced with ref.slice
Mutant 88 in pull.js: ref.unshift replaced with ref.splice
Mutant 89 in pull.js: read replaced with read.length
Mutant 90 in pull.js: read replaced with null
Mutant 91 in pull.js: pull.apply(null, ref) replaced with pull.apply(undefined, ref)
Mutant 92 in pull.js: pull.apply(null, ref) replaced with pull.apply(null, [])
Mutant 93 in pull.js: pull.apply(null, ref) replaced with pull.apply(null, ref.length)
Mutant 94 in pull.js: pull.apply replaced with pull.call.bind
Mutant 95 in pull.js: pull.apply replaced with pull.apply.bind
Mutant 96 in pull.js: pull.apply replaced with pull.bind
Mutant 97 in pull.js: null replaced with undefined
Mutant 98 in pull.js: null replaced with {}
Mutant 99 in pull.js: null replaced with function () {}
Mutant 100 in pull.js: ref replaced with ref[0]
Mutant 101 in pull.js: ref replaced with ref.length
Mutant 102 in pull.js: ref replaced with ref[length - 1]
Mutant 103 in pull.js: read && typeof read.source === 'function' replaced with read
Mutant 104 in pull.js: read && typeof read.source === 'function' replaced with typeof read === 'function' && 'source' in read
Mutant 105 in pull.js: read && typeof read.source === 'function' replaced with read instanceof Function && 'source' in read
Mutant 106 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = 0; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 107 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = length - 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 108 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = length * 2; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 109 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = length - 1; i >= 0; i--) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 110 in pull.js: i < length replaced with i <= length
Mutant 111 in pull.js: i < length replaced with i >= length
Mutant 112 in pull.js: i < length replaced with i + 1 < length
Mutant 113 in pull.js: i++ replaced with i--
Mutant 114 in pull.js: i++ replaced with length--
Mutant 115 in pull.js: typeof s === 'function' replaced with typeof s !== 'function'
Mutant 116 in pull.js: typeof s === 'function' replaced with s.sink !== 'function'
Mutant 117 in pull.js: typeof s === 'function' replaced with true
Mutant 118 in pull.js: s replaced with s + 1
Mutant 119 in pull.js: read replaced with 1
Mutant 120 in pull.js: read replaced with read + 1
Mutant 121 in pull.js: read replaced with read * 2
Mutant 122 in pull.js: s && typeof s === 'object' replaced with s instanceof Object
Mutant 123 in pull.js: s && typeof s === 'object' replaced with s != null && typeof s === 'object'
Mutant 124 in pull.js: s && typeof s === 'object' replaced with s.constructor === Object
Mutant 125 in pull.js: s.sink replaced with s.sink = read
Mutant 126 in pull.js: read replaced with read + 1
Mutant 127 in pull.js: read replaced with read - 1
Mutant 128 in pull.js: read replaced with read * 2
Mutant 129 in collect.js: item replaced with arr.push(item + 1)
Mutant 130 in collect.js: item replaced with arr.push(item + arr.length)
Mutant 131 in collect.js: item replaced with arr.push(item[0])
Mutant 132 in drain.js: !done replaced with done === null
Mutant 133 in drain.js: !done replaced with done === undefined
Mutant 134 in drain.js: !done replaced with done = false
Mutant 135 in drain.js: abort replaced with !abort
Mutant 136 in drain.js: abort replaced with 1
Mutant 137 in drain.js: loop replaced with !loop
Mutant 138 in drain.js: loop replaced with loop = false
Mutant 139 in drain.js: loop replaced with null
Mutant 140 in drain.js: end = end || abort replaced with end = abort
Mutant 141 in drain.js: end = end || abort replaced with end = !end
Mutant 142 in drain.js: end = end || abort replaced with end = abort || end
Mutant 143 in drain.js: done replaced with done(end === true ? end : null)
Mutant 144 in drain.js: done replaced with done(end === false ? end : null)
Mutant 145 in drain.js: done replaced with null
Mutant 146 in drain.js: done replaced with undefined
Mutant 147 in drain.js: done replaced with 0
Mutant 148 in drain.js: end && end !== true replaced with end !== end
Mutant 149 in drain.js: end && end !== true replaced with end && !end
Mutant 150 in drain.js: console.warn replaced with undefined
Mutant 151 in drain.js: console.warn replaced with 2
Mutant 152 in drain.js: doneLackingErr replaced with console.warn(err)
Mutant 153 in drain.js: doneLackingErr replaced with console.warn(errLackingDone)
Mutant 154 in drain.js: doneLackingErr replaced with console.warn(err || errLackingDone)
Mutant 155 in drain.js: op && false === op(data) || abort replaced with op && true === op(data) || abort
Mutant 156 in drain.js: op && false === op(data) || abort replaced with op && false === op(data) || !abort
Mutant 157 in drain.js: op && false === op(data) || abort replaced with op && true === op(data) || abort == true
Mutant 158 in drain.js: op replaced with op == true
Mutant 159 in drain.js: op replaced with op !== true
Mutant 160 in drain.js: op replaced with !op
Mutant 161 in drain.js: data replaced with data + 1
Mutant 162 in drain.js: data replaced with data + 'a'
Mutant 163 in drain.js: data replaced with data - 1
Mutant 164 in drain.js: read(abort || true, done || function () {}) replaced with read(abort || !done)
Mutant 165 in drain.js: read(abort || true, done || function () {}) replaced with read(abort && !done)
Mutant 166 in drain.js: read(abort || true, done || function () {}) replaced with read(!abort)
Mutant 167 in drain.js: done || function () {} replaced with (done || function () {})(null)
Mutant 168 in drain.js: done || function () {} replaced with (done || function () {})(true)
Mutant 169 in drain.js: done || function () {} replaced with (done || function () {})('error')
Mutant 170 in drain.js: !loop replaced with loop = false
Mutant 171 in drain.js: !loop replaced with !cbed
Mutant 172 in drain.js: !loop replaced with cbed !== true
Mutant 173 in drain.js: !cbed replaced with cbed && !cbed
Mutant 174 in drain.js: !cbed replaced with cbed || true
Mutant 175 in drain.js: !cbed replaced with cbed ^ true
Mutant 176 in drain.js: 'function' == typeof err replaced with err == true
Mutant 177 in drain.js: 'function' == typeof err replaced with !err
Mutant 178 in drain.js: read replaced with read !== undefined
Mutant 179 in drain.js: read replaced with read !== null
Mutant 180 in drain.js: read(abort, cb || function () {}) replaced with read(abort, cb || function (error) {
  throw error;
})
Mutant 181 in drain.js: read(abort, cb || function () {}) replaced with read(abort, cb && function () {})
Mutant 182 in drain.js: read(abort, cb || function () {}) replaced with read(abort, cb || function () {
  return undefined;
})
Mutant 183 in drain.js: read replaced with read && true
Mutant 184 in drain.js: read replaced with !read
Mutant 185 in drain.js: read replaced with read || true
Mutant 186 in drain.js: cb || function () {} replaced with (cb || function () {})()
Mutant 187 in drain.js: cb || function () {} replaced with function () {
  return cb || function () {};
}(cb)
Mutant 188 in drain.js: cb || function () {} replaced with typeof cb === 'function' && cb()
Mutant 189 in find.js: !cb replaced with cb !== null
Mutant 190 in find.js: !cb replaced with test(data)
Mutant 191 in find.js: !cb replaced with test(cb)
Mutant 192 in find.js: prop replaced with !prop
Mutant 193 in find.js: prop replaced with null
Mutant 194 in find.js: prop replaced with undefined
Mutant 195 in find.js: test replaced with !test
Mutant 196 in find.js: test(data) replaced with !test(data)
Mutant 197 in find.js: test(data) replaced with test(data) && test(data)
Mutant 198 in find.js: test(data) replaced with test(data) || test(data)
Mutant 199 in find.js: test replaced with test && false
Mutant 200 in find.js: test replaced with test || false
Mutant 201 in find.js: data replaced with data[0]
Mutant 202 in find.js: data replaced with data.length
Mutant 203 in find.js: cb(null, data) replaced with cb(undefined, data)
Mutant 204 in find.js: cb(null, data) replaced with cb(true, null)
Mutant 205 in find.js: cb(null, data) replaced with cb(NaN, data)
Mutant 206 in find.js: null replaced with undefined
Mutant 207 in find.js: null replaced with NaN
Mutant 208 in find.js: null replaced with {}
Mutant 209 in find.js: data replaced with data && null
Mutant 210 in find.js: data replaced with data || null
Mutant 211 in find.js: data replaced with data === null
Mutant 212 in find.js: ended replaced with !ended
Mutant 213 in find.js: ended replaced with ended === true
Mutant 214 in find.js: ended replaced with ended !== false
Mutant 215 in find.js: cb(err === true ? null : err, null) replaced with cb(null !== err)
Mutant 216 in find.js: cb(err === true ? null : err, null) replaced with cb(err == false)
Mutant 217 in find.js: cb(err === true ? null : err, null) replaced with cb(err === undefined)
Mutant 218 in find.js: cb replaced with !cb
Mutant 219 in find.js: err === true ? null : err replaced with err ? null : true
Mutant 220 in find.js: err === true ? null : err replaced with err !== true ? null : err
Mutant 221 in find.js: null replaced with undefined
Mutant 222 in find.js: null replaced with ''
Mutant 223 in find.js: null replaced with {}
Mutant 224 in log.js: console.log replaced with console.info
Mutant 225 in log.js: console.log replaced with console.warn
Mutant 226 in log.js: console.log replaced with console.error
Mutant 227 in log.js: data replaced with data.toUpperCase()
Mutant 228 in log.js: data replaced with data.slice(0, 1)
Mutant 229 in log.js: data replaced with data.length
Mutant 230 in on-end.js: drain(null, done) replaced with drain(undefined)
Mutant 231 in on-end.js: drain(null, done) replaced with drain(false)
Mutant 232 in on-end.js: drain(null, done) replaced with drain('')
Mutant 233 in on-end.js: null replaced with undefined
Mutant 234 in on-end.js: null replaced with true
Mutant 235 in on-end.js: null replaced with () => {}
Mutant 236 in reduce.js: !cb replaced with !!cb
Mutant 237 in reduce.js: !cb replaced with cb !== null
Mutant 238 in reduce.js: !cb replaced with !cb && acc !== null
Mutant 239 in reduce.js: reducer(acc, data) replaced with reducer(acc = data)
Mutant 240 in reduce.js: reducer(acc, data) replaced with reducer(acc += data)
Mutant 241 in reduce.js: reducer(acc, data) replaced with reducer(acc = -data)
Mutant 242 in reduce.js: reducer replaced with acc + data
Mutant 243 in reduce.js: reducer replaced with acc - data
Mutant 244 in reduce.js: reducer replaced with acc * data
Mutant 245 in reduce.js: acc replaced with null
Mutant 246 in reduce.js: acc replaced with undefined
Mutant 247 in reduce.js: acc replaced with NaN
Mutant 248 in reduce.js: data replaced with null
Mutant 249 in reduce.js: data replaced with undefined
Mutant 250 in reduce.js: data replaced with acc + data
Mutant 251 in reduce.js: cb(err, acc) replaced with cb(err)
Mutant 252 in reduce.js: cb(err, acc) replaced with cb(acc)
Mutant 253 in reduce.js: cb(err, acc) replaced with cb({})
Mutant 254 in reduce.js: cb replaced with acc = null
Mutant 255 in reduce.js: err replaced with null
Mutant 256 in reduce.js: err replaced with undefined
Mutant 257 in reduce.js: err replaced with "error"
Mutant 258 in reduce.js: acc replaced with acc + acc
Mutant 259 in reduce.js: acc replaced with null
Mutant 260 in reduce.js: acc replaced with Math.random()
Mutant 261 in reduce.js: arguments.length === 2 replaced with arguments.length > 1
Mutant 262 in reduce.js: arguments.length === 2 replaced with arguments.length >= 2
Mutant 263 in reduce.js: arguments.length === 2 replaced with arguments.length < 2
Mutant 264 in reduce.js: end replaced with end || acc
Mutant 265 in reduce.js: end replaced with end && acc
Mutant 266 in reduce.js: end replaced with acc !== end
Mutant 267 in reduce.js: cb replaced with acc
Mutant 268 in reduce.js: cb replaced with null
Mutant 269 in reduce.js: end === true ? null : end replaced with end === true ? null : acc
Mutant 270 in reduce.js: end === true ? null : end replaced with end === true ? acc : null
Mutant 271 in reduce.js: end === true ? null : end replaced with end === false ? null : acc
Mutant 272 in reduce.js: source replaced with 1
Mutant 273 in reduce.js: source replaced with "foo"
Mutant 274 in reduce.js: source replaced with {
  acc,
  data
}
Mutant 275 in count.js: end replaced with !end
Mutant 276 in count.js: end replaced with end && false
Mutant 277 in count.js: end replaced with end || true
Mutant 278 in count.js: end replaced with end + 1
Mutant 279 in count.js: end replaced with end - 1
Mutant 280 in count.js: end replaced with end > max
Mutant 281 in count.js: true replaced with max !== Infinity
Mutant 282 in count.js: true replaced with i <= max
Mutant 283 in count.js: true replaced with i < max - 1
Mutant 284 in count.js: cb(null, i++) replaced with cb(null, i--)
Mutant 285 in count.js: cb(null, i++) replaced with cb(null, i + 1)
Mutant 286 in count.js: cb(null, i++) replaced with cb(null, i - 1)
Mutant 287 in count.js: cb replaced with i
Mutant 288 in count.js: cb replaced with max
Mutant 289 in count.js: cb replaced with end + 1
Mutant 290 in count.js: null replaced with console.log(i)
Mutant 291 in count.js: null replaced with i * 2
Mutant 292 in count.js: i++ replaced with function () {
  i--;
  return i;
}
Mutant 293 in count.js: i++ replaced with function () {
  return i;
}
Mutant 294 in empty.js: true replaced with false
Mutant 295 in empty.js: true replaced with null
Mutant 296 in empty.js: true replaced with 1
Mutant 297 in error.js: err replaced with null
Mutant 298 in error.js: err replaced with undefined
Mutant 299 in error.js: err replaced with true
Mutant 300 in infinite.js: end replaced with end != null
Mutant 301 in infinite.js: end replaced with end < 0
Mutant 302 in infinite.js: end replaced with end !== end
Mutant 303 in infinite.js: end replaced with null
Mutant 304 in infinite.js: end replaced with undefined
Mutant 305 in infinite.js: end replaced with 0
Mutant 306 in infinite.js: cb(null, generate()) replaced with cb(undefined, generate())
Mutant 307 in infinite.js: cb(null, generate()) replaced with cb(0, generate())
Mutant 308 in infinite.js: cb(null, generate()) replaced with cb(NaN, generate())
Mutant 309 in infinite.js: null replaced with undefined
Mutant 310 in infinite.js: null replaced with 'hello'
Mutant 311 in infinite.js: null replaced with function () {
  return 'hello';
}
Mutant 312 in infinite.js: generate replaced with generate - 1
Mutant 313 in infinite.js: generate replaced with generate + 2
Mutant 314 in keys.js: object replaced with ""
Mutant 315 in keys.js: object replaced with null
Mutant 316 in keys.js: object replaced with undefined
Mutant 317 in once.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb(null, _value))
Mutant 318 in once.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb(null, onAbort))
Mutant 319 in once.js: cb replaced with cb(null, _value, _value)
Mutant 320 in once.js: cb replaced with cb(null, _value + 1)
Mutant 321 in once.js: cb replaced with cb(null, otherValue)
Mutant 322 in once.js: abort replaced with false
Mutant 323 in once.js: abort replaced with null
Mutant 324 in once.js: abort replaced with undefined
Mutant 325 in once.js: onAbort replaced with null
Mutant 326 in once.js: onAbort replaced with undefined
Mutant 327 in once.js: onAbort replaced with function () {}
Mutant 328 in once.js: value != null replaced with value === undefined
Mutant 329 in once.js: value != null replaced with !value && onAbort
Mutant 330 in once.js: value != null replaced with value.hasOwnProperty('key')
Mutant 331 in once.js: cb(null, _value) replaced with cb(undefined, _value)
Mutant 332 in once.js: cb(null, _value) replaced with cb(null, _value + 1)
Mutant 333 in once.js: cb(null, _value) replaced with cb('', _value)
Mutant 334 in once.js: cb replaced with _value
Mutant 335 in once.js: null replaced with undefined
Mutant 336 in once.js: null replaced with NaN
Mutant 337 in once.js: null replaced with true
Mutant 338 in once.js: _value replaced with _value + 1
Mutant 339 in once.js: _value replaced with -_value
Mutant 340 in once.js: _value replaced with 0
Mutant 341 in once.js: true replaced with false
Mutant 342 in once.js: true replaced with null
Mutant 343 in once.js: true replaced with !value
Mutant 344 in values.js: !array replaced with isEmpty(array)
Mutant 345 in values.js: !array replaced with !array.length
Mutant 346 in values.js: !array replaced with array.length === 0
Mutant 347 in values.js: abort replaced with abort && onAbort
Mutant 348 in values.js: abort replaced with abort ? onAbort() : null
Mutant 349 in values.js: abort replaced with onAbort ? abort : null
Mutant 350 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(onAbort, abort, cb)
Mutant 351 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, abort, 42)
Mutant 352 in values.js: abortCb replaced with array[i++]
Mutant 353 in values.js: abortCb replaced with i + 1
Mutant 354 in values.js: abortCb replaced with array.length - 1
Mutant 355 in values.js: cb replaced with null
Mutant 356 in values.js: cb replaced with "cb"
Mutant 357 in values.js: abort replaced with null
Mutant 358 in values.js: abort replaced with undefined
Mutant 359 in values.js: onAbort replaced with 0
Mutant 360 in values.js: onAbort replaced with null
Mutant 361 in values.js: onAbort replaced with []
Mutant 362 in values.js: true replaced with false
Mutant 363 in values.js: true replaced with 0
Mutant 364 in values.js: true replaced with ""
Mutant 365 in values.js: !Array.isArray(array) replaced with Array.isArray(array)
Mutant 366 in values.js: !Array.isArray(array) replaced with array instanceof Array
Mutant 367 in values.js: Array.isArray replaced with array.length === 0
Mutant 368 in values.js: Array.isArray replaced with array === undefined
Mutant 369 in values.js: array replaced with array.length
Mutant 370 in values.js: array replaced with array.map(function (item) {
  return item.length;
})
Mutant 371 in values.js: array replaced with array.concat(otherArray)
Mutant 372 in values.js: array replaced with array[0]
Mutant 373 in values.js: array replaced with array.length
Mutant 374 in values.js: array replaced with array.map(x => x)
Mutant 375 in values.js: abort replaced with !abort
Mutant 376 in values.js: abort replaced with abort && i >= array.length
Mutant 377 in values.js: abort replaced with i == 0
Mutant 378 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, undefined, onAbort)
Mutant 379 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, null, onAbort)
Mutant 380 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, true, onAbort)
Mutant 381 in values.js: cb replaced with ! --cb
Mutant 382 in values.js: cb replaced with !cb
Mutant 383 in values.js: cb replaced with cb(true)
Mutant 384 in values.js: abort replaced with !abort
Mutant 385 in values.js: abort replaced with abort && false
Mutant 386 in values.js: abort replaced with abort || true
Mutant 387 in values.js: onAbort replaced with undefined
Mutant 388 in values.js: onAbort replaced with null
Mutant 389 in values.js: onAbort replaced with () => {}
Mutant 390 in values.js: i >= array.length replaced with i == array.length
Mutant 391 in values.js: i >= array.length replaced with i > array.length
Mutant 392 in values.js: i >= array.length replaced with i <= 0
Mutant 393 in values.js: true replaced with abort
Mutant 394 in values.js: true replaced with true === false
Mutant 395 in values.js: true replaced with null
Mutant 396 in values.js: cb(null, array[i++]) replaced with cb(undefined, array[i++])
Mutant 397 in values.js: cb(null, array[i++]) replaced with cb(0, array[i++])
Mutant 398 in values.js: cb(null, array[i++]) replaced with cb("failed", array[i++])
Mutant 399 in values.js: cb replaced with null
Mutant 400 in values.js: cb replaced with undefined
Mutant 401 in values.js: null replaced with undefined
Mutant 402 in values.js: null replaced with false
Mutant 403 in values.js: null replaced with 0
Mutant 404 in values.js: array[i++] replaced with array[i + 1]
Mutant 405 in values.js: array[i++] replaced with array[Math.floor(Math.random() * array.length)]
Mutant 406 in async-map.js: !map replaced with map !== undefined
Mutant 407 in async-map.js: !map replaced with typeof map === 'function'
Mutant 408 in async-map.js: !map replaced with map.call(null) !== undefined
Mutant 409 in async-map.js: prop replaced with prop.map
Mutant 410 in async-map.js: prop replaced with prop.prop
Mutant 411 in async-map.js: map replaced with !map
Mutant 412 in async-map.js: map replaced with map.length
Mutant 413 in async-map.js: aborted replaced with !aborted
Mutant 414 in async-map.js: aborted replaced with aborted === null
Mutant 415 in async-map.js: aborted replaced with aborted && aborted.someProperty
Mutant 416 in async-map.js: cb replaced with null
Mutant 417 in async-map.js: cb replaced with undefined
Mutant 418 in async-map.js: cb replaced with {}
Mutant 419 in async-map.js: aborted replaced with "test"
Mutant 420 in async-map.js: aborted replaced with null
Mutant 421 in async-map.js: aborted replaced with aborted = {}
Mutant 422 in async-map.js: abort replaced with clearTimeout(abort)
Mutant 423 in async-map.js: abort replaced with abort === null
Mutant 424 in async-map.js: abort replaced with typeof abort === "undefined"
Mutant 425 in async-map.js: !busy replaced with busy && abortCb
Mutant 426 in async-map.js: !busy replaced with abortCb != null
Mutant 427 in async-map.js: !busy replaced with true
Mutant 428 in async-map.js: abort replaced with null
Mutant 429 in async-map.js: abort replaced with undefined
Mutant 430 in async-map.js: abort replaced with {}
Mutant 431 in async-map.js: busy replaced with busy || abortCb
Mutant 432 in async-map.js: busy replaced with abortCb !== undefined
Mutant 433 in async-map.js: busy replaced with false
Mutant 434 in async-map.js: cb replaced with abortCb
Mutant 435 in async-map.js: cb replaced with null
Mutant 436 in async-map.js: cb replaced with undefined
Mutant 437 in async-map.js: abort replaced with abortCb ? abort : null
Mutant 438 in async-map.js: abort replaced with abortCb ? abort : read
Mutant 439 in async-map.js: abort replaced with abortCb ? abort : map.source(abort, cb)
Mutant 440 in async-map.js: end replaced with null
Mutant 441 in async-map.js: end replaced with undefined
Mutant 442 in async-map.js: end replaced with true
Mutant 443 in async-map.js: cb replaced with abortCb = null
Mutant 444 in async-map.js: end replaced with null
Mutant 445 in async-map.js: end replaced with undefined
Mutant 446 in async-map.js: end replaced with 0
Mutant 447 in async-map.js: aborted replaced with !aborted
Mutant 448 in async-map.js: aborted replaced with aborted && true
Mutant 449 in async-map.js: aborted replaced with aborted == true
Mutant 450 in async-map.js: aborted replaced with null
Mutant 451 in async-map.js: aborted replaced with undefined
Mutant 452 in async-map.js: aborted replaced with false
Mutant 453 in async-map.js: aborted replaced with !aborted
Mutant 454 in async-map.js: aborted replaced with null
Mutant 455 in async-map.js: aborted replaced with undefined
Mutant 456 in async-map.js: cb replaced with abort
Mutant 457 in async-map.js: cb replaced with null
Mutant 458 in async-map.js: aborted replaced with aborted += 1
Mutant 459 in async-map.js: aborted replaced with aborted.error
Mutant 460 in async-map.js: aborted replaced with aborted()
Mutant 461 in async-map.js: aborted replaced with undefined
Mutant 462 in async-map.js: aborted replaced with null
Mutant 463 in async-map.js: aborted replaced with aborted.err
Mutant 464 in async-map.js: err replaced with !err
Mutant 465 in async-map.js: err replaced with err || abort
Mutant 466 in async-map.js: err replaced with err && !abort
Mutant 467 in async-map.js: next(err, cb) replaced with next(err)
Mutant 468 in async-map.js: next(err, cb) replaced with next(null, err)
Mutant 469 in async-map.js: next(err, cb) replaced with next(false, err)
Mutant 470 in async-map.js: err replaced with null
Mutant 471 in async-map.js: err replaced with undefined
Mutant 472 in async-map.js: err replaced with "error"
Mutant 473 in async-map.js: cb replaced with abortCb()
Mutant 474 in async-map.js: cb replaced with cb(aborted, data)
Mutant 475 in async-map.js: cb replaced with cb(data)
Mutant 476 in async-map.js: cb(null, data) replaced with cb(abort, data)
Mutant 477 in async-map.js: cb(null, data) replaced with cb(null, err)
Mutant 478 in async-map.js: cb(null, data) replaced with cb(undefined, undefined)
Mutant 479 in async-map.js: cb replaced with null
Mutant 480 in async-map.js: null replaced with abort
Mutant 481 in async-map.js: null replaced with undefined
Mutant 482 in async-map.js: data replaced with null
Mutant 483 in async-map.js: data replaced with undefined
Mutant 484 in async-map.js: data replaced with !data
Mutant 485 in filter-not.js: tester replaced with data
Mutant 486 in filter-not.js: filter replaced with test
Mutant 487 in filter-not.js: filter replaced with !test
Mutant 488 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return test(data);
}
Mutant 489 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return test(data) || test(data);
}
Mutant 490 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return !test(data) ? false : test(data);
}
Mutant 491 in filter-not.js: test replaced with test + false
Mutant 492 in filter-not.js: test replaced with test * true
Mutant 493 in filter-not.js: test replaced with test ?? false
Mutant 494 in filter-not.js: data replaced with !data
Mutant 495 in filter-not.js: data replaced with data.foo
Mutant 496 in filter.js: test replaced with test !== data
Mutant 497 in filter.js: test replaced with test.length === 0
Mutant 498 in filter.js: test replaced with data.match(test)
Mutant 499 in filter.js: !end && !test(data) replaced with test(data)
Mutant 500 in filter.js: !end && !test(data) replaced with !end || test(data)
Mutant 501 in filter.js: test replaced with data !== test
Mutant 502 in filter.js: data replaced with undefined
Mutant 503 in filter.js: data replaced with null
Mutant 504 in filter.js: data replaced with "random string"
Mutant 505 in filter.js: next(end, cb) replaced with next(end, !cb)
Mutant 506 in filter.js: next(end, cb) replaced with next(end, data)
Mutant 507 in filter.js: next(end, cb) replaced with next(data, end)
Mutant 508 in filter.js: next replaced with shadow
Mutant 509 in filter.js: end replaced with null
Mutant 510 in filter.js: end replaced with undefined
Mutant 511 in filter.js: end replaced with ''
Mutant 512 in filter.js: cb replaced with read
Mutant 513 in filter.js: cb replaced with end
Mutant 514 in filter.js: cb replaced with data
Mutant 515 in filter.js: cb(end, data) replaced with cb(end, null)
Mutant 516 in filter.js: cb(end, data) replaced with cb(end, '')
Mutant 517 in filter.js: cb(end, data) replaced with cb(undefined, data)
Mutant 518 in filter.js: cb replaced with !cb
Mutant 519 in filter.js: cb replaced with cb && data
Mutant 520 in filter.js: end replaced with undefined
Mutant 521 in filter.js: end replaced with end - 1
Mutant 522 in filter.js: end replaced with -end
Mutant 523 in filter.js: data replaced with test(data)
Mutant 524 in filter.js: data replaced with !test(data)
Mutant 525 in filter.js: data replaced with test(data.toLowerCase())
Mutant 526 in flatten.js: abort replaced with abort === true
Mutant 527 in flatten.js: abort replaced with abort != null
Mutant 528 in flatten.js: abort replaced with !abort
Mutant 529 in flatten.js: read(err || abort, cb) replaced with read(err && abort || cb)
Mutant 530 in flatten.js: read(err || abort, cb) replaced with read((err || abort) && cb)
Mutant 531 in flatten.js: read(err || abort, cb) replaced with read(err === abort && cb)
Mutant 532 in flatten.js: err || abort replaced with !err && !abort
Mutant 533 in flatten.js: err || abort replaced with err && abort
Mutant 534 in flatten.js: cb replaced with null
Mutant 535 in flatten.js: cb replaced with "foo"
Mutant 536 in flatten.js: cb replaced with new Error("bar")
Mutant 537 in flatten.js: read(abort, cb) replaced with read(null)
Mutant 538 in flatten.js: read(abort, cb) replaced with read(undefined)
Mutant 539 in flatten.js: read(abort, cb) replaced with read({})
Mutant 540 in flatten.js: abort replaced with true
Mutant 541 in flatten.js: abort replaced with !abort
Mutant 542 in flatten.js: abort replaced with false
Mutant 543 in flatten.js: cb replaced with cb(err, data)
Mutant 544 in flatten.js: cb replaced with cb(err)
Mutant 545 in flatten.js: cb replaced with read(null, cb)
Mutant 546 in flatten.js: _read replaced with !_read
Mutant 547 in flatten.js: _read replaced with _read && _read.length > 0
Mutant 548 in flatten.js: _read replaced with _read instanceof Array
Mutant 549 in flatten.js: err replaced with !err
Mutant 550 in flatten.js: err replaced with err === true
Mutant 551 in flatten.js: err replaced with err !== true
Mutant 552 in flatten.js: err === true replaced with err == false
Mutant 553 in flatten.js: err === true replaced with err != true
Mutant 554 in flatten.js: err === true replaced with !err
Mutant 555 in flatten.js: err replaced with err.message
Mutant 556 in flatten.js: err replaced with err.somethingElse
Mutant 557 in flatten.js: err replaced with null
Mutant 558 in flatten.js: cb(null, data) replaced with cb(undefined, data)
Mutant 559 in flatten.js: cb(null, data) replaced with cb(data, data)
Mutant 560 in flatten.js: cb(null, data) replaced with cb(data, null)
Mutant 561 in flatten.js: null replaced with undefined
Mutant 562 in flatten.js: null replaced with false
Mutant 563 in flatten.js: null replaced with 0
Mutant 564 in flatten.js: data replaced with null
Mutant 565 in flatten.js: data replaced with data.length
Mutant 566 in flatten.js: data replaced with data[0]
Mutant 567 in flatten.js: cb replaced with abort
Mutant 568 in flatten.js: cb replaced with undefined
Mutant 569 in flatten.js: end replaced with !end
Mutant 570 in flatten.js: end replaced with end + 1
Mutant 571 in flatten.js: end replaced with null
Mutant 572 in flatten.js: stream && 'object' === typeof stream replaced with !(stream && 'object' === typeof stream)
Mutant 573 in flatten.js: stream && 'object' === typeof stream replaced with stream && 'number' === typeof stream
Mutant 574 in flatten.js: stream && 'object' === typeof stream replaced with stream && 'function' === typeof stream
Mutant 575 in flatten.js: values replaced with 0
Mutant 576 in flatten.js: values replaced with 1
Mutant 577 in flatten.js: values replaced with !values
Mutant 578 in flatten.js: stream replaced with stream >> 0
Mutant 579 in flatten.js: stream replaced with null ?? stream
Mutant 580 in flatten.js: stream replaced with (() => {
  throw new Error('stream is not a valid value');
})()
Mutant 581 in flatten.js: 'function' !== typeof stream replaced with stream + ''
Mutant 582 in flatten.js: 'function' !== typeof stream replaced with stream.constructor.name === 'Function'
Mutant 583 in flatten.js: 'function' !== typeof stream replaced with stream()
Mutant 584 in flatten.js: once replaced with twice
Mutant 585 in flatten.js: once replaced with true
Mutant 586 in flatten.js: stream replaced with stream + 1
Mutant 587 in flatten.js: stream replaced with stream.slice(1)
Mutant 588 in flatten.js: stream replaced with stream * 2
Mutant 589 in flatten.js: nextChunk replaced with _read = null
Mutant 590 in map.js: !mapper replaced with mapper !== mapper
Mutant 591 in map.js: !mapper replaced with !mapper.call
Mutant 592 in map.js: !mapper replaced with !mapper(42)
Mutant 593 in map.js: prop replaced with !prop
Mutant 594 in map.js: prop replaced with prop = 0
Mutant 595 in map.js: prop replaced with prop = 1
Mutant 596 in map.js: mapper replaced with "mapper"
Mutant 597 in map.js: mapper replaced with mapper + 1
Mutant 598 in map.js: mapper replaced with mapper.test()
Mutant 599 in map.js: data replaced with !data
Mutant 600 in map.js: data replaced with data + 1
Mutant 601 in map.js: data replaced with null
Mutant 602 in map.js: cb replaced with null
Mutant 603 in map.js: cb replaced with undefined
Mutant 604 in map.js: err replaced with null
Mutant 605 in map.js: err replaced with "error"
Mutant 606 in map.js: err replaced with new Error("error")
Mutant 607 in map.js: cb(end, data) replaced with cb(end, null)
Mutant 608 in map.js: cb(end, data) replaced with cb(!end, data)
Mutant 609 in map.js: cb replaced with !cb
Mutant 610 in map.js: end replaced with !end
Mutant 611 in map.js: end replaced with end ? mapper(data) : data
Mutant 612 in map.js: data replaced with null
Mutant 613 in map.js: data replaced with 0
Mutant 614 in map.js: data replaced with {}
Mutant 615 in non-unique.js: unique(field, true) replaced with unique(field, false)
Mutant 616 in non-unique.js: unique(field, true) replaced with unique(_, true)
Mutant 617 in non-unique.js: unique(field, true) replaced with unique(field, !true)
Mutant 618 in non-unique.js: field replaced with field.toLowerCase()
Mutant 619 in non-unique.js: field replaced with field.substring(1)
Mutant 620 in non-unique.js: field replaced with Math.random() > 0.5 ? field : null
Mutant 621 in non-unique.js: true replaced with false
Mutant 622 in non-unique.js: true replaced with 0
Mutant 623 in non-unique.js: true replaced with 'foo'
Mutant 624 in take.js: 'number' === typeof test replaced with 'string' === typeof test
Mutant 625 in take.js: 'number' === typeof test replaced with test !== 'number'
Mutant 626 in take.js: 'number' === typeof test replaced with typeof test === 'object'
Mutant 627 in take.js: err || true replaced with err && true
Mutant 628 in take.js: err || true replaced with !err
Mutant 629 in take.js: err || true replaced with err ? err : true
Mutant 630 in take.js: ended && !end replaced with !ended || !end
Mutant 631 in take.js: ended && !end replaced with ended && end
Mutant 632 in take.js: ended && !end replaced with ended || end
Mutant 633 in take.js: cb replaced with cb(ended && true)
Mutant 634 in take.js: cb replaced with cb(true)
Mutant 635 in take.js: cb replaced with cb(false)
Mutant 636 in take.js: ended replaced with false
Mutant 637 in take.js: ended replaced with !ended
Mutant 638 in take.js: ended = end replaced with ended && !end
Mutant 639 in take.js: ended = end replaced with ended || !end
Mutant 640 in take.js: read(ended, cb) replaced with read(!ended, cb)
Mutant 641 in take.js: read(ended, cb) replaced with read(ended || cb)
Mutant 642 in take.js: read(ended, cb) replaced with read(ended && cb)
Mutant 643 in take.js: ended replaced with !ended
Mutant 644 in take.js: ended replaced with ended + 1
Mutant 645 in take.js: ended = ended || end replaced with ended = end
Mutant 646 in take.js: ended = ended || end replaced with ended = end || true
Mutant 647 in take.js: ended = ended || end replaced with ended = !end
Mutant 648 in take.js: cb replaced with null
Mutant 649 in take.js: cb replaced with undefined
Mutant 650 in take.js: cb replaced with {}
Mutant 651 in take.js: ended replaced with ended + 1
Mutant 652 in take.js: ended replaced with ended * 2
Mutant 653 in take.js: ended replaced with last && !ended
Mutant 654 in take.js: !test(data) replaced with test(data)
Mutant 655 in take.js: !test(data) replaced with data == test(data)
Mutant 656 in take.js: !test(data) replaced with data != test(data)
Mutant 657 in take.js: test replaced with !test
Mutant 658 in take.js: data replaced with !data
Mutant 659 in take.js: data replaced with data + 1
Mutant 660 in take.js: data replaced with data[0]
Mutant 661 in take.js: cb(null, data) replaced with cb(undefined, data)
Mutant 662 in take.js: cb(null, data) replaced with cb(null, null)
Mutant 663 in take.js: cb(null, data) replaced with cb("", data)
Mutant 664 in take.js: null replaced with undefined
Mutant 665 in take.js: null replaced with ''
Mutant 666 in take.js: data replaced with null
Mutant 667 in take.js: data replaced with undefined
Mutant 668 in take.js: data replaced with 0
Mutant 669 in take.js: cb(null, data) replaced with cb(data, data)
Mutant 670 in take.js: cb(null, data) replaced with cb(undefined, data)
Mutant 671 in take.js: cb(null, data) replaced with cb(null, null)
Mutant 672 in take.js: null replaced with undefined
Mutant 673 in take.js: null replaced with 0
Mutant 674 in take.js: null replaced with ''
Mutant 675 in take.js: data replaced with null
Mutant 676 in take.js: data replaced with undefined
Mutant 677 in take.js: data replaced with ''
Mutant 678 in through.js: a || !onEnd replaced with a && onEnd
Mutant 679 in through.js: a || !onEnd replaced with !a || onEnd
Mutant 680 in through.js: a || !onEnd replaced with a !== onEnd
Mutant 681 in through.js: onEnd replaced with !onEnd
Mutant 682 in through.js: onEnd replaced with onEnd + 1
Mutant 683 in through.js: onEnd replaced with onEnd - 1
Mutant 684 in through.js: abort === true ? null : abort replaced with abort ? null : abort
Mutant 685 in through.js: abort === true ? null : abort replaced with abort === false ? null : abort
Mutant 686 in through.js: abort === true ? null : abort replaced with typeof abort === 'boolean' ? null : abort
Mutant 687 in through.js: !end replaced with end
Mutant 688 in through.js: !end replaced with !onEnd
Mutant 689 in through.js: !end replaced with onEnd && end
Mutant 690 in through.js: op replaced with op + 1
Mutant 691 in through.js: op replaced with op - 1
Mutant 692 in through.js: op replaced with !op
Mutant 693 in through.js: data replaced with data.length
Mutant 694 in through.js: data replaced with data && data.length
Mutant 695 in through.js: data replaced with data[0]
Mutant 696 in through.js: end replaced with null
Mutant 697 in through.js: end replaced with undefined
Mutant 698 in through.js: cb(end, data) replaced with cb(end, null)
Mutant 699 in through.js: cb(end, data) replaced with cb(end, data && data.length > 0 ? data.length - 1 : 0)
Mutant 700 in through.js: cb replaced with !cb
Mutant 701 in through.js: cb replaced with cb + 1
Mutant 702 in through.js: end replaced with !end
Mutant 703 in through.js: end replaced with end = true
Mutant 704 in through.js: end replaced with end = false
Mutant 705 in through.js: data replaced with null
Mutant 706 in through.js: data replaced with undefined
Mutant 707 in through.js: data replaced with ""
Mutant 708 in unique.js: prop replaced with field = 5 + id
Mutant 709 in unique.js: prop replaced with field = !prop
Mutant 710 in unique.js: prop replaced with field = field + 1
Mutant 711 in unique.js: field replaced with field[0]
Mutant 712 in unique.js: field replaced with field.length
Mutant 713 in unique.js: field replaced with field.join(',')
Mutant 714 in unique.js: field replaced with field + 1
Mutant 715 in unique.js: field replaced with field * 2
Mutant 716 in unique.js: data replaced with data.value
Mutant 717 in unique.js: data replaced with data.key
Mutant 718 in unique.js: data replaced with data.toLowerCase()
Mutant 719 in unique.js: seen[key] replaced with !seen[key]
Mutant 720 in unique.js: seen[key] replaced with null
Mutant 721 in unique.js: seen[key] replaced with undefined
Mutant 722 in abort-cb.js: cb replaced with !cb
Mutant 723 in abort-cb.js: cb replaced with true
Mutant 724 in abort-cb.js: abort replaced with abort !== true
Mutant 725 in abort-cb.js: abort replaced with onAbort(abort)
Mutant 726 in abort-cb.js: abort replaced with onAbort({})
Mutant 727 in abort-cb.js: onAbort replaced with -onAbort + !onAbort
Mutant 728 in abort-cb.js: onAbort replaced with -onAbort + abort
Mutant 729 in prop.js: key.exec replaced with key.execute
Mutant 730 in prop.js: key.exec replaced with key.test
Mutant 731 in prop.js: key.exec replaced with key.match
Mutant 732 in tester.js: test.test replaced with test.test + 1
Mutant 733 in tester.js: test.test replaced with data.test
Mutant 734 in tester.js: data replaced with null
Mutant 735 in tester.js: data replaced with !data
Mutant 736 in tester.js: data replaced with data + 1
Mutant 737 in tester.js: prop replaced with id
Mutant 738 in tester.js: prop replaced with 42
Mutant 739 in tester.js: test replaced with test + 1
Mutant 740 in tester.js: test replaced with test.foo
[32m12:44:55 (2720) INFO Instrumenter[39m Instrumented 31 source file(s) with 741 mutant(s)
[32m12:44:55 (2720) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m12:44:56 (2720) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m12:44:56 (2720) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m12:44:58 (2720) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 1 second (net 1803 ms, overhead 2 ms).
Mutation testing 2% (elapsed: <1m, remaining: ~7m) 17/741 tested (0 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~10m) 23/741 tested (2 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~14m) 25/741 tested (2 survived, 1 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~16m) 29/741 tested (5 survived, 2 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~16m) 35/741 tested (10 survived, 2 timed out)
Mutation testing 5% (elapsed: ~1m, remaining: ~17m) 40/741 tested (15 survived, 2 timed out)
Mutation testing 6% (elapsed: ~1m, remaining: ~17m) 47/741 tested (16 survived, 2 timed out)
Mutation testing 7% (elapsed: ~1m, remaining: ~16m) 54/741 tested (16 survived, 2 timed out)
Mutation testing 8% (elapsed: ~1m, remaining: ~16m) 62/741 tested (16 survived, 2 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~15m) 70/741 tested (17 survived, 2 timed out)
Mutation testing 10% (elapsed: ~1m, remaining: ~16m) 75/741 tested (22 survived, 2 timed out)
Mutation testing 10% (elapsed: ~2m, remaining: ~16m) 81/741 tested (28 survived, 2 timed out)
Mutation testing 11% (elapsed: ~2m, remaining: ~16m) 87/741 tested (34 survived, 2 timed out)
Mutation testing 12% (elapsed: ~2m, remaining: ~16m) 92/741 tested (39 survived, 2 timed out)
Mutation testing 13% (elapsed: ~2m, remaining: ~16m) 98/741 tested (45 survived, 2 timed out)
Mutation testing 14% (elapsed: ~2m, remaining: ~16m) 104/741 tested (50 survived, 2 timed out)
Mutation testing 15% (elapsed: ~2m, remaining: ~15m) 116/741 tested (53 survived, 2 timed out)
Mutation testing 16% (elapsed: ~3m, remaining: ~14m) 124/741 tested (57 survived, 2 timed out)
Mutation testing 17% (elapsed: ~3m, remaining: ~14m) 132/741 tested (62 survived, 2 timed out)
Mutation testing 18% (elapsed: ~3m, remaining: ~14m) 140/741 tested (64 survived, 2 timed out)
Mutation testing 19% (elapsed: ~3m, remaining: ~14m) 148/741 tested (65 survived, 3 timed out)
Mutation testing 20% (elapsed: ~3m, remaining: ~13m) 154/741 tested (71 survived, 3 timed out)
Mutation testing 22% (elapsed: ~3m, remaining: ~13m) 166/741 tested (72 survived, 3 timed out)
Mutation testing 23% (elapsed: ~4m, remaining: ~13m) 173/741 tested (72 survived, 3 timed out)
Mutation testing 24% (elapsed: ~4m, remaining: ~13m) 178/741 tested (75 survived, 4 timed out)
Mutation testing 24% (elapsed: ~4m, remaining: ~13m) 185/741 tested (78 survived, 4 timed out)
Mutation testing 25% (elapsed: ~4m, remaining: ~12m) 192/741 tested (80 survived, 4 timed out)
Mutation testing 26% (elapsed: ~4m, remaining: ~12m) 199/741 tested (82 survived, 4 timed out)
Mutation testing 27% (elapsed: ~4m, remaining: ~12m) 205/741 tested (84 survived, 4 timed out)
Mutation testing 28% (elapsed: ~5m, remaining: ~12m) 211/741 tested (88 survived, 4 timed out)
Mutation testing 29% (elapsed: ~5m, remaining: ~12m) 218/741 tested (90 survived, 4 timed out)
Mutation testing 30% (elapsed: ~5m, remaining: ~12m) 224/741 tested (91 survived, 4 timed out)
Mutation testing 31% (elapsed: ~5m, remaining: ~12m) 230/741 tested (97 survived, 4 timed out)
Mutation testing 32% (elapsed: ~5m, remaining: ~11m) 238/741 tested (100 survived, 4 timed out)
Mutation testing 34% (elapsed: ~5m, remaining: ~11m) 252/741 tested (101 survived, 4 timed out)
Mutation testing 35% (elapsed: ~6m, remaining: ~10m) 264/741 tested (102 survived, 4 timed out)
Mutation testing 36% (elapsed: ~6m, remaining: ~10m) 270/741 tested (108 survived, 4 timed out)
Mutation testing 37% (elapsed: ~6m, remaining: ~10m) 277/741 tested (111 survived, 4 timed out)
Mutation testing 38% (elapsed: ~6m, remaining: ~10m) 283/741 tested (115 survived, 4 timed out)
Mutation testing 39% (elapsed: ~6m, remaining: ~10m) 294/741 tested (116 survived, 4 timed out)
Mutation testing 39% (elapsed: ~6m, remaining: ~10m) 295/741 tested (116 survived, 5 timed out)
Mutation testing 40% (elapsed: ~7m, remaining: ~10m) 300/741 tested (116 survived, 6 timed out)
Mutation testing 40% (elapsed: ~7m, remaining: ~10m) 303/741 tested (119 survived, 6 timed out)
Mutation testing 41% (elapsed: ~7m, remaining: ~10m) 304/741 tested (119 survived, 7 timed out)
Mutation testing 41% (elapsed: ~7m, remaining: ~10m) 307/741 tested (120 survived, 9 timed out)
Mutation testing 42% (elapsed: ~7m, remaining: ~10m) 315/741 tested (123 survived, 9 timed out)
Mutation testing 43% (elapsed: ~7m, remaining: ~10m) 321/741 tested (127 survived, 9 timed out)
Mutation testing 43% (elapsed: ~8m, remaining: ~10m) 326/741 tested (132 survived, 9 timed out)
Mutation testing 44% (elapsed: ~8m, remaining: ~10m) 332/741 tested (135 survived, 9 timed out)
Mutation testing 45% (elapsed: ~8m, remaining: ~9m) 338/741 tested (138 survived, 9 timed out)
Mutation testing 46% (elapsed: ~8m, remaining: ~9m) 341/741 tested (138 survived, 9 timed out)
Mutation testing 46% (elapsed: ~8m, remaining: ~10m) 342/741 tested (138 survived, 10 timed out)
Mutation testing 46% (elapsed: ~8m, remaining: ~9m) 348/741 tested (141 survived, 11 timed out)
Mutation testing 47% (elapsed: ~9m, remaining: ~9m) 354/741 tested (147 survived, 11 timed out)
Mutation testing 48% (elapsed: ~9m, remaining: ~9m) 359/741 tested (152 survived, 11 timed out)
Mutation testing 49% (elapsed: ~9m, remaining: ~9m) 365/741 tested (158 survived, 11 timed out)
Mutation testing 49% (elapsed: ~9m, remaining: ~9m) 366/741 tested (158 survived, 12 timed out)
Mutation testing 50% (elapsed: ~9m, remaining: ~9m) 372/741 tested (159 survived, 13 timed out)
Mutation testing 50% (elapsed: ~9m, remaining: ~9m) 375/741 tested (159 survived, 13 timed out)
Mutation testing 50% (elapsed: ~10m, remaining: ~9m) 377/741 tested (159 survived, 14 timed out)
Mutation testing 52% (elapsed: ~10m, remaining: ~9m) 386/741 tested (159 survived, 15 timed out)
Mutation testing 53% (elapsed: ~10m, remaining: ~9m) 393/741 tested (161 survived, 15 timed out)
Mutation testing 53% (elapsed: ~10m, remaining: ~9m) 394/741 tested (161 survived, 16 timed out)
Mutation testing 53% (elapsed: ~10m, remaining: ~9m) 396/741 tested (161 survived, 18 timed out)
Mutation testing 54% (elapsed: ~10m, remaining: ~9m) 403/741 tested (165 survived, 18 timed out)
Mutation testing 54% (elapsed: ~11m, remaining: ~9m) 405/741 tested (166 survived, 19 timed out)
Mutation testing 55% (elapsed: ~11m, remaining: ~8m) 413/741 tested (166 survived, 20 timed out)
Mutation testing 56% (elapsed: ~11m, remaining: ~8m) 415/741 tested (167 survived, 21 timed out)
Mutation testing 56% (elapsed: ~11m, remaining: ~8m) 422/741 tested (171 survived, 21 timed out)
Mutation testing 57% (elapsed: ~11m, remaining: ~8m) 425/741 tested (171 survived, 22 timed out)
Mutation testing 59% (elapsed: ~11m, remaining: ~8m) 438/741 tested (174 survived, 22 timed out)
Mutation testing 59% (elapsed: ~12m, remaining: ~8m) 441/741 tested (175 survived, 23 timed out)
Mutation testing 59% (elapsed: ~12m, remaining: ~8m) 444/741 tested (175 survived, 24 timed out)
Mutation testing 60% (elapsed: ~12m, remaining: ~8m) 445/741 tested (175 survived, 25 timed out)
Mutation testing 60% (elapsed: ~12m, remaining: ~8m) 446/741 tested (175 survived, 26 timed out)
Mutation testing 61% (elapsed: ~12m, remaining: ~7m) 458/741 tested (176 survived, 27 timed out)
Mutation testing 63% (elapsed: ~12m, remaining: ~7m) 471/741 tested (178 survived, 27 timed out)
Mutation testing 64% (elapsed: ~13m, remaining: ~7m) 481/741 tested (180 survived, 27 timed out)
Mutation testing 65% (elapsed: ~13m, remaining: ~6m) 488/741 tested (181 survived, 27 timed out)
Mutation testing 66% (elapsed: ~13m, remaining: ~6m) 496/741 tested (182 survived, 27 timed out)
Mutation testing 67% (elapsed: ~13m, remaining: ~6m) 499/741 tested (182 survived, 27 timed out)
Mutation testing 67% (elapsed: ~13m, remaining: ~6m) 501/741 tested (182 survived, 29 timed out)
Mutation testing 67% (elapsed: ~13m, remaining: ~6m) 503/741 tested (182 survived, 30 timed out)
Mutation testing 68% (elapsed: ~14m, remaining: ~6m) 504/741 tested (182 survived, 31 timed out)
Mutation testing 68% (elapsed: ~14m, remaining: ~6m) 508/741 tested (185 survived, 32 timed out)
Mutation testing 69% (elapsed: ~14m, remaining: ~6m) 514/741 tested (191 survived, 32 timed out)
Mutation testing 69% (elapsed: ~14m, remaining: ~6m) 517/741 tested (192 survived, 32 timed out)
Mutation testing 70% (elapsed: ~14m, remaining: ~6m) 520/741 tested (192 survived, 33 timed out)
Mutation testing 70% (elapsed: ~14m, remaining: ~6m) 526/741 tested (193 survived, 34 timed out)
Mutation testing 71% (elapsed: ~15m, remaining: ~5m) 532/741 tested (195 survived, 34 timed out)
Mutation testing 72% (elapsed: ~15m, remaining: ~5m) 540/741 tested (196 survived, 34 timed out)
Mutation testing 73% (elapsed: ~15m, remaining: ~5m) 546/741 tested (197 survived, 34 timed out)
Mutation testing 74% (elapsed: ~15m, remaining: ~5m) 549/741 tested (198 survived, 34 timed out)
Mutation testing 74% (elapsed: ~15m, remaining: ~5m) 551/741 tested (198 survived, 36 timed out)
Mutation testing 74% (elapsed: ~15m, remaining: ~5m) 553/741 tested (198 survived, 37 timed out)
Mutation testing 75% (elapsed: ~16m, remaining: ~5m) 556/741 tested (198 survived, 37 timed out)
Mutation testing 75% (elapsed: ~16m, remaining: ~5m) 558/741 tested (198 survived, 39 timed out)
Mutation testing 76% (elapsed: ~16m, remaining: ~5m) 564/741 tested (202 survived, 39 timed out)
Mutation testing 76% (elapsed: ~16m, remaining: ~4m) 569/741 tested (202 survived, 39 timed out)
Mutation testing 77% (elapsed: ~16m, remaining: ~4m) 571/741 tested (203 survived, 40 timed out)
Mutation testing 77% (elapsed: ~16m, remaining: ~4m) 576/741 tested (203 survived, 41 timed out)
Mutation testing 78% (elapsed: ~17m, remaining: ~4m) 583/741 tested (204 survived, 41 timed out)
Mutation testing 79% (elapsed: ~17m, remaining: ~4m) 590/741 tested (204 survived, 41 timed out)
Mutation testing 81% (elapsed: ~17m, remaining: ~4m) 602/741 tested (206 survived, 41 timed out)
Mutation testing 82% (elapsed: ~17m, remaining: ~3m) 611/741 tested (206 survived, 41 timed out)
Mutation testing 83% (elapsed: ~17m, remaining: ~3m) 619/741 tested (206 survived, 41 timed out)
Mutation testing 84% (elapsed: ~17m, remaining: ~3m) 627/741 tested (208 survived, 41 timed out)
Mutation testing 85% (elapsed: ~18m, remaining: ~3m) 630/741 tested (210 survived, 41 timed out)
Mutation testing 85% (elapsed: ~18m, remaining: ~3m) 633/741 tested (210 survived, 43 timed out)
Mutation testing 87% (elapsed: ~18m, remaining: ~2m) 645/741 tested (212 survived, 43 timed out)
Mutation testing 88% (elapsed: ~18m, remaining: ~2m) 657/741 tested (216 survived, 43 timed out)
Mutation testing 89% (elapsed: ~18m, remaining: ~2m) 665/741 tested (219 survived, 43 timed out)
Mutation testing 90% (elapsed: ~18m, remaining: ~1m) 672/741 tested (221 survived, 43 timed out)
Mutation testing 92% (elapsed: ~19m, remaining: ~1m) 682/741 tested (224 survived, 43 timed out)
Mutation testing 92% (elapsed: ~19m, remaining: ~1m) 688/741 tested (227 survived, 43 timed out)
Mutation testing 93% (elapsed: ~19m, remaining: ~1m) 696/741 tested (230 survived, 43 timed out)
Mutation testing 95% (elapsed: ~19m, remaining: ~1m) 704/741 tested (232 survived, 43 timed out)
Mutation testing 95% (elapsed: ~19m, remaining: <1m) 710/741 tested (232 survived, 44 timed out)
Mutation testing 96% (elapsed: ~19m, remaining: <1m) 715/741 tested (232 survived, 44 timed out)
Mutation testing 97% (elapsed: ~20m, remaining: <1m) 721/741 tested (232 survived, 44 timed out)
Mutation testing 98% (elapsed: ~20m, remaining: <1m) 730/741 tested (233 survived, 44 timed out)
Mutation testing 99% (elapsed: ~20m, remaining: <1m) 734/741 tested (235 survived, 44 timed out)
Mutation testing 99% (elapsed: ~20m, remaining: <1m) 736/741 tested (235 survived, 46 timed out)
Mutation testing 99% (elapsed: ~20m, remaining: <1m) 739/741 tested (237 survived, 46 timed out)

All tests
  ✓ All tests (killed 457)

[Survived] PrecomputedMutator
sinks/drain.js:8:7
-     if (!done) {
+     if (done === null) {

[Survived] PrecomputedMutator
sinks/drain.js:8:7
-     if (!done) {
+     if (done === undefined) {

[Survived] PrecomputedMutator
sinks/drain.js:24:16
-               if(end = end || abort) {
+               if(end = abort || end) {

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(end !== end) {

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(end && !end) {

[Survived] PrecomputedMutator
sinks/drain.js:28:17
-                   console.warn(doneLackingErr)
+                   undefined(doneLackingErr)

[Survived] PrecomputedMutator
sinks/drain.js:28:17
-                   console.warn(doneLackingErr)
+                   2(doneLackingErr)

[Survived] PrecomputedMutator
sinks/drain.js:28:30
-                   console.warn(doneLackingErr)
+                   console.warn(console.warn(err))

[Survived] PrecomputedMutator
sinks/drain.js:28:30
-                   console.warn(doneLackingErr)
+                   console.warn(console.warn(errLackingDone))

[Survived] PrecomputedMutator
sinks/drain.js:28:30
-                   console.warn(doneLackingErr)
+                   console.warn(console.warn(err || errLackingDone))

[Survived] PrecomputedMutator
sinks/drain.js:40:14
-             if(!cbed) {
+             if(cbed ^ true) {

[Survived] PrecomputedMutator
sinks/drain.js:49:8
-       if('function' == typeof err)
+       if(err == true)

[Survived] PrecomputedMutator
sinks/drain.js:49:8
-       if('function' == typeof err)
+       if(!err)

[Survived] PrecomputedMutator
sinks/drain.js:52:8
-       if(read) return read(abort, cb || function () {})
+       if(read !== undefined) return read(abort, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:8
-       if(read) return read(abort, cb || function () {})
+       if(read !== null) return read(abort, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:21
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(abort, cb || function () {
+     return undefined;
+   })

[Survived] PrecomputedMutator
sinks/drain.js:52:21
-       if(read) return read(abort, cb || function () {})
+       if(read) return read || true(abort, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:33
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(abort, function () {
+     return cb || function () {};
+   }(cb))

[Survived] PrecomputedMutator
sinks/find.js:15:8
-       if(test(data)) {
+       if(test(data) && test(data)) {

[Survived] PrecomputedMutator
sinks/find.js:15:8
-       if(test(data)) {
+       if(test(data) || test(data)) {

[Survived] PrecomputedMutator
sinks/find.js:15:8
-       if(test(data)) {
+       if(test || false(data)) {

[Survived] PrecomputedMutator
sinks/find.js:17:7
-         cb(null, data)
+         cb(undefined, data)

[Survived] PrecomputedMutator
sinks/find.js:17:7
-         cb(null, data)
+         cb(NaN, data)

[Survived] PrecomputedMutator
sinks/find.js:17:10
-         cb(null, data)
+         cb(undefined, data)

[Survived] PrecomputedMutator
sinks/find.js:17:10
-         cb(null, data)
+         cb(NaN, data)

[Survived] PrecomputedMutator
sinks/find.js:17:16
-         cb(null, data)
+         cb(null, data || null)

[Survived] PrecomputedMutator
sinks/find.js:21:8
-       if(ended) return //already called back
+       if(ended === true) return //already called back

[Survived] PrecomputedMutator
sinks/find.js:21:8
-       if(ended) return //already called back
+       if(ended !== false) return //already called back

[Survived] PrecomputedMutator
sinks/find.js:22:8
-       cb(err === true ? null : err, null)
+       cb(err !== true ? null : err, null)

[Survived] PrecomputedMutator
sinks/log.js:7:5
-       console.log(data)
+       console.info(data)

[Survived] PrecomputedMutator
sinks/log.js:7:5
-       console.log(data)
+       console.warn(data)

[Survived] PrecomputedMutator
sinks/log.js:7:5
-       console.log(data)
+       console.error(data)

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(data.toUpperCase())

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(data.slice(0, 1))

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(data.length)

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain(undefined, done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain(true, done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain(() => {}, done)

[Survived] PrecomputedMutator
sinks/reduce.js:6:6
-     if(!cb) cb = acc, acc = null
+     if(!cb && acc !== null) cb = acc, acc = null

[Survived] PrecomputedMutator
sinks/reduce.js:12:7
-     if (arguments.length === 2)
+     if (arguments.length < 2)

[Survived] PrecomputedMutator
sinks/reduce.js:16:12
-           if(end) return cb(end === true ? null : end)
+           if(end || acc) return cb(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:12
-           if(end) return cb(end === true ? null : end)
+           if(end && acc) return cb(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:12
-           if(end) return cb(end === true ? null : end)
+           if(acc !== end) return cb(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:24
-           if(end) return cb(end === true ? null : end)
+           if(end) return acc(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:24
-           if(end) return cb(end === true ? null : end)
+           if(end) return null(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(end === true ? null : acc)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(end === true ? acc : null)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(end === false ? null : acc)

[Survived] PrecomputedMutator
sources/count.js:6:8
-       if(end) return cb && cb(end)
+       if(end && false) return cb && cb(end)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(end + 1)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(end - 1)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(end > max)

[Survived] PrecomputedMutator
sources/count.js:8:17
-         return cb(true)
+         return cb(max !== Infinity)

[Survived] PrecomputedMutator
sources/count.js:9:8
-       cb(null, i++)
+       cb(console.log(i), i++)

[Survived] PrecomputedMutator
sources/infinite.js:5:8
-       if(end) return cb && cb(end)
+       if(end != null) return cb && cb(end)

[Survived] PrecomputedMutator
sources/infinite.js:5:8
-       if(end) return cb && cb(end)
+       if(end < 0) return cb && cb(end)

[Survived] PrecomputedMutator
sources/infinite.js:5:8
-       if(end) return cb && cb(end)
+       if(end !== end) return cb && cb(end)

[Survived] PrecomputedMutator
sources/infinite.js:6:12
-       return cb(null, generate())
+       return cb(undefined, generate())

[Survived] PrecomputedMutator
sources/infinite.js:6:12
-       return cb(null, generate())
+       return cb(0, generate())

[Survived] PrecomputedMutator
sources/infinite.js:6:12
-       return cb(null, generate())
+       return cb(NaN, generate())

[Survived] PrecomputedMutator
sources/infinite.js:6:15
-       return cb(null, generate())
+       return cb(undefined, generate())

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(null, _value))

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(null, onAbort))

[Survived] PrecomputedMutator
sources/once.js:7:22
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(null, _value, _value), abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:22
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(null, _value + 1), abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:22
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(null, otherValue), abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, false, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, null, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, undefined, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, null)

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, undefined)

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, function () {})

[Survived] PrecomputedMutator
sources/once.js:10:7
-         cb(null, _value)
+         cb(undefined, _value)

[Survived] PrecomputedMutator
sources/once.js:10:7
-         cb(null, _value)
+         cb('', _value)

[Survived] PrecomputedMutator
sources/once.js:10:10
-         cb(null, _value)
+         cb(undefined, _value)

[Survived] PrecomputedMutator
sources/once.js:10:10
-         cb(null, _value)
+         cb(NaN, _value)

[Survived] PrecomputedMutator
sources/once.js:12:10
-         cb(true)
+         cb(!value)

[Survived] PrecomputedMutator
sources/values.js:5:6
-     if(!array)
+     if(array.length === 0)

[Survived] PrecomputedMutator
sources/values.js:7:10
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort && onAbort) return abortCb(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:10
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort ? onAbort() : null) return abortCb(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:10
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(onAbort ? abort : null) return abortCb(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(onAbort, abort, cb)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, 42)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return array[i++](cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return i + 1(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return array.length - 1(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:32
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(null, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:32
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb("cb", abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:36
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, null, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:36
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, undefined, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:43
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, 0)

[Survived] PrecomputedMutator
sources/values.js:7:43
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, null)

[Survived] PrecomputedMutator
sources/values.js:7:43
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, [])

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(false)

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(0)

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb("")

[Survived] PrecomputedMutator
sources/values.js:10:21
-     if(!Array.isArray(array))
+     if(!Array.isArray(array.length))

[Survived] PrecomputedMutator
sources/values.js:17:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort || true, onAbort)

[Survived] PrecomputedMutator
sources/values.js:18:8
-       if(i >= array.length)
+       if(i == array.length)

[Survived] PrecomputedMutator
sources/values.js:21:7
-         cb(null, array[i++])
+         cb(undefined, array[i++])

[Survived] PrecomputedMutator
sources/values.js:21:7
-         cb(null, array[i++])
+         cb(0, array[i++])

[Survived] PrecomputedMutator
sources/values.js:21:10
-         cb(null, array[i++])
+         cb(undefined, array[i++])

[Survived] PrecomputedMutator
sources/values.js:21:10
-         cb(null, array[i++])
+         cb(false, array[i++])

[Survived] PrecomputedMutator
sources/values.js:21:10
-         cb(null, array[i++])
+         cb(0, array[i++])

[Survived] PrecomputedMutator
throughs/async-map.js:12:10
-         if(aborted) return cb(aborted)
+         if(aborted === null) return cb(aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:12:10
-         if(aborted) return cb(aborted)
+         if(aborted && aborted.someProperty) return cb(aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb("test")

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(null)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(aborted = {})

[Survived] PrecomputedMutator
throughs/async-map.js:15:12
-           if(!busy) read(abort, function (err) {
+           if(busy && abortCb) read(abort, function (err) {

[Survived] PrecomputedMutator
throughs/async-map.js:15:12
-           if(!busy) read(abort, function (err) {
+           if(abortCb != null) read(abort, function (err) {

[Survived] PrecomputedMutator
throughs/async-map.js:22:14
-             if(busy) abortCb = cb
+             if(busy || abortCb) abortCb = cb

[Survived] PrecomputedMutator
throughs/async-map.js:23:19
-             else cb(abort)
+             else cb(abortCb ? abort : read)

[Survived] PrecomputedMutator
throughs/async-map.js:29:19
-             else if(aborted) cb(aborted)
+             else if(aborted && true) cb(aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:38:23
-                 else if(err) next (err, cb)
+                 else if(err || abort) next (err, cb)

[Survived] PrecomputedMutator
throughs/async-map.js:38:23
-                 else if(err) next (err, cb)
+                 else if(err && !abort) next (err, cb)

[Survived] PrecomputedMutator
throughs/async-map.js:39:20
-                 else cb(null, data)
+                 else cb(abort, data)

[Survived] PrecomputedMutator
throughs/async-map.js:39:23
-                 else cb(null, data)
+                 else cb(abort, data)

[Survived] PrecomputedMutator
throughs/async-map.js:39:23
-                 else cb(null, data)
+                 else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/filter-not.js:8:43
-     return filter(function (data) { return !test(data) })
+     return filter(function (data) { return !test ?? false(data) })

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, !cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, data)

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(data, end)

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : shadow(end, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:46
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(null, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:46
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(undefined, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:46
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next('', cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, read)

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, end)

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, data)

[Survived] PrecomputedMutator
throughs/filter.js:17:14
-             cb(end, data)
+             cb(-end, data)

[Survived] PrecomputedMutator
throughs/flatten.js:11:11
-         if (abort) { //abort the current stream, and then stream of streams.
+         if (abort === true) { //abort the current stream, and then stream of streams.

[Survived] PrecomputedMutator
throughs/flatten.js:11:11
-         if (abort) { //abort the current stream, and then stream of streams.
+         if (abort != null) { //abort the current stream, and then stream of streams.

[Survived] PrecomputedMutator
throughs/flatten.js:13:16
-             read(err || abort, cb)
+             read(err && abort, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:14:19
-           }) : read(abort, cb)
+           }) : read(true, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:16:15
-         else if(_read) nextChunk()
+         else if(_read && _read.length > 0) nextChunk()

[Survived] PrecomputedMutator
throughs/flatten.js:28:16
-             else cb(null, data)
+             else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/flatten.js:28:19
-             else cb(null, data)
+             else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/flatten.js:28:19
-             else cb(null, data)
+             else cb(false, data)

[Survived] PrecomputedMutator
throughs/flatten.js:28:19
-             else cb(null, data)
+             else cb(0, data)

[Survived] PrecomputedMutator
throughs/flatten.js:35:23
-               return cb(end)
+               return cb(end + 1)

[Survived] PrecomputedMutator
throughs/flatten.js:37:29
-               stream = values(stream)
+               stream = values(null ?? stream)

[Survived] PrecomputedMutator
throughs/map.js:7:6
-     if(!mapper) return id
+     if(mapper !== mapper) return id

[Survived] PrecomputedMutator
throughs/map.js:7:6
-     if(!mapper) return id
+     if(!mapper.call) return id

[Survived] PrecomputedMutator
throughs/non-unique.js:7:17
-     return unique(field, true)
+     return unique(Math.random() > 0.5 ? field : null, true)

[Survived] PrecomputedMutator
throughs/non-unique.js:7:24
-     return unique(field, true)
+     return unique(field, 'foo')

[Survived] PrecomputedMutator
throughs/take.js:19:26
-           last = false; cb(err || true)
+           last = false; cb(err && true)

[Survived] PrecomputedMutator
throughs/take.js:19:26
-           last = false; cb(err || true)
+           last = false; cb(err ? err : true)

[Survived] PrecomputedMutator
throughs/take.js:24:51
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : cb(false)

[Survived] PrecomputedMutator
throughs/take.js:24:51
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : cb(!ended)

[Survived] PrecomputedMutator
throughs/take.js:28:14
-             if(ended = ended || end) {
+             if(ended = end) {

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(ended + 1)

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(ended * 2)

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(last && !ended)

[Survived] PrecomputedMutator
throughs/take.js:34:20
-               last ? cb(null, data) : terminate(cb)
+               last ? cb(undefined, data) : terminate(cb)

[Survived] PrecomputedMutator
throughs/take.js:34:20
-               last ? cb(null, data) : terminate(cb)
+               last ? cb("", data) : terminate(cb)

[Survived] PrecomputedMutator
throughs/take.js:34:23
-               last ? cb(null, data) : terminate(cb)
+               last ? cb(undefined, data) : terminate(cb)

[Survived] PrecomputedMutator
throughs/take.js:34:23
-               last ? cb(null, data) : terminate(cb)
+               last ? cb('', data) : terminate(cb)

[Survived] PrecomputedMutator
throughs/take.js:37:13
-               cb(null, data)
+               cb(undefined, data)

[Survived] PrecomputedMutator
throughs/take.js:37:16
-               cb(null, data)
+               cb(undefined, data)

[Survived] PrecomputedMutator
throughs/take.js:37:16
-               cb(null, data)
+               cb(0, data)

[Survived] PrecomputedMutator
throughs/take.js:37:16
-               cb(null, data)
+               cb('', data)

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(abort ? null : abort)

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(abort === false ? null : abort)

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(typeof abort === 'boolean' ? null : abort)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op(data.length)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op(data && data.length)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op(data[0])

[Survived] PrecomputedMutator
throughs/through.js:18:19
-           else once(end)
+           else once(null)

[Survived] PrecomputedMutator
throughs/through.js:18:19
-           else once(end)
+           else once(undefined)

[Survived] PrecomputedMutator
util/prop.js:6:33
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.execute(data); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:33
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.test(data); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:33
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.match(data); return v && v[0] }

[Survived] PrecomputedMutator
util/tester.js:8:42
-       ? function (data) { return test.test(data) }
+       ? function (data) { return test.test(data + 1) }

[Survived] PrecomputedMutator
util/tester.js:9:7
-       : prop (test) || id
+       : id (test) || id

[Survived] PrecomputedMutator
pull.js:7:5
-       for(var i = 0; i < length; i++)
-         args[i] = arguments[i]
+       for (var i = length - 1; i >= 0; i--) args[i] = arguments[i];

[Survived] PrecomputedMutator
pull.js:7:20
-       for(var i = 0; i < length; i++)
+       for(var i = 0; i <= length; i++)

[Survived] PrecomputedMutator
pull.js:10:11
-         if (args == null) {
+         if (args[0] == null) {

[Survived] PrecomputedMutator
pull.js:10:11
-         if (args == null) {
+         if (args === []) {

[Survived] PrecomputedMutator
pull.js:10:11
-         if (args == null) {
+         if (ref === null) {

[Survived] PrecomputedMutator
pull.js:20:15
-         switch (length) {
+         switch (length + 1) {

[Survived] PrecomputedMutator
pull.js:20:15
-         switch (length) {
+         switch (length * 2) {

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[1])

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, 1)

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read + ref[0])

[Survived] PrecomputedMutator
pull.js:21:27
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read * 2, ref[0])

[Survived] PrecomputedMutator
pull.js:21:27
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read + 1, ref[0])

[Survived] PrecomputedMutator
pull.js:21:27
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read - 1, ref[0])

[Survived] PrecomputedMutator
pull.js:21:33
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[1])

[Survived] PrecomputedMutator
pull.js:21:33
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[ref.length - 1])

[Survived] PrecomputedMutator
pull.js:21:33
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[Math.random() * ref.length | 0])

[Survived] PrecomputedMutator
pull.js:24:22
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(ref[0], ref[1], ref[2], ref[3], ref[4])

[Survived] PrecomputedMutator
pull.js:24:22
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3] + 1)

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read + 1, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read && null, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read || null, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:33
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[1], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:33
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref.length, ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:33
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, args[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[0], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], "test", ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[2], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[3], ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref.length, ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], "foobar", ref[3])

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[4])

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[2])

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[0])

[Survived] PrecomputedMutator
pull.js:26:9
-           ref.unshift(read)
+           ref.forEach(read)

[Survived] PrecomputedMutator
pull.js:26:9
-           ref.unshift(read)
+           ref.slice(read)

[Survived] PrecomputedMutator
pull.js:26:9
-           ref.unshift(read)
+           ref.splice(read)

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift(read.length)

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift(null)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply(undefined, ref)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply(null, [])

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply(null, ref.length)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.call.bind(null, ref)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply.bind(null, ref)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.bind(null, ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply(undefined, ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply({}, ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply(function () {}, ref)

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref[0])

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref.length)

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref[length - 1])

[Survived] PrecomputedMutator
pull.js:34:7
-     if (read && typeof read.source === 'function') {
+     if (typeof read === 'function' && 'source' in read) {

[Survived] PrecomputedMutator
pull.js:34:7
-     if (read && typeof read.source === 'function') {
+     if (read instanceof Function && 'source' in read) {

[Survived] PrecomputedMutator
pull.js:38:19
-     for (var i = 1; i < length; i++) {
+     for (var i = 1; i <= length; i++) {

[Survived] PrecomputedMutator
pull.js:40:9
-       if (typeof s === 'function') {
+       if (s.sink !== 'function') {

[Survived] PrecomputedMutator
pull.js:40:9
-       if (typeof s === 'function') {
+       if (true) {

[Survived] PrecomputedMutator
pull.js:42:16
-       } else if (s && typeof s === 'object') {
+       } else if (s instanceof Object) {

[Survived] PrecomputedMutator
pull.js:42:16
-       } else if (s && typeof s === 'object') {
+       } else if (s != null && typeof s === 'object') {

[Survived] PrecomputedMutator
pull.js:42:16
-       } else if (s && typeof s === 'object') {
+       } else if (s.constructor === Object) {

[Survived] PrecomputedMutator
pull.js:43:7
-         s.sink(read)
+         s.sink = read(read)

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink(read + 1)

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink(read - 1)

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink(read * 2)

Ran 0.94 tests per mutant on average.
----------------|---------|----------|-----------|------------|----------|----------|
File            | % score | # killed | # timeout | # survived | # no cov | # errors |
----------------|---------|----------|-----------|------------|----------|----------|
All files       |   68.02 |      457 |        47 |        237 |        0 |        0 |
 sinks          |   67.12 |       96 |         2 |         48 |        0 |        0 |
  collect.js    |  100.00 |        3 |         0 |          0 |        0 |        0 |
  drain.js      |   68.42 |       37 |         2 |         18 |        0 |        0 |
  find.js       |   68.57 |       24 |         0 |         11 |        0 |        0 |
  log.js        |    0.00 |        0 |         0 |          6 |        0 |        0 |
  on-end.js     |   50.00 |        3 |         0 |          3 |        0 |        0 |
  reduce.js     |   74.36 |       29 |         0 |         10 |        0 |        0 |
 sources        |   57.25 |       59 |        16 |         56 |        0 |        0 |
  count.js      |   68.42 |       13 |         0 |          6 |        0 |        0 |
  empty.js      |  100.00 |        1 |         2 |          0 |        0 |        0 |
  error.js      |  100.00 |        3 |         0 |          0 |        0 |        0 |
  infinite.js   |   50.00 |        4 |         3 |          7 |        0 |        0 |
  keys.js       |  100.00 |        3 |         0 |          0 |        0 |        0 |
  once.js       |   40.74 |        9 |         2 |         16 |        0 |        0 |
  values.js     |   56.45 |       26 |         9 |         27 |        0 |        0 |
 throughs       |   79.11 |      226 |        24 |         66 |        0 |        0 |
  async-map.js  |   81.01 |       57 |         7 |         15 |        0 |        0 |
  filter-not.js |   90.91 |       10 |         0 |          1 |        0 |        0 |
  filter.js     |   63.33 |       12 |         7 |         11 |        0 |        0 |
  flatten.js    |   82.81 |       46 |         7 |         11 |        0 |        0 |
  map.js        |   92.00 |       23 |         0 |          2 |        0 |        0 |
  non-unique.js |   77.78 |        7 |         0 |          2 |        0 |        0 |
  take.js       |   70.37 |       36 |         2 |         16 |        0 |        0 |
  through.js    |   73.33 |       21 |         1 |          8 |        0 |        0 |
  unique.js     |  100.00 |       14 |         0 |          0 |        0 |        0 |
 util           |   73.68 |       11 |         3 |          5 |        0 |        0 |
  abort-cb.js   |  100.00 |        7 |         0 |          0 |        0 |        0 |
  prop.js       |    0.00 |        0 |         0 |          3 |        0 |        0 |
  tester.js     |   77.78 |        4 |         3 |          2 |        0 |        0 |
 index.js       |  100.00 |       15 |         0 |          0 |        0 |        0 |
 pull.js        |   45.61 |       50 |         2 |         62 |        0 |        0 |
----------------|---------|----------|-----------|------------|----------|----------|
[32m13:05:42 (2720) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/pull-stream/reports/mutation/mutation.html
[32m13:05:42 (2720) INFO MutationTestExecutor[39m Done in 20 minutes 50 seconds.

real	20m51.688s
user	8m2.744s
sys	1m37.008s
