*** using precomputed mutations ***
[32m11:49:01 (2867) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m11:49:01 (2867) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m11:49:01 (2867) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/delta/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m11:49:01 (2867) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m11:49:01 (2867) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m11:49:02 (2867) INFO ProjectReader[39m Found 4 of 1895 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 660 mutants from MUTATION_TESTING/template-full_mixtral-8x7b-instruct_0.0/mutants.json ***
Mutant 0 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 1 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a !== 'function'
Mutant 2 in AttributeMap.ts: typeof a !== 'object' replaced with Array.isArray(a)
Mutant 3 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 4 in AttributeMap.ts: typeof b !== 'object' replaced with Array.isArray(b)
Mutant 5 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'undefined'
Mutant 6 in AttributeMap.ts: cloneDeep replaced with {}
Mutant 7 in AttributeMap.ts: b replaced with a
Mutant 8 in AttributeMap.ts: b replaced with {}
Mutant 9 in AttributeMap.ts: b replaced with Object.assign({}, a, b)
Mutant 10 in AttributeMap.ts: attributes replaced with a
Mutant 11 in AttributeMap.ts: attributes replaced with Object.keys(b)
Mutant 12 in AttributeMap.ts: attributes replaced with Object.assign({}, b)
Mutant 13 in AttributeMap.ts: attributes[key] != null replaced with attributes[key] === undefined
Mutant 14 in AttributeMap.ts: attributes[key] != null replaced with key in attributes
Mutant 15 in AttributeMap.ts: a replaced with Object.keys(a)
Mutant 16 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a[key] !== null && b[key] === undefined
Mutant 17 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a.hasOwnProperty(key) && b[key] === undefined
Mutant 18 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with key in a && b[key] === undefined
Mutant 19 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 20 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a !== 'string'
Mutant 21 in AttributeMap.ts: typeof a !== 'object' replaced with Array.isArray(a)
Mutant 22 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 23 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'object' && b !== null
Mutant 24 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'string'
Mutant 25 in AttributeMap.ts: a replaced with Object.keys(a)
Mutant 26 in AttributeMap.ts: a replaced with Object.keys(Object.assign({}, a, b))
Mutant 27 in AttributeMap.ts: a replaced with Object.keys(JSON.parse(JSON.stringify({
  ...a,
  ...b
})))
Mutant 28 in AttributeMap.ts: b replaced with b.toString()
Mutant 29 in AttributeMap.ts: b replaced with b || []
Mutant 30 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with a[key] !== b[key]
Mutant 31 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with typeof a[key] !== 'undefined' && a[key] !== b[key]
Mutant 32 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with a[key] !== null && a[key] !== b[key]
Mutant 33 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(a[key] || b[key])
Mutant 34 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(b[key] || a[key])
Mutant 35 in AttributeMap.ts: isEqual replaced with a[key] === b[key]
Mutant 36 in AttributeMap.ts: a[key] replaced with a['key']
Mutant 37 in AttributeMap.ts: b[key] replaced with b['key']
Mutant 38 in AttributeMap.ts: attributes replaced with Object.keys(JSON.parse(JSON.stringify(attributes))).length
Mutant 39 in AttributeMap.ts: base replaced with Object.keys(a)
Mutant 40 in AttributeMap.ts: base replaced with Object.keys(b)
Mutant 41 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] !== attr[key] && base[key] !== undefined
Mutant 42 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] !== attr[key] || attr[key] !== undefined
Mutant 43 in AttributeMap.ts: attr replaced with Object.keys(a)
Mutant 44 in AttributeMap.ts: attr replaced with Object.keys(b)
Mutant 45 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] !== undefined && base[key] === undefined
Mutant 46 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] === null && base[key] === undefined
Mutant 47 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 48 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a !== 'undefined'
Mutant 49 in AttributeMap.ts: typeof a !== 'object' replaced with Array.isArray(a)
Mutant 50 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 51 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'undefined'
Mutant 52 in AttributeMap.ts: typeof b !== 'object' replaced with b === undefined || typeof b !== 'object'
Mutant 53 in AttributeMap.ts: !priority replaced with true
Mutant 54 in AttributeMap.ts: !priority replaced with a[key] === b[key]
Mutant 55 in AttributeMap.ts: !priority replaced with Math.random() < 0.5
Mutant 56 in AttributeMap.ts: b replaced with b.hasOwnProperty(key) ? b[key] : undefined
Mutant 57 in AttributeMap.ts: a[key] === undefined replaced with a[key] == undefined
Mutant 58 in AttributeMap.ts: attributes replaced with Object.keys(a)
Mutant 59 in AttributeMap.ts: attributes replaced with Object.assign({}, b)
Mutant 60 in Delta.ts: String.fromCharCode replaced with 'N'
Mutant 61 in Delta.ts: String.fromCharCode replaced with 0x00
Mutant 62 in Delta.ts: String.fromCharCode replaced with String.fromCodePoint
Mutant 63 in Delta.ts: 0 replaced with 1
Mutant 64 in Delta.ts: 0 replaced with String.fromCharCode(Math.floor(Math.random() * 256))
Mutant 65 in Delta.ts: 0 replaced with String.fromCharCode(0x7F)
Mutant 66 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'object' && a !== undefined
Mutant 67 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'object' || a === true
Mutant 68 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'function'
Mutant 69 in Delta.ts: typeof b !== 'object' || b === null replaced with b === undefined
Mutant 70 in Delta.ts: typeof b !== 'object' || b === null replaced with b.toString() === '[object Object]'
Mutant 71 in Delta.ts: typeof b !== 'object' || b === null replaced with b !== null
Mutant 72 in Delta.ts: a replaced with Object.keys(a)[0]
Mutant 73 in Delta.ts: a replaced with 'nonexistent_embed_type'
Mutant 74 in Delta.ts: a replaced with null
Mutant 75 in Delta.ts: b replaced with 'b' + Object.keys(b)[0]
Mutant 76 in Delta.ts: b replaced with null
Mutant 77 in Delta.ts: b replaced with '0'
Mutant 78 in Delta.ts: b replaced with Object.keys(b)[1]
Mutant 79 in Delta.ts: b replaced with {}
Mutant 80 in Delta.ts: b replaced with JSON.parse(JSON.stringify(b))
Mutant 81 in Delta.ts: !handler replaced with typeof handler === 'undefined'
Mutant 82 in Delta.ts: !handler replaced with handler === null
Mutant 83 in Delta.ts: Array.isArray(ops) replaced with ops instanceof Array
Mutant 84 in Delta.ts: Array.isArray replaced with false
Mutant 85 in Delta.ts: Array.isArray replaced with 0
Mutant 86 in Delta.ts: Array.isArray replaced with newOp.insert !== undefined
Mutant 87 in Delta.ts: ops replaced with ops.slice()
Mutant 88 in Delta.ts: ops replaced with Object.assign([], ops)
Mutant 89 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops !== undefined && Array.isArray(ops.ops)
Mutant 90 in Delta.ts: Array.isArray replaced with ops instanceof Array
Mutant 91 in Delta.ts: ops.ops replaced with ops.length
Mutant 92 in Delta.ts: ops.ops replaced with ops[0]
Mutant 93 in Delta.ts: ops.ops replaced with ops.concat()
Mutant 94 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with arg instanceof String && arg.length === 0
Mutant 95 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with typeof arg === 'object' && Array.isArray(arg) && arg.length === 0
Mutant 96 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with typeof arg === 'number' && arg === 0
Mutant 97 in Delta.ts: newOp replaced with {}
Mutant 98 in Delta.ts: newOp replaced with this
Mutant 99 in Delta.ts: newOp replaced with null
Mutant 100 in Delta.ts: length <= 0 replaced with true
Mutant 101 in Delta.ts: length <= 0 replaced with length > 100
Mutant 102 in Delta.ts: typeof length === 'number' && length <= 0 replaced with typeof length !== 'number'
Mutant 103 in Delta.ts: typeof length === 'number' && length <= 0 replaced with length > 0
Mutant 104 in Delta.ts: typeof length === 'number' && length <= 0 replaced with length > 1
Mutant 105 in Delta.ts: newOp replaced with {}
Mutant 106 in Delta.ts: newOp replaced with null
Mutant 107 in Delta.ts: newOp replaced with this.ops[index - 1]
Mutant 108 in Delta.ts: cloneDeep replaced with {}
Mutant 109 in Delta.ts: cloneDeep replaced with null
Mutant 110 in Delta.ts: newOp replaced with {}
Mutant 111 in Delta.ts: newOp replaced with null
Mutant 112 in Delta.ts: typeof lastOp === 'object' replaced with lastOp !== null
Mutant 113 in Delta.ts: typeof lastOp === 'object' replaced with lastOp.constructor.name === 'Object'
Mutant 114 in Delta.ts: typeof lastOp === 'object' replaced with Array.isArray(lastOp)
Mutant 115 in Delta.ts: typeof lastOp !== 'object' replaced with lastOp === null
Mutant 116 in Delta.ts: typeof lastOp !== 'object' replaced with typeof lastOp !== 'undefined'
Mutant 117 in Delta.ts: typeof lastOp !== 'object' replaced with Array.isArray(lastOp)
Mutant 118 in Delta.ts: this.ops.unshift replaced with this.ops.shift
Mutant 119 in Delta.ts: this.ops.unshift replaced with this.ops.pop
Mutant 120 in Delta.ts: newOp replaced with null
Mutant 121 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with newOp.attributes === lastOp.attributes
Mutant 122 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with JSON.stringify(newOp.attributes) === JSON.stringify(lastOp.attributes)
Mutant 123 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(lastOp.attributes, newOp.attributes)
Mutant 124 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(null)
Mutant 125 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual({})
Mutant 126 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(lastOp.attributes)
Mutant 127 in Delta.ts: isEqual replaced with nextOp.insert && lastOp.insert
Mutant 128 in Delta.ts: newOp.attributes replaced with newOp.attributes || {}
Mutant 129 in Delta.ts: lastOp.attributes replaced with null
Mutant 130 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with newOp.insert !== undefined && lastOp.insert !== undefined
Mutant 131 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with typeof newOp.insert === 'object' && typeof lastOp.insert === 'object'
Mutant 132 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes !== undefined
Mutant 133 in Delta.ts: typeof newOp.attributes === 'object' replaced with typeof newOp.attributes === 'string'
Mutant 134 in Delta.ts: typeof newOp.attributes === 'object' replaced with Array.isArray(newOp.attributes)
Mutant 135 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with newOp.retain !== 'number'
Mutant 136 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain !== 'number'
Mutant 137 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'number' && typeof lastOp.insert === 'number'
Mutant 138 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes !== undefined
Mutant 139 in Delta.ts: typeof newOp.attributes === 'object' replaced with typeof newOp.attributes !== 'undefined'
Mutant 140 in Delta.ts: index === this.ops.length replaced with index >= this.ops.length
Mutant 141 in Delta.ts: index === this.ops.length replaced with index > this.ops.length
Mutant 142 in Delta.ts: index === this.ops.length replaced with index === this.ops.length - 1
Mutant 143 in Delta.ts: this.ops.push replaced with this.ops.unshift
Mutant 144 in Delta.ts: this.ops.push replaced with this.ops.splice
Mutant 145 in Delta.ts: newOp replaced with {}
Mutant 146 in Delta.ts: newOp replaced with this.ops[index - 1]
Mutant 147 in Delta.ts: newOp replaced with null
Mutant 148 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, '0', newOp)
Mutant 149 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, -1, newOp)
Mutant 150 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, 1, newOp)
Mutant 151 in Delta.ts: this.ops.splice replaced with this.ops.concat
Mutant 152 in Delta.ts: index replaced with this.ops.length
Mutant 153 in Delta.ts: index replaced with -1
Mutant 154 in Delta.ts: index replaced with Math.random() * this.ops.length
Mutant 155 in Delta.ts: 0 replaced with this.ops.length
Mutant 156 in Delta.ts: 0 replaced with -1
Mutant 157 in Delta.ts: newOp replaced with {}
Mutant 158 in Delta.ts: newOp replaced with lastOp
Mutant 159 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp && typeof lastOp.retain === 'string'
Mutant 160 in Delta.ts: this.ops.pop replaced with this.ops.length--
Mutant 161 in Delta.ts: predicate replaced with () => true
Mutant 162 in Delta.ts: predicate replaced with (op, index) => predicate(index, op)
Mutant 163 in Delta.ts: predicate replaced with (op, index) => predicate(op)
Mutant 164 in Delta.ts: predicate replaced with index % 2 === 0
Mutant 165 in Delta.ts: op replaced with op || {}
Mutant 166 in Delta.ts: op replaced with this.ops[0]
Mutant 167 in Delta.ts: target.push replaced with target.pop
Mutant 168 in Delta.ts: op replaced with {}
Mutant 169 in Delta.ts: op replaced with null
Mutant 170 in Delta.ts: op replaced with Math.random()
Mutant 171 in Delta.ts: this.ops.reduce(predicate, initialValue) replaced with this.ops.reduce((predicate, initialValue) => initialValue)
Mutant 172 in Delta.ts: this.ops.reduce replaced with [1, 2, 3].reduce
Mutant 173 in Delta.ts: predicate replaced with (accum, curr, index) => accum + curr
Mutant 174 in Delta.ts: initialValue replaced with 0
Mutant 175 in Delta.ts: initialValue replaced with null
Mutant 176 in Delta.ts: elem.insert replaced with 1 * elem.insert
Mutant 177 in Delta.ts: elem.insert replaced with elem['insert']
Mutant 178 in Delta.ts: Op.length replaced with this.length
Mutant 179 in Delta.ts: elem replaced with 1 * elem
Mutant 180 in Delta.ts: elem replaced with null
Mutant 181 in Delta.ts: elem replaced with Math.random()
Mutant 182 in Delta.ts: elem.delete replaced with 0
Mutant 183 in Delta.ts: elem.delete replaced with 1
Mutant 184 in Delta.ts: Op.length replaced with this.ops.length
Mutant 185 in Delta.ts: Op.length replaced with 0
Mutant 186 in Delta.ts: elem replaced with this.ops[index - 1]
Mutant 187 in Delta.ts: elem replaced with null
Mutant 188 in Delta.ts: elem replaced with {
  insert: 0
}
Mutant 189 in Delta.ts: index < end && iter.hasNext() replaced with index < Infinity && iter.hasNext()
Mutant 190 in Delta.ts: index < end && iter.hasNext() replaced with index < end && iter.peek() !== undefined
Mutant 191 in Delta.ts: iter.hasNext replaced with true
Mutant 192 in Delta.ts: index < start replaced with index > start
Mutant 193 in Delta.ts: index < start replaced with index === start
Mutant 194 in Delta.ts: index < start replaced with index >= start
Mutant 195 in Delta.ts: iter.next replaced with -1
Mutant 196 in Delta.ts: iter.next replaced with this.ops.length
Mutant 197 in Delta.ts: start - index replaced with 0
Mutant 198 in Delta.ts: start - index replaced with start + index
Mutant 199 in Delta.ts: start - index replaced with Math.abs(start - index)
Mutant 200 in Delta.ts: iter.next replaced with iter.skip
Mutant 201 in Delta.ts: iter.next replaced with iter.peek
Mutant 202 in Delta.ts: end - index replaced with 0
Mutant 203 in Delta.ts: end - index replaced with this.ops.length
Mutant 204 in Delta.ts: end - index replaced with index
Mutant 205 in Delta.ts: nextOp replaced with null
Mutant 206 in Delta.ts: Op.length replaced with this.length
Mutant 207 in Delta.ts: nextOp replaced with null
Mutant 208 in Delta.ts: otherIter.peek replaced with otherIter.next
Mutant 209 in Delta.ts: firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null replaced with firstOther?.retain !== undefined && firstOther.attributes === null
Mutant 210 in Delta.ts: thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft replaced with thisIter.peekType() === 'insert' && firstLeft <= thisIter.peekLength()
Mutant 211 in Delta.ts: thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft replaced with thisIter.peekType() === 'insert' && firstLeft < thisIter.peekLength()
Mutant 212 in Delta.ts: thisIter.peekType replaced with 1
Mutant 213 in Delta.ts: thisIter.peekLength replaced with 0
Mutant 214 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 215 in Delta.ts: ops.push replaced with ops.unshift
Mutant 216 in Delta.ts: ops.push replaced with ops.length = ops.length + 1
Mutant 217 in Delta.ts: ops.push replaced with ops[ops.length] = newOp
Mutant 218 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 219 in Delta.ts: thisIter.next() replaced with thisIter.next(1)
Mutant 220 in Delta.ts: thisIter.next() replaced with thisIter.next(Math.floor(Math.random() * 10))
Mutant 221 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with firstOther.retain >= firstLeft
Mutant 222 in Delta.ts: otherIter.next replaced with thisIter.next
Mutant 223 in Delta.ts: firstOther.retain - firstLeft replaced with 0
Mutant 224 in Delta.ts: firstOther.retain - firstLeft replaced with firstOther.retain + firstLeft
Mutant 225 in Delta.ts: firstOther.retain - firstLeft replaced with Math.random()
Mutant 226 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.peek() !== null || otherIter.peek() !== null
Mutant 227 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.peekType() !== undefined || otherIter.peekType() !== undefined
Mutant 228 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.peekLength() > 0 || otherIter.peekLength() > 0
Mutant 229 in Delta.ts: thisIter.hasNext replaced with thisIter.peekType === 'insert'
Mutant 230 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekLength() > 0
Mutant 231 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peek() !== null
Mutant 232 in Delta.ts: otherIter.peekType replaced with 'retain'
Mutant 233 in Delta.ts: otherIter.next() replaced with otherIter.peek()
Mutant 234 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekType() === 'insert'
Mutant 235 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekType() === 'retain'
Mutant 236 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekLength() === 0
Mutant 237 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 238 in Delta.ts: thisIter.next() replaced with thisIter.next(0)
Mutant 239 in Delta.ts: thisIter.next() replaced with thisIter.next(-1)
Mutant 240 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() + otherIter.peekLength())
Mutant 241 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(Math.max(thisIter.peekLength(), otherIter.peekLength()))
Mutant 242 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() * otherIter.peekLength())
Mutant 243 in Delta.ts: Math.min replaced with Infinity
Mutant 244 in Delta.ts: Math.min replaced with 0
Mutant 245 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() - 1
Mutant 246 in Delta.ts: thisIter.peekLength() replaced with Infinity
Mutant 247 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() * 2
Mutant 248 in Delta.ts: thisIter.peekLength replaced with thisIter.peekLength - 1
Mutant 249 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 250 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 251 in Delta.ts: otherIter.peekLength() replaced with Infinity
Mutant 252 in Delta.ts: length replaced with thisIter.peekLength() * 2
Mutant 253 in Delta.ts: length replaced with 0
Mutant 254 in Delta.ts: length replaced with Math.random()
Mutant 255 in Delta.ts: otherIter.next replaced with otherIter.peek
Mutant 256 in Delta.ts: length replaced with 0
Mutant 257 in Delta.ts: length replaced with Infinity
Mutant 258 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 259 in Delta.ts: otherOp.retain replaced with otherOp.retain || 0
Mutant 260 in Delta.ts: otherOp.retain replaced with thisIter.peekLength()
Mutant 261 in Delta.ts: typeof thisOp.retain === 'number' replaced with thisOp.retain !== null
Mutant 262 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof thisOp.retain === 'string'
Mutant 263 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof thisOp.retain === 'symbol'
Mutant 264 in Delta.ts: typeof otherOp.retain === 'number' replaced with otherOp.retain !== null
Mutant 265 in Delta.ts: typeof otherOp.retain === 'number' replaced with typeof otherOp.retain === 'string'
Mutant 266 in Delta.ts: typeof otherOp.retain === 'number' replaced with otherOp.retain > 0
Mutant 267 in Delta.ts: thisOp.retain == null replaced with thisOp.retain === undefined
Mutant 268 in Delta.ts: thisOp.retain == null replaced with typeof thisOp.retain === 'undefined'
Mutant 269 in Delta.ts: thisOp.retain == null replaced with !thisOp.hasOwnProperty('retain')
Mutant 270 in Delta.ts: Delta.getHandler replaced with null
Mutant 271 in Delta.ts: embedType replaced with 'insert'
Mutant 272 in Delta.ts: embedType replaced with Math.random() * 2 | 0
Mutant 273 in Delta.ts: attributes replaced with Object.assign({}, attributes)
Mutant 274 in Delta.ts: attributes replaced with attributes || {}
Mutant 275 in Delta.ts: delta.push replaced with delta.unshift
Mutant 276 in Delta.ts: delta.push replaced with delta.splice
Mutant 277 in Delta.ts: delta.push replaced with delta.pop
Mutant 278 in Delta.ts: newOp replaced with {}
Mutant 279 in Delta.ts: newOp replaced with null
Mutant 280 in Delta.ts: newOp replaced with thisOp
Mutant 281 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with thisIter.hasNext() && isEqual(delta.ops[delta.ops.length - 2], newOp)
Mutant 282 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[0], newOp)
Mutant 283 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(newOp, delta.ops[delta.ops.length - 1])
Mutant 284 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[Math.floor(Math.random() * delta.ops.length)], newOp)
Mutant 285 in Delta.ts: isEqual replaced with 0
Mutant 286 in Delta.ts: delta.ops[delta.ops.length - 1] replaced with delta.ops[0]
Mutant 287 in Delta.ts: newOp replaced with {}
Mutant 288 in Delta.ts: newOp replaced with null
Mutant 289 in Delta.ts: newOp replaced with thisOp
Mutant 290 in Delta.ts: delta.concat replaced with this.concat
Mutant 291 in Delta.ts: delta.concat replaced with Array.prototype.concat
Mutant 292 in Delta.ts: delta.concat replaced with Math.concat
not replacing delta.concat with this.concat
not replacing delta.concat with this.concat
not replacing delta.concat with Array.prototype.concat
not replacing delta.concat with Array.prototype.concat
not replacing delta.concat with Math.concat
not replacing delta.concat with Math.concat
Mutant 293 in Delta.ts: rest replaced with new Delta(thisIter.rest())
Mutant 294 in Delta.ts: rest replaced with iter.rest()
Mutant 295 in Delta.ts: typeof otherOp.delete === 'number' && (typeof thisOp.retain === 'number' || typeof thisOp.retain === 'object' && thisOp.retain !== null) replaced with typeof thisOp.retain !== 'boolean'
Mutant 296 in Delta.ts: typeof otherOp.delete === 'number' && (typeof thisOp.retain === 'number' || typeof thisOp.retain === 'object' && thisOp.retain !== null) replaced with thisOp.retain !== null
Mutant 297 in Delta.ts: delta.push replaced with delta.pop
Mutant 298 in Delta.ts: delta.push replaced with ops.push
Mutant 299 in Delta.ts: otherOp replaced with null
Mutant 300 in Delta.ts: otherOp replaced with {}
Mutant 301 in Delta.ts: otherOp replaced with iter.next()
Mutant 302 in Delta.ts: this.ops.slice replaced with this.ops.splice
Mutant 303 in Delta.ts: this.ops.slice replaced with this.ops.concat
Mutant 304 in Delta.ts: this.ops.slice replaced with this.ops.filter
Mutant 305 in Delta.ts: other.ops.length > 0 replaced with other.ops.length >= 1
Mutant 306 in Delta.ts: other.ops.length > 0 replaced with other.ops.length !== 0
Mutant 307 in Delta.ts: other.ops.length > 0 replaced with Array.isArray(other.ops) && other.ops.length > 0
Mutant 308 in Delta.ts: other.ops[0] replaced with other.ops.slice(1)[0]
Mutant 309 in Delta.ts: other.ops.slice(1) replaced with other.ops.reverse()
Mutant 310 in Delta.ts: other.ops.slice replaced with other.ops.concat
Mutant 311 in Delta.ts: 1 replaced with other.ops.length - 1
Mutant 312 in Delta.ts: 1 replaced with other.ops.slice(0)
Mutant 313 in Delta.ts: this.ops === other.ops replaced with this.ops.length === other.ops.length
Mutant 314 in Delta.ts: this.ops === other.ops replaced with this.ops[0] === other.ops[0]
Mutant 315 in Delta.ts: this.ops === other.ops replaced with JSON.stringify(this.ops) === JSON.stringify(other.ops)
Mutant 316 in Delta.ts: op.insert != null replaced with op.insert !== undefined
Mutant 317 in Delta.ts: op.insert != null replaced with typeof op.insert === 'string'
Mutant 318 in Delta.ts: op.insert != null replaced with op.insert !== null && op.insert !== undefined
Mutant 319 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(['string1', 'string2', cursor])
Mutant 320 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(strings.slice())
Mutant 321 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff([strings[1], strings[0], cursor])
Mutant 322 in Delta.ts: diff replaced with 'stringDiff'
Mutant 323 in Delta.ts: strings[0] replaced with ''.concat(strings[0])
Mutant 324 in Delta.ts: strings[1] replaced with []
Mutant 325 in Delta.ts: strings[1] replaced with strings[2]
Mutant 326 in Delta.ts: strings[1] replaced with 'hardcoded string'
Mutant 327 in Delta.ts: cursor replaced with null
Mutant 328 in Delta.ts: length > 0 replaced with length >= 1
Mutant 329 in Delta.ts: length > 0 replaced with length > -1
Mutant 330 in Delta.ts: length > 0 replaced with true
Mutant 331 in Delta.ts: component[0] replaced with diff.EQUAL
Mutant 332 in Delta.ts: component[0] replaced with 1
Mutant 333 in Delta.ts: component[0] replaced with Math.random()
Mutant 334 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(otherIter.length(), length)
Mutant 335 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(otherIter.peekLength(), otherIter.peekLength())
Mutant 336 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(thisIter.peekLength(), length)
Mutant 337 in Delta.ts: Math.min replaced with Infinity
Mutant 338 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 339 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 340 in Delta.ts: otherIter.peekLength() replaced with Math.random() * 10
Mutant 341 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 342 in Delta.ts: length replaced with 0
Mutant 343 in Delta.ts: length replaced with Infinity
Mutant 344 in Delta.ts: otherIter.next(opLength) replaced with otherIter.next(opLength - 1)
Mutant 345 in Delta.ts: opLength replaced with thisIter.peekLength()
Mutant 346 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(1)
Mutant 347 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(thisIter.peekLength() * 2)
Mutant 348 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(Math.max(length, thisIter.peekLength()))
Mutant 349 in Delta.ts: Math.min replaced with 1000
Mutant 350 in Delta.ts: length replaced with thisIter.peekLength() * 2
Mutant 351 in Delta.ts: length replaced with 0
Mutant 352 in Delta.ts: length replaced with thisIter.peekLength() + 1
Mutant 353 in Delta.ts: thisIter.peekLength() replaced with 100
Mutant 354 in Delta.ts: thisIter.peekLength() replaced with thisIter.peek().length
Mutant 355 in Delta.ts: thisIter.peekLength() replaced with otherIter.peekLength()
Mutant 356 in Delta.ts: opLength replaced with 0
Mutant 357 in Delta.ts: opLength replaced with thisIter.peekLength()
Mutant 358 in Delta.ts: opLength replaced with Math.random()
Mutant 359 in Delta.ts: opLength replaced with 0
Mutant 360 in Delta.ts: opLength replaced with thisOp.length
Mutant 361 in Delta.ts: opLength replaced with Math.random()
Mutant 362 in Delta.ts: otherIter.peekLength replaced with thisOp.insert.length
Mutant 363 in Delta.ts: opLength replaced with thisOp.insert.length
Mutant 364 in Delta.ts: opLength replaced with Math.max(length, 1)
Mutant 365 in Delta.ts: opLength replaced with otherIter.peekLength()
Mutant 366 in Delta.ts: opLength replaced with otherIter.peekLength() * 2
Mutant 367 in Delta.ts: opLength replaced with 0
Mutant 368 in Delta.ts: opLength replaced with thisIter.peekLength() + 1
Mutant 369 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with thisOp.insert === otherOp.insert
Mutant 370 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with thisOp.insert == otherOp.insert
Mutant 371 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with Object.is(thisOp.insert, otherOp.insert)
Mutant 372 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(thisOp.insert || otherOp.insert)
Mutant 373 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(null)
Mutant 374 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(thisOp.insert ?? otherOp.insert)
Mutant 375 in Delta.ts: isEqual replaced with thisOp.insert.length === otherOp.insert.length
Mutant 376 in Delta.ts: isEqual replaced with true
Mutant 377 in Delta.ts: thisOp.insert replaced with thisOp.insert || ''
Mutant 378 in Delta.ts: otherOp.insert replaced with otherOp.insert || ''
Mutant 379 in Delta.ts: otherOp.insert replaced with otherOp.insert ?? '<REPLACEMENT_VALUE>'
Mutant 380 in Delta.ts: otherOp.insert replaced with otherOp.hasOwnProperty('insert') ? otherOp.insert : '<REPLACEMENT_VALUE>'
Mutant 381 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(Object.assign({}, thisOp.attributes, otherOp.attributes))
Mutant 382 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(thisOp.attributes.concat(otherOp.attributes))
Mutant 383 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff({
  ...thisOp.attributes,
  ...otherOp.attributes
})
Mutant 384 in Delta.ts: AttributeMap.diff replaced with null
Mutant 385 in Delta.ts: AttributeMap.diff replaced with {}
Mutant 386 in Delta.ts: thisOp.attributes replaced with null
Mutant 387 in Delta.ts: otherOp.attributes replaced with null
Mutant 388 in Delta.ts: retDelta.push replaced with retDelta.pop
Mutant 389 in Delta.ts: retDelta.push replaced with retDelta['push']
Mutant 390 in Delta.ts: retDelta.push replaced with retDelta.unshift
not replacing retDelta.push with retDelta.pop
not replacing retDelta.push with retDelta.pop
not replacing retDelta.push with retDelta['push']
not replacing retDelta.push with retDelta['push']
not replacing retDelta.push with retDelta.unshift
not replacing retDelta.push with retDelta.unshift
Mutant 391 in Delta.ts: otherOp replaced with null
Mutant 392 in Delta.ts: opLength replaced with 0
Mutant 393 in Delta.ts: opLength replaced with thisOp.length
Mutant 394 in Delta.ts: opLength replaced with Infinity
Mutant 395 in Delta.ts: iter.hasNext() replaced with iter.peek() !== undefined
Mutant 396 in Delta.ts: iter.hasNext() replaced with iter.peekType() !== undefined
Mutant 397 in Delta.ts: iter.peekType() !== 'insert' replaced with iter.peekType() === 'insert'
Mutant 398 in Delta.ts: iter.peekType() !== 'insert' replaced with true
Mutant 399 in Delta.ts: Op.length replaced with thisOp.length
Mutant 400 in Delta.ts: thisOp replaced with thisOp.insert
Mutant 401 in Delta.ts: thisOp replaced with null
Mutant 402 in Delta.ts: iter.peekLength replaced with 0
Mutant 403 in Delta.ts: iter.peekLength replaced with thisIter.peekLength + 1
Mutant 404 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf('', start)
Mutant 405 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf(newline, thisIter.peekLength())
Mutant 406 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf('', 0)
Mutant 407 in Delta.ts: thisOp.insert.indexOf replaced with ''.indexOf
Mutant 408 in Delta.ts: thisOp.insert.indexOf replaced with thisOp.insert.length
Mutant 409 in Delta.ts: newline replaced with '\r\n'
Mutant 410 in Delta.ts: newline replaced with ''
Mutant 411 in Delta.ts: newline replaced with '\\n'
Mutant 412 in Delta.ts: start replaced with thisOp.insert.indexOf(newline, Infinity)
Mutant 413 in Delta.ts: start replaced with thisOp.insert.indexOf(newline, -1)
Mutant 414 in Delta.ts: index < 0 replaced with index <= -1
Mutant 415 in Delta.ts: index < 0 replaced with index > this.length()
Mutant 416 in Delta.ts: iter.next() replaced with iter.next(1)
Mutant 417 in Delta.ts: iter.next() replaced with iter.previous()
Mutant 418 in Delta.ts: iter.next() replaced with iter.ops[0]
Mutant 419 in Delta.ts: iter.next replaced with thisIter.next
Mutant 420 in Delta.ts: index > 0 replaced with index >= 0
Mutant 421 in Delta.ts: iter.next(index) replaced with iter.next(index + 1)
Mutant 422 in Delta.ts: iter.next(index) replaced with iter.previous()
Mutant 423 in Delta.ts: iter.next replaced with -1
Mutant 424 in Delta.ts: iter.next replaced with null
Mutant 425 in Delta.ts: index replaced with thisOp.insert.length
Mutant 426 in Delta.ts: index replaced with 0
Mutant 427 in Delta.ts: index replaced with Math.floor(Math.random() * thisOp.insert.length)
Mutant 428 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) === false replaced with predicate(line, {}, i) === false
Mutant 429 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) replaced with predicate(new Delta(), {}, i)
Mutant 430 in Delta.ts: line replaced with []
Mutant 431 in Delta.ts: line replaced with '<div></div>'
Mutant 432 in Delta.ts: line replaced with {
  insert: '\n',
  attributes: {
    style: 'color: red'
  }
}
Mutant 433 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(1).attributes || {
  foo: 'bar'
}
Mutant 434 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(2).attributes || {}
Mutant 435 in Delta.ts: i replaced with i + 1
Mutant 436 in Delta.ts: i replaced with 0
Mutant 437 in Delta.ts: i replaced with this.length()
Mutant 438 in Delta.ts: line.length() > 0 replaced with line.length > 0
Mutant 439 in Delta.ts: line.length() > 0 replaced with line.length > 1
Mutant 440 in Delta.ts: line.length() > 0 replaced with line.length() >= 0
Mutant 441 in Delta.ts: line.length replaced with line.length - 1
Mutant 442 in Delta.ts: line.length replaced with this.ops.length
Mutant 443 in Delta.ts: predicate(line, {}, i) replaced with predicate([line, otherIter.next(1).attributes || {}, i])
Mutant 444 in Delta.ts: line replaced with new Delta()
Mutant 445 in Delta.ts: {} replaced with {
  insert: '\n'
}
Mutant 446 in Delta.ts: {} replaced with {
  insert: '',
  attributes: {
    bold: true
  }
}
Mutant 447 in Delta.ts: {} replaced with {
  insert: ' ',
  attributes: {
    italic: true
  }
}
Mutant 448 in Delta.ts: i replaced with i + 1
Mutant 449 in Delta.ts: i replaced with 0
Mutant 450 in Delta.ts: i replaced with 'placeholder'
Mutant 451 in Delta.ts: op.insert replaced with op.insert || ''
Mutant 452 in Delta.ts: inverted.delete replaced with inverted.retain
Mutant 453 in Delta.ts: inverted.delete replaced with inverted.push
Mutant 454 in Delta.ts: inverted.delete replaced with inverted.chop
Mutant 455 in Delta.ts: Op.length(op) replaced with this.ops.length
Mutant 456 in Delta.ts: Op.length replaced with thisOp.length
Mutant 457 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && op.attributes === undefined
Mutant 458 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with op.retain !== null && op.retain.constructor.name === 'Number'
Mutant 459 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && Object.keys(op.attributes).length === 0
Mutant 460 in Delta.ts: op.retain replaced with op.retain || 0
Mutant 461 in Delta.ts: op.retain replaced with op.retain ?? 0
Mutant 462 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex + length, baseIndex)
Mutant 463 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex + 1, baseIndex + length)
Mutant 464 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex, baseIndex + length + 1)
Mutant 465 in Delta.ts: base.slice replaced with [...base.ops].slice
Mutant 466 in Delta.ts: baseIndex replaced with thisIter.current().attributes.start
Mutant 467 in Delta.ts: baseIndex replaced with 0
Mutant 468 in Delta.ts: baseIndex + length replaced with baseIndex + length - 1
Mutant 469 in Delta.ts: op.delete replaced with false
Mutant 470 in Delta.ts: op.delete replaced with 0
Mutant 471 in Delta.ts: op.delete replaced with null
Mutant 472 in Delta.ts: baseOp replaced with null
Mutant 473 in Delta.ts: op.retain && op.attributes replaced with op.retain && op.attributes || {}
Mutant 474 in Delta.ts: op.retain && op.attributes replaced with op.retain !== undefined && op.attributes
Mutant 475 in Delta.ts: op.retain && op.attributes replaced with op.attributes || op.retain
Mutant 476 in Delta.ts: Op.length replaced with 0
Mutant 477 in Delta.ts: baseOp replaced with Object.assign({}, baseOp)
Mutant 478 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(null)
Mutant 479 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes || {})
Mutant 480 in Delta.ts: AttributeMap.invert replaced with {}
Mutant 481 in Delta.ts: AttributeMap.invert replaced with baseOp.attributes
Mutant 482 in Delta.ts: op.attributes replaced with null
Mutant 483 in Delta.ts: op.attributes replaced with {}
Mutant 484 in Delta.ts: op.attributes replaced with thisOp.attributes || {}
Mutant 485 in Delta.ts: baseOp.attributes replaced with null
Mutant 486 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== undefined
Mutant 487 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'number'
Mutant 488 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain && typeof op.retain === 'object'
Mutant 489 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIndex + length)
Mutant 490 in Delta.ts: base.slice replaced with []
Mutant 491 in Delta.ts: baseIndex replaced with thisIter.peekLength()
Mutant 492 in Delta.ts: baseIndex replaced with 0
Mutant 493 in Delta.ts: baseIndex replaced with thisIter.peekType() === 'insert' ? thisIter.peekLength() : 0
Mutant 494 in Delta.ts: baseIndex + 1 replaced with baseIter.peekLength()
Mutant 495 in Delta.ts: baseIndex + 1 replaced with thisIter.peekLength()
Mutant 496 in Delta.ts: baseIndex + 1 replaced with Math.random()
Mutant 497 in Delta.ts: Delta.getHandler replaced with delta.getHandler
Mutant 498 in Delta.ts: embedType replaced with 'none'
Mutant 499 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(null)
Mutant 500 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert([opData, baseOpData])
Mutant 501 in Delta.ts: opData replaced with null
Mutant 502 in Delta.ts: opData replaced with []
Mutant 503 in Delta.ts: opData replaced with Math.random()
Mutant 504 in Delta.ts: baseOpData replaced with null
Mutant 505 in Delta.ts: baseOpData replaced with baseOpData.slice(0, baseOpData.length / 2)
Mutant 506 in Delta.ts: baseOpData replaced with thisOp.attributes
Mutant 507 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes || {})
Mutant 508 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(baseOp.attributes || {})
Mutant 509 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert({})
Mutant 510 in Delta.ts: op.attributes replaced with null
Mutant 511 in Delta.ts: baseOp.attributes replaced with null
Mutant 512 in Delta.ts: typeof arg === 'number' replaced with arg !== undefined
Mutant 513 in Delta.ts: typeof arg === 'number' replaced with arg !== null
Mutant 514 in Delta.ts: typeof arg === 'number' replaced with typeof arg === 'object'
Mutant 515 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(arg + priority)
Mutant 516 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(arg && priority)
Mutant 517 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(arg ? priority : arg)
Mutant 518 in Delta.ts: arg replaced with 0
Mutant 519 in Delta.ts: arg replaced with Infinity
Mutant 520 in Delta.ts: arg replaced with thisIter.peekLength()
Mutant 521 in Delta.ts: priority replaced with false
Mutant 522 in Delta.ts: priority replaced with thisIter.peekType() === 'insert'
Mutant 523 in Delta.ts: priority replaced with !priority
Mutant 524 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.peek() !== null
Mutant 525 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with otherIter.peek() !== undefined
Mutant 526 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.peekLength() > 0 || otherIter.peekLength() > 0
Mutant 527 in Delta.ts: thisIter.hasNext replaced with thisIter.current !== null
Mutant 528 in Delta.ts: thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert') replaced with thisIter.peekType() === 'insert' && (priority || otherIter.peekLength() > 0)
Mutant 529 in Delta.ts: thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert') replaced with thisIter.peekType() === 'insert' && (priority || otherIter.peekLength() === 0)
Mutant 530 in Delta.ts: thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert') replaced with thisIter.peekType() === 'insert' && priority && otherIter.peekType() !== 'insert'
Mutant 531 in Delta.ts: delta.retain replaced with delta.push
Mutant 532 in Delta.ts: delta.retain replaced with delta.length = 0
Mutant 533 in Delta.ts: Op.length(thisIter.next()) replaced with 1
Mutant 534 in Delta.ts: Op.length(thisIter.next()) replaced with thisIter.peekLength()
Mutant 535 in Delta.ts: Op.length(thisIter.next()) replaced with Math.random() * Number.MAX_SAFE_INTEGER
Mutant 536 in Delta.ts: Op.length replaced with 0
Mutant 537 in Delta.ts: Op.length replaced with Infinity
Mutant 538 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 539 in Delta.ts: thisIter.next() replaced with thisIter.next(0)
Mutant 540 in Delta.ts: thisIter.next() replaced with thisIter.previous()
Mutant 541 in Delta.ts: thisIter.next replaced with thisIter['next']
Mutant 542 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peek()?.type === 'insert'
Mutant 543 in Delta.ts: otherIter.next() replaced with null
Mutant 544 in Delta.ts: otherIter.next() replaced with otherIter.peek()
Mutant 545 in Delta.ts: otherIter.next() replaced with {
  type: 'insert',
  insert: 'placeholder'
}
Mutant 546 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() + otherIter.peekLength())
Mutant 547 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(Math.max(thisIter.peekLength(), otherIter.peekLength()))
Mutant 548 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() * otherIter.peekLength())
Mutant 549 in Delta.ts: Math.min replaced with Math.max
Mutant 550 in Delta.ts: Math.min replaced with index - offset
Mutant 551 in Delta.ts: thisIter.peekLength() replaced with thisIter.next().length
Mutant 552 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 553 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 554 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 555 in Delta.ts: otherIter.peekLength() replaced with Infinity
Mutant 556 in Delta.ts: length replaced with 0
Mutant 557 in Delta.ts: length replaced with thisOp.length
Mutant 558 in Delta.ts: length replaced with thisOp.retain.length
Mutant 559 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 560 in Delta.ts: length replaced with 0
Mutant 561 in Delta.ts: length replaced with Infinity
Mutant 562 in Delta.ts: otherOp replaced with null
Mutant 563 in Delta.ts: otherOp replaced with {}
Mutant 564 in Delta.ts: otherOp replaced with thisIter.next()
Mutant 565 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with thisData && otherData
Mutant 566 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with Object.keys(thisData).length > 0 && Object.keys(otherData).length > 0
Mutant 567 in Delta.ts: thisData replaced with thisData || {}
Mutant 568 in Delta.ts: thisData replaced with thisData['nonexistent_property']
Mutant 569 in Delta.ts: thisData replaced with thisData.slice(0, 1)
Mutant 570 in Delta.ts: otherData replaced with null
Mutant 571 in Delta.ts: otherData replaced with {}
Mutant 572 in Delta.ts: otherData replaced with [1, 2, 3]
Mutant 573 in Delta.ts: Delta.getHandler replaced with null
Mutant 574 in Delta.ts: embedType replaced with 'nonexistentType'
Mutant 575 in Delta.ts: handler replaced with handler.transform(thisData[embedType], otherData[embedType], !priority)
Mutant 576 in Delta.ts: thisIter.hasNext() && offset <= index replaced with offset < index
Mutant 577 in Delta.ts: thisIter.hasNext() && offset <= index replaced with thisIter.peekLength() > 0 && offset <= index
Mutant 578 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 579 in Delta.ts: thisIter.peekType replaced with 'insert'
Mutant 580 in Delta.ts: nextType === 'delete' replaced with nextType === undefined
Mutant 581 in Delta.ts: nextType === 'delete' replaced with thisIter.peekType() === 'insert'
Mutant 582 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(1)
Mutant 583 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(index + offset)
Mutant 584 in Delta.ts: Math.min replaced with 1
Mutant 585 in Delta.ts: Math.min replaced with Math.max
Mutant 586 in Delta.ts: length replaced with 0
Mutant 587 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 588 in Delta.ts: length replaced with -thisIter.peekLength()
Mutant 589 in Delta.ts: index - offset replaced with index + offset
Mutant 590 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType === 'insert' && (offset <= index || !priority)
Mutant 591 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType === 'insert' && (offset + 1 < index || !priority)
Mutant 592 in Delta.ts: typeof module === 'object' replaced with typeof global === 'object'
Mutant 593 in Delta.ts: typeof module === 'object' replaced with global.module !== undefined
Mutant 594 in Delta.ts: typeof module === 'object' replaced with typeof window.module === 'object'
Mutant 595 in Op.ts: typeof op.retain === 'number' replaced with op.retain === undefined
Mutant 596 in Op.ts: typeof op.retain === 'number' replaced with typeof op.retain === 'undefined'
Mutant 597 in Op.ts: typeof op.retain === 'number' replaced with op.hasOwnProperty('retain') && typeof op.retain === 'number'
Mutant 598 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== undefined
Mutant 599 in OpIterator.ts: this.peekLength replaced with -Infinity
Mutant 600 in OpIterator.ts: this.peekLength replaced with this.index < this.ops.length
Mutant 601 in OpIterator.ts: !length replaced with length === 0
Mutant 602 in OpIterator.ts: nextOp replaced with this.ops[this.index - 1]
Mutant 603 in OpIterator.ts: nextOp replaced with null
Mutant 604 in OpIterator.ts: nextOp replaced with this.ops[this.index + 1]
Mutant 605 in OpIterator.ts: Op.length replaced with 0
Mutant 606 in OpIterator.ts: Op.length replaced with this.ops.length
Mutant 607 in OpIterator.ts: nextOp replaced with this.ops[this.index - 1]
Mutant 608 in OpIterator.ts: nextOp replaced with Math.max(0, nextOp.length - offset)
Mutant 609 in OpIterator.ts: nextOp replaced with nextOp.retain || Infinity
Mutant 610 in OpIterator.ts: length >= opLength - offset replaced with length > opLength - offset
Mutant 611 in OpIterator.ts: length >= opLength - offset replaced with length > 0
Mutant 612 in OpIterator.ts: length >= opLength - offset replaced with this.offset > opLength - length
Mutant 613 in OpIterator.ts: nextOp.attributes replaced with nextOp['attributes']
Mutant 614 in OpIterator.ts: nextOp.attributes replaced with nextOp.hasOwnProperty('attributes')
Mutant 615 in OpIterator.ts: nextOp.attributes replaced with Reflect.get(nextOp, 'attributes')
Mutant 616 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with nextOp.retain !== undefined
Mutant 617 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with typeof nextOp.retain === 'string'
Mutant 618 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with nextOp.hasOwnProperty('retain')
Mutant 619 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with typeof nextOp.retain === 'function'
Mutant 620 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with nextOp.hasOwnProperty('retain')
Mutant 621 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with nextOp.retain !== undefined
Mutant 622 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with nextOp.insert !== null
Mutant 623 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with nextOp.hasOwnProperty('insert')
Mutant 624 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with Array.isArray(nextOp.insert)
Mutant 625 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(nextOp.insert.length)
Mutant 626 in OpIterator.ts: offset replaced with op.length - offset
Mutant 627 in OpIterator.ts: offset replaced with 0
Mutant 628 in OpIterator.ts: offset replaced with this.offset + length
Mutant 629 in OpIterator.ts: length replaced with nextOp.insert.length - offset
Mutant 630 in OpIterator.ts: length replaced with 1
Mutant 631 in OpIterator.ts: length replaced with Math.min(nextOp.insert.length - offset, length)
Mutant 632 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index - 1]
Mutant 633 in OpIterator.ts: this.ops[this.index] replaced with this.ops.slice(this.index, 1)[0]
Mutant 634 in OpIterator.ts: Op.length replaced with this.ops.length
Mutant 635 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index - 1]
Mutant 636 in OpIterator.ts: op replaced with this.ops[this.index + 1]
Mutant 637 in OpIterator.ts: op replaced with this.ops[this.index - 1]
Mutant 638 in OpIterator.ts: op replaced with this.ops.filter(op => op.type === 'retain')[0]
Mutant 639 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'string'
Mutant 640 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== undefined
Mutant 641 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'object' && op.retain !== null && op.retain.length > 0
Mutant 642 in OpIterator.ts: !this.hasNext() replaced with this.index >= this.ops.length
Mutant 643 in OpIterator.ts: !this.hasNext() replaced with this.offset === Op.length(this.ops[this.index])
Mutant 644 in OpIterator.ts: !this.hasNext() replaced with this.peekType() === 'retain'
Mutant 645 in OpIterator.ts: this.hasNext replaced with this.index < this.ops.length
Mutant 646 in OpIterator.ts: this.offset === 0 replaced with this.offset > 0
Mutant 647 in OpIterator.ts: this.offset === 0 replaced with this.index.offset
Mutant 648 in OpIterator.ts: this.ops.slice replaced with this.ops.splice
Mutant 649 in OpIterator.ts: this.index replaced with this.index + 1
Mutant 650 in OpIterator.ts: this.index replaced with 0
Mutant 651 in OpIterator.ts: this.index replaced with this.ops.length
Mutant 652 in OpIterator.ts: this.ops.slice replaced with this.ops.splice
Mutant 653 in OpIterator.ts: this.index replaced with index + 1
Mutant 654 in OpIterator.ts: this.index replaced with this.index - 1
Mutant 655 in OpIterator.ts: this.index replaced with Math.floor(Math.random() * this.ops.length)
Mutant 656 in OpIterator.ts: [next].concat replaced with [next].slice
Mutant 657 in OpIterator.ts: rest replaced with this.ops.slice(this.index + 1)
Mutant 658 in OpIterator.ts: rest replaced with this.ops.slice(0, this.index)
Mutant 659 in OpIterator.ts: rest replaced with this.ops.filter(op => op !== this.ops[this.index])
[32m11:49:02 (2867) INFO Instrumenter[39m Instrumented 4 source file(s) with 660 mutant(s)
[32m11:49:03 (2867) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m11:49:04 (2867) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m11:49:04 (2867) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m11:49:09 (2867) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 4 seconds (net 4708 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~54m) 2/660 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~54m) 4/660 tested (3 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~54m) 6/660 tested (4 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~54m) 8/660 tested (4 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~54m) 10/660 tested (5 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~54m) 12/660 tested (5 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~53m) 14/660 tested (6 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~50m) 17/660 tested (7 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~50m) 19/660 tested (9 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~50m) 21/660 tested (10 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~50m) 23/660 tested (12 survived, 0 timed out)
Mutation testing 3% (elapsed: ~2m, remaining: ~50m) 25/660 tested (13 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~50m) 27/660 tested (13 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~50m) 29/660 tested (13 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~50m) 31/660 tested (14 survived, 0 timed out)
Mutation testing 5% (elapsed: ~2m, remaining: ~49m) 34/660 tested (14 survived, 0 timed out)
Mutation testing 5% (elapsed: ~2m, remaining: ~49m) 36/660 tested (14 survived, 0 timed out)
Mutation testing 5% (elapsed: ~3m, remaining: ~49m) 38/660 tested (14 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~49m) 40/660 tested (14 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~49m) 42/660 tested (14 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~49m) 44/660 tested (14 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~48m) 46/660 tested (15 survived, 0 timed out)
Mutation testing 7% (elapsed: ~3m, remaining: ~47m) 49/660 tested (15 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~47m) 51/660 tested (15 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~47m) 53/660 tested (16 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~47m) 55/660 tested (16 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~47m) 57/660 tested (16 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~47m) 59/660 tested (17 survived, 0 timed out)
Mutation testing 9% (elapsed: ~4m, remaining: ~46m) 62/660 tested (18 survived, 0 timed out)
Mutation testing 9% (elapsed: ~5m, remaining: ~46m) 64/660 tested (20 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~46m) 66/660 tested (22 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~46m) 68/660 tested (24 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~46m) 70/660 tested (24 survived, 0 timed out)
Mutation testing 11% (elapsed: ~5m, remaining: ~45m) 73/660 tested (24 survived, 0 timed out)
Mutation testing 11% (elapsed: ~5m, remaining: ~45m) 75/660 tested (24 survived, 0 timed out)
Mutation testing 11% (elapsed: ~6m, remaining: ~45m) 77/660 tested (24 survived, 0 timed out)
Mutation testing 11% (elapsed: ~6m, remaining: ~45m) 79/660 tested (24 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~45m) 81/660 tested (25 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~45m) 83/660 tested (26 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~45m) 85/660 tested (27 survived, 0 timed out)
Mutation testing 13% (elapsed: ~6m, remaining: ~44m) 88/660 tested (27 survived, 0 timed out)
Mutation testing 13% (elapsed: ~7m, remaining: ~44m) 90/660 tested (28 survived, 0 timed out)
Mutation testing 13% (elapsed: ~7m, remaining: ~44m) 92/660 tested (28 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~44m) 94/660 tested (28 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~44m) 96/660 tested (28 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~43m) 98/660 tested (28 survived, 0 timed out)
Mutation testing 15% (elapsed: ~7m, remaining: ~43m) 100/660 tested (28 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~43m) 102/660 tested (28 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~43m) 105/660 tested (28 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~43m) 107/660 tested (28 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~42m) 109/660 tested (28 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~42m) 111/660 tested (28 survived, 0 timed out)
Mutation testing 17% (elapsed: ~8m, remaining: ~42m) 113/660 tested (28 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~42m) 115/660 tested (28 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~42m) 117/660 tested (28 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~42m) 119/660 tested (28 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~42m) 121/660 tested (28 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~41m) 124/660 tested (30 survived, 0 timed out)
Mutation testing 19% (elapsed: ~9m, remaining: ~41m) 126/660 tested (30 survived, 0 timed out)
Mutation testing 19% (elapsed: ~10m, remaining: ~41m) 128/660 tested (30 survived, 0 timed out)
Mutation testing 19% (elapsed: ~10m, remaining: ~41m) 130/660 tested (30 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~41m) 132/660 tested (30 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~41m) 134/660 tested (31 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~41m) 136/660 tested (31 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~40m) 138/660 tested (31 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~40m) 140/660 tested (33 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~40m) 142/660 tested (35 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~40m) 144/660 tested (35 survived, 0 timed out)
Mutation testing 22% (elapsed: ~11m, remaining: ~40m) 146/660 tested (35 survived, 0 timed out)
Mutation testing 22% (elapsed: ~11m, remaining: ~40m) 148/660 tested (35 survived, 0 timed out)
Mutation testing 22% (elapsed: ~11m, remaining: ~40m) 150/660 tested (37 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~40m) 152/660 tested (37 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~39m) 154/660 tested (38 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~39m) 156/660 tested (38 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~39m) 158/660 tested (39 survived, 0 timed out)
Mutation testing 24% (elapsed: ~12m, remaining: ~39m) 160/660 tested (39 survived, 0 timed out)
Mutation testing 24% (elapsed: ~12m, remaining: ~39m) 162/660 tested (39 survived, 0 timed out)
Mutation testing 24% (elapsed: ~13m, remaining: ~39m) 164/660 tested (40 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~39m) 166/660 tested (41 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~39m) 168/660 tested (41 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~38m) 171/660 tested (41 survived, 0 timed out)
Mutation testing 26% (elapsed: ~13m, remaining: ~38m) 173/660 tested (41 survived, 0 timed out)
Mutation testing 26% (elapsed: ~13m, remaining: ~38m) 175/660 tested (42 survived, 0 timed out)
Mutation testing 26% (elapsed: ~14m, remaining: ~38m) 177/660 tested (43 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~38m) 179/660 tested (44 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~37m) 181/660 tested (44 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~37m) 183/660 tested (44 survived, 0 timed out)
Mutation testing 28% (elapsed: ~14m, remaining: ~37m) 186/660 tested (44 survived, 0 timed out)
Mutation testing 28% (elapsed: ~14m, remaining: ~37m) 188/660 tested (44 survived, 0 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~37m) 189/660 tested (44 survived, 0 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~37m) 190/660 tested (44 survived, 1 timed out)
Mutation testing 29% (elapsed: ~15m, remaining: ~37m) 192/660 tested (45 survived, 1 timed out)
Mutation testing 29% (elapsed: ~15m, remaining: ~37m) 193/660 tested (45 survived, 2 timed out)
Mutation testing 29% (elapsed: ~15m, remaining: ~37m) 194/660 tested (45 survived, 2 timed out)
Mutation testing 29% (elapsed: ~15m, remaining: ~37m) 196/660 tested (45 survived, 3 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~37m) 198/660 tested (45 survived, 3 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~37m) 200/660 tested (46 survived, 3 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~37m) 201/660 tested (46 survived, 3 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~37m) 203/660 tested (46 survived, 4 timed out)
Mutation testing 31% (elapsed: ~16m, remaining: ~36m) 205/660 tested (46 survived, 4 timed out)
Mutation testing 31% (elapsed: ~16m, remaining: ~36m) 207/660 tested (46 survived, 4 timed out)
Mutation testing 31% (elapsed: ~17m, remaining: ~36m) 209/660 tested (46 survived, 4 timed out)
Mutation testing 31% (elapsed: ~17m, remaining: ~36m) 211/660 tested (47 survived, 4 timed out)
Mutation testing 32% (elapsed: ~17m, remaining: ~36m) 213/660 tested (47 survived, 4 timed out)
Mutation testing 32% (elapsed: ~17m, remaining: ~35m) 216/660 tested (47 survived, 4 timed out)
Mutation testing 33% (elapsed: ~17m, remaining: ~35m) 218/660 tested (47 survived, 4 timed out)
Mutation testing 33% (elapsed: ~17m, remaining: ~35m) 220/660 tested (47 survived, 4 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~35m) 222/660 tested (47 survived, 4 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~35m) 224/660 tested (47 survived, 4 timed out)
Mutation testing 34% (elapsed: ~18m, remaining: ~35m) 226/660 tested (47 survived, 4 timed out)
Mutation testing 34% (elapsed: ~18m, remaining: ~35m) 228/660 tested (49 survived, 4 timed out)
Mutation testing 34% (elapsed: ~18m, remaining: ~34m) 230/660 tested (50 survived, 4 timed out)
Mutation testing 35% (elapsed: ~18m, remaining: ~34m) 231/660 tested (50 survived, 5 timed out)
Mutation testing 35% (elapsed: ~19m, remaining: ~35m) 232/660 tested (50 survived, 6 timed out)
Mutation testing 35% (elapsed: ~19m, remaining: ~35m) 233/660 tested (50 survived, 6 timed out)
Mutation testing 35% (elapsed: ~19m, remaining: ~35m) 234/660 tested (50 survived, 7 timed out)
Mutation testing 35% (elapsed: ~19m, remaining: ~35m) 235/660 tested (50 survived, 7 timed out)
Mutation testing 35% (elapsed: ~19m, remaining: ~35m) 237/660 tested (50 survived, 8 timed out)
Mutation testing 36% (elapsed: ~19m, remaining: ~35m) 238/660 tested (50 survived, 9 timed out)
Mutation testing 36% (elapsed: ~20m, remaining: ~35m) 239/660 tested (51 survived, 9 timed out)
Mutation testing 36% (elapsed: ~20m, remaining: ~35m) 240/660 tested (51 survived, 10 timed out)
Mutation testing 36% (elapsed: ~20m, remaining: ~35m) 242/660 tested (51 survived, 10 timed out)
Mutation testing 36% (elapsed: ~20m, remaining: ~34m) 244/660 tested (51 survived, 10 timed out)
Mutation testing 37% (elapsed: ~20m, remaining: ~34m) 247/660 tested (51 survived, 10 timed out)
Mutation testing 37% (elapsed: ~20m, remaining: ~34m) 249/660 tested (51 survived, 10 timed out)
Mutation testing 38% (elapsed: ~21m, remaining: ~34m) 251/660 tested (51 survived, 10 timed out)
Mutation testing 38% (elapsed: ~21m, remaining: ~34m) 253/660 tested (51 survived, 10 timed out)
Mutation testing 38% (elapsed: ~21m, remaining: ~33m) 255/660 tested (51 survived, 10 timed out)
Mutation testing 38% (elapsed: ~21m, remaining: ~33m) 256/660 tested (51 survived, 11 timed out)
Mutation testing 39% (elapsed: ~21m, remaining: ~33m) 258/660 tested (51 survived, 11 timed out)
Mutation testing 39% (elapsed: ~21m, remaining: ~33m) 260/660 tested (52 survived, 11 timed out)
Mutation testing 39% (elapsed: ~22m, remaining: ~33m) 262/660 tested (52 survived, 11 timed out)
Mutation testing 40% (elapsed: ~22m, remaining: ~33m) 264/660 tested (52 survived, 11 timed out)
Mutation testing 40% (elapsed: ~22m, remaining: ~33m) 266/660 tested (52 survived, 11 timed out)
Mutation testing 40% (elapsed: ~22m, remaining: ~32m) 269/660 tested (55 survived, 11 timed out)
Mutation testing 41% (elapsed: ~22m, remaining: ~32m) 271/660 tested (56 survived, 11 timed out)
Mutation testing 41% (elapsed: ~22m, remaining: ~32m) 273/660 tested (56 survived, 11 timed out)
Mutation testing 41% (elapsed: ~23m, remaining: ~32m) 275/660 tested (56 survived, 11 timed out)
Mutation testing 41% (elapsed: ~23m, remaining: ~32m) 277/660 tested (56 survived, 11 timed out)
Mutation testing 42% (elapsed: ~23m, remaining: ~31m) 279/660 tested (56 survived, 11 timed out)
Mutation testing 42% (elapsed: ~23m, remaining: ~31m) 281/660 tested (56 survived, 11 timed out)
Mutation testing 42% (elapsed: ~23m, remaining: ~31m) 283/660 tested (58 survived, 11 timed out)
Mutation testing 43% (elapsed: ~23m, remaining: ~31m) 286/660 tested (60 survived, 11 timed out)
Mutation testing 43% (elapsed: ~24m, remaining: ~31m) 288/660 tested (62 survived, 11 timed out)
Mutation testing 43% (elapsed: ~24m, remaining: ~30m) 290/660 tested (64 survived, 11 timed out)
Mutation testing 44% (elapsed: ~24m, remaining: ~30m) 292/660 tested (64 survived, 11 timed out)
Mutation testing 44% (elapsed: ~24m, remaining: ~30m) 294/660 tested (65 survived, 11 timed out)
Mutation testing 44% (elapsed: ~24m, remaining: ~30m) 296/660 tested (65 survived, 11 timed out)
Mutation testing 45% (elapsed: ~24m, remaining: ~30m) 298/660 tested (65 survived, 11 timed out)
Mutation testing 45% (elapsed: ~25m, remaining: ~30m) 300/660 tested (65 survived, 11 timed out)
Mutation testing 45% (elapsed: ~25m, remaining: ~29m) 302/660 tested (65 survived, 11 timed out)
Mutation testing 46% (elapsed: ~25m, remaining: ~29m) 304/660 tested (66 survived, 11 timed out)
Mutation testing 46% (elapsed: ~25m, remaining: ~29m) 307/660 tested (68 survived, 11 timed out)
Mutation testing 46% (elapsed: ~25m, remaining: ~29m) 309/660 tested (69 survived, 11 timed out)
Mutation testing 47% (elapsed: ~25m, remaining: ~28m) 311/660 tested (69 survived, 11 timed out)
Mutation testing 47% (elapsed: ~26m, remaining: ~28m) 313/660 tested (69 survived, 11 timed out)
Mutation testing 47% (elapsed: ~26m, remaining: ~28m) 315/660 tested (70 survived, 11 timed out)
Mutation testing 48% (elapsed: ~26m, remaining: ~28m) 317/660 tested (72 survived, 11 timed out)
Mutation testing 48% (elapsed: ~26m, remaining: ~28m) 319/660 tested (73 survived, 11 timed out)
Mutation testing 48% (elapsed: ~26m, remaining: ~28m) 321/660 tested (73 survived, 11 timed out)
Mutation testing 48% (elapsed: ~26m, remaining: ~27m) 323/660 tested (73 survived, 11 timed out)
Mutation testing 49% (elapsed: ~27m, remaining: ~27m) 325/660 tested (74 survived, 11 timed out)
Mutation testing 49% (elapsed: ~27m, remaining: ~27m) 328/660 tested (75 survived, 11 timed out)
Mutation testing 49% (elapsed: ~27m, remaining: ~27m) 329/660 tested (76 survived, 11 timed out)
Mutation testing 50% (elapsed: ~27m, remaining: ~27m) 330/660 tested (76 survived, 12 timed out)
Mutation testing 50% (elapsed: ~27m, remaining: ~27m) 331/660 tested (76 survived, 13 timed out)
Mutation testing 50% (elapsed: ~27m, remaining: ~27m) 333/660 tested (76 survived, 13 timed out)
Mutation testing 50% (elapsed: ~28m, remaining: ~27m) 334/660 tested (76 survived, 14 timed out)
Mutation testing 50% (elapsed: ~28m, remaining: ~27m) 336/660 tested (77 survived, 14 timed out)
Mutation testing 51% (elapsed: ~28m, remaining: ~26m) 338/660 tested (78 survived, 14 timed out)
Mutation testing 51% (elapsed: ~28m, remaining: ~26m) 339/660 tested (79 survived, 14 timed out)
Mutation testing 51% (elapsed: ~28m, remaining: ~26m) 340/660 tested (79 survived, 15 timed out)
Mutation testing 51% (elapsed: ~28m, remaining: ~26m) 342/660 tested (80 survived, 15 timed out)
Mutation testing 51% (elapsed: ~29m, remaining: ~26m) 343/660 tested (80 survived, 16 timed out)
Mutation testing 52% (elapsed: ~29m, remaining: ~26m) 345/660 tested (81 survived, 16 timed out)
Mutation testing 52% (elapsed: ~29m, remaining: ~26m) 347/660 tested (82 survived, 16 timed out)
Mutation testing 52% (elapsed: ~29m, remaining: ~26m) 349/660 tested (82 survived, 16 timed out)
Mutation testing 53% (elapsed: ~29m, remaining: ~26m) 351/660 tested (82 survived, 16 timed out)
Mutation testing 53% (elapsed: ~29m, remaining: ~26m) 352/660 tested (82 survived, 17 timed out)
Mutation testing 53% (elapsed: ~30m, remaining: ~25m) 354/660 tested (83 survived, 17 timed out)
Mutation testing 53% (elapsed: ~30m, remaining: ~25m) 356/660 tested (84 survived, 17 timed out)
Mutation testing 54% (elapsed: ~30m, remaining: ~25m) 358/660 tested (84 survived, 17 timed out)
Mutation testing 54% (elapsed: ~30m, remaining: ~25m) 361/660 tested (84 survived, 17 timed out)
Mutation testing 55% (elapsed: ~30m, remaining: ~25m) 363/660 tested (84 survived, 17 timed out)
Mutation testing 55% (elapsed: ~30m, remaining: ~24m) 365/660 tested (85 survived, 17 timed out)
Mutation testing 55% (elapsed: ~31m, remaining: ~24m) 367/660 tested (86 survived, 17 timed out)
Mutation testing 55% (elapsed: ~31m, remaining: ~24m) 369/660 tested (86 survived, 17 timed out)
Mutation testing 56% (elapsed: ~31m, remaining: ~24m) 371/660 tested (86 survived, 17 timed out)
Mutation testing 56% (elapsed: ~31m, remaining: ~24m) 374/660 tested (86 survived, 17 timed out)
Mutation testing 56% (elapsed: ~31m, remaining: ~23m) 376/660 tested (86 survived, 17 timed out)
Mutation testing 57% (elapsed: ~31m, remaining: ~23m) 378/660 tested (87 survived, 17 timed out)
Mutation testing 57% (elapsed: ~32m, remaining: ~23m) 380/660 tested (89 survived, 17 timed out)
Mutation testing 57% (elapsed: ~32m, remaining: ~23m) 382/660 tested (90 survived, 17 timed out)
Mutation testing 58% (elapsed: ~32m, remaining: ~23m) 384/660 tested (90 survived, 17 timed out)
Mutation testing 58% (elapsed: ~32m, remaining: ~23m) 386/660 tested (90 survived, 17 timed out)
Mutation testing 58% (elapsed: ~32m, remaining: ~22m) 388/660 tested (90 survived, 17 timed out)
Mutation testing 59% (elapsed: ~32m, remaining: ~22m) 391/660 tested (91 survived, 17 timed out)
Mutation testing 59% (elapsed: ~33m, remaining: ~22m) 393/660 tested (91 survived, 17 timed out)
Mutation testing 59% (elapsed: ~33m, remaining: ~22m) 395/660 tested (91 survived, 17 timed out)
Mutation testing 60% (elapsed: ~33m, remaining: ~22m) 397/660 tested (92 survived, 17 timed out)
Mutation testing 60% (elapsed: ~33m, remaining: ~21m) 399/660 tested (92 survived, 17 timed out)
Mutation testing 60% (elapsed: ~33m, remaining: ~21m) 401/660 tested (92 survived, 17 timed out)
Mutation testing 61% (elapsed: ~33m, remaining: ~21m) 403/660 tested (92 survived, 17 timed out)
Mutation testing 61% (elapsed: ~34m, remaining: ~21m) 405/660 tested (92 survived, 17 timed out)
Mutation testing 61% (elapsed: ~34m, remaining: ~21m) 407/660 tested (92 survived, 17 timed out)
Mutation testing 62% (elapsed: ~34m, remaining: ~20m) 410/660 tested (92 survived, 17 timed out)
Mutation testing 62% (elapsed: ~34m, remaining: ~20m) 412/660 tested (92 survived, 17 timed out)
Mutation testing 62% (elapsed: ~34m, remaining: ~20m) 414/660 tested (92 survived, 17 timed out)
Mutation testing 63% (elapsed: ~34m, remaining: ~20m) 416/660 tested (93 survived, 17 timed out)
Mutation testing 63% (elapsed: ~35m, remaining: ~20m) 418/660 tested (94 survived, 17 timed out)
Mutation testing 63% (elapsed: ~35m, remaining: ~20m) 419/660 tested (94 survived, 18 timed out)
Mutation testing 63% (elapsed: ~35m, remaining: ~20m) 421/660 tested (94 survived, 18 timed out)
Mutation testing 64% (elapsed: ~35m, remaining: ~19m) 423/660 tested (94 survived, 18 timed out)
Mutation testing 64% (elapsed: ~35m, remaining: ~19m) 425/660 tested (94 survived, 18 timed out)
Mutation testing 64% (elapsed: ~35m, remaining: ~19m) 427/660 tested (94 survived, 18 timed out)
Mutation testing 64% (elapsed: ~36m, remaining: ~19m) 428/660 tested (94 survived, 18 timed out)
Mutation testing 65% (elapsed: ~36m, remaining: ~19m) 429/660 tested (94 survived, 19 timed out)
Mutation testing 65% (elapsed: ~36m, remaining: ~19m) 430/660 tested (94 survived, 20 timed out)
Mutation testing 65% (elapsed: ~36m, remaining: ~19m) 432/660 tested (94 survived, 20 timed out)
Mutation testing 65% (elapsed: ~36m, remaining: ~19m) 434/660 tested (94 survived, 20 timed out)
Mutation testing 66% (elapsed: ~36m, remaining: ~18m) 436/660 tested (94 survived, 20 timed out)
Mutation testing 66% (elapsed: ~37m, remaining: ~18m) 438/660 tested (94 survived, 20 timed out)
Mutation testing 66% (elapsed: ~37m, remaining: ~18m) 441/660 tested (94 survived, 20 timed out)
Mutation testing 67% (elapsed: ~37m, remaining: ~18m) 443/660 tested (94 survived, 20 timed out)
Mutation testing 67% (elapsed: ~37m, remaining: ~18m) 445/660 tested (94 survived, 20 timed out)
Mutation testing 67% (elapsed: ~37m, remaining: ~17m) 447/660 tested (94 survived, 20 timed out)
Mutation testing 68% (elapsed: ~37m, remaining: ~17m) 449/660 tested (94 survived, 20 timed out)
Mutation testing 68% (elapsed: ~38m, remaining: ~17m) 451/660 tested (94 survived, 20 timed out)
Mutation testing 68% (elapsed: ~38m, remaining: ~17m) 453/660 tested (95 survived, 20 timed out)
Mutation testing 68% (elapsed: ~38m, remaining: ~17m) 455/660 tested (95 survived, 20 timed out)
Mutation testing 69% (elapsed: ~38m, remaining: ~17m) 457/660 tested (95 survived, 20 timed out)
Mutation testing 69% (elapsed: ~38m, remaining: ~16m) 460/660 tested (96 survived, 20 timed out)
Mutation testing 70% (elapsed: ~38m, remaining: ~16m) 462/660 tested (98 survived, 20 timed out)
Mutation testing 70% (elapsed: ~39m, remaining: ~16m) 464/660 tested (98 survived, 20 timed out)
Mutation testing 70% (elapsed: ~39m, remaining: ~16m) 466/660 tested (98 survived, 20 timed out)
Mutation testing 70% (elapsed: ~39m, remaining: ~16m) 468/660 tested (98 survived, 20 timed out)
Mutation testing 71% (elapsed: ~39m, remaining: ~15m) 470/660 tested (98 survived, 20 timed out)
Mutation testing 71% (elapsed: ~39m, remaining: ~15m) 472/660 tested (98 survived, 20 timed out)
Mutation testing 71% (elapsed: ~39m, remaining: ~15m) 474/660 tested (99 survived, 20 timed out)
Mutation testing 72% (elapsed: ~40m, remaining: ~15m) 476/660 tested (101 survived, 20 timed out)
Mutation testing 72% (elapsed: ~40m, remaining: ~15m) 478/660 tested (102 survived, 20 timed out)
Mutation testing 72% (elapsed: ~40m, remaining: ~15m) 481/660 tested (102 survived, 20 timed out)
Mutation testing 73% (elapsed: ~40m, remaining: ~14m) 483/660 tested (102 survived, 20 timed out)
Mutation testing 73% (elapsed: ~40m, remaining: ~14m) 485/660 tested (102 survived, 20 timed out)
Mutation testing 73% (elapsed: ~40m, remaining: ~14m) 487/660 tested (103 survived, 20 timed out)
Mutation testing 74% (elapsed: ~41m, remaining: ~14m) 489/660 tested (104 survived, 20 timed out)
Mutation testing 74% (elapsed: ~41m, remaining: ~14m) 491/660 tested (104 survived, 20 timed out)
Mutation testing 74% (elapsed: ~41m, remaining: ~14m) 493/660 tested (104 survived, 20 timed out)
Mutation testing 75% (elapsed: ~41m, remaining: ~13m) 495/660 tested (104 survived, 20 timed out)
Mutation testing 75% (elapsed: ~41m, remaining: ~13m) 497/660 tested (104 survived, 20 timed out)
Mutation testing 75% (elapsed: ~41m, remaining: ~13m) 499/660 tested (104 survived, 20 timed out)
Mutation testing 75% (elapsed: ~42m, remaining: ~13m) 501/660 tested (104 survived, 20 timed out)
Mutation testing 76% (elapsed: ~42m, remaining: ~13m) 503/660 tested (104 survived, 20 timed out)
Mutation testing 76% (elapsed: ~42m, remaining: ~12m) 506/660 tested (104 survived, 20 timed out)
Mutation testing 76% (elapsed: ~42m, remaining: ~12m) 508/660 tested (104 survived, 20 timed out)
Mutation testing 77% (elapsed: ~42m, remaining: ~12m) 510/660 tested (104 survived, 20 timed out)
Mutation testing 77% (elapsed: ~42m, remaining: ~12m) 512/660 tested (104 survived, 20 timed out)
Mutation testing 77% (elapsed: ~43m, remaining: ~12m) 514/660 tested (104 survived, 20 timed out)
Mutation testing 78% (elapsed: ~43m, remaining: ~12m) 516/660 tested (104 survived, 20 timed out)
Mutation testing 78% (elapsed: ~43m, remaining: ~11m) 518/660 tested (104 survived, 20 timed out)
Mutation testing 78% (elapsed: ~43m, remaining: ~11m) 520/660 tested (104 survived, 20 timed out)
Mutation testing 79% (elapsed: ~43m, remaining: ~11m) 522/660 tested (104 survived, 20 timed out)
Mutation testing 79% (elapsed: ~43m, remaining: ~11m) 524/660 tested (104 survived, 20 timed out)
Mutation testing 79% (elapsed: ~44m, remaining: ~11m) 525/660 tested (104 survived, 21 timed out)
Mutation testing 79% (elapsed: ~44m, remaining: ~11m) 526/660 tested (105 survived, 21 timed out)
Mutation testing 79% (elapsed: ~44m, remaining: ~11m) 527/660 tested (105 survived, 22 timed out)
Mutation testing 80% (elapsed: ~44m, remaining: ~11m) 529/660 tested (105 survived, 22 timed out)
Mutation testing 80% (elapsed: ~44m, remaining: ~10m) 532/660 tested (105 survived, 22 timed out)
Mutation testing 80% (elapsed: ~44m, remaining: ~10m) 533/660 tested (105 survived, 22 timed out)
Mutation testing 80% (elapsed: ~45m, remaining: ~10m) 534/660 tested (105 survived, 23 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 535/660 tested (105 survived, 24 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 535/660 tested (105 survived, 24 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 537/660 tested (105 survived, 25 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 538/660 tested (105 survived, 25 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 540/660 tested (106 survived, 26 timed out)
Mutation testing 82% (elapsed: ~46m, remaining: ~10m) 542/660 tested (107 survived, 26 timed out)
Mutation testing 82% (elapsed: ~46m, remaining: ~9m) 544/660 tested (107 survived, 26 timed out)
Mutation testing 82% (elapsed: ~46m, remaining: ~9m) 545/660 tested (107 survived, 27 timed out)
Mutation testing 82% (elapsed: ~46m, remaining: ~9m) 545/660 tested (107 survived, 27 timed out)
Mutation testing 82% (elapsed: ~46m, remaining: ~9m) 547/660 tested (107 survived, 28 timed out)
Mutation testing 83% (elapsed: ~46m, remaining: ~9m) 550/660 tested (107 survived, 28 timed out)
Mutation testing 83% (elapsed: ~47m, remaining: ~9m) 552/660 tested (107 survived, 28 timed out)
Mutation testing 83% (elapsed: ~47m, remaining: ~9m) 554/660 tested (107 survived, 28 timed out)
Mutation testing 84% (elapsed: ~47m, remaining: ~8m) 556/660 tested (107 survived, 28 timed out)
Mutation testing 84% (elapsed: ~47m, remaining: ~8m) 558/660 tested (107 survived, 28 timed out)
Mutation testing 84% (elapsed: ~47m, remaining: ~8m) 560/660 tested (107 survived, 28 timed out)
Mutation testing 85% (elapsed: ~47m, remaining: ~8m) 562/660 tested (107 survived, 28 timed out)
Mutation testing 85% (elapsed: ~48m, remaining: ~8m) 564/660 tested (107 survived, 28 timed out)
Mutation testing 85% (elapsed: ~48m, remaining: ~7m) 566/660 tested (107 survived, 28 timed out)
Mutation testing 86% (elapsed: ~48m, remaining: ~7m) 569/660 tested (109 survived, 28 timed out)
Mutation testing 86% (elapsed: ~48m, remaining: ~7m) 571/660 tested (109 survived, 28 timed out)
Mutation testing 86% (elapsed: ~48m, remaining: ~7m) 573/660 tested (109 survived, 28 timed out)
Mutation testing 87% (elapsed: ~48m, remaining: ~7m) 575/660 tested (109 survived, 28 timed out)
Mutation testing 87% (elapsed: ~49m, remaining: ~7m) 577/660 tested (110 survived, 28 timed out)
Mutation testing 87% (elapsed: ~49m, remaining: ~6m) 579/660 tested (111 survived, 28 timed out)
Mutation testing 88% (elapsed: ~49m, remaining: ~6m) 581/660 tested (111 survived, 28 timed out)
Mutation testing 88% (elapsed: ~49m, remaining: ~6m) 583/660 tested (111 survived, 28 timed out)
Mutation testing 88% (elapsed: ~49m, remaining: ~6m) 585/660 tested (111 survived, 28 timed out)
Mutation testing 89% (elapsed: ~49m, remaining: ~6m) 588/660 tested (111 survived, 28 timed out)
Mutation testing 89% (elapsed: ~50m, remaining: ~5m) 590/660 tested (111 survived, 28 timed out)
Mutation testing 89% (elapsed: ~50m, remaining: ~5m) 592/660 tested (112 survived, 28 timed out)
Mutation testing 90% (elapsed: ~50m, remaining: ~5m) 594/660 tested (114 survived, 28 timed out)
Mutation testing 90% (elapsed: ~50m, remaining: ~5m) 595/660 tested (114 survived, 28 timed out)
Mutation testing 90% (elapsed: ~50m, remaining: ~5m) 596/660 tested (114 survived, 29 timed out)
Mutation testing 90% (elapsed: ~50m, remaining: ~5m) 597/660 tested (114 survived, 30 timed out)
Mutation testing 90% (elapsed: ~51m, remaining: ~5m) 599/660 tested (116 survived, 30 timed out)
Mutation testing 91% (elapsed: ~51m, remaining: ~5m) 601/660 tested (116 survived, 30 timed out)
Mutation testing 91% (elapsed: ~51m, remaining: ~4m) 602/660 tested (116 survived, 31 timed out)
Mutation testing 91% (elapsed: ~51m, remaining: ~4m) 603/660 tested (116 survived, 32 timed out)
Mutation testing 91% (elapsed: ~51m, remaining: ~4m) 603/660 tested (116 survived, 32 timed out)
Mutation testing 91% (elapsed: ~51m, remaining: ~4m) 604/660 tested (116 survived, 33 timed out)
Mutation testing 91% (elapsed: ~52m, remaining: ~4m) 606/660 tested (116 survived, 34 timed out)
Mutation testing 92% (elapsed: ~52m, remaining: ~4m) 608/660 tested (116 survived, 34 timed out)
Mutation testing 92% (elapsed: ~52m, remaining: ~4m) 610/660 tested (116 survived, 34 timed out)
Mutation testing 92% (elapsed: ~52m, remaining: ~4m) 612/660 tested (116 survived, 34 timed out)
Mutation testing 93% (elapsed: ~52m, remaining: ~3m) 614/660 tested (117 survived, 34 timed out)
Mutation testing 93% (elapsed: ~52m, remaining: ~3m) 616/660 tested (119 survived, 34 timed out)
Mutation testing 93% (elapsed: ~53m, remaining: ~3m) 619/660 tested (119 survived, 34 timed out)
Mutation testing 94% (elapsed: ~53m, remaining: ~3m) 621/660 tested (120 survived, 34 timed out)
Mutation testing 94% (elapsed: ~53m, remaining: ~3m) 623/660 tested (121 survived, 34 timed out)
Mutation testing 94% (elapsed: ~53m, remaining: ~2m) 625/660 tested (121 survived, 34 timed out)
Mutation testing 95% (elapsed: ~53m, remaining: ~2m) 627/660 tested (121 survived, 34 timed out)
Mutation testing 95% (elapsed: ~53m, remaining: ~2m) 629/660 tested (121 survived, 34 timed out)
Mutation testing 95% (elapsed: ~54m, remaining: ~2m) 631/660 tested (121 survived, 34 timed out)
Mutation testing 95% (elapsed: ~54m, remaining: ~2m) 633/660 tested (122 survived, 34 timed out)
Mutation testing 96% (elapsed: ~54m, remaining: ~2m) 635/660 tested (122 survived, 34 timed out)
Mutation testing 96% (elapsed: ~54m, remaining: ~1m) 637/660 tested (122 survived, 34 timed out)
Mutation testing 96% (elapsed: ~54m, remaining: ~1m) 640/660 tested (122 survived, 34 timed out)
Mutation testing 97% (elapsed: ~54m, remaining: ~1m) 642/660 tested (123 survived, 34 timed out)
Mutation testing 97% (elapsed: ~55m, remaining: ~1m) 644/660 tested (124 survived, 34 timed out)
Mutation testing 97% (elapsed: ~55m, remaining: ~1m) 646/660 tested (124 survived, 34 timed out)
Mutation testing 98% (elapsed: ~55m, remaining: ~1m) 648/660 tested (125 survived, 34 timed out)
Mutation testing 98% (elapsed: ~55m, remaining: <1m) 650/660 tested (126 survived, 34 timed out)
Mutation testing 98% (elapsed: ~55m, remaining: <1m) 652/660 tested (126 survived, 34 timed out)
Mutation testing 99% (elapsed: ~55m, remaining: <1m) 654/660 tested (127 survived, 34 timed out)
Mutation testing 99% (elapsed: ~56m, remaining: <1m) 656/660 tested (127 survived, 34 timed out)
Mutation testing 99% (elapsed: ~56m, remaining: <1m) 659/660 tested (128 survived, 34 timed out)

All tests
  ✓ All tests (killed 497)

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (a === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (Array.isArray(a)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (b === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (Array.isArray(b)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:20:32
-       let attributes = cloneDeep(b);
+       let attributes = cloneDeep(Object.assign({}, a, b));

[Survived] PrecomputedMutator
src/AttributeMap.ts:22:32
-         attributes = Object.keys(attributes).reduce<AttributeMap>((copy, key) => {
+         attributes = Object.keys(Object.assign({}, b)).reduce<AttributeMap>((copy, key) => {

[Survived] PrecomputedMutator
src/AttributeMap.ts:30:11
-         if (a[key] !== undefined && b[key] === undefined) {
+         if (a[key] !== null && b[key] === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:30:11
-         if (a[key] !== undefined && b[key] === undefined) {
+         if (a.hasOwnProperty(key) && b[key] === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:30:11
-         if (a[key] !== undefined && b[key] === undefined) {
+         if (key in a && b[key] === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:41:9
-       if (typeof a !== 'object') {
+       if (a === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:41:9
-       if (typeof a !== 'object') {
+       if (Array.isArray(a)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (b === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (typeof b !== 'object' && b !== null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:48:27
-         .concat(Object.keys(b))
+         .concat(Object.keys(b || []))

[Survived] PrecomputedMutator
src/AttributeMap.ts:70:11
-         if (attr[key] !== base[key] && base[key] === undefined) {
+         if (attr[key] !== undefined && base[key] === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:85:9
-       if (typeof b !== 'object') {
+       if (b === undefined || typeof b !== 'object') {

[Survived] PrecomputedMutator
src/AttributeMap.ts:97:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(Object.keys(a)).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/AttributeMap.ts:97:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(Object.assign({}, b)).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/Delta.ts:8:24
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCodePoint(0); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(1); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(String.fromCharCode(Math.floor(Math.random() * 256))); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(String.fromCharCode(0x7F)); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:20:7
-     if (typeof a !== 'object' || a === null) {
+     if (typeof a !== 'object' && a !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:20:7
-     if (typeof a !== 'object' || a === null) {
+     if (typeof a !== 'object' || a === true) {

[Survived] PrecomputedMutator
src/Delta.ts:29:63
-         `embed types not matched: ${embedType} != ${Object.keys(b)[0]}`,
+         `embed types not matched: ${embedType} != ${Object.keys(JSON.parse(JSON.stringify(b)))[0]}`,

[Survived] PrecomputedMutator
src/Delta.ts:51:9
-       if (!handler) {
+       if (typeof handler === 'undefined') {

[Survived] PrecomputedMutator
src/Delta.ts:60:9
-       if (Array.isArray(ops)) {
+       if (ops instanceof Array) {

[Survived] PrecomputedMutator
src/Delta.ts:62:16
-       } else if (ops != null && Array.isArray(ops.ops)) {
+       } else if (ops !== undefined && Array.isArray(ops.ops)) {

[Survived] PrecomputedMutator
src/Delta.ts:135:11
-         if (isEqual(newOp.attributes, lastOp.attributes)) {
+         if (JSON.stringify(newOp.attributes) === JSON.stringify(lastOp.attributes)) {

[Survived] PrecomputedMutator
src/Delta.ts:135:11
-         if (isEqual(newOp.attributes, lastOp.attributes)) {
+         if (isEqual(lastOp.attributes, newOp.attributes)) {

[Survived] PrecomputedMutator
src/Delta.ts:141:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.attributes !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:150:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.attributes !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:150:15
-             if (typeof newOp.attributes === 'object') {
+             if (typeof newOp.attributes !== 'undefined') {

[Survived] PrecomputedMutator
src/Delta.ts:157:9
-       if (index === this.ops.length) {
+       if (index >= this.ops.length) {

[Survived] PrecomputedMutator
src/Delta.ts:157:9
-       if (index === this.ops.length) {
+       if (index > this.ops.length) {

[Survived] PrecomputedMutator
src/Delta.ts:160:7
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, '0', newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:7
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, -1, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:23
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(-1, 0, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:30
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, -1, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:178:22
-       this.ops.forEach(predicate);
+       this.ops.forEach((op, index) => predicate(op));

[Survived] PrecomputedMutator
src/Delta.ts:189:32
-         const target = predicate(op) ? passed : failed;
+         const target = predicate(op || {}) ? passed : failed;

[Survived] PrecomputedMutator
src/Delta.ts:199:39
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, 0);

[Survived] PrecomputedMutator
src/Delta.ts:199:39
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, null);

[Survived] PrecomputedMutator
src/Delta.ts:204:11
-         if (elem.insert) {
+         if (elem['insert']) {

[Survived] PrecomputedMutator
src/Delta.ts:223:12
-       while (index < end && iter.hasNext()) {
+       while (index < end && iter.peek() !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:226:28
-           nextOp = iter.next(start - index);
+           nextOp = iter.next(Math.abs(start - index));

[Survived] PrecomputedMutator
src/Delta.ts:242:7
-         firstOther != null &&
-         typeof firstOther.retain === 'number' &&
-         firstOther.attributes == null
+         firstOther?.retain !== undefined && firstOther.attributes === null

[Survived] PrecomputedMutator
src/Delta.ts:259:12
-       while (thisIter.hasNext() || otherIter.hasNext()) {
+       while (thisIter.peek() !== null || otherIter.peek() !== null) {

[Survived] PrecomputedMutator
src/Delta.ts:259:12
-       while (thisIter.hasNext() || otherIter.hasNext()) {
+       while (thisIter.peekType() !== undefined || otherIter.peekType() !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:259:12
-       while (thisIter.hasNext() || otherIter.hasNext()) {
+       while (thisIter.peekLength() > 0 || otherIter.peekLength() > 0) {

[Survived] PrecomputedMutator
src/Delta.ts:263:20
-           delta.push(thisIter.next());
+           delta.push(thisIter.next(0));

[Survived] PrecomputedMutator
src/Delta.ts:268:13
-           if (otherOp.retain) {
+           if (otherOp.retain || 0) {

[Survived] PrecomputedMutator
src/Delta.ts:274:17
-               if (typeof otherOp.retain === 'number') {
+               if (otherOp.retain > 0) {

[Survived] PrecomputedMutator
src/Delta.ts:275:19
-                 if (thisOp.retain == null) {
+                 if (thisOp.retain === undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:275:19
-                 if (thisOp.retain == null) {
+                 if (typeof thisOp.retain === 'undefined') {

[Survived] PrecomputedMutator
src/Delta.ts:275:19
-                 if (thisOp.retain == null) {
+                 if (!thisOp.hasOwnProperty('retain')) {

[Survived] PrecomputedMutator
src/Delta.ts:309:13
-               !otherIter.hasNext() &&
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               thisIter.hasNext() && isEqual(delta.ops[delta.ops.length - 2], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(newOp, delta.ops[delta.ops.length - 1])

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[Math.floor(Math.random() * delta.ops.length)], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:21
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:54
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 1], {})

[Survived] PrecomputedMutator
src/Delta.ts:310:54
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 1], null)

[Survived] PrecomputedMutator
src/Delta.ts:310:54
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 1], thisOp)

[Survived] PrecomputedMutator
src/Delta.ts:313:33
-               return delta.concat(rest).chop();
+               return delta.concat(new Delta(thisIter.rest())).chop();

[Survived] PrecomputedMutator
src/Delta.ts:331:29
-       const delta = new Delta(this.ops.slice());
+       const delta = new Delta(this.ops.concat());

[Survived] PrecomputedMutator
src/Delta.ts:332:9
-       if (other.ops.length > 0) {
+       if (other.ops.length >= 1) {

[Survived] PrecomputedMutator
src/Delta.ts:332:9
-       if (other.ops.length > 0) {
+       if (other.ops.length !== 0) {

[Survived] PrecomputedMutator
src/Delta.ts:332:9
-       if (other.ops.length > 0) {
+       if (Array.isArray(other.ops) && other.ops.length > 0) {

[Survived] PrecomputedMutator
src/Delta.ts:340:9
-       if (this.ops === other.ops) {
+       if (this.ops[0] === other.ops[0]) {

[Survived] PrecomputedMutator
src/Delta.ts:340:9
-       if (this.ops === other.ops) {
+       if (JSON.stringify(this.ops) === JSON.stringify(other.ops)) {

[Survived] PrecomputedMutator
src/Delta.ts:346:15
-             if (op.insert != null) {
+             if (op.insert !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:346:15
-             if (op.insert != null) {
+             if (op.insert !== null && op.insert !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:355:29
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(''.concat(strings[0]), strings[1], cursor);

[Survived] PrecomputedMutator
src/Delta.ts:355:53
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], null);

[Survived] PrecomputedMutator
src/Delta.ts:360:14
-         while (length > 0) {
+         while (length >= 1) {

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(thisIter.peekLength(), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:33
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(thisIter.peekLength(), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), thisIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), Infinity);

[Survived] PrecomputedMutator
src/Delta.ts:368:24
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(1);

[Survived] PrecomputedMutator
src/Delta.ts:368:41
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, 100);

[Survived] PrecomputedMutator
src/Delta.ts:368:41
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:378:42
-               const thisOp = thisIter.next(opLength);
+               const thisOp = thisIter.next(Math.max(length, 1));

[Survived] PrecomputedMutator
src/Delta.ts:378:42
-               const thisOp = thisIter.next(opLength);
+               const thisOp = thisIter.next(otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:380:25
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert || '', otherOp.insert)) {

[Survived] PrecomputedMutator
src/Delta.ts:380:40
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert, otherOp.insert || '')) {

[Survived] PrecomputedMutator
src/Delta.ts:380:40
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert, otherOp.insert ?? '<REPLACEMENT_VALUE>')) {

[Survived] PrecomputedMutator
src/Delta.ts:380:40
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert, otherOp.hasOwnProperty('insert') ? otherOp.insert : '<REPLACEMENT_VALUE>')) {

[Survived] PrecomputedMutator
src/Delta.ts:386:15
-                 retDelta.push(otherOp).delete(opLength);
+                 retDelta['push'](otherOp).delete(opLength);

[Survived] PrecomputedMutator
src/Delta.ts:407:12
-       while (iter.hasNext()) {
+       while (iter.peek() !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:417:11
-         if (index < 0) {
+         if (index <= -1) {

[Survived] PrecomputedMutator
src/Delta.ts:418:19
-           line.push(iter.next());
+           line.push(iter.next(1));

[Survived] PrecomputedMutator
src/Delta.ts:437:11
-         if (op.insert) {
+         if (op.insert || '') {

[Survived] PrecomputedMutator
src/Delta.ts:439:18
-         } else if (typeof op.retain === 'number' && op.attributes == null) {
+         } else if (typeof op.retain === 'number' && op.attributes === undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:440:25
-           inverted.retain(op.retain);
+           inverted.retain(op.retain || 0);

[Survived] PrecomputedMutator
src/Delta.ts:440:25
-           inverted.retain(op.retain);
+           inverted.retain(op.retain ?? 0);

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.retain && op.attributes || {}) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.retain !== undefined && op.attributes) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.attributes || op.retain) {

[Survived] PrecomputedMutator
src/Delta.ts:450:25
-                 Op.length(baseOp),
+                 Op.length(Object.assign({}, baseOp)),

[Survived] PrecomputedMutator
src/Delta.ts:456:18
-         } else if (typeof op.retain === 'object' && op.retain !== null) {
+         } else if (op.retain !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:456:18
-         } else if (typeof op.retain === 'object' && op.retain !== null) {
+         } else if (op.retain && typeof op.retain === 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:486:12
-       while (thisIter.hasNext() || otherIter.hasNext()) {
+       while (otherIter.peek() !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:491:32
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter.next(0)));

[Survived] PrecomputedMutator
src/Delta.ts:491:32
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter['next']()));

[Survived] PrecomputedMutator
src/Delta.ts:511:13
-               typeof thisData === 'object' &&
-               thisData !== null &&
-               typeof otherData === 'object' &&
-               otherData !== null
+               Object.keys(thisData).length > 0 && Object.keys(otherData).length > 0

[Survived] PrecomputedMutator
src/Delta.ts:516:43
-               const embedType = Object.keys(thisData)[0];
+               const embedType = Object.keys(thisData || {})[0];

[Survived] PrecomputedMutator
src/Delta.ts:519:19
-                 if (handler) {
+                 if (handler.transform(thisData[embedType], otherData[embedType], !priority)) {

[Survived] PrecomputedMutator
src/Delta.ts:550:12
-       while (thisIter.hasNext() && offset <= index) {
+       while (thisIter.peekLength() > 0 && offset <= index) {

[Survived] PrecomputedMutator
src/Delta.ts:557:18
-         } else if (nextType === 'insert' && (offset < index || !priority)) {
+         } else if (nextType === 'insert' && (offset + 1 < index || !priority)) {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (typeof global === 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (global.module !== undefined) {

[Survived] PrecomputedMutator
src/Op.ts:16:16
-       } else if (typeof op.retain === 'number') {
+       } else if (op.hasOwnProperty('retain') && typeof op.retain === 'number') {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (op.retain !== undefined) {

[Survived] PrecomputedMutator
src/OpIterator.ts:37:13
-           if (nextOp.attributes) {
+           if (nextOp['attributes']) {

[Survived] PrecomputedMutator
src/OpIterator.ts:37:13
-           if (nextOp.attributes) {
+           if (nextOp.hasOwnProperty('attributes')) {

[Survived] PrecomputedMutator
src/OpIterator.ts:37:13
-           if (nextOp.attributes) {
+           if (Reflect.get(nextOp, 'attributes')) {

[Survived] PrecomputedMutator
src/OpIterator.ts:43:11
-             typeof nextOp.retain === 'object' &&
-             nextOp.retain !== null
+             nextOp.hasOwnProperty('retain')

[Survived] PrecomputedMutator
src/OpIterator.ts:43:11
-             typeof nextOp.retain === 'object' &&
-             nextOp.retain !== null
+             nextOp.retain !== undefined

[Survived] PrecomputedMutator
src/OpIterator.ts:49:55
-             retOp.insert = nextOp.insert.substr(offset, length);
+             retOp.insert = nextOp.insert.substr(offset, Math.min(nextOp.insert.length - offset, length));

[Survived] PrecomputedMutator
src/OpIterator.ts:80:9
-           typeof op.retain === 'number' ||
-           (typeof op.retain === 'object' && op.retain !== null)
+           op.retain !== undefined

[Survived] PrecomputedMutator
src/OpIterator.ts:92:9
-       if (!this.hasNext()) {
+       if (this.index >= this.ops.length) {

[Survived] PrecomputedMutator
src/OpIterator.ts:94:16
-       } else if (this.offset === 0) {
+       } else if (this.index.offset) {

[Survived] PrecomputedMutator
src/OpIterator.ts:95:14
-         return this.ops.slice(this.index);
+         return this.ops.splice(this.index);

[Survived] PrecomputedMutator
src/OpIterator.ts:100:35
-         const rest = this.ops.slice(this.index);
+         const rest = this.ops.slice(index + 1);

[Survived] PrecomputedMutator
src/OpIterator.ts:103:28
-         return [next].concat(rest);
+         return [next].concat(this.ops.slice(this.index + 1));

[Survived] PrecomputedMutator
src/OpIterator.ts:103:28
-         return [next].concat(rest);
+         return [next].concat(this.ops.filter(op => op !== this.ops[this.index]));

Ran 0.95 tests per mutant on average.
-----------------|---------|----------|-----------|------------|----------|----------|
File             | % score | # killed | # timeout | # survived | # no cov | # errors |
-----------------|---------|----------|-----------|------------|----------|----------|
All files        |   80.45 |      497 |        34 |        129 |        0 |        0 |
 AttributeMap.ts |   70.00 |       42 |         0 |         18 |        0 |        0 |
 Delta.ts        |   82.06 |      411 |        28 |         96 |        0 |        0 |
 Op.ts           |   50.00 |        0 |         2 |          2 |        0 |        0 |
 OpIterator.ts   |   78.69 |       44 |         4 |         13 |        0 |        0 |
-----------------|---------|----------|-----------|------------|----------|----------|
[32m12:45:24 (2867) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/delta/reports/mutation/mutation.html
[32m12:45:24 (2867) INFO MutationTestExecutor[39m Done in 56 minutes 23 seconds.

real	56m24.808s
user	81m25.219s
sys	3m23.610s
