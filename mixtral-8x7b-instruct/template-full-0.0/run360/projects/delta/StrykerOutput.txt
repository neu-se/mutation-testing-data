*** using precomputed mutations ***
[32m01:30:56 (2933) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m01:30:56 (2933) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m01:30:57 (2933) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/delta/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m01:30:57 (2933) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m01:30:57 (2933) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m01:30:57 (2933) INFO ProjectReader[39m Found 4 of 1895 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 680 mutants from MUTATION_TESTING/template-full_mixtral-8x7b-instruct_0.0/mutants.json ***
Mutant 0 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 1 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a !== 'function'
Mutant 2 in AttributeMap.ts: typeof a !== 'object' replaced with Array.isArray(a)
Mutant 3 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 4 in AttributeMap.ts: typeof b !== 'object' replaced with Array.isArray(b)
Mutant 5 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'undefined'
Mutant 6 in AttributeMap.ts: cloneDeep replaced with {}
Mutant 7 in AttributeMap.ts: b replaced with a
Mutant 8 in AttributeMap.ts: b replaced with {}
Mutant 9 in AttributeMap.ts: b replaced with Object.assign({}, a, b)
Mutant 10 in AttributeMap.ts: attributes replaced with a
Mutant 11 in AttributeMap.ts: attributes replaced with Object.keys(b)
Mutant 12 in AttributeMap.ts: attributes[key] != null replaced with attributes[key] === undefined
Mutant 13 in AttributeMap.ts: attributes[key] != null replaced with key in attributes
Mutant 14 in AttributeMap.ts: a replaced with Object.keys(a)
Mutant 15 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a[key] !== null && b[key] === undefined
Mutant 16 in AttributeMap.ts: attributes replaced with Object.keys(a).length > 0 ? attributes : undefined
Mutant 17 in AttributeMap.ts: attributes replaced with attributes || undefined
Mutant 18 in AttributeMap.ts: attributes replaced with Object.assign({}, attributes)
Mutant 19 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 20 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a !== 'string'
Mutant 21 in AttributeMap.ts: typeof a !== 'object' replaced with Array.isArray(a)
Mutant 22 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 23 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'undefined'
Mutant 24 in AttributeMap.ts: typeof b !== 'object' replaced with Array.isArray(b)
Mutant 25 in AttributeMap.ts: a replaced with Object.keys(a)
Mutant 26 in AttributeMap.ts: a replaced with Object.keys(Object.assign({}, a, b))
Mutant 27 in AttributeMap.ts: a replaced with Object.keys(JSON.parse(JSON.stringify({
  ...a,
  ...b
})))
Mutant 28 in AttributeMap.ts: b replaced with b.toString()
Mutant 29 in AttributeMap.ts: b replaced with b || []
Mutant 30 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with a[key] !== b[key]
Mutant 31 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with typeof a[key] !== 'undefined' && a[key] !== b[key]
Mutant 32 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with a[key] !== null && a[key] !== b[key]
Mutant 33 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(a[key] || b[key])
Mutant 34 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(b[key] || a[key])
Mutant 35 in AttributeMap.ts: isEqual replaced with a[key] === b[key]
Mutant 36 in AttributeMap.ts: a[key] replaced with a['key']
Mutant 37 in AttributeMap.ts: b[key] replaced with b[key] || {}
Mutant 38 in AttributeMap.ts: b[key] replaced with b['key']
Mutant 39 in AttributeMap.ts: attributes replaced with Object.assign({}, attributes)
Mutant 40 in AttributeMap.ts: attributes replaced with Object.keys(a).concat(Object.keys(b)).reduce < AttributeMap > ((attrs, key) => {
  if (a[key] === undefined) {
    attrs[key] = b[key];
  }
  return attrs;
}, {})
Mutant 41 in AttributeMap.ts: base replaced with Object.keys(a)
Mutant 42 in AttributeMap.ts: base replaced with {}
Mutant 43 in AttributeMap.ts: base replaced with Object.keys(b)
Mutant 44 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] !== attr[key] && base[key] !== undefined
Mutant 45 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] !== attr[key] || attr[key] !== undefined
Mutant 46 in AttributeMap.ts: attr replaced with Object.keys(a)
Mutant 47 in AttributeMap.ts: attr replaced with {}
Mutant 48 in AttributeMap.ts: attr replaced with Object.keys(b)
Mutant 49 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] !== undefined && base[key] === undefined
Mutant 50 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 51 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a !== 'undefined'
Mutant 52 in AttributeMap.ts: typeof a !== 'object' replaced with Array.isArray(a)
Mutant 53 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 54 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'undefined'
Mutant 55 in AttributeMap.ts: typeof b !== 'object' replaced with b === undefined || typeof b !== 'object'
Mutant 56 in AttributeMap.ts: !priority replaced with true
Mutant 57 in AttributeMap.ts: !priority replaced with a[key] === b[key]
Mutant 58 in AttributeMap.ts: !priority replaced with Math.random() < 0.5
Mutant 59 in AttributeMap.ts: b replaced with b.hasOwnProperty(key) ? b[key] : undefined
Mutant 60 in AttributeMap.ts: a[key] === undefined replaced with a[key] == undefined
Mutant 61 in Delta.ts: String.fromCharCode replaced with 'N'
Mutant 62 in Delta.ts: String.fromCharCode replaced with 0x00
Mutant 63 in Delta.ts: String.fromCharCode replaced with String.fromCodePoint
Mutant 64 in Delta.ts: 0 replaced with 1
Mutant 65 in Delta.ts: 0 replaced with String.fromCharCode(Math.floor(Math.random() * 256))
Mutant 66 in Delta.ts: 0 replaced with String.fromCharCode(0x7F)
Mutant 67 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'object' && a !== undefined
Mutant 68 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'object' || a === true
Mutant 69 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'function'
Mutant 70 in Delta.ts: typeof b !== 'object' || b === null replaced with b === undefined
Mutant 71 in Delta.ts: typeof b !== 'object' || b === null replaced with b.toString() === '[object Object]'
Mutant 72 in Delta.ts: typeof b !== 'object' || b === null replaced with b !== null
Mutant 73 in Delta.ts: a replaced with Object.keys(a)[0]
Mutant 74 in Delta.ts: a replaced with 'nonexistent_embed_type'
Mutant 75 in Delta.ts: a replaced with null
Mutant 76 in Delta.ts: b replaced with 'b' + Object.keys(b)[0]
Mutant 77 in Delta.ts: b replaced with null
Mutant 78 in Delta.ts: b replaced with '0'
Mutant 79 in Delta.ts: b replaced with Object.keys(b)[1]
Mutant 80 in Delta.ts: b replaced with {}
Mutant 81 in Delta.ts: b replaced with JSON.parse(JSON.stringify(b))
Mutant 82 in Delta.ts: !handler replaced with typeof handler === 'undefined'
Mutant 83 in Delta.ts: !handler replaced with handler === null
Mutant 84 in Delta.ts: Array.isArray(ops) replaced with ops instanceof Array
Mutant 85 in Delta.ts: Array.isArray replaced with false
Mutant 86 in Delta.ts: Array.isArray replaced with 0
Mutant 87 in Delta.ts: Array.isArray replaced with null
Mutant 88 in Delta.ts: ops replaced with ops.slice()
Mutant 89 in Delta.ts: ops replaced with Object.assign([], ops)
Mutant 90 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops !== undefined && Array.isArray(ops.ops)
Mutant 91 in Delta.ts: Array.isArray replaced with this.ops.length > index
Mutant 92 in Delta.ts: ops.ops replaced with ops.length
Mutant 93 in Delta.ts: ops.ops replaced with ops[0]
Mutant 94 in Delta.ts: ops.ops replaced with ops.concat()
Mutant 95 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with arg instanceof String && arg.length === 0
Mutant 96 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with typeof arg === 'object' && Array.isArray(arg) && arg.length === 0
Mutant 97 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with typeof arg === 'number' && arg === 0
Mutant 98 in Delta.ts: attributes replaced with Object.keys(attributes).length > 0 ? attributes : undefined
Mutant 99 in Delta.ts: attributes replaced with attributes || {}
Mutant 100 in Delta.ts: attributes replaced with attributes['key']
Mutant 101 in Delta.ts: newOp replaced with {}
Mutant 102 in Delta.ts: newOp replaced with null
Mutant 103 in Delta.ts: newOp replaced with this
Mutant 104 in Delta.ts: length <= 0 replaced with true
Mutant 105 in Delta.ts: length <= 0 replaced with length === 0
Mutant 106 in Delta.ts: length <= 0 replaced with length > 1
Mutant 107 in Delta.ts: typeof length === 'number' && length <= 0 replaced with typeof length === 'number' && length >= 0
Mutant 108 in Delta.ts: newOp replaced with {}
Mutant 109 in Delta.ts: newOp replaced with null
Mutant 110 in Delta.ts: newOp replaced with lastOp
Mutant 111 in Delta.ts: cloneDeep replaced with {}
Mutant 112 in Delta.ts: cloneDeep replaced with null
Mutant 113 in Delta.ts: newOp replaced with {}
Mutant 114 in Delta.ts: newOp replaced with null
Mutant 115 in Delta.ts: typeof lastOp === 'object' replaced with lastOp !== null
Mutant 116 in Delta.ts: typeof lastOp === 'object' replaced with lastOp.constructor.name === 'Object'
Mutant 117 in Delta.ts: typeof lastOp === 'object' replaced with Array.isArray(lastOp)
Mutant 118 in Delta.ts: typeof lastOp !== 'object' replaced with lastOp === null
Mutant 119 in Delta.ts: typeof lastOp !== 'object' replaced with typeof lastOp !== 'undefined'
Mutant 120 in Delta.ts: typeof lastOp !== 'object' replaced with Array.isArray(lastOp)
Mutant 121 in Delta.ts: this.ops.unshift replaced with this.ops.shift
Mutant 122 in Delta.ts: this.ops.unshift replaced with this.ops.pop
Mutant 123 in Delta.ts: newOp replaced with null
Mutant 124 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with newOp.attributes === lastOp.attributes
Mutant 125 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with JSON.stringify(newOp.attributes) === JSON.stringify(lastOp.attributes)
Mutant 126 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(null)
Mutant 127 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual({})
Mutant 128 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(lastOp.attributes)
Mutant 129 in Delta.ts: isEqual replaced with nextOp.insert && lastOp.insert
Mutant 130 in Delta.ts: newOp.attributes replaced with newOp.attributes || {}
Mutant 131 in Delta.ts: lastOp.attributes replaced with null
Mutant 132 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with newOp.insert !== undefined && lastOp.insert !== undefined
Mutant 133 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with typeof newOp.insert === 'object' && typeof lastOp.insert === 'object'
Mutant 134 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes !== undefined
Mutant 135 in Delta.ts: typeof newOp.attributes === 'object' replaced with typeof newOp.attributes === 'undefined'
Mutant 136 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.hasOwnProperty('attributes')
Mutant 137 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'string' && typeof lastOp.retain === 'number'
Mutant 138 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'number' && typeof lastOp.retain === 'boolean'
Mutant 139 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'number' && 'retain' in lastOp
Mutant 140 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes !== undefined
Mutant 141 in Delta.ts: typeof newOp.attributes === 'object' replaced with typeof newOp.attributes !== 'undefined'
Mutant 142 in Delta.ts: index === this.ops.length replaced with index >= this.ops.length
Mutant 143 in Delta.ts: index === this.ops.length replaced with index > this.ops.length
Mutant 144 in Delta.ts: index === this.ops.length replaced with index === this.ops.length - 1
Mutant 145 in Delta.ts: this.ops.push replaced with this.ops.unshift
Mutant 146 in Delta.ts: this.ops.push replaced with this.ops.splice
Mutant 147 in Delta.ts: newOp replaced with {}
Mutant 148 in Delta.ts: newOp replaced with this.ops[index - 1]
Mutant 149 in Delta.ts: newOp replaced with null
Mutant 150 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, '0', newOp)
Mutant 151 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, -1, newOp)
Mutant 152 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, 1, newOp)
Mutant 153 in Delta.ts: this.ops.splice replaced with this.ops.concat
Mutant 154 in Delta.ts: index replaced with this.ops.length
Mutant 155 in Delta.ts: index replaced with -1
Mutant 156 in Delta.ts: index replaced with Math.random() * this.ops.length
Mutant 157 in Delta.ts: 0 replaced with this.ops.length
Mutant 158 in Delta.ts: 0 replaced with -1
Mutant 159 in Delta.ts: 0 replaced with Math.max(index, this.ops.length)
Mutant 160 in Delta.ts: newOp replaced with {}
Mutant 161 in Delta.ts: newOp replaced with lastOp
Mutant 162 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp && typeof lastOp.retain === 'string'
Mutant 163 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp && lastOp.hasOwnProperty('retain') && !lastOp.attributes
Mutant 164 in Delta.ts: this.ops.pop replaced with this.ops.length--
Mutant 165 in Delta.ts: predicate replaced with () => true
Mutant 166 in Delta.ts: predicate replaced with (op, index) => predicate(index, op)
Mutant 167 in Delta.ts: predicate replaced with (op, index) => predicate(op)
Mutant 168 in Delta.ts: predicate replaced with index % 2 === 0
Mutant 169 in Delta.ts: op replaced with op || {}
Mutant 170 in Delta.ts: op replaced with this.ops[0]
Mutant 171 in Delta.ts: target.push replaced with target.pop
Mutant 172 in Delta.ts: op replaced with {}
Mutant 173 in Delta.ts: op replaced with null
Mutant 174 in Delta.ts: op replaced with Math.random()
Mutant 175 in Delta.ts: this.ops.reduce(predicate, initialValue) replaced with this.ops.reduce((predicate, initialValue) => initialValue)
Mutant 176 in Delta.ts: predicate replaced with (accum, curr, index) => accum + curr
Mutant 177 in Delta.ts: initialValue replaced with 0
Mutant 178 in Delta.ts: initialValue replaced with null
Mutant 179 in Delta.ts: elem.insert replaced with 1 * elem.insert
Mutant 180 in Delta.ts: elem.insert replaced with elem['insert']
Mutant 181 in Delta.ts: Op.length replaced with this.length
Mutant 182 in Delta.ts: elem replaced with 1 * elem
Mutant 183 in Delta.ts: elem replaced with null
Mutant 184 in Delta.ts: elem replaced with Math.random()
Mutant 185 in Delta.ts: elem.delete replaced with 0
Mutant 186 in Delta.ts: elem.delete replaced with 1
Mutant 187 in Delta.ts: Op.length replaced with this.ops.length
Mutant 188 in Delta.ts: Op.length replaced with 0
Mutant 189 in Delta.ts: elem replaced with this.ops[index - 1]
Mutant 190 in Delta.ts: elem replaced with null
Mutant 191 in Delta.ts: elem replaced with {
  insert: 0
}
Mutant 192 in Delta.ts: index < end && iter.hasNext() replaced with index < Infinity && iter.hasNext()
Mutant 193 in Delta.ts: index < end && iter.hasNext() replaced with index < end && iter.peek() !== undefined
Mutant 194 in Delta.ts: index < start replaced with index > start
Mutant 195 in Delta.ts: index < start replaced with index >= start
Mutant 196 in Delta.ts: iter.next replaced with -1
Mutant 197 in Delta.ts: start - index replaced with 0
Mutant 198 in Delta.ts: start - index replaced with this.ops.length
Mutant 199 in Delta.ts: start - index replaced with index
Mutant 200 in Delta.ts: iter.next replaced with iter.skip
Mutant 201 in Delta.ts: iter.next replaced with iter.peek
Mutant 202 in Delta.ts: end - index replaced with 0
Mutant 203 in Delta.ts: end - index replaced with this.ops.length
Mutant 204 in Delta.ts: end - index replaced with index
Mutant 205 in Delta.ts: nextOp replaced with null
Mutant 206 in Delta.ts: nextOp replaced with null
Mutant 207 in Delta.ts: otherIter.peek replaced with otherIter.next
Mutant 208 in Delta.ts: firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null replaced with firstOther?.retain !== undefined && firstOther.attributes === null
Mutant 209 in Delta.ts: thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft replaced with thisIter.peekType() === 'insert' && firstLeft <= thisIter.peekLength()
Mutant 210 in Delta.ts: thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft replaced with thisIter.peekType() === 'insert' && firstLeft < thisIter.peekLength()
Mutant 211 in Delta.ts: thisIter.peekType replaced with 1
Mutant 212 in Delta.ts: thisIter.peekLength replaced with 0
Mutant 213 in Delta.ts: thisIter.peekLength replaced with thisIter.peekLength + 10
Mutant 214 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 215 in Delta.ts: ops.push replaced with ops.unshift
Mutant 216 in Delta.ts: ops.push replaced with ops[ops.length]
Mutant 217 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 218 in Delta.ts: thisIter.next() replaced with thisIter.next(1)
Mutant 219 in Delta.ts: thisIter.next() replaced with thisIter.next(Math.floor(Math.random() * 10))
Mutant 220 in Delta.ts: thisIter.next replaced with thisIter.splice
Mutant 221 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with firstOther.retain >= firstLeft
Mutant 222 in Delta.ts: otherIter.next replaced with thisIter.next
Mutant 223 in Delta.ts: firstOther.retain - firstLeft replaced with 0
Mutant 224 in Delta.ts: firstOther.retain - firstLeft replaced with firstOther.retain + firstLeft
Mutant 225 in Delta.ts: firstOther.retain - firstLeft replaced with Math.random()
Mutant 226 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.peek() !== null || otherIter.peek() !== null
Mutant 227 in Delta.ts: thisIter.hasNext replaced with thisIter.peekType === 'insert'
Mutant 228 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekLength() > 0
Mutant 229 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peek() !== null
Mutant 230 in Delta.ts: otherIter.peekType replaced with 'retain'
Mutant 231 in Delta.ts: otherIter.next() replaced with otherIter.peek()
Mutant 232 in Delta.ts: otherIter.next() replaced with otherIter.next(0)
Mutant 233 in Delta.ts: otherIter.next() replaced with otherIter.next(-1)
Mutant 234 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekType() === 'insert'
Mutant 235 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekType() === 'retain'
Mutant 236 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekLength() > 0
Mutant 237 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 238 in Delta.ts: thisIter.next() replaced with thisIter.next(0)
Mutant 239 in Delta.ts: thisIter.next() replaced with thisIter.next(-1)
Mutant 240 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() + otherIter.peekLength())
Mutant 241 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(Math.max(thisIter.peekLength(), otherIter.peekLength()))
Mutant 242 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() * otherIter.peekLength())
Mutant 243 in Delta.ts: Math.min replaced with Infinity
Mutant 244 in Delta.ts: Math.min replaced with 0
Mutant 245 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() - 1
Mutant 246 in Delta.ts: thisIter.peekLength() replaced with Infinity
Mutant 247 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() * 2
Mutant 248 in Delta.ts: thisIter.peekLength replaced with 0
Mutant 249 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 250 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 251 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 252 in Delta.ts: otherIter.peekLength() replaced with Infinity
Mutant 253 in Delta.ts: thisIter.next replaced with thisIter.next || {}
Mutant 254 in Delta.ts: thisIter.next replaced with thisIter.peek
Mutant 255 in Delta.ts: length replaced with thisIter.peekLength() * 2
Mutant 256 in Delta.ts: length replaced with 0
Mutant 257 in Delta.ts: length replaced with Math.random()
Mutant 258 in Delta.ts: otherIter.next replaced with otherIter.peek
Mutant 259 in Delta.ts: length replaced with 0
Mutant 260 in Delta.ts: length replaced with Infinity
Mutant 261 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 262 in Delta.ts: otherOp.retain replaced with otherOp.retain || 0
Mutant 263 in Delta.ts: otherOp.retain replaced with thisIter.peekLength()
Mutant 264 in Delta.ts: typeof thisOp.retain === 'number' replaced with thisOp.retain !== null
Mutant 265 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof thisOp.retain === 'string'
Mutant 266 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof thisOp.retain === 'symbol'
Mutant 267 in Delta.ts: typeof otherOp.retain === 'number' replaced with otherOp.retain !== null
Mutant 268 in Delta.ts: typeof otherOp.retain === 'number' replaced with typeof otherOp.retain !== 'undefined'
Mutant 269 in Delta.ts: typeof otherOp.retain === 'number' replaced with 'retain' in otherOp
Mutant 270 in Delta.ts: thisOp.retain == null replaced with thisOp.retain === undefined
Mutant 271 in Delta.ts: thisOp.retain == null replaced with Object.keys(thisOp).includes('retain')
Mutant 272 in Delta.ts: thisOp.retain == null replaced with typeof thisOp.retain !== 'undefined'
Mutant 273 in Delta.ts: Delta.getHandler replaced with null
Mutant 274 in Delta.ts: Delta.getHandler replaced with Object.prototype
Mutant 275 in Delta.ts: embedType replaced with 'insert'
Mutant 276 in Delta.ts: embedType replaced with Math.random() * 2 | 0
Mutant 277 in Delta.ts: attributes replaced with Object.assign({}, attributes)
Mutant 278 in Delta.ts: attributes replaced with attributes || {}
Mutant 279 in Delta.ts: delta.push replaced with delta.unshift
Mutant 280 in Delta.ts: delta.push replaced with delta.splice
Mutant 281 in Delta.ts: newOp replaced with {}
Mutant 282 in Delta.ts: newOp replaced with null
Mutant 283 in Delta.ts: newOp replaced with Math.random()
Mutant 284 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with thisIter.peekLength() === 0
Mutant 285 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[delta.ops.length - 2], newOp)
Mutant 286 in Delta.ts: otherIter.hasNext replaced with false
Mutant 287 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[0], newOp)
Mutant 288 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(newOp, delta.ops[delta.ops.length - 1])
Mutant 289 in Delta.ts: delta.ops[delta.ops.length - 1] replaced with delta.ops[0]
Mutant 290 in Delta.ts: newOp replaced with {}
Mutant 291 in Delta.ts: newOp replaced with null
Mutant 292 in Delta.ts: newOp replaced with thisOp
Mutant 293 in Delta.ts: thisIter.rest replaced with iter.rest
Mutant 294 in Delta.ts: delta.concat replaced with this.concat
Mutant 295 in Delta.ts: delta.concat replaced with Array.prototype.concat
Mutant 296 in Delta.ts: delta.concat replaced with Math.concat
not replacing delta.concat with this.concat
not replacing delta.concat with this.concat
not replacing delta.concat with Array.prototype.concat
not replacing delta.concat with Array.prototype.concat
not replacing delta.concat with Math.concat
not replacing delta.concat with Math.concat
Mutant 297 in Delta.ts: rest replaced with new Delta(thisIter.rest())
Mutant 298 in Delta.ts: rest replaced with iter.rest()
Mutant 299 in Delta.ts: typeof otherOp.delete === 'number' && (typeof thisOp.retain === 'number' || typeof thisOp.retain === 'object' && thisOp.retain !== null) replaced with typeof thisOp.retain !== 'boolean'
Mutant 300 in Delta.ts: typeof otherOp.delete === 'number' && (typeof thisOp.retain === 'number' || typeof thisOp.retain === 'object' && thisOp.retain !== null) replaced with thisOp.retain !== null
Mutant 301 in Delta.ts: delta.push replaced with delta.pop
Mutant 302 in Delta.ts: otherOp replaced with null
Mutant 303 in Delta.ts: otherOp replaced with {}
Mutant 304 in Delta.ts: otherOp replaced with iter.next()
Mutant 305 in Delta.ts: this.ops.slice replaced with this.ops.splice
Mutant 306 in Delta.ts: this.ops.slice replaced with this.ops.concat
Mutant 307 in Delta.ts: this.ops.slice replaced with this.ops.filter
Mutant 308 in Delta.ts: other.ops.length > 0 replaced with other.ops.length >= 1
Mutant 309 in Delta.ts: other.ops.length > 0 replaced with other.ops.length !== 0
Mutant 310 in Delta.ts: other.ops.length > 0 replaced with Array.isArray(other.ops) && other.ops.length > 0
Mutant 311 in Delta.ts: other.ops[0] replaced with other.ops.slice(1)[0]
Mutant 312 in Delta.ts: other.ops.slice(1) replaced with other.ops.reverse()
Mutant 313 in Delta.ts: other.ops.slice replaced with other.ops.concat
Mutant 314 in Delta.ts: 1 replaced with other.ops.length - 1
Mutant 315 in Delta.ts: 1 replaced with other.ops.slice(0)
Mutant 316 in Delta.ts: this.ops === other.ops replaced with this.ops.length === other.ops.length
Mutant 317 in Delta.ts: this.ops === other.ops replaced with this.ops[0] === other.ops[0]
Mutant 318 in Delta.ts: this.ops === other.ops replaced with JSON.stringify(this.ops) === JSON.stringify(other.ops)
Mutant 319 in Delta.ts: op.insert != null replaced with op.insert !== undefined
Mutant 320 in Delta.ts: op.insert != null replaced with op.hasOwnProperty('insert')
Mutant 321 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(['string1', 'string2', cursor])
Mutant 322 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(strings.slice())
Mutant 323 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff([strings[1], strings[0], cursor])
Mutant 324 in Delta.ts: diff replaced with 'stringDiff'
Mutant 325 in Delta.ts: strings[0] replaced with []
Mutant 326 in Delta.ts: strings[0] replaced with strings[1]
Mutant 327 in Delta.ts: strings[0] replaced with strings[Math.floor(Math.random() * 2)]
Mutant 328 in Delta.ts: strings[1] replaced with []
Mutant 329 in Delta.ts: strings[1] replaced with strings[2]
Mutant 330 in Delta.ts: strings[1] replaced with 'hardcoded string'
Mutant 331 in Delta.ts: cursor replaced with null
Mutant 332 in Delta.ts: length > 0 replaced with length >= 1
Mutant 333 in Delta.ts: length > 0 replaced with length > -1
Mutant 334 in Delta.ts: length > 0 replaced with true
Mutant 335 in Delta.ts: component[0] replaced with diff.EQUAL
Mutant 336 in Delta.ts: component[0] replaced with diff.INSERT
Mutant 337 in Delta.ts: component[0] replaced with diff.DELETE
Mutant 338 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(otherIter.length(), length)
Mutant 339 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(otherIter.peek(), length)
Mutant 340 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(otherIter.peekLength() * 2, length)
Mutant 341 in Delta.ts: Math.min replaced with Infinity
Mutant 342 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 343 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 344 in Delta.ts: otherIter.peekLength() replaced with Math.max(thisIter.peekLength(), otherIter.peekLength())
Mutant 345 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 346 in Delta.ts: length replaced with 0
Mutant 347 in Delta.ts: length replaced with Infinity
Mutant 348 in Delta.ts: otherIter.next(opLength) replaced with otherIter.next(opLength - 1)
Mutant 349 in Delta.ts: opLength replaced with thisIter.peekLength()
Mutant 350 in Delta.ts: opLength replaced with Math.max(opLength - 1, 0)
Mutant 351 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(1)
Mutant 352 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(thisIter.peekLength() * 2)
Mutant 353 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(Math.max(length, thisIter.peekLength()))
Mutant 354 in Delta.ts: Math.min replaced with 1000
Mutant 355 in Delta.ts: length replaced with thisIter.peekLength() * 2
Mutant 356 in Delta.ts: length replaced with 0
Mutant 357 in Delta.ts: length replaced with thisIter.peekLength() + 1
Mutant 358 in Delta.ts: thisIter.peekLength() replaced with thisIter.peek().length
Mutant 359 in Delta.ts: thisIter.peekLength() replaced with thisIter.length()
Mutant 360 in Delta.ts: thisIter.peekLength() replaced with 10
Mutant 361 in Delta.ts: opLength replaced with 0
Mutant 362 in Delta.ts: opLength replaced with thisIter.peekLength()
Mutant 363 in Delta.ts: opLength replaced with Math.random()
Mutant 364 in Delta.ts: opLength replaced with 0
Mutant 365 in Delta.ts: opLength replaced with thisOp.length
Mutant 366 in Delta.ts: opLength replaced with Math.random()
Mutant 367 in Delta.ts: otherIter.peekLength replaced with thisOp.insert.length
Mutant 368 in Delta.ts: opLength replaced with thisOp.insert.length
Mutant 369 in Delta.ts: opLength replaced with Math.max(opLength, 1)
Mutant 370 in Delta.ts: opLength replaced with otherIter.peekLength()
Mutant 371 in Delta.ts: opLength replaced with otherIter.peekLength() * 2
Mutant 372 in Delta.ts: opLength replaced with 0
Mutant 373 in Delta.ts: opLength replaced with thisIter.peekLength() + 1
Mutant 374 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with thisOp.insert === otherOp.insert
Mutant 375 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with thisOp.insert == otherOp.insert
Mutant 376 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with Object.is(thisOp.insert, otherOp.insert)
Mutant 377 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(thisOp.insert || otherOp.insert)
Mutant 378 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(null)
Mutant 379 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(thisOp.insert ?? otherOp.insert)
Mutant 380 in Delta.ts: isEqual replaced with thisOp.insert.length === otherOp.insert.length
Mutant 381 in Delta.ts: isEqual replaced with true
Mutant 382 in Delta.ts: thisOp.insert replaced with thisOp.insert || ''
Mutant 383 in Delta.ts: thisOp.insert replaced with thisOp['insert']
Mutant 384 in Delta.ts: otherOp.insert replaced with otherOp.insert || ''
Mutant 385 in Delta.ts: otherOp.insert replaced with otherOp.insert ?? '<REPLACEMENT_VALUE>'
Mutant 386 in Delta.ts: otherOp.insert replaced with otherOp.hasOwnProperty('insert') ? otherOp.insert : '<REPLACEMENT_VALUE>'
Mutant 387 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(Object.assign({}, thisOp.attributes, otherOp.attributes))
Mutant 388 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(thisOp.attributes.concat(otherOp.attributes))
Mutant 389 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff({
  ...thisOp.attributes,
  ...otherOp.attributes
})
Mutant 390 in Delta.ts: AttributeMap.diff replaced with null
Mutant 391 in Delta.ts: AttributeMap.diff replaced with {}
Mutant 392 in Delta.ts: thisOp.attributes replaced with null
Mutant 393 in Delta.ts: otherOp.attributes replaced with null
Mutant 394 in Delta.ts: otherOp.attributes replaced with otherOp.insert
Mutant 395 in Delta.ts: otherOp replaced with null
Mutant 396 in Delta.ts: opLength replaced with 0
Mutant 397 in Delta.ts: opLength replaced with thisOp.length
Mutant 398 in Delta.ts: opLength replaced with Infinity
Mutant 399 in Delta.ts: iter.hasNext() replaced with iter.peek() !== null
Mutant 400 in Delta.ts: iter.hasNext() replaced with iter.peekLength() > 0
Mutant 401 in Delta.ts: iter.peekType() !== 'insert' replaced with iter.peekType() === 'insert'
Mutant 402 in Delta.ts: iter.peekType() !== 'insert' replaced with iter.peekType() === 'retain'
Mutant 403 in Delta.ts: Op.length replaced with thisOp.length
Mutant 404 in Delta.ts: thisOp replaced with thisOp.insert
Mutant 405 in Delta.ts: thisOp replaced with thisOp.retain
Mutant 406 in Delta.ts: iter.peekLength replaced with 0
Mutant 407 in Delta.ts: iter.peekLength replaced with thisIter.peekLength || 0
Mutant 408 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf('', start)
Mutant 409 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf(newline, thisIter.peekLength())
Mutant 410 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf('', 0)
Mutant 411 in Delta.ts: thisOp.insert.indexOf replaced with ''.indexOf
Mutant 412 in Delta.ts: thisOp.insert.indexOf replaced with thisOp.insert.length
Mutant 413 in Delta.ts: newline replaced with '\r\n'
Mutant 414 in Delta.ts: newline replaced with ''
Mutant 415 in Delta.ts: newline replaced with '<br/>'
Mutant 416 in Delta.ts: start replaced with thisOp.insert.indexOf(newline, Infinity)
Mutant 417 in Delta.ts: start replaced with thisOp.insert.indexOf(newline, -1)
Mutant 418 in Delta.ts: start replaced with thisOp.insert.indexOf('not-a-newline', 0)
Mutant 419 in Delta.ts: index < 0 replaced with index <= -1
Mutant 420 in Delta.ts: index < 0 replaced with index > this.length()
Mutant 421 in Delta.ts: iter.next() replaced with iter.next(1)
Mutant 422 in Delta.ts: iter.next() replaced with iter.previous()
Mutant 423 in Delta.ts: iter.next() replaced with iter.ops[0]
Mutant 424 in Delta.ts: iter.next replaced with thisIter.next
Mutant 425 in Delta.ts: index > 0 replaced with index >= 0
Mutant 426 in Delta.ts: index > 0 replaced with index > -1
Mutant 427 in Delta.ts: index > 0 replaced with index === 0
Mutant 428 in Delta.ts: iter.next(index) replaced with iter.next(index + 1)
Mutant 429 in Delta.ts: iter.next(index) replaced with iter.previous()
Mutant 430 in Delta.ts: iter.next replaced with iter.skip
Mutant 431 in Delta.ts: index replaced with -index
Mutant 432 in Delta.ts: index replaced with Math.random()
Mutant 433 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) === false replaced with predicate(line, {}, i) === false
Mutant 434 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) replaced with predicate(new Delta(), {}, i)
Mutant 435 in Delta.ts: line replaced with []
Mutant 436 in Delta.ts: line replaced with '<div></div>'
Mutant 437 in Delta.ts: line replaced with {
  insert: '\n',
  attributes: {
    bold: true
  }
}
Mutant 438 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(1).attributes || {
  foo: 'bar'
}
Mutant 439 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(2).attributes || {}
Mutant 440 in Delta.ts: i replaced with i + 1
Mutant 441 in Delta.ts: i replaced with 0
Mutant 442 in Delta.ts: i replaced with this.length()
Mutant 443 in Delta.ts: line.length() > 0 replaced with line.length > 0
Mutant 444 in Delta.ts: line.length() > 0 replaced with line.length > 1
Mutant 445 in Delta.ts: line.length() > 0 replaced with line.length === 0
Mutant 446 in Delta.ts: line.length replaced with line.length - 1
Mutant 447 in Delta.ts: predicate(line, {}, i) replaced with predicate([line, otherIter.next(1).attributes || {}, i])
Mutant 448 in Delta.ts: predicate(line, {}, i) replaced with predicate([line, attributes, i + 1])
Mutant 449 in Delta.ts: predicate(line, {}, i) replaced with predicate([line, thisIter.next(1).attributes || {}, i])
Mutant 450 in Delta.ts: line replaced with new Delta()
Mutant 451 in Delta.ts: line replaced with null
Mutant 452 in Delta.ts: line replaced with this.ops
Mutant 453 in Delta.ts: {} replaced with {
  insert: '\n'
}
Mutant 454 in Delta.ts: {} replaced with {
  insert: '',
  attributes: {
    bold: true
  }
}
Mutant 455 in Delta.ts: {} replaced with {
  insert: ' ',
  attributes: {
    italic: true
  }
}
Mutant 456 in Delta.ts: i replaced with i + 1
Mutant 457 in Delta.ts: i replaced with 0
Mutant 458 in Delta.ts: i replaced with 'placeholder'
Mutant 459 in Delta.ts: op.insert replaced with op.insert || ''
Mutant 460 in Delta.ts: inverted.delete replaced with inverted.retain
Mutant 461 in Delta.ts: inverted.delete replaced with inverted.push
Mutant 462 in Delta.ts: inverted.delete replaced with inverted['noSuchMethod']
Mutant 463 in Delta.ts: Op.length(op) replaced with this.ops.length
Mutant 464 in Delta.ts: Op.length replaced with thisOp.length
Mutant 465 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && op.attributes === undefined
Mutant 466 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with op.retain !== null && op.retain.constructor.name === 'Number'
Mutant 467 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && Object.keys(op.attributes).length === 0
Mutant 468 in Delta.ts: op.retain replaced with op.retain || 0
Mutant 469 in Delta.ts: op.retain replaced with op.retain ?? 0
Mutant 470 in Delta.ts: op.retain replaced with this.ops[0].retain
Mutant 471 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex + length, baseIndex)
Mutant 472 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex + 1, baseIndex + length - 1)
Mutant 473 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex - 1, baseIndex + length)
Mutant 474 in Delta.ts: baseIndex replaced with thisIter.current().attributes.start
Mutant 475 in Delta.ts: baseIndex replaced with 0
Mutant 476 in Delta.ts: baseIndex + length replaced with baseIndex + length - 1
Mutant 477 in Delta.ts: op.delete replaced with false
Mutant 478 in Delta.ts: op.delete replaced with 0
Mutant 479 in Delta.ts: op.delete replaced with null
Mutant 480 in Delta.ts: baseOp replaced with {}
Mutant 481 in Delta.ts: baseOp replaced with null
Mutant 482 in Delta.ts: baseOp replaced with Math.random()
Mutant 483 in Delta.ts: op.retain && op.attributes replaced with op.retain && op.attributes || {}
Mutant 484 in Delta.ts: op.retain && op.attributes replaced with op.retain !== undefined && op.attributes
Mutant 485 in Delta.ts: op.retain && op.attributes replaced with op.attributes || op.retain
Mutant 486 in Delta.ts: Op.length replaced with 0
Mutant 487 in Delta.ts: baseOp replaced with baseOp.insert
Mutant 488 in Delta.ts: baseOp replaced with null
Mutant 489 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(null)
Mutant 490 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes || {})
Mutant 491 in Delta.ts: AttributeMap.invert replaced with {}
Mutant 492 in Delta.ts: AttributeMap.invert replaced with baseOp.attributes
Mutant 493 in Delta.ts: op.attributes replaced with null
Mutant 494 in Delta.ts: baseOp.attributes replaced with null
Mutant 495 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== undefined
Mutant 496 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'number'
Mutant 497 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain && typeof op.retain === 'object'
Mutant 498 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIndex + length)
Mutant 499 in Delta.ts: base.slice replaced with []
Mutant 500 in Delta.ts: base.slice replaced with base.ops.slice
Mutant 501 in Delta.ts: baseIndex replaced with thisIter.peekLength()
Mutant 502 in Delta.ts: baseIndex replaced with 0
Mutant 503 in Delta.ts: baseIndex replaced with thisIter.peekType() === 'insert' ? thisIter.peekLength() : 0
Mutant 504 in Delta.ts: baseIndex + 1 replaced with baseIter.peekLength()
Mutant 505 in Delta.ts: Delta.getHandler replaced with delta.getHandler
Mutant 506 in Delta.ts: embedType replaced with 'insert'
Mutant 507 in Delta.ts: embedType replaced with Math.random().toString()
Mutant 508 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(null)
Mutant 509 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert([opData, baseOpData])
Mutant 510 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(opData, null)
Mutant 511 in Delta.ts: opData replaced with null
Mutant 512 in Delta.ts: opData replaced with []
Mutant 513 in Delta.ts: opData replaced with Math.random()
Mutant 514 in Delta.ts: baseOpData replaced with null
Mutant 515 in Delta.ts: baseOpData replaced with {}
Mutant 516 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(null)
Mutant 517 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert({})
Mutant 518 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(thisOp.attributes)
Mutant 519 in Delta.ts: op.attributes replaced with null
Mutant 520 in Delta.ts: baseOp.attributes replaced with null
Mutant 521 in Delta.ts: typeof arg === 'number' replaced with arg !== undefined
Mutant 522 in Delta.ts: typeof arg === 'number' replaced with arg !== null
Mutant 523 in Delta.ts: typeof arg === 'number' replaced with typeof arg === 'object'
Mutant 524 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(0, priority)
Mutant 525 in Delta.ts: this.transformPosition replaced with this.transformPosition + ''
Mutant 526 in Delta.ts: arg replaced with 0
Mutant 527 in Delta.ts: arg replaced with Infinity
Mutant 528 in Delta.ts: arg replaced with thisIter.peekLength()
Mutant 529 in Delta.ts: priority replaced with false
Mutant 530 in Delta.ts: priority replaced with thisIter.peekType()
Mutant 531 in Delta.ts: priority replaced with Math.random()
Mutant 532 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.peek() !== null
Mutant 533 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with otherIter.peek() !== undefined
Mutant 534 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.peekLength() > 0 || otherIter.peekLength() > 0
Mutant 535 in Delta.ts: thisIter.hasNext replaced with thisIter.current !== null
Mutant 536 in Delta.ts: thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert') replaced with thisIter.peekType() === 'insert' && (priority || otherIter.peek().type !== 'insert')
Mutant 537 in Delta.ts: thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert') replaced with thisIter.peekType() === 'insert' && (priority || otherIter.peekLength() > 0)
Mutant 538 in Delta.ts: otherIter.peekType replaced with otherIter['peekType']
Mutant 539 in Delta.ts: delta.retain replaced with delta.push
Mutant 540 in Delta.ts: delta.retain replaced with delta.length = 0
Mutant 541 in Delta.ts: Op.length(thisIter.next()) replaced with 1
Mutant 542 in Delta.ts: Op.length(thisIter.next()) replaced with thisIter.peekLength()
Mutant 543 in Delta.ts: Op.length(thisIter.next()) replaced with Math.random() * Number.MAX_SAFE_INTEGER
Mutant 544 in Delta.ts: Op.length replaced with 0
Mutant 545 in Delta.ts: Op.length replaced with Infinity
Mutant 546 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 547 in Delta.ts: thisIter.next() replaced with thisIter.next(0)
Mutant 548 in Delta.ts: thisIter.next() replaced with thisIter.previous()
Mutant 549 in Delta.ts: thisIter.next replaced with thisIter['next']
Mutant 550 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() !== 'insert'
Mutant 551 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.current() === undefined
Mutant 552 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() === null
Mutant 553 in Delta.ts: otherIter.next() replaced with null
Mutant 554 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() + otherIter.peekLength())
Mutant 555 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(Math.max(thisIter.peekLength(), otherIter.peekLength()))
Mutant 556 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() * otherIter.peekLength())
Mutant 557 in Delta.ts: Math.min replaced with Math.max
Mutant 558 in Delta.ts: Math.min replaced with index - offset
Mutant 559 in Delta.ts: thisIter.peekLength() replaced with thisIter.next().length
Mutant 560 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 561 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 562 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 563 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekType() === 'insert' ? Infinity : 0
Mutant 564 in Delta.ts: length replaced with 0
Mutant 565 in Delta.ts: length replaced with thisOp.length
Mutant 566 in Delta.ts: length replaced with thisOp.retain.length
Mutant 567 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 568 in Delta.ts: length replaced with 0
Mutant 569 in Delta.ts: length replaced with Infinity
Mutant 570 in Delta.ts: otherOp.delete replaced with otherOp.retain
Mutant 571 in Delta.ts: otherOp replaced with null
Mutant 572 in Delta.ts: otherOp replaced with {}
Mutant 573 in Delta.ts: otherOp replaced with thisIter.next()
Mutant 574 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with thisData && otherData
Mutant 575 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with Object.keys(thisData).length > 0 && Object.keys(otherData).length > 0
Mutant 576 in Delta.ts: thisData replaced with thisData || {}
Mutant 577 in Delta.ts: thisData replaced with thisData['notAnExistingProperty']
Mutant 578 in Delta.ts: thisData replaced with thisData.concat({
  anotherProperty: 'value'
})
Mutant 579 in Delta.ts: otherData replaced with null
Mutant 580 in Delta.ts: otherData replaced with otherData.slice(0, 10)
Mutant 581 in Delta.ts: otherData replaced with Object.keys(otherData)[0]
Mutant 582 in Delta.ts: Delta.getHandler replaced with null
Mutant 583 in Delta.ts: embedType replaced with 'nonexistentType'
Mutant 584 in Delta.ts: handler replaced with handler.transform(thisData[embedType], otherData[embedType], !priority)
Mutant 585 in Delta.ts: handler replaced with handler['transform'](thisData[embedType], otherData[embedType], priority)
Mutant 586 in Delta.ts: handler replaced with handler.invert(thisData[embedType], otherData[embedType])
Mutant 587 in Delta.ts: thisIter.hasNext() && offset <= index replaced with thisIter.peekLength() > 0 && offset < index
Mutant 588 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 589 in Delta.ts: thisIter.peekType replaced with 'insert'
Mutant 590 in Delta.ts: nextType === 'delete' replaced with nextType === 'insert'
Mutant 591 in Delta.ts: nextType === 'delete' replaced with nextType !== 'insert'
Mutant 592 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(1)
Mutant 593 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(thisIter.peekLength())
Mutant 594 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(Math.random())
Mutant 595 in Delta.ts: Math.min replaced with 1
Mutant 596 in Delta.ts: Math.min replaced with Math.max
Mutant 597 in Delta.ts: length replaced with 0
Mutant 598 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 599 in Delta.ts: length replaced with 1
Mutant 600 in Delta.ts: index - offset replaced with index + offset
Mutant 601 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType === 'insert' && (offset <= index || !priority)
Mutant 602 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType === 'insert' && (offset + 1 < index || !priority)
Mutant 603 in Delta.ts: typeof module === 'object' replaced with typeof global === 'object'
Mutant 604 in Delta.ts: typeof module === 'object' replaced with global.module !== undefined
Mutant 605 in Delta.ts: typeof module === 'object' replaced with typeof window.module === 'object'
Mutant 606 in Op.ts: typeof op.retain === 'number' replaced with op.retain === undefined
Mutant 607 in Op.ts: typeof op.retain === 'number' replaced with typeof op.retain !== 'number'
Mutant 608 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== undefined
Mutant 609 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'string'
Mutant 610 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.hasOwnProperty('retain')
Mutant 611 in OpIterator.ts: this.peekLength replaced with -Infinity
Mutant 612 in OpIterator.ts: this.peekLength replaced with this.index < this.ops.length
Mutant 613 in OpIterator.ts: !length replaced with this.index > this.ops.length
Mutant 614 in OpIterator.ts: !length replaced with length === 0
Mutant 615 in OpIterator.ts: !length replaced with typeof length === 'undefined'
Mutant 616 in OpIterator.ts: nextOp replaced with this.ops[this.index - 1]
Mutant 617 in OpIterator.ts: nextOp replaced with null
Mutant 618 in OpIterator.ts: nextOp replaced with this.ops[this.index + 1]
Mutant 619 in OpIterator.ts: Op.length replaced with 0
Mutant 620 in OpIterator.ts: Op.length replaced with this.ops.length
Mutant 621 in OpIterator.ts: nextOp replaced with this.ops[this.index - 1]
Mutant 622 in OpIterator.ts: nextOp replaced with Math.max(0, this.index)
Mutant 623 in OpIterator.ts: nextOp replaced with this.ops.filter(op => op !== null)[this.index]
Mutant 624 in OpIterator.ts: length >= opLength - offset replaced with length > opLength - offset
Mutant 625 in OpIterator.ts: length >= opLength - offset replaced with length > 0
Mutant 626 in OpIterator.ts: length >= opLength - offset replaced with this.offset > opLength - length
Mutant 627 in OpIterator.ts: nextOp.attributes replaced with nextOp['attributes']
Mutant 628 in OpIterator.ts: nextOp.attributes replaced with nextOp.hasOwnProperty('attributes')
Mutant 629 in OpIterator.ts: nextOp.attributes replaced with Reflect.get(nextOp, 'attributes')
Mutant 630 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with nextOp.retain !== undefined
Mutant 631 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with typeof nextOp.retain === 'string'
Mutant 632 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with nextOp.hasOwnProperty('retain')
Mutant 633 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with nextOp.retain !== undefined
Mutant 634 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with typeof nextOp.retain === 'function'
Mutant 635 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with nextOp.hasOwnProperty('retain')
Mutant 636 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with nextOp.insert !== null
Mutant 637 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with nextOp.hasOwnProperty('insert')
Mutant 638 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with Array.isArray(nextOp.insert)
Mutant 639 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(nextOp.insert.length)
Mutant 640 in OpIterator.ts: nextOp.insert.substr replaced with nextOp.insert.slice
Mutant 641 in OpIterator.ts: nextOp.insert.substr replaced with nextOp.insert.toUpperCase
Mutant 642 in OpIterator.ts: offset replaced with op.length - offset
Mutant 643 in OpIterator.ts: offset replaced with 0
Mutant 644 in OpIterator.ts: offset replaced with this.offset + length
Mutant 645 in OpIterator.ts: length replaced with nextOp.insert.length - offset
Mutant 646 in OpIterator.ts: length replaced with nextOp.insert.substr(offset, 1)
Mutant 647 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index - 1]
Mutant 648 in OpIterator.ts: this.ops[this.index] replaced with this.ops.slice(this.index, 1)[0]
Mutant 649 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index].op
Mutant 650 in OpIterator.ts: Op.length replaced with this.ops.length
Mutant 651 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index - 1]
Mutant 652 in OpIterator.ts: op replaced with this.ops[this.index + 1]
Mutant 653 in OpIterator.ts: op replaced with this.ops[this.index - 1]
Mutant 654 in OpIterator.ts: op replaced with this.ops.filter(op => op.type === 'retain')[0]
Mutant 655 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'string'
Mutant 656 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== undefined
Mutant 657 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'object' && op.retain !== null && op.retain.length > 0
Mutant 658 in OpIterator.ts: !this.hasNext() replaced with this.index >= this.ops.length
Mutant 659 in OpIterator.ts: !this.hasNext() replaced with this.offset === Op.length(this.ops[this.index])
Mutant 660 in OpIterator.ts: !this.hasNext() replaced with this.peekType() === 'retain'
Mutant 661 in OpIterator.ts: this.hasNext replaced with this.index < this.ops.length
Mutant 662 in OpIterator.ts: this.offset === 0 replaced with this.offset > 0
Mutant 663 in OpIterator.ts: this.offset === 0 replaced with this.index.offset
Mutant 664 in OpIterator.ts: this.ops.slice replaced with this.ops.splice
Mutant 665 in OpIterator.ts: this.index replaced with this.index + 1
Mutant 666 in OpIterator.ts: this.index replaced with 0
Mutant 667 in OpIterator.ts: this.index replaced with this.ops.length
Mutant 668 in OpIterator.ts: this.next replaced with this.next - 1
Mutant 669 in OpIterator.ts: this.next replaced with this.ops[this.index + 1]
Mutant 670 in OpIterator.ts: this.ops.slice replaced with this.ops.splice
Mutant 671 in OpIterator.ts: this.ops.slice replaced with this.ops.concat
Mutant 672 in OpIterator.ts: this.ops.slice replaced with this.ops.filter
Mutant 673 in OpIterator.ts: this.index replaced with index + 1
Mutant 674 in OpIterator.ts: this.index replaced with this.index - 1
Mutant 675 in OpIterator.ts: this.index replaced with Math.floor(Math.random() * this.ops.length)
Mutant 676 in OpIterator.ts: [next].concat replaced with [next].slice
Mutant 677 in OpIterator.ts: rest replaced with this.ops.slice(this.index + 1)
Mutant 678 in OpIterator.ts: rest replaced with this.ops.slice(0, this.index)
Mutant 679 in OpIterator.ts: rest replaced with this.ops.filter(op => op !== this.ops[this.index])
[32m01:30:58 (2933) INFO Instrumenter[39m Instrumented 4 source file(s) with 680 mutant(s)
[32m01:30:58 (2933) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m01:31:00 (2933) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m01:31:00 (2933) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m01:31:05 (2933) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 4 seconds (net 4925 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~56m) 2/680 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~56m) 4/680 tested (3 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~56m) 6/680 tested (4 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~56m) 8/680 tested (4 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~55m) 10/680 tested (5 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~55m) 12/680 tested (5 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~55m) 14/680 tested (5 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~52m) 17/680 tested (6 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~52m) 19/680 tested (8 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~52m) 21/680 tested (9 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~52m) 23/680 tested (11 survived, 0 timed out)
Mutation testing 3% (elapsed: ~2m, remaining: ~52m) 25/680 tested (12 survived, 0 timed out)
Mutation testing 3% (elapsed: ~2m, remaining: ~52m) 27/680 tested (12 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~52m) 29/680 tested (12 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~52m) 31/680 tested (13 survived, 0 timed out)
Mutation testing 5% (elapsed: ~2m, remaining: ~50m) 34/680 tested (13 survived, 0 timed out)
Mutation testing 5% (elapsed: ~2m, remaining: ~50m) 36/680 tested (13 survived, 0 timed out)
Mutation testing 5% (elapsed: ~3m, remaining: ~50m) 38/680 tested (14 survived, 0 timed out)
Mutation testing 5% (elapsed: ~3m, remaining: ~50m) 40/680 tested (15 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~50m) 42/680 tested (15 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~50m) 44/680 tested (15 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~50m) 46/680 tested (15 survived, 0 timed out)
Mutation testing 7% (elapsed: ~3m, remaining: ~49m) 49/680 tested (15 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~49m) 51/680 tested (16 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~49m) 53/680 tested (16 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~49m) 55/680 tested (16 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~49m) 57/680 tested (17 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~49m) 59/680 tested (17 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~49m) 61/680 tested (17 survived, 0 timed out)
Mutation testing 9% (elapsed: ~5m, remaining: ~48m) 64/680 tested (18 survived, 0 timed out)
Mutation testing 9% (elapsed: ~5m, remaining: ~48m) 66/680 tested (20 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~48m) 68/680 tested (22 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~47m) 70/680 tested (23 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~47m) 72/680 tested (23 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~47m) 74/680 tested (23 survived, 0 timed out)
Mutation testing 11% (elapsed: ~6m, remaining: ~47m) 76/680 tested (23 survived, 0 timed out)
Mutation testing 11% (elapsed: ~6m, remaining: ~46m) 79/680 tested (23 survived, 0 timed out)
Mutation testing 11% (elapsed: ~6m, remaining: ~46m) 81/680 tested (23 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~46m) 83/680 tested (25 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~46m) 85/680 tested (26 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~46m) 87/680 tested (26 survived, 0 timed out)
Mutation testing 13% (elapsed: ~7m, remaining: ~46m) 89/680 tested (26 survived, 0 timed out)
Mutation testing 13% (elapsed: ~7m, remaining: ~46m) 91/680 tested (27 survived, 0 timed out)
Mutation testing 13% (elapsed: ~7m, remaining: ~45m) 94/680 tested (27 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~45m) 96/680 tested (27 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~45m) 98/680 tested (27 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~45m) 100/680 tested (28 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~45m) 102/680 tested (28 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~45m) 104/680 tested (28 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~45m) 106/680 tested (29 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~44m) 109/680 tested (29 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~44m) 111/680 tested (29 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~44m) 113/680 tested (29 survived, 0 timed out)
Mutation testing 16% (elapsed: ~9m, remaining: ~44m) 115/680 tested (29 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~44m) 117/680 tested (29 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~44m) 119/680 tested (29 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~43m) 121/680 tested (29 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~43m) 123/680 tested (29 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~43m) 126/680 tested (30 survived, 0 timed out)
Mutation testing 18% (elapsed: ~10m, remaining: ~43m) 128/680 tested (30 survived, 0 timed out)
Mutation testing 19% (elapsed: ~10m, remaining: ~43m) 130/680 tested (30 survived, 0 timed out)
Mutation testing 19% (elapsed: ~10m, remaining: ~42m) 132/680 tested (30 survived, 0 timed out)
Mutation testing 19% (elapsed: ~10m, remaining: ~42m) 134/680 tested (30 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~42m) 136/680 tested (31 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~42m) 138/680 tested (32 survived, 0 timed out)
Mutation testing 20% (elapsed: ~11m, remaining: ~42m) 140/680 tested (33 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~41m) 143/680 tested (36 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~41m) 145/680 tested (37 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~41m) 147/680 tested (37 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~41m) 149/680 tested (37 survived, 0 timed out)
Mutation testing 22% (elapsed: ~11m, remaining: ~41m) 151/680 tested (38 survived, 0 timed out)
Mutation testing 22% (elapsed: ~12m, remaining: ~41m) 153/680 tested (39 survived, 0 timed out)
Mutation testing 22% (elapsed: ~12m, remaining: ~41m) 155/680 tested (39 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~41m) 157/680 tested (40 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~40m) 160/680 tested (41 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~40m) 162/680 tested (41 survived, 0 timed out)
Mutation testing 24% (elapsed: ~12m, remaining: ~40m) 164/680 tested (41 survived, 0 timed out)
Mutation testing 24% (elapsed: ~13m, remaining: ~40m) 166/680 tested (41 survived, 0 timed out)
Mutation testing 24% (elapsed: ~13m, remaining: ~40m) 168/680 tested (42 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~40m) 170/680 tested (43 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~39m) 172/680 tested (43 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~39m) 174/680 tested (43 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~39m) 176/680 tested (43 survived, 0 timed out)
Mutation testing 26% (elapsed: ~14m, remaining: ~39m) 179/680 tested (45 survived, 0 timed out)
Mutation testing 26% (elapsed: ~14m, remaining: ~39m) 181/680 tested (46 survived, 0 timed out)
Mutation testing 26% (elapsed: ~14m, remaining: ~38m) 183/680 tested (46 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~38m) 185/680 tested (46 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~38m) 187/680 tested (46 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~38m) 189/680 tested (46 survived, 0 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~38m) 191/680 tested (46 survived, 0 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~38m) 192/680 tested (46 survived, 0 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~38m) 194/680 tested (47 survived, 1 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~38m) 194/680 tested (47 survived, 1 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~38m) 195/680 tested (47 survived, 2 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~38m) 197/680 tested (47 survived, 3 timed out)
Mutation testing 29% (elapsed: ~16m, remaining: ~38m) 199/680 tested (47 survived, 3 timed out)
Mutation testing 29% (elapsed: ~16m, remaining: ~38m) 201/680 tested (47 survived, 3 timed out)
Mutation testing 29% (elapsed: ~16m, remaining: ~38m) 202/680 tested (47 survived, 4 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~38m) 204/680 tested (47 survived, 4 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~38m) 206/680 tested (47 survived, 4 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~38m) 208/680 tested (47 survived, 4 timed out)
Mutation testing 30% (elapsed: ~17m, remaining: ~38m) 210/680 tested (48 survived, 4 timed out)
Mutation testing 31% (elapsed: ~17m, remaining: ~37m) 212/680 tested (48 survived, 4 timed out)
Mutation testing 31% (elapsed: ~17m, remaining: ~37m) 214/680 tested (48 survived, 4 timed out)
Mutation testing 31% (elapsed: ~17m, remaining: ~37m) 217/680 tested (48 survived, 4 timed out)
Mutation testing 32% (elapsed: ~17m, remaining: ~37m) 219/680 tested (48 survived, 4 timed out)
Mutation testing 32% (elapsed: ~17m, remaining: ~37m) 221/680 tested (48 survived, 4 timed out)
Mutation testing 32% (elapsed: ~18m, remaining: ~36m) 223/680 tested (48 survived, 4 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~36m) 225/680 tested (48 survived, 4 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~36m) 227/680 tested (49 survived, 4 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~36m) 228/680 tested (49 survived, 4 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~36m) 229/680 tested (49 survived, 5 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~36m) 230/680 tested (49 survived, 6 timed out)
Mutation testing 33% (elapsed: ~19m, remaining: ~36m) 231/680 tested (49 survived, 6 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~36m) 233/680 tested (50 survived, 7 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~37m) 233/680 tested (50 survived, 7 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~36m) 235/680 tested (50 survived, 8 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~37m) 236/680 tested (50 survived, 9 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~37m) 236/680 tested (50 survived, 9 timed out)
Mutation testing 34% (elapsed: ~20m, remaining: ~37m) 237/680 tested (50 survived, 10 timed out)
Mutation testing 35% (elapsed: ~20m, remaining: ~37m) 239/680 tested (51 survived, 11 timed out)
Mutation testing 35% (elapsed: ~20m, remaining: ~37m) 240/680 tested (51 survived, 12 timed out)
Mutation testing 35% (elapsed: ~20m, remaining: ~37m) 242/680 tested (51 survived, 12 timed out)
Mutation testing 35% (elapsed: ~20m, remaining: ~36m) 244/680 tested (51 survived, 12 timed out)
Mutation testing 36% (elapsed: ~20m, remaining: ~36m) 246/680 tested (51 survived, 12 timed out)
Mutation testing 36% (elapsed: ~21m, remaining: ~36m) 248/680 tested (51 survived, 12 timed out)
Mutation testing 36% (elapsed: ~21m, remaining: ~36m) 250/680 tested (51 survived, 12 timed out)
Mutation testing 37% (elapsed: ~21m, remaining: ~36m) 252/680 tested (51 survived, 12 timed out)
Mutation testing 37% (elapsed: ~21m, remaining: ~36m) 254/680 tested (51 survived, 12 timed out)
Mutation testing 37% (elapsed: ~21m, remaining: ~36m) 255/680 tested (51 survived, 13 timed out)
Mutation testing 37% (elapsed: ~21m, remaining: ~35m) 257/680 tested (51 survived, 13 timed out)
Mutation testing 37% (elapsed: ~22m, remaining: ~35m) 258/680 tested (51 survived, 13 timed out)
Mutation testing 38% (elapsed: ~22m, remaining: ~35m) 260/680 tested (51 survived, 14 timed out)
Mutation testing 38% (elapsed: ~22m, remaining: ~35m) 262/680 tested (51 survived, 14 timed out)
Mutation testing 38% (elapsed: ~22m, remaining: ~35m) 264/680 tested (52 survived, 14 timed out)
Mutation testing 39% (elapsed: ~22m, remaining: ~35m) 266/680 tested (52 survived, 14 timed out)
Mutation testing 39% (elapsed: ~22m, remaining: ~35m) 268/680 tested (52 survived, 14 timed out)
Mutation testing 39% (elapsed: ~23m, remaining: ~34m) 270/680 tested (52 survived, 14 timed out)
Mutation testing 40% (elapsed: ~23m, remaining: ~34m) 273/680 tested (53 survived, 14 timed out)
Mutation testing 40% (elapsed: ~23m, remaining: ~34m) 275/680 tested (53 survived, 14 timed out)
Mutation testing 40% (elapsed: ~23m, remaining: ~34m) 277/680 tested (53 survived, 14 timed out)
Mutation testing 41% (elapsed: ~23m, remaining: ~34m) 279/680 tested (53 survived, 14 timed out)
Mutation testing 41% (elapsed: ~23m, remaining: ~33m) 281/680 tested (53 survived, 14 timed out)
Mutation testing 41% (elapsed: ~24m, remaining: ~33m) 283/680 tested (53 survived, 14 timed out)
Mutation testing 41% (elapsed: ~24m, remaining: ~33m) 285/680 tested (54 survived, 14 timed out)
Mutation testing 42% (elapsed: ~24m, remaining: ~33m) 287/680 tested (55 survived, 14 timed out)
Mutation testing 42% (elapsed: ~24m, remaining: ~33m) 289/680 tested (57 survived, 14 timed out)
Mutation testing 42% (elapsed: ~24m, remaining: ~32m) 292/680 tested (60 survived, 14 timed out)
Mutation testing 43% (elapsed: ~24m, remaining: ~32m) 294/680 tested (61 survived, 14 timed out)
Mutation testing 43% (elapsed: ~25m, remaining: ~32m) 296/680 tested (61 survived, 14 timed out)
Mutation testing 43% (elapsed: ~25m, remaining: ~32m) 298/680 tested (62 survived, 14 timed out)
Mutation testing 44% (elapsed: ~25m, remaining: ~32m) 300/680 tested (62 survived, 14 timed out)
Mutation testing 44% (elapsed: ~25m, remaining: ~31m) 302/680 tested (62 survived, 14 timed out)
Mutation testing 44% (elapsed: ~25m, remaining: ~31m) 305/680 tested (62 survived, 14 timed out)
Mutation testing 45% (elapsed: ~25m, remaining: ~31m) 307/680 tested (63 survived, 14 timed out)
Mutation testing 45% (elapsed: ~26m, remaining: ~31m) 309/680 tested (64 survived, 14 timed out)
Mutation testing 45% (elapsed: ~26m, remaining: ~31m) 311/680 tested (66 survived, 14 timed out)
Mutation testing 46% (elapsed: ~26m, remaining: ~30m) 313/680 tested (66 survived, 14 timed out)
Mutation testing 46% (elapsed: ~26m, remaining: ~30m) 315/680 tested (66 survived, 14 timed out)
Mutation testing 46% (elapsed: ~26m, remaining: ~30m) 317/680 tested (66 survived, 14 timed out)
Mutation testing 46% (elapsed: ~26m, remaining: ~30m) 319/680 tested (68 survived, 14 timed out)
Mutation testing 47% (elapsed: ~27m, remaining: ~30m) 322/680 tested (70 survived, 14 timed out)
Mutation testing 47% (elapsed: ~27m, remaining: ~29m) 324/680 tested (70 survived, 14 timed out)
Mutation testing 47% (elapsed: ~27m, remaining: ~29m) 326/680 tested (70 survived, 14 timed out)
Mutation testing 48% (elapsed: ~27m, remaining: ~29m) 328/680 tested (70 survived, 14 timed out)
Mutation testing 48% (elapsed: ~27m, remaining: ~29m) 330/680 tested (70 survived, 14 timed out)
Mutation testing 48% (elapsed: ~27m, remaining: ~29m) 332/680 tested (71 survived, 14 timed out)
Mutation testing 48% (elapsed: ~28m, remaining: ~29m) 333/680 tested (72 survived, 14 timed out)
Mutation testing 49% (elapsed: ~28m, remaining: ~29m) 334/680 tested (72 survived, 15 timed out)
Mutation testing 49% (elapsed: ~28m, remaining: ~29m) 335/680 tested (72 survived, 16 timed out)
Mutation testing 49% (elapsed: ~28m, remaining: ~29m) 337/680 tested (72 survived, 16 timed out)
Mutation testing 50% (elapsed: ~28m, remaining: ~28m) 340/680 tested (73 survived, 16 timed out)
Mutation testing 50% (elapsed: ~28m, remaining: ~28m) 342/680 tested (74 survived, 16 timed out)
Mutation testing 50% (elapsed: ~29m, remaining: ~28m) 343/680 tested (75 survived, 16 timed out)
Mutation testing 50% (elapsed: ~29m, remaining: ~28m) 344/680 tested (75 survived, 17 timed out)
Mutation testing 50% (elapsed: ~29m, remaining: ~28m) 346/680 tested (77 survived, 17 timed out)
Mutation testing 51% (elapsed: ~29m, remaining: ~28m) 347/680 tested (77 survived, 18 timed out)
Mutation testing 51% (elapsed: ~29m, remaining: ~28m) 349/680 tested (78 survived, 18 timed out)
Mutation testing 51% (elapsed: ~29m, remaining: ~27m) 351/680 tested (78 survived, 18 timed out)
Mutation testing 51% (elapsed: ~30m, remaining: ~27m) 353/680 tested (79 survived, 18 timed out)
Mutation testing 52% (elapsed: ~30m, remaining: ~27m) 355/680 tested (79 survived, 18 timed out)
Mutation testing 52% (elapsed: ~30m, remaining: ~27m) 356/680 tested (79 survived, 18 timed out)
Mutation testing 52% (elapsed: ~30m, remaining: ~27m) 358/680 tested (79 survived, 19 timed out)
Mutation testing 52% (elapsed: ~30m, remaining: ~27m) 360/680 tested (79 survived, 19 timed out)
Mutation testing 53% (elapsed: ~30m, remaining: ~27m) 362/680 tested (80 survived, 19 timed out)
Mutation testing 53% (elapsed: ~31m, remaining: ~26m) 364/680 tested (80 survived, 19 timed out)
Mutation testing 53% (elapsed: ~31m, remaining: ~26m) 367/680 tested (80 survived, 19 timed out)
Mutation testing 54% (elapsed: ~31m, remaining: ~26m) 369/680 tested (80 survived, 19 timed out)
Mutation testing 54% (elapsed: ~31m, remaining: ~26m) 371/680 tested (82 survived, 19 timed out)
Mutation testing 54% (elapsed: ~31m, remaining: ~26m) 373/680 tested (82 survived, 19 timed out)
Mutation testing 55% (elapsed: ~31m, remaining: ~25m) 375/680 tested (82 survived, 19 timed out)
Mutation testing 55% (elapsed: ~32m, remaining: ~25m) 377/680 tested (82 survived, 19 timed out)
Mutation testing 55% (elapsed: ~32m, remaining: ~25m) 379/680 tested (82 survived, 19 timed out)
Mutation testing 56% (elapsed: ~32m, remaining: ~25m) 381/680 tested (82 survived, 19 timed out)
Mutation testing 56% (elapsed: ~32m, remaining: ~25m) 384/680 tested (84 survived, 19 timed out)
Mutation testing 56% (elapsed: ~32m, remaining: ~24m) 386/680 tested (86 survived, 19 timed out)
Mutation testing 57% (elapsed: ~32m, remaining: ~24m) 388/680 tested (87 survived, 19 timed out)
Mutation testing 57% (elapsed: ~33m, remaining: ~24m) 390/680 tested (87 survived, 19 timed out)
Mutation testing 57% (elapsed: ~33m, remaining: ~24m) 392/680 tested (87 survived, 19 timed out)
Mutation testing 57% (elapsed: ~33m, remaining: ~24m) 394/680 tested (87 survived, 19 timed out)
Mutation testing 58% (elapsed: ~33m, remaining: ~24m) 396/680 tested (87 survived, 19 timed out)
Mutation testing 58% (elapsed: ~33m, remaining: ~23m) 399/680 tested (87 survived, 19 timed out)
Mutation testing 58% (elapsed: ~33m, remaining: ~23m) 401/680 tested (87 survived, 19 timed out)
Mutation testing 59% (elapsed: ~34m, remaining: ~23m) 403/680 tested (88 survived, 19 timed out)
Mutation testing 59% (elapsed: ~34m, remaining: ~23m) 405/680 tested (88 survived, 19 timed out)
Mutation testing 59% (elapsed: ~34m, remaining: ~23m) 407/680 tested (88 survived, 19 timed out)
Mutation testing 60% (elapsed: ~34m, remaining: ~22m) 409/680 tested (88 survived, 19 timed out)
Mutation testing 60% (elapsed: ~34m, remaining: ~22m) 411/680 tested (88 survived, 19 timed out)
Mutation testing 60% (elapsed: ~34m, remaining: ~22m) 414/680 tested (88 survived, 19 timed out)
Mutation testing 61% (elapsed: ~35m, remaining: ~22m) 416/680 tested (88 survived, 19 timed out)
Mutation testing 61% (elapsed: ~35m, remaining: ~22m) 418/680 tested (88 survived, 19 timed out)
Mutation testing 61% (elapsed: ~35m, remaining: ~21m) 420/680 tested (89 survived, 19 timed out)
Mutation testing 62% (elapsed: ~35m, remaining: ~21m) 422/680 tested (90 survived, 19 timed out)
Mutation testing 62% (elapsed: ~35m, remaining: ~21m) 423/680 tested (90 survived, 19 timed out)
Mutation testing 62% (elapsed: ~35m, remaining: ~21m) 425/680 tested (90 survived, 20 timed out)
Mutation testing 62% (elapsed: ~36m, remaining: ~21m) 427/680 tested (90 survived, 20 timed out)
Mutation testing 63% (elapsed: ~36m, remaining: ~21m) 429/680 tested (90 survived, 20 timed out)
Mutation testing 63% (elapsed: ~36m, remaining: ~20m) 431/680 tested (90 survived, 20 timed out)
Mutation testing 63% (elapsed: ~36m, remaining: ~20m) 433/680 tested (90 survived, 20 timed out)
Mutation testing 63% (elapsed: ~36m, remaining: ~20m) 434/680 tested (90 survived, 21 timed out)
Mutation testing 63% (elapsed: ~36m, remaining: ~20m) 434/680 tested (90 survived, 21 timed out)
Mutation testing 64% (elapsed: ~37m, remaining: ~20m) 436/680 tested (90 survived, 22 timed out)
Mutation testing 64% (elapsed: ~37m, remaining: ~20m) 439/680 tested (90 survived, 22 timed out)
Mutation testing 64% (elapsed: ~37m, remaining: ~20m) 441/680 tested (90 survived, 22 timed out)
Mutation testing 65% (elapsed: ~37m, remaining: ~20m) 443/680 tested (90 survived, 22 timed out)
Mutation testing 65% (elapsed: ~37m, remaining: ~19m) 445/680 tested (90 survived, 22 timed out)
Mutation testing 65% (elapsed: ~37m, remaining: ~19m) 447/680 tested (90 survived, 22 timed out)
Mutation testing 66% (elapsed: ~38m, remaining: ~19m) 449/680 tested (90 survived, 22 timed out)
Mutation testing 66% (elapsed: ~38m, remaining: ~19m) 451/680 tested (90 survived, 22 timed out)
Mutation testing 66% (elapsed: ~38m, remaining: ~19m) 453/680 tested (90 survived, 22 timed out)
Mutation testing 67% (elapsed: ~38m, remaining: ~18m) 456/680 tested (90 survived, 22 timed out)
Mutation testing 67% (elapsed: ~38m, remaining: ~18m) 458/680 tested (90 survived, 22 timed out)
Mutation testing 67% (elapsed: ~38m, remaining: ~18m) 460/680 tested (91 survived, 22 timed out)
Mutation testing 67% (elapsed: ~39m, remaining: ~18m) 462/680 tested (91 survived, 22 timed out)
Mutation testing 68% (elapsed: ~39m, remaining: ~18m) 464/680 tested (91 survived, 22 timed out)
Mutation testing 68% (elapsed: ~39m, remaining: ~18m) 466/680 tested (92 survived, 22 timed out)
Mutation testing 68% (elapsed: ~39m, remaining: ~17m) 468/680 tested (92 survived, 22 timed out)
Mutation testing 69% (elapsed: ~39m, remaining: ~17m) 471/680 tested (95 survived, 22 timed out)
Mutation testing 69% (elapsed: ~39m, remaining: ~17m) 473/680 tested (95 survived, 22 timed out)
Mutation testing 69% (elapsed: ~40m, remaining: ~17m) 475/680 tested (95 survived, 22 timed out)
Mutation testing 70% (elapsed: ~40m, remaining: ~17m) 477/680 tested (95 survived, 22 timed out)
Mutation testing 70% (elapsed: ~40m, remaining: ~16m) 479/680 tested (95 survived, 22 timed out)
Mutation testing 70% (elapsed: ~40m, remaining: ~16m) 481/680 tested (95 survived, 22 timed out)
Mutation testing 71% (elapsed: ~40m, remaining: ~16m) 483/680 tested (95 survived, 22 timed out)
Mutation testing 71% (elapsed: ~40m, remaining: ~16m) 486/680 tested (98 survived, 22 timed out)
Mutation testing 71% (elapsed: ~41m, remaining: ~16m) 488/680 tested (98 survived, 22 timed out)
Mutation testing 72% (elapsed: ~41m, remaining: ~15m) 490/680 tested (98 survived, 22 timed out)
Mutation testing 72% (elapsed: ~41m, remaining: ~15m) 492/680 tested (98 survived, 22 timed out)
Mutation testing 72% (elapsed: ~41m, remaining: ~15m) 494/680 tested (98 survived, 22 timed out)
Mutation testing 72% (elapsed: ~41m, remaining: ~15m) 496/680 tested (99 survived, 22 timed out)
Mutation testing 73% (elapsed: ~41m, remaining: ~15m) 499/680 tested (100 survived, 22 timed out)
Mutation testing 73% (elapsed: ~42m, remaining: ~15m) 501/680 tested (100 survived, 22 timed out)
Mutation testing 73% (elapsed: ~42m, remaining: ~14m) 503/680 tested (100 survived, 22 timed out)
Mutation testing 74% (elapsed: ~42m, remaining: ~14m) 505/680 tested (100 survived, 22 timed out)
Mutation testing 74% (elapsed: ~42m, remaining: ~14m) 507/680 tested (100 survived, 22 timed out)
Mutation testing 74% (elapsed: ~42m, remaining: ~14m) 509/680 tested (100 survived, 22 timed out)
Mutation testing 75% (elapsed: ~42m, remaining: ~14m) 511/680 tested (100 survived, 22 timed out)
Mutation testing 75% (elapsed: ~43m, remaining: ~13m) 513/680 tested (100 survived, 22 timed out)
Mutation testing 75% (elapsed: ~43m, remaining: ~13m) 516/680 tested (100 survived, 22 timed out)
Mutation testing 76% (elapsed: ~43m, remaining: ~13m) 518/680 tested (100 survived, 22 timed out)
Mutation testing 76% (elapsed: ~43m, remaining: ~13m) 520/680 tested (100 survived, 22 timed out)
Mutation testing 76% (elapsed: ~43m, remaining: ~13m) 522/680 tested (100 survived, 22 timed out)
Mutation testing 77% (elapsed: ~43m, remaining: ~13m) 524/680 tested (100 survived, 22 timed out)
Mutation testing 77% (elapsed: ~44m, remaining: ~12m) 526/680 tested (100 survived, 22 timed out)
Mutation testing 77% (elapsed: ~44m, remaining: ~12m) 528/680 tested (100 survived, 22 timed out)
Mutation testing 78% (elapsed: ~44m, remaining: ~12m) 531/680 tested (100 survived, 22 timed out)
Mutation testing 78% (elapsed: ~44m, remaining: ~12m) 532/680 tested (100 survived, 22 timed out)
Mutation testing 78% (elapsed: ~44m, remaining: ~12m) 533/680 tested (100 survived, 23 timed out)
Mutation testing 78% (elapsed: ~44m, remaining: ~12m) 534/680 tested (101 survived, 23 timed out)
Mutation testing 78% (elapsed: ~45m, remaining: ~12m) 536/680 tested (101 survived, 24 timed out)
Mutation testing 79% (elapsed: ~45m, remaining: ~11m) 538/680 tested (101 survived, 24 timed out)
Mutation testing 79% (elapsed: ~45m, remaining: ~11m) 540/680 tested (102 survived, 24 timed out)
Mutation testing 79% (elapsed: ~45m, remaining: ~11m) 541/680 tested (102 survived, 24 timed out)
Mutation testing 79% (elapsed: ~45m, remaining: ~11m) 542/680 tested (102 survived, 25 timed out)
Mutation testing 79% (elapsed: ~45m, remaining: ~11m) 543/680 tested (102 survived, 26 timed out)
Mutation testing 80% (elapsed: ~46m, remaining: ~11m) 544/680 tested (102 survived, 27 timed out)
Mutation testing 80% (elapsed: ~46m, remaining: ~11m) 546/680 tested (102 survived, 27 timed out)
Mutation testing 80% (elapsed: ~46m, remaining: ~11m) 546/680 tested (102 survived, 27 timed out)
Mutation testing 80% (elapsed: ~46m, remaining: ~11m) 548/680 tested (103 survived, 28 timed out)
Mutation testing 80% (elapsed: ~46m, remaining: ~11m) 550/680 tested (104 survived, 28 timed out)
Mutation testing 81% (elapsed: ~46m, remaining: ~10m) 551/680 tested (104 survived, 29 timed out)
Mutation testing 81% (elapsed: ~47m, remaining: ~10m) 553/680 tested (104 survived, 29 timed out)
Mutation testing 81% (elapsed: ~47m, remaining: ~10m) 555/680 tested (104 survived, 29 timed out)
Mutation testing 81% (elapsed: ~47m, remaining: ~10m) 557/680 tested (104 survived, 29 timed out)
Mutation testing 82% (elapsed: ~47m, remaining: ~10m) 559/680 tested (104 survived, 29 timed out)
Mutation testing 82% (elapsed: ~47m, remaining: ~10m) 561/680 tested (104 survived, 29 timed out)
Mutation testing 82% (elapsed: ~47m, remaining: ~9m) 564/680 tested (104 survived, 29 timed out)
Mutation testing 83% (elapsed: ~48m, remaining: ~9m) 566/680 tested (104 survived, 29 timed out)
Mutation testing 83% (elapsed: ~48m, remaining: ~9m) 568/680 tested (104 survived, 29 timed out)
Mutation testing 83% (elapsed: ~48m, remaining: ~9m) 570/680 tested (104 survived, 29 timed out)
Mutation testing 84% (elapsed: ~48m, remaining: ~9m) 572/680 tested (104 survived, 29 timed out)
Mutation testing 84% (elapsed: ~48m, remaining: ~8m) 574/680 tested (104 survived, 29 timed out)
Mutation testing 84% (elapsed: ~48m, remaining: ~8m) 576/680 tested (105 survived, 29 timed out)
Mutation testing 85% (elapsed: ~49m, remaining: ~8m) 578/680 tested (106 survived, 29 timed out)
Mutation testing 85% (elapsed: ~49m, remaining: ~8m) 581/680 tested (106 survived, 29 timed out)
Mutation testing 85% (elapsed: ~49m, remaining: ~8m) 583/680 tested (106 survived, 29 timed out)
Mutation testing 86% (elapsed: ~49m, remaining: ~8m) 585/680 tested (107 survived, 29 timed out)
Mutation testing 86% (elapsed: ~49m, remaining: ~7m) 587/680 tested (109 survived, 29 timed out)
Mutation testing 86% (elapsed: ~49m, remaining: ~7m) 589/680 tested (109 survived, 29 timed out)
Mutation testing 86% (elapsed: ~50m, remaining: ~7m) 591/680 tested (109 survived, 29 timed out)
Mutation testing 87% (elapsed: ~50m, remaining: ~7m) 593/680 tested (109 survived, 29 timed out)
Mutation testing 87% (elapsed: ~50m, remaining: ~7m) 595/680 tested (109 survived, 29 timed out)
Mutation testing 87% (elapsed: ~50m, remaining: ~6m) 598/680 tested (109 survived, 29 timed out)
Mutation testing 88% (elapsed: ~50m, remaining: ~6m) 600/680 tested (109 survived, 29 timed out)
Mutation testing 88% (elapsed: ~50m, remaining: ~6m) 602/680 tested (109 survived, 29 timed out)
Mutation testing 88% (elapsed: ~51m, remaining: ~6m) 604/680 tested (111 survived, 29 timed out)
Mutation testing 89% (elapsed: ~51m, remaining: ~6m) 606/680 tested (112 survived, 29 timed out)
Mutation testing 89% (elapsed: ~51m, remaining: ~6m) 607/680 tested (112 survived, 30 timed out)
Mutation testing 89% (elapsed: ~51m, remaining: ~6m) 607/680 tested (112 survived, 30 timed out)
Mutation testing 89% (elapsed: ~51m, remaining: ~6m) 609/680 tested (113 survived, 31 timed out)
Mutation testing 90% (elapsed: ~51m, remaining: ~5m) 612/680 tested (115 survived, 31 timed out)
Mutation testing 90% (elapsed: ~52m, remaining: ~5m) 613/680 tested (115 survived, 31 timed out)
Mutation testing 90% (elapsed: ~52m, remaining: ~5m) 614/680 tested (115 survived, 32 timed out)
Mutation testing 90% (elapsed: ~52m, remaining: ~5m) 615/680 tested (115 survived, 33 timed out)
Mutation testing 90% (elapsed: ~52m, remaining: ~5m) 616/680 tested (116 survived, 33 timed out)
Mutation testing 90% (elapsed: ~52m, remaining: ~5m) 617/680 tested (116 survived, 34 timed out)
Mutation testing 90% (elapsed: ~52m, remaining: ~5m) 618/680 tested (116 survived, 35 timed out)
Mutation testing 90% (elapsed: ~53m, remaining: ~5m) 618/680 tested (116 survived, 35 timed out)
Mutation testing 91% (elapsed: ~53m, remaining: ~5m) 620/680 tested (116 survived, 36 timed out)
Mutation testing 91% (elapsed: ~53m, remaining: ~4m) 622/680 tested (116 survived, 36 timed out)
Mutation testing 91% (elapsed: ~53m, remaining: ~4m) 625/680 tested (117 survived, 36 timed out)
Mutation testing 92% (elapsed: ~53m, remaining: ~4m) 627/680 tested (117 survived, 36 timed out)
Mutation testing 92% (elapsed: ~53m, remaining: ~4m) 629/680 tested (119 survived, 36 timed out)
Mutation testing 92% (elapsed: ~54m, remaining: ~4m) 631/680 tested (120 survived, 36 timed out)
Mutation testing 93% (elapsed: ~54m, remaining: ~4m) 633/680 tested (120 survived, 36 timed out)
Mutation testing 93% (elapsed: ~54m, remaining: ~3m) 635/680 tested (121 survived, 36 timed out)
Mutation testing 93% (elapsed: ~54m, remaining: ~3m) 637/680 tested (122 survived, 36 timed out)
Mutation testing 94% (elapsed: ~54m, remaining: ~3m) 640/680 tested (122 survived, 36 timed out)
Mutation testing 94% (elapsed: ~54m, remaining: ~3m) 642/680 tested (122 survived, 36 timed out)
Mutation testing 94% (elapsed: ~55m, remaining: ~3m) 644/680 tested (122 survived, 36 timed out)
Mutation testing 95% (elapsed: ~55m, remaining: ~2m) 646/680 tested (122 survived, 36 timed out)
Mutation testing 95% (elapsed: ~55m, remaining: ~2m) 648/680 tested (122 survived, 36 timed out)
Mutation testing 95% (elapsed: ~55m, remaining: ~2m) 650/680 tested (122 survived, 36 timed out)
Mutation testing 95% (elapsed: ~55m, remaining: ~2m) 652/680 tested (122 survived, 36 timed out)
Mutation testing 96% (elapsed: ~55m, remaining: ~2m) 654/680 tested (122 survived, 36 timed out)
Mutation testing 96% (elapsed: ~56m, remaining: ~1m) 657/680 tested (123 survived, 36 timed out)
Mutation testing 96% (elapsed: ~56m, remaining: ~1m) 659/680 tested (124 survived, 36 timed out)
Mutation testing 97% (elapsed: ~56m, remaining: ~1m) 661/680 tested (124 survived, 36 timed out)
Mutation testing 97% (elapsed: ~56m, remaining: ~1m) 663/680 tested (124 survived, 36 timed out)
Mutation testing 97% (elapsed: ~56m, remaining: ~1m) 665/680 tested (125 survived, 36 timed out)
Mutation testing 98% (elapsed: ~56m, remaining: ~1m) 667/680 tested (125 survived, 36 timed out)
Mutation testing 98% (elapsed: ~57m, remaining: <1m) 670/680 tested (125 survived, 36 timed out)
Mutation testing 98% (elapsed: ~57m, remaining: <1m) 672/680 tested (125 survived, 36 timed out)
Mutation testing 99% (elapsed: ~57m, remaining: <1m) 674/680 tested (126 survived, 36 timed out)
Mutation testing 99% (elapsed: ~57m, remaining: <1m) 676/680 tested (126 survived, 36 timed out)
Mutation testing 99% (elapsed: ~57m, remaining: <1m) 678/680 tested (127 survived, 36 timed out)

All tests
  ✓ All tests (killed 516)

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (a === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (Array.isArray(a)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (b === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (Array.isArray(b)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:20:32
-       let attributes = cloneDeep(b);
+       let attributes = cloneDeep(Object.assign({}, a, b));

[Survived] PrecomputedMutator
src/AttributeMap.ts:30:11
-         if (a[key] !== undefined && b[key] === undefined) {
+         if (a[key] !== null && b[key] === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:34:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(attributes || undefined).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/AttributeMap.ts:34:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(Object.assign({}, attributes)).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/AttributeMap.ts:41:9
-       if (typeof a !== 'object') {
+       if (a === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:41:9
-       if (typeof a !== 'object') {
+       if (Array.isArray(a)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (b === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (Array.isArray(b)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:48:27
-         .concat(Object.keys(b))
+         .concat(Object.keys(b || []))

[Survived] PrecomputedMutator
src/AttributeMap.ts:50:30
-           if (!isEqual(a[key], b[key])) {
+           if (!isEqual(a[key], b[key] || {})) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:55:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(Object.assign({}, attributes)).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/AttributeMap.ts:70:11
-         if (attr[key] !== base[key] && base[key] === undefined) {
+         if (attr[key] !== undefined && base[key] === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:85:9
-       if (typeof b !== 'object') {
+       if (b === undefined || typeof b !== 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:8:24
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCodePoint(0); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(1); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(String.fromCharCode(Math.floor(Math.random() * 256))); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(String.fromCharCode(0x7F)); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:20:7
-     if (typeof a !== 'object' || a === null) {
+     if (typeof a !== 'object' && a !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:20:7
-     if (typeof a !== 'object' || a === null) {
+     if (typeof a !== 'object' || a === true) {

[Survived] PrecomputedMutator
src/Delta.ts:29:63
-         `embed types not matched: ${embedType} != ${Object.keys(b)[0]}`,
+         `embed types not matched: ${embedType} != ${Object.keys(JSON.parse(JSON.stringify(b)))[0]}`,

[Survived] PrecomputedMutator
src/Delta.ts:51:9
-       if (!handler) {
+       if (typeof handler === 'undefined') {

[Survived] PrecomputedMutator
src/Delta.ts:60:9
-       if (Array.isArray(ops)) {
+       if (ops instanceof Array) {

[Survived] PrecomputedMutator
src/Delta.ts:62:16
-       } else if (ops != null && Array.isArray(ops.ops)) {
+       } else if (ops !== undefined && Array.isArray(ops.ops)) {

[Survived] PrecomputedMutator
src/Delta.ts:81:19
-         Object.keys(attributes).length > 0
+         Object.keys(attributes || {}).length > 0

[Survived] PrecomputedMutator
src/Delta.ts:89:9
-       if (length <= 0) {
+       if (length === 0) {

[Survived] PrecomputedMutator
src/Delta.ts:135:11
-         if (isEqual(newOp.attributes, lastOp.attributes)) {
+         if (JSON.stringify(newOp.attributes) === JSON.stringify(lastOp.attributes)) {

[Survived] PrecomputedMutator
src/Delta.ts:141:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.attributes !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:141:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.hasOwnProperty('attributes')) {

[Survived] PrecomputedMutator
src/Delta.ts:146:11
-             typeof newOp.retain === 'number' &&
-             typeof lastOp.retain === 'number'
+             typeof newOp.retain === 'number' && 'retain' in lastOp

[Survived] PrecomputedMutator
src/Delta.ts:150:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.attributes !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:150:15
-             if (typeof newOp.attributes === 'object') {
+             if (typeof newOp.attributes !== 'undefined') {

[Survived] PrecomputedMutator
src/Delta.ts:157:9
-       if (index === this.ops.length) {
+       if (index >= this.ops.length) {

[Survived] PrecomputedMutator
src/Delta.ts:157:9
-       if (index === this.ops.length) {
+       if (index > this.ops.length) {

[Survived] PrecomputedMutator
src/Delta.ts:160:7
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, '0', newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:7
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, -1, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:23
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(-1, 0, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:30
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, -1, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:178:22
-       this.ops.forEach(predicate);
+       this.ops.forEach((op, index) => predicate(op));

[Survived] PrecomputedMutator
src/Delta.ts:189:32
-         const target = predicate(op) ? passed : failed;
+         const target = predicate(op || {}) ? passed : failed;

[Survived] PrecomputedMutator
src/Delta.ts:199:39
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, 0);

[Survived] PrecomputedMutator
src/Delta.ts:199:39
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, null);

[Survived] PrecomputedMutator
src/Delta.ts:204:11
-         if (elem.insert) {
+         if (elem['insert']) {

[Survived] PrecomputedMutator
src/Delta.ts:223:12
-       while (index < end && iter.hasNext()) {
+       while (index < end && iter.peek() !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:242:7
-         firstOther != null &&
-         typeof firstOther.retain === 'number' &&
-         firstOther.attributes == null
+         firstOther?.retain !== undefined && firstOther.attributes === null

[Survived] PrecomputedMutator
src/Delta.ts:259:12
-       while (thisIter.hasNext() || otherIter.hasNext()) {
+       while (thisIter.peek() !== null || otherIter.peek() !== null) {

[Survived] PrecomputedMutator
src/Delta.ts:261:20
-           delta.push(otherIter.next());
+           delta.push(otherIter.next(0));

[Survived] PrecomputedMutator
src/Delta.ts:263:20
-           delta.push(thisIter.next());
+           delta.push(thisIter.next(0));

[Survived] PrecomputedMutator
src/Delta.ts:268:13
-           if (otherOp.retain) {
+           if (otherOp.retain || 0) {

[Survived] PrecomputedMutator
src/Delta.ts:275:19
-                 if (thisOp.retain == null) {
+                 if (thisOp.retain === undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:309:13
-               !otherIter.hasNext() &&
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               thisIter.peekLength() === 0

[Survived] PrecomputedMutator
src/Delta.ts:309:13
-               !otherIter.hasNext() &&
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 2], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(newOp, delta.ops[delta.ops.length - 1])

[Survived] PrecomputedMutator
src/Delta.ts:310:21
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:54
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 1], {})

[Survived] PrecomputedMutator
src/Delta.ts:310:54
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 1], null)

[Survived] PrecomputedMutator
src/Delta.ts:310:54
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 1], thisOp)

[Survived] PrecomputedMutator
src/Delta.ts:313:33
-               return delta.concat(rest).chop();
+               return delta.concat(new Delta(thisIter.rest())).chop();

[Survived] PrecomputedMutator
src/Delta.ts:331:29
-       const delta = new Delta(this.ops.slice());
+       const delta = new Delta(this.ops.concat());

[Survived] PrecomputedMutator
src/Delta.ts:332:9
-       if (other.ops.length > 0) {
+       if (other.ops.length >= 1) {

[Survived] PrecomputedMutator
src/Delta.ts:332:9
-       if (other.ops.length > 0) {
+       if (other.ops.length !== 0) {

[Survived] PrecomputedMutator
src/Delta.ts:332:9
-       if (other.ops.length > 0) {
+       if (Array.isArray(other.ops) && other.ops.length > 0) {

[Survived] PrecomputedMutator
src/Delta.ts:340:9
-       if (this.ops === other.ops) {
+       if (this.ops[0] === other.ops[0]) {

[Survived] PrecomputedMutator
src/Delta.ts:340:9
-       if (this.ops === other.ops) {
+       if (JSON.stringify(this.ops) === JSON.stringify(other.ops)) {

[Survived] PrecomputedMutator
src/Delta.ts:346:15
-             if (op.insert != null) {
+             if (op.insert !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:346:15
-             if (op.insert != null) {
+             if (op.hasOwnProperty('insert')) {

[Survived] PrecomputedMutator
src/Delta.ts:355:53
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], null);

[Survived] PrecomputedMutator
src/Delta.ts:360:14
-         while (length > 0) {
+         while (length >= 1) {

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peek(), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength() * 2, length);

[Survived] PrecomputedMutator
src/Delta.ts:364:33
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(thisIter.peekLength(), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:33
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(Math.max(thisIter.peekLength(), otherIter.peekLength()), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), thisIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), Infinity);

[Survived] PrecomputedMutator
src/Delta.ts:368:24
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(1);

[Survived] PrecomputedMutator
src/Delta.ts:368:41
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, 10);

[Survived] PrecomputedMutator
src/Delta.ts:378:42
-               const thisOp = thisIter.next(opLength);
+               const thisOp = thisIter.next(Math.max(opLength, 1));

[Survived] PrecomputedMutator
src/Delta.ts:378:42
-               const thisOp = thisIter.next(opLength);
+               const thisOp = thisIter.next(otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:380:25
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert || '', otherOp.insert)) {

[Survived] PrecomputedMutator
src/Delta.ts:380:25
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp['insert'], otherOp.insert)) {

[Survived] PrecomputedMutator
src/Delta.ts:380:40
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert, otherOp.insert || '')) {

[Survived] PrecomputedMutator
src/Delta.ts:380:40
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert, otherOp.insert ?? '<REPLACEMENT_VALUE>')) {

[Survived] PrecomputedMutator
src/Delta.ts:380:40
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert, otherOp.hasOwnProperty('insert') ? otherOp.insert : '<REPLACEMENT_VALUE>')) {

[Survived] PrecomputedMutator
src/Delta.ts:408:11
-         if (iter.peekType() !== 'insert') {
+         if (iter.peekType() === 'retain') {

[Survived] PrecomputedMutator
src/Delta.ts:417:11
-         if (index < 0) {
+         if (index <= -1) {

[Survived] PrecomputedMutator
src/Delta.ts:418:19
-           line.push(iter.next());
+           line.push(iter.next(1));

[Survived] PrecomputedMutator
src/Delta.ts:437:11
-         if (op.insert) {
+         if (op.insert || '') {

[Survived] PrecomputedMutator
src/Delta.ts:439:18
-         } else if (typeof op.retain === 'number' && op.attributes == null) {
+         } else if (typeof op.retain === 'number' && op.attributes === undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:440:25
-           inverted.retain(op.retain);
+           inverted.retain(op.retain || 0);

[Survived] PrecomputedMutator
src/Delta.ts:440:25
-           inverted.retain(op.retain);
+           inverted.retain(op.retain ?? 0);

[Survived] PrecomputedMutator
src/Delta.ts:440:25
-           inverted.retain(op.retain);
+           inverted.retain(this.ops[0].retain);

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.retain && op.attributes || {}) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.retain !== undefined && op.attributes) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.attributes || op.retain) {

[Survived] PrecomputedMutator
src/Delta.ts:456:18
-         } else if (typeof op.retain === 'object' && op.retain !== null) {
+         } else if (op.retain !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:456:18
-         } else if (typeof op.retain === 'object' && op.retain !== null) {
+         } else if (op.retain && typeof op.retain === 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:486:12
-       while (thisIter.hasNext() || otherIter.hasNext()) {
+       while (otherIter.peek() !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:489:22
-           (priority || otherIter.peekType() !== 'insert')
+           (priority || otherIter['peekType']() !== 'insert')

[Survived] PrecomputedMutator
src/Delta.ts:491:32
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter.next(0)));

[Survived] PrecomputedMutator
src/Delta.ts:491:32
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter['next']()));

[Survived] PrecomputedMutator
src/Delta.ts:511:13
-               typeof thisData === 'object' &&
-               thisData !== null &&
-               typeof otherData === 'object' &&
-               otherData !== null
+               Object.keys(thisData).length > 0 && Object.keys(otherData).length > 0

[Survived] PrecomputedMutator
src/Delta.ts:516:43
-               const embedType = Object.keys(thisData)[0];
+               const embedType = Object.keys(thisData || {})[0];

[Survived] PrecomputedMutator
src/Delta.ts:519:19
-                 if (handler) {
+                 if (handler.transform(thisData[embedType], otherData[embedType], !priority)) {

[Survived] PrecomputedMutator
src/Delta.ts:519:19
-                 if (handler) {
+                 if (handler['transform'](thisData[embedType], otherData[embedType], priority)) {

[Survived] PrecomputedMutator
src/Delta.ts:519:19
-                 if (handler) {
+                 if (handler.invert(thisData[embedType], otherData[embedType])) {

[Survived] PrecomputedMutator
src/Delta.ts:557:18
-         } else if (nextType === 'insert' && (offset < index || !priority)) {
+         } else if (nextType === 'insert' && (offset + 1 < index || !priority)) {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (typeof global === 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (global.module !== undefined) {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (op.retain !== undefined) {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (typeof op.retain === 'string') {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (op.hasOwnProperty('retain')) {

[Survived] PrecomputedMutator
src/OpIterator.ts:19:9
-       if (!length) {
+       if (typeof length === 'undefined') {

[Survived] PrecomputedMutator
src/OpIterator.ts:25:34
-         const opLength = Op.length(nextOp);
+         const opLength = Op.length(this.ops.filter(op => op !== null)[this.index]);

[Survived] PrecomputedMutator
src/OpIterator.ts:37:13
-           if (nextOp.attributes) {
+           if (nextOp['attributes']) {

[Survived] PrecomputedMutator
src/OpIterator.ts:37:13
-           if (nextOp.attributes) {
+           if (nextOp.hasOwnProperty('attributes')) {

[Survived] PrecomputedMutator
src/OpIterator.ts:37:13
-           if (nextOp.attributes) {
+           if (Reflect.get(nextOp, 'attributes')) {

[Survived] PrecomputedMutator
src/OpIterator.ts:43:11
-             typeof nextOp.retain === 'object' &&
-             nextOp.retain !== null
+             nextOp.retain !== undefined

[Survived] PrecomputedMutator
src/OpIterator.ts:43:11
-             typeof nextOp.retain === 'object' &&
-             nextOp.retain !== null
+             nextOp.hasOwnProperty('retain')

[Survived] PrecomputedMutator
src/OpIterator.ts:80:9
-           typeof op.retain === 'number' ||
-           (typeof op.retain === 'object' && op.retain !== null)
+           op.retain !== undefined

[Survived] PrecomputedMutator
src/OpIterator.ts:92:9
-       if (!this.hasNext()) {
+       if (this.index >= this.ops.length) {

[Survived] PrecomputedMutator
src/OpIterator.ts:94:16
-       } else if (this.offset === 0) {
+       } else if (this.index.offset) {

[Survived] PrecomputedMutator
src/OpIterator.ts:100:35
-         const rest = this.ops.slice(this.index);
+         const rest = this.ops.slice(index + 1);

[Survived] PrecomputedMutator
src/OpIterator.ts:103:28
-         return [next].concat(rest);
+         return [next].concat(this.ops.slice(this.index + 1));

[Survived] PrecomputedMutator
src/OpIterator.ts:103:28
-         return [next].concat(rest);
+         return [next].concat(this.ops.filter(op => op !== this.ops[this.index]));

Ran 0.95 tests per mutant on average.
-----------------|---------|----------|-----------|------------|----------|----------|
File             | % score | # killed | # timeout | # survived | # no cov | # errors |
-----------------|---------|----------|-----------|------------|----------|----------|
All files        |   81.18 |      516 |        36 |        128 |        0 |        0 |
 AttributeMap.ts |   72.13 |       44 |         0 |         17 |        0 |        0 |
 Delta.ts        |   82.57 |      421 |        29 |         95 |        0 |        0 |
 Op.ts           |   40.00 |        0 |         2 |          3 |        0 |        0 |
 OpIterator.ts   |   81.16 |       51 |         5 |         13 |        0 |        0 |
-----------------|---------|----------|-----------|------------|----------|----------|
[32m02:28:51 (2933) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/delta/reports/mutation/mutation.html
[32m02:28:51 (2933) INFO MutationTestExecutor[39m Done in 57 minutes 54 seconds.

real	57m56.058s
user	83m4.825s
sys	3m27.351s
