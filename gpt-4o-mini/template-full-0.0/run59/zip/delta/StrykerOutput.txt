*** using precomputed mutations ***
[32m13:53:37 (3160) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m13:53:37 (3160) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m13:53:37 (3160) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llmorpheus/llmorpheus/delta/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m13:53:38 (3160) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m13:53:38 (3160) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m13:53:38 (3160) INFO ProjectReader[39m Found 4 of 1895 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 698 mutants from MUTATION_TESTING/template-full_gpt-4o-mini_0.0/mutants.json ***
Mutant 0 in AttributeMap.ts: typeof a !== 'object' replaced with Array.isArray(a)
Mutant 1 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a === 'string'
Mutant 2 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 3 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b === 'object'
Mutant 4 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 5 in AttributeMap.ts: typeof b !== 'object' replaced with Array.isArray(b)
Mutant 6 in AttributeMap.ts: cloneDeep replaced with b
Mutant 7 in AttributeMap.ts: cloneDeep replaced with {
  ...b
}
Mutant 8 in AttributeMap.ts: b replaced with b || {}
Mutant 9 in AttributeMap.ts: b replaced with Object.assign({}, a)
Mutant 10 in AttributeMap.ts: b replaced with Object.keys(a).length > 0 ? a : b
Mutant 11 in AttributeMap.ts: !keepNull replaced with keepNull === true
Mutant 12 in AttributeMap.ts: !keepNull replaced with !keepNull && keepNull
Mutant 13 in AttributeMap.ts: !keepNull replaced with keepNull || true
Mutant 14 in AttributeMap.ts: attributes[key] != null replaced with attributes[key] === undefined
Mutant 15 in AttributeMap.ts: attributes[key] != null replaced with attributes[key] === false
Mutant 16 in AttributeMap.ts: attributes[key] != null replaced with !attributes[key]
Mutant 17 in AttributeMap.ts: for (const key in a) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
} replaced with for (const key in b) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
}
Mutant 18 in AttributeMap.ts: for (const key in a) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
} replaced with for (const key of Object.keys(a)) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
}
Mutant 19 in AttributeMap.ts: for (const key in a) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
} replaced with for (const key in {
  ...a,
  ...b
}) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
}
Mutant 20 in AttributeMap.ts: a replaced with b
Mutant 21 in AttributeMap.ts: a replaced with Object.keys(b)
Mutant 22 in AttributeMap.ts: a replaced with null
Mutant 23 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a[key] === undefined && b[key] !== undefined
Mutant 24 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a[key] == null
Mutant 25 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with b[key] !== null
Mutant 26 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a === 'object'
Mutant 27 in AttributeMap.ts: typeof a !== 'object' replaced with Array.isArray(a)
Mutant 28 in AttributeMap.ts: typeof a !== 'object' replaced with a == null
Mutant 29 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b === 'object'
Mutant 30 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 31 in AttributeMap.ts: typeof b !== 'object' replaced with Array.isArray(b)
Mutant 32 in AttributeMap.ts: a replaced with b
Mutant 33 in AttributeMap.ts: a replaced with Object.keys(a).filter(key => key.startsWith('x'))
Mutant 34 in AttributeMap.ts: a replaced with Object.keys(a).concat(Object.keys(b)).filter(key => key !== 'ignoreMe')
Mutant 35 in AttributeMap.ts: b replaced with a
Mutant 36 in AttributeMap.ts: b replaced with Object.keys(b).slice(0, 1)
Mutant 37 in AttributeMap.ts: b replaced with b[key] === null
Mutant 38 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with a[key] === b[key]
Mutant 39 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with a[key] == b[key]
Mutant 40 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with a[key] !== null
Mutant 41 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(a[key] === b[key])
Mutant 42 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(a[key] !== null)
Mutant 43 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(b[key] === undefined)
Mutant 44 in AttributeMap.ts: isEqual replaced with a[key] != b[key]
Mutant 45 in AttributeMap.ts: a[key] replaced with a[key] === undefined
Mutant 46 in AttributeMap.ts: b[key] replaced with undefined
Mutant 47 in AttributeMap.ts: b[key] replaced with b[key] === null
Mutant 48 in AttributeMap.ts: attributes replaced with Object.keys(a).length > 0
Mutant 49 in AttributeMap.ts: attributes replaced with Object.keys(b).length === 0
Mutant 50 in AttributeMap.ts: attributes replaced with Object.keys(a).filter(key => a[key] !== b[key]).length > 0
Mutant 51 in AttributeMap.ts: base replaced with Object.keys(attr)
Mutant 52 in AttributeMap.ts: base replaced with Object.keys(base).filter(key => base[key] !== null)
Mutant 53 in AttributeMap.ts: base replaced with Object.keys(base).filter(key => base[key] === undefined)
Mutant 54 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] === attr[key] && attr[key] !== undefined
Mutant 55 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] !== attr[key] && attr[key] === null
Mutant 56 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] === undefined
Mutant 57 in AttributeMap.ts: attr replaced with Object.keys(base)
Mutant 58 in AttributeMap.ts: attr replaced with Object.keys(attr).filter(key => attr[key] !== null)
Mutant 59 in AttributeMap.ts: attr replaced with Object.keys(attr).map(key => key + '1')
Mutant 60 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] === base[key] && base[key] !== undefined
Mutant 61 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] !== base[key] || base[key] !== null
Mutant 62 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] === undefined || base[key] === undefined
Mutant 63 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 64 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a === 'string'
Mutant 65 in AttributeMap.ts: typeof a !== 'object' replaced with Array.isArray(a)
Mutant 66 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b === 'object'
Mutant 67 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 68 in AttributeMap.ts: typeof b !== 'object' replaced with Array.isArray(b)
Mutant 69 in AttributeMap.ts: !priority replaced with priority === true
Mutant 70 in AttributeMap.ts: !priority replaced with priority !== false
Mutant 71 in AttributeMap.ts: !priority replaced with !priority && priority !== undefined
Mutant 72 in AttributeMap.ts: b replaced with a
Mutant 73 in AttributeMap.ts: b replaced with Object.keys(a)
Mutant 74 in AttributeMap.ts: b replaced with Object.keys(b).filter(key => a[key] !== undefined)
Mutant 75 in AttributeMap.ts: a[key] === undefined replaced with a[key] != null
Mutant 76 in AttributeMap.ts: a[key] === undefined replaced with a[key] === null
Mutant 77 in AttributeMap.ts: a[key] === undefined replaced with b[key] !== undefined
Mutant 78 in AttributeMap.ts: attributes replaced with b
Mutant 79 in AttributeMap.ts: attributes replaced with Object.keys(a).length
Mutant 80 in AttributeMap.ts: attributes replaced with Object.keys(b).length + 1
Mutant 81 in Delta.ts: 0 replaced with 1
Mutant 82 in Delta.ts: 0 replaced with -1
Mutant 83 in Delta.ts: 0 replaced with String.fromCharCode(65)
Mutant 84 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a === 'object' && a !== null
Mutant 85 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a === 'undefined'
Mutant 86 in Delta.ts: typeof a !== 'object' || a === null replaced with Array.isArray(a)
Mutant 87 in Delta.ts: typeof b !== 'object' || b === null replaced with typeof b === 'object' && b !== null
Mutant 88 in Delta.ts: typeof b !== 'object' || b === null replaced with Array.isArray(b)
Mutant 89 in Delta.ts: typeof b !== 'object' || b === null replaced with typeof b === 'string'
Mutant 90 in Delta.ts: a replaced with b
Mutant 91 in Delta.ts: a replaced with Object.keys(a)[0]
Mutant 92 in Delta.ts: a replaced with null
Mutant 93 in Delta.ts: b replaced with b[embedType]
Mutant 94 in Delta.ts: b replaced with Object.keys(b)[1]
Mutant 95 in Delta.ts: b replaced with Object.keys(b)[0] + '1'
Mutant 96 in Delta.ts: b replaced with embedType !== Object.keys(b)[0]
Mutant 97 in Delta.ts: b replaced with embedType === Object.keys(b)[0]
Mutant 98 in Delta.ts: b replaced with embedType === null
Mutant 99 in Delta.ts: !handler replaced with handler === undefined
Mutant 100 in Delta.ts: !handler replaced with handler != null
Mutant 101 in Delta.ts: !handler replaced with handler === true
Mutant 102 in Delta.ts: Array.isArray(ops) replaced with typeof ops === 'object'
Mutant 103 in Delta.ts: Array.isArray(ops) replaced with ops instanceof Array
Mutant 104 in Delta.ts: Array.isArray(ops) replaced with ops === null
Mutant 105 in Delta.ts: Array.isArray replaced with ops != null
Mutant 106 in Delta.ts: ops replaced with this.ops
Mutant 107 in Delta.ts: ops replaced with undefined
Mutant 108 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops === null || !Array.isArray(ops.ops)
Mutant 109 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops != null && typeof ops.ops === 'object'
Mutant 110 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops === undefined || Array.isArray(ops)
Mutant 111 in Delta.ts: Array.isArray replaced with typeof ops === 'string'
Mutant 112 in Delta.ts: Array.isArray replaced with ops instanceof Array
Mutant 113 in Delta.ts: Array.isArray replaced with ops.length > 0
Mutant 114 in Delta.ts: ops.ops replaced with ops.length
Mutant 115 in Delta.ts: ops.ops replaced with ops[0]
Mutant 116 in Delta.ts: ops.ops replaced with ops.pop()
Mutant 117 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with typeof arg !== 'string' || arg.length > 0
Mutant 118 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with arg === NULL_CHARACTER
Mutant 119 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with arg.length < 0
Mutant 120 in Delta.ts: attributes replaced with newOp.attributes
Mutant 121 in Delta.ts: attributes replaced with null
Mutant 122 in Delta.ts: attributes replaced with Object.keys(attributes).length >= 1
Mutant 123 in Delta.ts: length <= 0 replaced with length < 0
Mutant 124 in Delta.ts: length <= 0 replaced with length === 0
Mutant 125 in Delta.ts: length <= 0 replaced with length >= 0
Mutant 126 in Delta.ts: typeof length === 'number' && length <= 0 replaced with typeof length === 'string' && length.length > 0
Mutant 127 in Delta.ts: typeof length === 'number' && length <= 0 replaced with typeof length === 'number' && length < 0
Mutant 128 in Delta.ts: typeof length === 'number' && length <= 0 replaced with length === 0
Mutant 129 in Delta.ts: attributes replaced with newOp.attributes
Mutant 130 in Delta.ts: attributes replaced with attributes === null
Mutant 131 in Delta.ts: attributes replaced with Object.keys(attributes).length >= 0
Mutant 132 in Delta.ts: typeof lastOp === 'object' replaced with typeof lastOp !== 'object'
Mutant 133 in Delta.ts: typeof lastOp === 'object' replaced with lastOp === null
Mutant 134 in Delta.ts: typeof lastOp === 'object' replaced with Array.isArray(lastOp)
Mutant 135 in Delta.ts: typeof lastOp !== 'object' replaced with typeof lastOp === 'object'
Mutant 136 in Delta.ts: typeof lastOp !== 'object' replaced with lastOp === null
Mutant 137 in Delta.ts: typeof lastOp !== 'object' replaced with Array.isArray(lastOp)
Mutant 138 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with newOp.attributes !== lastOp.attributes
Mutant 139 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with !isEqual(newOp.attributes, lastOp.attributes)
Mutant 140 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with newOp.attributes == lastOp.attributes
Mutant 141 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(newOp.attributes, {})
Mutant 142 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(null, lastOp.attributes)
Mutant 143 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(newOp.attributes, newOp.attributes)
Mutant 144 in Delta.ts: newOp.attributes replaced with null
Mutant 145 in Delta.ts: newOp.attributes replaced with undefined
Mutant 146 in Delta.ts: lastOp.attributes replaced with null
Mutant 147 in Delta.ts: lastOp.attributes replaced with undefined
Mutant 148 in Delta.ts: lastOp.attributes replaced with {}
Mutant 149 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with typeof newOp.insert === 'number' && typeof lastOp.insert === 'number'
Mutant 150 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with typeof newOp.insert === 'string' || typeof lastOp.insert === 'string'
Mutant 151 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with newOp.insert === lastOp.insert
Mutant 152 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes != null
Mutant 153 in Delta.ts: typeof newOp.attributes === 'object' replaced with typeof newOp.attributes === 'function'
Mutant 154 in Delta.ts: typeof newOp.attributes === 'object' replaced with Array.isArray(newOp.attributes)
Mutant 155 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'string' && typeof lastOp.retain === 'string'
Mutant 156 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'number' && typeof lastOp.retain === 'undefined'
Mutant 157 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with newOp.retain > 0 && lastOp.retain > 0
Mutant 158 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes != null
Mutant 159 in Delta.ts: typeof newOp.attributes === 'object' replaced with typeof newOp.attributes !== 'object'
Mutant 160 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes === undefined
Mutant 161 in Delta.ts: index === this.ops.length replaced with index > this.ops.length
Mutant 162 in Delta.ts: index === this.ops.length replaced with index !== this.ops.length
Mutant 163 in Delta.ts: index === this.ops.length replaced with index < this.ops.length - 1
Mutant 164 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, 1, newOp)
Mutant 165 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, newOp)
Mutant 166 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(0, newOp)
Mutant 167 in Delta.ts: index replaced with index + 1
Mutant 168 in Delta.ts: index replaced with 0
Mutant 169 in Delta.ts: index replaced with this.ops.length
Mutant 170 in Delta.ts: 0 replaced with 1
Mutant 171 in Delta.ts: 0 replaced with -1
Mutant 172 in Delta.ts: 0 replaced with index + 1
Mutant 173 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp || typeof lastOp.retain === 'number' && !lastOp.attributes
Mutant 174 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp && typeof lastOp.retain === 'string' && !lastOp.attributes
Mutant 175 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp && typeof lastOp.retain === 'number' && lastOp.attributes
Mutant 176 in Delta.ts: predicate replaced with !predicate
Mutant 177 in Delta.ts: predicate replaced with predicate(op, index) && index % 2 === 0
Mutant 178 in Delta.ts: predicate replaced with predicate(op, index + 1)
Mutant 179 in Delta.ts: predicate replaced with predicate.bind(this)
Mutant 180 in Delta.ts: predicate replaced with predicate.call(null, op, index)
Mutant 181 in Delta.ts: predicate replaced with predicate(op, index + 1)
Mutant 182 in Delta.ts: predicate replaced with !op
Mutant 183 in Delta.ts: predicate replaced with op.attributes != null
Mutant 184 in Delta.ts: predicate replaced with op.insert === undefined
Mutant 185 in Delta.ts: op replaced with op.length
Mutant 186 in Delta.ts: op replaced with op.attributes
Mutant 187 in Delta.ts: op replaced with !op
Mutant 188 in Delta.ts: this.ops.reduce(predicate, initialValue) replaced with this.ops.reduce(predicate, initialValue + 1)
Mutant 189 in Delta.ts: this.ops.reduce(predicate, initialValue) replaced with this.ops.reduce(predicate, initialValue * 2)
Mutant 190 in Delta.ts: this.ops.reduce(predicate, initialValue) replaced with this.ops.reduce(predicate, 0)
Mutant 191 in Delta.ts: predicate replaced with () => accum
Mutant 192 in Delta.ts: predicate replaced with predicate(accum, curr, index) + 1
Mutant 193 in Delta.ts: predicate replaced with predicate(curr, accum, index)
Mutant 194 in Delta.ts: initialValue replaced with 1
Mutant 195 in Delta.ts: initialValue replaced with length
Mutant 196 in Delta.ts: initialValue replaced with null
Mutant 197 in Delta.ts: elem.insert replaced with elem.insert === 0
Mutant 198 in Delta.ts: elem.insert replaced with elem.insert > 1
Mutant 199 in Delta.ts: Op.length replaced with elem.insert.length
Mutant 200 in Delta.ts: Op.length replaced with length + 1
Mutant 201 in Delta.ts: elem replaced with elem.insert
Mutant 202 in Delta.ts: elem replaced with 0
Mutant 203 in Delta.ts: elem replaced with elem.retain
Mutant 204 in Delta.ts: elem.delete replaced with elem.insert
Mutant 205 in Delta.ts: elem.delete replaced with elem.retain
Mutant 206 in Delta.ts: elem.delete replaced with 0
Mutant 207 in Delta.ts: Op.length replaced with elem.insert.length
Mutant 208 in Delta.ts: Op.length replaced with 0
Mutant 209 in Delta.ts: elem replaced with elem.insert
Mutant 210 in Delta.ts: elem replaced with 0
Mutant 211 in Delta.ts: index < end && iter.hasNext() replaced with index >= end || !iter.hasNext()
Mutant 212 in Delta.ts: index < end && iter.hasNext() replaced with index < start && iter.hasNext()
Mutant 213 in Delta.ts: index < end && iter.hasNext() replaced with index < end && index < this.ops.length
Mutant 214 in Delta.ts: iter.hasNext replaced with index >= start
Mutant 215 in Delta.ts: index < start replaced with index > start
Mutant 216 in Delta.ts: index < start replaced with index <= start
Mutant 217 in Delta.ts: index < start replaced with index === start
Mutant 218 in Delta.ts: start - index replaced with start + index
Mutant 219 in Delta.ts: start - index replaced with start * 2
Mutant 220 in Delta.ts: start - index replaced with 0
Mutant 221 in Delta.ts: end - index replaced with end + index
Mutant 222 in Delta.ts: end - index replaced with start - index + 1
Mutant 223 in Delta.ts: end - index replaced with Math.max(0, end - index)
Mutant 224 in Delta.ts: Op.length replaced with nextOp.length
Mutant 225 in Delta.ts: Op.length replaced with nextOp.insert.length
Mutant 226 in Delta.ts: Op.length replaced with nextOp.retain
Mutant 227 in Delta.ts: firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null replaced with firstOther == null || typeof firstOther.retain !== 'number' || firstOther.attributes != null
Mutant 228 in Delta.ts: firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null replaced with firstOther != null && typeof firstOther.retain === 'string' && firstOther.attributes == null
Mutant 229 in Delta.ts: firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null replaced with firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes !== undefined
Mutant 230 in Delta.ts: thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft replaced with thisIter.peekType() === 'insert' && thisIter.peekLength() > firstLeft
Mutant 231 in Delta.ts: thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft replaced with thisIter.peekType() === 'insert' && thisIter.peekLength() === firstLeft
Mutant 232 in Delta.ts: thisIter.peekType replaced with otherIter.peekType
Mutant 233 in Delta.ts: thisIter.next() replaced with thisIter.next(1)
Mutant 234 in Delta.ts: thisIter.next() replaced with thisIter.next(0)
Mutant 235 in Delta.ts: thisIter.next() replaced with thisIter.next(-1)
Mutant 236 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with firstOther.retain - firstLeft < 0
Mutant 237 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with firstOther.retain === firstLeft
Mutant 238 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with firstLeft > 0
Mutant 239 in Delta.ts: firstOther.retain - firstLeft replaced with firstOther.retain + firstLeft
Mutant 240 in Delta.ts: firstOther.retain - firstLeft replaced with firstOther.retain * 2
Mutant 241 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with !thisIter.hasNext() && !otherIter.hasNext()
Mutant 242 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.hasNext() || thisIter.peekType() === 'insert'
Mutant 243 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() !== 'insert'
Mutant 244 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekLength() > 0
Mutant 245 in Delta.ts: otherIter.peekType replaced with thisIter.peekType
Mutant 246 in Delta.ts: otherIter.next() replaced with otherIter.next(1)
Mutant 247 in Delta.ts: otherIter.next() replaced with thisIter.next()
Mutant 248 in Delta.ts: otherIter.next() replaced with otherIter.next(0)
Mutant 249 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekType() === 'insert'
Mutant 250 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekLength() > 0
Mutant 251 in Delta.ts: thisIter.peekType replaced with otherIter.peekType
Mutant 252 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 253 in Delta.ts: thisIter.next() replaced with thisIter.next(1)
Mutant 254 in Delta.ts: thisIter.next() replaced with thisIter.next(0)
Mutant 255 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() + 1)
Mutant 256 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(Math.max(thisIter.peekLength(), otherIter.peekLength()))
Mutant 257 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() - 1)
Mutant 258 in Delta.ts: Math.min replaced with Math.max
Mutant 259 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekType()
Mutant 260 in Delta.ts: thisIter.peekLength() replaced with otherIter.peekLength() + 1
Mutant 261 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() - 1
Mutant 262 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 263 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 264 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() + 1
Mutant 265 in Delta.ts: otherIter.peekLength replaced with Infinity
Mutant 266 in Delta.ts: length replaced with 0
Mutant 267 in Delta.ts: length replaced with thisIter.peekLength() + 1
Mutant 268 in Delta.ts: length replaced with thisIter.peekLength() - 1
Mutant 269 in Delta.ts: length replaced with otherOp.retain + 1
Mutant 270 in Delta.ts: length replaced with 0
Mutant 271 in Delta.ts: length replaced with thisOp.retain
Mutant 272 in Delta.ts: otherOp.retain replaced with thisOp.retain
Mutant 273 in Delta.ts: otherOp.retain replaced with otherOp.insert
Mutant 274 in Delta.ts: otherOp.retain replaced with null
Mutant 275 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof thisOp.retain === 'string'
Mutant 276 in Delta.ts: typeof thisOp.retain === 'number' replaced with thisOp.retain == null
Mutant 277 in Delta.ts: typeof thisOp.retain === 'number' replaced with thisOp.retain > 0
Mutant 278 in Delta.ts: typeof otherOp.retain === 'number' replaced with typeof otherOp.retain !== 'number'
Mutant 279 in Delta.ts: typeof otherOp.retain === 'number' replaced with otherOp.retain == null
Mutant 280 in Delta.ts: typeof otherOp.retain === 'number' replaced with otherOp.retain === true
Mutant 281 in Delta.ts: thisOp.retain == null replaced with thisOp.retain !== undefined
Mutant 282 in Delta.ts: thisOp.retain == null replaced with thisOp.retain === false
Mutant 283 in Delta.ts: thisOp.retain == null replaced with thisOp.retain == undefined
Mutant 284 in Delta.ts: Delta.getHandler replaced with Delta.getHandlerWrong
Mutant 285 in Delta.ts: embedType replaced with otherOp.retain
Mutant 286 in Delta.ts: embedType replaced with thisOp.insert
Mutant 287 in Delta.ts: embedType replaced with null
Mutant 288 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with otherIter.hasNext() || delta.ops.length === 0
Mutant 289 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with !otherIter.hasNext() && !isEqual(delta.ops[delta.ops.length - 1], newOp)
Mutant 290 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with otherIter.hasNext() && isEqual(delta.ops[0], newOp)
Mutant 291 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(newOp, delta.ops[delta.ops.length - 1])
Mutant 292 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(newOp.attributes, delta.ops[delta.ops.length - 1].attributes)
Mutant 293 in Delta.ts: delta.ops[delta.ops.length - 1] replaced with delta.ops[delta.ops.length - 2]
Mutant 294 in Delta.ts: thisIter.rest replaced with thisIter.ops
Mutant 295 in Delta.ts: thisIter.rest replaced with otherIter.rest
Mutant 296 in Delta.ts: rest replaced with thisIter.rest()
Mutant 297 in Delta.ts: rest replaced with new Delta(thisIter.rest().slice(1))
Mutant 298 in Delta.ts: rest replaced with new Delta(thisIter.rest()).concat(new Delta(this.ops))
Mutant 299 in Delta.ts: typeof otherOp.delete === 'number' && (typeof thisOp.retain === 'number' || typeof thisOp.retain === 'object' && thisOp.retain !== null) replaced with typeof otherOp.retain === 'string' && (typeof thisOp.retain === 'number' || typeof thisOp.retain === 'object' && thisOp.retain !== null)
Mutant 300 in Delta.ts: otherOp replaced with thisOp
Mutant 301 in Delta.ts: otherOp replaced with otherIter.next(length + 1)
Mutant 302 in Delta.ts: otherOp replaced with otherOp.retain
Mutant 303 in Delta.ts: other.ops.length > 0 replaced with other.ops.length === 0
Mutant 304 in Delta.ts: other.ops.length > 0 replaced with other.ops.length < 1
Mutant 305 in Delta.ts: other.ops.length > 0 replaced with other.ops.length > 1
Mutant 306 in Delta.ts: other.ops[0] replaced with other.ops[other.ops.length - 1]
Mutant 307 in Delta.ts: other.ops[0] replaced with other.ops[0] || {}
Mutant 308 in Delta.ts: other.ops.slice(1) replaced with other.ops.slice(0)
Mutant 309 in Delta.ts: other.ops.slice(1) replaced with other.ops.slice(2)
Mutant 310 in Delta.ts: other.ops.slice(1) replaced with other.ops.reverse()
Mutant 311 in Delta.ts: 1 replaced with other.ops.length
Mutant 312 in Delta.ts: this.ops === other.ops replaced with this.ops.length === other.ops.length
Mutant 313 in Delta.ts: this.ops === other.ops replaced with this.ops !== other.ops
Mutant 314 in Delta.ts: this.ops === other.ops replaced with this.ops.some((op, index) => op !== other.ops[index])
Mutant 315 in Delta.ts: op.insert != null replaced with op.insert === undefined
Mutant 316 in Delta.ts: op.insert != null replaced with op.insert === false
Mutant 317 in Delta.ts: op.insert != null replaced with op.insert == null
Mutant 318 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(strings[0], strings[1], 0)
Mutant 319 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(strings[0], strings[1], null)
Mutant 320 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(strings[1], strings[0], cursor)
Mutant 321 in Delta.ts: strings[0] replaced with strings[0].toUpperCase()
Mutant 322 in Delta.ts: strings[0] replaced with strings[0].split('').reverse().join('')
Mutant 323 in Delta.ts: strings[0] replaced with strings[1] + "extra"
Mutant 324 in Delta.ts: strings[1] replaced with strings[0]
Mutant 325 in Delta.ts: strings[1] replaced with 'placeholder_string'
Mutant 326 in Delta.ts: strings[1] replaced with null
Mutant 327 in Delta.ts: cursor replaced with 0
Mutant 328 in Delta.ts: cursor replaced with undefined
Mutant 329 in Delta.ts: cursor replaced with cursor + 1
Mutant 330 in Delta.ts: length > 0 replaced with length >= 0
Mutant 331 in Delta.ts: length > 0 replaced with length < 0
Mutant 332 in Delta.ts: length > 0 replaced with length !== 0
Mutant 333 in Delta.ts: component[0] replaced with component[1]
Mutant 334 in Delta.ts: component[0] replaced with diff.DELETE + 1
Mutant 335 in Delta.ts: component[0] replaced with diff.EQUAL
Mutant 336 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(thisIter.peekLength() + 1)
Mutant 337 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(Math.max(otherIter.peekLength(), length))
Mutant 338 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(0)
Mutant 339 in Delta.ts: Math.min replaced with Math.max
Mutant 340 in Delta.ts: Math.min replaced with length + 1
Mutant 341 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 342 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() + 1
Mutant 343 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 344 in Delta.ts: length replaced with otherIter.peekLength() + 1
Mutant 345 in Delta.ts: length replaced with Math.max(0, length - 1)
Mutant 346 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 347 in Delta.ts: otherIter.next(opLength) replaced with otherIter.next(opLength + 1)
Mutant 348 in Delta.ts: otherIter.next(opLength) replaced with otherIter.next(opLength - 1)
Mutant 349 in Delta.ts: otherIter.next(opLength) replaced with thisIter.next(opLength)
Mutant 350 in Delta.ts: opLength replaced with length
Mutant 351 in Delta.ts: opLength replaced with otherIter.peekLength() + 1
Mutant 352 in Delta.ts: opLength replaced with Math.max(0, opLength - 1)
Mutant 353 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(length + 1)
Mutant 354 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(thisIter.peekLength() - 1)
Mutant 355 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(0)
Mutant 356 in Delta.ts: Math.min replaced with Math.max
Mutant 357 in Delta.ts: Math.min replaced with length + 1
Mutant 358 in Delta.ts: length replaced with 0
Mutant 359 in Delta.ts: length replaced with thisIter.peekLength() + 1
Mutant 360 in Delta.ts: length replaced with length + 1
Mutant 361 in Delta.ts: thisIter.peekLength() replaced with otherIter.peekLength()
Mutant 362 in Delta.ts: thisIter.peekLength() replaced with 0
Mutant 363 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() + 1
Mutant 364 in Delta.ts: thisIter.peekLength replaced with thisIter.peekLength + 1
Mutant 365 in Delta.ts: opLength replaced with opLength + 1
Mutant 366 in Delta.ts: opLength replaced with 0
Mutant 367 in Delta.ts: opLength replaced with opLength * 2
Mutant 368 in Delta.ts: opLength replaced with opLength + 1
Mutant 369 in Delta.ts: opLength replaced with 0
Mutant 370 in Delta.ts: opLength replaced with thisIter.peekLength()
Mutant 371 in Delta.ts: otherIter.peekLength replaced with otherIter.peekLength + 1
Mutant 372 in Delta.ts: opLength replaced with length
Mutant 373 in Delta.ts: opLength replaced with otherIter.peekLength() + 1
Mutant 374 in Delta.ts: opLength replaced with thisIter.peekLength() * 2
Mutant 375 in Delta.ts: opLength replaced with opLength + 1
Mutant 376 in Delta.ts: opLength replaced with Math.max(0, opLength - 1)
Mutant 377 in Delta.ts: opLength replaced with otherIter.peekLength() + 1
Mutant 378 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(thisOp.retain, otherOp.retain)
Mutant 379 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with !isEqual(thisOp.insert, otherOp.insert)
Mutant 380 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with thisOp.insert === null
Mutant 381 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(thisOp.insert, thisOp.insert)
Mutant 382 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(otherOp.retain, thisOp.retain)
Mutant 383 in Delta.ts: isEqual replaced with thisOp.insert === otherOp.insert
Mutant 384 in Delta.ts: isEqual replaced with thisOp.retain !== otherOp.retain
Mutant 385 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(thisOp.attributes, null)
Mutant 386 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(otherOp.attributes, thisOp.attributes)
Mutant 387 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(thisOp.attributes, {
  unexpected: true
})
Mutant 388 in Delta.ts: thisOp.attributes replaced with otherOp.attributes
Mutant 389 in Delta.ts: thisOp.attributes replaced with null
Mutant 390 in Delta.ts: thisOp.attributes replaced with {
  invalid: true
}
Mutant 391 in Delta.ts: otherOp.attributes replaced with thisOp.attributes
Mutant 392 in Delta.ts: otherOp.attributes replaced with null
Mutant 393 in Delta.ts: otherOp.attributes replaced with undefined
Mutant 394 in Delta.ts: otherOp replaced with thisOp
Mutant 395 in Delta.ts: otherOp replaced with null
Mutant 396 in Delta.ts: otherOp replaced with otherOp.attributes
Mutant 397 in Delta.ts: opLength replaced with opLength + 1
Mutant 398 in Delta.ts: opLength replaced with 0
Mutant 399 in Delta.ts: opLength replaced with opLength * 2
Mutant 400 in Delta.ts: iter.hasNext() replaced with !iter.hasNext()
Mutant 401 in Delta.ts: iter.hasNext() replaced with iter.peekLength() > 0
Mutant 402 in Delta.ts: iter.peekType() !== 'insert' replaced with otherIter.peekType() === 'insert'
Mutant 403 in Delta.ts: iter.peekType() !== 'insert' replaced with iter.peekType() === 'retain'
Mutant 404 in Delta.ts: Op.length replaced with thisOp.retain
Mutant 405 in Delta.ts: Op.length replaced with 0
Mutant 406 in Delta.ts: thisOp replaced with iter.next(1)
Mutant 407 in Delta.ts: thisOp replaced with thisIter.next(1)
Mutant 408 in Delta.ts: thisOp replaced with new Delta()
Mutant 409 in Delta.ts: iter.peekLength replaced with 0
Mutant 410 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf(start + 1)
Mutant 411 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf(newline.length)
Mutant 412 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf(start - 1)
Mutant 413 in Delta.ts: thisOp.insert.indexOf replaced with thisOp.insert.length
Mutant 414 in Delta.ts: newline replaced with ' '
Mutant 415 in Delta.ts: newline replaced with '\t'
Mutant 416 in Delta.ts: newline replaced with 'newline'
Mutant 417 in Delta.ts: start replaced with 0
Mutant 418 in Delta.ts: start replaced with thisOp.insert.length
Mutant 419 in Delta.ts: start replaced with iter.peekLength() + 1
Mutant 420 in Delta.ts: index < 0 replaced with index > 0
Mutant 421 in Delta.ts: index < 0 replaced with index === 0
Mutant 422 in Delta.ts: index < 0 replaced with index !== 0
Mutant 423 in Delta.ts: index > 0 replaced with index < 0
Mutant 424 in Delta.ts: index > 0 replaced with index === 0
Mutant 425 in Delta.ts: index > 0 replaced with index >= 0
Mutant 426 in Delta.ts: iter.next(index) replaced with iter.next(1)
Mutant 427 in Delta.ts: iter.next(index) replaced with iter.next(0)
Mutant 428 in Delta.ts: iter.next(index) replaced with iter.next(index + 1)
Mutant 429 in Delta.ts: index replaced with i + 1
Mutant 430 in Delta.ts: index replaced with iter.next(1).attributes || {}
Mutant 431 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) === false replaced with predicate(line, iter.peek().attributes || {}, i) === true
Mutant 432 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) === false replaced with predicate(line, {}, i) === false
Mutant 433 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) === false replaced with predicate(line, iter.next(1).attributes || {
  key: 'value'
}, i) === false
Mutant 434 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) replaced with predicate(line, iter.next(2).attributes || {}, i)
Mutant 435 in Delta.ts: iter.next(1).attributes || {} replaced with {
  custom: 'value'
}
Mutant 436 in Delta.ts: 1 replaced with 0
Mutant 437 in Delta.ts: 1 replaced with 1 + i
Mutant 438 in Delta.ts: 1 replaced with iter.next(1).attributes || {}
Mutant 439 in Delta.ts: i replaced with i + 1
Mutant 440 in Delta.ts: i replaced with i * 2
Mutant 441 in Delta.ts: i replaced with 0
Mutant 442 in Delta.ts: line.length() > 0 replaced with line.length() === 0
Mutant 443 in Delta.ts: line.length() > 0 replaced with line.ops.length > 1
Mutant 444 in Delta.ts: line.length() > 0 replaced with line.ops.length < 0
Mutant 445 in Delta.ts: line.length replaced with line.length + 1
Mutant 446 in Delta.ts: line.length replaced with line.length - 1
Mutant 447 in Delta.ts: predicate(line, {}, i) replaced with predicate(predicate(line, {
  someAttribute: true
}, i))
Mutant 448 in Delta.ts: predicate(line, {}, i) replaced with predicate(predicate(line, {}, i + 1))
Mutant 449 in Delta.ts: predicate(line, {}, i) replaced with predicate(predicate(line, null, i))
Mutant 450 in Delta.ts: {} replaced with {
  attributes: {
    color: 'red'
  }
}
Mutant 451 in Delta.ts: {} replaced with {
  attributes: {
    fontSize: 12
  }
}
Mutant 452 in Delta.ts: {} replaced with {
  attributes: {
    bold: true
  }
}
Mutant 453 in Delta.ts: i replaced with i + 1
Mutant 454 in Delta.ts: i replaced with i * 2
Mutant 455 in Delta.ts: i replaced with 0
Mutant 456 in Delta.ts: op.insert replaced with op.retain
Mutant 457 in Delta.ts: op.insert replaced with op.insert === undefined
Mutant 458 in Delta.ts: Op.length(op) replaced with op.retain
Mutant 459 in Delta.ts: Op.length(op) replaced with op.insert.length
Mutant 460 in Delta.ts: Op.length(op) replaced with 0
Mutant 461 in Delta.ts: op replaced with baseOp
Mutant 462 in Delta.ts: op replaced with null
Mutant 463 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'string' && op.attributes != null
Mutant 464 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with op.retain === undefined
Mutant 465 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && op.attributes !== undefined
Mutant 466 in Delta.ts: op.retain replaced with 0
Mutant 467 in Delta.ts: op.retain replaced with op.retain + 1
Mutant 468 in Delta.ts: op.retain replaced with null
Mutant 469 in Delta.ts: op.delete || typeof op.retain === 'number' replaced with op.retain === null
Mutant 470 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex + 1, baseIndex + length + 1)
Mutant 471 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex, baseIndex - length)
Mutant 472 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex + length, baseIndex)
Mutant 473 in Delta.ts: baseIndex replaced with baseIndex + 1
Mutant 474 in Delta.ts: baseIndex replaced with baseIndex - 1
Mutant 475 in Delta.ts: baseIndex replaced with baseIndex + length + 1
Mutant 476 in Delta.ts: baseIndex + length replaced with baseIndex - length
Mutant 477 in Delta.ts: baseIndex + length replaced with baseIndex + 1
Mutant 478 in Delta.ts: baseIndex + length replaced with baseIndex + op.retain
Mutant 479 in Delta.ts: op.delete replaced with op.insert
Mutant 480 in Delta.ts: op.delete replaced with op.retain === undefined
Mutant 481 in Delta.ts: op.delete replaced with op.length > 0
Mutant 482 in Delta.ts: baseOp replaced with baseOp.insert
Mutant 483 in Delta.ts: baseOp replaced with baseOp.retain
Mutant 484 in Delta.ts: baseOp replaced with null
Mutant 485 in Delta.ts: op.retain && op.attributes replaced with op.retain || op.attributes
Mutant 486 in Delta.ts: op.retain && op.attributes replaced with op.retain && !op.attributes
Mutant 487 in Delta.ts: op.retain && op.attributes replaced with op.attributes && op.retain
Mutant 488 in Delta.ts: Op.length replaced with op.retain || 0
Mutant 489 in Delta.ts: baseOp replaced with baseOp.attributes
Mutant 490 in Delta.ts: baseOp replaced with baseOp.insert.length
Mutant 491 in Delta.ts: baseOp replaced with baseOp.retain
Mutant 492 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes || {})
Mutant 493 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(baseOp.attributes || {})
Mutant 494 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert({
  ...op.attributes
})
Mutant 495 in Delta.ts: AttributeMap.invert replaced with AttributeMap.merge
Mutant 496 in Delta.ts: AttributeMap.invert replaced with AttributeMap.transform
Mutant 497 in Delta.ts: AttributeMap.invert replaced with AttributeMap.copy
Mutant 498 in Delta.ts: op.attributes replaced with null
Mutant 499 in Delta.ts: op.attributes replaced with op.attributes || {}
Mutant 500 in Delta.ts: op.attributes replaced with op.attributes.length
Mutant 501 in Delta.ts: baseOp.attributes replaced with null
Mutant 502 in Delta.ts: baseOp.attributes replaced with {}
Mutant 503 in Delta.ts: baseOp.attributes replaced with baseOp.insert
Mutant 504 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'string' && op.retain !== ''
Mutant 505 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain == null
Mutant 506 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'object' && op.retain === null
Mutant 507 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIndex, baseIndex + 2)
Mutant 508 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIndex + 1, baseIndex + 1)
Mutant 509 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIndex + 1, baseIndex + 3)
Mutant 510 in Delta.ts: baseIndex replaced with baseIndex + 2
Mutant 511 in Delta.ts: baseIndex replaced with baseIndex - 1
Mutant 512 in Delta.ts: baseIndex replaced with baseIndex + length
Mutant 513 in Delta.ts: baseIndex + 1 replaced with baseIndex + 2
Mutant 514 in Delta.ts: baseIndex + 1 replaced with baseIndex - 1
Mutant 515 in Delta.ts: baseIndex + 1 replaced with baseIndex + op.retain.length
Mutant 516 in Delta.ts: Delta.getHandler replaced with Delta.getHandlerFallback
Mutant 517 in Delta.ts: embedType replaced with 'wrongEmbedType'
Mutant 518 in Delta.ts: embedType replaced with Object.keys(otherData)[0]
Mutant 519 in Delta.ts: embedType replaced with null
Mutant 520 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(baseOpData)
Mutant 521 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(opData + 1)
Mutant 522 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(opData[0])
Mutant 523 in Delta.ts: handler.invert replaced with handler.transform
Mutant 524 in Delta.ts: handler.invert replaced with handler.invertAttributes
Mutant 525 in Delta.ts: opData replaced with baseOpData
Mutant 526 in Delta.ts: opData replaced with null
Mutant 527 in Delta.ts: opData replaced with undefined
Mutant 528 in Delta.ts: baseOpData replaced with null
Mutant 529 in Delta.ts: baseOpData replaced with undefined
Mutant 530 in Delta.ts: baseOpData replaced with "invalidData"
Mutant 531 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes || {})
Mutant 532 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(baseOp.attributes)
Mutant 533 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert({
  ...op.attributes
})
Mutant 534 in Delta.ts: op.attributes replaced with null
Mutant 535 in Delta.ts: op.attributes replaced with {}
Mutant 536 in Delta.ts: op.attributes replaced with op.attributes || {}
Mutant 537 in Delta.ts: baseOp.attributes replaced with null
Mutant 538 in Delta.ts: baseOp.attributes replaced with {}
Mutant 539 in Delta.ts: baseOp.attributes replaced with baseOp.insert
Mutant 540 in Delta.ts: typeof arg === 'number' replaced with arg instanceof Delta
Mutant 541 in Delta.ts: typeof arg === 'number' replaced with typeof arg === 'string'
Mutant 542 in Delta.ts: typeof arg === 'number' replaced with arg == null
Mutant 543 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(arg + 1)
Mutant 544 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(arg * 2)
Mutant 545 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(arg.toString())
Mutant 546 in Delta.ts: arg replaced with 0
Mutant 547 in Delta.ts: arg replaced with index + 1
Mutant 548 in Delta.ts: arg replaced with this.ops.length
Mutant 549 in Delta.ts: priority replaced with !priority
Mutant 550 in Delta.ts: priority replaced with true
Mutant 551 in Delta.ts: priority replaced with undefined
Mutant 552 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with !thisIter.hasNext() && !otherIter.hasNext()
Mutant 553 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.hasNext() && otherIter.hasNext()
Mutant 554 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.hasNext() || !otherIter.hasNext()
Mutant 555 in Delta.ts: thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert') replaced with thisIter.peekType() !== 'insert' || priority && otherIter.peekType() === 'insert'
Mutant 556 in Delta.ts: Op.length(thisIter.next()) replaced with Op.length(thisIter.next()) + 1
Mutant 557 in Delta.ts: Op.length(thisIter.next()) replaced with thisIter.peekLength() - 1
Mutant 558 in Delta.ts: Op.length(thisIter.next()) replaced with Op.length(otherIter.next())
Mutant 559 in Delta.ts: thisIter.next() replaced with thisIter.next(1)
Mutant 560 in Delta.ts: thisIter.next() replaced with thisIter.next(0)
Mutant 561 in Delta.ts: thisIter.next() replaced with thisIter.next(length + 1)
Mutant 562 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() === 'retain'
Mutant 563 in Delta.ts: otherIter.next() replaced with otherIter.next(2)
Mutant 564 in Delta.ts: otherIter.next() replaced with otherIter.peek()
Mutant 565 in Delta.ts: otherIter.next() replaced with otherIter.next(0)
Mutant 566 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(Math.max(thisIter.peekLength(), otherIter.peekLength()))
Mutant 567 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() + 1)
Mutant 568 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() - 1)
Mutant 569 in Delta.ts: Math.min replaced with Math.max
Mutant 570 in Delta.ts: Math.min replaced with length + 1
Mutant 571 in Delta.ts: Math.min replaced with 0
Mutant 572 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() + 1
Mutant 573 in Delta.ts: thisIter.peekLength() replaced with otherIter.peekLength()
Mutant 574 in Delta.ts: thisIter.peekLength() replaced with 0
Mutant 575 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength() + 1
Mutant 576 in Delta.ts: otherIter.peekLength() replaced with Math.max(thisIter.peekLength(), 1)
Mutant 577 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() - 1
Mutant 578 in Delta.ts: length replaced with length + 1
Mutant 579 in Delta.ts: length replaced with length - 1
Mutant 580 in Delta.ts: length replaced with thisIter.peekLength() + 1
Mutant 581 in Delta.ts: length replaced with length + 1
Mutant 582 in Delta.ts: length replaced with length - 1
Mutant 583 in Delta.ts: length replaced with 0
Mutant 584 in Delta.ts: thisOp.delete replaced with thisOp.retain
Mutant 585 in Delta.ts: thisOp.delete replaced with thisOp.insert
Mutant 586 in Delta.ts: otherOp.delete replaced with thisOp.retain
Mutant 587 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with typeof thisData === 'object' && thisData !== null && typeof otherData === 'string'
Mutant 588 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with typeof thisData === 'object' && thisData === null && typeof otherData === 'object' && otherData !== null
Mutant 589 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData === null
Mutant 590 in Delta.ts: thisData replaced with otherData
Mutant 591 in Delta.ts: thisData replaced with thisData[embedType]
Mutant 592 in Delta.ts: thisData replaced with null
Mutant 593 in Delta.ts: otherData replaced with thisData
Mutant 594 in Delta.ts: otherData replaced with null
Mutant 595 in Delta.ts: otherData replaced with length
Mutant 596 in Delta.ts: Delta.getHandler replaced with Delta.getHandlerWrong
Mutant 597 in Delta.ts: embedType replaced with 'wrongEmbedType'
Mutant 598 in Delta.ts: embedType replaced with otherData[embedType]
Mutant 599 in Delta.ts: embedType replaced with thisData[embedType] + 1
Mutant 600 in Delta.ts: thisIter.hasNext() && offset <= index replaced with !thisIter.hasNext() || offset < index
Mutant 601 in Delta.ts: thisIter.hasNext() && offset <= index replaced with thisIter.hasNext() && offset >= index
Mutant 602 in Delta.ts: thisIter.hasNext() && offset <= index replaced with thisIter.hasNext() && offset < index + 5
Mutant 603 in Delta.ts: nextType === 'delete' replaced with nextType === 'insert'
Mutant 604 in Delta.ts: nextType === 'delete' replaced with nextType === 'retain'
Mutant 605 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(length + 1)
Mutant 606 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(length * 2)
Mutant 607 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(length - 1)
Mutant 608 in Delta.ts: Math.min replaced with Math.max
Mutant 609 in Delta.ts: Math.min replaced with length + 1
Mutant 610 in Delta.ts: Math.min replaced with length - 1
Mutant 611 in Delta.ts: length replaced with length + 1
Mutant 612 in Delta.ts: length replaced with length - 1
Mutant 613 in Delta.ts: length replaced with 0
Mutant 614 in Delta.ts: index - offset replaced with index - length
Mutant 615 in Delta.ts: index - offset replaced with index + offset
Mutant 616 in Delta.ts: index - offset replaced with index * 2
Mutant 617 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType === 'insert' && (offset > index || priority)
Mutant 618 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType !== 'insert' && offset < index && !priority
Mutant 619 in Delta.ts: typeof module === 'object' replaced with typeof module === 'undefined'
Mutant 620 in Delta.ts: typeof module === 'object' replaced with typeof module !== 'object'
Mutant 621 in Op.ts: typeof op.retain === 'number' replaced with typeof op.retain === 'string'
Mutant 622 in Op.ts: typeof op.retain === 'number' replaced with op.retain === null
Mutant 623 in Op.ts: typeof op.retain === 'number' replaced with typeof op.retain === 'object'
Mutant 624 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'string'
Mutant 625 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'number' && op.retain > 0
Mutant 626 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain === undefined
Mutant 627 in OpIterator.ts: this.peekLength replaced with this.index
Mutant 628 in OpIterator.ts: this.peekLength replaced with this.offset + 1
Mutant 629 in OpIterator.ts: this.peekLength replaced with this.ops.length
Mutant 630 in OpIterator.ts: !length replaced with length > 0
Mutant 631 in OpIterator.ts: !length replaced with length === 1
Mutant 632 in OpIterator.ts: !length replaced with length !== undefined
Mutant 633 in OpIterator.ts: nextOp replaced with this.index >= this.ops.length
Mutant 634 in OpIterator.ts: nextOp replaced with nextOp === null
Mutant 635 in OpIterator.ts: nextOp replaced with length < 0
Mutant 636 in OpIterator.ts: Op.length replaced with nextOp.attributes.length
Mutant 637 in OpIterator.ts: Op.length replaced with 0
Mutant 638 in OpIterator.ts: Op.length replaced with Infinity - this.offset
Mutant 639 in OpIterator.ts: nextOp replaced with this.ops[this.index + 1]
Mutant 640 in OpIterator.ts: nextOp replaced with nextOp.attributes
Mutant 641 in OpIterator.ts: nextOp replaced with 0
Mutant 642 in OpIterator.ts: length >= opLength - offset replaced with length < opLength - offset
Mutant 643 in OpIterator.ts: length >= opLength - offset replaced with length === opLength - offset
Mutant 644 in OpIterator.ts: length >= opLength - offset replaced with length > opLength - offset + 1
Mutant 645 in OpIterator.ts: typeof nextOp.delete === 'number' replaced with typeof nextOp.insert === 'string'
Mutant 646 in OpIterator.ts: typeof nextOp.delete === 'number' replaced with nextOp.retain === null
Mutant 647 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with typeof nextOp.retain === 'string'
Mutant 648 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with nextOp.retain === undefined
Mutant 649 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with nextOp.retain > 0
Mutant 650 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with typeof nextOp.retain === 'string'
Mutant 651 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with nextOp.retain === undefined
Mutant 652 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with typeof nextOp.retain === 'number' && nextOp.retain > 0
Mutant 653 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with typeof nextOp.insert === 'number'
Mutant 654 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with nextOp.insert === null
Mutant 655 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with nextOp.insert.length > 0
Mutant 656 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(0)
Mutant 657 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(length + 1)
Mutant 658 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(this.offset)
Mutant 659 in OpIterator.ts: nextOp.insert.substr replaced with nextOp.insert.slice
Mutant 660 in OpIterator.ts: offset replaced with 0
Mutant 661 in OpIterator.ts: offset replaced with this.index
Mutant 662 in OpIterator.ts: offset replaced with length + 1
Mutant 663 in OpIterator.ts: length replaced with 1
Mutant 664 in OpIterator.ts: length replaced with 0
Mutant 665 in OpIterator.ts: length replaced with length + 1
Mutant 666 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index + 1]
Mutant 667 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index] || null
Mutant 668 in OpIterator.ts: this.ops[this.index] replaced with this.ops.length
Mutant 669 in OpIterator.ts: Op.length replaced with this.ops[this.index].length
Mutant 670 in OpIterator.ts: Op.length replaced with 0
Mutant 671 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index + 1]
Mutant 672 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index] || {
  insert: ''
}
Mutant 673 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index] && this.ops[this.index].insert
Mutant 674 in OpIterator.ts: op replaced with !op
Mutant 675 in OpIterator.ts: op replaced with op === null
Mutant 676 in OpIterator.ts: op replaced with op.retain === undefined
Mutant 677 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'string'
Mutant 678 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'number' && op.retain > 0
Mutant 679 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with op.retain === null
Mutant 680 in OpIterator.ts: !this.hasNext() replaced with this.hasNext()
Mutant 681 in OpIterator.ts: !this.hasNext() replaced with this.index === this.ops.length
Mutant 682 in OpIterator.ts: !this.hasNext() replaced with this.offset > 0
Mutant 683 in OpIterator.ts: this.hasNext replaced with this.index >= this.ops.length
Mutant 684 in OpIterator.ts: this.hasNext replaced with this.index < this.ops.length - 1
Mutant 685 in OpIterator.ts: this.offset === 0 replaced with this.offset > 0
Mutant 686 in OpIterator.ts: this.offset === 0 replaced with this.index === this.ops.length
Mutant 687 in OpIterator.ts: this.offset === 0 replaced with this.index < this.ops.length - 1
Mutant 688 in OpIterator.ts: this.index replaced with this.index + 1
Mutant 689 in OpIterator.ts: this.index replaced with this.index - 1
Mutant 690 in OpIterator.ts: this.index replaced with 0
Mutant 691 in OpIterator.ts: this.next replaced with this.ops[this.index + 1]
Mutant 692 in OpIterator.ts: this.next replaced with null
Mutant 693 in OpIterator.ts: this.next replaced with this.ops[this.index].insert
Mutant 694 in OpIterator.ts: this.index replaced with this.index + 1
Mutant 695 in OpIterator.ts: this.index replaced with this.index - 1
Mutant 696 in OpIterator.ts: this.index replaced with 0
Mutant 697 in OpIterator.ts: [next].concat replaced with [next]
[32m13:53:38 (3160) INFO Instrumenter[39m Instrumented 4 source file(s) with 698 mutant(s)
[32m13:53:39 (3160) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m13:53:40 (3160) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m13:53:40 (3160) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m13:53:43 (3160) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 3 seconds (net 3037 ms, overhead 2 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~38m) 3/698 tested (3 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~38m) 6/698 tested (5 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~34m) 10/698 tested (6 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~35m) 13/698 tested (6 survived, 0 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~33m) 17/698 tested (6 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~33m) 20/698 tested (8 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~34m) 23/698 tested (8 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~33m) 27/698 tested (8 survived, 0 timed out)
Mutation testing 4% (elapsed: ~1m, remaining: ~33m) 30/698 tested (10 survived, 0 timed out)
Mutation testing 4% (elapsed: ~1m, remaining: ~32m) 34/698 tested (12 survived, 0 timed out)
Mutation testing 5% (elapsed: ~1m, remaining: ~32m) 37/698 tested (12 survived, 0 timed out)
Mutation testing 5% (elapsed: ~2m, remaining: ~32m) 41/698 tested (12 survived, 0 timed out)
Mutation testing 6% (elapsed: ~2m, remaining: ~32m) 44/698 tested (12 survived, 0 timed out)
Mutation testing 6% (elapsed: ~2m, remaining: ~31m) 48/698 tested (12 survived, 0 timed out)
Mutation testing 7% (elapsed: ~2m, remaining: ~31m) 51/698 tested (12 survived, 0 timed out)
Mutation testing 7% (elapsed: ~2m, remaining: ~31m) 54/698 tested (12 survived, 0 timed out)
Mutation testing 8% (elapsed: ~2m, remaining: ~31m) 58/698 tested (12 survived, 0 timed out)
Mutation testing 8% (elapsed: ~3m, remaining: ~31m) 61/698 tested (12 survived, 0 timed out)
Mutation testing 9% (elapsed: ~3m, remaining: ~30m) 65/698 tested (13 survived, 0 timed out)
Mutation testing 9% (elapsed: ~3m, remaining: ~30m) 68/698 tested (13 survived, 0 timed out)
Mutation testing 10% (elapsed: ~3m, remaining: ~30m) 72/698 tested (14 survived, 0 timed out)
Mutation testing 10% (elapsed: ~3m, remaining: ~30m) 75/698 tested (14 survived, 0 timed out)
Mutation testing 11% (elapsed: ~3m, remaining: ~30m) 79/698 tested (15 survived, 0 timed out)
Mutation testing 11% (elapsed: ~4m, remaining: ~30m) 82/698 tested (16 survived, 0 timed out)
Mutation testing 12% (elapsed: ~4m, remaining: ~29m) 86/698 tested (18 survived, 0 timed out)
Mutation testing 12% (elapsed: ~4m, remaining: ~29m) 89/698 tested (18 survived, 0 timed out)
Mutation testing 13% (elapsed: ~4m, remaining: ~29m) 93/698 tested (19 survived, 0 timed out)
Mutation testing 13% (elapsed: ~4m, remaining: ~29m) 96/698 tested (19 survived, 0 timed out)
Mutation testing 14% (elapsed: ~4m, remaining: ~28m) 100/698 tested (20 survived, 0 timed out)
Mutation testing 14% (elapsed: ~5m, remaining: ~28m) 103/698 tested (20 survived, 0 timed out)
Mutation testing 15% (elapsed: ~5m, remaining: ~28m) 107/698 tested (21 survived, 0 timed out)
Mutation testing 15% (elapsed: ~5m, remaining: ~28m) 110/698 tested (22 survived, 0 timed out)
Mutation testing 16% (elapsed: ~5m, remaining: ~28m) 114/698 tested (22 survived, 0 timed out)
Mutation testing 16% (elapsed: ~5m, remaining: ~28m) 117/698 tested (22 survived, 0 timed out)
Mutation testing 17% (elapsed: ~5m, remaining: ~27m) 121/698 tested (22 survived, 0 timed out)
Mutation testing 17% (elapsed: ~6m, remaining: ~27m) 124/698 tested (22 survived, 0 timed out)
Mutation testing 18% (elapsed: ~6m, remaining: ~27m) 128/698 tested (23 survived, 0 timed out)
Mutation testing 18% (elapsed: ~6m, remaining: ~27m) 131/698 tested (24 survived, 0 timed out)
Mutation testing 19% (elapsed: ~6m, remaining: ~27m) 135/698 tested (24 survived, 0 timed out)
Mutation testing 19% (elapsed: ~6m, remaining: ~27m) 138/698 tested (24 survived, 0 timed out)
Mutation testing 20% (elapsed: ~6m, remaining: ~26m) 142/698 tested (24 survived, 0 timed out)
Mutation testing 20% (elapsed: ~7m, remaining: ~26m) 145/698 tested (24 survived, 0 timed out)
Mutation testing 21% (elapsed: ~7m, remaining: ~26m) 149/698 tested (24 survived, 0 timed out)
Mutation testing 21% (elapsed: ~7m, remaining: ~26m) 153/698 tested (25 survived, 0 timed out)
Mutation testing 22% (elapsed: ~7m, remaining: ~26m) 156/698 tested (25 survived, 0 timed out)
Mutation testing 22% (elapsed: ~7m, remaining: ~25m) 160/698 tested (27 survived, 0 timed out)
Mutation testing 23% (elapsed: ~7m, remaining: ~25m) 163/698 tested (28 survived, 0 timed out)
Mutation testing 23% (elapsed: ~8m, remaining: ~25m) 167/698 tested (29 survived, 0 timed out)
Mutation testing 24% (elapsed: ~8m, remaining: ~25m) 170/698 tested (29 survived, 0 timed out)
Mutation testing 24% (elapsed: ~8m, remaining: ~25m) 174/698 tested (30 survived, 0 timed out)
Mutation testing 25% (elapsed: ~8m, remaining: ~25m) 177/698 tested (30 survived, 0 timed out)
Mutation testing 25% (elapsed: ~8m, remaining: ~24m) 181/698 tested (31 survived, 0 timed out)
Mutation testing 26% (elapsed: ~8m, remaining: ~24m) 184/698 tested (31 survived, 0 timed out)
Mutation testing 26% (elapsed: ~9m, remaining: ~24m) 188/698 tested (31 survived, 0 timed out)
Mutation testing 27% (elapsed: ~9m, remaining: ~24m) 191/698 tested (33 survived, 0 timed out)
Mutation testing 27% (elapsed: ~9m, remaining: ~24m) 195/698 tested (33 survived, 0 timed out)
Mutation testing 28% (elapsed: ~9m, remaining: ~23m) 198/698 tested (34 survived, 0 timed out)
Mutation testing 28% (elapsed: ~9m, remaining: ~23m) 202/698 tested (34 survived, 0 timed out)
Mutation testing 29% (elapsed: ~9m, remaining: ~23m) 205/698 tested (34 survived, 0 timed out)
Mutation testing 29% (elapsed: ~10m, remaining: ~23m) 209/698 tested (34 survived, 0 timed out)
Mutation testing 30% (elapsed: ~10m, remaining: ~23m) 213/698 tested (34 survived, 0 timed out)
Mutation testing 30% (elapsed: ~10m, remaining: ~23m) 215/698 tested (34 survived, 0 timed out)
Mutation testing 31% (elapsed: ~10m, remaining: ~23m) 217/698 tested (34 survived, 1 timed out)
Mutation testing 31% (elapsed: ~10m, remaining: ~23m) 221/698 tested (34 survived, 1 timed out)
Mutation testing 31% (elapsed: ~10m, remaining: ~23m) 222/698 tested (34 survived, 1 timed out)
Mutation testing 32% (elapsed: ~11m, remaining: ~23m) 225/698 tested (35 survived, 2 timed out)
Mutation testing 32% (elapsed: ~11m, remaining: ~22m) 229/698 tested (36 survived, 2 timed out)
Mutation testing 33% (elapsed: ~11m, remaining: ~22m) 232/698 tested (37 survived, 2 timed out)
Mutation testing 33% (elapsed: ~11m, remaining: ~22m) 236/698 tested (39 survived, 2 timed out)
Mutation testing 34% (elapsed: ~11m, remaining: ~22m) 239/698 tested (39 survived, 2 timed out)
Mutation testing 34% (elapsed: ~11m, remaining: ~22m) 243/698 tested (39 survived, 2 timed out)
Mutation testing 34% (elapsed: ~12m, remaining: ~22m) 244/698 tested (39 survived, 3 timed out)
Mutation testing 35% (elapsed: ~12m, remaining: ~22m) 245/698 tested (39 survived, 4 timed out)
Mutation testing 35% (elapsed: ~12m, remaining: ~22m) 246/698 tested (39 survived, 5 timed out)
Mutation testing 35% (elapsed: ~12m, remaining: ~22m) 248/698 tested (40 survived, 6 timed out)
Mutation testing 35% (elapsed: ~12m, remaining: ~22m) 250/698 tested (41 survived, 6 timed out)
Mutation testing 35% (elapsed: ~12m, remaining: ~22m) 251/698 tested (41 survived, 7 timed out)
Mutation testing 36% (elapsed: ~13m, remaining: ~23m) 252/698 tested (41 survived, 8 timed out)
Mutation testing 36% (elapsed: ~13m, remaining: ~22m) 255/698 tested (43 survived, 9 timed out)
Mutation testing 36% (elapsed: ~13m, remaining: ~22m) 258/698 tested (43 survived, 9 timed out)
Mutation testing 37% (elapsed: ~13m, remaining: ~22m) 262/698 tested (43 survived, 9 timed out)
Mutation testing 37% (elapsed: ~13m, remaining: ~22m) 265/698 tested (43 survived, 9 timed out)
Mutation testing 38% (elapsed: ~13m, remaining: ~22m) 269/698 tested (43 survived, 9 timed out)
Mutation testing 38% (elapsed: ~14m, remaining: ~21m) 272/698 tested (43 survived, 9 timed out)
Mutation testing 39% (elapsed: ~14m, remaining: ~21m) 276/698 tested (43 survived, 9 timed out)
Mutation testing 39% (elapsed: ~14m, remaining: ~21m) 279/698 tested (44 survived, 9 timed out)
Mutation testing 40% (elapsed: ~14m, remaining: ~21m) 283/698 tested (44 survived, 9 timed out)
Mutation testing 40% (elapsed: ~14m, remaining: ~21m) 286/698 tested (45 survived, 9 timed out)
Mutation testing 41% (elapsed: ~14m, remaining: ~20m) 290/698 tested (46 survived, 9 timed out)
Mutation testing 41% (elapsed: ~15m, remaining: ~20m) 293/698 tested (48 survived, 9 timed out)
Mutation testing 42% (elapsed: ~15m, remaining: ~20m) 297/698 tested (49 survived, 9 timed out)
Mutation testing 42% (elapsed: ~15m, remaining: ~20m) 300/698 tested (49 survived, 9 timed out)
Mutation testing 43% (elapsed: ~15m, remaining: ~20m) 304/698 tested (49 survived, 9 timed out)
Mutation testing 43% (elapsed: ~15m, remaining: ~19m) 307/698 tested (49 survived, 9 timed out)
Mutation testing 44% (elapsed: ~15m, remaining: ~19m) 311/698 tested (50 survived, 9 timed out)
Mutation testing 44% (elapsed: ~16m, remaining: ~19m) 314/698 tested (50 survived, 9 timed out)
Mutation testing 45% (elapsed: ~16m, remaining: ~19m) 318/698 tested (50 survived, 9 timed out)
Mutation testing 45% (elapsed: ~16m, remaining: ~19m) 321/698 tested (52 survived, 9 timed out)
Mutation testing 46% (elapsed: ~16m, remaining: ~18m) 325/698 tested (52 survived, 9 timed out)
Mutation testing 46% (elapsed: ~16m, remaining: ~18m) 328/698 tested (53 survived, 9 timed out)
Mutation testing 47% (elapsed: ~16m, remaining: ~18m) 330/698 tested (55 survived, 9 timed out)
Mutation testing 47% (elapsed: ~17m, remaining: ~18m) 333/698 tested (56 survived, 10 timed out)
Mutation testing 47% (elapsed: ~17m, remaining: ~18m) 334/698 tested (56 survived, 11 timed out)
Mutation testing 48% (elapsed: ~17m, remaining: ~18m) 337/698 tested (57 survived, 11 timed out)
Mutation testing 48% (elapsed: ~17m, remaining: ~18m) 339/698 tested (58 survived, 12 timed out)
Mutation testing 48% (elapsed: ~17m, remaining: ~18m) 342/698 tested (60 survived, 12 timed out)
Mutation testing 49% (elapsed: ~17m, remaining: ~18m) 343/698 tested (61 survived, 12 timed out)
Mutation testing 49% (elapsed: ~18m, remaining: ~18m) 345/698 tested (62 survived, 13 timed out)
Mutation testing 49% (elapsed: ~18m, remaining: ~18m) 348/698 tested (64 survived, 14 timed out)
Mutation testing 50% (elapsed: ~18m, remaining: ~18m) 351/698 tested (65 survived, 14 timed out)
Mutation testing 50% (elapsed: ~18m, remaining: ~17m) 355/698 tested (66 survived, 14 timed out)
Mutation testing 51% (elapsed: ~18m, remaining: ~17m) 356/698 tested (66 survived, 15 timed out)
Mutation testing 51% (elapsed: ~18m, remaining: ~17m) 358/698 tested (66 survived, 15 timed out)
Mutation testing 51% (elapsed: ~19m, remaining: ~17m) 361/698 tested (66 survived, 16 timed out)
Mutation testing 51% (elapsed: ~19m, remaining: ~17m) 362/698 tested (67 survived, 16 timed out)
Mutation testing 52% (elapsed: ~19m, remaining: ~17m) 365/698 tested (68 survived, 17 timed out)
Mutation testing 52% (elapsed: ~19m, remaining: ~17m) 369/698 tested (68 survived, 17 timed out)
Mutation testing 53% (elapsed: ~19m, remaining: ~17m) 372/698 tested (68 survived, 17 timed out)
Mutation testing 53% (elapsed: ~19m, remaining: ~16m) 376/698 tested (69 survived, 17 timed out)
Mutation testing 54% (elapsed: ~20m, remaining: ~16m) 379/698 tested (69 survived, 17 timed out)
Mutation testing 54% (elapsed: ~20m, remaining: ~16m) 383/698 tested (69 survived, 17 timed out)
Mutation testing 55% (elapsed: ~20m, remaining: ~16m) 386/698 tested (69 survived, 17 timed out)
Mutation testing 55% (elapsed: ~20m, remaining: ~16m) 390/698 tested (69 survived, 17 timed out)
Mutation testing 56% (elapsed: ~20m, remaining: ~16m) 393/698 tested (69 survived, 17 timed out)
Mutation testing 56% (elapsed: ~20m, remaining: ~15m) 397/698 tested (69 survived, 17 timed out)
Mutation testing 57% (elapsed: ~21m, remaining: ~15m) 400/698 tested (69 survived, 17 timed out)
Mutation testing 57% (elapsed: ~21m, remaining: ~15m) 404/698 tested (70 survived, 17 timed out)
Mutation testing 58% (elapsed: ~21m, remaining: ~15m) 407/698 tested (70 survived, 17 timed out)
Mutation testing 58% (elapsed: ~21m, remaining: ~15m) 411/698 tested (70 survived, 17 timed out)
Mutation testing 59% (elapsed: ~21m, remaining: ~14m) 414/698 tested (70 survived, 17 timed out)
Mutation testing 59% (elapsed: ~21m, remaining: ~14m) 418/698 tested (70 survived, 17 timed out)
Mutation testing 60% (elapsed: ~22m, remaining: ~14m) 421/698 tested (70 survived, 17 timed out)
Mutation testing 60% (elapsed: ~22m, remaining: ~14m) 425/698 tested (70 survived, 17 timed out)
Mutation testing 61% (elapsed: ~22m, remaining: ~14m) 428/698 tested (71 survived, 17 timed out)
Mutation testing 61% (elapsed: ~22m, remaining: ~13m) 431/698 tested (72 survived, 17 timed out)
Mutation testing 61% (elapsed: ~22m, remaining: ~13m) 432/698 tested (72 survived, 18 timed out)
Mutation testing 62% (elapsed: ~22m, remaining: ~13m) 434/698 tested (72 survived, 19 timed out)
Mutation testing 62% (elapsed: ~23m, remaining: ~13m) 435/698 tested (72 survived, 19 timed out)
Mutation testing 62% (elapsed: ~23m, remaining: ~13m) 439/698 tested (73 survived, 20 timed out)
Mutation testing 63% (elapsed: ~23m, remaining: ~13m) 442/698 tested (73 survived, 20 timed out)
Mutation testing 63% (elapsed: ~23m, remaining: ~13m) 446/698 tested (73 survived, 20 timed out)
Mutation testing 64% (elapsed: ~23m, remaining: ~13m) 449/698 tested (73 survived, 20 timed out)
Mutation testing 64% (elapsed: ~23m, remaining: ~12m) 453/698 tested (73 survived, 20 timed out)
Mutation testing 65% (elapsed: ~24m, remaining: ~12m) 456/698 tested (73 survived, 20 timed out)
Mutation testing 65% (elapsed: ~24m, remaining: ~12m) 460/698 tested (74 survived, 20 timed out)
Mutation testing 66% (elapsed: ~24m, remaining: ~12m) 463/698 tested (74 survived, 20 timed out)
Mutation testing 66% (elapsed: ~24m, remaining: ~12m) 467/698 tested (74 survived, 20 timed out)
Mutation testing 67% (elapsed: ~24m, remaining: ~11m) 470/698 tested (74 survived, 20 timed out)
Mutation testing 67% (elapsed: ~24m, remaining: ~11m) 474/698 tested (74 survived, 20 timed out)
Mutation testing 68% (elapsed: ~25m, remaining: ~11m) 477/698 tested (74 survived, 20 timed out)
Mutation testing 68% (elapsed: ~25m, remaining: ~11m) 481/698 tested (75 survived, 20 timed out)
Mutation testing 69% (elapsed: ~25m, remaining: ~11m) 484/698 tested (75 survived, 20 timed out)
Mutation testing 69% (elapsed: ~25m, remaining: ~10m) 488/698 tested (77 survived, 20 timed out)
Mutation testing 70% (elapsed: ~25m, remaining: ~10m) 491/698 tested (77 survived, 20 timed out)
Mutation testing 70% (elapsed: ~25m, remaining: ~10m) 495/698 tested (77 survived, 20 timed out)
Mutation testing 71% (elapsed: ~26m, remaining: ~10m) 498/698 tested (77 survived, 20 timed out)
Mutation testing 71% (elapsed: ~26m, remaining: ~10m) 502/698 tested (78 survived, 20 timed out)
Mutation testing 72% (elapsed: ~26m, remaining: ~9m) 506/698 tested (78 survived, 20 timed out)
Mutation testing 72% (elapsed: ~26m, remaining: ~9m) 509/698 tested (79 survived, 20 timed out)
Mutation testing 73% (elapsed: ~26m, remaining: ~9m) 513/698 tested (79 survived, 20 timed out)
Mutation testing 73% (elapsed: ~26m, remaining: ~9m) 516/698 tested (80 survived, 20 timed out)
Mutation testing 74% (elapsed: ~27m, remaining: ~9m) 519/698 tested (80 survived, 20 timed out)
Mutation testing 74% (elapsed: ~27m, remaining: ~9m) 523/698 tested (80 survived, 20 timed out)
Mutation testing 75% (elapsed: ~27m, remaining: ~8m) 526/698 tested (80 survived, 20 timed out)
Mutation testing 75% (elapsed: ~27m, remaining: ~8m) 530/698 tested (80 survived, 20 timed out)
Mutation testing 76% (elapsed: ~27m, remaining: ~8m) 533/698 tested (80 survived, 20 timed out)
Mutation testing 76% (elapsed: ~27m, remaining: ~8m) 536/698 tested (80 survived, 20 timed out)
Mutation testing 77% (elapsed: ~28m, remaining: ~8m) 540/698 tested (81 survived, 20 timed out)
Mutation testing 77% (elapsed: ~28m, remaining: ~8m) 543/698 tested (81 survived, 20 timed out)
Mutation testing 78% (elapsed: ~28m, remaining: ~7m) 547/698 tested (81 survived, 20 timed out)
Mutation testing 78% (elapsed: ~28m, remaining: ~7m) 550/698 tested (81 survived, 20 timed out)
Mutation testing 79% (elapsed: ~28m, remaining: ~7m) 553/698 tested (81 survived, 20 timed out)
Mutation testing 79% (elapsed: ~28m, remaining: ~7m) 555/698 tested (81 survived, 21 timed out)
Mutation testing 79% (elapsed: ~29m, remaining: ~7m) 556/698 tested (81 survived, 22 timed out)
Mutation testing 79% (elapsed: ~29m, remaining: ~7m) 557/698 tested (81 survived, 22 timed out)
Mutation testing 79% (elapsed: ~29m, remaining: ~7m) 558/698 tested (81 survived, 23 timed out)
Mutation testing 80% (elapsed: ~29m, remaining: ~7m) 561/698 tested (83 survived, 24 timed out)
Mutation testing 80% (elapsed: ~29m, remaining: ~7m) 563/698 tested (83 survived, 25 timed out)
Mutation testing 80% (elapsed: ~29m, remaining: ~7m) 564/698 tested (84 survived, 25 timed out)
Mutation testing 81% (elapsed: ~30m, remaining: ~6m) 567/698 tested (85 survived, 26 timed out)
Mutation testing 81% (elapsed: ~30m, remaining: ~6m) 571/698 tested (85 survived, 26 timed out)
Mutation testing 82% (elapsed: ~30m, remaining: ~6m) 574/698 tested (85 survived, 26 timed out)
Mutation testing 82% (elapsed: ~30m, remaining: ~6m) 578/698 tested (85 survived, 26 timed out)
Mutation testing 83% (elapsed: ~30m, remaining: ~6m) 581/698 tested (85 survived, 26 timed out)
Mutation testing 83% (elapsed: ~30m, remaining: ~6m) 584/698 tested (85 survived, 26 timed out)
Mutation testing 84% (elapsed: ~31m, remaining: ~5m) 588/698 tested (85 survived, 26 timed out)
Mutation testing 84% (elapsed: ~31m, remaining: ~5m) 591/698 tested (86 survived, 26 timed out)
Mutation testing 85% (elapsed: ~31m, remaining: ~5m) 595/698 tested (87 survived, 26 timed out)
Mutation testing 85% (elapsed: ~31m, remaining: ~5m) 598/698 tested (87 survived, 26 timed out)
Mutation testing 85% (elapsed: ~31m, remaining: ~5m) 600/698 tested (87 survived, 26 timed out)
Mutation testing 86% (elapsed: ~31m, remaining: ~5m) 603/698 tested (87 survived, 27 timed out)
Mutation testing 86% (elapsed: ~32m, remaining: ~4m) 606/698 tested (87 survived, 27 timed out)
Mutation testing 87% (elapsed: ~32m, remaining: ~4m) 610/698 tested (87 survived, 27 timed out)
Mutation testing 87% (elapsed: ~32m, remaining: ~4m) 613/698 tested (87 survived, 27 timed out)
Mutation testing 88% (elapsed: ~32m, remaining: ~4m) 617/698 tested (87 survived, 27 timed out)
Mutation testing 88% (elapsed: ~32m, remaining: ~4m) 620/698 tested (88 survived, 27 timed out)
Mutation testing 89% (elapsed: ~32m, remaining: ~3m) 624/698 tested (89 survived, 27 timed out)
Mutation testing 89% (elapsed: ~33m, remaining: ~3m) 627/698 tested (91 survived, 27 timed out)
Mutation testing 90% (elapsed: ~33m, remaining: ~3m) 630/698 tested (91 survived, 27 timed out)
Mutation testing 90% (elapsed: ~33m, remaining: ~3m) 631/698 tested (91 survived, 28 timed out)
Mutation testing 90% (elapsed: ~33m, remaining: ~3m) 632/698 tested (91 survived, 29 timed out)
Mutation testing 90% (elapsed: ~33m, remaining: ~3m) 633/698 tested (91 survived, 30 timed out)
Mutation testing 90% (elapsed: ~33m, remaining: ~3m) 634/698 tested (91 survived, 31 timed out)
Mutation testing 90% (elapsed: ~34m, remaining: ~3m) 635/698 tested (91 survived, 32 timed out)
Mutation testing 91% (elapsed: ~34m, remaining: ~3m) 637/698 tested (91 survived, 33 timed out)
Mutation testing 91% (elapsed: ~34m, remaining: ~3m) 641/698 tested (91 survived, 33 timed out)
Mutation testing 91% (elapsed: ~34m, remaining: ~3m) 642/698 tested (91 survived, 33 timed out)
Mutation testing 92% (elapsed: ~34m, remaining: ~2m) 643/698 tested (91 survived, 34 timed out)
Mutation testing 92% (elapsed: ~34m, remaining: ~2m) 646/698 tested (91 survived, 35 timed out)
Mutation testing 93% (elapsed: ~35m, remaining: ~2m) 650/698 tested (92 survived, 35 timed out)
Mutation testing 93% (elapsed: ~35m, remaining: ~2m) 653/698 tested (92 survived, 35 timed out)
Mutation testing 93% (elapsed: ~35m, remaining: ~2m) 656/698 tested (93 survived, 35 timed out)
Mutation testing 94% (elapsed: ~35m, remaining: ~2m) 660/698 tested (93 survived, 35 timed out)
Mutation testing 94% (elapsed: ~35m, remaining: ~1m) 663/698 tested (93 survived, 35 timed out)
Mutation testing 95% (elapsed: ~35m, remaining: ~1m) 666/698 tested (93 survived, 35 timed out)
Mutation testing 95% (elapsed: ~36m, remaining: ~1m) 670/698 tested (94 survived, 35 timed out)
Mutation testing 96% (elapsed: ~36m, remaining: ~1m) 673/698 tested (95 survived, 35 timed out)
Mutation testing 96% (elapsed: ~36m, remaining: ~1m) 677/698 tested (95 survived, 35 timed out)
Mutation testing 97% (elapsed: ~36m, remaining: <1m) 680/698 tested (95 survived, 35 timed out)
Mutation testing 97% (elapsed: ~36m, remaining: <1m) 683/698 tested (96 survived, 35 timed out)
Mutation testing 98% (elapsed: ~36m, remaining: <1m) 687/698 tested (97 survived, 35 timed out)
Mutation testing 98% (elapsed: ~37m, remaining: <1m) 690/698 tested (97 survived, 35 timed out)
Mutation testing 99% (elapsed: ~37m, remaining: <1m) 694/698 tested (97 survived, 35 timed out)
Mutation testing 99% (elapsed: ~37m, remaining: <1m) 697/698 tested (97 survived, 35 timed out)

All tests
  ✓ All tests (killed 566)

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (Array.isArray(a)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (typeof a === 'string') {

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (a === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (b === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (Array.isArray(b)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:20:32
-       let attributes = cloneDeep(b);
+       let attributes = cloneDeep(b || {});

[Survived] PrecomputedMutator
src/AttributeMap.ts:29:5
-       for (const key in a) {
-         if (a[key] !== undefined && b[key] === undefined) {
-           attributes[key] = a[key];
-         }
-       }
+       for (const key of Object.keys(a)) {
+     if (a[key] !== undefined && b[key] === undefined) {
+       attributes[key] = a[key];
+     }
+   }

[Survived] PrecomputedMutator
src/AttributeMap.ts:29:5
-       for (const key in a) {
-         if (a[key] !== undefined && b[key] === undefined) {
-           attributes[key] = a[key];
-         }
-       }
+       for (const key in {
+     ...a,
+     ...b
+   }) {
+     if (a[key] !== undefined && b[key] === undefined) {
+       attributes[key] = a[key];
+     }
+   }

[Survived] PrecomputedMutator
src/AttributeMap.ts:41:9
-       if (typeof a !== 'object') {
+       if (Array.isArray(a)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:41:9
-       if (typeof a !== 'object') {
+       if (a == null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (b === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (Array.isArray(b)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:70:11
-         if (attr[key] !== base[key] && base[key] === undefined) {
+         if (attr[key] === undefined || base[key] === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:88:9
-       if (!priority) {
+       if (!priority && priority !== undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:97:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(b).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(1); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(-1); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(String.fromCharCode(65)); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:23:7
-     if (typeof b !== 'object' || b === null) {
+     if (typeof b === 'string') {

[Survived] PrecomputedMutator
src/Delta.ts:51:9
-       if (!handler) {
+       if (handler === undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:60:9
-       if (Array.isArray(ops)) {
+       if (ops instanceof Array) {

[Survived] PrecomputedMutator
src/Delta.ts:62:16
-       } else if (ops != null && Array.isArray(ops.ops)) {
+       } else if (ops != null && typeof ops.ops === 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:89:9
-       if (length <= 0) {
+       if (length === 0) {

[Survived] PrecomputedMutator
src/Delta.ts:99:9
-       if (typeof length === 'number' && length <= 0) {
+       if (length === 0) {

[Survived] PrecomputedMutator
src/Delta.ts:141:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.attributes != null) {

[Survived] PrecomputedMutator
src/Delta.ts:146:11
-             typeof newOp.retain === 'number' &&
-             typeof lastOp.retain === 'number'
+             newOp.retain > 0 && lastOp.retain > 0

[Survived] PrecomputedMutator
src/Delta.ts:150:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.attributes != null) {

[Survived] PrecomputedMutator
src/Delta.ts:157:9
-       if (index === this.ops.length) {
+       if (index > this.ops.length) {

[Survived] PrecomputedMutator
src/Delta.ts:157:9
-       if (index === this.ops.length) {
+       if (index < this.ops.length - 1) {

[Survived] PrecomputedMutator
src/Delta.ts:160:30
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, -1, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:182:25
-       return this.ops.map(predicate);
+       return this.ops.map(predicate.bind(this));

[Survived] PrecomputedMutator
src/Delta.ts:199:12
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, initialValue * 2);

[Survived] PrecomputedMutator
src/Delta.ts:199:12
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, 0);

[Survived] PrecomputedMutator
src/Delta.ts:199:39
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, null);

[Survived] PrecomputedMutator
src/Delta.ts:228:28
-           nextOp = iter.next(end - index);
+           nextOp = iter.next(Math.max(0, end - index));

[Survived] PrecomputedMutator
src/Delta.ts:242:7
-         firstOther != null &&
-         typeof firstOther.retain === 'number' &&
-         firstOther.attributes == null
+         firstOther != null && typeof firstOther.retain === 'string' && firstOther.attributes == null

[Survived] PrecomputedMutator
src/Delta.ts:248:9
-           thisIter.peekType() === 'insert' &&
-           thisIter.peekLength() <= firstLeft
+           thisIter.peekType() === 'insert' && thisIter.peekLength() === firstLeft

[Survived] PrecomputedMutator
src/Delta.ts:248:9
-           thisIter.peekType() === 'insert' &&
+           otherIter.peekType() === 'insert' &&

[Survived] PrecomputedMutator
src/Delta.ts:252:18
-           ops.push(thisIter.next());
+           ops.push(thisIter.next(0));

[Survived] PrecomputedMutator
src/Delta.ts:261:20
-           delta.push(otherIter.next());
+           delta.push(otherIter.next(1));

[Survived] PrecomputedMutator
src/Delta.ts:261:20
-           delta.push(otherIter.next());
+           delta.push(otherIter.next(0));

[Survived] PrecomputedMutator
src/Delta.ts:263:20
-           delta.push(thisIter.next());
+           delta.push(thisIter.next(1));

[Survived] PrecomputedMutator
src/Delta.ts:263:20
-           delta.push(thisIter.next());
+           delta.push(thisIter.next(0));

[Survived] PrecomputedMutator
src/Delta.ts:270:15
-             if (typeof thisOp.retain === 'number') {
+             if (thisOp.retain > 0) {

[Survived] PrecomputedMutator
src/Delta.ts:275:19
-                 if (thisOp.retain == null) {
+                 if (thisOp.retain == undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:309:13
-               !otherIter.hasNext() &&
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               !otherIter.hasNext() && !isEqual(delta.ops[delta.ops.length - 1], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(newOp, delta.ops[delta.ops.length - 1])

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(newOp.attributes, delta.ops[delta.ops.length - 1].attributes)

[Survived] PrecomputedMutator
src/Delta.ts:310:21
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 2], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:333:18
-         delta.push(other.ops[0]);
+         delta.push(other.ops[0] || {});

[Survived] PrecomputedMutator
src/Delta.ts:355:24
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], 0);

[Survived] PrecomputedMutator
src/Delta.ts:355:24
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], null);

[Survived] PrecomputedMutator
src/Delta.ts:355:53
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], 0);

[Survived] PrecomputedMutator
src/Delta.ts:355:53
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], undefined);

[Survived] PrecomputedMutator
src/Delta.ts:355:53
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], cursor + 1);

[Survived] PrecomputedMutator
src/Delta.ts:360:14
-         while (length > 0) {
+         while (length !== 0) {

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(thisIter.peekLength() + 1);

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(Math.max(otherIter.peekLength(), length));

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.max(otherIter.peekLength(), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:33
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(thisIter.peekLength(), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:33
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength() + 1, length);

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), otherIter.peekLength() + 1);

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), thisIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:365:27
-               retDelta.push(otherIter.next(opLength));
+               retDelta.push(otherIter.next(opLength + 1));

[Survived] PrecomputedMutator
src/Delta.ts:365:42
-               retDelta.push(otherIter.next(opLength));
+               retDelta.push(otherIter.next(length));

[Survived] PrecomputedMutator
src/Delta.ts:365:42
-               retDelta.push(otherIter.next(opLength));
+               retDelta.push(otherIter.next(otherIter.peekLength() + 1));

[Survived] PrecomputedMutator
src/Delta.ts:368:41
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:368:41
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, thisIter.peekLength() + 1);

[Survived] PrecomputedMutator
src/Delta.ts:378:42
-               const thisOp = thisIter.next(opLength);
+               const thisOp = thisIter.next(length);

[Survived] PrecomputedMutator
src/Delta.ts:408:11
-         if (iter.peekType() !== 'insert') {
+         if (iter.peekType() === 'retain') {

[Survived] PrecomputedMutator
src/Delta.ts:420:19
-           line.push(iter.next(index));
+           line.push(iter.next(1));

[Survived] PrecomputedMutator
src/Delta.ts:420:29
-           line.push(iter.next(index));
+           line.push(iter.next(i + 1));

[Survived] PrecomputedMutator
src/Delta.ts:422:39
-           if (predicate(line, iter.next(1).attributes || {}, i) === false) {
+           if (predicate(line, iter.next(1 + i).attributes || {}, i) === false) {

[Survived] PrecomputedMutator
src/Delta.ts:438:25
-           inverted.delete(Op.length(op));
+           inverted.delete(op.insert.length);

[Survived] PrecomputedMutator
src/Delta.ts:446:15
-             if (op.delete) {
+             if (op.retain === undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.retain || op.attributes) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.attributes && op.retain) {

[Survived] PrecomputedMutator
src/Delta.ts:451:35
-                 AttributeMap.invert(op.attributes, baseOp.attributes),
+                 AttributeMap.invert(op.attributes || {}, baseOp.attributes),

[Survived] PrecomputedMutator
src/Delta.ts:457:23
-           const slice = base.slice(baseIndex, baseIndex + 1);
+           const slice = base.slice(baseIndex, baseIndex + 2);

[Survived] PrecomputedMutator
src/Delta.ts:457:45
-           const slice = base.slice(baseIndex, baseIndex + 1);
+           const slice = base.slice(baseIndex, baseIndex + 2);

[Survived] PrecomputedMutator
src/Delta.ts:466:31
-             AttributeMap.invert(op.attributes, baseOp.attributes),
+             AttributeMap.invert(op.attributes || {}, baseOp.attributes),

[Survived] PrecomputedMutator
src/Delta.ts:491:32
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter.next(1)));

[Survived] PrecomputedMutator
src/Delta.ts:491:32
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter.next(0)));

[Survived] PrecomputedMutator
src/Delta.ts:493:20
-           delta.push(otherIter.next());
+           delta.push(otherIter.next(2));

[Survived] PrecomputedMutator
src/Delta.ts:493:20
-           delta.push(otherIter.next());
+           delta.push(otherIter.next(0));

[Survived] PrecomputedMutator
src/Delta.ts:516:43
-               const embedType = Object.keys(thisData)[0];
+               const embedType = Object.keys(otherData)[0];

[Survived] PrecomputedMutator
src/Delta.ts:517:43
-               if (embedType === Object.keys(otherData)[0]) {
+               if (embedType === Object.keys(thisData)[0]) {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (typeof module === 'undefined') {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (typeof module !== 'object') {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (typeof op.retain === 'string') {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (typeof op.retain === 'number' && op.retain > 0) {

[Survived] PrecomputedMutator
src/OpIterator.ts:40:13
-           if (typeof nextOp.retain === 'number') {
+           if (nextOp.retain > 0) {

[Survived] PrecomputedMutator
src/OpIterator.ts:48:20
-           } else if (typeof nextOp.insert === 'string') {
+           } else if (nextOp.insert.length > 0) {

[Survived] PrecomputedMutator
src/OpIterator.ts:66:9
-       if (this.ops[this.index]) {
+       if (this.ops[this.index] || null) {

[Survived] PrecomputedMutator
src/OpIterator.ts:68:24
-         return Op.length(this.ops[this.index]) - this.offset;
+         return Op.length(this.ops[this.index] || {
+     insert: ''
+   }) - this.offset;

[Survived] PrecomputedMutator
src/OpIterator.ts:92:9
-       if (!this.hasNext()) {
+       if (this.index === this.ops.length) {

[Survived] PrecomputedMutator
src/OpIterator.ts:94:16
-       } else if (this.offset === 0) {
+       } else if (this.index === this.ops.length) {

Ran 0.95 tests per mutant on average.
-----------------|---------|----------|-----------|------------|----------|----------|
File             | % score | # killed | # timeout | # survived | # no cov | # errors |
-----------------|---------|----------|-----------|------------|----------|----------|
All files        |   86.10 |      566 |        35 |         97 |        0 |        0 |
 AttributeMap.ts |   81.48 |       66 |         0 |         15 |        0 |        0 |
 Delta.ts        |   86.30 |      439 |        27 |         74 |        0 |        0 |
 Op.ts           |   66.67 |        4 |         0 |          2 |        0 |        0 |
 OpIterator.ts   |   91.55 |       57 |         8 |          6 |        0 |        0 |
-----------------|---------|----------|-----------|------------|----------|----------|
[32m14:31:04 (3160) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llmorpheus/llmorpheus/delta/reports/mutation/mutation.html
[32m14:31:04 (3160) INFO MutationTestExecutor[39m Done in 37 minutes 27 seconds.

real	37m28.137s
user	71m56.034s
sys	2m35.224s
