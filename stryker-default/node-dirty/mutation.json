{"files":{"lib/dirty/dirty.js":{"language":"javascript","mutants":[{"id":"0","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\nReferenceError: Must call super constructor in derived class before accessing 'this' or returning from derived constructor\n    at new Dirty (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:66:12)\n    at Suite.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:42:14)\n    at Object.create (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/interfaces/common.js:148:19)\n    at context.describe.context.context (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/interfaces/bdd.js:42:27)\n    at Object.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1369:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1427:10)\n    at Module.load (node:internal/modules/cjs/loader:1206:32)\n    at Module._load (node:internal/modules/cjs/loader:1022:12)\n    at cjsLoader (node:internal/modules/esm/translators:366:17)\n    at ModuleWrap.<anonymous> (node:internal/modules/esm/translators:315:7)\n    at ModuleJob.run (node:internal/modules/esm/module_job:222:25)\n    at async ModuleLoader.import (node:internal/modules/esm/loader:323:24)\n    at async formattedImport (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:7:14)\n    at async exports.requireOrImport (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:48:32)\n    at async exports.loadFilesAsync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:103:20)\n    at async singleRun (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/cli/run-helpers.js:125:3)\n    at async exports.handler (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/cli/run.js:374:5)\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":4,"line":20},"start":{"column":21,"line":7}}},{"id":"1","mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout","location":{"end":{"column":31,"line":16},"start":{"column":26,"line":16}}},{"id":"2","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":4,"line":41},"start":{"column":21,"line":27}}},{"id":"3","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  1) dirty api (transient mode) accessors .get should return value\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  2) dirty api (transient mode) accessors .forEach runs for all\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  3) dirty api (transient mode) accessors .rm removes key/value pair\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  4) dirty api (transient mode) accessors .rm of unknown key is a no-op\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  5) dirty api (persistent mode) accessors .get should return value\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  6) dirty api (persistent mode) accessors .forEach runs for all\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  7) dirty api (persistent mode) accessors .rm removes key/value pair\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  8) dirty api (persistent mode) accessors .rm of unknown key is a no-op\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  9) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  10) test-set-callback should trigger callback on set\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  11) test-flush should write to disk appropriately\n\n    test-for-each should return each doc key and contents: \n\r\n  12) test-for-each should return each doc key and contents\n\n    test-load should load after write to disk: \n\r\n  13) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r  14) test-size should be equal to number of keys set\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  15) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  16) test-update updater receives old value and sets new value\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  19 passing (19ms)\n\n  2 pending\n\n  16 failing\n\n\n\n  1) dirty api (transient mode)\n       accessors\n         .get should return value:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'value'\n      at Context.<anonymous> (test/test-api.js:80:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) dirty api (transient mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-api.js:105:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) dirty api (transient mode)\n       accessors\n         .rm removes key/value pair:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'test'\n      at Context.<anonymous> (test/test-api.js:110:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) dirty api (transient mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) dirty api (persistent mode)\n       accessors\n         .get should return value:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'value'\n      at Context.<anonymous> (test/test-api.js:80:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  6) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-api.js:105:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  7) dirty api (persistent mode)\n       accessors\n         .rm removes key/value pair:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'test'\n      at Context.<anonymous> (test/test-api.js:110:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  8) dirty api (persistent mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  9) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  10) test-set-callback\n       should trigger callback on set:\n     Uncaught AssertionError [ERR_ASSERTION]: undefined == 'bar'\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-nostore.js:25:14\n      at Immediate._onImmediate (lib/dirty/dirty.js:115:117)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  11) test-flush\n       should write to disk appropriately:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\"key\":\"foo1\"}\\n'\n- '{\"key\":\"foo1\",\"val\":\"bar1\"}\\n'\n                ^\n      + expected - actual\n\n      -{\"key\":\"foo1\"}\n      +{\"key\":\"foo1\",\"val\":\"bar1\"}\n      \n      at Dirty.<anonymous> (test/test-system.js:31:14)\n      at Dirty.emit (node:events:518:28)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:416:593\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n  12) test-for-each\n       should return each doc key and contents:\n\n      AssertionError [ERR_ASSERTION]: 0 == 3\n      + expected - actual\n\n      -0\n      +3\n      \n      at Context.<anonymous> (test/test-system.js:55:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  13) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 0 == 2\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  14) test-size\n       should be equal to number of keys set:\n\n      AssertionError [ERR_ASSERTION]: 0 == 3\n      + expected - actual\n\n      -0\n      +3\n      \n      at Context.<anonymous> (test/test-system.js:99:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  15) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-system.js:115:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n\n  16) test-update\n       updater receives old value and sets new value:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'bar'\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:125:14\n      at Dirty.update (lib/dirty/dirty.js:190:21)\n      at Context.<anonymous> (test/test-system.js:124:8)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":26,"line":28},"start":{"column":9,"line":28}}},{"id":"4","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 1ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  1) dirty api (transient mode) accessors .forEach runs for all\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  2) dirty api (transient mode) accessors .rm of unknown key is a no-op\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r  ✔ dirty api (persistent mode) constructor without new: 1ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  3) dirty api (persistent mode) accessors .forEach runs for all\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  4) dirty api (persistent mode) accessors .rm of unknown key is a no-op\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 0ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 1ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 1ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  31 passing (17ms)\n\n  2 pending\n\n  4 failing\n\n\n\n  1) dirty api (transient mode)\n       accessors\n         .forEach runs for all:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'delete'\n- undefined\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js:99:18\n      at Dirty.forEach (lib/dirty/dirty.js:174:164)\n      at Context.<anonymous> (test/test-api.js:98:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) dirty api (transient mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n  [\n    [\n...\n      'key1',\n      'value1'\n+   ],\n+   [\n+     'delete',\n+     undefined\n+   ],\n+   [\n+     'test',\n+     undefined\n+   ],\n+   [\n+     'does not exist',\n+     undefined\n    ]\n  ]\n      + expected - actual\n\n         [\n           \"key1\"\n           \"value1\"\n         ]\n      -  [\n      -    \"delete\"\n      -    [undefined]\n      -  ]\n      -  [\n      -    \"test\"\n      -    [undefined]\n      -  ]\n      -  [\n      -    \"does not exist\"\n      -    [undefined]\n      -  ]\n       ]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'delete'\n- undefined\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js:99:18\n      at Dirty.forEach (lib/dirty/dirty.js:174:164)\n      at Context.<anonymous> (test/test-api.js:98:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) dirty api (persistent mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n  [\n    [\n...\n      'key1',\n      'value1'\n+   ],\n+   [\n+     'delete',\n+     undefined\n+   ],\n+   [\n+     'test',\n+     undefined\n+   ],\n+   [\n+     'does not exist',\n+     undefined\n    ]\n  ]\n      + expected - actual\n\n         [\n           \"key1\"\n           \"value1\"\n         ]\n      -  [\n      -    \"delete\"\n      -    [undefined]\n      -  ]\n      -  [\n      -    \"test\"\n      -    [undefined]\n      -  ]\n      -  [\n      -    \"does not exist\"\n      -    [undefined]\n      -  ]\n       ]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":26,"line":28},"start":{"column":9,"line":28}}},{"id":"5","mutatorName":"EqualityOperator","replacement":"val !== undefined","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  1) dirty api (transient mode) accessors .get should return value\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  2) dirty api (transient mode) accessors .forEach runs for all\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  3) dirty api (transient mode) accessors .rm removes key/value pair\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  4) dirty api (transient mode) accessors .rm of unknown key is a no-op\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r  5) dirty api (persistent mode) accessors .get should return value\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  6) dirty api (persistent mode) accessors .forEach runs for all\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  7) dirty api (persistent mode) accessors .rm removes key/value pair\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  8) dirty api (persistent mode) accessors .rm of unknown key is a no-op\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  9) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  10) test-set-callback should trigger callback on set\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  11) test-flush should write to disk appropriately\n\n    test-for-each should return each doc key and contents: \n\r\n  12) test-for-each should return each doc key and contents\n\n    test-load should load after write to disk: \n\r\n  13) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  14) test-size should be equal to number of keys set\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  15) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  16) test-update updater receives old value and sets new value\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  19 passing (17ms)\n\n  2 pending\n\n  16 failing\n\n\n\n  1) dirty api (transient mode)\n       accessors\n         .get should return value:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'value'\n      at Context.<anonymous> (test/test-api.js:80:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) dirty api (transient mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'delete'\n- 'key'\n      + expected - actual\n\n      -delete\n      +key\n      \n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js:99:18\n      at Dirty.forEach (lib/dirty/dirty.js:174:164)\n      at Context.<anonymous> (test/test-api.js:98:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) dirty api (transient mode)\n       accessors\n         .rm removes key/value pair:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'test'\n      at Context.<anonymous> (test/test-api.js:110:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) dirty api (transient mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n  [\n    [\n+     'delete',\n+     undefined\n-     'key',\n-     'value'\n    ],\n    [\n+     'does not exist',\n+     undefined\n-     'key1',\n-     'value1'\n    ]\n  ]\n      + expected - actual\n\n       [\n         [\n      -    \"delete\"\n      -    [undefined]\n      +    \"key\"\n      +    \"value\"\n         ]\n         [\n      -    \"does not exist\"\n      -    [undefined]\n      +    \"key1\"\n      +    \"value1\"\n         ]\n       ]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) dirty api (persistent mode)\n       accessors\n         .get should return value:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'value'\n      at Context.<anonymous> (test/test-api.js:80:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  6) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'delete'\n- 'key'\n      + expected - actual\n\n      -delete\n      +key\n      \n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js:99:18\n      at Dirty.forEach (lib/dirty/dirty.js:174:164)\n      at Context.<anonymous> (test/test-api.js:98:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  7) dirty api (persistent mode)\n       accessors\n         .rm removes key/value pair:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'test'\n      at Context.<anonymous> (test/test-api.js:110:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  8) dirty api (persistent mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n  [\n    [\n+     'delete',\n+     undefined\n-     'key',\n-     'value'\n    ],\n    [\n+     'does not exist',\n+     undefined\n-     'key1',\n-     'value1'\n    ]\n  ]\n      + expected - actual\n\n       [\n         [\n      -    \"delete\"\n      -    [undefined]\n      +    \"key\"\n      +    \"value\"\n         ]\n         [\n      -    \"does not exist\"\n      -    [undefined]\n      +    \"key1\"\n      +    \"value1\"\n         ]\n       ]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  9) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  10) test-set-callback\n       should trigger callback on set:\n     Uncaught AssertionError [ERR_ASSERTION]: undefined == 'bar'\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-nostore.js:25:14\n      at Immediate._onImmediate (lib/dirty/dirty.js:115:117)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  11) test-flush\n       should write to disk appropriately:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\"key\":\"foo1\"}\\n'\n- '{\"key\":\"foo1\",\"val\":\"bar1\"}\\n'\n                ^\n      + expected - actual\n\n      -{\"key\":\"foo1\"}\n      +{\"key\":\"foo1\",\"val\":\"bar1\"}\n      \n      at Dirty.<anonymous> (test/test-system.js:31:14)\n      at Dirty.emit (node:events:518:28)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:416:593\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n  12) test-for-each\n       should return each doc key and contents:\n\n      AssertionError [ERR_ASSERTION]: 0 == 3\n      + expected - actual\n\n      -0\n      +3\n      \n      at Context.<anonymous> (test/test-system.js:55:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  13) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 0 == 2\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  14) test-size\n       should be equal to number of keys set:\n\n      AssertionError [ERR_ASSERTION]: 0 == 3\n      + expected - actual\n\n      -0\n      +3\n      \n      at Context.<anonymous> (test/test-system.js:99:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  15) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-system.js:115:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n\n  16) test-update\n       updater receives old value and sets new value:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'bar'\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:125:14\n      at Dirty.update (lib/dirty/dirty.js:190:21)\n      at Context.<anonymous> (test/test-system.js:124:8)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":26,"line":28},"start":{"column":9,"line":28}}},{"id":"6","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 1ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  1) dirty api (transient mode) accessors .forEach runs for all\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  2) dirty api (transient mode) accessors .rm removes key/value pair\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  3) dirty api (transient mode) accessors .rm of unknown key is a no-op\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  4) dirty api (persistent mode) accessors .forEach runs for all\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  5) dirty api (persistent mode) accessors .rm removes key/value pair\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  6) dirty api (persistent mode) accessors .rm of unknown key is a no-op\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  7) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  8) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 1ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  27 passing (16ms)\n\n  2 pending\n  8 failing\n\n\n\n  1) dirty api (transient mode)\n       accessors\n         .forEach runs for all:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'delete'\n- undefined\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js:99:18\n      at Dirty.forEach (lib/dirty/dirty.js:174:164)\n      at Context.<anonymous> (test/test-api.js:98:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) dirty api (transient mode)\n       accessors\n         .rm removes key/value pair:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'test'\n- undefined\n      at Context.<anonymous> (test/test-api.js:112:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) dirty api (transient mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n  [\n    [\n...\n      'key1',\n      'value1'\n+   ],\n+   [\n+     'delete',\n+     'me'\n+   ],\n+   [\n+     'test',\n+     'test'\n    ]\n  ]\n      + expected - actual\n\n         [\n           \"key1\"\n           \"value1\"\n         ]\n      -  [\n      -    \"delete\"\n      -    \"me\"\n      -  ]\n      -  [\n      -    \"test\"\n      -    \"test\"\n      -  ]\n       ]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'delete'\n- undefined\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js:99:18\n      at Dirty.forEach (lib/dirty/dirty.js:174:164)\n      at Context.<anonymous> (test/test-api.js:98:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) dirty api (persistent mode)\n       accessors\n         .rm removes key/value pair:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'test'\n- undefined\n      at Context.<anonymous> (test/test-api.js:112:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  6) dirty api (persistent mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n  [\n    [\n...\n      'key1',\n      'value1'\n+   ],\n+   [\n+     'delete',\n+     'me'\n+   ],\n+   [\n+     'test',\n+     'test'\n    ]\n  ]\n      + expected - actual\n\n         [\n           \"key1\"\n           \"value1\"\n         ]\n      -  [\n      -    \"delete\"\n      -    \"me\"\n      -  ]\n      -  [\n      -    \"test\"\n      -    \"test\"\n      -  ]\n       ]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  7) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n4 !== 2\n\n      + expected - actual\n\n      -4\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  8) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 3 == 2\n      + expected - actual\n\n      -3\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":6,"line":30},"start":{"column":28,"line":28}}},{"id":"7","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 1ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  1) dirty api (transient mode) accessors .get should return value\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  2) dirty api (transient mode) accessors .forEach runs for all\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  3) dirty api (transient mode) accessors .rm removes key/value pair\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  4) dirty api (transient mode) accessors .rm of unknown key is a no-op\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 1ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  5) dirty api (persistent mode) accessors .get should return value\n\n    dirty api (persistent mode) accessors .path is valid: \n\r  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  6) dirty api (persistent mode) accessors .forEach runs for all\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  7) dirty api (persistent mode) accessors .rm removes key/value pair\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  8) dirty api (persistent mode) accessors .rm of unknown key is a no-op\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  9) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  10) test-set-callback should trigger callback on set\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  11) test-flush should write to disk appropriately\n\n    test-for-each should return each doc key and contents: \n\r\n  12) test-for-each should return each doc key and contents\n\n    test-load should load after write to disk: \n\r\n  13) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  14) test-size should be equal to number of keys set\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  15) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  16) test-update updater receives old value and sets new value\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  19 passing (18ms)\n\n  2 pending\n\n  16 failing\n\n\n\n  1) dirty api (transient mode)\n       accessors\n         .get should return value:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'value'\n      at Context.<anonymous> (test/test-api.js:80:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) dirty api (transient mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-api.js:105:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) dirty api (transient mode)\n       accessors\n         .rm removes key/value pair:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'test'\n      at Context.<anonymous> (test/test-api.js:110:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) dirty api (transient mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) dirty api (persistent mode)\n       accessors\n         .get should return value:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'value'\n      at Context.<anonymous> (test/test-api.js:80:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  6) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-api.js:105:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  7) dirty api (persistent mode)\n       accessors\n         .rm removes key/value pair:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'test'\n      at Context.<anonymous> (test/test-api.js:110:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  8) dirty api (persistent mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  9) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  10) test-set-callback\n       should trigger callback on set:\n     Uncaught AssertionError [ERR_ASSERTION]: undefined == 'bar'\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-nostore.js:25:14\n      at Immediate._onImmediate (lib/dirty/dirty.js:115:117)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  11) test-flush\n       should write to disk appropriately:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\"key\":\"foo1\"}\\n'\n- '{\"key\":\"foo1\",\"val\":\"bar1\"}\\n'\n                ^\n      + expected - actual\n\n      -{\"key\":\"foo1\"}\n      +{\"key\":\"foo1\",\"val\":\"bar1\"}\n      \n      at Dirty.<anonymous> (test/test-system.js:31:14)\n      at Dirty.emit (node:events:518:28)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:416:593\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n  12) test-for-each\n       should return each doc key and contents:\n\n      AssertionError [ERR_ASSERTION]: 0 == 3\n      + expected - actual\n\n      -0\n      +3\n      \n      at Context.<anonymous> (test/test-system.js:55:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  13) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 0 == 2\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  14) test-size\n       should be equal to number of keys set:\n\n      AssertionError [ERR_ASSERTION]: 0 == 3\n      + expected - actual\n\n      -0\n      +3\n      \n      at Context.<anonymous> (test/test-system.js:99:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  15) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-system.js:115:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n\n  16) test-update\n       updater receives old value and sets new value:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'bar'\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:125:14\n      at Dirty.update (lib/dirty/dirty.js:190:21)\n      at Context.<anonymous> (test/test-system.js:124:8)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":6,"line":32},"start":{"column":12,"line":30}}},{"id":"8","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\nTypeError: Cannot read properties of null (reading 'cork')\n    at Dirty._flush (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:394:25)\n    at Dirty.set (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:103:16)\n    at Suite.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:44:6)\n    at Object.create (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/interfaces/common.js:148:19)\n    at context.describe.context.context (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/interfaces/bdd.js:42:27)\n    at Object.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1369:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1427:10)\n    at Module.load (node:internal/modules/cjs/loader:1206:32)\n    at Module._load (node:internal/modules/cjs/loader:1022:12)\n    at cjsLoader (node:internal/modules/esm/translators:366:17)\n    at ModuleWrap.<anonymous> (node:internal/modules/esm/translators:315:7)\n    at ModuleJob.run (node:internal/modules/esm/module_job:222:25)\n    at async ModuleLoader.import (node:internal/modules/esm/loader:323:24)\n    at async formattedImport (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:7:14)\n    at async exports.requireOrImport (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:48:32)\n    at async exports.loadFilesAsync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:103:20)\n    at async singleRun (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/cli/run-helpers.js:125:3)\n    at async exports.handler (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/cli/run.js:374:5)\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":18,"line":33},"start":{"column":9,"line":33}}},{"id":"9","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  2) test-flush should write to disk appropriately\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  3) test-load should load after write to disk\n\n\r\n  4) test-load \"after each\" hook for \"should load after write to disk\"\n\n\r\n  5) test-load \"after each\" hook for \"should load after write to disk\"\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  6) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  31 passing (15ms)\n  2 pending\n\n  6 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  2) test-flush\n       should write to disk appropriately:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ ''\n- '{\"key\":\"foo1\",\"val\":\"bar1\"}\\n'\n      + expected - actual\n\n      +{\"key\":\"foo1\",\"val\":\"bar1\"}\n      \n      at Dirty.<anonymous> (test/test-system.js:31:14)\n      at Dirty.emit (node:events:518:28)\n      at Immediate._onImmediate (lib/dirty/dirty.js:116:20)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 0 == 2\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  4) test-load\n       \"after each\" hook for \"should load after write to disk\":\n\n      Uncaught AssertionError [ERR_ASSERTION]: 0 == 2\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  5) test-load\n       \"after each\" hook for \"should load after write to disk\":\n     Error: done() called multiple times in hook <test-load \"after each\" hook for \"should load after write to disk\"> of file /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js\n  \n\n\n  6) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-system.js:115:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":18,"line":33},"start":{"column":9,"line":33}}},{"id":"10","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":6,"line":38},"start":{"column":20,"line":33}}},{"id":"11","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 1ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n\r\n  1) dirty api (persistent mode) events should fire drain after write\n\n\n\n  18 passing (9ms)\n\n  1 failing\n\n\n\n  1) dirty api (persistent mode)\n       events\n         should fire drain after write:\n     Uncaught TypeError: cbs is not iterable\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:417:32\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":45,"line":34},"start":{"column":19,"line":34}}},{"id":"12","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 5ms\n\n\r\n  1) dirty api (persistent mode) events should fire drain after write\n\n\n\n  18 passing (18ms)\n\n  1 failing\n\n\n\n  1) dirty api (persistent mode)\n       events\n         should fire drain after write:\n     Uncaught TypeError: cbs is not iterable\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:417:32\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":45,"line":34},"start":{"column":19,"line":34}}},{"id":"13","mutatorName":"LogicalOperator","replacement":"this._queue.get(key) && []","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 1ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 1ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  1) dirty api (persistent mode) events should fire drain after write\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  2) dirty api (persistent mode) accessors .set should trigger callback\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n\r\n  3) dirty api (persistent mode) accessors .forEach runs for all\n\n\n\n  20 passing (10ms)\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       events\n         should fire drain after write:\n     Uncaught TypeError: Cannot read properties of undefined (reading 'length')\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:415:246\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n  2) dirty api (persistent mode)\n       accessors\n         .set should trigger callback:\n     TypeError: Cannot read properties of undefined (reading 'push')\n      at Dirty.set (lib/dirty/dirty.js:101:117)\n      at Context.<anonymous> (test/test-api.js:73:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n     Uncaught TypeError: Cannot read properties of undefined (reading 'length')\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:415:246\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":45,"line":34},"start":{"column":19,"line":34}}},{"id":"14","mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 1ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 1ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n\r\n  1) dirty api (persistent mode) events should fire drain after write\n\n\n\n  18 passing (9ms)\n\n  1 failing\n\n\n\n  1) dirty api (persistent mode)\n       events\n         should fire drain after write:\n     Uncaught TypeError: cb is not a function\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:417:37\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":45,"line":34},"start":{"column":43,"line":34}}},{"id":"15","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 1ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 1ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n\r\n  1) dirty api (persistent mode) events should fire drain after write\n\n\n\n  18 passing (9ms)\n\n  1 failing\n\n\n\n  1) dirty api (persistent mode)\n       events\n         should fire drain after write:\n     Uncaught TypeError: cb is not a function\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:417:37\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":13,"line":35},"start":{"column":11,"line":35}}},{"id":"16","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 1ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  1) dirty api (persistent mode) accessors .set should trigger callback\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 1ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 2ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 2ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 1ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 2ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 2ms\n\n    test-update updater receives old value and sets new value: \n\r  ✔ test-update updater receives old value and sets new value: 1ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  34 passing (2s)\n\n  2 pending\n  1 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         .set should trigger callback:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":13,"line":35},"start":{"column":11,"line":35}}},{"id":"17","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":6,"line":40},"start":{"column":12,"line":38}}},{"id":"18","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":63,"line":39},"start":{"column":26,"line":39}}},{"id":"19","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n\r\n  1) Uncaught error outside test suite\n\n\n\n  0 passing (0ms)\n\n  1 failing\n\n\n\n  1) Uncaught error outside test suite:\n     Uncaught TypeError: cb is not a function\n      at Immediate.<anonymous> (lib/dirty/dirty.js:115:117)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n\n\n/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/runner.js:962\n    throw err;\n    ^\n\nTypeError: cb is not a function\n    at Immediate.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:115:117)\n    at process.processImmediate (node:internal/timers:478:21)\n\nNode.js v20.12.0\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":34,"line":39},"start":{"column":32,"line":39}}},{"id":"20","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 1ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  1) dirty api (transient mode) accessors .set should trigger callback\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 2ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 1ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 1ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 2ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 2ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  2) test-set-callback should trigger callback on set\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 3ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 2ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 2ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  33 passing (4s)\n\n  2 pending\n\n  2 failing\n\n\n\n  1) dirty api (transient mode)\n       accessors\n         .set should trigger callback:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n  2) test-set-callback\n       should trigger callback on set:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-nostore.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":34,"line":39},"start":{"column":32,"line":39}}},{"id":"21","mutatorName":"StringLiteral","replacement":"\"\"","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 1ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  1) dirty api (transient mode) events should fire drain after write\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 2ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 1ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\r  ✔ dirty api (transient mode) db file close close: 1ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 1ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 1ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 2ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 1ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 1ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 1ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 1ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 2ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  34 passing (2s)\n\n  2 pending\n\n  1 failing\n\n\n\n  1) dirty api (transient mode)\n       events\n         should fire drain after write:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":59,"line":39},"start":{"column":52,"line":39}}},{"id":"22","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 1ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  1) dirty api (transient mode) accessors .get should return value\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  2) dirty api (transient mode) accessors .rm removes key/value pair\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  3) dirty api (transient mode) accessors .rm of unknown key is a no-op\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  4) dirty api (persistent mode) accessors .get should return value\n\n    dirty api (persistent mode) accessors .path is valid: \r  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  5) dirty api (persistent mode) accessors .rm removes key/value pair\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  6) dirty api (persistent mode) accessors .rm of unknown key is a no-op\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  7) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  8) test-set-callback should trigger callback on set\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  9) test-for-each should return each doc key and contents\n\n    test-load should load after write to disk: \n\r\n  10) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 1ms\n\n    test-update updater receives old value and sets new value: \n\r\n  11) test-update updater receives old value and sets new value\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  24 passing (16ms)\n\n  2 pending\n\n  11 failing\n\n\n\n  1) dirty api (transient mode)\n       accessors\n         .get should return value:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'value'\n      at Context.<anonymous> (test/test-api.js:80:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) dirty api (transient mode)\n       accessors\n         .rm removes key/value pair:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'test'\n      at Context.<anonymous> (test/test-api.js:110:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) dirty api (transient mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n  [\n    [\n...\n      'key1',\n      'value1'\n+   ],\n+   [\n+     'test',\n+     'test'\n    ]\n  ]\n      + expected - actual\n\n         [\n           \"key1\"\n           \"value1\"\n         ]\n      -  [\n      -    \"test\"\n      -    \"test\"\n      -  ]\n       ]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) dirty api (persistent mode)\n       accessors\n         .get should return value:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'value'\n      at Context.<anonymous> (test/test-api.js:80:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) dirty api (persistent mode)\n       accessors\n         .rm removes key/value pair:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'test'\n      at Context.<anonymous> (test/test-api.js:110:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  6) dirty api (persistent mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n  [\n    [\n...\n      'key1',\n      'value1'\n+   ],\n+   [\n+     'test',\n+     'test'\n    ]\n  ]\n      + expected - actual\n\n         [\n           \"key1\"\n           \"value1\"\n         ]\n      -  [\n      -    \"test\"\n      -    \"test\"\n      -  ]\n       ]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  7) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n3 !== 2\n\n      + expected - actual\n\n      -3\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  8) test-set-callback\n       should trigger callback on set:\n     Uncaught AssertionError [ERR_ASSERTION]: undefined == 'bar'\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-nostore.js:25:14\n      at Immediate._onImmediate (lib/dirty/dirty.js:115:117)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  9) test-for-each\n       should return each doc key and contents:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ {\n+   test: 'foo'\n+ }\n- undefined\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:53:14\n      at Dirty.forEach (lib/dirty/dirty.js:174:164)\n      at Context.<anonymous> (test/test-system.js:50:8)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  10) test-load\n       should load after write to disk:\n     Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\nundefined !== 'A'\n\n      at Dirty.<anonymous> (test/test-system.js:79:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  11) test-update\n       updater receives old value and sets new value:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- 'bar'\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:125:14\n      at Dirty.update (lib/dirty/dirty.js:190:21)\n      at Context.<anonymous> (test/test-system.js:124:8)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":4,"line":49},"start":{"column":12,"line":47}}},{"id":"23","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 1ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 0ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 0ms\n\n    test-size should be equal to number of keys set: \n\r\n  1) test-size should be equal to number of keys set\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  2) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 1ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  33 passing (15ms)\n\n  2 pending\n\n  2 failing\n\n\n\n  1) test-size\n       should be equal to number of keys set:\n     AssertionError [ERR_ASSERTION]: undefined == 3\n      at Context.<anonymous> (test/test-system.js:99:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\nundefined !== 2\n\n      at Context.<anonymous> (test/test-system.js:115:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":4,"line":56},"start":{"column":10,"line":54}}},{"id":"24","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  1) dirty api (transient mode) accessors .forEach runs for all\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  2) dirty api (transient mode) accessors .rm removes key/value pair\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  3) dirty api (transient mode) accessors .rm of unknown key is a no-op\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 1ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  4) dirty api (persistent mode) accessors .forEach runs for all\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  5) dirty api (persistent mode) accessors .rm removes key/value pair\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  6) dirty api (persistent mode) accessors .rm of unknown key is a no-op\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  7) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  8) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 0ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 1ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  27 passing (17ms)\n\n  2 pending\n\n  8 failing\n\n\n\n  1) dirty api (transient mode)\n       accessors\n         .forEach runs for all:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'delete'\n- undefined\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js:99:18\n      at Dirty.forEach (lib/dirty/dirty.js:174:164)\n      at Context.<anonymous> (test/test-api.js:98:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) dirty api (transient mode)\n       accessors\n         .rm removes key/value pair:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'test'\n- undefined\n      at Context.<anonymous> (test/test-api.js:112:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) dirty api (transient mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n  [\n    [\n...\n      'key1',\n      'value1'\n+   ],\n+   [\n+     'delete',\n+     'me'\n+   ],\n+   [\n+     'test',\n+     'test'\n    ]\n  ]\n      + expected - actual\n\n         [\n           \"key1\"\n           \"value1\"\n         ]\n      -  [\n      -    \"delete\"\n      -    \"me\"\n      -  ]\n      -  [\n      -    \"test\"\n      -    \"test\"\n      -  ]\n       ]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'delete'\n- undefined\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js:99:18\n      at Dirty.forEach (lib/dirty/dirty.js:174:164)\n      at Context.<anonymous> (test/test-api.js:98:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) dirty api (persistent mode)\n       accessors\n         .rm removes key/value pair:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'test'\n- undefined\n      at Context.<anonymous> (test/test-api.js:112:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  6) dirty api (persistent mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n  [\n    [\n...\n      'key1',\n      'value1'\n+   ],\n+   [\n+     'delete',\n+     'me'\n+   ],\n+   [\n+     'test',\n+     'test'\n    ]\n  ]\n      + expected - actual\n\n         [\n           \"key1\"\n           \"value1\"\n         ]\n      -  [\n      -    \"delete\"\n      -    \"me\"\n      -  ]\n      -  [\n      -    \"test\"\n      -    \"test\"\n      -  ]\n       ]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  7) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n4 !== 2\n\n      + expected - actual\n\n      -4\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  8) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 3 == 2\n      + expected - actual\n\n      -3\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":4,"line":63},"start":{"column":15,"line":61}}},{"id":"25","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  1) dirty api (transient mode) accessors .forEach runs for all\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  2) dirty api (transient mode) accessors .rm of unknown key is a no-op\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  3) dirty api (persistent mode) accessors .forEach runs for all\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  4) dirty api (persistent mode) accessors .rm of unknown key is a no-op\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  5) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  6) test-for-each should return each doc key and contents\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 1ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 1ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  29 passing (16ms)\n\n  2 pending\n\n  6 failing\n\n\n\n  1) dirty api (transient mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-api.js:105:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) dirty api (transient mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-api.js:105:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) dirty api (persistent mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Dirty.<anonymous> (test/test-api.js:135:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  6) test-for-each\n       should return each doc key and contents:\n\n      AssertionError [ERR_ASSERTION]: 0 == 3\n      + expected - actual\n\n      -0\n      +3\n      \n      at Context.<anonymous> (test/test-system.js:55:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":4,"line":72},"start":{"column":15,"line":68}}},{"id":"26","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  1) dirty api (transient mode) accessors .forEach runs for all\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  2) dirty api (transient mode) accessors .rm of unknown key is a no-op\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 1ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  3) dirty api (persistent mode) accessors .forEach runs for all\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  4) dirty api (persistent mode) accessors .rm of unknown key is a no-op\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  5) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 1ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  6) test-for-each should return each doc key and contents\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 0ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 0ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  29 passing (16ms)\n\n  2 pending\n\n  6 failing\n\n\n\n  1) dirty api (transient mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-api.js:105:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) dirty api (transient mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-api.js:105:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) dirty api (persistent mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Dirty.<anonymous> (test/test-api.js:135:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  6) test-for-each\n       should return each doc key and contents:\n\n      AssertionError [ERR_ASSERTION]: 0 == 3\n      + expected - actual\n\n      -0\n      +3\n      \n      at Context.<anonymous> (test/test-system.js:55:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":6,"line":71},"start":{"column":42,"line":69}}},{"id":"27","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  1) dirty api (transient mode) accessors .forEach runs for all\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  2) dirty api (transient mode) accessors .rm of unknown key is a no-op\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 1ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  3) dirty api (persistent mode) accessors .forEach runs for all\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  4) dirty api (persistent mode) accessors .rm of unknown key is a no-op\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  5) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  6) test-for-each should return each doc key and contents\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 0ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 1ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  29 passing (16ms)\n\n  2 pending\n\n  6 failing\n\n\n\n  1) dirty api (transient mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-api.js:105:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) dirty api (transient mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-api.js:105:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) dirty api (persistent mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Dirty.<anonymous> (test/test-api.js:135:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  6) test-for-each\n       should return each doc key and contents:\n\n      AssertionError [ERR_ASSERTION]: 0 == 3\n      + expected - actual\n\n      -0\n      +3\n      \n      at Context.<anonymous> (test/test-system.js:55:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":33,"line":70},"start":{"column":11,"line":70}}},{"id":"28","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 1ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  1) dirty api (transient mode) accessors .forEach runs for all\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  2) dirty api (transient mode) accessors .rm of unknown key is a no-op\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  3) dirty api (persistent mode) accessors .forEach runs for all\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  4) dirty api (persistent mode) accessors .rm of unknown key is a no-op\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  5) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  6) test-for-each should return each doc key and contents\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 1ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 1ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  29 passing (16ms)\n\n  2 pending\n\n  6 failing\n\n\n\n  1) dirty api (transient mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-api.js:105:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) dirty api (transient mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-api.js:105:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) dirty api (persistent mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ []\n- [\n-   [\n-     'key',\n-     'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n-   ]\n- ]\n      + expected - actual\n\n      -[]\n      +[\n      +  [\n      +    \"key\"\n      +    \"value\"\n      +  ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n      +]\n      \n      at Dirty.<anonymous> (test/test-api.js:135:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  6) test-for-each\n       should return each doc key and contents:\n\n      AssertionError [ERR_ASSERTION]: 0 == 3\n      + expected - actual\n\n      -0\n      +3\n      \n      at Context.<anonymous> (test/test-system.js:55:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":33,"line":70},"start":{"column":11,"line":70}}},{"id":"29","mutatorName":"EqualityOperator","replacement":"fn(key, val) !== false","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  1) dirty api (transient mode) accessors .forEach runs for all\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  2) dirty api (transient mode) accessors .rm of unknown key is a no-op\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  3) dirty api (persistent mode) accessors .forEach runs for all\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  4) dirty api (persistent mode) accessors .rm of unknown key is a no-op\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  5) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  6) test-for-each should return each doc key and contents\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 0ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 1ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  29 passing (16ms)\n\n  2 pending\n\n  6 failing\n\n\n\n  1) dirty api (transient mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n1 !== 2\n\n      + expected - actual\n\n      -1\n      +2\n      \n      at Context.<anonymous> (test/test-api.js:105:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) dirty api (transient mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n  [\n    [\n      'key',\n      'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n    ]\n  ]\n      + expected - actual\n\n         [\n           \"key\"\n           \"value\"\n         ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n       ]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n1 !== 2\n\n      + expected - actual\n\n      -1\n      +2\n      \n      at Context.<anonymous> (test/test-api.js:105:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) dirty api (persistent mode)\n       accessors\n         .rm of unknown key is a no-op:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n  [\n    [\n      'key',\n      'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n    ]\n  ]\n      + expected - actual\n\n         [\n           \"key\"\n           \"value\"\n         ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n       ]\n      \n      at Context.<anonymous> (test/test-api.js:119:16)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n  [\n    [\n      'key',\n      'value'\n-   ],\n-   [\n-     'key1',\n-     'value1'\n    ]\n  ]\n      + expected - actual\n\n         [\n           \"key\"\n           \"value\"\n         ]\n      +  [\n      +    \"key1\"\n      +    \"value1\"\n      +  ]\n       ]\n      \n      at Dirty.<anonymous> (test/test-api.js:135:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  6) test-for-each\n       should return each doc key and contents:\n\n      AssertionError [ERR_ASSERTION]: 1 == 3\n      + expected - actual\n\n      -1\n      +3\n      \n      at Context.<anonymous> (test/test-system.js:55:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":33,"line":70},"start":{"column":11,"line":70}}},{"id":"30","mutatorName":"BooleanLiteral","replacement":"true","status":"Survived","testsCompleted":1,"location":{"end":{"column":33,"line":70},"start":{"column":28,"line":70}}},{"id":"31","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 1ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 0ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 1ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 1ms\n\n    test-update updater receives old value and sets new value: \n\r\n  1) test-update updater receives old value and sets new value\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  34 passing (15ms)\n\n  2 pending\n\n  1 failing\n\n\n\n  1) test-update\n       updater receives old value and sets new value:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n'bar' !== 'baz'\n\n      + expected - actual\n\n      -bar\n      +baz\n      \n      at Context.<anonymous> (test/test-system.js:128:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":4,"line":81},"start":{"column":28,"line":79}}},{"id":"32","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 1ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 1ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  1) dirty api (persistent mode) db file close close\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 1ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 2ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 3ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 1ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  34 passing (2s)\n\n  2 pending\n\n  1 failing\n\n\n\n  1) dirty api (persistent mode)\n       db file close\n         close:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":4,"line":93},"start":{"column":11,"line":86}}},{"id":"33","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 1ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 0ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  1) dirty api (persistent mode) db file close close\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 1ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 2ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 2ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  34 passing (2s)\n\n  2 pending\n\n  1 failing\n\n\n\n  1) dirty api (persistent mode)\n       db file close\n         close:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":53,"line":87},"start":{"column":9,"line":87}}},{"id":"34","mutatorName":"ConditionalExpression","replacement":"false","status":"Survived","testsCompleted":1,"location":{"end":{"column":53,"line":87},"start":{"column":9,"line":87}}},{"id":"35","mutatorName":"LogicalOperator","replacement":"this._queue.size && this._inFlightWrites > 0","status":"Survived","testsCompleted":1,"location":{"end":{"column":53,"line":87},"start":{"column":9,"line":87}}},{"id":"36","mutatorName":"ConditionalExpression","replacement":"false","status":"Survived","testsCompleted":1,"location":{"end":{"column":53,"line":87},"start":{"column":29,"line":87}}},{"id":"37","mutatorName":"EqualityOperator","replacement":"this._inFlightWrites >= 0","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 1ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 0ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  1) dirty api (persistent mode) db file close close\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 2ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 2ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 1ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  34 passing (2s)\n\n  2 pending\n\n  1 failing\n\n\n\n  1) dirty api (persistent mode)\n       db file close\n         close:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":53,"line":87},"start":{"column":29,"line":87}}},{"id":"38","mutatorName":"EqualityOperator","replacement":"this._inFlightWrites <= 0","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 1ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 1ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r  ✔ dirty api (persistent mode) accessors will reload file from disk: 1ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  1) dirty api (persistent mode) db file close close\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 1ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 2ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 2ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 3ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  34 passing (2s)\n\n  2 pending\n\n  1 failing\n\n\n\n  1) dirty api (persistent mode)\n       db file close\n         close:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":53,"line":87},"start":{"column":29,"line":87}}},{"id":"39","mutatorName":"BlockStatement","replacement":"{}","status":"Survived","testsCompleted":1,"location":{"end":{"column":6,"line":90},"start":{"column":55,"line":87}}},{"id":"40","mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":24,"line":88},"start":{"column":17,"line":88}}},{"id":"41","mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived","testsCompleted":1,"location":{"end":{"column":44,"line":88},"start":{"column":26,"line":88}}},{"id":"42","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r  ✔ dirty api (transient mode) accessors will reload file from disk: 1ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 1ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  1) dirty api (persistent mode) db file close close\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 1ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  2) test-chaining-of-constructor should allow .on load to chain to constructor\n\n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  33 passing (15ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       db file close\n         close:\n     Uncaught TypeError: Cannot read properties of null (reading 'destroy')\n      at Dirty.close (lib/dirty/dirty.js:211:140)\n      at Dirty.<anonymous> (test/test-api.js:153:16)\n      at Dirty.emit (node:events:518:28)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:416:593\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n  2) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     Uncaught TypeError: Cannot read properties of null (reading 'destroy')\n      at Dirty.close (lib/dirty/dirty.js:211:140)\n      at Dirty.<anonymous> (lib/dirty/dirty.js:207:159)\n      at Object.onceWrapper (node:events:632:28)\n      at Dirty.emit (node:events:518:28)\n      at Object.callback (lib/dirty/dirty.js:416:593)\n      at callback (node:internal/streams/writable:757:21)\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:513:5\n      at node:internal/fs/streams:470:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:952:5)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     Error: done() called multiple times in test <test-chaining-of-constructor should allow .on load to chain to constructor> of file /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":25,"line":91},"start":{"column":9,"line":91}}},{"id":"43","mutatorName":"ConditionalExpression","replacement":"false","status":"Survived","testsCompleted":1,"location":{"end":{"column":25,"line":91},"start":{"column":9,"line":91}}},{"id":"44","mutatorName":"ConditionalExpression","replacement":"true","status":"Survived","testsCompleted":1,"location":{"end":{"column":26,"line":92},"start":{"column":9,"line":92}}},{"id":"45","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 1ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 1ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 1ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  1) dirty api (persistent mode) db file close close\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 2ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 2ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 1ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 2ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  34 passing (2s)\n\n  2 pending\n  1 failing\n\n\n\n  1) dirty api (persistent mode)\n       db file close\n         close:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":26,"line":92},"start":{"column":9,"line":92}}},{"id":"46","mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived","testsCompleted":1,"location":{"end":{"column":83,"line":92},"start":{"column":50,"line":92}}},{"id":"47","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":4,"line":179},"start":{"column":11,"line":96}}},{"id":"48","mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 1ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  1) dirty api (persistent mode) dirty constructor \"before all\" hook in \"dirty constructor\"\n\n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 1ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  2) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  3) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  4) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (17ms)\n\n  2 pending\n\n  4 failing\n\n\n\n  1) dirty api (persistent mode)\n       dirty constructor\n         \"before all\" hook in \"dirty constructor\":\n     done() called multiple times in hook <dirty api (persistent mode) dirty constructor \"before all\" hook in \"dirty constructor\"> of file /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js; in addition, done() received error: Error: Corrupted row at the end of the db: Stryker was here!\n    at ReadStream.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:336:89)\n    at ReadStream.emit (node:events:518:28)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  uncaught: true\n}\n  Error: done() called multiple times in hook <dirty api (persistent mode) dirty constructor \"before all\" hook in \"dirty constructor\"> of file /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js; in addition, done() received error: Error: Corrupted row at the end of the db: Stryker was here!\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:336:89)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n    uncaught: true\n  }\n      at process.emit (node:events:518:28)\n      at process._fatalException (node:internal/process/execution:178:25)\n\n\n  2) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n     Uncaught Error: Could not load corrupted row: Stryker was here!{\"key\":\"key\",\"val\":\"value\"}\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  3) test-load\n       should load after write to disk:\n     Uncaught Error: Could not load corrupted row: Stryker was here!{\"key\":1,\"val\":\"A\"}\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  4) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     Uncaught Error: Could not load corrupted row: Stryker was here!{\"key\":\"x\",\"val\":\"y\"}\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":20,"line":97},"start":{"column":18,"line":97}}},{"id":"49","mutatorName":"BooleanLiteral","replacement":"this.path","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\nTypeError [ERR_INVALID_ARG_TYPE]: The \"path\" argument must be of type string or an instance of Buffer or URL. Received undefined\n    at new ReadStream (node:internal/fs/streams:185:5)\n    at Object.createReadStream (node:fs:3079:10)\n    at Dirty._load (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:239:29)\n    at new Dirty (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:66:12)\n    at Suite.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:42:14)\n    at Object.create (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/interfaces/common.js:148:19)\n    at context.describe.context.context (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/interfaces/bdd.js:42:27)\n    at Object.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1369:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1427:10)\n    at Module.load (node:internal/modules/cjs/loader:1206:32)\n    at Module._load (node:internal/modules/cjs/loader:1022:12)\n    at cjsLoader (node:internal/modules/esm/translators:366:17)\n    at ModuleWrap.<anonymous> (node:internal/modules/esm/translators:315:7)\n    at ModuleJob.run (node:internal/modules/esm/module_job:222:25)\n    at async ModuleLoader.import (node:internal/modules/esm/loader:323:24)\n    at async formattedImport (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:7:14)\n    at async exports.requireOrImport (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:48:32)\n    at async exports.loadFilesAsync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:103:20)\n    at async singleRun (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/cli/run-helpers.js:125:3)\n    at async exports.handler (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/cli/run.js:374:5)\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":19,"line":99},"start":{"column":9,"line":99}}},{"id":"50","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 1ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  1) dirty api (persistent mode) events should fire drain after write\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  2) dirty api (persistent mode) accessors .set should trigger callback\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  3) dirty api (persistent mode) accessors .forEach runs for all\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  4) dirty api (persistent mode) accessors .rm removes key/value pair\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  5) dirty api (persistent mode) accessors .rm of unknown key is a no-op\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  6) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  7) dirty api (persistent mode) db file close close\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  8) test-flush should fire drain event on write\n\n\r\n  9) test-flush \"after each\" hook for \"should fire drain event on write\"\n\n    test-for-each should return each doc key and contents: \n\r  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  10) test-load should load after write to disk\n\n\r\n  11) test-load \"after each\" hook for \"should load after write to disk\"\n\n    test-size should be equal to number of keys set: \n\r  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r  12) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  24 passing (12ms)\n  2 pending\n\n  12 failing\n\n\n\n  1) dirty api (persistent mode)\n       events\n         should fire drain after write:\n     Uncaught TypeError: Cannot read properties of null (reading 'cork')\n      at Dirty._flush (lib/dirty/dirty.js:394:25)\n      at Dirty.set (lib/dirty/dirty.js:103:16)\n      at Dirty.<anonymous> (test/test-api.js:59:14)\n      at Dirty.emit (node:events:518:28)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:233:20\n      at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n\n\n  2) dirty api (persistent mode)\n       accessors\n         .set should trigger callback:\n     TypeError: Cannot read properties of null (reading 'cork')\n      at Dirty._flush (lib/dirty/dirty.js:394:25)\n      at Dirty.set (lib/dirty/dirty.js:103:16)\n      at Context.<anonymous> (test/test-api.js:73:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n     TypeError: Cannot read properties of null (reading 'cork')\n      at Dirty._flush (lib/dirty/dirty.js:394:25)\n      at Dirty.set (lib/dirty/dirty.js:103:16)\n      at Context.<anonymous> (test/test-api.js:90:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) dirty api (persistent mode)\n       accessors\n         .rm removes key/value pair:\n     TypeError: Cannot read properties of null (reading 'cork')\n      at Dirty._flush (lib/dirty/dirty.js:394:25)\n      at Dirty.set (lib/dirty/dirty.js:103:16)\n      at Context.<anonymous> (test/test-api.js:109:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) dirty api (persistent mode)\n       accessors\n         .rm of unknown key is a no-op:\n     TypeError: Cannot read properties of null (reading 'cork')\n      at Dirty._flush (lib/dirty/dirty.js:394:25)\n      at Dirty.set (lib/dirty/dirty.js:103:16)\n      at Dirty.rm (lib/dirty/dirty.js:157:12)\n      at Context.<anonymous> (test/test-api.js:116:12)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  6) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:233:20\n      at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n\n\n  7) dirty api (persistent mode)\n       db file close\n         close:\n     Uncaught TypeError: Cannot read properties of null (reading 'cork')\n      at Dirty._flush (lib/dirty/dirty.js:394:25)\n      at Dirty.set (lib/dirty/dirty.js:103:16)\n      at Dirty.<anonymous> (test/test-api.js:151:14)\n      at Dirty.emit (node:events:518:28)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:233:20\n      at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n\n\n  8) test-flush\n       should fire drain event on write:\n     TypeError: Cannot read properties of null (reading 'cork')\n      at Dirty._flush (lib/dirty/dirty.js:394:25)\n      at Dirty.set (lib/dirty/dirty.js:103:16)\n      at Context.<anonymous> (test/test-system.js:19:8)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  9) test-flush\n       \"after each\" hook for \"should fire drain event on write\":\n     Error: ENOENT: no such file or directory, unlink '/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/tmp/flush.dirty'\n  \n\n\n  10) test-load\n       should load after write to disk:\n     TypeError: Cannot read properties of null (reading 'cork')\n      at Dirty._flush (lib/dirty/dirty.js:394:25)\n      at Dirty.set (lib/dirty/dirty.js:103:16)\n      at Context.<anonymous> (test/test-system.js:68:8)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  11) test-load\n       \"after each\" hook for \"should load after write to disk\":\n     Error: ENOENT: no such file or directory, unlink '/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/tmp/load.dirty'\n  \n\n\n  12) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     TypeError: Cannot read properties of null (reading 'cork')\n      at Dirty._flush (lib/dirty/dirty.js:394:25)\n      at Dirty.set (lib/dirty/dirty.js:103:16)\n      at Context.<anonymous> (test/test-system.js:110:8)\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":19,"line":99},"start":{"column":9,"line":99}}},{"id":"51","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\nTypeError [ERR_INVALID_ARG_TYPE]: The \"path\" argument must be of type string or an instance of Buffer or URL. Received undefined\n    at new ReadStream (node:internal/fs/streams:185:5)\n    at Object.createReadStream (node:fs:3079:10)\n    at Dirty._load (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:239:29)\n    at new Dirty (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:66:12)\n    at Suite.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:42:14)\n    at Object.create (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/interfaces/common.js:148:19)\n    at context.describe.context.context (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/interfaces/bdd.js:42:27)\n    at Object.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1369:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1427:10)\n    at Module.load (node:internal/modules/cjs/loader:1206:32)\n    at Module._load (node:internal/modules/cjs/loader:1022:12)\n    at cjsLoader (node:internal/modules/esm/translators:366:17)\n    at ModuleWrap.<anonymous> (node:internal/modules/esm/translators:315:7)\n    at ModuleJob.run (node:internal/modules/esm/module_job:222:25)\n    at async ModuleLoader.import (node:internal/modules/esm/loader:323:24)\n    at async formattedImport (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:7:14)\n    at async exports.requireOrImport (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:48:32)\n    at async exports.loadFilesAsync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:103:20)\n    at async singleRun (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/cli/run-helpers.js:125:3)\n    at async exports.handler (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/cli/run.js:374:5)\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":19,"line":99},"start":{"column":9,"line":99}}},{"id":"52","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\nTypeError [ERR_INVALID_ARG_TYPE]: The \"path\" argument must be of type string or an instance of Buffer or URL. Received undefined\n    at new ReadStream (node:internal/fs/streams:185:5)\n    at Object.createReadStream (node:fs:3079:10)\n    at Dirty._load (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:239:29)\n    at new Dirty (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:66:12)\n    at Suite.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:42:14)\n    at Object.create (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/interfaces/common.js:148:19)\n    at context.describe.context.context (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/interfaces/bdd.js:42:27)\n    at Object.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1369:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1427:10)\n    at Module.load (node:internal/modules/cjs/loader:1206:32)\n    at Module._load (node:internal/modules/cjs/loader:1022:12)\n    at cjsLoader (node:internal/modules/esm/translators:366:17)\n    at ModuleWrap.<anonymous> (node:internal/modules/esm/translators:315:7)\n    at ModuleJob.run (node:internal/modules/esm/module_job:222:25)\n    at async ModuleLoader.import (node:internal/modules/esm/loader:323:24)\n    at async formattedImport (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:7:14)\n    at async exports.requireOrImport (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:48:32)\n    at async exports.loadFilesAsync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/nodejs/esm-utils.js:103:20)\n    at async singleRun (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/cli/run-helpers.js:125:3)\n    at async exports.handler (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/node_modules/mocha/lib/cli/run.js:374:5)\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":6,"line":104},"start":{"column":21,"line":99}}},{"id":"53","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":8,"line":102},"start":{"column":30,"line":100}}},{"id":"54","mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout","location":{"end":{"column":25,"line":101},"start":{"column":19,"line":101}}},{"id":"55","mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived","testsCompleted":1,"location":{"end":{"column":6,"line":109},"start":{"column":55,"line":106}}},{"id":"56","mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":24,"line":107},"start":{"column":17,"line":107}}},{"id":"57","mutatorName":"StringLiteral","replacement":"\"\"","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n\r\n  1) Uncaught error outside test suite\n\n\n\n  0 passing (0ms)\n\n  1 failing\n\n\n\n  1) Uncaught error outside test suite:\n     Uncaught TypeError [ERR_INVALID_ARG_VALUE]: The argument 'flags' is invalid. Received ''\n      at stringToFlags (node:internal/fs/utils:602:9)\n      at Object.open (node:fs:560:23)\n      at ReadStream._construct (node:internal/fs/streams:72:17)\n      at constructNT (node:internal/streams/destroy:299:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:81:21)\n\n\n\n\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  2) dirty api (persistent mode) constructor without new\n\n\r\n  3) dirty api (persistent mode) constructor without new\n\n\r\n  4) dirty api (persistent mode) dirty constructor \"before all\" hook for \"is an event emitter\"\n\n\r\n  5) dirty api (persistent mode) dirty constructor \"before all\" hook for \"is an event emitter\"\n\n    dirty api (persistent mode) events should fire load: \n\r  6) dirty api (persistent mode) events should fire load\n\n    dirty api (persistent mode) events should fire drain after write: \n\r  7) dirty api (persistent mode) events should fire drain after write\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  8) dirty api (persistent mode) accessors .set should trigger callback\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  9) dirty api (persistent mode) accessors .set should trigger callback\n\n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  10) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  11) dirty api (persistent mode) db file close close\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 1ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  12) test-flush should fire drain event on write\n\n\r\n  13) test-flush should fire drain event on write\n\n    test-flush should write to disk appropriately: \n\r\n  14) test-flush should write to disk appropriately\n\n\r\n  15) test-flush \"after each\" hook for \"should write to disk appropriately\"\n\n\r  16) test-flush \"after each\" hook for \"should write to disk appropriately\"\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  17) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  18) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":17,"line":108},"start":{"column":14,"line":108}}},{"id":"58","mutatorName":"StringLiteral","replacement":"\"\"","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n\r\n  1) Uncaught error outside test suite\n\n\n\n  0 passing (1ms)\n\n  1 failing\n\n\n\n  1) Uncaught error outside test suite:\n     Uncaught Error: ENOENT: no such file or directory, open '/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/tmp/load.dirty'\n  \n\n\n\n\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 1ms\n\n\r\n  2) dirty api (persistent mode) constructor without new\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":20,"line":112},"start":{"column":13,"line":112}}},{"id":"59","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":10,"line":119},"start":{"column":31,"line":112}}},{"id":"60","mutatorName":"ConditionalExpression","replacement":"true","status":"Survived","testsCompleted":1,"location":{"end":{"column":36,"line":113},"start":{"column":15,"line":113}}},{"id":"61","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n\r\n  1) Uncaught error outside test suite\n\n\n\n  0 passing (0ms)\n\n  1 failing\n\n\n\n  1) Uncaught error outside test suite:\n     Uncaught Error: ENOENT: no such file or directory, open '/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/tmp/load.dirty'\n  \n\n\n\n\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 1ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n\r\n  2) dirty api (persistent mode) constructor without new\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":36,"line":113},"start":{"column":15,"line":113}}},{"id":"62","mutatorName":"EqualityOperator","replacement":"err.code !== 'ENOENT'","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n\r\n  1) Uncaught error outside test suite\n\n\n\n  0 passing (0ms)\n\n  1 failing\n\n\n\n  1) Uncaught error outside test suite:\n     Uncaught Error: ENOENT: no such file or directory, open '/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/tmp/load.dirty'\n  \n\n\n\n\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n\r\n  2) dirty api (persistent mode) constructor without new\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":36,"line":113},"start":{"column":15,"line":113}}},{"id":"63","mutatorName":"StringLiteral","replacement":"\"\"","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n\r\n  1) Uncaught error outside test suite\n\n\n\n  0 passing (1ms)\n\n  1 failing\n\n\n\n  1) Uncaught error outside test suite:\n     Uncaught Error: ENOENT: no such file or directory, open '/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/tmp/load.dirty'\n  \n\n\n\n\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 1ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n\r\n  2) dirty api (persistent mode) constructor without new\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":36,"line":113},"start":{"column":28,"line":113}}},{"id":"64","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n\r\n  1) Uncaught error outside test suite\n\n\n\n  0 passing (0ms)\n\n  1 failing\n\n\n\n  1) Uncaught error outside test suite:\n     Uncaught Error: ENOENT: no such file or directory, open '/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/tmp/load.dirty'\n  \n\n\n\n\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \r  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n\r\n  2) dirty api (persistent mode) constructor without new\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":12,"line":116},"start":{"column":38,"line":113}}},{"id":"65","mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout","location":{"end":{"column":29,"line":114},"start":{"column":23,"line":114}}},{"id":"66","mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":28,"line":118},"start":{"column":21,"line":118}}},{"id":"67","mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout","location":{"end":{"column":19,"line":120},"start":{"column":13,"line":120}}},{"id":"68","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 1ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 1ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (15ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  2) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 0 == 2\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-system.js:115:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":10,"line":149},"start":{"column":32,"line":120}}},{"id":"69","mutatorName":"AssignmentOperator","replacement":"buffer -= chunk","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 1ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (15ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n     Uncaught TypeError: buffer.split is not a function\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:266:30)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  2) test-load\n       should load after write to disk:\n     Uncaught TypeError: buffer.split is not a function\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:266:30)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     Uncaught TypeError: buffer.split is not a function\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:266:30)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":26,"line":121},"start":{"column":11,"line":121}}},{"id":"70","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 1ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (14ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n     Uncaught Error: Corrupted row at the end of the db: {\"key\":\"key\",\"val\":\"value\"}\n{\"key\":\"key1\",\"val\":\"value1\"}\n{\"key\":\"delete\",\"val\":\"me\"}\n{\"key\":\"delete\"}\n{\"key\":\"test\",\"val\":\"test\"}\n{\"key\":\"test\"}\n{\"key\":\"does not exist\"}\n\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:336:89)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  2) test-load\n       should load after write to disk:\n     Uncaught Error: Corrupted row at the end of the db: {\"key\":1,\"val\":\"A\"}\n{\"key\":2,\"val\":\"B\"}\n{\"key\":3,\"val\":\"C\"}\n{\"key\":3}\n\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:336:89)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     Uncaught Error: Corrupted row at the end of the db: {\"key\":\"x\",\"val\":\"y\"}\n{\"key\":\"p\",\"val\":\"q\"}\n\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:336:89)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":45,"line":122},"start":{"column":15,"line":122}}},{"id":"71","mutatorName":"ConditionalExpression","replacement":"false","status":"Survived","testsCompleted":1,"location":{"end":{"column":45,"line":122},"start":{"column":15,"line":122}}},{"id":"72","mutatorName":"EqualityOperator","replacement":"chunk.lastIndexOf('\\n') !== -1","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 1ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (15ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n     Uncaught Error: Corrupted row at the end of the db: {\"key\":\"key\",\"val\":\"value\"}\n{\"key\":\"key1\",\"val\":\"value1\"}\n{\"key\":\"delete\",\"val\":\"me\"}\n{\"key\":\"delete\"}\n{\"key\":\"test\",\"val\":\"test\"}\n{\"key\":\"test\"}\n{\"key\":\"does not exist\"}\n\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:336:89)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  2) test-load\n       should load after write to disk:\n     Uncaught Error: Corrupted row at the end of the db: {\"key\":1,\"val\":\"A\"}\n{\"key\":2,\"val\":\"B\"}\n{\"key\":3,\"val\":\"C\"}\n{\"key\":3}\n\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:336:89)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     Uncaught Error: Corrupted row at the end of the db: {\"key\":\"x\",\"val\":\"y\"}\n{\"key\":\"p\",\"val\":\"q\"}\n\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:336:89)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":45,"line":122},"start":{"column":15,"line":122}}},{"id":"73","mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":37,"line":122},"start":{"column":33,"line":122}}},{"id":"74","mutatorName":"UnaryOperator","replacement":"+1","status":"Survived","testsCompleted":1,"location":{"end":{"column":45,"line":122},"start":{"column":43,"line":122}}},{"id":"75","mutatorName":"StringLiteral","replacement":"\"\"","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (15ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n     Uncaught Error: Could not load corrupted row: {\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  2) test-load\n       should load after write to disk:\n     Uncaught Error: Could not load corrupted row: {\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     Uncaught Error: Could not load corrupted row: {\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":40,"line":123},"start":{"column":36,"line":123}}},{"id":"76","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 1ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 1ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 4ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 2ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 1ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (21ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  2) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 0 == 2\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-system.js:115:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":12,"line":148},"start":{"column":35,"line":125}}},{"id":"77","mutatorName":"BooleanLiteral","replacement":"rowStr","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 1ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 1ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (15ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n     Uncaught Error: Empty lines never appear in a healthy database\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:278:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  2) test-load\n       should load after write to disk:\n     Uncaught Error: Empty lines never appear in a healthy database\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:278:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     Uncaught Error: Empty lines never appear in a healthy database\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:278:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":24,"line":126},"start":{"column":17,"line":126}}},{"id":"78","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 1ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (15ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n     Uncaught Error: Empty lines never appear in a healthy database\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:278:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  2) test-load\n       should load after write to disk:\n     Uncaught Error: Empty lines never appear in a healthy database\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:278:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     Uncaught Error: Empty lines never appear in a healthy database\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:278:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":24,"line":126},"start":{"column":17,"line":126}}},{"id":"79","mutatorName":"ConditionalExpression","replacement":"false","status":"Survived","testsCompleted":1,"location":{"end":{"column":24,"line":126},"start":{"column":17,"line":126}}},{"id":"80","mutatorName":"BlockStatement","replacement":"{}","status":"Survived","testsCompleted":1,"location":{"end":{"column":14,"line":129},"start":{"column":26,"line":126}}},{"id":"81","mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":32,"line":127},"start":{"column":25,"line":127}}},{"id":"82","mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":92,"line":127},"start":{"column":44,"line":127}}},{"id":"83","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 1ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 1ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 1ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (15ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n     Uncaught TypeError: Cannot read properties of undefined (reading 'val')\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:307:171\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  2) test-load\n       should load after write to disk:\n     Uncaught TypeError: Cannot read properties of undefined (reading 'val')\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:307:171\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     Uncaught TypeError: Cannot read properties of undefined (reading 'val')\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:307:171\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":14,"line":137},"start":{"column":17,"line":132}}},{"id":"84","mutatorName":"BooleanLiteral","replacement":"'key' in row","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 1ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 1ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (15ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n     Uncaught Error: Could not load corrupted row: {\"key\":\"key\",\"val\":\"value\"}\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  2) test-load\n       should load after write to disk:\n     Uncaught Error: Could not load corrupted row: {\"key\":1,\"val\":\"A\"}\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     Uncaught Error: Could not load corrupted row: {\"key\":\"x\",\"val\":\"y\"}\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":34,"line":134},"start":{"column":19,"line":134}}},{"id":"85","mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout","location":{"end":{"column":34,"line":134},"start":{"column":19,"line":134}}},{"id":"86","mutatorName":"ConditionalExpression","replacement":"false","status":"Survived","testsCompleted":1,"location":{"end":{"column":34,"line":134},"start":{"column":19,"line":134}}},{"id":"87","mutatorName":"StringLiteral","replacement":"\"\"","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (14ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n     Uncaught Error: Could not load corrupted row: {\"key\":\"key\",\"val\":\"value\"}\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  2) test-load\n       should load after write to disk:\n     Uncaught Error: Could not load corrupted row: {\"key\":1,\"val\":\"A\"}\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     Uncaught Error: Could not load corrupted row: {\"key\":\"x\",\"val\":\"y\"}\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":26,"line":134},"start":{"column":21,"line":134}}},{"id":"88","mutatorName":"BlockStatement","replacement":"{}","status":"Survived","testsCompleted":1,"location":{"end":{"column":16,"line":136},"start":{"column":36,"line":134}}},{"id":"89","mutatorName":"BlockStatement","replacement":"{}","status":"Survived","testsCompleted":1,"location":{"end":{"column":14,"line":140},"start":{"column":25,"line":137}}},{"id":"90","mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":32,"line":138},"start":{"column":25,"line":138}}},{"id":"91","mutatorName":"StringLiteral","replacement":"``","status":"Survived","testsCompleted":1,"location":{"end":{"column":85,"line":138},"start":{"column":44,"line":138}}},{"id":"92","mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":24,"line":139},"start":{"column":22,"line":139}}},{"id":"93","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 1ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 1ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (16ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  2) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 0 == 2\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-system.js:115:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":38,"line":142},"start":{"column":17,"line":142}}},{"id":"94","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 1ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 1ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 0ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  33 passing (15ms)\n\n  2 pending\n\n  2 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n5 !== 2\n\n      + expected - actual\n\n      -5\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  2) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 3 == 2\n      + expected - actual\n\n      -3\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":38,"line":142},"start":{"column":17,"line":142}}},{"id":"95","mutatorName":"EqualityOperator","replacement":"row.val !== undefined","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 1ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (16ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n3 !== 2\n\n      + expected - actual\n\n      -3\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  2) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 1 == 2\n      + expected - actual\n\n      -1\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-system.js:115:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":38,"line":142},"start":{"column":17,"line":142}}},{"id":"96","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 1ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 1ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 0ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 1ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  33 passing (15ms)\n\n  2 pending\n\n  2 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n4 !== 2\n\n      + expected - actual\n\n      -4\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  2) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 3 == 2\n      + expected - actual\n\n      -3\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":14,"line":144},"start":{"column":40,"line":142}}},{"id":"97","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 1ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 1ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  3) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (15ms)\n\n  2 pending\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  2) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 0 == 2\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  3) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-system.js:115:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":14,"line":146},"start":{"column":20,"line":144}}},{"id":"98","mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":22,"line":147},"start":{"column":20,"line":147}}},{"id":"99","mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout","location":{"end":{"column":18,"line":150},"start":{"column":13,"line":150}}},{"id":"100","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":10,"line":155},"start":{"column":26,"line":150}}},{"id":"101","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 1ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 1ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 1ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  1) dirty api (persistent mode) dirty constructor \"before all\" hook in \"dirty constructor\"\n\n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 1ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 1ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  2) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  3) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  4) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  32 passing (15ms)\n\n  2 pending\n\n  4 failing\n\n\n\n  1) dirty api (persistent mode)\n       dirty constructor\n         \"before all\" hook in \"dirty constructor\":\n     done() called multiple times in hook <dirty api (persistent mode) dirty constructor \"before all\" hook in \"dirty constructor\"> of file /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js; in addition, done() received error: Error: Corrupted row at the end of the db: \n    at ReadStream.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:336:89)\n    at ReadStream.emit (node:events:518:28)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  uncaught: true\n}\n  Error: done() called multiple times in hook <dirty api (persistent mode) dirty constructor \"before all\" hook in \"dirty constructor\"> of file /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js; in addition, done() received error: Error: Corrupted row at the end of the db: \n      at ReadStream.<anonymous> (lib/dirty/dirty.js:336:89)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n    uncaught: true\n  }\n      at process.emit (node:events:518:28)\n      at process._fatalException (node:internal/process/execution:178:25)\n\n\n  2) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n     Uncaught Error: Corrupted row at the end of the db: \n      at ReadStream.<anonymous> (lib/dirty/dirty.js:336:89)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  3) test-load\n       should load after write to disk:\n     Uncaught Error: Corrupted row at the end of the db: \n      at ReadStream.<anonymous> (lib/dirty/dirty.js:336:89)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  4) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     Uncaught Error: Corrupted row at the end of the db: \n      at ReadStream.<anonymous> (lib/dirty/dirty.js:336:89)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":28,"line":151},"start":{"column":15,"line":151}}},{"id":"102","mutatorName":"ConditionalExpression","replacement":"false","status":"Survived","testsCompleted":1,"location":{"end":{"column":28,"line":151},"start":{"column":15,"line":151}}},{"id":"103","mutatorName":"BlockStatement","replacement":"{}","status":"Survived","testsCompleted":1,"location":{"end":{"column":12,"line":153},"start":{"column":30,"line":151}}},{"id":"104","mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":30,"line":152},"start":{"column":23,"line":152}}},{"id":"105","mutatorName":"StringLiteral","replacement":"``","status":"Survived","testsCompleted":1,"location":{"end":{"column":89,"line":152},"start":{"column":42,"line":152}}},{"id":"106","mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout","location":{"end":{"column":27,"line":154},"start":{"column":21,"line":154}}},{"id":"107","mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":20,"line":156},"start":{"column":13,"line":156}}},{"id":"108","mutatorName":"BlockStatement","replacement":"{}","status":"Survived","testsCompleted":1,"location":{"end":{"column":10,"line":159},"start":{"column":28,"line":156}}},{"id":"109","mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":33,"line":158},"start":{"column":21,"line":158}}},{"id":"110","mutatorName":"ObjectLiteral","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 1ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 1ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 1ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  33 passing (15ms)\n\n  2 pending\n\n  2 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  2) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 0 == 2\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":6,"line":164},"start":{"column":57,"line":161}}},{"id":"111","mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":24,"line":162},"start":{"column":17,"line":162}}},{"id":"112","mutatorName":"StringLiteral","replacement":"\"\"","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n\r\n  1) Uncaught error outside test suite\n\n\n\n  0 passing (1ms)\n\n  1 failing\n\n\n\n  1) Uncaught error outside test suite:\n     Uncaught TypeError [ERR_INVALID_ARG_VALUE]: The argument 'flags' is invalid. Received ''\n      at stringToFlags (node:internal/fs/utils:602:9)\n      at Object.open (node:fs:560:23)\n      at WriteStream._construct (node:internal/fs/streams:72:17)\n      at constructNT (node:internal/streams/destroy:299:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:81:21)\n\n\n\n\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  2) dirty api (persistent mode) constructor without new\n\n\r\n  3) dirty api (persistent mode) constructor without new\n\n\r\n  4) dirty api (persistent mode) dirty constructor \"before all\" hook for \"is an event emitter\"\n\n\r\n  5) dirty api (persistent mode) dirty constructor \"before all\" hook for \"is an event emitter\"\n\n    dirty api (persistent mode) events should fire load: \n\r\n  6) dirty api (persistent mode) events should fire load\n\n\r  7) dirty api (persistent mode) events should fire load\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  8) dirty api (persistent mode) events should fire drain after write\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  9) dirty api (persistent mode) accessors .set should trigger callback\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  10) dirty api (persistent mode) accessors .forEach runs for all\n\n\r  11) dirty api (persistent mode) accessors .forEach runs for all\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  12) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  13) dirty api (persistent mode) db file close close\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  14) test-flush should fire drain event on write\n\n\r\n  15) test-flush \"after each\" hook for \"should fire drain event on write\"\n\n    test-for-each should return each doc key and contents: \n\r  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  16) test-load should load after write to disk\n\n\r  17) test-load \"after each\" hook for \"should load after write to disk\"\n\n    test-size should be equal to number of keys set: \n\r  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r  18) test-chaining-of-constructor should allow .on load to chain to constructor\n\n\r\n  19) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":17,"line":163},"start":{"column":14,"line":163}}},{"id":"113","mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":33,"line":166},"start":{"column":26,"line":166}}},{"id":"114","mutatorName":"BlockStatement","replacement":"{}","status":"Survived","testsCompleted":1,"location":{"end":{"column":6,"line":173},"start":{"column":41,"line":166}}},{"id":"115","mutatorName":"BooleanLiteral","replacement":"true","status":"Survived","testsCompleted":1,"location":{"end":{"column":33,"line":167},"start":{"column":28,"line":167}}},{"id":"116","mutatorName":"BooleanLiteral","replacement":"this._queue.size","status":"Survived","testsCompleted":1,"location":{"end":{"column":28,"line":168},"start":{"column":11,"line":168}}},{"id":"117","mutatorName":"ConditionalExpression","replacement":"true","status":"Survived","testsCompleted":1,"location":{"end":{"column":28,"line":168},"start":{"column":11,"line":168}}},{"id":"118","mutatorName":"ConditionalExpression","replacement":"false","status":"Survived","testsCompleted":1,"location":{"end":{"column":28,"line":168},"start":{"column":11,"line":168}}},{"id":"119","mutatorName":"BlockStatement","replacement":"{}","status":"Survived","testsCompleted":1,"location":{"end":{"column":8,"line":170},"start":{"column":30,"line":168}}},{"id":"120","mutatorName":"ConditionalExpression","replacement":"true","status":"Survived","testsCompleted":1,"location":{"end":{"column":38,"line":169},"start":{"column":13,"line":169}}},{"id":"121","mutatorName":"ConditionalExpression","replacement":"false","status":"Survived","testsCompleted":1,"location":{"end":{"column":38,"line":169},"start":{"column":13,"line":169}}},{"id":"122","mutatorName":"EqualityOperator","replacement":"this._inFlightWrites < 0","status":"Survived","testsCompleted":1,"location":{"end":{"column":38,"line":169},"start":{"column":13,"line":169}}},{"id":"123","mutatorName":"EqualityOperator","replacement":"this._inFlightWrites > 0","status":"Survived","testsCompleted":1,"location":{"end":{"column":38,"line":169},"start":{"column":13,"line":169}}},{"id":"124","mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":57,"line":169},"start":{"column":50,"line":169}}},{"id":"125","mutatorName":"BlockStatement","replacement":"{}","status":"Survived","testsCompleted":1,"location":{"end":{"column":8,"line":172},"start":{"column":14,"line":170}}},{"id":"126","mutatorName":"StringLiteral","replacement":"\"\"","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 1ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 0ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  1) dirty api (persistent mode) db file close close\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 1ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 1ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 2ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 2ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  34 passing (2s)\n\n  2 pending\n\n  1 failing\n\n\n\n  1) dirty api (persistent mode)\n       db file close\n         close:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":33,"line":175},"start":{"column":26,"line":175}}},{"id":"127","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 1ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 1ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 1ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 1ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  1) dirty api (persistent mode) db file close close\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 1ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 2ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  34 passing (3s)\n\n  2 pending\n\n  1 failing\n\n\n\n  1) dirty api (persistent mode)\n       db file close\n         close:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":6,"line":178},"start":{"column":41,"line":175}}},{"id":"128","mutatorName":"StringLiteral","replacement":"\"\"","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 1ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 1ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 1ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 1ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  1) dirty api (persistent mode) db file close close\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r  ✔ test-set-callback should trigger callback on set: 0ms\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 1ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 2ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  34 passing (2s)\n\n  2 pending\n\n  1 failing\n\n\n\n  1) dirty api (persistent mode)\n       db file close\n         close:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":30,"line":177},"start":{"column":17,"line":177}}},{"id":"129","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":4,"line":196},"start":{"column":12,"line":181}}},{"id":"130","mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout","location":{"end":{"column":48,"line":182},"start":{"column":9,"line":182}}},{"id":"131","mutatorName":"ConditionalExpression","replacement":"false","status":"Survived","testsCompleted":1,"location":{"end":{"column":48,"line":182},"start":{"column":9,"line":182}}},{"id":"132","mutatorName":"LogicalOperator","replacement":"!this._queue.size && this._waitForDrain","status":"Survived","testsCompleted":1,"location":{"end":{"column":48,"line":182},"start":{"column":9,"line":182}}},{"id":"133","mutatorName":"BooleanLiteral","replacement":"this._queue.size","status":"Timeout","location":{"end":{"column":26,"line":182},"start":{"column":9,"line":182}}},{"id":"134","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":6,"line":194},"start":{"column":43,"line":184}}},{"id":"135","mutatorName":"StringLiteral","replacement":"``","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 1ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  2) test-flush should write to disk appropriately\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  3) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  4) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  31 passing (15ms)\n  2 pending\n\n  4 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-api.js:130:18)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  2) test-flush\n       should write to disk appropriately:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ ''\n- '{\"key\":\"foo1\",\"val\":\"bar1\"}\\n'\n      + expected - actual\n\n      +{\"key\":\"foo1\",\"val\":\"bar1\"}\n      \n      at Dirty.<anonymous> (test/test-system.js:31:14)\n      at Dirty.emit (node:events:518:28)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:416:593\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n  3) test-load\n       should load after write to disk:\n\n      Uncaught AssertionError [ERR_ASSERTION]: 0 == 2\n      + expected - actual\n\n      -0\n      +2\n      \n      at Dirty.<anonymous> (test/test-system.js:77:16)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n  4) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n0 !== 2\n\n      + expected - actual\n\n      -0\n      +2\n      \n      at Context.<anonymous> (test/test-system.js:115:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":74,"line":186},"start":{"column":20,"line":186}}},{"id":"136","mutatorName":"ObjectLiteral","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 1ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \r  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n    dirty api (persistent mode) accessors .path is valid: \n\r  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  1) dirty api (persistent mode) accessors will reload file from disk\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  2) test-flush should write to disk appropriately\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  3) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  4) test-chaining-of-constructor should allow .on load to chain to constructor\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  31 passing (17ms)\n\n  2 pending\n\n  4 failing\n\n\n\n  1) dirty api (persistent mode)\n       accessors\n         will reload file from disk:\n     Uncaught Error: Could not load corrupted row: {}\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  2) test-flush\n       should write to disk appropriately:\n\n      Uncaught AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{}\\n'\n- '{\"key\":\"foo1\",\"val\":\"bar1\"}\\n'\n      + expected - actual\n\n      -{}\n      +{\"key\":\"foo1\",\"val\":\"bar1\"}\n      \n      at Dirty.<anonymous> (test/test-system.js:31:14)\n      at Dirty.emit (node:events:518:28)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:416:593\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n  3) test-load\n       should load after write to disk:\n     Uncaught Error: Could not load corrupted row: {}\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n  4) test-chaining-of-constructor\n       should allow .on load to chain to constructor:\n     Uncaught Error: Could not load corrupted row: {}\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:303:91\n      at Array.forEach (<anonymous>)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:268:15)\n      at ReadStream.emit (node:events:518:28)\n      at addChunk (node:internal/streams/readable:559:12)\n      at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n      at Readable.push (node:internal/streams/readable:390:5)\n      at node:internal/fs/streams:289:14\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:687:5)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":69,"line":186},"start":{"column":38,"line":186}}},{"id":"137","mutatorName":"UpdateOperator","replacement":"--this._inFlightWrites","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 1ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 1ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 1ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 1ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 1ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 1ms\n\n\r\n  1) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 0ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  35 passing (16ms)\n\n  2 pending\n\n  1 failing\n\n\n\n  1) test-load\n       should load after write to disk:\n     Error: done() called multiple times in test <test-load should load after write to disk> of file /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js\n      at Dirty.<anonymous> (test/test-system.js:84:9)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":29,"line":187},"start":{"column":7,"line":187}}},{"id":"138","mutatorName":"BooleanLiteral","replacement":"this._writeStream.write(data, err => {\n  if (!cbs.length && err != null) this.emit('error', err);\n  if (--this._inFlightWrites <= 0 && !this._waitForDrain) this.emit('drain');\n  for (const cb of cbs) cb(err);\n})","status":"Timeout","location":{"end":{"column":9,"line":192},"start":{"column":28,"line":188}}},{"id":"139","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":8,"line":192},"start":{"column":68,"line":188}}},{"id":"140","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 1ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  1) dirty api (persistent mode) events should fire drain after write\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  2) dirty api (persistent mode) accessors .set should trigger callback\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n\r\n  3) dirty api (persistent mode) accessors .forEach runs for all\n\n\n\n  20 passing (9ms)\n\n  3 failing\n\n\n\n  1) dirty api (persistent mode)\n       events\n         should fire drain after write:\n     Uncaught Error [ERR_UNHANDLED_ERROR]: Unhandled error. (null)\n      at Dirty.emit (node:events:507:17)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:415:383\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n  2) dirty api (persistent mode)\n       accessors\n         .set should trigger callback:\n     Uncaught Error [ERR_UNHANDLED_ERROR]: Unhandled error. (null)\n      at Dirty.emit (node:events:507:17)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:415:383\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n  3) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n     Uncaught Error [ERR_UNHANDLED_ERROR]: Unhandled error. (null)\n      at Dirty.emit (node:events:507:17)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:415:383\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":39,"line":189},"start":{"column":13,"line":189}}},{"id":"141","mutatorName":"ConditionalExpression","replacement":"false","status":"Survived","testsCompleted":1,"location":{"end":{"column":39,"line":189},"start":{"column":13,"line":189}}},{"id":"142","mutatorName":"LogicalOperator","replacement":"!cbs.length || err != null","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 1ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  1) dirty api (persistent mode) events should fire drain after write\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n\r\n  2) dirty api (persistent mode) accessors .forEach runs for all\n\n\n\n  21 passing (9ms)\n\n  2 failing\n\n\n\n  1) dirty api (persistent mode)\n       events\n         should fire drain after write:\n     Uncaught Error [ERR_UNHANDLED_ERROR]: Unhandled error. (null)\n      at Dirty.emit (node:events:507:17)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:415:383\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n  2) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n     Uncaught Error [ERR_UNHANDLED_ERROR]: Unhandled error. (null)\n      at Dirty.emit (node:events:507:17)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:415:383\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":39,"line":189},"start":{"column":13,"line":189}}},{"id":"143","mutatorName":"BooleanLiteral","replacement":"cbs.length","status":"Survived","testsCompleted":1,"location":{"end":{"column":24,"line":189},"start":{"column":13,"line":189}}},{"id":"144","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 1ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  1) dirty api (persistent mode) events should fire drain after write\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n\r\n  2) dirty api (persistent mode) accessors .forEach runs for all\n\n\n\n  21 passing (9ms)\n\n  2 failing\n\n\n\n  1) dirty api (persistent mode)\n       events\n         should fire drain after write:\n     Uncaught Error [ERR_UNHANDLED_ERROR]: Unhandled error. (null)\n      at Dirty.emit (node:events:507:17)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:415:383\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n  2) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n     Uncaught Error [ERR_UNHANDLED_ERROR]: Unhandled error. (null)\n      at Dirty.emit (node:events:507:17)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:415:383\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":39,"line":189},"start":{"column":28,"line":189}}},{"id":"145","mutatorName":"EqualityOperator","replacement":"err == null","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  1) dirty api (persistent mode) events should fire drain after write\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 1ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n\r\n  2) dirty api (persistent mode) accessors .forEach runs for all\n\n\n\n  21 passing (9ms)\n\n  2 failing\n\n\n\n  1) dirty api (persistent mode)\n       events\n         should fire drain after write:\n     Uncaught Error [ERR_UNHANDLED_ERROR]: Unhandled error. (null)\n      at Dirty.emit (node:events:507:17)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:415:383\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n  2) dirty api (persistent mode)\n       accessors\n         .forEach runs for all:\n     Uncaught Error [ERR_UNHANDLED_ERROR]: Unhandled error. (null)\n      at Dirty.emit (node:events:507:17)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/lib/dirty/dirty.js:415:383\n      at afterWrite (node:internal/streams/writable:701:5)\n      at onwrite (node:internal/streams/writable:679:7)\n      at node:internal/fs/streams:485:5\n      at node:internal/fs/streams:441:7\n      at FSReqCallback.wrapper [as oncomplete] (node:fs:828:5)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":39,"line":189},"start":{"column":28,"line":189}}},{"id":"146","mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived","testsCompleted":1,"location":{"end":{"column":58,"line":189},"start":{"column":51,"line":189}}},{"id":"147","mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout","location":{"end":{"column":63,"line":190},"start":{"column":13,"line":190}}},{"id":"148","mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout","location":{"end":{"column":63,"line":190},"start":{"column":13,"line":190}}},{"id":"149","mutatorName":"LogicalOperator","replacement":"--this._inFlightWrites <= 0 || !this._waitForDrain","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 1ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 0ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 1ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 1ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 0ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 1ms\n\n\r\n  1) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 0ms\n\n    test-update updater receives old value and sets new value: \r  ✔ test-update updater receives old value and sets new value: 1ms\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  35 passing (16ms)\n\n  2 pending\n\n  1 failing\n\n\n\n  1) test-load\n       should load after write to disk:\n     Error: done() called multiple times in test <test-load should load after write to disk> of file /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js\n      at Dirty.<anonymous> (test/test-system.js:84:9)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":63,"line":190},"start":{"column":13,"line":190}}},{"id":"150","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  ✔ dirty api (transient mode) constructor without new: 0ms\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 1ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  ✔ dirty api (persistent mode) constructor without new: 0ms\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r\n  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 0ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 0ms\n\n    dirty api (persistent mode) db file close close: \n\r  1) dirty api (persistent mode) db file close close\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 1ms\n\n    test-set-callback should trigger callback on set: \n\r  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 1ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 1ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 4ms\n\n\r\n  2) test-load should load after write to disk\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 8ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  34 passing (2s)\n\n  2 pending\n\n  2 failing\n\n\n\n  1) dirty api (persistent mode)\n       db file close\n         close:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-api.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n  2) test-load\n       should load after write to disk:\n     Error: done() called multiple times in test <test-load should load after write to disk> of file /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty/.stryker-tmp/sandbox7468854/test/test-system.js\n      at Dirty.<anonymous> (test/test-system.js:84:9)\n      at Dirty.emit (node:events:518:28)\n      at ReadStream.<anonymous> (lib/dirty/dirty.js:339:16)\n      at ReadStream.emit (node:events:518:28)\n      at endReadableNT (node:internal/streams/readable:1696:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":40,"line":190},"start":{"column":13,"line":190}}},{"id":"151","mutatorName":"EqualityOperator","replacement":"--this._inFlightWrites < 0","status":"Timeout","location":{"end":{"column":40,"line":190},"start":{"column":13,"line":190}}},{"id":"152","mutatorName":"EqualityOperator","replacement":"--this._inFlightWrites > 0","status":"Timeout","location":{"end":{"column":40,"line":190},"start":{"column":13,"line":190}}},{"id":"153","mutatorName":"UpdateOperator","replacement":"++this._inFlightWrites","status":"Timeout","location":{"end":{"column":35,"line":190},"start":{"column":13,"line":190}}},{"id":"154","mutatorName":"BooleanLiteral","replacement":"this._waitForDrain","status":"Timeout","location":{"end":{"column":63,"line":190},"start":{"column":44,"line":190}}},{"id":"155","mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout","location":{"end":{"column":82,"line":190},"start":{"column":75,"line":190}}},{"id":"156","mutatorName":"ConditionalExpression","replacement":"true","status":"Survived","testsCompleted":1,"location":{"end":{"column":29,"line":193},"start":{"column":11,"line":193}}},{"id":"157","mutatorName":"ConditionalExpression","replacement":"false","status":"Survived","testsCompleted":1,"location":{"end":{"column":29,"line":193},"start":{"column":11,"line":193}}},{"id":"158","mutatorName":"ObjectLiteral","replacement":"{}","statusReason":"\n> dirty@1.1.3 test\n> mocha test/test-*.js -R list\n\n\n\n\n    dirty api (transient mode) constructor without new: \n\r\n  1) dirty api (transient mode) constructor without new\n\n    dirty api (transient mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (transient mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (transient mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (transient mode) dirty constructor is a dirty: 0ms\n\n    dirty api (transient mode) events should fire load: \n\r\n  ✔ dirty api (transient mode) events should fire load: 0ms\n\n    dirty api (transient mode) events should fire drain after write: \n\r\n  ✔ dirty api (transient mode) events should fire drain after write: 0ms\n\n    dirty api (transient mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (transient mode) accessors .set should trigger callback: 0ms\n\n    dirty api (transient mode) accessors .get should return value: \n\r\n  ✔ dirty api (transient mode) accessors .get should return value: 0ms\n\n    dirty api (transient mode) accessors .path is valid: \n\r\n  ✔ dirty api (transient mode) accessors .path is valid: 0ms\n\n    dirty api (transient mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (transient mode) accessors .forEach runs for all: 0ms\n\n    dirty api (transient mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (transient mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (transient mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (transient mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (transient mode) accessors will reload file from disk: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) accessors will reload file from disk: 0ms\n\n    dirty api (transient mode) db file close close: \nN/A in transient mode\n\n\r\n  ✔ dirty api (transient mode) db file close close: 0ms\n\n    dirty api (persistent mode) constructor without new: \n\r\n  2) dirty api (persistent mode) constructor without new\n\n    dirty api (persistent mode) dirty constructor is an event emitter: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is an event emitter: 0ms\n\n    dirty api (persistent mode) dirty constructor is a dirty: \n\r\n  ✔ dirty api (persistent mode) dirty constructor is a dirty: 0ms\n\n    dirty api (persistent mode) events should fire load: \n\r\n  ✔ dirty api (persistent mode) events should fire load: 0ms\n\n    dirty api (persistent mode) events should fire drain after write: \n\r\n  ✔ dirty api (persistent mode) events should fire drain after write: 1ms\n\n    dirty api (persistent mode) accessors .set should trigger callback: \n\r\n  ✔ dirty api (persistent mode) accessors .set should trigger callback: 0ms\n\n    dirty api (persistent mode) accessors .get should return value: \n\r\n  ✔ dirty api (persistent mode) accessors .get should return value: 0ms\n\n    dirty api (persistent mode) accessors .path is valid: \n\r  ✔ dirty api (persistent mode) accessors .path is valid: 0ms\n\n    dirty api (persistent mode) accessors .forEach runs for all: \n\r\n  ✔ dirty api (persistent mode) accessors .forEach runs for all: 1ms\n\n    dirty api (persistent mode) accessors .rm removes key/value pair: \n\r\n  ✔ dirty api (persistent mode) accessors .rm removes key/value pair: 0ms\n\n    dirty api (persistent mode) accessors .rm of unknown key is a no-op: \n\r\n  ✔ dirty api (persistent mode) accessors .rm of unknown key is a no-op: 0ms\n\n    dirty api (persistent mode) accessors will reload file from disk: \n\r\n  ✔ dirty api (persistent mode) accessors will reload file from disk: 1ms\n\n    dirty api (persistent mode) db file close close: \n\r\n  ✔ dirty api (persistent mode) db file close close: 1ms\n\n    test-load-event should fire load event: \n\r\n  ✔ test-load-event should fire load event: 0ms\n\n    test-set-callback should trigger callback on set: \n\r\n  ✔ test-set-callback should trigger callback on set: 0ms\n\n    test-flush should fire drain event on write: \n\r\n  ✔ test-flush should fire drain event on write: 0ms\n\n    test-flush should write to disk appropriately: \n\r\n  ✔ test-flush should write to disk appropriately: 0ms\n\n    test-for-each should return each doc key and contents: \n\r\n  ✔ test-for-each should return each doc key and contents: 0ms\n\n    test-load should load after write to disk: \n\r\n  ✔ test-load should load after write to disk: 0ms\n\n    test-size should be equal to number of keys set: \n\r\n  ✔ test-size should be equal to number of keys set: 0ms\n\n    test-chaining-of-constructor should allow .on load to chain to constructor: \n\r\n  ✔ test-chaining-of-constructor should allow .on load to chain to constructor: 0ms\n\n    test-update updater receives old value and sets new value: \n\r\n  ✔ test-update updater receives old value and sets new value: 0ms\n\n  - test-types keys should prevent storage of an undefined key\n\n  - test-types keys should not return an undefined key\n\n\n\n  33 passing (15ms)\n\n  2 pending\n\n  2 failing\n\n\n\n  1) dirty api (transient mode)\n       constructor without new:\n     TypeError: Class constructor Dirty cannot be invoked without 'new'\n      at Context.<anonymous> (test/test-api.js:23:18)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) dirty api (persistent mode)\n       constructor without new:\n     TypeError: Class constructor Dirty cannot be invoked without 'new'\n      at Context.<anonymous> (test/test-api.js:23:18)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":99,"line":201},"start":{"column":45,"line":201}}},{"id":"159","mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout","location":{"end":{"column":98,"line":201},"start":{"column":53,"line":201}}}],"source":"'use strict';\n\nconst fs = require('fs');\nconst EventEmitter = require('events').EventEmitter;\n\nclass Dirty extends EventEmitter {\n  constructor(path) {\n    super();\n\n    this.path = path;\n\n    this._data = new Map();\n    this._queue = new Map(); // Maps key to a list of callbacks.\n    this._readStream = null;\n    this._writeStream = null;\n    this._waitForDrain = false;\n    this._inFlightWrites = 0;\n\n    this._load();\n  }\n\n  /**\n   * set() stores a JSON object in the database at key\n   * cb is fired when the data is persisted.\n   * In memory, this is immediate - on disk, it will take some time.\n   */\n  set(key, val, cb) {\n    if (val === undefined) {\n      this._data.delete(key);\n    } else {\n      this._data.set(key, val);\n    }\n    if (this.path) {\n      const cbs = this._queue.get(key) || [];\n      if (cb) cbs.push(cb);\n      this._queue.set(key, cbs);\n      this._flush();\n    } else {\n      setImmediate(() => { if (cb) cb(); this.emit('drain'); });\n    }\n  }\n\n  /**\n   * Get the value stored at a key in the database\n   * This is synchronous since a cache is maintained in-memory\n   */\n  get(key) {\n    return this._data.get(key);\n  }\n\n  /**\n   * Get total number of stored keys\n   */\n  size() {\n    return this._data.size;\n  }\n\n  /**\n   * Remove a key and the value stored there\n   */\n  rm(key, cb) {\n    this.set(key, undefined, cb);\n  }\n\n  /**\n   * Iterate over keys, applying match function\n   */\n  forEach(fn) {\n    for (const [key, val] of this._data) {\n      if (fn(key, val) === false) break;\n    }\n  }\n\n  /**\n   * Update the value stored at a key in the database.\n   * This is synchronous since a cache is maintained in-memory\n   * cb is passed as per Dirty.prototype.set\n   */\n  update(key, updater, cb) {\n    this.set(key, updater(this.get(key)), cb);\n  }\n\n  /**\n   * Close dirty db file streams\n   */\n  close() {\n    if (this._queue.size || this._inFlightWrites > 0) {\n      this.once('drain', () => this.close());\n      return;\n    }\n    if (this._readStream) this._readStream.destroy();\n    if (this._writeStream) this._writeStream.end(() => this._writeStream.destroy());\n  }\n\n  // Called when a dirty connection is instantiated\n  _load() {\n    let buffer = '';\n\n    if (!this.path) {\n      process.nextTick(() => {\n        this.emit('load', 0);\n      });\n      return;\n    }\n\n    this._readStream = fs.createReadStream(this.path, {\n      encoding: 'utf-8',\n      flags: 'r',\n    });\n\n    this._readStream\n        .on('error', (err) => {\n          if (err.code === 'ENOENT') {\n            this.emit('load', 0);\n            return;\n          }\n\n          this.emit('error', err);\n        })\n        .on('data', (chunk) => {\n          buffer += chunk;\n          if (chunk.lastIndexOf('\\n') === -1) return;\n          const arr = buffer.split('\\n');\n          buffer = arr.pop();\n          arr.forEach((rowStr) => {\n            if (!rowStr) {\n              this.emit('error', new Error('Empty lines never appear in a healthy database'));\n              return;\n            }\n\n            let row;\n            try {\n              row = JSON.parse(rowStr);\n              if (!('key' in row)) {\n                throw new Error();\n              }\n            } catch (e) {\n              this.emit('error', new Error(`Could not load corrupted row: ${rowStr}`));\n              return '';\n            }\n\n            if (row.val === undefined) {\n              this._data.delete(row.key);\n            } else {\n              this._data.set(row.key, row.val);\n            }\n            return '';\n          });\n        })\n        .on('end', () => {\n          if (buffer.length) {\n            this.emit('error', new Error(`Corrupted row at the end of the db: ${buffer}`));\n          }\n          this.emit('load', this._data.size);\n        })\n        .on('close', () => {\n          this._readStream = null;\n          this.emit('read_close');\n        });\n\n    this._writeStream = fs.createWriteStream(this.path, {\n      encoding: 'utf-8',\n      flags: 'a',\n    });\n\n    this._writeStream.on('drain', () => {\n      this._waitForDrain = false;\n      if (!this._queue.size) {\n        if (this._inFlightWrites <= 0) this.emit('drain');\n      } else {\n        this._flush();\n      }\n    });\n\n    this._writeStream.on('close', () => {\n      this._writeStream = null;\n      this.emit('write_close');\n    });\n  }\n\n  _flush() {\n    if (!this._queue.size || this._waitForDrain) return;\n    this._writeStream.cork();\n    for (const [key, cbs] of this._queue) {\n      this._queue.delete(key);\n      const data = `${JSON.stringify({key, val: this._data.get(key)})}\\n`;\n      ++this._inFlightWrites;\n      this._waitForDrain = !this._writeStream.write(data, (err) => {\n        if (!cbs.length && err != null) this.emit('error', err);\n        if (--this._inFlightWrites <= 0 && !this._waitForDrain) this.emit('drain');\n        for (const cb of cbs) cb(err);\n      });\n      if (this._waitForDrain) break;\n    }\n    this._writeStream.uncork();\n  }\n}\n\nDirty.Dirty = Dirty;\n// Trap `apply` for backwards compatibility with callers that don't use `new`.\nmodule.exports = exports = new Proxy(Dirty, {apply: (target, thisArg, args) => new Dirty(...args)});\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null},"testFiles":{"":{"tests":[{"id":"0","name":"All tests"}]}},"projectRoot":"/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-dirty","config":{"concurrency":1,"mutate":["lib/dirty/dirty.js","lib/dirty/index.js"],"reporters":["json","html","progress"],"allowConsoleColors":true,"checkers":[],"checkerNodeArgs":[],"commandRunner":{"command":"npm test"},"coverageAnalysis":"perTest","clearTextReporter":{"allowColor":true,"allowEmojis":false,"logTests":true,"maxTestsToLog":3,"reportTests":true,"reportMutants":true,"reportScoreTable":true},"dashboard":{"baseUrl":"https://dashboard.stryker-mutator.io/api/reports","reportType":"full"},"dryRunOnly":false,"eventReporter":{"baseDir":"reports/mutation/events"},"ignorePatterns":[],"ignoreStatic":false,"incremental":false,"incrementalFile":"reports/stryker-incremental.json","force":false,"fileLogLevel":"off","inPlace":false,"logLevel":"info","maxConcurrentTestRunners":9007199254740991,"maxTestRunnerReuse":0,"mutator":{"plugins":null,"excludedMutations":[]},"plugins":["@stryker-mutator/*"],"appendPlugins":[],"htmlReporter":{"fileName":"reports/mutation/mutation.html"},"jsonReporter":{"fileName":"reports/mutation/mutation.json"},"disableTypeChecks":true,"symlinkNodeModules":true,"tempDirName":".stryker-tmp","cleanTempDir":true,"testRunner":"command","testRunnerNodeArgs":[],"thresholds":{"high":80,"low":60,"break":null},"timeoutFactor":1.5,"timeoutMS":5000,"dryRunTimeoutMinutes":5,"tsconfigFile":"tsconfig.json","warnings":true,"disableBail":false,"allowEmpty":false,"ignorers":[],"cucumber":{},"jest":{"projectType":"custom","enableFindRelatedTests":true},"mochaOptions":{},"tap":{"testFiles":["{**/@(test|tests|__test__|__tests__)/**,**/*.@(test|tests|spec)}.@(cjs|mjs|js|jsx|ts|tsx|mts|cts)"],"nodeArgs":["-r","{{hookFile}}","{{testFile}}"],"forceBail":true},"vitest":{}},"framework":{"name":"StrykerJS","version":"8.2.5","branding":{"homepageUrl":"https://stryker-mutator.io","imageUrl":"data:image/svg+xml;utf8,%3Csvg viewBox='0 0 1458 1458' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-linejoin='round' stroke-miterlimit='2'%3E%3Cpath fill='none' d='M0 0h1458v1458H0z'/%3E%3CclipPath id='a'%3E%3Cpath d='M0 0h1458v1458H0z'/%3E%3C/clipPath%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M1458 729c0 402.655-326.345 729-729 729S0 1131.655 0 729C0 326.445 326.345 0 729 0s729 326.345 729 729' fill='%23e74c3c' fill-rule='nonzero'/%3E%3Cpath d='M778.349 1456.15L576.6 1254.401l233-105 85-78.668v-64.332l-257-257-44-187-50-208 251.806-82.793L1076.6 389.401l380.14 379.15c-19.681 367.728-311.914 663.049-678.391 687.599z' fill-opacity='.3'/%3E%3Cpath d='M753.4 329.503c41.79 0 74.579 7.83 97.925 25.444 23.571 18.015 41.69 43.956 55.167 77.097l11.662 28.679 165.733-58.183-14.137-32.13c-26.688-60.655-64.896-108.61-114.191-144.011-49.329-35.423-117.458-54.302-204.859-54.302-50.78 0-95.646 7.376-134.767 21.542-40.093 14.671-74.09 34.79-102.239 60.259-28.84 26.207-50.646 57.06-65.496 92.701-14.718 35.052-22.101 72.538-22.101 112.401 0 72.536 20.667 133.294 61.165 182.704 38.624 47.255 98.346 88.037 179.861 121.291 42.257 17.475 78.715 33.125 109.227 46.994 27.193 12.361 49.294 26.124 66.157 41.751 15.309 14.186 26.497 30.584 33.63 49.258 7.721 20.214 11.16 45.69 11.16 76.402 0 28.021-4.251 51.787-13.591 71.219-8.832 18.374-20.171 33.178-34.523 44.219-14.787 11.374-31.193 19.591-49.393 24.466-19.68 5.359-39.14 7.993-58.69 7.993-29.359 0-54.387-3.407-75.182-10.747-20.112-7.013-37.144-16.144-51.259-27.486-13.618-11.009-24.971-23.766-33.744-38.279-9.64-15.8-17.272-31.924-23.032-48.408l-10.965-31.376-161.669 60.585 10.734 30.124c10.191 28.601 24.197 56.228 42.059 82.748 18.208 27.144 41.322 51.369 69.525 72.745 27.695 21.075 60.904 38.218 99.481 51.041 37.777 12.664 82.004 19.159 132.552 19.159 49.998 0 95.818-8.321 137.611-24.622 42.228-16.471 78.436-38.992 108.835-67.291 30.719-28.597 54.631-62.103 71.834-100.642 17.263-38.56 25.923-79.392 25.923-122.248 0-54.339-8.368-100.37-24.208-138.32-16.29-38.759-38.252-71.661-65.948-98.797-26.965-26.418-58.269-48.835-93.858-67.175-33.655-17.241-69.196-33.11-106.593-47.533-35.934-13.429-65.822-26.601-89.948-39.525-22.153-11.868-40.009-24.21-53.547-37.309-11.429-11.13-19.83-23.678-24.718-37.664-5.413-15.49-7.98-33.423-7.98-53.577 0-40.883 11.293-71.522 37.086-90.539 28.443-20.825 64.985-30.658 109.311-30.658z' fill='%23f1c40f' fill-rule='nonzero'/%3E%3Cpath d='M720 0h18v113h-18zM1458 738v-18h-113v18h113zM720 1345h18v113h-18zM113 738v-18H0v18h113z'/%3E%3C/g%3E%3C/svg%3E"},"dependencies":{"@stryker-mutator/mocha-runner":"8.2.5","@stryker-mutator/karma-runner":"8.2.5","@stryker-mutator/jasmine-runner":"8.2.5","@stryker-mutator/jest-runner":"8.2.5","mocha":"9.2.2","jasmine-core":"5.1.2","typescript":"4.9.5"}}}