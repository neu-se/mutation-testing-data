*** using precomputed mutations ***
[32m13:41:38 (2511) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m13:41:38 (2511) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m13:41:38 (2511) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/node-geo-point/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m13:41:39 (2511) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m13:41:39 (2511) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m13:41:39 (2511) INFO ProjectReader[39m Found 2 of 588 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 262 mutants from MUTATION_TESTING/template-full_mixtral-8x7b-instruct_0.0/mutants.json ***
Mutant 0 in geo-point.ts: typeof latitude !== 'number' || typeof longitude !== 'number' replaced with latitude instanceof Number || longitude instanceof Number
Mutant 1 in geo-point.ts: typeof latitude !== 'number' || typeof longitude !== 'number' replaced with isNaN(latitude) || isNaN(longitude)
Mutant 2 in geo-point.ts: latitude < -90 || latitude > 90 replaced with latitude === -90 || latitude === 90
Mutant 3 in geo-point.ts: longitude < -180 || longitude > 180 replaced with longitude === -180 || longitude === 180
Mutant 4 in geo-point.ts: longitude < -180 || longitude > 180 replaced with longitude < -180 || longitude >= 180
Mutant 5 in geo-point.ts: longitude < -180 || longitude > 180 replaced with Math.abs(longitude) > 180
Mutant 6 in geo-point.ts: !isObject(point) replaced with typeof point !== 'object'
Mutant 7 in geo-point.ts: !isObject(point) replaced with point === null
Mutant 8 in geo-point.ts: !isObject(point) replaced with point.constructor.name !== 'Object'
Mutant 9 in geo-point.ts: isObject replaced with Array.isArray
Mutant 10 in geo-point.ts: point replaced with Object(point)
Mutant 11 in geo-point.ts: point replaced with {
  ...point
}
Mutant 12 in geo-point.ts: point replaced with JSON.parse(JSON.stringify(point))
Mutant 13 in geo-point.ts: !point.hasOwnProperty('type') || !point.hasOwnProperty('coordinates') replaced with 'type' in point && 'coordinates' in point
Mutant 14 in geo-point.ts: !point.hasOwnProperty('type') || !point.hasOwnProperty('coordinates') replaced with point.type !== undefined && point.coordinates !== undefined
Mutant 15 in geo-point.ts: 'coordinates' replaced with 'coordinates2'
Mutant 16 in geo-point.ts: point.type !== 'Point' replaced with point['type'] !== 'Point'
Mutant 17 in geo-point.ts: point.type !== 'Point' replaced with Object.prototype.hasOwnProperty.call(point, 'type') && point['type'] !== 'Point'
Mutant 18 in geo-point.ts: point.type !== 'Point' replaced with point.constructor.name !== 'Point'
Mutant 19 in geo-point.ts: !Array.isArray(point.coordinates) || point.coordinates.length !== 2 replaced with point.coordinates.length !== 2
Mutant 20 in geo-point.ts: !Array.isArray(point.coordinates) || point.coordinates.length !== 2 replaced with Array.isArray(point.coordinates) && point.coordinates.length !== 2
Mutant 21 in geo-point.ts: Array.isArray replaced with point.coordinates.length === 1
Mutant 22 in geo-point.ts: point.coordinates replaced with point['cooordinates']
Mutant 23 in geo-point.ts: this.fromLngLatArray replaced with []
Mutant 24 in geo-point.ts: this.fromLngLatArray replaced with {
  type: 'Feature',
  properties: {},
  geometry: {
    type: 'Point',
    coordinates: point.coordinates
  }
}
Mutant 25 in geo-point.ts: !isObject(object) replaced with typeof object !== 'object'
Mutant 26 in geo-point.ts: !isObject(object) replaced with Object.prototype.toString.call(object) !== '[object Object]'
Mutant 27 in geo-point.ts: !isObject(object) replaced with !Array.isArray(object) && object !== null
Mutant 28 in geo-point.ts: isObject replaced with input => typeof input === 'object'
Mutant 29 in geo-point.ts: object replaced with []
Mutant 30 in geo-point.ts: !object.hasOwnProperty('latitude') || !object.hasOwnProperty('longitude') replaced with 'latitude' in object && 'longitude' in object
Mutant 31 in geo-point.ts: !object.hasOwnProperty('latitude') || !object.hasOwnProperty('longitude') replaced with Object.keys(object).length !== 2
Mutant 32 in geo-point.ts: !object.hasOwnProperty('latitude') || !object.hasOwnProperty('longitude') replaced with Object.prototype.hasOwnProperty.call(object, 'latitude') && Object.prototype.hasOwnProperty.call(object, 'longitude')
Mutant 33 in geo-point.ts: 'latitude' replaced with Math.random()
Mutant 34 in geo-point.ts: 'longitude' replaced with 'x'
Mutant 35 in geo-point.ts: 'longitude' replaced with Math.random()
Mutant 36 in geo-point.ts: 'longitude' replaced with coordinate.latitude
Mutant 37 in geo-point.ts: deg2rad replaced with 0
Mutant 38 in geo-point.ts: point1.latitude replaced with 0
Mutant 39 in geo-point.ts: point1.latitude replaced with 1 / point1.latitude
Mutant 40 in geo-point.ts: point1.latitude replaced with Math.random()
Mutant 41 in geo-point.ts: deg2rad replaced with 1 * point2.latitude
Mutant 42 in geo-point.ts: point2.latitude replaced with point2.longitude
Mutant 43 in geo-point.ts: point2.latitude replaced with Math.random()
Mutant 44 in geo-point.ts: deg2rad replaced with 1 * point2.longitude
Mutant 45 in geo-point.ts: point2.longitude replaced with 0
Mutant 46 in geo-point.ts: point2.longitude replaced with Math.random()
Mutant 47 in geo-point.ts: point2.longitude replaced with this.longitude
Mutant 48 in geo-point.ts: point1.longitude replaced with 0
Mutant 49 in geo-point.ts: point1.longitude replaced with this.longitude
Mutant 50 in geo-point.ts: point1.longitude replaced with Math.random()
Mutant 51 in geo-point.ts: point1Rad replaced with 1
Mutant 52 in geo-point.ts: point1Rad replaced with Math.cos(point1.latitude)
Mutant 53 in geo-point.ts: point1Rad replaced with Math.cos(0)
Mutant 54 in geo-point.ts: point2Rad replaced with 1
Mutant 55 in geo-point.ts: a replaced with Math.cos(point1Rad) * Math.cos(point2Rad) * Math.random()
Mutant 56 in geo-point.ts: a replaced with Math.cos(point2Rad) * Math.cos(point1Rad) * Math.sin(point1Rad) * Math.sin(point2Rad)
Mutant 57 in geo-point.ts: a replaced with Math.sin(point1Rad + point2Rad)
Mutant 58 in geo-point.ts: sin replaced with Math.sin
Mutant 59 in geo-point.ts: sin replaced with 1 / Math.sin
Mutant 60 in geo-point.ts: point1Rad replaced with 1
Mutant 61 in geo-point.ts: point1Rad replaced with Math.sin(Math.PI / 2)
Mutant 62 in geo-point.ts: point1Rad replaced with Math.sin(point2Rad)
Mutant 63 in geo-point.ts: sin replaced with Math.sin
Mutant 64 in geo-point.ts: sin replaced with 1 / Math.sin
Mutant 65 in geo-point.ts: point2Rad replaced with Math.sin(point2.latitude)
Mutant 66 in geo-point.ts: point2Rad replaced with 0
Mutant 67 in geo-point.ts: r > 1 ? 1 : r replaced with 0
Mutant 68 in geo-point.ts: r > 1 ? 1 : r replaced with r + 1
Mutant 69 in geo-point.ts: r > 1 ? 1 : r replaced with Math.abs(r)
Mutant 70 in geo-point.ts: deg2rad replaced with 1
Mutant 71 in geo-point.ts: deg2rad replaced with Math.PI / 2
Mutant 72 in geo-point.ts: point1.latitude replaced with 0
Mutant 73 in geo-point.ts: point1.latitude replaced with this.latitude
Mutant 74 in geo-point.ts: point1.latitude replaced with Math.random()
Mutant 75 in geo-point.ts: point2.latitude replaced with Math.abs(point2.latitude)
Mutant 76 in geo-point.ts: point2.latitude replaced with point2['latitude']
Mutant 77 in geo-point.ts: point2.longitude - point1.longitude replaced with point2['longitude'] - point1['longitude']
Mutant 78 in geo-point.ts: sin replaced with Math.sin
Mutant 79 in geo-point.ts: Î”Î» replaced with Math.sin(Î¸) * Math.cos(Ï†2)
Mutant 80 in geo-point.ts: Î”Î» replaced with Math.sin(Î¸) * Math.cos(Î´) * Math.cos(Ï†1)
Mutant 81 in geo-point.ts: Î”Î» replaced with Math.sin(Î¸) * Math.cos(Ï†1) * Math.cos(Ï†2)
Mutant 82 in geo-point.ts: cos replaced with Math.cos
Mutant 83 in geo-point.ts: cos replaced with 1 / Math.cos
Mutant 84 in geo-point.ts: cos replaced with Math.sin
Mutant 85 in geo-point.ts: Ï†2 replaced with cos(Ï†1) * sin(Ï†2)
Mutant 86 in geo-point.ts: cos replaced with Math.cos
Mutant 87 in geo-point.ts: cos replaced with 0
Mutant 88 in geo-point.ts: cos replaced with Math.sin
Mutant 89 in geo-point.ts: Ï†1 replaced with 0
Mutant 90 in geo-point.ts: Ï†1 replaced with this.latitude
Mutant 91 in geo-point.ts: Ï†1 replaced with Math.random()
Mutant 92 in geo-point.ts: sin replaced with Math.sin
Mutant 93 in geo-point.ts: Ï†2 replaced with Math.sin(Ï†1) * Math.sin(Ï†2) + Math.cos(Ï†1) * Math.cos(Ï†2) * Math.cos(Î”Î»)
Mutant 94 in geo-point.ts: Ï†2 replaced with Math.sin(Ï†1) * Math.sin(Ï†2) + 0 * Math.cos(Ï†1) * Math.cos(Ï†2) * Math.cos(Î”Î»)
Mutant 95 in geo-point.ts: Ï†2 replaced with Math.sin(Ï†1) * Math.sin(Ï†2) + Math.cos(Ï†1 + Ï†2) * Math.cos(Î”Î»)
Mutant 96 in geo-point.ts: sin replaced with Math.sin
Mutant 97 in geo-point.ts: sin replaced with 1
Mutant 98 in geo-point.ts: Ï†1 replaced with 0
Mutant 99 in geo-point.ts: Ï†1 replaced with this.latitude
Mutant 100 in geo-point.ts: Ï†1 replaced with Math.random()
Mutant 101 in geo-point.ts: cos replaced with Math.cos
Mutant 102 in geo-point.ts: cos replaced with 1 / Math.cos
Mutant 103 in geo-point.ts: cos replaced with Math.sin
Mutant 104 in geo-point.ts: Ï†2 replaced with Math.sin(Ï†1)
Mutant 105 in geo-point.ts: Ï†2 replaced with 0
Mutant 106 in geo-point.ts: Ï†2 replaced with Math.cos(Ï†2)
Mutant 107 in geo-point.ts: cos replaced with Math.cos
Mutant 108 in geo-point.ts: cos replaced with 1 / Math.cos
Mutant 109 in geo-point.ts: cos replaced with Math.acos
Mutant 110 in geo-point.ts: Î”Î» replaced with Math.PI / 2
Mutant 111 in geo-point.ts: Î”Î» replaced with 0
Mutant 112 in geo-point.ts: Î”Î» replaced with Î»1
Mutant 113 in geo-point.ts: atan2(y, x) replaced with atan2(-y, x)
Mutant 114 in geo-point.ts: atan2 replaced with Math.atan
Mutant 115 in geo-point.ts: y replaced with 1
Mutant 116 in geo-point.ts: y replaced with Math.sin(Î¸) * Math.sin(Î´) * Math.cos(Ï†1)
Mutant 117 in geo-point.ts: y replaced with Math.sin(Î¸) * Math.sin(Î´) * Math.cos(Ï†1) * Math.random()
Mutant 118 in geo-point.ts: x replaced with 1
Mutant 119 in geo-point.ts: x replaced with -x
Mutant 120 in geo-point.ts: x replaced with 0
Mutant 121 in geo-point.ts: rad2deg replaced with 180 / Math.PI * Î¸
Mutant 122 in geo-point.ts: Î¸ replaced with Math.atan(y / x)
Mutant 123 in geo-point.ts: Î¸ replaced with Math.atan2(Math.abs(y), Math.abs(x))
Mutant 124 in geo-point.ts: Î¸ replaced with Math.atan2(y, x) * 180 / Math.PI
Mutant 125 in geo-point.ts: Number replaced with 1 / radius
Mutant 126 in geo-point.ts: Number replaced with radius === 0 ? Infinity : distance / radius
Mutant 127 in geo-point.ts: distance replaced with Math.random() * radius
Mutant 128 in geo-point.ts: distance replaced with distance * 2
Mutant 129 in geo-point.ts: distance replaced with distance / radius
Mutant 130 in geo-point.ts: deg2rad replaced with 1 * deg2rad
Mutant 131 in geo-point.ts: Number(bearing) replaced with 1 * bearing
Mutant 132 in geo-point.ts: Number(bearing) replaced with parseFloat(bearing)
Mutant 133 in geo-point.ts: Number(bearing) replaced with Math.floor(bearing)
Mutant 134 in geo-point.ts: Number replaced with this.longitude
Mutant 135 in geo-point.ts: bearing replaced with Math.random() * 360
Mutant 136 in geo-point.ts: bearing replaced with this.latitude
Mutant 137 in geo-point.ts: deg2rad replaced with 1 / this.latitude
Mutant 138 in geo-point.ts: coordinate.latitude replaced with 0
Mutant 139 in geo-point.ts: coordinate.latitude replaced with Math.random()
Mutant 140 in geo-point.ts: coordinate.latitude replaced with this.longitude
Mutant 141 in geo-point.ts: deg2rad replaced with 1 * coordinate.longitude
Mutant 142 in geo-point.ts: deg2rad replaced with Math.PI / coordinate.longitude
Mutant 143 in geo-point.ts: coordinate.longitude replaced with 0
Mutant 144 in geo-point.ts: coordinate.longitude replaced with Math.random()
Mutant 145 in geo-point.ts: coordinate.longitude replaced with coordinate.latitude
Mutant 146 in geo-point.ts: Ï†1 replaced with Math.sin(coordinate.latitude)
Mutant 147 in geo-point.ts: Ï†1 replaced with Math.sin(Math.PI / 2 - coordinate.latitude)
Mutant 148 in geo-point.ts: cos replaced with Math.cos
Mutant 149 in geo-point.ts: cos replaced with Math.acos
Mutant 150 in geo-point.ts: cos replaced with 1 / Math.cos
Mutant 151 in geo-point.ts: Ï†1 replaced with Math.cos(this.latitude)
Mutant 152 in geo-point.ts: Ï†1 replaced with 1
Mutant 153 in geo-point.ts: sin replaced with Math.sin
Mutant 154 in geo-point.ts: sin replaced with 0.5 * Math.sin
Mutant 155 in geo-point.ts: Î´ replaced with Math.sin(distance / radius)
Mutant 156 in geo-point.ts: Î´ replaced with distance / radius * Math.PI / 180
Mutant 157 in geo-point.ts: Î´ replaced with Math.sin(distance) / Math.sin(radius)
Mutant 158 in geo-point.ts: cos replaced with Math.cos
Mutant 159 in geo-point.ts: cos replaced with Math.acos
Mutant 160 in geo-point.ts: Î´ replaced with Math.cos(distance)
Mutant 161 in geo-point.ts: Î´ replaced with 1 / distance
Mutant 162 in geo-point.ts: Î´ replaced with Math.exp(-distance)
Mutant 163 in geo-point.ts: Î¸ replaced with Math.sin(Î¸ + Math.PI)
Mutant 164 in geo-point.ts: cos replaced with Math.cos
Mutant 165 in geo-point.ts: cos replaced with Math.sin
Mutant 166 in geo-point.ts: cos replaced with 'constantString'
Mutant 167 in geo-point.ts: Î¸ replaced with 1
Mutant 168 in geo-point.ts: Î¸ replaced with Math.random()
Mutant 169 in geo-point.ts: Î¸ replaced with this.longitude
Mutant 170 in geo-point.ts: asin replaced with Math.asin
Mutant 171 in geo-point.ts: asin replaced with Math.acos
Mutant 172 in geo-point.ts: asin replaced with Math.atan2
Mutant 173 in geo-point.ts: sinÏ†2 replaced with Math.sin(Ï†2)
Mutant 174 in geo-point.ts: sinÏ†2 replaced with -sinÏ†2
Mutant 175 in geo-point.ts: sinÏ†2 replaced with isNaN(Ï†2) ? 0 : sinÏ†2
Mutant 176 in geo-point.ts: atan2(y, x) replaced with atan2(-y, x)
Mutant 177 in geo-point.ts: atan2(y, x) replaced with atan2(y, 1 / x)
Mutant 178 in geo-point.ts: atan2 replaced with Math.atan
Mutant 179 in geo-point.ts: y replaced with 1 / Math.cos(Ï†1) * Math.sin(Î´) * Math.cos(Î¸)
Mutant 180 in geo-point.ts: y replaced with Math.sin(Î´) * Math.cos(Î¸) * Math.pow(Math.E, Ï†1)
Mutant 181 in geo-point.ts: y replaced with Math.sin(Î´) * Math.cos(Î¸) / Math.cos(Ï†1)
Mutant 182 in geo-point.ts: x replaced with 1
Mutant 183 in geo-point.ts: rad2deg replaced with 180 / Math.PI
Mutant 184 in geo-point.ts: Ï†2 replaced with Math.sin(Ï†2)
Mutant 185 in geo-point.ts: Ï†2 replaced with 1
Mutant 186 in geo-point.ts: Ï†2 replaced with point1.latitude
Mutant 187 in geo-point.ts: rad2deg replaced with 180 / Math.PI
Mutant 188 in geo-point.ts: Î»2 replaced with 0
Mutant 189 in geo-point.ts: Î»2 replaced with Math.random()
Mutant 190 in geo-point.ts: Î»2 replaced with this.longitude
Mutant 191 in geo-point.ts: Math.floor replaced with Math.round
Mutant 192 in geo-point.ts: Math.floor replaced with parseInt
Mutant 193 in geo-point.ts: Math.floor replaced with Math.trunc
Mutant 194 in geo-point.ts: (coordinate.longitude + 180) / 360 * Math.pow(2, zoom) replaced with (coordinate.longitude + 180) / 180 * Math.pow(2, zoom)
Mutant 195 in geo-point.ts: (coordinate.longitude + 180) / 360 * Math.pow(2, zoom) replaced with (coordinate.latitude + 180) / 360 * Math.pow(2, zoom)
Mutant 196 in geo-point.ts: (coordinate.longitude + 180) / 360 * Math.pow(2, zoom) replaced with (coordinate.longitude + 180) * Math.pow(2, zoom - 1)
Mutant 197 in geo-point.ts: Math.pow(2, zoom) replaced with Math.pow(Math.pow(2, zoom + 1))
Mutant 198 in geo-point.ts: Math.pow(2, zoom) replaced with Math.pow(Math.pow(2, zoom) * 2)
Mutant 199 in geo-point.ts: Math.pow(2, zoom) replaced with Math.pow(Math.pow(2, zoom) / 2)
failed to parse replacement 1 / Math.cos(coordinate.latitude * Math.PI / 180): SyntaxError: Invalid regular expression: // Math.cos(coordinate.latitude * Math.PI //: Unterminated group
Mutant 200 in geo-point.ts: 2 replaced with 1.6
Mutant 201 in geo-point.ts: 2 replaced with Math.E
Mutant 202 in geo-point.ts: Math.log replaced with 1 / Math.cos
Mutant 203 in geo-point.ts: Math.log replaced with Math.log10
Mutant 204 in geo-point.ts: Math.log replaced with Math.asin
failed to parse replacement Math.tan(coordinate.longitude * Math.PI / 180) + 1 / Math.cos(coordinate.longitude * Math.PI / 180): SyntaxError: Invalid regular expression: // 180) + 1 //: Unmatched ')'
failed to parse replacement Math.tan(coordinate.latitude * Math.PI / 180) + 1 / Math.sin(coordinate.latitude * Math.PI / 180): SyntaxError: Invalid regular expression: // 180) + 1 //: Unmatched ')'
Mutant 205 in geo-point.ts: coordinate.latitude * Math.PI / 180 replaced with Math.atan(coordinate.latitude) * 180 / Math.PI
Mutant 206 in geo-point.ts: coordinate.latitude * Math.PI / 180 replaced with coordinate.latitude * Math.PI / 360
Mutant 207 in geo-point.ts: Math.cos replaced with Math.exp
Mutant 208 in geo-point.ts: Math.cos replaced with Math.random
Mutant 209 in geo-point.ts: coordinate.latitude * Math.PI / 180 replaced with 1 / (coordinate.latitude * Math.PI)
Mutant 210 in geo-point.ts: coordinate.latitude * Math.PI / 180 replaced with coordinate.latitude * Math.PI / 180.001
Mutant 211 in geo-point.ts: coordinate.latitude * Math.PI / 180 replaced with Math.atan(coordinate.latitude) * 180 / Math.PI
failed to parse replacement GeoPoint.calculateDestination([null as any, distance, bearing]): SyntaxError: Unexpected token, expected "," (1:36)
Mutant 212 in geo-point.ts: GeoPoint.calculateDestination(this, distance, bearing) replaced with GeoPoint.calculateDestination([this, 0, 0])
Mutant 213 in geo-point.ts: GeoPoint.calculateDestination(this, distance, bearing) replaced with GeoPoint.calculateDestination([this, 'wrongDistance', 'wrongBearing'])
Mutant 214 in geo-point.ts: GeoPoint.calculateDestination replaced with GeoPoint.fromLatLngArray
Mutant 215 in geo-point.ts: this replaced with {
  latitude: 0,
  longitude: 0
}
Mutant 216 in geo-point.ts: this replaced with {
  latitude: 1,
  longitude: 1
}
Mutant 217 in geo-point.ts: this replaced with new GeoPoint(0, 0)
Mutant 218 in geo-point.ts: distance replaced with 0
Mutant 219 in geo-point.ts: distance replaced with Math.random()
Mutant 220 in geo-point.ts: bearing replaced with Math.random() * 360
Mutant 221 in geo-point.ts: bearing replaced with 180
Mutant 222 in geo-point.ts: GeoPoint.calculateBearing(this, point) replaced with GeoPoint.calculateBearing(null)
Mutant 223 in geo-point.ts: GeoPoint.calculateBearing(this, point) replaced with GeoPoint.calculateBearing({
  latitude: 0,
  longitude: 0
})
Mutant 224 in geo-point.ts: this replaced with new GeoPoint(0, 0)
Mutant 225 in geo-point.ts: this replaced with null
Mutant 226 in geo-point.ts: this replaced with {
  latitude: 0,
  longitude: 0
}
Mutant 227 in geo-point.ts: point replaced with this
Mutant 228 in geo-point.ts: point replaced with new GeoPoint(0, 0)
Mutant 229 in geo-point.ts: this replaced with 0
Mutant 230 in geo-point.ts: this replaced with new GeoPoint(0, 0)
Mutant 231 in geo-point.ts: this replaced with Math.random()
Mutant 232 in geo-point.ts: point replaced with new GeoPoint(0, 0)
Mutant 233 in geo-point.ts: GeoPoint.toTile(this, zoom) replaced with GeoPoint.toTile([this, zoom])
Mutant 234 in geo-point.ts: GeoPoint.toTile(this, zoom) replaced with GeoPoint.toTile(this.zoom)
Mutant 235 in geo-point.ts: GeoPoint.toTile(this, zoom) replaced with GeoPoint.toTile(Math.pow(2, Math.random() * 10))
Mutant 236 in geo-point.ts: GeoPoint.toTile replaced with Math.floor
Mutant 237 in geo-point.ts: zoom replaced with Math.floor(Math.random() * 10)
Mutant 238 in geo-point.ts: zoom replaced with zoom + 1
Mutant 239 in geo-point.ts: parseFloat replaced with Math.round
Mutant 240 in geo-point.ts: parseFloat replaced with input => input * 1
Mutant 241 in geo-point.ts: input.toFixed(precision) replaced with Math.round(input * Math.pow(10, precision)) / Math.pow(10, precision)
Mutant 242 in geo-point.ts: input.toFixed(precision) replaced with Math.round(input) / Math.pow(10, precision)
Mutant 243 in geo-point.ts: input.toFixed(precision) replaced with input.toPrecision(precision)
Mutant 244 in geo-point.ts: input.toFixed replaced with input.toString
Mutant 245 in geo-point.ts: input.toFixed replaced with Math.floor
Mutant 246 in geo-point.ts: precision replaced with 1 / precision
Mutant 247 in geo-point.ts: precision replaced with precision * 10
Mutant 248 in geo-point.ts: precision replaced with Math.floor(precision)
Mutant 249 in geo-point.ts: adjust replaced with 1 / this.latitude
Mutant 250 in geo-point.ts: adjust replaced with this.longitude * precision
Mutant 251 in geo-point.ts: this.latitude replaced with 0
Mutant 252 in geo-point.ts: this.latitude replaced with 1 / this.latitude
Mutant 253 in geo-point.ts: adjust replaced with this.longitude * precision
Mutant 254 in geo-point.ts: adjust replaced with this.altitude || 0
Mutant 255 in geo-point.ts: this.longitude replaced with this.longitude - 1
Mutant 256 in geo-point.ts: this.longitude replaced with Math.random()
Mutant 257 in geo-point.ts: this.longitude replaced with 'not a number'
[32m13:41:39 (2511) INFO Instrumenter[39m Instrumented 2 source file(s) with 258 mutant(s)
[32m13:41:39 (2511) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m13:41:40 (2511) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m13:41:40 (2511) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m13:41:45 (2511) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 4 seconds (net 4150 ms, overhead 1 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~14m) 3/258 tested (3 survived, 0 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~14m) 6/258 tested (6 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~13m) 9/258 tested (9 survived, 0 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~13m) 12/258 tested (11 survived, 0 timed out)
Mutation testing 5% (elapsed: <1m, remaining: ~13m) 15/258 tested (12 survived, 0 timed out)
Mutation testing 6% (elapsed: ~1m, remaining: ~13m) 18/258 tested (14 survived, 0 timed out)
Mutation testing 8% (elapsed: ~1m, remaining: ~13m) 21/258 tested (16 survived, 0 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~13m) 24/258 tested (16 survived, 0 timed out)
Mutation testing 10% (elapsed: ~1m, remaining: ~12m) 27/258 tested (18 survived, 0 timed out)
Mutation testing 11% (elapsed: ~1m, remaining: ~12m) 30/258 tested (20 survived, 0 timed out)
Mutation testing 12% (elapsed: ~1m, remaining: ~12m) 33/258 tested (21 survived, 0 timed out)
Mutation testing 14% (elapsed: ~2m, remaining: ~11m) 37/258 tested (21 survived, 0 timed out)
Mutation testing 15% (elapsed: ~2m, remaining: ~11m) 40/258 tested (21 survived, 0 timed out)
Mutation testing 16% (elapsed: ~2m, remaining: ~11m) 43/258 tested (21 survived, 0 timed out)
Mutation testing 17% (elapsed: ~2m, remaining: ~11m) 46/258 tested (21 survived, 0 timed out)
Mutation testing 18% (elapsed: ~2m, remaining: ~11m) 49/258 tested (21 survived, 0 timed out)
Mutation testing 20% (elapsed: ~2m, remaining: ~11m) 52/258 tested (21 survived, 0 timed out)
Mutation testing 21% (elapsed: ~3m, remaining: ~11m) 55/258 tested (21 survived, 0 timed out)
Mutation testing 22% (elapsed: ~3m, remaining: ~10m) 58/258 tested (21 survived, 0 timed out)
Mutation testing 23% (elapsed: ~3m, remaining: ~10m) 61/258 tested (22 survived, 0 timed out)
Mutation testing 24% (elapsed: ~3m, remaining: ~10m) 64/258 tested (23 survived, 0 timed out)
Mutation testing 26% (elapsed: ~3m, remaining: ~10m) 68/258 tested (23 survived, 0 timed out)
Mutation testing 27% (elapsed: ~3m, remaining: ~10m) 71/258 tested (24 survived, 0 timed out)
Mutation testing 28% (elapsed: ~4m, remaining: ~9m) 74/258 tested (24 survived, 0 timed out)
Mutation testing 29% (elapsed: ~4m, remaining: ~9m) 77/258 tested (25 survived, 0 timed out)
Mutation testing 31% (elapsed: ~4m, remaining: ~9m) 80/258 tested (27 survived, 0 timed out)
Mutation testing 32% (elapsed: ~4m, remaining: ~9m) 83/258 tested (28 survived, 0 timed out)
Mutation testing 33% (elapsed: ~4m, remaining: ~9m) 86/258 tested (28 survived, 0 timed out)
Mutation testing 34% (elapsed: ~4m, remaining: ~9m) 89/258 tested (29 survived, 0 timed out)
Mutation testing 35% (elapsed: ~5m, remaining: ~9m) 92/258 tested (29 survived, 0 timed out)
Mutation testing 36% (elapsed: ~5m, remaining: ~8m) 95/258 tested (30 survived, 0 timed out)
Mutation testing 38% (elapsed: ~5m, remaining: ~8m) 99/258 tested (31 survived, 0 timed out)
Mutation testing 39% (elapsed: ~5m, remaining: ~8m) 102/258 tested (32 survived, 0 timed out)
Mutation testing 40% (elapsed: ~5m, remaining: ~8m) 105/258 tested (32 survived, 0 timed out)
Mutation testing 41% (elapsed: ~5m, remaining: ~8m) 108/258 tested (33 survived, 0 timed out)
Mutation testing 43% (elapsed: ~6m, remaining: ~7m) 111/258 tested (33 survived, 0 timed out)
Mutation testing 44% (elapsed: ~6m, remaining: ~7m) 114/258 tested (33 survived, 0 timed out)
Mutation testing 45% (elapsed: ~6m, remaining: ~7m) 117/258 tested (33 survived, 0 timed out)
Mutation testing 46% (elapsed: ~6m, remaining: ~7m) 120/258 tested (33 survived, 0 timed out)
Mutation testing 47% (elapsed: ~6m, remaining: ~7m) 123/258 tested (34 survived, 0 timed out)
Mutation testing 48% (elapsed: ~6m, remaining: ~7m) 126/258 tested (34 survived, 0 timed out)
Mutation testing 50% (elapsed: ~7m, remaining: ~7m) 129/258 tested (35 survived, 0 timed out)
Mutation testing 51% (elapsed: ~7m, remaining: ~6m) 133/258 tested (38 survived, 0 timed out)
Mutation testing 52% (elapsed: ~7m, remaining: ~6m) 136/258 tested (39 survived, 0 timed out)
Mutation testing 53% (elapsed: ~7m, remaining: ~6m) 139/258 tested (39 survived, 0 timed out)
Mutation testing 55% (elapsed: ~7m, remaining: ~6m) 142/258 tested (39 survived, 0 timed out)
Mutation testing 56% (elapsed: ~7m, remaining: ~6m) 145/258 tested (40 survived, 0 timed out)
Mutation testing 57% (elapsed: ~8m, remaining: ~5m) 148/258 tested (40 survived, 0 timed out)
Mutation testing 58% (elapsed: ~8m, remaining: ~5m) 151/258 tested (42 survived, 0 timed out)
Mutation testing 59% (elapsed: ~8m, remaining: ~5m) 154/258 tested (44 survived, 0 timed out)
Mutation testing 60% (elapsed: ~8m, remaining: ~5m) 157/258 tested (46 survived, 0 timed out)
Mutation testing 62% (elapsed: ~8m, remaining: ~5m) 161/258 tested (47 survived, 0 timed out)
Mutation testing 63% (elapsed: ~8m, remaining: ~5m) 164/258 tested (50 survived, 0 timed out)
Mutation testing 64% (elapsed: ~9m, remaining: ~4m) 167/258 tested (52 survived, 0 timed out)
Mutation testing 65% (elapsed: ~9m, remaining: ~4m) 170/258 tested (54 survived, 0 timed out)
Mutation testing 67% (elapsed: ~9m, remaining: ~4m) 173/258 tested (55 survived, 0 timed out)
Mutation testing 68% (elapsed: ~9m, remaining: ~4m) 176/258 tested (55 survived, 0 timed out)
Mutation testing 69% (elapsed: ~9m, remaining: ~4m) 179/258 tested (58 survived, 0 timed out)
Mutation testing 70% (elapsed: ~9m, remaining: ~4m) 182/258 tested (58 survived, 0 timed out)
Mutation testing 71% (elapsed: ~10m, remaining: ~3m) 185/258 tested (59 survived, 0 timed out)
Mutation testing 72% (elapsed: ~10m, remaining: ~3m) 188/258 tested (59 survived, 0 timed out)
Mutation testing 74% (elapsed: ~10m, remaining: ~3m) 191/258 tested (60 survived, 0 timed out)
Mutation testing 75% (elapsed: ~10m, remaining: ~3m) 194/258 tested (62 survived, 0 timed out)
Mutation testing 76% (elapsed: ~10m, remaining: ~3m) 197/258 tested (62 survived, 0 timed out)
Mutation testing 77% (elapsed: ~10m, remaining: ~3m) 201/258 tested (62 survived, 0 timed out)
Mutation testing 79% (elapsed: ~11m, remaining: ~2m) 204/258 tested (62 survived, 0 timed out)
Mutation testing 80% (elapsed: ~11m, remaining: ~2m) 207/258 tested (62 survived, 0 timed out)
Mutation testing 81% (elapsed: ~11m, remaining: ~2m) 210/258 tested (62 survived, 0 timed out)
Mutation testing 82% (elapsed: ~11m, remaining: ~2m) 213/258 tested (63 survived, 0 timed out)
Mutation testing 83% (elapsed: ~11m, remaining: ~2m) 216/258 tested (63 survived, 0 timed out)
Mutation testing 84% (elapsed: ~11m, remaining: ~2m) 219/258 tested (64 survived, 0 timed out)
Mutation testing 86% (elapsed: ~12m, remaining: ~1m) 222/258 tested (66 survived, 0 timed out)
Mutation testing 87% (elapsed: ~12m, remaining: ~1m) 225/258 tested (69 survived, 0 timed out)
Mutation testing 88% (elapsed: ~12m, remaining: ~1m) 228/258 tested (72 survived, 0 timed out)
Mutation testing 89% (elapsed: ~12m, remaining: ~1m) 231/258 tested (75 survived, 0 timed out)
Mutation testing 91% (elapsed: ~12m, remaining: ~1m) 235/258 tested (77 survived, 0 timed out)
Mutation testing 92% (elapsed: ~12m, remaining: ~1m) 238/258 tested (77 survived, 0 timed out)
Mutation testing 93% (elapsed: ~13m, remaining: <1m) 241/258 tested (78 survived, 0 timed out)
Mutation testing 94% (elapsed: ~13m, remaining: <1m) 244/258 tested (79 survived, 0 timed out)
Mutation testing 95% (elapsed: ~13m, remaining: <1m) 247/258 tested (79 survived, 0 timed out)
Mutation testing 96% (elapsed: ~13m, remaining: <1m) 250/258 tested (80 survived, 0 timed out)
Mutation testing 98% (elapsed: ~13m, remaining: <1m) 253/258 tested (80 survived, 0 timed out)
Mutation testing 99% (elapsed: ~13m, remaining: <1m) 256/258 tested (80 survived, 0 timed out)

All tests
  âœ“ All tests (killed 178)

[Survived] PrecomputedMutator
src/geo-point.ts:38:9
-       if (typeof latitude !== 'number' || typeof longitude !== 'number') {
+       if (latitude instanceof Number || longitude instanceof Number) {

[Survived] PrecomputedMutator
src/geo-point.ts:38:9
-       if (typeof latitude !== 'number' || typeof longitude !== 'number') {
+       if (isNaN(latitude) || isNaN(longitude)) {

[Survived] PrecomputedMutator
src/geo-point.ts:42:9
-       if (latitude < -90 || latitude > 90) {
+       if (latitude === -90 || latitude === 90) {

[Survived] PrecomputedMutator
src/geo-point.ts:46:9
-       if (longitude < -180 || longitude > 180) {
+       if (longitude === -180 || longitude === 180) {

[Survived] PrecomputedMutator
src/geo-point.ts:46:9
-       if (longitude < -180 || longitude > 180) {
+       if (longitude < -180 || longitude >= 180) {

[Survived] PrecomputedMutator
src/geo-point.ts:46:9
-       if (longitude < -180 || longitude > 180) {
+       if (Math.abs(longitude) > 180) {

[Survived] PrecomputedMutator
src/geo-point.ts:60:9
-       if (!isObject(point)) {
+       if (typeof point !== 'object') {

[Survived] PrecomputedMutator
src/geo-point.ts:60:9
-       if (!isObject(point)) {
+       if (point === null) {

[Survived] PrecomputedMutator
src/geo-point.ts:60:9
-       if (!isObject(point)) {
+       if (point.constructor.name !== 'Object') {

[Survived] PrecomputedMutator
src/geo-point.ts:60:19
-       if (!isObject(point)) {
+       if (!isObject(Object(point))) {

[Survived] PrecomputedMutator
src/geo-point.ts:60:19
-       if (!isObject(point)) {
+       if (!isObject({
+     ...point
+   })) {

[Survived] PrecomputedMutator
src/geo-point.ts:60:19
-       if (!isObject(point)) {
+       if (!isObject(JSON.parse(JSON.stringify(point)))) {

[Survived] PrecomputedMutator
src/geo-point.ts:68:9
-       if (point.type !== 'Point') {
+       if (point['type'] !== 'Point') {

[Survived] PrecomputedMutator
src/geo-point.ts:68:9
-       if (point.type !== 'Point') {
+       if (Object.prototype.hasOwnProperty.call(point, 'type') && point['type'] !== 'Point') {

[Survived] PrecomputedMutator
src/geo-point.ts:72:9
-       if (!Array.isArray(point.coordinates) || point.coordinates.length !== 2) {
+       if (point.coordinates.length !== 2) {

[Survived] PrecomputedMutator
src/geo-point.ts:72:9
-       if (!Array.isArray(point.coordinates) || point.coordinates.length !== 2) {
+       if (Array.isArray(point.coordinates) && point.coordinates.length !== 2) {

[Survived] PrecomputedMutator
src/geo-point.ts:85:9
-       if (!isObject(object)) {
+       if (typeof object !== 'object') {

[Survived] PrecomputedMutator
src/geo-point.ts:85:9
-       if (!isObject(object)) {
+       if (Object.prototype.toString.call(object) !== '[object Object]') {

[Survived] PrecomputedMutator
src/geo-point.ts:85:10
-       if (!isObject(object)) {
+       if (!input => typeof input === 'object'(object)) {

[Survived] PrecomputedMutator
src/geo-point.ts:85:19
-       if (!isObject(object)) {
+       if (!isObject([])) {

[Survived] PrecomputedMutator
src/geo-point.ts:89:9
-       if (!object.hasOwnProperty('latitude') || !object.hasOwnProperty('longitude')) {
+       if (Object.keys(object).length !== 2) {

[Survived] PrecomputedMutator
src/geo-point.ts:107:15
-       const c = sin(point1Rad) * sin(point2Rad);
+       const c = Math.sin(point1Rad) * sin(point2Rad);

[Survived] PrecomputedMutator
src/geo-point.ts:107:32
-       const c = sin(point1Rad) * sin(point2Rad);
+       const c = sin(point1Rad) * Math.sin(point2Rad);

[Survived] PrecomputedMutator
src/geo-point.ts:110:17
-       return acos(r > 1 ? 1 : r) * 6371392.896;
+       return acos(Math.abs(r)) * 6371392.896;

[Survived] PrecomputedMutator
src/geo-point.ts:120:55
-       const Ï†1 = deg2rad(point1.latitude), Ï†2 = deg2rad(point2.latitude);
+       const Ï†1 = deg2rad(point1.latitude), Ï†2 = deg2rad(point2['latitude']);

[Survived] PrecomputedMutator
src/geo-point.ts:121:24
-       const Î”Î» = deg2rad(point2.longitude - point1.longitude);
+       const Î”Î» = deg2rad(point2['longitude'] - point1['longitude']);

[Survived] PrecomputedMutator
src/geo-point.ts:124:15
-       const y = sin(Î”Î») * cos(Ï†2);
+       const y = Math.sin(Î”Î») * cos(Ï†2);

[Survived] PrecomputedMutator
src/geo-point.ts:124:25
-       const y = sin(Î”Î») * cos(Ï†2);
+       const y = sin(Î”Î») * Math.cos(Ï†2);

[Survived] PrecomputedMutator
src/geo-point.ts:125:15
-       const x = cos(Ï†1) * sin(Ï†2) - sin(Ï†1) * cos(Ï†2) * cos(Î”Î»);
+       const x = Math.cos(Ï†1) * sin(Ï†2) - sin(Ï†1) * cos(Ï†2) * cos(Î”Î»);

[Survived] PrecomputedMutator
src/geo-point.ts:125:25
-       const x = cos(Ï†1) * sin(Ï†2) - sin(Ï†1) * cos(Ï†2) * cos(Î”Î»);
+       const x = cos(Ï†1) * Math.sin(Ï†2) - sin(Ï†1) * cos(Ï†2) * cos(Î”Î»);

[Survived] PrecomputedMutator
src/geo-point.ts:125:35
-       const x = cos(Ï†1) * sin(Ï†2) - sin(Ï†1) * cos(Ï†2) * cos(Î”Î»);
+       const x = cos(Ï†1) * sin(Ï†2) - Math.sin(Ï†1) * cos(Ï†2) * cos(Î”Î»);

[Survived] PrecomputedMutator
src/geo-point.ts:125:45
-       const x = cos(Ï†1) * sin(Ï†2) - sin(Ï†1) * cos(Ï†2) * cos(Î”Î»);
+       const x = cos(Ï†1) * sin(Ï†2) - sin(Ï†1) * Math.cos(Ï†2) * cos(Î”Î»);

[Survived] PrecomputedMutator
src/geo-point.ts:125:55
-       const x = cos(Ï†1) * sin(Ï†2) - sin(Ï†1) * cos(Ï†2) * cos(Î”Î»);
+       const x = cos(Ï†1) * sin(Ï†2) - sin(Ï†1) * cos(Ï†2) * Math.cos(Î”Î»);

[Survived] PrecomputedMutator
src/geo-point.ts:128:21
-       return (rad2deg(Î¸) + 360) % 360;
+       return (rad2deg(Math.atan(y / x)) + 360) % 360;

[Survived] PrecomputedMutator
src/geo-point.ts:143:22
-       const Î´ = Number(distance) / radius; // angular distance in radians
+       const Î´ = Number(distance * 2) / radius; // angular distance in radians

[Survived] PrecomputedMutator
src/geo-point.ts:143:22
-       const Î´ = Number(distance) / radius; // angular distance in radians
+       const Î´ = Number(distance / radius) / radius; // angular distance in radians

[Survived] PrecomputedMutator
src/geo-point.ts:144:23
-       const Î¸ = deg2rad(Number(bearing));
+       const Î¸ = deg2rad(1 * bearing);

[Survived] PrecomputedMutator
src/geo-point.ts:144:23
-       const Î¸ = deg2rad(Number(bearing));
+       const Î¸ = deg2rad(parseFloat(bearing));

[Survived] PrecomputedMutator
src/geo-point.ts:144:23
-       const Î¸ = deg2rad(Number(bearing));
+       const Î¸ = deg2rad(Math.floor(bearing));

[Survived] PrecomputedMutator
src/geo-point.ts:147:24
-       const Î»1 = deg2rad(coordinate.longitude);
+       const Î»1 = deg2rad(0);

[Survived] PrecomputedMutator
src/geo-point.ts:149:36
-       const sinÏ†1 = sin(Ï†1), cosÏ†1 = cos(Ï†1);
+       const sinÏ†1 = sin(Ï†1), cosÏ†1 = Math.cos(Ï†1);

[Survived] PrecomputedMutator
src/geo-point.ts:149:36
-       const sinÏ†1 = sin(Ï†1), cosÏ†1 = cos(Ï†1);
+       const sinÏ†1 = sin(Ï†1), cosÏ†1 = Math.acos(Ï†1);

[Survived] PrecomputedMutator
src/geo-point.ts:149:40
-       const sinÏ†1 = sin(Ï†1), cosÏ†1 = cos(Ï†1);
+       const sinÏ†1 = sin(Ï†1), cosÏ†1 = cos(1);

[Survived] PrecomputedMutator
src/geo-point.ts:150:18
-       const sinÎ´ = sin(Î´), cosÎ´ = cos(Î´);
+       const sinÎ´ = Math.sin(Î´), cosÎ´ = cos(Î´);

[Survived] PrecomputedMutator
src/geo-point.ts:150:22
-       const sinÎ´ = sin(Î´), cosÎ´ = cos(Î´);
+       const sinÎ´ = sin(Math.sin(distance / radius)), cosÎ´ = cos(Î´);

[Survived] PrecomputedMutator
src/geo-point.ts:150:22
-       const sinÎ´ = sin(Î´), cosÎ´ = cos(Î´);
+       const sinÎ´ = sin(distance / radius * Math.PI / 180), cosÎ´ = cos(Î´);

[Survived] PrecomputedMutator
src/geo-point.ts:150:33
-       const sinÎ´ = sin(Î´), cosÎ´ = cos(Î´);
+       const sinÎ´ = sin(Î´), cosÎ´ = Math.cos(Î´);

[Survived] PrecomputedMutator
src/geo-point.ts:150:37
-       const sinÎ´ = sin(Î´), cosÎ´ = cos(Î´);
+       const sinÎ´ = sin(Î´), cosÎ´ = cos(1 / distance);

[Survived] PrecomputedMutator
src/geo-point.ts:150:37
-       const sinÎ´ = sin(Î´), cosÎ´ = cos(Î´);
+       const sinÎ´ = sin(Î´), cosÎ´ = cos(Math.exp(-distance));

[Survived] PrecomputedMutator
src/geo-point.ts:151:22
-       const sinÎ¸ = sin(Î¸), cosÎ¸ = cos(Î¸);
+       const sinÎ¸ = sin(Math.sin(Î¸ + Math.PI)), cosÎ¸ = cos(Î¸);

[Survived] PrecomputedMutator
src/geo-point.ts:151:33
-       const sinÎ¸ = sin(Î¸), cosÎ¸ = cos(Î¸);
+       const sinÎ¸ = sin(Î¸), cosÎ¸ = Math.cos(Î¸);

[Survived] PrecomputedMutator
src/geo-point.ts:151:33
-       const sinÎ¸ = sin(Î¸), cosÎ¸ = cos(Î¸);
+       const sinÎ¸ = sin(Î¸), cosÎ¸ = Math.sin(Î¸);

[Survived] PrecomputedMutator
src/geo-point.ts:151:37
-       const sinÎ¸ = sin(Î¸), cosÎ¸ = cos(Î¸);
+       const sinÎ¸ = sin(Î¸), cosÎ¸ = cos(1);

[Survived] PrecomputedMutator
src/geo-point.ts:151:37
-       const sinÎ¸ = sin(Î¸), cosÎ¸ = cos(Î¸);
+       const sinÎ¸ = sin(Î¸), cosÎ¸ = cos(Math.random());

[Survived] PrecomputedMutator
src/geo-point.ts:154:16
-       const Ï†2 = asin(sinÏ†2);
+       const Ï†2 = Math.asin(sinÏ†2);

[Survived] PrecomputedMutator
src/geo-point.ts:157:21
-       const Î»2 = Î»1 + atan2(y, x);
+       const Î»2 = Î»1 + atan2(-y, x);

[Survived] PrecomputedMutator
src/geo-point.ts:157:21
-       const Î»2 = Î»1 + atan2(y, x);
+       const Î»2 = Î»1 + atan2(y, 1 / x);

[Survived] PrecomputedMutator
src/geo-point.ts:157:21
-       const Î»2 = Î»1 + atan2(y, x);
+       const Î»2 = Î»1 + Math.atan(y, x);

[Survived] PrecomputedMutator
src/geo-point.ts:157:30
-       const Î»2 = Î»1 + atan2(y, x);
+       const Î»2 = Î»1 + atan2(y, 1);

[Survived] PrecomputedMutator
src/geo-point.ts:160:32
-       const longitude = (rad2deg(Î»2) + 540) % 360 - 180; // normalise to âˆ’180..+180Â°
+       const longitude = (rad2deg(0) + 540) % 360 - 180; // normalise to âˆ’180..+180Â°

[Survived] PrecomputedMutator
src/geo-point.ts:185:15
-       const x = Math.floor((coordinate.longitude + 180) / 360 * Math.pow(2, zoom));
+       const x = parseInt((coordinate.longitude + 180) / 360 * Math.pow(2, zoom));

[Survived] PrecomputedMutator
src/geo-point.ts:185:15
-       const x = Math.floor((coordinate.longitude + 180) / 360 * Math.pow(2, zoom));
+       const x = Math.trunc((coordinate.longitude + 180) / 360 * Math.pow(2, zoom));

[Survived] PrecomputedMutator
src/geo-point.ts:186:101
-       const y = Math.floor((1 - Math.log(Math.tan(coordinate.latitude * Math.PI / 180) + 1 / Math.cos(coordinate.latitude * Math.PI / 180)) / Math.PI) / 2 * Math.pow(
+       const y = Math.floor((1 - Math.log(Math.tan(coordinate.latitude * Math.PI / 180) + 1 / Math.cos(coordinate.latitude * Math.PI / 180.001)) / Math.PI) / 2 * Math.pow(

[Survived] PrecomputedMutator
src/geo-point.ts:201:48
-       return GeoPoint.calculateDestination(this, distance, bearing);
+       return GeoPoint.calculateDestination(this, 0, bearing);

[Survived] PrecomputedMutator
src/geo-point.ts:201:48
-       return GeoPoint.calculateDestination(this, distance, bearing);
+       return GeoPoint.calculateDestination(this, Math.random(), bearing);

[Survived] PrecomputedMutator
src/geo-point.ts:201:58
-       return GeoPoint.calculateDestination(this, distance, bearing);
+       return GeoPoint.calculateDestination(this, distance, 180);

[Survived] PrecomputedMutator
src/geo-point.ts:210:12
-       return GeoPoint.calculateBearing(this, point);
+       return GeoPoint.calculateBearing(null);

[Survived] PrecomputedMutator
src/geo-point.ts:210:12
-       return GeoPoint.calculateBearing(this, point);
+       return GeoPoint.calculateBearing({
+     latitude: 0,
+     longitude: 0
+   });

[Survived] PrecomputedMutator
src/geo-point.ts:210:38
-       return GeoPoint.calculateBearing(this, point);
+       return GeoPoint.calculateBearing(new GeoPoint(0, 0), point);

[Survived] PrecomputedMutator
src/geo-point.ts:210:38
-       return GeoPoint.calculateBearing(this, point);
+       return GeoPoint.calculateBearing(null, point);

[Survived] PrecomputedMutator
src/geo-point.ts:210:38
-       return GeoPoint.calculateBearing(this, point);
+       return GeoPoint.calculateBearing({
+     latitude: 0,
+     longitude: 0
+   }, point);

[Survived] PrecomputedMutator
src/geo-point.ts:210:44
-       return GeoPoint.calculateBearing(this, point);
+       return GeoPoint.calculateBearing(this, this);

[Survived] PrecomputedMutator
src/geo-point.ts:210:44
-       return GeoPoint.calculateBearing(this, point);
+       return GeoPoint.calculateBearing(this, new GeoPoint(0, 0));

[Survived] PrecomputedMutator
src/geo-point.ts:219:39
-       return GeoPoint.calculateDistance(this, point);
+       return GeoPoint.calculateDistance(0, point);

[Survived] PrecomputedMutator
src/geo-point.ts:219:39
-       return GeoPoint.calculateDistance(this, point);
+       return GeoPoint.calculateDistance(new GeoPoint(0, 0), point);

[Survived] PrecomputedMutator
src/geo-point.ts:219:39
-       return GeoPoint.calculateDistance(this, point);
+       return GeoPoint.calculateDistance(Math.random(), point);

[Survived] PrecomputedMutator
src/geo-point.ts:219:45
-       return GeoPoint.calculateDistance(this, point);
+       return GeoPoint.calculateDistance(this, new GeoPoint(0, 0));

[Survived] PrecomputedMutator
src/geo-point.ts:297:39
-       const adjust = (input: number) => parseFloat(input.toFixed(precision));
+       const adjust = (input: number) => input => input * 1(input.toFixed(precision));

[Survived] PrecomputedMutator
src/geo-point.ts:297:50
-       const adjust = (input: number) => parseFloat(input.toFixed(precision));
+       const adjust = (input: number) => parseFloat(Math.round(input * Math.pow(10, precision)) / Math.pow(10, precision));

[Survived] PrecomputedMutator
src/geo-point.ts:297:64
-       const adjust = (input: number) => parseFloat(input.toFixed(precision));
+       const adjust = (input: number) => parseFloat(input.toFixed(Math.floor(precision)));

Ran 1.00 tests per mutant on average.
--------------|---------|----------|-----------|------------|----------|----------|
File          | % score | # killed | # timeout | # survived | # no cov | # errors |
--------------|---------|----------|-----------|------------|----------|----------|
All files     |   68.99 |      178 |         0 |         80 |        0 |        0 |
 geo-point.ts |   68.99 |      178 |         0 |         80 |        0 |        0 |
--------------|---------|----------|-----------|------------|----------|----------|
[32m13:55:39 (2511) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/node-geo-point/reports/mutation/mutation.html
[32m13:55:39 (2511) INFO MutationTestExecutor[39m Done in 14 minutes 0 seconds.

real	14m2.234s
user	20m7.777s
sys	1m34.075s
