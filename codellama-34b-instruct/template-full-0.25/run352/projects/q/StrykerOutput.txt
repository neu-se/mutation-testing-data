*** using precomputed mutations ***
[32m02:21:16 (3108) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m02:21:16 (3108) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m02:21:16 (3108) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m02:21:17 (3108) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m02:21:17 (3108) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m02:21:17 (3108) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 2044 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.25/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "object"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", "undefined")
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", null)
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", 0)
Mutant 6 in q.js: bootstrap replaced with "console.log"
Mutant 7 in q.js: bootstrap replaced with "undefined"
Mutant 8 in q.js: bootstrap replaced with "null"
Mutant 9 in q.js: "promise" replaced with "deferred"
Mutant 10 in q.js: "promise" replaced with "fulfilled"
Mutant 11 in q.js: "promise" replaced with "rejected"
Mutant 12 in q.js: definition replaced with function () {
  throw new Error();
}
Mutant 13 in q.js: definition replaced with function () {
  return 42;
}
Mutant 14 in q.js: definition replaced with function () {
  return function () {
    return 42;
  };
}
Mutant 15 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "function" && typeof module === "function"
Mutant 16 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "undefined" && typeof module === "undefined"
Mutant 17 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "undefined"
Mutant 18 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.buggy
Mutant 19 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.buggy()
Mutant 20 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.buggy === true
Mutant 21 in q.js: definition replaced with null
Mutant 22 in q.js: definition replaced with undefined
Mutant 23 in q.js: definition replaced with "foo"
Mutant 24 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined"
Mutant 25 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "object"
Mutant 26 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "function"
Mutant 27 in q.js: !ses.ok() replaced with ses.notOk()
Mutant 28 in q.js: !ses.ok() replaced with ses.notOk() && true
Mutant 29 in q.js: !ses.ok() replaced with ses.notOk() || false
Mutant 30 in q.js: ses.ok replaced with ses.ok === true
Mutant 31 in q.js: ses.ok replaced with ses.ok !== true
Mutant 32 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined"
Mutant 33 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window === "undefined" || typeof self === "undefined"
Mutant 34 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self === "undefined"
Mutant 35 in q.js: captureLine replaced with captureLine + 1
Mutant 36 in q.js: captureLine replaced with captureLine - 1
Mutant 37 in q.js: captureLine replaced with captureLine * 2
Mutant 38 in q.js: head.next replaced with head.task
Mutant 39 in q.js: head.next replaced with tail.task
Mutant 40 in q.js: head.next replaced with head.next.task
Mutant 41 in q.js: domain replaced with domain && domain.enter()
Mutant 42 in q.js: domain replaced with domain || domain.enter()
Mutant 43 in q.js: domain replaced with !domain || domain.enter()
Mutant 44 in q.js: domain.enter replaced with domain.exit
Mutant 45 in q.js: domain.enter replaced with domain.run
Mutant 46 in q.js: domain.enter replaced with domain.bind
Mutant 47 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, undefined)
Mutant 48 in q.js: runSingle(task, domain) replaced with runSingle(task, null, domain)
Mutant 49 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, {})
Mutant 50 in q.js: task replaced with task()
Mutant 51 in q.js: task replaced with task + 1
Mutant 52 in q.js: task replaced with task.call()
Mutant 53 in q.js: domain replaced with undefined
Mutant 54 in q.js: domain replaced with null
Mutant 55 in q.js: domain replaced with {}
Mutant 56 in q.js: laterQueue.length replaced with laterQueue.shift()
Mutant 57 in q.js: laterQueue.length replaced with laterQueue.pop()
Mutant 58 in q.js: laterQueue.length replaced with laterQueue.slice(1)
Mutant 59 in q.js: laterQueue.pop replaced with laterQueue.shift
Mutant 60 in q.js: laterQueue.pop replaced with laterQueue.length
Mutant 61 in q.js: runSingle replaced with noop
Mutant 62 in q.js: runSingle replaced with undefined
Mutant 63 in q.js: task replaced with null
Mutant 64 in q.js: task replaced with undefined
Mutant 65 in q.js: task replaced with () => {}
Mutant 66 in q.js: task replaced with task + 1
Mutant 67 in q.js: task replaced with task * 2
Mutant 68 in q.js: task replaced with task - 1
Mutant 69 in q.js: domain replaced with domain.exit()
Mutant 70 in q.js: domain replaced with domain.enter()
Mutant 71 in q.js: domain replaced with domain.run(function () {})
Mutant 72 in q.js: domain.exit replaced with domain.enter
Mutant 73 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 74 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 75 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "hello")
Mutant 76 in q.js: 0 replaced with 1
Mutant 77 in q.js: 0 replaced with -1
Mutant 78 in q.js: 0 replaced with Infinity
Mutant 79 in q.js: domain replaced with !domain
Mutant 80 in q.js: domain replaced with domain && false
Mutant 81 in q.js: domain replaced with domain || true
Mutant 82 in q.js: domain.enter replaced with domain.exit
Mutant 83 in q.js: domain replaced with !domain
Mutant 84 in q.js: domain replaced with domain && false
Mutant 85 in q.js: domain replaced with domain || true
Mutant 86 in q.js: domain.exit replaced with domain.enter
Mutant 87 in q.js: domain.exit replaced with domain.destroy
Mutant 88 in q.js: domain.exit replaced with domain.run
Mutant 89 in q.js: !flushing replaced with flushing
Mutant 90 in q.js: !flushing replaced with flushing === true
Mutant 91 in q.js: flush replaced with flush()
Mutant 92 in q.js: flush replaced with flush.bind(null)
Mutant 93 in q.js: flush replaced with function () {
  flush();
}
Mutant 94 in q.js: typeof window !== "undefined" replaced with typeof window === "undefined"
Mutant 95 in q.js: typeof window !== "undefined" replaced with typeof window !== "object"
Mutant 96 in q.js: typeof window !== "undefined" replaced with typeof window !== "function"
Mutant 97 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 98 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 99 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(this)
Mutant 100 in q.js: setImmediate.bind replaced with setInterval.bind
Mutant 101 in q.js: setImmediate.bind replaced with requestAnimationFrame.bind
Mutant 102 in q.js: window replaced with undefined
Mutant 103 in q.js: window replaced with null
Mutant 104 in q.js: window replaced with this
Mutant 105 in q.js: flush replaced with flush()
Mutant 106 in q.js: flush replaced with requestAnimationFrame(flush)
Mutant 107 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "undefined"
Mutant 108 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "object"
Mutant 109 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 110 in q.js: channel.port2.postMessage replaced with channel.port2.send
Mutant 111 in q.js: channel.port2.postMessage replaced with channel.port1.send
Mutant 112 in q.js: 0 replaced with 1
Mutant 113 in q.js: 0 replaced with "hello"
Mutant 114 in q.js: 0 replaced with null
Mutant 115 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 116 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 117 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "Hello, world!")
Mutant 118 in q.js: setTimeout replaced with setInterval
Mutant 119 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 120 in q.js: flush replaced with flush()
Mutant 121 in q.js: 0 replaced with 1
Mutant 122 in q.js: 0 replaced with -1
Mutant 123 in q.js: 0 replaced with null
Mutant 124 in q.js: requestPortTick replaced with requestTick
Mutant 125 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 126 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 127 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, null)
Mutant 128 in q.js: setTimeout replaced with setInterval
Mutant 129 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 130 in q.js: flush replaced with flush()
Mutant 131 in q.js: flush replaced with setInterval(flush, 1000)
Mutant 132 in q.js: 0 replaced with 1
Mutant 133 in q.js: 0 replaced with -1
Mutant 134 in q.js: 0 replaced with null
Mutant 135 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 136 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 137 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 138 in q.js: task replaced with null
Mutant 139 in q.js: task replaced with undefined
Mutant 140 in q.js: task replaced with 0
Mutant 141 in q.js: !flushing replaced with flushing
Mutant 142 in q.js: !flushing replaced with !flushing && true
Mutant 143 in q.js: !flushing replaced with flushing || false
Mutant 144 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[0])
Mutant 145 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[1])
Mutant 146 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments.length)
Mutant 147 in q.js: call.apply replaced with call.bind
Mutant 148 in q.js: call.apply replaced with call.call
Mutant 149 in q.js: f replaced with f + 1
Mutant 150 in q.js: f replaced with f * 2
Mutant 151 in q.js: f replaced with f - 1
Mutant 152 in q.js: arguments replaced with [1, 2, 3]
Mutant 153 in q.js: arguments replaced with "hello"
Mutant 154 in q.js: arguments replaced with null
Mutant 155 in q.js: Array.prototype.slice replaced with Array.prototype.reverse
Mutant 156 in q.js: Array.prototype.slice replaced with Array.prototype.filter
Mutant 157 in q.js: Array.prototype.slice replaced with Array.prototype.map
Mutant 158 in q.js: arguments.length === 1 replaced with arguments.length < 1
Mutant 159 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 160 in q.js: arguments.length === 1 replaced with arguments.length === 0
Mutant 161 in q.js: 1 replaced with 2
Mutant 162 in q.js: 1 replaced with 3
Mutant 163 in q.js: 1 replaced with 0
Mutant 164 in q.js: index in this replaced with index > this.length
Mutant 165 in q.js: index in this replaced with index < this.length
Mutant 166 in q.js: index in this replaced with index != this.length
Mutant 167 in q.js: ++index >= length replaced with index + 1 >= length
Mutant 168 in q.js: ++index >= length replaced with index + 2 >= length
Mutant 169 in q.js: index < length replaced with index > length
Mutant 170 in q.js: index < length replaced with index <= length
Mutant 171 in q.js: index < length replaced with index != length
Mutant 172 in q.js: index++ replaced with index--
Mutant 173 in q.js: index++ replaced with index += 2
Mutant 174 in q.js: index++ replaced with index = 0
Mutant 175 in q.js: index in this replaced with index in this.length
Mutant 176 in q.js: index in this replaced with index in this.length - 1
Mutant 177 in q.js: index in this replaced with index in this.length + 1
Mutant 178 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index + 1)
Mutant 179 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index - 1)
Mutant 180 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index * 2)
Mutant 181 in q.js: basis replaced with basis + 1
Mutant 182 in q.js: basis replaced with basis * 2
Mutant 183 in q.js: basis replaced with basis - 1
Mutant 184 in q.js: this[index] replaced with this[index] + 1
Mutant 185 in q.js: this[index] replaced with this[index] - 1
Mutant 186 in q.js: this[index] replaced with this[index] * 2
Mutant 187 in q.js: index replaced with index + 1
Mutant 188 in q.js: index replaced with index - 1
Mutant 189 in q.js: index replaced with index * 2
Mutant 190 in q.js: i < this.length replaced with i <= this.length
Mutant 191 in q.js: i < this.length replaced with i > this.length
Mutant 192 in q.js: i < this.length replaced with i == this.length
Mutant 193 in q.js: i++ replaced with i--
Mutant 194 in q.js: i++ replaced with i += 2
Mutant 195 in q.js: i++ replaced with i = 0
Mutant 196 in q.js: this[i] === value replaced with this[i] !== value
Mutant 197 in q.js: this[i] === value replaced with this[i] + value
Mutant 198 in q.js: this[i] === value replaced with this[i] * value
Mutant 199 in q.js: collect.push replaced with collect.pop
Mutant 200 in q.js: collect.push replaced with collect.shift
Mutant 201 in q.js: collect.push replaced with collect.unshift
Mutant 202 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) + 1
Mutant 203 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) - 1
Mutant 204 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) * 2
Mutant 205 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self.length)
Mutant 206 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self.length - 1)
Mutant 207 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self.length + 1)
Mutant 208 in q.js: callback.call replaced with callback.apply
Mutant 209 in q.js: callback.call replaced with callback.bind
Mutant 210 in q.js: thisp replaced with null
Mutant 211 in q.js: thisp replaced with undefined
Mutant 212 in q.js: thisp replaced with {}
Mutant 213 in q.js: value replaced with undefined
Mutant 214 in q.js: value replaced with null
Mutant 215 in q.js: value replaced with "value"
Mutant 216 in q.js: index replaced with index + 1
Mutant 217 in q.js: index replaced with index - 1
Mutant 218 in q.js: index replaced with index * 2
Mutant 219 in q.js: self replaced with null
Mutant 220 in q.js: self replaced with undefined
Mutant 221 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key of object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 222 in q.js: object replaced with null
Mutant 223 in q.js: object replaced with undefined
Mutant 224 in q.js: object replaced with {}
Mutant 225 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) || object_hasOwnProperty(object, key + 1)
Mutant 226 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && object_hasOwnProperty(object, key + 1)
Mutant 227 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) ^ object_hasOwnProperty(object, key + 1)
Mutant 228 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key - 1)
Mutant 229 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key * 2)
Mutant 230 in q.js: object replaced with null
Mutant 231 in q.js: object replaced with undefined
Mutant 232 in q.js: object replaced with {}
Mutant 233 in q.js: key replaced with this[key]
Mutant 234 in q.js: key replaced with key.toUpperCase()
Mutant 235 in q.js: key replaced with this[key]
Mutant 236 in q.js: key replaced with key + 1
Mutant 237 in q.js: key replaced with key.toUpperCase()
Mutant 238 in q.js: Object replaced with null
Mutant 239 in q.js: Object replaced with undefined
Mutant 240 in q.js: Object replaced with {}
Mutant 241 in q.js: value replaced with value + 1
Mutant 242 in q.js: value replaced with value + Math.random()
Mutant 243 in q.js: value replaced with value.toString()
Mutant 244 in q.js: object_toString replaced with object_hasOwnProperty
Mutant 245 in q.js: object_toString replaced with object_keys
Mutant 246 in q.js: object_toString replaced with object_create
Mutant 247 in q.js: exception replaced with exception.message
Mutant 248 in q.js: exception replaced with exception.stack
Mutant 249 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" && ReturnValue === "undefined"
Mutant 250 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" || ReturnValue === "undefined"
Mutant 251 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" && ReturnValue !== "undefined"
Mutant 252 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && false
Mutant 253 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack || true
Mutant 254 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && typeof error.stack === "string"
Mutant 255 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.source; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 256 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise + 1; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 257 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.then(function () {
  return null;
}); !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 258 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 259 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p.isRejected(); p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 260 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p.isFulfilled(); p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 261 in q.js: !!p replaced with !p
Mutant 262 in q.js: !!p replaced with p && !p
Mutant 263 in q.js: p = p.source replaced with p = p.source.source
Mutant 264 in q.js: p = p.source replaced with p = p.source.source.source
Mutant 265 in q.js: p = p.source replaced with p = p.source.source.source.source
Mutant 266 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)
Mutant 267 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)
Mutant 268 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 269 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 270 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter * 2,
  configurable: true
})
Mutant 271 in q.js: "__minimumStackCounter__" replaced with "__maximumStackCounter__"
Mutant 272 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__"
Mutant 273 in q.js: "__minimumStackCounter__" replaced with "__stackDepth__"
Mutant 274 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 275 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 276 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 277 in q.js: stacks.unshift replaced with stacks.push
Mutant 278 in q.js: stacks.unshift replaced with stacks.shift
Mutant 279 in q.js: p.stack replaced with p.stack.slice(0, -1)
Mutant 280 in q.js: p.stack replaced with p.stack.slice(1)
Mutant 281 in q.js: p.stack replaced with p.stack.slice(0, -2)
Mutant 282 in q.js: stacks.unshift replaced with stacks.push
Mutant 283 in q.js: stacks.unshift replaced with stacks.pop
Mutant 284 in q.js: stacks.unshift replaced with stacks.shift
Mutant 285 in q.js: error.stack replaced with error.message
Mutant 286 in q.js: error.stack replaced with error.name
Mutant 287 in q.js: error.stack replaced with error.toString()
Mutant 288 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + "From previous event:" + "\n"
Mutant 289 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + "From previous event:" + " "
Mutant 290 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + "From previous event:" + "\t"
Mutant 291 in q.js: concatedStacks replaced with concatedStacks.reverse()
Mutant 292 in q.js: concatedStacks replaced with concatedStacks.slice(1)
Mutant 293 in q.js: concatedStacks replaced with concatedStacks.concat(["new error"])
Mutant 294 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  enumerable: true
})
Mutant 295 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  writable: true
})
Mutant 296 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  configurable: false
})
Mutant 297 in q.js: "stack" replaced with "stackTrace"
Mutant 298 in q.js: "stack" replaced with "error"
Mutant 299 in q.js: "stack" replaced with "message"
Mutant 300 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack + "foo",
  configurable: true
}
Mutant 301 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack.toUpperCase(),
  configurable: true
}
Mutant 302 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack.split("").reverse().join(""),
  configurable: true
}
Mutant 303 in q.js: "\n" replaced with " "
Mutant 304 in q.js: "\n" replaced with "\t"
Mutant 305 in q.js: "\n" replaced with "\\n"
Mutant 306 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 307 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = -1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 308 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = this.length; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 309 in q.js: i < lines.length replaced with i <= lines.length
Mutant 310 in q.js: i < lines.length replaced with i > lines.length
Mutant 311 in q.js: i < lines.length replaced with i == lines.length
Mutant 312 in q.js: ++i replaced with i--
Mutant 313 in q.js: ++i replaced with i += 2
Mutant 314 in q.js: ++i replaced with i = i + 1
Mutant 315 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && line
Mutant 316 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isNodeFrame(line) && line
Mutant 317 in q.js: isInternalFrame replaced with getFileNameAndLineNumber
Mutant 318 in q.js: line replaced with line.split(" ").join("")
Mutant 319 in q.js: line replaced with line.slice(1)
Mutant 320 in q.js: line replaced with line.replace(/^\w+/, "")
Mutant 321 in q.js: desiredLines.push replaced with desiredLines.pop
Mutant 322 in q.js: desiredLines.push replaced with desiredLines.shift
Mutant 323 in q.js: desiredLines.push replaced with desiredLines.unshift
Mutant 324 in q.js: line replaced with line + 1
Mutant 325 in q.js: line replaced with line - 1
Mutant 326 in q.js: line replaced with line * 2
Mutant 327 in q.js: "\n" replaced with "\t"
Mutant 328 in q.js: "\n" replaced with " "
Mutant 329 in q.js: "\n" replaced with ""
Mutant 330 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 331 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 332 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 333 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 334 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 335 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 336 in q.js: "(node.js:" replaced with "(node.js:)"
Mutant 337 in q.js: stackLine replaced with stackLine.split("@")[1]
Mutant 338 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 339 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 340 in q.js: attempt1 replaced with attempt1[1] === undefined
Mutant 341 in q.js: attempt1 replaced with attempt1[1] === null
Mutant 342 in q.js: attempt1 replaced with attempt1[1] === ""
Mutant 343 in q.js: Number replaced with "hello"
Mutant 344 in q.js: Number replaced with null
Mutant 345 in q.js: Number replaced with undefined
Mutant 346 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 347 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 348 in q.js: attempt1[2] replaced with attempt2[1]
Mutant 349 in q.js: stackLine replaced with stackLine.split(" ").reverse().join(" ")
Mutant 350 in q.js: stackLine replaced with stackLine.toUpperCase()
Mutant 351 in q.js: stackLine replaced with stackLine.replace("at", "from")
Mutant 352 in q.js: attempt2 replaced with attempt2[1] > 0
Mutant 353 in q.js: attempt2 replaced with attempt2[1] !== attempt2[0]
Mutant 354 in q.js: attempt2 replaced with attempt2[1] < attempt2[0]
Mutant 355 in q.js: Number replaced with "PLACEHOLDER"
Mutant 356 in q.js: Number replaced with null
Mutant 357 in q.js: Number replaced with undefined
Mutant 358 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 359 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 360 in q.js: attempt2[2] replaced with attempt2[4]
Mutant 361 in q.js: stackLine replaced with stackLine.split("@")[1]
Mutant 362 in q.js: stackLine replaced with stackLine.replace(/^.*@/, "")
Mutant 363 in q.js: stackLine replaced with stackLine.substring(stackLine.indexOf("@") + 1)
Mutant 364 in q.js: attempt3 replaced with attempt3[1]
Mutant 365 in q.js: attempt3 replaced with attempt3[0]
Mutant 366 in q.js: attempt3 replaced with attempt3.length
Mutant 367 in q.js: Number replaced with String
Mutant 368 in q.js: Number replaced with null
Mutant 369 in q.js: Number replaced with undefined
Mutant 370 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 371 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 372 in q.js: attempt3[2] replaced with attempt3[0]
Mutant 373 in q.js: stackLine replaced with stackLine.split("at ")[1]
Mutant 374 in q.js: stackLine replaced with stackLine.split("at ")[0]
Mutant 375 in q.js: stackLine replaced with stackLine.split("at ").slice(-2)[0]
Mutant 376 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === undefined
Mutant 377 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[1] === undefined
Mutant 378 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 379 in q.js: "\n" replaced with "\t"
Mutant 380 in q.js: "\n" replaced with " "
Mutant 381 in q.js: "\n" replaced with "\\n"
Mutant 382 in q.js: lines[0].indexOf replaced with lines[0].lastIndexOf
Mutant 383 in q.js: lines[0].indexOf replaced with lines[0].includes
Mutant 384 in q.js: "@" replaced with "#"
Mutant 385 in q.js: "@" replaced with "%"
Mutant 386 in q.js: "@" replaced with "*"
Mutant 387 in q.js: firstLine replaced with firstLine.split(":")[0]
Mutant 388 in q.js: firstLine replaced with firstLine.split(":")[1]
Mutant 389 in q.js: firstLine replaced with firstLine.split(":")[2]
Mutant 390 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === undefined
Mutant 391 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 392 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.indexOf(undefined) === -1
Mutant 393 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn !== "function"
Mutant 394 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console !== "object"
Mutant 395 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console.warn !== "function"
Mutant 396 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback.apply(this, arguments))
Mutant 397 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback.apply(null, arguments))
Mutant 398 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback.apply(undefined, arguments))
Mutant 399 in q.js: callback.apply replaced with callback.call
Mutant 400 in q.js: callback.apply replaced with callback.bind
Mutant 401 in q.js: callback.apply replaced with callback.toString
Mutant 402 in q.js: arguments replaced with null
Mutant 403 in q.js: arguments replaced with []
Mutant 404 in q.js: arguments replaced with "foo"
Mutant 405 in q.js: value instanceof Promise replaced with value === Promise
Mutant 406 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 407 in q.js: value instanceof Promise replaced with value.then === Promise.prototype.then
Mutant 408 in q.js: isPromiseAlike(value) replaced with value !== null
Mutant 409 in q.js: isPromiseAlike(value) replaced with value instanceof Promise
Mutant 410 in q.js: isPromiseAlike(value) replaced with typeof value === "object"
Mutant 411 in q.js: isPromiseAlike replaced with value.then
Mutant 412 in q.js: value replaced with value + 1
Mutant 413 in q.js: value replaced with value * 2
Mutant 414 in q.js: value replaced with value - 1
Mutant 415 in q.js: value replaced with value + 1
Mutant 416 in q.js: value replaced with value * 2
Mutant 417 in q.js: value replaced with value - 1
Mutant 418 in q.js: fulfill replaced with reject
Mutant 419 in q.js: value replaced with null
Mutant 420 in q.js: value replaced with undefined
Mutant 421 in q.js: value replaced with 0
Mutant 422 in q.js: object_create replaced with Promise.prototype
Mutant 423 in q.js: object_create replaced with null
Mutant 424 in q.js: object_create replaced with undefined
Mutant 425 in q.js: object_create replaced with {}
Mutant 426 in q.js: Promise.prototype replaced with Object.prototype
Mutant 427 in q.js: Promise.prototype replaced with null
Mutant 428 in q.js: Promise.prototype replaced with undefined
Mutant 429 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 430 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 431 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 432 in q.js: messages replaced with messages.length
Mutant 433 in q.js: messages replaced with !resolvedPromise
Mutant 434 in q.js: messages replaced with messages.length > 0
Mutant 435 in q.js: args replaced with args[0]
Mutant 436 in q.js: args replaced with args[1]
Mutant 437 in q.js: args replaced with args.slice(1)
Mutant 438 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[1]
Mutant 439 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 440 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[1] === false
Mutant 441 in q.js: progressListeners.push replaced with progressListeners.pop
Mutant 442 in q.js: progressListeners.push replaced with progressListeners.shift
Mutant 443 in q.js: progressListeners.push replaced with progressListeners.unshift
Mutant 444 in q.js: operands[1] replaced with operands[2]
Mutant 445 in q.js: operands[1] replaced with operands[0]
Mutant 446 in q.js: operands[1] replaced with operands.length
Mutant 447 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(undefined, args))
Mutant 448 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(null, args))
Mutant 449 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(args))
Mutant 450 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 451 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.bind
Mutant 452 in q.js: resolvedPromise replaced with null
Mutant 453 in q.js: resolvedPromise replaced with undefined
Mutant 454 in q.js: resolvedPromise replaced with 0
Mutant 455 in q.js: args replaced with args[0]
Mutant 456 in q.js: args replaced with args.slice(1)
Mutant 457 in q.js: args replaced with args.concat(["extra argument"])
Mutant 458 in q.js: messages replaced with messages.length
Mutant 459 in q.js: messages replaced with messages[0]
Mutant 460 in q.js: messages replaced with messages.pop()
Mutant 461 in q.js: nearer replaced with nearerValue + 1
Mutant 462 in q.js: nearer replaced with nearerValue - 1
Mutant 463 in q.js: nearer replaced with nearerValue * 2
Mutant 464 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 465 in q.js: resolvedPromise replaced with resolvedPromise.source
Mutant 466 in q.js: resolvedPromise replaced with fulfill(resolvedPromise)
Mutant 467 in q.js: isPromise(nearerValue) replaced with nearerValue === null
Mutant 468 in q.js: isPromise(nearerValue) replaced with nearerValue !== null
Mutant 469 in q.js: isPromise(nearerValue) replaced with nearerValue.valueOf() === null
Mutant 470 in q.js: isPromise replaced with isPromiseAlike
Mutant 471 in q.js: isPromise replaced with !isPromise
Mutant 472 in q.js: isPromise replaced with isPromise && isPromiseAlike
Mutant 473 in q.js: nearerValue replaced with nearerValue + 1
Mutant 474 in q.js: nearerValue replaced with nearerValue * 2
Mutant 475 in q.js: nearerValue replaced with nearerValue - 1
Mutant 476 in q.js: !resolvedPromise replaced with resolvedPromise === null
Mutant 477 in q.js: !resolvedPromise replaced with typeof resolvedPromise === "undefined"
Mutant 478 in q.js: !resolvedPromise replaced with resolvedPromise.isFulfilled()
Mutant 479 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 480 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 481 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport ^ hasStacks
Mutant 482 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.length
Mutant 483 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.lastIndexOf("\n") + 1
Mutant 484 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") - 1
Mutant 485 in q.js: "\n" replaced with "\t"
Mutant 486 in q.js: "\n" replaced with " "
Mutant 487 in q.js: "\n" replaced with "\\n"
Mutant 488 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 489 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 490 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && hasStacks && false
Mutant 491 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message[0])
Mutant 492 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.slice(1))
Mutant 493 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.pop())
Mutant 494 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 495 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.bind
Mutant 496 in q.js: newPromise replaced with undefined
Mutant 497 in q.js: newPromise replaced with null
Mutant 498 in q.js: newPromise replaced with 0
Mutant 499 in q.js: message replaced with message.slice(1)
Mutant 500 in q.js: message replaced with message.concat(message)
Mutant 501 in q.js: message replaced with message.reverse()
Mutant 502 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 503 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 504 in q.js: resolvedPromise replaced with resolvedPromise !== undefined
Mutant 505 in q.js: Q replaced with Q.reject
Mutant 506 in q.js: Q replaced with Q.resolve
Mutant 507 in q.js: Q replaced with Q.notify
Mutant 508 in q.js: value replaced with !value
Mutant 509 in q.js: value replaced with value + 1
Mutant 510 in q.js: value replaced with value * 2
Mutant 511 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 512 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 513 in q.js: resolvedPromise replaced with resolvedPromise !== undefined
Mutant 514 in q.js: fulfill(value) replaced with reject(value)
Mutant 515 in q.js: fulfill(value) replaced with fulfill(otherValue)
Mutant 516 in q.js: fulfill(value) replaced with fulfill(value + 1)
Mutant 517 in q.js: fulfill replaced with resolve
Mutant 518 in q.js: fulfill replaced with notify
Mutant 519 in q.js: value replaced with value * 2
Mutant 520 in q.js: value replaced with value - 1
Mutant 521 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 522 in q.js: resolvedPromise replaced with resolvedPromise && false
Mutant 523 in q.js: resolvedPromise replaced with resolvedPromise || true
Mutant 524 in q.js: reject(reason) replaced with reject(new Error(reason))
Mutant 525 in q.js: reject(reason) replaced with reject(reason + "!")
Mutant 526 in q.js: reject(reason) replaced with reject(reason.toUpperCase())
Mutant 527 in q.js: reject replaced with resolve
Mutant 528 in q.js: reject replaced with fulfill
Mutant 529 in q.js: reason replaced with null
Mutant 530 in q.js: reason replaced with undefined
Mutant 531 in q.js: reason replaced with "error"
Mutant 532 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 533 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 534 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 535 in q.js: progressListener replaced with progressListeners[0]
Mutant 536 in q.js: progressListener replaced with progressListeners[progressListeners.length - 1]
Mutant 537 in q.js: progress replaced with progress + 1
Mutant 538 in q.js: progress replaced with progress - 1
Mutant 539 in q.js: progress replaced with progress * 2
Mutant 540 in q.js: error replaced with error != null
Mutant 541 in q.js: error replaced with error !== null
Mutant 542 in q.js: error replaced with error !== undefined
Mutant 543 in q.js: error replaced with error.message
Mutant 544 in q.js: error replaced with error.stack
Mutant 545 in q.js: error replaced with error.name
Mutant 546 in q.js: arguments.length > 2 replaced with arguments.length > 1
Mutant 547 in q.js: arguments.length > 2 replaced with arguments.length === 0
Mutant 548 in q.js: arguments.length > 2 replaced with arguments.length < 2
Mutant 549 in q.js: self.resolve replaced with self.reject
Mutant 550 in q.js: self.resolve replaced with self.notify
Mutant 551 in q.js: self.resolve replaced with self.fulfill
Mutant 552 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 553 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0, 1)
Mutant 554 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 1, 2)
Mutant 555 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 556 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 4)
Mutant 557 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 558 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 559 in q.js: 1 replaced with 3
Mutant 560 in q.js: 1 replaced with 4
Mutant 561 in q.js: self.resolve replaced with self.reject
Mutant 562 in q.js: self.resolve replaced with self.notify
Mutant 563 in q.js: self.resolve replaced with self.fulfill
Mutant 564 in q.js: value replaced with null
Mutant 565 in q.js: value replaced with undefined
Mutant 566 in q.js: value replaced with false
Mutant 567 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 568 in q.js: typeof resolver !== "function" replaced with resolver !== function () {}
Mutant 569 in q.js: typeof resolver !== "function" replaced with resolver !== Promise.resolve
Mutant 570 in q.js: defer replaced with defer.promise
Mutant 571 in q.js: defer replaced with defer.reject
Mutant 572 in q.js: defer replaced with defer.notify
Mutant 573 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.resolve, deferred.notify)
Mutant 574 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve, deferred.reject, deferred.notify.bind(deferred))
Mutant 575 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve, deferred.reject, deferred.notify.call(deferred))
Mutant 576 in q.js: deferred.resolve replaced with deferred.reject
Mutant 577 in q.js: deferred.resolve replaced with deferred.notify
Mutant 578 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 579 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 580 in q.js: deferred.reject replaced with deferred.notify
Mutant 581 in q.js: deferred.reject replaced with deferred.makeNodeResolver
Mutant 582 in q.js: deferred.notify replaced with deferred.notify(null)
Mutant 583 in q.js: deferred.notify replaced with deferred.notify(undefined)
Mutant 584 in q.js: deferred.notify replaced with deferred.notify(0)
Mutant 585 in q.js: deferred.reject replaced with deferred.resolve
Mutant 586 in q.js: deferred.reject replaced with deferred.notify
Mutant 587 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 588 in q.js: reason replaced with null
Mutant 589 in q.js: reason replaced with undefined
Mutant 590 in q.js: reason replaced with "Error"
Mutant 591 in q.js: Q replaced with Q.reject
Mutant 592 in q.js: Q replaced with Q.resolve
Mutant 593 in q.js: Q replaced with Q.all
Mutant 594 in q.js: x replaced with y
Mutant 595 in q.js: x replaced with x + 1
Mutant 596 in q.js: x replaced with x * 2
Mutant 597 in q.js: y replaced with x
Mutant 598 in q.js: y replaced with x + y
Mutant 599 in q.js: [this, that] replaced with [that, this]
Mutant 600 in q.js: [this, that] replaced with [this, this]
Mutant 601 in q.js: [this, that] replaced with [null, that]
Mutant 602 in q.js: x === y replaced with x !== y
Mutant 603 in q.js: x === y replaced with x == y
Mutant 604 in q.js: x === y replaced with x !== y && x !== -y
Mutant 605 in q.js: i < len replaced with i <= len
Mutant 606 in q.js: i < len replaced with i > len
Mutant 607 in q.js: i < len replaced with i == len
Mutant 608 in q.js: i++ replaced with i += 2
Mutant 609 in q.js: i++ replaced with i--
Mutant 610 in q.js: i++ replaced with i = i + 10
Mutant 611 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve)
Mutant 612 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, resolve)
Mutant 613 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, reject, resolve)
Mutant 614 in q.js: Q replaced with Q.reject
Mutant 615 in q.js: Q replaced with Q.resolve
Mutant 616 in q.js: Q replaced with Q.all
Mutant 617 in q.js: answerPs[i] replaced with answerPs[i] + 1
Mutant 618 in q.js: answerPs[i] replaced with answerPs[i] * 2
Mutant 619 in q.js: answerPs[i] replaced with answerPs[i] - 1
Mutant 620 in q.js: resolve replaced with reject
Mutant 621 in q.js: reject replaced with resolve
Mutant 622 in q.js: Q.race replaced with Q.reject
Mutant 623 in q.js: Q.race replaced with Q.resolve
Mutant 624 in q.js: Q.race replaced with Q.all
Mutant 625 in q.js: fallback === void 0 replaced with fallback === null
Mutant 626 in q.js: fallback === void 0 replaced with fallback === undefined
Mutant 627 in q.js: fallback === void 0 replaced with fallback === function () {}
Mutant 628 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 629 in q.js: inspect === void 0 replaced with inspect === null
Mutant 630 in q.js: inspect === void 0 replaced with inspect === undefined
Mutant 631 in q.js: object_create replaced with null
Mutant 632 in q.js: object_create replaced with undefined
Mutant 633 in q.js: object_create replaced with {}
Mutant 634 in q.js: Promise.prototype replaced with Object.prototype
Mutant 635 in q.js: Promise.prototype replaced with null
Mutant 636 in q.js: Promise.prototype replaced with undefined
Mutant 637 in q.js: descriptor[op] replaced with descriptor[op].bind(promise)
Mutant 638 in q.js: descriptor[op] replaced with descriptor[op].call(promise)
Mutant 639 in q.js: descriptor[op] replaced with descriptor[op].apply(promise)
Mutant 640 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args[0])
Mutant 641 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args[1])
Mutant 642 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args[2])
Mutant 643 in q.js: promise replaced with null
Mutant 644 in q.js: promise replaced with undefined
Mutant 645 in q.js: promise replaced with {}
Mutant 646 in q.js: args replaced with args[0]
Mutant 647 in q.js: args replaced with args.slice(1)
Mutant 648 in q.js: args replaced with args.concat(["extra argument"])
Mutant 649 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.reject)
Mutant 650 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.resolve)
Mutant 651 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.then)
Mutant 652 in q.js: promise replaced with null
Mutant 653 in q.js: promise replaced with undefined
Mutant 654 in q.js: promise replaced with this
Mutant 655 in q.js: op replaced with op + 1
Mutant 656 in q.js: op replaced with op - 1
Mutant 657 in q.js: op replaced with op * 2
Mutant 658 in q.js: args replaced with null
Mutant 659 in q.js: args replaced with undefined
Mutant 660 in q.js: args replaced with 0
Mutant 661 in q.js: reject replaced with undefined
Mutant 662 in q.js: exception replaced with null
Mutant 663 in q.js: exception replaced with "error"
Mutant 664 in q.js: exception replaced with new Error("custom error message")
Mutant 665 in q.js: resolve replaced with resolve(reject(new Error("Q can't join: not the same: " + x + " " + y)))
Mutant 666 in q.js: resolve replaced with resolve(Q(x).join(y))
Mutant 667 in q.js: resolve replaced with resolve(Q(x).join(y).then(function (result) {
  return result;
}))
Mutant 668 in q.js: resolve replaced with reject
Mutant 669 in q.js: result replaced with null
Mutant 670 in q.js: result replaced with undefined
Mutant 671 in q.js: result replaced with reject(new Error("Promise does not support operation: " + op))
Mutant 672 in q.js: inspect replaced with inspect.state
Mutant 673 in q.js: inspect replaced with inspect.toString()
Mutant 674 in q.js: inspect replaced with inspect.call()
Mutant 675 in q.js: inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 676 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 677 in q.js: inspected.state === "rejected" replaced with inspected.state === "unknown"
Mutant 678 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 679 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "rejected"
Mutant 680 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 681 in q.js: fulfilled replaced with rejected
Mutant 682 in q.js: value replaced with null
Mutant 683 in q.js: value replaced with undefined
Mutant 684 in q.js: value replaced with 0
Mutant 685 in q.js: reject replaced with resolve
Mutant 686 in q.js: exception replaced with exception.message
Mutant 687 in q.js: exception replaced with exception.toString()
Mutant 688 in q.js: exception replaced with exception.stack
Mutant 689 in q.js: typeof rejected === "function" replaced with rejected !== null
Mutant 690 in q.js: typeof rejected === "function" replaced with rejected !== undefined
Mutant 691 in q.js: typeof rejected === "function" replaced with typeof rejected !== "undefined"
Mutant 692 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self, null)
Mutant 693 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self, undefined)
Mutant 694 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self, {})
Mutant 695 in q.js: exception replaced with null
Mutant 696 in q.js: exception replaced with undefined
Mutant 697 in q.js: exception replaced with 0
Mutant 698 in q.js: exception replaced with null
Mutant 699 in q.js: exception replaced with new Error("Different error message")
Mutant 700 in q.js: reject replaced with resolve
Mutant 701 in q.js: newException replaced with newException.message
Mutant 702 in q.js: newException replaced with newException.stack
Mutant 703 in q.js: newException replaced with newException.name
Mutant 704 in q.js: exception replaced with null
Mutant 705 in q.js: exception replaced with undefined
Mutant 706 in q.js: progressed replaced with progressed + 1
Mutant 707 in q.js: progressed replaced with progressed * 2
Mutant 708 in q.js: progressed replaced with progressed / 2
Mutant 709 in q.js: value replaced with null
Mutant 710 in q.js: value replaced with undefined
Mutant 711 in q.js: value replaced with "foo"
Mutant 712 in q.js: done replaced with !done
Mutant 713 in q.js: done replaced with done === false
Mutant 714 in q.js: done replaced with done !== true
Mutant 715 in q.js: deferred.resolve replaced with deferred.reject
Mutant 716 in q.js: deferred.resolve replaced with deferred.notify
Mutant 717 in q.js: deferred.resolve replaced with deferred.then
Mutant 718 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 719 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 720 in q.js: _fulfilled(value) replaced with _fulfilled(reject(value))
Mutant 721 in q.js: value replaced with null
Mutant 722 in q.js: value replaced with undefined
Mutant 723 in q.js: value replaced with 0
Mutant 724 in q.js: done replaced with !done
Mutant 725 in q.js: done replaced with done && false
Mutant 726 in q.js: done replaced with done || true
Mutant 727 in q.js: deferred.resolve replaced with deferred.reject
Mutant 728 in q.js: deferred.resolve replaced with deferred.notify
Mutant 729 in q.js: _rejected(exception) replaced with _fulfilled(exception)
Mutant 730 in q.js: _rejected(exception) replaced with _rejected(null)
Mutant 731 in q.js: _rejected(exception) replaced with _rejected(new Error("some error"))
Mutant 732 in q.js: _rejected replaced with _progressed
Mutant 733 in q.js: exception replaced with undefined
Mutant 734 in q.js: exception replaced with "error"
Mutant 735 in q.js: _progressed replaced with _rejected
Mutant 736 in q.js: _progressed replaced with _fulfilled
Mutant 737 in q.js: value replaced with null
Mutant 738 in q.js: value replaced with undefined
Mutant 739 in q.js: value replaced with {}
Mutant 740 in q.js: Q.onerror replaced with Q.onerror(e, true)
Mutant 741 in q.js: Q.onerror replaced with Q.onerror(e, false)
Mutant 742 in q.js: Q.onerror replaced with Q.onerror(e, !Q.onerror)
Mutant 743 in q.js: e replaced with e.message
Mutant 744 in q.js: e replaced with e.stack
Mutant 745 in q.js: e replaced with e.toString()
Mutant 746 in q.js: !threw replaced with threw
Mutant 747 in q.js: !threw replaced with threw === true
Mutant 748 in q.js: deferred.notify replaced with deferred.reject
Mutant 749 in q.js: newValue replaced with null
Mutant 750 in q.js: newValue replaced with undefined
Mutant 751 in q.js: newValue replaced with "foo"
Mutant 752 in q.js: callback replaced with callback.call(null)
Mutant 753 in q.js: callback replaced with callback.apply(null)
Mutant 754 in q.js: callback replaced with callback.bind(null)()
Mutant 755 in q.js: Q replaced with Q.fcall
Mutant 756 in q.js: Q replaced with Q.resolve
Mutant 757 in q.js: Q replaced with Q.reject
Mutant 758 in q.js: callback replaced with callback.fcall(value)
Mutant 759 in q.js: callback replaced with callback.call(value)
Mutant 760 in q.js: callback replaced with callback.apply(value)
Mutant 761 in q.js: callback.fcall replaced with callback.fapply
Mutant 762 in q.js: callback.fcall replaced with callback.fbind
not replacing callback.fcall with callback.fapply
not replacing callback.fcall with callback.fapply
not replacing callback.fcall with callback.fbind
not replacing callback.fcall with callback.fbind
Mutant 763 in q.js: value replaced with null
Mutant 764 in q.js: value replaced with undefined
Mutant 765 in q.js: value replaced with 0
Mutant 766 in q.js: value replaced with null
Mutant 767 in q.js: value replaced with undefined
Mutant 768 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed)
Mutant 769 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed, null)
Mutant 770 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed, undefined)
Mutant 771 in q.js: Q replaced with Q.reject
Mutant 772 in q.js: Q replaced with Q.resolve
Mutant 773 in q.js: Q replaced with Q.defer
Mutant 774 in q.js: value replaced with 0
Mutant 775 in q.js: fulfilled replaced with rejected
Mutant 776 in q.js: fulfilled replaced with undefined
Mutant 777 in q.js: fulfilled replaced with null
Mutant 778 in q.js: rejected replaced with resolved
Mutant 779 in q.js: rejected replaced with fulfilled
Mutant 780 in q.js: rejected replaced with then
Mutant 781 in q.js: progressed replaced with null
Mutant 782 in q.js: progressed replaced with undefined
Mutant 783 in q.js: progressed replaced with function () {}
Mutant 784 in q.js: function () {
  return value;
} replaced with function () {
  return;
}
Mutant 785 in q.js: function () {
  return value;
} replaced with function () {
  throw new Error();
}
Mutant 786 in q.js: function () {
  return value;
} replaced with function () {
  return null;
}
Mutant 787 in q.js: Q replaced with Q.reject
Mutant 788 in q.js: Q replaced with Q.resolve
Mutant 789 in q.js: Q replaced with Q.all
Mutant 790 in q.js: promise replaced with null
Mutant 791 in q.js: promise replaced with undefined
Mutant 792 in q.js: promise replaced with 0
Mutant 793 in q.js: value replaced with null
Mutant 794 in q.js: value replaced with undefined
Mutant 795 in q.js: value replaced with 0
Mutant 796 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 797 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error(reason);
}
Mutant 798 in q.js: function () {
  throw reason;
} replaced with function () {
  return Promise.reject(reason);
}
Mutant 799 in q.js: Q replaced with Q.reject
Mutant 800 in q.js: Q replaced with Q.resolve
Mutant 801 in q.js: Q replaced with Q.defer
Mutant 802 in q.js: promise replaced with null
Mutant 803 in q.js: promise replaced with undefined
Mutant 804 in q.js: promise replaced with new Promise()
Mutant 805 in q.js: reason replaced with null
Mutant 806 in q.js: reason replaced with undefined
Mutant 807 in q.js: reason replaced with 0
Mutant 808 in q.js: isPromise(value) replaced with !isPromise(value)
Mutant 809 in q.js: isPromise(value) replaced with isPromiseAlike(value)
Mutant 810 in q.js: isPromise(value) replaced with isFulfilled(value)
Mutant 811 in q.js: isPromise replaced with isRejected
Mutant 812 in q.js: value replaced with null
Mutant 813 in q.js: value replaced with undefined
Mutant 814 in q.js: value replaced with 0
Mutant 815 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 816 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "pending"
Mutant 817 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "fulfilled" && inspected.value === undefined
Mutant 818 in q.js: isObject replaced with isArray
Mutant 819 in q.js: isObject replaced with isFunction
Mutant 820 in q.js: isObject replaced with isString
Mutant 821 in q.js: object replaced with null
Mutant 822 in q.js: object replaced with undefined
Mutant 823 in q.js: object replaced with {}
Mutant 824 in q.js: isPromise replaced with !isPromise
Mutant 825 in q.js: isPromise replaced with isPromiseAlike
Mutant 826 in q.js: isPromise replaced with isFulfilled
Mutant 827 in q.js: object replaced with object.inspect().state === "pending"
Mutant 828 in q.js: object replaced with object.inspect().state === "fulfilled"
Mutant 829 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 830 in q.js: this.inspect replaced with this.inspect.state
Mutant 831 in q.js: this.inspect replaced with this.inspect.value
Mutant 832 in q.js: this.inspect replaced with this.inspect.reason
not replacing this.inspect with this.inspect.state
not replacing this.inspect with this.inspect.value
not replacing this.inspect with this.inspect.reason
Mutant 833 in q.js: isPromise replaced with !isPromise
Mutant 834 in q.js: isPromise replaced with isPromiseAlike
Mutant 835 in q.js: isPromise replaced with isFulfilled
Mutant 836 in q.js: object replaced with object.then()
Mutant 837 in q.js: object replaced with object.then(null)
Mutant 838 in q.js: object replaced with object.then(function () {})
Mutant 839 in q.js: this.inspect replaced with this.inspect.state
Mutant 840 in q.js: this.inspect replaced with this.inspect.value
Mutant 841 in q.js: this.inspect replaced with this.inspect.reason
not replacing this.inspect with this.inspect.state
not replacing this.inspect with this.inspect.value
not replacing this.inspect with this.inspect.reason
Mutant 842 in q.js: isPromise replaced with isPromiseAlike
Mutant 843 in q.js: isPromise replaced with !isPromise
Mutant 844 in q.js: isPromise replaced with isFulfilled
Mutant 845 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 846 in q.js: object replaced with object.inspect().state === "fulfilled"
Mutant 847 in q.js: object replaced with object.inspect().state === "pending"
Mutant 848 in q.js: this.inspect replaced with this.inspect.state
Mutant 849 in q.js: this.inspect replaced with this.inspect.fulfilled
Mutant 850 in q.js: this.inspect replaced with this.inspect.rejected
not replacing this.inspect with this.inspect.state
not replacing this.inspect with this.inspect.fulfilled
not replacing this.inspect with this.inspect.rejected
Mutant 851 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 852 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== true
Mutant 853 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 854 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections === true
Mutant 855 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== false
Mutant 856 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with array_indexOf(unhandledRejections, promise) > 0
Mutant 857 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with array_indexOf(unhandledRejections, promise) == -1
Mutant 858 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with array_indexOf(unhandledRejections, promise) < 0
Mutant 859 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, reason)
Mutant 860 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, promise)
Mutant 861 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons, promise)
Mutant 862 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 863 in q.js: array_indexOf replaced with array_includes
Mutant 864 in q.js: array_indexOf replaced with array_findIndex
Mutant 865 in q.js: unhandledRejections replaced with unhandledRejections.length
Mutant 866 in q.js: unhandledRejections replaced with unhandledRejections.includes(promise)
Mutant 867 in q.js: unhandledRejections replaced with unhandledRejections.indexOf(promise) !== -1
Mutant 868 in q.js: promise replaced with promise.then(function () {
  throw new Error("unhandled rejection");
})
Mutant 869 in q.js: promise replaced with promise.then(function () {
  return Q.reject(reason);
})
Mutant 870 in q.js: promise replaced with promise.then(function () {
  return Q.reject(new Error("unhandled rejection"));
})
Mutant 871 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("rejectionHandled", reason, promise)
Mutant 872 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, null)
Mutant 873 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "foo"
Mutant 874 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "bar"
Mutant 875 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "baz"
Mutant 876 in q.js: reason replaced with reason.message
Mutant 877 in q.js: reason replaced with reason.stack
Mutant 878 in q.js: reason replaced with reason.name
Mutant 879 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.pop
Mutant 880 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.shift
Mutant 881 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.unshift
Mutant 882 in q.js: promise replaced with null
Mutant 883 in q.js: promise replaced with undefined
Mutant 884 in q.js: promise replaced with rejection
Mutant 885 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined"
Mutant 886 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== undefined
Mutant 887 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined" && reason.stack !== undefined
Mutant 888 in q.js: reason.stack replaced with reason.message
Mutant 889 in q.js: reason.stack replaced with reason.code
Mutant 890 in q.js: reason.stack replaced with reason.name
Mutant 891 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.message
Mutant 892 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.toString()
Mutant 893 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.stack
Mutant 894 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 895 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== true
Mutant 896 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length)
Mutant 897 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.length)
Mutant 898 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons.length)
Mutant 899 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 900 in q.js: array_indexOf replaced with array_includes
Mutant 901 in q.js: array_indexOf replaced with array_findIndex
Mutant 902 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 903 in q.js: unhandledRejections replaced with unhandledRejections.concat()
Mutant 904 in q.js: unhandledRejections replaced with unhandledRejections.filter(function (rejection) {
  return rejection === promise;
})
Mutant 905 in q.js: promise replaced with promise.then(function () {})
Mutant 906 in q.js: promise replaced with promise.catch(function () {})
Mutant 907 in q.js: promise replaced with promise.finally(function () {})
Mutant 908 in q.js: at !== -1 replaced with at === -1
Mutant 909 in q.js: at !== -1 replaced with at > -1
Mutant 910 in q.js: at !== -1 replaced with at < -1
Mutant 911 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.indexOf(promise))
Mutant 912 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.includes(promise))
Mutant 913 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.findIndex(p => p === promise))
Mutant 914 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 915 in q.js: array_indexOf replaced with array_includes
Mutant 916 in q.js: array_indexOf replaced with array_findIndex
Mutant 917 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 918 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.length
Mutant 919 in q.js: reportedUnhandledRejections replaced with unhandledReasons.length
Mutant 920 in q.js: atReport !== -1 replaced with atReport > -1
Mutant 921 in q.js: atReport !== -1 replaced with reportedUnhandledRejections.includes(promise)
Mutant 922 in q.js: atReport !== -1 replaced with unhandledRejections.includes(promise)
Mutant 923 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at])
Mutant 924 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", reason, promise)
Mutant 925 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at])
Mutant 926 in q.js: "rejectionHandled" replaced with "rejectionHandled" + 1
Mutant 927 in q.js: "rejectionHandled" replaced with "rejectionHandled" + "1"
Mutant 928 in q.js: "rejectionHandled" replaced with "rejectionHandled" + "1" + "2"
Mutant 929 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 930 in q.js: unhandledReasons[at] replaced with unhandledReasons[at - 1]
Mutant 931 in q.js: unhandledReasons[at] replaced with unhandledReasons[at] = "new reason"
Mutant 932 in q.js: promise replaced with null
Mutant 933 in q.js: promise replaced with undefined
Mutant 934 in q.js: promise replaced with promise.then(function () {})
Mutant 935 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 0)
Mutant 936 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 2)
Mutant 937 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, reportedUnhandledRejections.length - 1)
Mutant 938 in q.js: reportedUnhandledRejections.splice replaced with reportedUnhandledRejections.length = 0
Mutant 939 in q.js: atReport replaced with atReport + 1
Mutant 940 in q.js: atReport replaced with atReport - 1
Mutant 941 in q.js: atReport replaced with atReport.length
Mutant 942 in q.js: 1 replaced with 0
Mutant 943 in q.js: 1 replaced with -1
Mutant 944 in q.js: 1 replaced with 2
Mutant 945 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 0)
Mutant 946 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 2)
Mutant 947 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, -1)
Mutant 948 in q.js: at replaced with at + 1
Mutant 949 in q.js: at replaced with at - 1
Mutant 950 in q.js: at replaced with at + 2
Mutant 951 in q.js: 1 replaced with 0
Mutant 952 in q.js: 1 replaced with -1
Mutant 953 in q.js: 1 replaced with array.length
Mutant 954 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 0)
Mutant 955 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 2)
Mutant 956 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, -1)
Mutant 957 in q.js: at replaced with at - 1
Mutant 958 in q.js: at replaced with at + 1
Mutant 959 in q.js: at replaced with at * 2
Mutant 960 in q.js: 1 replaced with 0
Mutant 961 in q.js: 1 replaced with -1
Mutant 962 in q.js: 1 replaced with unhandledReasons.length
Mutant 963 in q.js: resetUnhandledRejections replaced with unhandledRejections.length = 0
Mutant 964 in q.js: resetUnhandledRejections replaced with unhandledReasons.length = 0
Mutant 965 in q.js: rejected replaced with !rejected
Mutant 966 in q.js: rejected replaced with rejected && false
Mutant 967 in q.js: rejected replaced with rejected || true
Mutant 968 in q.js: this replaced with null
Mutant 969 in q.js: this replaced with undefined
Mutant 970 in q.js: this replaced with 0
Mutant 971 in q.js: reason replaced with null
Mutant 972 in q.js: reason replaced with undefined
Mutant 973 in q.js: reason replaced with 0
Mutant 974 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, null)
Mutant 975 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, undefined)
Mutant 976 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, "foo")
Mutant 977 in q.js: trackRejection replaced with untrackRejection
Mutant 978 in q.js: rejection replaced with null
Mutant 979 in q.js: rejection replaced with undefined
Mutant 980 in q.js: rejection replaced with 0
Mutant 981 in q.js: reason replaced with null
Mutant 982 in q.js: reason replaced with undefined
Mutant 983 in q.js: reason replaced with "some string"
Mutant 984 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 985 in q.js: name === null || name === void 0 replaced with name === "undefined"
Mutant 986 in q.js: name === null || name === void 0 replaced with name === void 0
Mutant 987 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 988 in q.js: value.apply(void 0, args) replaced with value.apply(args, null)
Mutant 989 in q.js: value.apply(void 0, args) replaced with value.apply(args.slice())
Mutant 990 in q.js: value.apply replaced with value.call
Mutant 991 in q.js: value.apply replaced with value.bind
Mutant 992 in q.js: value.apply replaced with value.toString
Mutant 993 in q.js: void 0 replaced with null
Mutant 994 in q.js: void 0 replaced with undefined
Mutant 995 in q.js: void 0 replaced with 0
Mutant 996 in q.js: args replaced with args.slice()
Mutant 997 in q.js: args replaced with args.concat()
Mutant 998 in q.js: args replaced with args.map(function (arg) {
  return arg * 2;
})
Mutant 999 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.slice())
Mutant 1000 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.concat())
Mutant 1001 in q.js: value[name].apply replaced with value[name].call
Mutant 1002 in q.js: value[name].apply replaced with value[name].bind
Mutant 1003 in q.js: value replaced with null
Mutant 1004 in q.js: value replaced with undefined
Mutant 1005 in q.js: value replaced with {}
Mutant 1006 in q.js: args replaced with args[0]
Mutant 1007 in q.js: args replaced with args.slice(1)
Mutant 1008 in q.js: args replaced with args.concat(["extra argument"])
Mutant 1009 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.slice())
Mutant 1010 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.concat())
Mutant 1011 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.map())
Mutant 1012 in q.js: value.apply replaced with value.call
Mutant 1013 in q.js: value.apply replaced with value.bind
Mutant 1014 in q.js: value.apply replaced with value.toString
Mutant 1015 in q.js: thisp replaced with null
Mutant 1016 in q.js: thisp replaced with undefined
Mutant 1017 in q.js: thisp replaced with this
Mutant 1018 in q.js: args replaced with args.slice()
Mutant 1019 in q.js: args replaced with args.concat()
Mutant 1020 in q.js: args replaced with args.map(function (x) {
  return x * 2;
})
Mutant 1021 in q.js: object_keys replaced with object_values
Mutant 1022 in q.js: object_keys replaced with Object.values
Mutant 1023 in q.js: object_keys replaced with Object.keys
Mutant 1024 in q.js: value replaced with null
Mutant 1025 in q.js: value replaced with undefined
Mutant 1026 in q.js: value replaced with []
Mutant 1027 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.reject("error"))
Mutant 1028 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.notify("progress"))
Mutant 1029 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve(null))
Mutant 1030 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1031 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1032 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1033 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1034 in q.js: deferred.reject replaced with deferred.notify
Mutant 1035 in q.js: deferred.reject replaced with deferred.cancel
Mutant 1036 in q.js: deferred.notify replaced with deferred.reject
Mutant 1037 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1038 in q.js: deferred.notify replaced with deferred.progress
Mutant 1039 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1040 in q.js: deferred.reject replaced with deferred.notify
Mutant 1041 in q.js: deferred.reject replaced with deferred.cancel
Mutant 1042 in q.js: exception replaced with null
Mutant 1043 in q.js: exception replaced with undefined
Mutant 1044 in q.js: exception replaced with new Error()
Mutant 1045 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[0])
Mutant 1046 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args.slice(1))
Mutant 1047 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args.concat(args[0]))
Mutant 1048 in q.js: object replaced with null
Mutant 1049 in q.js: object replaced with undefined
Mutant 1050 in q.js: object replaced with {}
Mutant 1051 in q.js: op replaced with op + 1
Mutant 1052 in q.js: op replaced with op - 1
Mutant 1053 in q.js: op replaced with op * 2
Mutant 1054 in q.js: args replaced with null
Mutant 1055 in q.js: args replaced with []
Mutant 1056 in q.js: args replaced with undefined
Mutant 1057 in q.js: Q replaced with Q.reject
Mutant 1058 in q.js: Q replaced with Q.fulfill
Mutant 1059 in q.js: object replaced with null
Mutant 1060 in q.js: object replaced with undefined
Mutant 1061 in q.js: object replaced with {}
Mutant 1062 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 1063 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled, fulfilled)
Mutant 1064 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, rejected)
Mutant 1065 in q.js: value replaced with null
Mutant 1066 in q.js: value replaced with undefined
Mutant 1067 in q.js: value replaced with false
Mutant 1068 in q.js: fulfilled replaced with rejected
Mutant 1069 in q.js: fulfilled replaced with undefined
Mutant 1070 in q.js: fulfilled replaced with null
Mutant 1071 in q.js: rejected replaced with fulfilled
Mutant 1072 in q.js: rejected replaced with Q.reject(new Error("rejected"))
Mutant 1073 in q.js: rejected replaced with Q.resolve(rejection)
Mutant 1074 in q.js: this.all replaced with this.then
Mutant 1075 in q.js: this.all replaced with this.catch
Mutant 1076 in q.js: this.all replaced with this.finally
not replacing this.all with this.then
not replacing this.all with this.then
not replacing this.all with this.catch
not replacing this.all with this.catch
not replacing this.all with this.finally
not replacing this.all with this.finally
Mutant 1077 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null, array)
Mutant 1078 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(undefined, array)
Mutant 1079 in q.js: fulfilled.apply replaced with rejected.apply
Mutant 1080 in q.js: fulfilled.apply replaced with fulfilled.call
Mutant 1081 in q.js: fulfilled.apply replaced with fulfilled.bind
Mutant 1082 in q.js: void 0 replaced with null
Mutant 1083 in q.js: void 0 replaced with undefined
Mutant 1084 in q.js: void 0 replaced with 0
Mutant 1085 in q.js: array replaced with array.slice()
Mutant 1086 in q.js: array replaced with array.concat()
Mutant 1087 in q.js: array replaced with array.map(function (x) {
  return x * 2;
})
Mutant 1088 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 1089 in q.js: typeof StopIteration === "undefined" replaced with StopIteration !== undefined
Mutant 1090 in q.js: typeof StopIteration === "undefined" replaced with StopIteration !== null
Mutant 1091 in q.js: arg replaced with null
Mutant 1092 in q.js: arg replaced with undefined
Mutant 1093 in q.js: arg replaced with "foo"
Mutant 1094 in q.js: reject replaced with resolve
Mutant 1095 in q.js: reject replaced with Q.reject
Mutant 1096 in q.js: exception replaced with exception.message
Mutant 1097 in q.js: exception replaced with exception.stack
Mutant 1098 in q.js: exception replaced with exception.name
Mutant 1099 in q.js: result.done replaced with result.value
Mutant 1100 in q.js: result.done replaced with result.value === undefined
Mutant 1101 in q.js: result.done replaced with result.value !== undefined
Mutant 1102 in q.js: result.value replaced with result.value + 1
Mutant 1103 in q.js: result.value replaced with result.value - 1
Mutant 1104 in q.js: result.value replaced with result.value * 2
Mutant 1105 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, callback)
Mutant 1106 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback, callback)
Mutant 1107 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, errback)
Mutant 1108 in q.js: result.value replaced with result.value + 1
Mutant 1109 in q.js: result.value replaced with result.value * 2
Mutant 1110 in q.js: result.value replaced with result.value - 1
Mutant 1111 in q.js: callback replaced with reject
Mutant 1112 in q.js: callback replaced with Q(undefined)
Mutant 1113 in q.js: errback replaced with reject
Mutant 1114 in q.js: errback replaced with resolve
Mutant 1115 in q.js: arg replaced with null
Mutant 1116 in q.js: arg replaced with undefined
Mutant 1117 in q.js: arg replaced with "foo"
Mutant 1118 in q.js: isStopIteration(exception) replaced with exception instanceof StopIteration
Mutant 1119 in q.js: isStopIteration(exception) replaced with exception.name === "StopIteration"
Mutant 1120 in q.js: isStopIteration(exception) replaced with exception.constructor.name === "StopIteration"
Mutant 1121 in q.js: isStopIteration replaced with !isStopIteration
Mutant 1122 in q.js: isStopIteration replaced with isStopIteration && false
Mutant 1123 in q.js: exception replaced with exception.value
Mutant 1124 in q.js: exception replaced with exception.message
Mutant 1125 in q.js: exception.value replaced with exception.message
Mutant 1126 in q.js: exception.value replaced with exception.stack
Mutant 1127 in q.js: exception.value replaced with exception.name
Mutant 1128 in q.js: reject replaced with resolve
Mutant 1129 in q.js: reject replaced with Q.reject
Mutant 1130 in q.js: exception replaced with exception.message
Mutant 1131 in q.js: exception replaced with exception.stack
Mutant 1132 in q.js: exception replaced with exception.name
Mutant 1133 in q.js: when(result, callback, errback) replaced with when(result.value, callback, errback)
Mutant 1134 in q.js: when(result, callback, errback) replaced with when(result, callback, errback.bind(null, result))
Mutant 1135 in q.js: when(result, callback, errback) replaced with when(result, callback.bind(null, result), errback)
Mutant 1136 in q.js: when replaced with Q.reject
Mutant 1137 in q.js: when replaced with Q.resolve
Mutant 1138 in q.js: when replaced with Q.defer
Mutant 1139 in q.js: result replaced with result.value
Mutant 1140 in q.js: result replaced with result.then(function (value) {
  return value;
})
Mutant 1141 in q.js: result replaced with result.catch(function (error) {
  throw error;
})
Mutant 1142 in q.js: callback replaced with errback
Mutant 1143 in q.js: callback replaced with reject
Mutant 1144 in q.js: callback replaced with resolve
Mutant 1145 in q.js: errback replaced with null
Mutant 1146 in q.js: errback replaced with undefined
Mutant 1147 in q.js: errback replaced with function () {}
Mutant 1148 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1149 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(undefined)
Mutant 1150 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply({})
Mutant 1151 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 1152 in q.js: makeGenerator.apply replaced with makeGenerator.bind
Mutant 1153 in q.js: this replaced with null
Mutant 1154 in q.js: this replaced with undefined
Mutant 1155 in q.js: this replaced with "foo"
Mutant 1156 in q.js: arguments replaced with null
Mutant 1157 in q.js: arguments replaced with undefined
Mutant 1158 in q.js: arguments replaced with []
Mutant 1159 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "throw")
Mutant 1160 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "return")
Mutant 1161 in q.js: continuer.bind replaced with continuer.call
Mutant 1162 in q.js: continuer.bind replaced with continuer.apply
Mutant 1163 in q.js: continuer replaced with continuer.bind(null, "next")
Mutant 1164 in q.js: continuer replaced with continuer.bind(generator, "next")
Mutant 1165 in q.js: continuer replaced with continuer.bind(continuer, "next")
Mutant 1166 in q.js: "next" replaced with "throw"
Mutant 1167 in q.js: "next" replaced with "return"
Mutant 1168 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw"))
Mutant 1169 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(generator, "throw"))
Mutant 1170 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(errback.bind(continuer, "throw"))
Mutant 1171 in q.js: continuer replaced with continuer.bind(null, "throw")
Mutant 1172 in q.js: continuer replaced with continuer.bind(undefined, "throw")
Mutant 1173 in q.js: continuer replaced with continuer.bind(void 0, "throw")
Mutant 1174 in q.js: "throw" replaced with "send"
Mutant 1175 in q.js: "throw" replaced with "next"
Mutant 1176 in q.js: "throw" replaced with "return"
Mutant 1177 in q.js: callback replaced with errback
Mutant 1178 in q.js: callback replaced with reject
Mutant 1179 in q.js: Q.done replaced with Q.fail
Mutant 1180 in q.js: Q.done replaced with Q.reject
Mutant 1181 in q.js: Q.done replaced with Q.resolve
Mutant 1182 in q.js: makeGenerator replaced with makeGenerator.bind(this)
Mutant 1183 in q.js: makeGenerator replaced with makeGenerator.call(this)
Mutant 1184 in q.js: makeGenerator replaced with makeGenerator.apply(this)
Mutant 1185 in q.js: all replaced with none
Mutant 1186 in q.js: all replaced with any
Mutant 1187 in q.js: all replaced with some
Mutant 1188 in q.js: arguments replaced with [1, 2, 3]
Mutant 1189 in q.js: arguments replaced with "hello"
Mutant 1190 in q.js: arguments replaced with null
Mutant 1191 in q.js: callback.apply(self, args) replaced with callback.apply(self, args.slice(1))
Mutant 1192 in q.js: callback.apply(self, args) replaced with callback.apply(self, args.concat(args))
Mutant 1193 in q.js: callback.apply(self, args) replaced with callback.apply(self, args.reverse())
Mutant 1194 in q.js: callback.apply replaced with callback.call
Mutant 1195 in q.js: callback.apply replaced with callback.bind
Mutant 1196 in q.js: self replaced with null
Mutant 1197 in q.js: self replaced with undefined
Mutant 1198 in q.js: self replaced with "foo"
Mutant 1199 in q.js: args replaced with args.slice(1)
Mutant 1200 in q.js: args replaced with args.concat([1])
Mutant 1201 in q.js: args replaced with args.map(function (x) {
  return x + 1;
})
Mutant 1202 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.slice(1))
Mutant 1203 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.concat([1]))
Mutant 1204 in q.js: Q replaced with Q.reject
Mutant 1205 in q.js: Q replaced with Q.deferred
Mutant 1206 in q.js: object replaced with null
Mutant 1207 in q.js: object replaced with undefined
Mutant 1208 in q.js: object replaced with {}
Mutant 1209 in q.js: op replaced with op + 1
Mutant 1210 in q.js: op replaced with op - 1
Mutant 1211 in q.js: op replaced with op * 2
Mutant 1212 in q.js: args replaced with args[0]
Mutant 1213 in q.js: args replaced with args.slice(1)
Mutant 1214 in q.js: args replaced with args.concat(args[0])
Mutant 1215 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1216 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.notify, op, args)
Mutant 1217 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve(op, args))
Mutant 1218 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 1219 in q.js: self.promiseDispatch replaced with deferred.notify
Mutant 1220 in q.js: self.promiseDispatch replaced with deferred.resolve
Mutant 1221 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1222 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1223 in q.js: deferred.resolve replaced with deferred.promise
Mutant 1224 in q.js: op replaced with op + 1
Mutant 1225 in q.js: op replaced with op - 1
Mutant 1226 in q.js: op replaced with op * 2
Mutant 1227 in q.js: args replaced with null
Mutant 1228 in q.js: args replaced with undefined
Mutant 1229 in q.js: args replaced with []
Mutant 1230 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1231 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("post", [key, []])
Mutant 1232 in q.js: Q replaced with Q.reject
Mutant 1233 in q.js: object replaced with null
Mutant 1234 in q.js: object replaced with {}
Mutant 1235 in q.js: "get" replaced with "set"
Mutant 1236 in q.js: "get" replaced with "post"
Mutant 1237 in q.js: [key] replaced with [key + 1]
Mutant 1238 in q.js: [key] replaced with [key - 1]
Mutant 1239 in q.js: [key] replaced with ["key"]
Mutant 1240 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key])
Mutant 1241 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key])
Mutant 1242 in q.js: "get" replaced with "set"
Mutant 1243 in q.js: "get" replaced with "post"
Mutant 1244 in q.js: [key] replaced with [key + 1]
Mutant 1245 in q.js: [key] replaced with [key - 1]
Mutant 1246 in q.js: [key] replaced with [key * 2]
Mutant 1247 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, key])
Mutant 1248 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, value + 1])
Mutant 1249 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, value * 2])
Mutant 1250 in q.js: Q replaced with Q.reject
Mutant 1251 in q.js: Q replaced with Q.resolve
Mutant 1252 in q.js: Q replaced with Q.when
Mutant 1253 in q.js: object replaced with null
Mutant 1254 in q.js: object replaced with undefined
Mutant 1255 in q.js: object replaced with Q.reject(new Error("error"))
Mutant 1256 in q.js: "set" replaced with "get"
Mutant 1257 in q.js: "set" replaced with "post"
Mutant 1258 in q.js: [key, value] replaced with [value, key]
Mutant 1259 in q.js: [key, value] replaced with [key, value, 1]
Mutant 1260 in q.js: [key, value] replaced with [key, value + 1]
Mutant 1261 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value + 1])
Mutant 1262 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key + 1, value])
Mutant 1263 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value * 2])
Mutant 1264 in q.js: "set" replaced with "setValue"
Mutant 1265 in q.js: "set" replaced with "get"
Mutant 1266 in q.js: "set" replaced with "set" + "Value"
Mutant 1267 in q.js: [key, value] replaced with [value, key]
Mutant 1268 in q.js: [key, value] replaced with [key, value, null]
Mutant 1269 in q.js: [key, value] replaced with [key, value, undefined]
Mutant 1270 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1271 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, null])
Mutant 1272 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, ""])
Mutant 1273 in q.js: Q replaced with Q.reject
Mutant 1274 in q.js: object replaced with {}
Mutant 1275 in q.js: "delete" replaced with "set"
Mutant 1276 in q.js: "delete" replaced with "get"
Mutant 1277 in q.js: "delete" replaced with "post"
Mutant 1278 in q.js: [key] replaced with [key, value]
Mutant 1279 in q.js: [key] replaced with [key, "value"]
Mutant 1280 in q.js: [key] replaced with [key, undefined]
Mutant 1281 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, undefined])
Mutant 1282 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("get", [key])
Mutant 1283 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("post", [key, undefined])
Mutant 1284 in q.js: this.dispatch replaced with Promise.prototype.dispatch
Mutant 1285 in q.js: this.dispatch replaced with Q.dispatch
Mutant 1286 in q.js: "delete" replaced with "set"
Mutant 1287 in q.js: "delete" replaced with "get"
Mutant 1288 in q.js: "delete" replaced with "post"
Mutant 1289 in q.js: [key] replaced with [key, key]
Mutant 1290 in q.js: [key] replaced with [key, undefined]
Mutant 1291 in q.js: [key] replaced with [key, "key"]
Mutant 1292 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [args, name])
Mutant 1293 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args, 1])
Mutant 1294 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args, "foo"])
Mutant 1295 in q.js: Q replaced with Q.reject
Mutant 1296 in q.js: Q replaced with Q.resolve
Mutant 1297 in q.js: Q replaced with Q.all
Mutant 1298 in q.js: object replaced with null
Mutant 1299 in q.js: object replaced with undefined
Mutant 1300 in q.js: object replaced with {}
Mutant 1301 in q.js: "post" replaced with "get"
Mutant 1302 in q.js: "post" replaced with "set"
Mutant 1303 in q.js: [name, args] replaced with [name, args[0]]
Mutant 1304 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1305 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [args, name])
Mutant 1306 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.reverse()])
Mutant 1307 in q.js: "post" replaced with "put"
Mutant 1308 in q.js: "post" replaced with "get"
Mutant 1309 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1310 in q.js: [name, args] replaced with [name, args.concat(args)]
Mutant 1311 in q.js: [name, args] replaced with [name, args.reverse()]
Mutant 1312 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1313 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1314 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 4)])
Mutant 1315 in q.js: Q replaced with Q.reject
Mutant 1316 in q.js: Q replaced with Q.resolve
Mutant 1317 in q.js: Q replaced with Q.defer
Mutant 1318 in q.js: object replaced with null
Mutant 1319 in q.js: object replaced with undefined
Mutant 1320 in q.js: object replaced with {}
Mutant 1321 in q.js: "post" replaced with "get"
Mutant 1322 in q.js: "post" replaced with "set"
Mutant 1323 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1324 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 3)]
Mutant 1325 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 2, 1)]
Mutant 1326 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 3))
Mutant 1327 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 0, 2))
Mutant 1328 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1329 in q.js: 2 replaced with 0
Mutant 1330 in q.js: 2 replaced with -1
Mutant 1331 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1332 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 1, 2)])
Mutant 1333 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 1, -1)])
Mutant 1334 in q.js: "post" replaced with "put"
Mutant 1335 in q.js: "post" replaced with "patch"
Mutant 1336 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1337 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 1, 2)]
Mutant 1338 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 1, arguments.length - 1)]
Mutant 1339 in q.js: array_slice(arguments, 1) replaced with array_slice([arguments[1], arguments[2]])
Mutant 1340 in q.js: array_slice(arguments, 1) replaced with array_slice([arguments[1], arguments[3]])
Mutant 1341 in q.js: arguments replaced with null
Mutant 1342 in q.js: arguments replaced with undefined
Mutant 1343 in q.js: arguments replaced with []
Mutant 1344 in q.js: 1 replaced with 3
Mutant 1345 in q.js: 1 replaced with 4
Mutant 1346 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [void 0, args])
Mutant 1347 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, [args]])
Mutant 1348 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, args.concat()])
Mutant 1349 in q.js: Q replaced with Q.reject
Mutant 1350 in q.js: object replaced with null
Mutant 1351 in q.js: object replaced with undefined
Mutant 1352 in q.js: object replaced with {}
Mutant 1353 in q.js: "apply" replaced with "call"
Mutant 1354 in q.js: "apply" replaced with "bind"
Mutant 1355 in q.js: "apply" replaced with "concat"
Mutant 1356 in q.js: [void 0, args] replaced with [void 0, args, 1]
Mutant 1357 in q.js: [void 0, args] replaced with [void 0, args, "foo"]
Mutant 1358 in q.js: [void 0, args] replaced with [void 0, args, function () {
  return 1;
}]
Mutant 1359 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [null, args])
Mutant 1360 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [undefined, args])
Mutant 1361 in q.js: "apply" replaced with "call"
Mutant 1362 in q.js: "apply" replaced with "bind"
Mutant 1363 in q.js: "apply" replaced with "apply" + "call"
Mutant 1364 in q.js: [void 0, args] replaced with [void 0, args, 0]
Mutant 1365 in q.js: [void 0, args] replaced with [void 0, args, "foo"]
Mutant 1366 in q.js: [void 0, args] replaced with [void 0, args, function () {
  return "bar";
}]
Mutant 1367 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [this, array_slice(arguments, 1)])
Mutant 1368 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1369 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)])
Mutant 1370 in q.js: object replaced with null
Mutant 1371 in q.js: object replaced with undefined
Mutant 1372 in q.js: object replaced with {}
Mutant 1373 in q.js: "apply" replaced with "call"
Mutant 1374 in q.js: "apply" replaced with "bind"
Mutant 1375 in q.js: "apply" replaced with "concat"
Mutant 1376 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1377 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 1, 2)]
Mutant 1378 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 1, -1)]
Mutant 1379 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1380 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, -1)
Mutant 1381 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1382 in q.js: 1 replaced with 3
Mutant 1383 in q.js: 1 replaced with 4
Mutant 1384 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1385 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1386 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 3)])
Mutant 1387 in q.js: "apply" replaced with "call"
Mutant 1388 in q.js: "apply" replaced with "bind"
Mutant 1389 in q.js: "apply" replaced with "concat"
Mutant 1390 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1391 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1392 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 3)]
Mutant 1393 in q.js: arguments replaced with array_slice(arguments, 1, 2)
Mutant 1394 in q.js: arguments replaced with array_slice(arguments, 1, 3)
Mutant 1395 in q.js: object replaced with null
Mutant 1396 in q.js: object replaced with undefined
Mutant 1397 in q.js: object replaced with {}
Mutant 1398 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1399 in q.js: array_slice(arguments, 1) replaced with array_slice(args, 1)
Mutant 1400 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1, 2))
Mutant 1401 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1402 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1403 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1404 in q.js: 1 replaced with 0
Mutant 1405 in q.js: 1 replaced with -1
Mutant 1406 in q.js: 1 replaced with Math.floor(args.length / 2)
Mutant 1407 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1408 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1409 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1410 in q.js: arguments replaced with array_slice(arguments, 0, 1)
Mutant 1411 in q.js: arguments replaced with args.slice(1)
Mutant 1412 in q.js: arguments replaced with args.slice(0, -1)
Mutant 1413 in q.js: arguments replaced with args.slice(1, -1)
Mutant 1414 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1415 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1416 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1417 in q.js: arguments replaced with null
Mutant 1418 in q.js: arguments replaced with undefined
Mutant 1419 in q.js: arguments replaced with []
Mutant 1420 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1421 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("length", [])
Mutant 1422 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("push", [])
Mutant 1423 in q.js: object replaced with object.foo
Mutant 1424 in q.js: object replaced with object[0]
Mutant 1425 in q.js: object replaced with object.bar
Mutant 1426 in q.js: "keys" replaced with "values"
Mutant 1427 in q.js: "keys" replaced with "length"
Mutant 1428 in q.js: "keys" replaced with "toString"
Mutant 1429 in q.js: [] replaced with [1]
Mutant 1430 in q.js: [] replaced with [undefined]
Mutant 1431 in q.js: [] replaced with [null]
Mutant 1432 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1433 in q.js: this.dispatch("keys", []) replaced with this.dispatch("length", [])
Mutant 1434 in q.js: this.dispatch("keys", []) replaced with this.dispatch("toString", [])
Mutant 1435 in q.js: "keys" replaced with "values"
Mutant 1436 in q.js: "keys" replaced with "length"
Mutant 1437 in q.js: "keys" replaced with "indexOf"
Mutant 1438 in q.js: [] replaced with [1, 2, 3]
Mutant 1439 in q.js: [] replaced with ["a", "b", "c"]
Mutant 1440 in q.js: [] replaced with [null, null, null]
Mutant 1441 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "rejected"
Mutant 1442 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().value === undefined
Mutant 1443 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state !== "fulfilled"
Mutant 1444 in q.js: isPromise replaced with !isPromise
Mutant 1445 in q.js: isPromise replaced with isPromise && false
Mutant 1446 in q.js: isPromise replaced with isPromise || true
Mutant 1447 in q.js: promise replaced with promise.then(function () {})
Mutant 1448 in q.js: promise replaced with promise.catch(function () {})
Mutant 1449 in q.js: promise replaced with promise.finally(function () {})
Mutant 1450 in q.js: promise.inspect replaced with promise.inspect.state
Mutant 1451 in q.js: promise.inspect replaced with promise.inspect.value
Mutant 1452 in q.js: promise.inspect replaced with promise.inspect.reason
Mutant 1453 in q.js: --pendingCount === 0 replaced with pendingCount < 0
Mutant 1454 in q.js: --pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1455 in q.js: --pendingCount === 0 replaced with pendingCount === 0 && promises.length > 0
Mutant 1456 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1457 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1458 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1459 in q.js: promises replaced with promises.slice(1)
Mutant 1460 in q.js: promises replaced with promises.concat([Q.reject()])
Mutant 1461 in q.js: promises replaced with promises.map(function (promise) {
  return Q.reject(promise.inspect().value);
})
Mutant 1462 in q.js: deferred.notify replaced with deferred.reject
Mutant 1463 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1464 in q.js: deferred.notify replaced with deferred.progress
Mutant 1465 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress + 1
}
Mutant 1466 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress - 1
}
Mutant 1467 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress * 2
}
Mutant 1468 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1469 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1470 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1471 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1472 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1473 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1474 in q.js: promises replaced with []
Mutant 1475 in q.js: promises replaced with [null]
Mutant 1476 in q.js: promises replaced with [undefined]
Mutant 1477 in q.js: all replaced with any
Mutant 1478 in q.js: all replaced with allSettled
Mutant 1479 in q.js: all replaced with allResolved
Mutant 1480 in q.js: this replaced with null
Mutant 1481 in q.js: this replaced with undefined
Mutant 1482 in q.js: this replaced with []
Mutant 1483 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1484 in q.js: promises.length === 0 replaced with promises.length > 0
Mutant 1485 in q.js: promises.length === 0 replaced with promises.length === 1
Mutant 1486 in q.js: Q.resolve replaced with Q.reject
Mutant 1487 in q.js: Q.resolve replaced with Q.defer
Mutant 1488 in q.js: Q.resolve replaced with Q.when
Mutant 1489 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected, onProgress))
Mutant 1490 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected, function () {}))
Mutant 1491 in q.js: when replaced with when.reject
Mutant 1492 in q.js: when replaced with when.resolve
Mutant 1493 in q.js: when replaced with when.all
Mutant 1494 in q.js: promise replaced with promise.then(onFulfilled, onRejected)
Mutant 1495 in q.js: promise replaced with promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected)
Mutant 1496 in q.js: promise replaced with promise.then(onFulfilled, onRejected).then(onRejected, onFulfilled)
Mutant 1497 in q.js: onFulfilled replaced with onRejected
Mutant 1498 in q.js: onFulfilled replaced with onProgress
Mutant 1499 in q.js: onFulfilled replaced with noop
Mutant 1500 in q.js: onRejected replaced with onFulfilled
Mutant 1501 in q.js: onRejected replaced with function () {}
Mutant 1502 in q.js: onProgress replaced with onRejected
Mutant 1503 in q.js: onProgress replaced with onFulfilled
Mutant 1504 in q.js: onProgress replaced with noop
Mutant 1505 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1506 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1507 in q.js: deferred.resolve replaced with deferred.promise
Mutant 1508 in q.js: result replaced with promise
Mutant 1509 in q.js: result replaced with index
Mutant 1510 in q.js: result replaced with promise.value
Mutant 1511 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1512 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1513 in q.js: pendingCount === 0 replaced with pendingCount !== 0
Mutant 1514 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1515 in q.js: deferred.reject replaced with deferred.notify
Mutant 1516 in q.js: deferred.reject replaced with deferred.inspect
Mutant 1517 in q.js: rejection replaced with null
Mutant 1518 in q.js: rejection replaced with undefined
Mutant 1519 in q.js: rejection replaced with "error"
Mutant 1520 in q.js: any replaced with all
Mutant 1521 in q.js: any replaced with none
Mutant 1522 in q.js: any replaced with some
Mutant 1523 in q.js: this replaced with null
Mutant 1524 in q.js: this replaced with undefined
Mutant 1525 in q.js: this replaced with []
Mutant 1526 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allSettled, "allSettled", "allResolved")
Mutant 1527 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allSettled", "allResolved")
Mutant 1528 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allSettled, "allResolved", "allSettled")
Mutant 1529 in q.js: allResolved replaced with allSettled
Mutant 1530 in q.js: allResolved replaced with any
Mutant 1531 in q.js: "allResolved" replaced with "allSettled"
Mutant 1532 in q.js: "allResolved" replaced with "any"
Mutant 1533 in q.js: "allResolved" replaced with "all"
Mutant 1534 in q.js: "allSettled" replaced with "all"
Mutant 1535 in q.js: "allSettled" replaced with "any"
Mutant 1536 in q.js: "allSettled" replaced with "none"
Mutant 1537 in q.js: array_map(promises, Q) replaced with array_map(promises, promises)
Mutant 1538 in q.js: array_map(promises, Q) replaced with array_map(promises, undefined)
Mutant 1539 in q.js: array_map replaced with array_filter
Mutant 1540 in q.js: array_map replaced with array_reduce
Mutant 1541 in q.js: array_map replaced with array_forEach
Mutant 1542 in q.js: promises replaced with promises.reverse()
Mutant 1543 in q.js: promises replaced with promises.slice(1)
Mutant 1544 in q.js: promises replaced with promises.concat([Q.resolve()])
Mutant 1545 in q.js: Q replaced with Q.reject
Mutant 1546 in q.js: Q replaced with Q.defer
Mutant 1547 in q.js: Q replaced with Q.when
Mutant 1548 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop))
Mutant 1549 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop))
Mutant 1550 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop).then(noop, noop))
Mutant 1551 in q.js: promise replaced with promise.then(null, noop)
Mutant 1552 in q.js: promise replaced with promise.then(noop, null)
Mutant 1553 in q.js: promise replaced with promise.then(noop, noop)
Mutant 1554 in q.js: allResolved replaced with allRejected
Mutant 1555 in q.js: allResolved replaced with allSettled
Mutant 1556 in q.js: this replaced with null
Mutant 1557 in q.js: this replaced with undefined
Mutant 1558 in q.js: this replaced with 0
Mutant 1559 in q.js: Q replaced with Q.reject
Mutant 1560 in q.js: Q replaced with Q.resolve
Mutant 1561 in q.js: Q replaced with Q.defer
Mutant 1562 in q.js: promises replaced with promises.reverse()
Mutant 1563 in q.js: promises replaced with promises.slice(1)
Mutant 1564 in q.js: promises replaced with promises.concat(Q.reject())
Mutant 1565 in q.js: regardless replaced with rejected
Mutant 1566 in q.js: regardless replaced with fulfilled
Mutant 1567 in q.js: regardless replaced with noop
Mutant 1568 in q.js: regardless replaced with onRejected
Mutant 1569 in q.js: regardless replaced with onFulfilled
Mutant 1570 in q.js: regardless replaced with onProgress
Mutant 1571 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(null, rejected)
Mutant 1572 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(undefined, rejected)
Mutant 1573 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(rejected, null)
Mutant 1574 in q.js: object replaced with 0
Mutant 1575 in q.js: void 0 replaced with null
Mutant 1576 in q.js: void 0 replaced with undefined
Mutant 1577 in q.js: rejected replaced with function (err) {
  throw err;
}
Mutant 1578 in q.js: rejected replaced with function (err) {
  return err;
}
Mutant 1579 in q.js: rejected replaced with function (err) {
  return Q.reject(err);
}
Mutant 1580 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1581 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, rejected)
Mutant 1582 in q.js: this.then(void 0, rejected) replaced with this.then(rejected, null)
Mutant 1583 in q.js: void 0 replaced with null
Mutant 1584 in q.js: void 0 replaced with undefined
Mutant 1585 in q.js: void 0 replaced with NaN
Mutant 1586 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(null, null, progressed)
Mutant 1587 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(undefined, undefined, progressed)
Mutant 1588 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(void 0, void 0, progressed.bind(this))
Mutant 1589 in q.js: void 0 replaced with null
Mutant 1590 in q.js: void 0 replaced with undefined
Mutant 1591 in q.js: void 0 replaced with true
Mutant 1592 in q.js: void 0 replaced with null
Mutant 1593 in q.js: void 0 replaced with undefined
Mutant 1594 in q.js: void 0 replaced with function () {}
Mutant 1595 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1596 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, progressed)
Mutant 1597 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(function () {}, function () {}, progressed)
Mutant 1598 in q.js: void 0 replaced with null
Mutant 1599 in q.js: void 0 replaced with undefined
Mutant 1600 in q.js: void 0 replaced with function () {}
Mutant 1601 in q.js: void 0 replaced with null
Mutant 1602 in q.js: void 0 replaced with undefined
Mutant 1603 in q.js: void 0 replaced with 0
Mutant 1604 in q.js: Q replaced with Q.reject
Mutant 1605 in q.js: Q replaced with Q.resolve
Mutant 1606 in q.js: Q replaced with Q.defer
Mutant 1607 in q.js: object replaced with null
Mutant 1608 in q.js: object replaced with undefined
Mutant 1609 in q.js: object replaced with 0
Mutant 1610 in q.js: callback replaced with callback.fcall()
Mutant 1611 in q.js: callback replaced with callback.apply()
Mutant 1612 in q.js: callback replaced with callback.bind()
Mutant 1613 in q.js: !callback || typeof callback.apply !== "function" replaced with callback !== null
Mutant 1614 in q.js: !callback || typeof callback.apply !== "function" replaced with callback !== undefined
Mutant 1615 in q.js: !callback || typeof callback.apply !== "function" replaced with callback !== null && callback !== undefined
Mutant 1616 in q.js: Q replaced with Q.reject
Mutant 1617 in q.js: Q replaced with Q.resolve
Mutant 1618 in q.js: Q replaced with Q.defer
Mutant 1619 in q.js: callback replaced with callback.fcall()
Mutant 1620 in q.js: callback replaced with callback.call()
Mutant 1621 in q.js: callback replaced with callback.apply()
Mutant 1622 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1623 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress, null)
Mutant 1624 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress, function () {})
Mutant 1625 in q.js: object replaced with undefined
Mutant 1626 in q.js: object replaced with Q.reject(new Error("Test error"))
Mutant 1627 in q.js: fulfilled replaced with rejected
Mutant 1628 in q.js: fulfilled replaced with progressed
Mutant 1629 in q.js: fulfilled replaced with null
Mutant 1630 in q.js: rejected replaced with fulfilled
Mutant 1631 in q.js: rejected replaced with progressed
Mutant 1632 in q.js: progress replaced with null
Mutant 1633 in q.js: progress replaced with undefined
Mutant 1634 in q.js: progress replaced with function () {}
Mutant 1635 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.then())
Mutant 1636 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.catch())
Mutant 1637 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.finally())
Mutant 1638 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(rejected, fulfilled, progress)
Mutant 1639 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, progress, void 0)
Mutant 1640 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(rejected, fulfilled, progress, null)
Mutant 1641 in q.js: fulfilled replaced with rejected
Mutant 1642 in q.js: fulfilled replaced with undefined
Mutant 1643 in q.js: fulfilled replaced with null
Mutant 1644 in q.js: rejected replaced with fulfilled
Mutant 1645 in q.js: rejected replaced with rejected(new Error())
Mutant 1646 in q.js: rejected replaced with rejected(new Error("custom error message"))
Mutant 1647 in q.js: progress replaced with null
Mutant 1648 in q.js: progress replaced with undefined
Mutant 1649 in q.js: progress replaced with 0
Mutant 1650 in q.js: onUnhandledError replaced with onUnhandledError.bind(null)
Mutant 1651 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(null, onUnhandledError)
Mutant 1652 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(undefined, onUnhandledError)
Mutant 1653 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(void 0, null)
Mutant 1654 in q.js: void 0 replaced with null
Mutant 1655 in q.js: void 0 replaced with undefined
Mutant 1656 in q.js: void 0 replaced with 0
Mutant 1657 in q.js: onUnhandledError replaced with onUnhandledError()
Mutant 1658 in q.js: onUnhandledError replaced with null
Mutant 1659 in q.js: onUnhandledError replaced with function () {}
Mutant 1660 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, new Error())
Mutant 1661 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, "some string")
Mutant 1662 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, null)
Mutant 1663 in q.js: object replaced with undefined
Mutant 1664 in q.js: object replaced with Q.reject(new Error("test"))
Mutant 1665 in q.js: ms replaced with ms + 1
Mutant 1666 in q.js: ms replaced with ms - 1
Mutant 1667 in q.js: ms replaced with 0
Mutant 1668 in q.js: error replaced with undefined
Mutant 1669 in q.js: error replaced with null
Mutant 1670 in q.js: error replaced with new Error()
Mutant 1671 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1672 in q.js: !error || "string" === typeof error replaced with error || "string" !== typeof error
Mutant 1673 in q.js: !error || "string" === typeof error replaced with error || "string" === typeof error
Mutant 1674 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1675 in q.js: deferred.reject replaced with deferred.notify
Mutant 1676 in q.js: deferred.reject replaced with null
Mutant 1677 in q.js: error replaced with null
Mutant 1678 in q.js: error replaced with new Error("Different error message")
Mutant 1679 in q.js: error replaced with error.message = "Different error message"
Mutant 1680 in q.js: clearTimeout replaced with clearInterval
Mutant 1681 in q.js: timeoutId replaced with null
Mutant 1682 in q.js: timeoutId replaced with undefined
Mutant 1683 in q.js: timeoutId replaced with 0
Mutant 1684 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1685 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1686 in q.js: deferred.resolve replaced with undefined
Mutant 1687 in q.js: value replaced with null
Mutant 1688 in q.js: value replaced with undefined
Mutant 1689 in q.js: value replaced with Promise.reject()
Mutant 1690 in q.js: clearTimeout replaced with clearInterval
Mutant 1691 in q.js: timeoutId replaced with null
Mutant 1692 in q.js: timeoutId replaced with undefined
Mutant 1693 in q.js: timeoutId replaced with 0
Mutant 1694 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1695 in q.js: deferred.reject replaced with deferred.notify
Mutant 1696 in q.js: deferred.reject replaced with null
Mutant 1697 in q.js: timeout === void 0 replaced with timeout !== void 0
Mutant 1698 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1699 in q.js: timeout === void 0 replaced with timeout === undefined
Mutant 1700 in q.js: object replaced with null
Mutant 1701 in q.js: object replaced with undefined
Mutant 1702 in q.js: object replaced with 0
Mutant 1703 in q.js: timeout replaced with 0
Mutant 1704 in q.js: timeout replaced with null
Mutant 1705 in q.js: timeout replaced with undefined
Mutant 1706 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1707 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1708 in q.js: value replaced with null
Mutant 1709 in q.js: value replaced with undefined
Mutant 1710 in q.js: value replaced with "foo"
Mutant 1711 in q.js: Q replaced with Q.reject
Mutant 1712 in q.js: Q replaced with Q.resolve
Mutant 1713 in q.js: Q replaced with Q.defer
Mutant 1714 in q.js: callback replaced with null
Mutant 1715 in q.js: callback replaced with undefined
Mutant 1716 in q.js: callback replaced with function () {}
Mutant 1717 in q.js: args replaced with null
Mutant 1718 in q.js: args replaced with []
Mutant 1719 in q.js: args replaced with [1, 2, 3]
Mutant 1720 in q.js: array_slice replaced with array_slice.length
Mutant 1721 in q.js: args replaced with null
Mutant 1722 in q.js: args replaced with []
Mutant 1723 in q.js: args replaced with [].concat(arguments)
Mutant 1724 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1725 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1726 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1727 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1728 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1729 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err) {
  throw err;
})
Mutant 1730 in q.js: nodeArgs replaced with nodeArgs.slice(0, -1)
Mutant 1731 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1732 in q.js: nodeArgs replaced with nodeArgs.slice(0, 1)
Mutant 1733 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1734 in q.js: deferred.reject replaced with deferred.notify
Mutant 1735 in q.js: deferred.reject replaced with null
Mutant 1736 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1737 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 3))
Mutant 1738 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 4))
Mutant 1739 in q.js: arguments replaced with null
Mutant 1740 in q.js: arguments replaced with undefined
Mutant 1741 in q.js: arguments replaced with []
Mutant 1742 in q.js: 1 replaced with 0
Mutant 1743 in q.js: 1 replaced with -1
Mutant 1744 in q.js: 1 replaced with NaN
Mutant 1745 in q.js: Q replaced with Q.reject
Mutant 1746 in q.js: Q replaced with Q.defer
Mutant 1747 in q.js: Q replaced with Q.when
Mutant 1748 in q.js: callback replaced with undefined
Mutant 1749 in q.js: callback replaced with null
Mutant 1750 in q.js: callback replaced with function () {}
Mutant 1751 in q.js: args replaced with null
Mutant 1752 in q.js: args replaced with []
Mutant 1753 in q.js: args replaced with [1, 2, 3]
Mutant 1754 in q.js: array_slice replaced with array_slice.length
Mutant 1755 in q.js: arguments replaced with null
Mutant 1756 in q.js: arguments replaced with undefined
Mutant 1757 in q.js: arguments replaced with []
Mutant 1758 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1759 in q.js: nodeArgs.push replaced with nodeArgs.concat
Mutant 1760 in q.js: nodeArgs.push replaced with nodeArgs.slice
Mutant 1761 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1762 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(undefined)
Mutant 1763 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(deferred.promise)
Mutant 1764 in q.js: nodeArgs replaced with nodeArgs.slice(0)
Mutant 1765 in q.js: nodeArgs replaced with nodeArgs.concat([])
Mutant 1766 in q.js: nodeArgs replaced with nodeArgs.map(function (x) {
  return x;
})
Mutant 1767 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1768 in q.js: deferred.reject replaced with deferred.notify
Mutant 1769 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1770 in q.js: callback === undefined replaced with callback !== undefined
Mutant 1771 in q.js: callback === undefined replaced with typeof callback !== "function"
Mutant 1772 in q.js: callback === undefined replaced with callback !== null
Mutant 1773 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1774 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments), 1)
Mutant 1775 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 1776 in q.js: arguments replaced with null
Mutant 1777 in q.js: arguments replaced with undefined
Mutant 1778 in q.js: arguments replaced with []
Mutant 1779 in q.js: 1 replaced with 0
Mutant 1780 in q.js: 1 replaced with 2
Mutant 1781 in q.js: 1 replaced with null
Mutant 1782 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1783 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1784 in q.js: baseArgs.concat replaced with baseArgs.splice
Mutant 1785 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1786 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1787 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1788 in q.js: arguments replaced with null
Mutant 1789 in q.js: arguments replaced with undefined
Mutant 1790 in q.js: arguments replaced with []
Mutant 1791 in q.js: defer replaced with deferred
Mutant 1792 in q.js: defer replaced with defer.promise
Mutant 1793 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1794 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1795 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1796 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1797 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1798 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err) {
  throw err;
})
Mutant 1799 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeRejector
Mutant 1800 in q.js: Q replaced with deferred
Mutant 1801 in q.js: Q replaced with this.deferred
Mutant 1802 in q.js: Q replaced with Q.deferred
Mutant 1803 in q.js: callback replaced with null
Mutant 1804 in q.js: callback replaced with undefined
Mutant 1805 in q.js: callback replaced with function () {}
Mutant 1806 in q.js: nodeArgs replaced with null
Mutant 1807 in q.js: nodeArgs replaced with undefined
Mutant 1808 in q.js: nodeArgs replaced with []
Mutant 1809 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1810 in q.js: deferred.reject replaced with undefined
Mutant 1811 in q.js: deferred.reject replaced with deferred.notify
Mutant 1812 in q.js: arguments replaced with arguments[0]
Mutant 1813 in q.js: arguments replaced with arguments.length
Mutant 1814 in q.js: arguments replaced with arguments.slice(1)
Mutant 1815 in q.js: args.unshift replaced with args.push
Mutant 1816 in q.js: args.unshift replaced with args.shift
Mutant 1817 in q.js: args.unshift replaced with args.pop
Mutant 1818 in q.js: this replaced with null
Mutant 1819 in q.js: this replaced with undefined
Mutant 1820 in q.js: this replaced with {}
Mutant 1821 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(this)
Mutant 1822 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null)
Mutant 1823 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(undefined)
Mutant 1824 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1825 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1826 in q.js: void 0 replaced with null
Mutant 1827 in q.js: void 0 replaced with undefined
Mutant 1828 in q.js: void 0 replaced with 0
Mutant 1829 in q.js: args replaced with args.slice(1)
Mutant 1830 in q.js: args replaced with args.concat([null])
Mutant 1831 in q.js: args replaced with args.reverse()
Mutant 1832 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1833 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1834 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 0)
Mutant 1835 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1836 in q.js: arguments replaced with array_slice(arguments, 1, 2)
Mutant 1837 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1838 in q.js: 2 replaced with 1
Mutant 1839 in q.js: 2 replaced with 3
Mutant 1840 in q.js: 2 replaced with 0
Mutant 1841 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1842 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1843 in q.js: baseArgs.concat replaced with baseArgs.splice
Mutant 1844 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1845 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1846 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1847 in q.js: arguments replaced with null
Mutant 1848 in q.js: arguments replaced with undefined
Mutant 1849 in q.js: arguments replaced with []
Mutant 1850 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1851 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1852 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1853 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1854 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(undefined)
Mutant 1855 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1856 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments[0])
Mutant 1857 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments[1])
Mutant 1858 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments[2])
Mutant 1859 in q.js: callback.apply replaced with callback.call
Mutant 1860 in q.js: callback.apply replaced with callback.bind
Mutant 1861 in q.js: thisp replaced with null
Mutant 1862 in q.js: thisp replaced with undefined
Mutant 1863 in q.js: thisp replaced with {}
Mutant 1864 in q.js: arguments replaced with nodeArgs
Mutant 1865 in q.js: arguments replaced with baseArgs
Mutant 1866 in q.js: arguments replaced with args.slice(2)
Mutant 1867 in q.js: bound replaced with null
Mutant 1868 in q.js: bound replaced with undefined
Mutant 1869 in q.js: bound replaced with function () {}
Mutant 1870 in q.js: nodeArgs replaced with nodeArgs.concat(array_slice(arguments))
Mutant 1871 in q.js: nodeArgs replaced with nodeArgs.slice(0, -1)
Mutant 1872 in q.js: nodeArgs replaced with nodeArgs.pop()
Mutant 1873 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1874 in q.js: deferred.reject replaced with null
Mutant 1875 in q.js: deferred.reject replaced with undefined
Mutant 1876 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1877 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments.length)
Mutant 1878 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments[0])
Mutant 1879 in q.js: arguments replaced with null
Mutant 1880 in q.js: arguments replaced with undefined
Mutant 1881 in q.js: arguments replaced with []
Mutant 1882 in q.js: 0 replaced with 1
Mutant 1883 in q.js: 0 replaced with -1
Mutant 1884 in q.js: 0 replaced with "hello"
Mutant 1885 in q.js: args.unshift replaced with args.push
Mutant 1886 in q.js: args.unshift replaced with args.shift
Mutant 1887 in q.js: args.unshift replaced with args.pop
Mutant 1888 in q.js: this replaced with null
Mutant 1889 in q.js: this replaced with undefined
Mutant 1890 in q.js: this replaced with Promise.reject()
Mutant 1891 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1892 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined, args)
Mutant 1893 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this, args)
Mutant 1894 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1895 in q.js: Q.nbind.apply replaced with Q.nbind.bind
Mutant 1896 in q.js: Q.nbind.apply replaced with Q.nbind.apply.bind
Mutant 1897 in q.js: void 0 replaced with this
Mutant 1898 in q.js: void 0 replaced with null
Mutant 1899 in q.js: void 0 replaced with 42
Mutant 1900 in q.js: args replaced with args.slice(1)
Mutant 1901 in q.js: args replaced with args.concat([1, 2, 3])
Mutant 1902 in q.js: args replaced with args.filter(function (x) {
  return x !== 1;
})
Mutant 1903 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.slice(1))
Mutant 1904 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.concat(deferred.makeNodeResolver()))
Mutant 1905 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, [args, deferred.makeNodeResolver()])
Mutant 1906 in q.js: object replaced with null
Mutant 1907 in q.js: object replaced with undefined
Mutant 1908 in q.js: object replaced with {}
Mutant 1909 in q.js: name replaced with null
Mutant 1910 in q.js: name replaced with undefined
Mutant 1911 in q.js: name replaced with "name"
Mutant 1912 in q.js: args replaced with null
Mutant 1913 in q.js: args replaced with undefined
Mutant 1914 in q.js: args replaced with []
Mutant 1915 in q.js: array_slice replaced with array_slice.length
Mutant 1916 in q.js: args || [] replaced with null
Mutant 1917 in q.js: args || [] replaced with undefined
Mutant 1918 in q.js: args || [] replaced with []
Mutant 1919 in q.js: defer replaced with deferred
Mutant 1920 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1921 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1922 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1923 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1924 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver.bind(null)
Mutant 1925 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1926 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1927 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, 1])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, 1])
Mutant 1928 in q.js: "post" replaced with "get"
Mutant 1929 in q.js: "post" replaced with "set"
Mutant 1930 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1931 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, undefined]
Mutant 1932 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, "foo"]
Mutant 1933 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1934 in q.js: deferred.reject replaced with deferred.reject("error")
Mutant 1935 in q.js: deferred.reject replaced with deferred.reject(new Error("error"))
Mutant 1936 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1937 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1938 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 2, 3)
Mutant 1939 in q.js: array_slice replaced with array_slice.length
Mutant 1940 in q.js: arguments replaced with 1
Mutant 1941 in q.js: arguments replaced with null
Mutant 1942 in q.js: arguments replaced with undefined
Mutant 1943 in q.js: 2 replaced with 1
Mutant 1944 in q.js: 2 replaced with 3
Mutant 1945 in q.js: 2 replaced with 0
Mutant 1946 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1947 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1948 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1949 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1950 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1951 in q.js: deferred.makeNodeResolver() replaced with () => {}
Mutant 1952 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1953 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, 1])
Mutant 1954 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, function () {}])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, 1])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, function () {}])
Mutant 1955 in q.js: Q replaced with Q.reject
Mutant 1956 in q.js: Q replaced with Q.resolve
Mutant 1957 in q.js: Q replaced with Q.defer
Mutant 1958 in q.js: object replaced with null
Mutant 1959 in q.js: object replaced with undefined
Mutant 1960 in q.js: "post" replaced with "get"
Mutant 1961 in q.js: "post" replaced with "put"
Mutant 1962 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1963 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(0, -1)]
Mutant 1964 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.reverse()]
Mutant 1965 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1966 in q.js: deferred.reject replaced with null
Mutant 1967 in q.js: deferred.reject replaced with undefined
Mutant 1968 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1969 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1970 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 1971 in q.js: array_slice replaced with array_slice.length
Mutant 1972 in q.js: arguments replaced with null
Mutant 1973 in q.js: arguments replaced with undefined
Mutant 1974 in q.js: arguments replaced with []
Mutant 1975 in q.js: 1 replaced with 0
Mutant 1976 in q.js: 1 replaced with 2
Mutant 1977 in q.js: 1 replaced with -1
Mutant 1978 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1979 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1980 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1981 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().bind(null)
Mutant 1982 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().apply(null)
Mutant 1983 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().call(null)
Mutant 1984 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("send", [name, nodeArgs])
Mutant 1985 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, null])
Mutant 1986 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, function () {}])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("send", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, null])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, function () {}])
Mutant 1987 in q.js: "post" replaced with "send"
Mutant 1988 in q.js: "post" replaced with "dispatch"
Mutant 1989 in q.js: "post" replaced with "apply"
Mutant 1990 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1991 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, undefined]
Mutant 1992 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, "foo"]
Mutant 1993 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1994 in q.js: deferred.reject replaced with null
Mutant 1995 in q.js: deferred.reject replaced with undefined
Mutant 1996 in q.js: Q replaced with 1
Mutant 1997 in q.js: Q replaced with null
Mutant 1998 in q.js: Q replaced with undefined
Mutant 1999 in q.js: object replaced with null
Mutant 2000 in q.js: object replaced with undefined
Mutant 2001 in q.js: object replaced with 0
Mutant 2002 in q.js: nodeback replaced with null
Mutant 2003 in q.js: nodeback replaced with undefined
Mutant 2004 in q.js: nodeback replaced with function () {}
Mutant 2005 in q.js: nodeback replaced with !nodeback
Mutant 2006 in q.js: nodeback replaced with nodeback + 1
Mutant 2007 in q.js: nodeback replaced with nodeback.length
Mutant 2008 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 2009 in q.js: nodeback(null, value) replaced with nodeback(value, null)
Mutant 2010 in q.js: nodeback(null, value) replaced with nodeback(value, undefined)
Mutant 2011 in q.js: null replaced with undefined
Mutant 2012 in q.js: null replaced with 0
Mutant 2013 in q.js: null replaced with {}
Mutant 2014 in q.js: value replaced with undefined
Mutant 2015 in q.js: value replaced with null
Mutant 2016 in q.js: value replaced with "hello"
Mutant 2017 in q.js: error replaced with null
Mutant 2018 in q.js: error replaced with undefined
Mutant 2019 in q.js: error replaced with "error"
Mutant 2020 in q.js: captureLine replaced with captureLine + 1
Mutant 2021 in q.js: captureLine replaced with captureLine - 1
Mutant 2022 in q.js: captureLine replaced with captureLine * 2
Mutant 2023 in queue.js: Q.defer replaced with Q.reject
Mutant 2024 in queue.js: Q.defer replaced with Q.resolve
Mutant 2025 in queue.js: Q.defer replaced with Q.all
Mutant 2026 in queue.js: "head" replaced with "tail"
Mutant 2027 in queue.js: "head" replaced with "head.tail"
Mutant 2028 in queue.js: "head" replaced with "ends.promise.get('tail')"
Mutant 2029 in queue.js: "tail" replaced with "head"
Mutant 2030 in queue.js: "tail" replaced with "tail.head"
Mutant 2031 in queue.js: "tail" replaced with "ends.promise.tail.head"
Mutant 2032 in queue.js: closed.resolve replaced with closed.reject
Mutant 2033 in queue.js: closed.resolve replaced with closed.promise.reject
Mutant 2034 in queue.js: error replaced with null
Mutant 2035 in queue.js: error replaced with undefined
Mutant 2036 in queue.js: error replaced with new Error("Different error message")
Mutant 2037 in queue.js: Q.reject replaced with Q.resolve
Mutant 2038 in queue.js: error replaced with null
Mutant 2039 in queue.js: error replaced with undefined
Mutant 2040 in queue.js: error replaced with new Error("Different error message")
Mutant 2041 in queue.js: ends.resolve replaced with ends.reject
Mutant 2042 in queue.js: ends.resolve replaced with closed.resolve
Mutant 2043 in queue.js: ends.resolve replaced with next.reject
[32m02:21:18 (3108) INFO Instrumenter[39m Instrumented 2 source file(s) with 2044 mutant(s)
[32m02:21:18 (3108) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m02:21:20 (3108) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m02:21:20 (3108) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m02:21:27 (3108) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6798 ms, overhead 2 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 53m) 3/2044 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 50m) 4/2044 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 49m) 6/2044 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 14m) 7/2044 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 8m) 9/2044 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 23m) 10/2044 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 17m) 12/2044 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 28m) 13/2044 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 37m) 14/2044 tested (12 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 7m) 18/2044 tested (13 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 5m) 20/2044 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 12m) 21/2044 tested (16 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 10m) 23/2044 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 16m) 24/2044 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 14m) 26/2044 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 19m) 27/2044 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 16m) 29/2044 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 21m) 30/2044 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 19m) 32/2044 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 23m) 33/2044 tested (28 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 15m) 36/2044 tested (30 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 13m) 38/2044 tested (30 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 17m) 39/2044 tested (30 survived, 1 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 20m) 40/2044 tested (31 survived, 1 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 23m) 41/2044 tested (31 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 26m) 42/2044 tested (32 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 34m) 42/2044 tested (32 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 37m) 43/2044 tested (32 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 39m) 44/2044 tested (32 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 37m) 46/2044 tested (34 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 39m) 47/2044 tested (35 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 37m) 49/2044 tested (37 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 26m) 53/2044 tested (38 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 28m) 54/2044 tested (39 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 30m) 55/2044 tested (40 survived, 4 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 33m) 56/2044 tested (40 survived, 5 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 27m) 59/2044 tested (40 survived, 5 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 29m) 60/2044 tested (41 survived, 5 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 31m) 61/2044 tested (41 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 33m) 62/2044 tested (42 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 34m) 63/2044 tested (42 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 29m) 66/2044 tested (43 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 22m) 70/2044 tested (44 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 23m) 71/2044 tested (45 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 22m) 73/2044 tested (47 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 24m) 74/2044 tested (48 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 22m) 76/2044 tested (50 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 24m) 77/2044 tested (51 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 25m) 78/2044 tested (52 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 24m) 80/2044 tested (54 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 25m) 81/2044 tested (55 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 24m) 83/2044 tested (57 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 28m) 83/2044 tested (57 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 27m) 85/2044 tested (58 survived, 8 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 31m) 85/2044 tested (58 survived, 8 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 32m) 86/2044 tested (58 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 31m) 88/2044 tested (60 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 32m) 89/2044 tested (61 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 33m) 90/2044 tested (61 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 37m) 90/2044 tested (61 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 35m) 92/2044 tested (61 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 34m) 94/2044 tested (63 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 35m) 95/2044 tested (64 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 36m) 96/2044 tested (65 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 35m) 98/2044 tested (67 survived, 11 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 36m) 99/2044 tested (68 survived, 11 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 34m) 101/2044 tested (70 survived, 11 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 35m) 102/2044 tested (71 survived, 11 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 34m) 104/2044 tested (73 survived, 11 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 35m) 105/2044 tested (74 survived, 11 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 34m) 107/2044 tested (76 survived, 11 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 35m) 108/2044 tested (77 survived, 11 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 33m) 110/2044 tested (79 survived, 11 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 34m) 111/2044 tested (80 survived, 11 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 33m) 113/2044 tested (82 survived, 11 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 34m) 114/2044 tested (83 survived, 11 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 33m) 116/2044 tested (85 survived, 11 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 34m) 117/2044 tested (86 survived, 11 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 32m) 119/2044 tested (88 survived, 11 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 33m) 120/2044 tested (89 survived, 11 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 32m) 122/2044 tested (91 survived, 11 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 33m) 123/2044 tested (92 survived, 11 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 32m) 125/2044 tested (94 survived, 11 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 33m) 126/2044 tested (95 survived, 11 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 32m) 128/2044 tested (97 survived, 11 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 32m) 129/2044 tested (98 survived, 11 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 33m) 130/2044 tested (99 survived, 11 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 32m) 132/2044 tested (101 survived, 11 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 33m) 133/2044 tested (102 survived, 11 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 32m) 135/2044 tested (104 survived, 11 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 32m) 136/2044 tested (105 survived, 11 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 28m) 140/2044 tested (107 survived, 11 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 27m) 142/2044 tested (108 survived, 11 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 28m) 143/2044 tested (109 survived, 11 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 24m) 147/2044 tested (110 survived, 11 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 24m) 148/2044 tested (110 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 14m) 157/2044 tested (110 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 13m) 159/2044 tested (111 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 14m) 160/2044 tested (112 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 13m) 162/2044 tested (114 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 14m) 163/2044 tested (115 survived, 12 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 13m) 165/2044 tested (117 survived, 12 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 14m) 166/2044 tested (118 survived, 12 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 13m) 168/2044 tested (120 survived, 12 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 14m) 169/2044 tested (121 survived, 12 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 13m) 171/2044 tested (123 survived, 12 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 14m) 172/2044 tested (124 survived, 12 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 13m) 174/2044 tested (126 survived, 12 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 14m) 175/2044 tested (127 survived, 12 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 13m) 177/2044 tested (129 survived, 12 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 13m) 178/2044 tested (130 survived, 12 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 13m) 180/2044 tested (132 survived, 12 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 13m) 181/2044 tested (133 survived, 12 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 14m) 182/2044 tested (134 survived, 12 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 13m) 184/2044 tested (136 survived, 12 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 14m) 185/2044 tested (137 survived, 12 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 13m) 187/2044 tested (139 survived, 12 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 14m) 188/2044 tested (140 survived, 12 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 13m) 190/2044 tested (142 survived, 12 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 14m) 191/2044 tested (143 survived, 12 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 13m) 193/2044 tested (145 survived, 12 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 13m) 194/2044 tested (146 survived, 12 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 13m) 196/2044 tested (148 survived, 12 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 13m) 197/2044 tested (149 survived, 12 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 13m) 199/2044 tested (151 survived, 12 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 13m) 200/2044 tested (152 survived, 12 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 13m) 202/2044 tested (154 survived, 12 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 13m) 203/2044 tested (155 survived, 12 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 12m) 205/2044 tested (157 survived, 12 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 13m) 206/2044 tested (158 survived, 12 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 12m) 208/2044 tested (160 survived, 12 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 13m) 209/2044 tested (161 survived, 12 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 12m) 211/2044 tested (163 survived, 12 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 12m) 212/2044 tested (164 survived, 12 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 12m) 214/2044 tested (166 survived, 12 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 12m) 215/2044 tested (167 survived, 12 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 13m) 216/2044 tested (168 survived, 12 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 12m) 218/2044 tested (170 survived, 12 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 13m) 219/2044 tested (171 survived, 12 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 12m) 221/2044 tested (173 survived, 12 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 12m) 222/2044 tested (174 survived, 12 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 12m) 224/2044 tested (176 survived, 12 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 12m) 225/2044 tested (177 survived, 12 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 12m) 227/2044 tested (179 survived, 12 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 12m) 228/2044 tested (180 survived, 12 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 11m) 230/2044 tested (182 survived, 12 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 12m) 231/2044 tested (183 survived, 12 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 11m) 233/2044 tested (185 survived, 12 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 12m) 234/2044 tested (186 survived, 12 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 11m) 236/2044 tested (188 survived, 12 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 11m) 237/2044 tested (189 survived, 12 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 9m) 241/2044 tested (190 survived, 12 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 9m) 242/2044 tested (190 survived, 12 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 8m) 245/2044 tested (191 survived, 12 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 8m) 246/2044 tested (192 survived, 12 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 8m) 248/2044 tested (194 survived, 12 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 8m) 249/2044 tested (195 survived, 12 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 7m) 252/2044 tested (197 survived, 12 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 7m) 253/2044 tested (198 survived, 12 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 7m) 254/2044 tested (198 survived, 12 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 8m) 255/2044 tested (199 survived, 12 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 7m) 257/2044 tested (201 survived, 12 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 8m) 258/2044 tested (202 survived, 12 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 7m) 260/2044 tested (204 survived, 12 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 7m) 261/2044 tested (205 survived, 12 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 7m) 263/2044 tested (207 survived, 12 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 7m) 264/2044 tested (208 survived, 12 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 7m) 266/2044 tested (210 survived, 12 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 7m) 267/2044 tested (211 survived, 12 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 6m) 269/2044 tested (213 survived, 12 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 7m) 270/2044 tested (214 survived, 12 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 6m) 272/2044 tested (216 survived, 12 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 7m) 273/2044 tested (217 survived, 12 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 275/2044 tested (219 survived, 12 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 276/2044 tested (220 survived, 12 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 7m) 277/2044 tested (221 survived, 12 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 279/2044 tested (223 survived, 12 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 280/2044 tested (224 survived, 12 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 282/2044 tested (226 survived, 12 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 6m) 283/2044 tested (227 survived, 12 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 6m) 285/2044 tested (229 survived, 12 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 6m) 286/2044 tested (230 survived, 12 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 5m) 288/2044 tested (232 survived, 12 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 6m) 289/2044 tested (233 survived, 12 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 5m) 291/2044 tested (235 survived, 12 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 6m) 292/2044 tested (236 survived, 12 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 294/2044 tested (238 survived, 12 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 295/2044 tested (239 survived, 12 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 297/2044 tested (241 survived, 12 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 298/2044 tested (242 survived, 12 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 300/2044 tested (244 survived, 12 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 5m) 301/2044 tested (245 survived, 12 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 4m) 303/2044 tested (247 survived, 12 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 5m) 304/2044 tested (248 survived, 12 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 4m) 306/2044 tested (250 survived, 12 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 4m) 307/2044 tested (251 survived, 12 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 5m) 308/2044 tested (252 survived, 12 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 4m) 310/2044 tested (254 survived, 12 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 4m) 311/2044 tested (255 survived, 12 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 4m) 313/2044 tested (257 survived, 12 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 4m) 314/2044 tested (258 survived, 12 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 4m) 316/2044 tested (260 survived, 12 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 4m) 317/2044 tested (261 survived, 12 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 3m) 319/2044 tested (263 survived, 12 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 4m) 320/2044 tested (264 survived, 12 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 3m) 322/2044 tested (266 survived, 12 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 3m) 323/2044 tested (267 survived, 12 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 3m) 325/2044 tested (269 survived, 12 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 3m) 326/2044 tested (270 survived, 12 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 3m) 328/2044 tested (272 survived, 12 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 3m) 329/2044 tested (273 survived, 12 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 2m) 331/2044 tested (275 survived, 12 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 3m) 332/2044 tested (276 survived, 12 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 2m) 334/2044 tested (278 survived, 12 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 2m) 335/2044 tested (279 survived, 12 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 2m) 337/2044 tested (281 survived, 12 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 2m) 338/2044 tested (282 survived, 12 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 2m) 339/2044 tested (283 survived, 12 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 0m) 344/2044 tested (285 survived, 12 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 0m) 345/2044 tested (286 survived, 12 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 0m) 346/2044 tested (287 survived, 12 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 0m) 348/2044 tested (289 survived, 12 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 0m) 349/2044 tested (290 survived, 12 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 0m) 351/2044 tested (292 survived, 12 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 0m) 352/2044 tested (293 survived, 12 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 59m) 354/2044 tested (295 survived, 12 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 58m) 358/2044 tested (296 survived, 12 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 58m) 359/2044 tested (297 survived, 12 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 57m) 361/2044 tested (299 survived, 12 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 58m) 362/2044 tested (300 survived, 12 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 57m) 364/2044 tested (302 survived, 12 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 57m) 365/2044 tested (303 survived, 12 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 57m) 367/2044 tested (305 survived, 12 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 57m) 368/2044 tested (306 survived, 12 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 57m) 370/2044 tested (308 survived, 12 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 57m) 371/2044 tested (309 survived, 12 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 56m) 373/2044 tested (311 survived, 12 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 57m) 374/2044 tested (312 survived, 12 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 56m) 376/2044 tested (314 survived, 12 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 56m) 377/2044 tested (315 survived, 12 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 56m) 379/2044 tested (317 survived, 12 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 56m) 380/2044 tested (318 survived, 12 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 56m) 381/2044 tested (319 survived, 12 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 56m) 383/2044 tested (321 survived, 12 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 56m) 384/2044 tested (322 survived, 12 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 56m) 386/2044 tested (324 survived, 12 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 56m) 387/2044 tested (325 survived, 12 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 55m) 389/2044 tested (327 survived, 12 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 56m) 390/2044 tested (328 survived, 12 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 55m) 392/2044 tested (330 survived, 12 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 55m) 393/2044 tested (331 survived, 12 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 55m) 395/2044 tested (333 survived, 12 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 55m) 396/2044 tested (334 survived, 12 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 55m) 398/2044 tested (336 survived, 12 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 55m) 399/2044 tested (337 survived, 12 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 54m) 401/2044 tested (339 survived, 12 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 54m) 402/2044 tested (340 survived, 12 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 54m) 404/2044 tested (342 survived, 12 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 54m) 405/2044 tested (343 survived, 12 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 53m) 408/2044 tested (344 survived, 12 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 53m) 409/2044 tested (344 survived, 13 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 54m) 410/2044 tested (344 survived, 13 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 54m) 410/2044 tested (344 survived, 13 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 412/2044 tested (344 survived, 14 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 53m) 414/2044 tested (344 survived, 14 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 415/2044 tested (344 survived, 14 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 416/2044 tested (344 survived, 14 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 53m) 418/2044 tested (344 survived, 14 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 418/2044 tested (344 survived, 14 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 419/2044 tested (344 survived, 15 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 420/2044 tested (344 survived, 16 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 55m) 420/2044 tested (344 survived, 16 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 55m) 421/2044 tested (344 survived, 17 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 56m) 421/2044 tested (344 survived, 17 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 52m) 429/2044 tested (344 survived, 18 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 52m) 431/2044 tested (344 survived, 18 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 51m) 433/2044 tested (344 survived, 19 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 51m) 435/2044 tested (345 survived, 19 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 51m) 435/2044 tested (345 survived, 19 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 50m) 439/2044 tested (346 survived, 20 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 50m) 440/2044 tested (347 survived, 20 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 50m) 441/2044 tested (348 survived, 20 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 50m) 443/2044 tested (350 survived, 20 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 50m) 444/2044 tested (351 survived, 20 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 50m) 446/2044 tested (353 survived, 20 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 50m) 447/2044 tested (354 survived, 20 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 49m) 449/2044 tested (356 survived, 20 timed out)
Mutation testing 21% (elapsed: ~48m, remaining: ~2h 50m) 449/2044 tested (356 survived, 20 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 50m) 451/2044 tested (356 survived, 21 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 50m) 452/2044 tested (356 survived, 22 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 50m) 453/2044 tested (357 survived, 22 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 49m) 455/2044 tested (359 survived, 22 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 50m) 455/2044 tested (359 survived, 22 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 50m) 457/2044 tested (359 survived, 23 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 50m) 458/2044 tested (360 survived, 23 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 460/2044 tested (362 survived, 23 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 461/2044 tested (363 survived, 23 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 463/2044 tested (365 survived, 23 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 464/2044 tested (366 survived, 23 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 49m) 466/2044 tested (368 survived, 23 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 49m) 467/2044 tested (369 survived, 23 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 49m) 469/2044 tested (371 survived, 23 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 49m) 470/2044 tested (372 survived, 23 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 48m) 472/2044 tested (374 survived, 23 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 48m) 473/2044 tested (375 survived, 23 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 475/2044 tested (377 survived, 23 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 476/2044 tested (378 survived, 23 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 478/2044 tested (380 survived, 23 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 479/2044 tested (381 survived, 23 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 480/2044 tested (382 survived, 23 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 47m) 482/2044 tested (384 survived, 23 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 48m) 483/2044 tested (385 survived, 23 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 485/2044 tested (387 survived, 23 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 486/2044 tested (388 survived, 23 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 488/2044 tested (390 survived, 23 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 489/2044 tested (391 survived, 23 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 47m) 491/2044 tested (393 survived, 23 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 47m) 491/2044 tested (393 survived, 23 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 47m) 493/2044 tested (393 survived, 24 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 47m) 494/2044 tested (393 survived, 25 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 47m) 495/2044 tested (393 survived, 25 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 47m) 496/2044 tested (393 survived, 26 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 47m) 498/2044 tested (395 survived, 26 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 46m) 500/2044 tested (396 survived, 26 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 503/2044 tested (397 survived, 26 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 46m) 503/2044 tested (397 survived, 26 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 46m) 505/2044 tested (398 survived, 27 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 46m) 505/2044 tested (398 survived, 27 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 46m) 506/2044 tested (398 survived, 28 timed out)
Mutation testing 24% (elapsed: ~55m, remaining: ~2h 46m) 508/2044 tested (399 survived, 28 timed out)
Mutation testing 24% (elapsed: ~55m, remaining: ~2h 46m) 509/2044 tested (399 survived, 29 timed out)
Mutation testing 24% (elapsed: ~55m, remaining: ~2h 46m) 509/2044 tested (399 survived, 29 timed out)
Mutation testing 24% (elapsed: ~55m, remaining: ~2h 46m) 510/2044 tested (399 survived, 30 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 47m) 511/2044 tested (399 survived, 31 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 47m) 512/2044 tested (400 survived, 31 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 46m) 514/2044 tested (402 survived, 31 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 46m) 515/2044 tested (403 survived, 31 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 46m) 517/2044 tested (405 survived, 31 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 46m) 518/2044 tested (406 survived, 31 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 46m) 520/2044 tested (408 survived, 31 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 45m) 522/2044 tested (409 survived, 31 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 45m) 523/2044 tested (409 survived, 31 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 45m) 524/2044 tested (409 survived, 32 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 45m) 525/2044 tested (409 survived, 32 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 45m) 526/2044 tested (409 survived, 32 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 45m) 528/2044 tested (409 survived, 32 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 45m) 529/2044 tested (409 survived, 33 timed out)
Mutation testing 25% (elapsed: ~58m, remaining: ~2h 45m) 530/2044 tested (409 survived, 33 timed out)
Mutation testing 25% (elapsed: ~58m, remaining: ~2h 46m) 530/2044 tested (409 survived, 33 timed out)
Mutation testing 25% (elapsed: ~58m, remaining: ~2h 46m) 531/2044 tested (409 survived, 33 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 45m) 533/2044 tested (410 survived, 33 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 45m) 534/2044 tested (411 survived, 33 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 45m) 536/2044 tested (413 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 45m) 537/2044 tested (414 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 45m) 539/2044 tested (416 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 45m) 540/2044 tested (417 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 44m) 542/2044 tested (419 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 44m) 543/2044 tested (420 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 44m) 544/2044 tested (421 survived, 33 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 44m) 546/2044 tested (423 survived, 33 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 44m) 547/2044 tested (424 survived, 33 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 44m) 549/2044 tested (426 survived, 33 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 44m) 550/2044 tested (427 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 43m) 552/2044 tested (429 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 44m) 553/2044 tested (430 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 43m) 555/2044 tested (432 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 43m) 556/2044 tested (433 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 43m) 558/2044 tested (435 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 43m) 559/2044 tested (436 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 43m) 561/2044 tested (438 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 43m) 562/2044 tested (439 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 42m) 564/2044 tested (441 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 42m) 565/2044 tested (442 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 42m) 567/2044 tested (444 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 42m) 568/2044 tested (445 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 42m) 570/2044 tested (447 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 42m) 571/2044 tested (448 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 41m) 573/2044 tested (450 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 41m) 574/2044 tested (451 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 41m) 576/2044 tested (453 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 41m) 577/2044 tested (454 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 41m) 578/2044 tested (455 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 41m) 580/2044 tested (457 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 41m) 581/2044 tested (458 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 40m) 583/2044 tested (460 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 40m) 584/2044 tested (461 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 40m) 586/2044 tested (463 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 40m) 587/2044 tested (464 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 40m) 589/2044 tested (466 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 5m, remaining: ~2h 40m) 590/2044 tested (467 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 5m, remaining: ~2h 39m) 592/2044 tested (469 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 39m) 593/2044 tested (470 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 39m) 595/2044 tested (472 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 39m) 596/2044 tested (473 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 39m) 598/2044 tested (475 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 39m) 599/2044 tested (476 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 38m) 601/2044 tested (478 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 38m) 602/2044 tested (479 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 38m) 604/2044 tested (481 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 38m) 605/2044 tested (482 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 38m) 607/2044 tested (484 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 38m) 608/2044 tested (485 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 38m) 609/2044 tested (486 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 37m) 611/2044 tested (488 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 37m) 612/2044 tested (489 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 37m) 614/2044 tested (491 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 37m) 615/2044 tested (492 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 37m) 617/2044 tested (494 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 37m) 618/2044 tested (495 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 36m) 620/2044 tested (497 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 36m) 621/2044 tested (498 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 36m) 623/2044 tested (500 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 36m) 624/2044 tested (501 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 36m) 626/2044 tested (503 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 36m) 627/2044 tested (504 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 629/2044 tested (506 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 630/2044 tested (507 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 34m) 634/2044 tested (508 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 35m) 634/2044 tested (508 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 35m) 635/2044 tested (508 survived, 34 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 34m) 637/2044 tested (508 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 34m) 638/2044 tested (509 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 35m) 639/2044 tested (509 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 35m) 640/2044 tested (509 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 35m) 640/2044 tested (509 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 641/2044 tested (509 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 642/2044 tested (509 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 642/2044 tested (509 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 644/2044 tested (510 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 645/2044 tested (511 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 646/2044 tested (512 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 35m) 647/2044 tested (512 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 35m) 647/2044 tested (512 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 35m) 649/2044 tested (513 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 35m) 650/2044 tested (514 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 35m) 651/2044 tested (515 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 35m) 653/2044 tested (517 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 13m, remaining: ~2h 35m) 654/2044 tested (518 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 656/2044 tested (520 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 657/2044 tested (521 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 659/2044 tested (523 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 660/2044 tested (524 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 662/2044 tested (526 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 34m) 663/2044 tested (527 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 665/2044 tested (529 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 668/2044 tested (529 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 669/2044 tested (529 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 669/2044 tested (529 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 670/2044 tested (529 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 33m) 671/2044 tested (529 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 33m) 671/2044 tested (529 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 33m) 672/2044 tested (529 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 33m) 674/2044 tested (531 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 33m) 675/2044 tested (532 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 33m) 677/2044 tested (534 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 678/2044 tested (535 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 32m) 680/2044 tested (537 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 32m) 681/2044 tested (538 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 681/2044 tested (538 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 682/2044 tested (538 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 683/2044 tested (538 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 683/2044 tested (538 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 684/2044 tested (538 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 686/2044 tested (538 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 686/2044 tested (538 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 687/2044 tested (538 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 688/2044 tested (538 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 689/2044 tested (538 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 690/2044 tested (538 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 691/2044 tested (538 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 693/2044 tested (539 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 694/2044 tested (540 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 33m) 695/2044 tested (541 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 32m) 697/2044 tested (543 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 32m) 698/2044 tested (544 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 32m) 699/2044 tested (544 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 32m) 699/2044 tested (544 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 32m) 700/2044 tested (544 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 32m) 701/2044 tested (544 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 701/2044 tested (544 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 702/2044 tested (544 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 703/2044 tested (544 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 704/2044 tested (544 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 705/2044 tested (544 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 706/2044 tested (544 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 33m) 707/2044 tested (545 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 32m) 709/2044 tested (547 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 32m) 710/2044 tested (548 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 32m) 712/2044 tested (550 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 32m) 712/2044 tested (550 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 32m) 713/2044 tested (550 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 32m) 714/2044 tested (550 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 33m) 714/2044 tested (550 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 33m) 715/2044 tested (550 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 33m) 716/2044 tested (550 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 33m) 716/2044 tested (550 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 32m) 718/2044 tested (550 survived, 55 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 33m) 718/2044 tested (550 survived, 55 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 33m) 719/2044 tested (550 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 33m) 720/2044 tested (550 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 33m) 720/2044 tested (550 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 33m) 721/2044 tested (550 survived, 58 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 33m) 722/2044 tested (550 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 33m) 722/2044 tested (550 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 33m) 723/2044 tested (550 survived, 60 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 33m) 724/2044 tested (550 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 34m) 724/2044 tested (550 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 33m) 726/2044 tested (551 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 34m) 726/2044 tested (551 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 33m) 727/2044 tested (551 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 33m) 728/2044 tested (551 survived, 64 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 34m) 728/2044 tested (551 survived, 64 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 34m) 729/2044 tested (551 survived, 65 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 34m) 730/2044 tested (551 survived, 66 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 34m) 730/2044 tested (551 survived, 66 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 34m) 731/2044 tested (551 survived, 67 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 34m) 732/2044 tested (551 survived, 68 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 34m) 732/2044 tested (551 survived, 68 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 34m) 733/2044 tested (551 survived, 69 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 35m) 733/2044 tested (551 survived, 69 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 34m) 734/2044 tested (551 survived, 70 timed out)
Mutation testing 35% (elapsed: ~1h 27m, remaining: ~2h 34m) 735/2044 tested (551 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 34m) 737/2044 tested (553 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 34m) 738/2044 tested (554 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 34m) 740/2044 tested (556 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 34m) 741/2044 tested (557 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 34m) 742/2044 tested (558 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 33m) 744/2044 tested (560 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 33m) 745/2044 tested (561 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 33m) 747/2044 tested (563 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 33m) 748/2044 tested (564 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 32m) 750/2044 tested (566 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 32m) 751/2044 tested (567 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 32m) 753/2044 tested (569 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 32m) 754/2044 tested (570 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 32m) 756/2044 tested (572 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 32m) 757/2044 tested (573 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 31m) 759/2044 tested (575 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 31m) 760/2044 tested (576 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 31m) 762/2044 tested (578 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 31m) 763/2044 tested (579 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 31m) 765/2044 tested (581 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 30m) 766/2044 tested (582 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 30m) 767/2044 tested (583 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 30m) 769/2044 tested (585 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 30m) 770/2044 tested (586 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 30m) 772/2044 tested (588 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 30m) 773/2044 tested (589 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 29m) 775/2044 tested (591 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 29m) 776/2044 tested (592 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 29m) 778/2044 tested (594 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 29m) 779/2044 tested (595 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 29m) 781/2044 tested (597 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 29m) 782/2044 tested (598 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 28m) 784/2044 tested (600 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 28m) 785/2044 tested (601 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 28m) 787/2044 tested (603 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 28m) 788/2044 tested (604 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 27m) 790/2044 tested (606 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 27m) 791/2044 tested (607 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 27m) 793/2044 tested (609 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 27m) 794/2044 tested (610 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 27m) 796/2044 tested (612 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 27m) 797/2044 tested (613 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 27m) 798/2044 tested (614 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 26m) 800/2044 tested (616 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 26m) 801/2044 tested (617 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 26m) 803/2044 tested (619 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 26m) 804/2044 tested (620 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 25m) 806/2044 tested (622 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 25m) 807/2044 tested (623 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 25m) 809/2044 tested (625 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 25m) 810/2044 tested (626 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 25m) 812/2044 tested (628 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 25m) 813/2044 tested (629 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 24m) 815/2044 tested (631 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 24m) 816/2044 tested (632 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 24m) 818/2044 tested (634 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 23m) 822/2044 tested (634 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 23m) 824/2044 tested (634 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 23m) 825/2044 tested (635 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 22m) 827/2044 tested (637 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 22m) 828/2044 tested (638 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 22m) 830/2044 tested (640 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 22m) 831/2044 tested (641 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 21m) 833/2044 tested (643 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 21m) 834/2044 tested (644 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 21m) 836/2044 tested (646 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 21m) 837/2044 tested (647 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 21m) 838/2044 tested (648 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 21m) 840/2044 tested (650 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 21m) 841/2044 tested (651 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 20m) 843/2044 tested (653 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 20m) 844/2044 tested (654 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 20m) 846/2044 tested (656 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 20m) 847/2044 tested (657 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 20m) 849/2044 tested (659 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 20m) 850/2044 tested (660 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 19m) 852/2044 tested (662 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 19m) 853/2044 tested (663 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 19m) 855/2044 tested (665 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 19m) 856/2044 tested (666 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 18m) 858/2044 tested (668 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 18m) 859/2044 tested (669 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 18m) 861/2044 tested (671 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 17m) 865/2044 tested (672 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 17m) 866/2044 tested (673 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 17m) 868/2044 tested (675 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 17m) 869/2044 tested (676 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 17m) 870/2044 tested (677 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 16m) 872/2044 tested (679 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 16m) 873/2044 tested (680 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 16m) 875/2044 tested (682 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 16m) 876/2044 tested (683 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 16m) 878/2044 tested (685 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 16m) 879/2044 tested (686 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 15m) 881/2044 tested (688 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 15m) 882/2044 tested (689 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 15m) 884/2044 tested (691 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 15m) 886/2044 tested (692 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 15m) 887/2044 tested (693 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 14m) 889/2044 tested (695 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 14m) 890/2044 tested (696 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 14m) 892/2044 tested (697 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 14m) 893/2044 tested (697 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 14m) 894/2044 tested (697 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 13m) 896/2044 tested (699 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 13m) 897/2044 tested (700 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 13m) 899/2044 tested (702 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 13m) 899/2044 tested (702 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 13m) 900/2044 tested (702 survived, 72 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 13m) 901/2044 tested (702 survived, 73 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 13m) 901/2044 tested (702 survived, 73 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 13m) 902/2044 tested (702 survived, 74 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 13m) 904/2044 tested (704 survived, 74 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 13m) 905/2044 tested (705 survived, 74 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 13m) 906/2044 tested (705 survived, 75 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 13m) 906/2044 tested (705 survived, 75 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 13m) 907/2044 tested (705 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 13m) 908/2044 tested (705 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 13m) 909/2044 tested (706 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 13m) 910/2044 tested (707 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 13m) 912/2044 tested (709 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 12m) 913/2044 tested (710 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 12m) 917/2044 tested (711 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 11m) 919/2044 tested (713 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 11m) 920/2044 tested (714 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 11m) 922/2044 tested (716 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 11m) 923/2044 tested (717 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 11m) 925/2044 tested (719 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 10m) 926/2044 tested (720 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 10m) 928/2044 tested (722 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 10m) 929/2044 tested (723 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 10m) 931/2044 tested (725 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 10m) 932/2044 tested (726 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 9m) 934/2044 tested (728 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 9m) 935/2044 tested (729 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 9m) 937/2044 tested (731 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 9m) 938/2044 tested (732 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 9m) 939/2044 tested (733 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 9m) 941/2044 tested (735 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 9m) 942/2044 tested (736 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 8m) 944/2044 tested (738 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 8m) 945/2044 tested (739 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 8m) 947/2044 tested (741 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 8m) 948/2044 tested (742 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 8m) 950/2044 tested (744 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 7m) 951/2044 tested (745 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 7m) 953/2044 tested (747 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 7m) 953/2044 tested (747 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 7m) 954/2044 tested (747 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 7m) 956/2044 tested (749 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 7m) 957/2044 tested (750 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 7m) 959/2044 tested (752 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 7m) 960/2044 tested (753 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 6m) 962/2044 tested (755 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 6m) 963/2044 tested (756 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 6m) 965/2044 tested (758 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 6m) 966/2044 tested (759 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 5m) 968/2044 tested (761 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 5m) 969/2044 tested (762 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 5m) 971/2044 tested (764 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 5m) 971/2044 tested (764 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 5m) 972/2044 tested (764 survived, 79 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 5m) 973/2044 tested (764 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 5m) 973/2044 tested (764 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 5m) 974/2044 tested (764 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 5m) 976/2044 tested (766 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 5m) 977/2044 tested (767 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 5m) 979/2044 tested (769 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 5m) 980/2044 tested (770 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 4m) 982/2044 tested (772 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 4m) 983/2044 tested (773 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 4m) 985/2044 tested (775 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 4m) 986/2044 tested (776 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 3m) 988/2044 tested (778 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 3m) 989/2044 tested (779 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 3m) 991/2044 tested (781 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 3m) 992/2044 tested (782 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 3m) 994/2044 tested (784 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 3m) 995/2044 tested (785 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 2m) 997/2044 tested (787 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 2m) 998/2044 tested (788 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 2m) 999/2044 tested (789 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 2m) 1001/2044 tested (791 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~2h 2m) 1002/2044 tested (792 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~2h 2m) 1004/2044 tested (794 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~2h 1m) 1005/2044 tested (795 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~2h 1m) 1007/2044 tested (797 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~2h 1m) 1008/2044 tested (798 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~2h 1m) 1010/2044 tested (800 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~2h 1m) 1011/2044 tested (801 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~2h 0m) 1013/2044 tested (803 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 0m) 1014/2044 tested (804 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 0m) 1016/2044 tested (806 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 0m) 1017/2044 tested (807 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 0m) 1019/2044 tested (809 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 0m) 1020/2044 tested (810 survived, 81 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 59m) 1022/2044 tested (812 survived, 81 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 59m) 1023/2044 tested (813 survived, 81 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 59m) 1025/2044 tested (815 survived, 81 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 59m) 1026/2044 tested (816 survived, 81 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 59m) 1027/2044 tested (817 survived, 81 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 59m) 1029/2044 tested (817 survived, 81 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 58m) 1030/2044 tested (817 survived, 81 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~1h 58m) 1031/2044 tested (817 survived, 81 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~1h 58m) 1033/2044 tested (817 survived, 81 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~1h 58m) 1034/2044 tested (817 survived, 81 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~1h 58m) 1036/2044 tested (817 survived, 81 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~1h 58m) 1037/2044 tested (818 survived, 81 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~1h 57m) 1039/2044 tested (820 survived, 81 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 57m) 1040/2044 tested (821 survived, 81 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 57m) 1042/2044 tested (823 survived, 81 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 57m) 1043/2044 tested (824 survived, 81 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 57m) 1045/2044 tested (826 survived, 81 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 57m) 1046/2044 tested (827 survived, 81 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 56m) 1048/2044 tested (829 survived, 81 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 56m) 1049/2044 tested (830 survived, 81 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 56m) 1050/2044 tested (831 survived, 81 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 56m) 1052/2044 tested (833 survived, 81 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 56m) 1053/2044 tested (834 survived, 81 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 55m) 1055/2044 tested (836 survived, 81 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 55m) 1056/2044 tested (837 survived, 81 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 55m) 1058/2044 tested (839 survived, 81 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 55m) 1059/2044 tested (840 survived, 81 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 55m) 1061/2044 tested (842 survived, 81 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 55m) 1062/2044 tested (843 survived, 81 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 54m) 1064/2044 tested (845 survived, 81 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 54m) 1065/2044 tested (846 survived, 81 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 54m) 1067/2044 tested (848 survived, 81 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 54m) 1068/2044 tested (849 survived, 81 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 54m) 1070/2044 tested (851 survived, 81 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 54m) 1071/2044 tested (852 survived, 81 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 53m) 1073/2044 tested (854 survived, 81 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 53m) 1074/2044 tested (855 survived, 81 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 53m) 1076/2044 tested (857 survived, 81 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 53m) 1077/2044 tested (858 survived, 81 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 53m) 1078/2044 tested (859 survived, 81 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 52m) 1080/2044 tested (861 survived, 81 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 52m) 1081/2044 tested (862 survived, 81 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 52m) 1083/2044 tested (864 survived, 81 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 52m) 1084/2044 tested (865 survived, 81 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 52m) 1086/2044 tested (867 survived, 81 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 52m) 1087/2044 tested (868 survived, 81 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 51m) 1089/2044 tested (870 survived, 81 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 51m) 1090/2044 tested (871 survived, 81 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 51m) 1092/2044 tested (873 survived, 81 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 51m) 1093/2044 tested (874 survived, 81 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 51m) 1095/2044 tested (876 survived, 81 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 51m) 1096/2044 tested (877 survived, 81 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 50m) 1098/2044 tested (879 survived, 81 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 50m) 1099/2044 tested (880 survived, 81 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 50m) 1101/2044 tested (882 survived, 81 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 50m) 1102/2044 tested (883 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 49m) 1104/2044 tested (885 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 49m) 1105/2044 tested (886 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 49m) 1107/2044 tested (888 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 49m) 1108/2044 tested (889 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 49m) 1110/2044 tested (891 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 49m) 1111/2044 tested (892 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 49m) 1112/2044 tested (893 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 48m) 1114/2044 tested (895 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 48m) 1115/2044 tested (896 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 48m) 1117/2044 tested (898 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 48m) 1118/2044 tested (899 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 48m) 1120/2044 tested (901 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 47m) 1121/2044 tested (902 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 47m) 1123/2044 tested (904 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 47m) 1124/2044 tested (905 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 47m) 1126/2044 tested (907 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 47m) 1127/2044 tested (908 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 46m) 1129/2044 tested (910 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 46m) 1130/2044 tested (911 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 46m) 1132/2044 tested (913 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 46m) 1133/2044 tested (914 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 46m) 1135/2044 tested (916 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 46m) 1136/2044 tested (917 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 45m) 1138/2044 tested (919 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 45m) 1139/2044 tested (920 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 45m) 1141/2044 tested (922 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 45m) 1142/2044 tested (923 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 45m) 1144/2044 tested (925 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 45m) 1145/2044 tested (926 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 45m) 1146/2044 tested (927 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 44m) 1148/2044 tested (929 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 44m) 1149/2044 tested (930 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 44m) 1151/2044 tested (932 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 44m) 1152/2044 tested (933 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 43m) 1154/2044 tested (935 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 43m) 1155/2044 tested (936 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 43m) 1157/2044 tested (938 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 43m) 1158/2044 tested (939 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 43m) 1160/2044 tested (941 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 43m) 1161/2044 tested (942 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 42m) 1163/2044 tested (944 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 42m) 1164/2044 tested (945 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 42m) 1166/2044 tested (947 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 42m) 1167/2044 tested (948 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 42m) 1169/2044 tested (950 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 42m) 1170/2044 tested (951 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 41m) 1172/2044 tested (953 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 41m) 1173/2044 tested (954 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 41m) 1175/2044 tested (956 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 41m) 1176/2044 tested (957 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 41m) 1177/2044 tested (958 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 41m) 1179/2044 tested (960 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 40m) 1180/2044 tested (961 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 40m) 1182/2044 tested (963 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 40m) 1183/2044 tested (964 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 40m) 1185/2044 tested (966 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 40m) 1186/2044 tested (967 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 39m) 1188/2044 tested (969 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 39m) 1189/2044 tested (970 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 39m) 1191/2044 tested (972 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 39m) 1192/2044 tested (973 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 39m) 1194/2044 tested (975 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 39m) 1195/2044 tested (976 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 38m) 1197/2044 tested (978 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 38m) 1198/2044 tested (979 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 38m) 1200/2044 tested (981 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 38m) 1201/2044 tested (982 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 38m) 1202/2044 tested (983 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 38m) 1204/2044 tested (985 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 37m) 1205/2044 tested (986 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 37m) 1207/2044 tested (988 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 37m) 1208/2044 tested (989 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 37m) 1210/2044 tested (991 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 37m) 1211/2044 tested (992 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 36m) 1213/2044 tested (994 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 36m) 1214/2044 tested (995 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 36m) 1216/2044 tested (997 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 36m) 1217/2044 tested (998 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 36m) 1219/2044 tested (1000 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 36m) 1220/2044 tested (1001 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 35m) 1222/2044 tested (1003 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 35m) 1223/2044 tested (1004 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 35m) 1225/2044 tested (1006 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 35m) 1226/2044 tested (1007 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 35m) 1227/2044 tested (1008 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 35m) 1229/2044 tested (1010 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 34m) 1230/2044 tested (1011 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 34m) 1232/2044 tested (1013 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 34m) 1233/2044 tested (1014 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 34m) 1235/2044 tested (1016 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 34m) 1236/2044 tested (1017 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 33m) 1238/2044 tested (1019 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 33m) 1239/2044 tested (1020 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 33m) 1241/2044 tested (1022 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 33m) 1242/2044 tested (1023 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 33m) 1244/2044 tested (1025 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 33m) 1245/2044 tested (1026 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 32m) 1247/2044 tested (1028 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 32m) 1248/2044 tested (1029 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 32m) 1250/2044 tested (1031 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 32m) 1251/2044 tested (1032 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 32m) 1252/2044 tested (1033 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 32m) 1254/2044 tested (1035 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 31m) 1255/2044 tested (1036 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 31m) 1257/2044 tested (1038 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 31m) 1258/2044 tested (1039 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 31m) 1260/2044 tested (1041 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 31m) 1261/2044 tested (1042 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 31m) 1263/2044 tested (1044 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 30m) 1264/2044 tested (1045 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 30m) 1266/2044 tested (1047 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 30m) 1267/2044 tested (1048 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 30m) 1269/2044 tested (1050 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 30m) 1270/2044 tested (1051 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 29m) 1272/2044 tested (1053 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 29m) 1273/2044 tested (1054 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 29m) 1275/2044 tested (1056 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 29m) 1276/2044 tested (1057 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 29m) 1278/2044 tested (1059 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 29m) 1279/2044 tested (1060 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 29m) 1280/2044 tested (1061 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 28m) 1282/2044 tested (1063 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 28m) 1283/2044 tested (1064 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 28m) 1285/2044 tested (1066 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 28m) 1286/2044 tested (1067 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 28m) 1288/2044 tested (1069 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 27m) 1289/2044 tested (1070 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 27m) 1291/2044 tested (1072 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 27m) 1292/2044 tested (1073 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 27m) 1294/2044 tested (1075 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 27m) 1295/2044 tested (1076 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 26m) 1297/2044 tested (1078 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 26m) 1298/2044 tested (1079 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 26m) 1300/2044 tested (1081 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 26m) 1301/2044 tested (1082 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 26m) 1303/2044 tested (1084 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 26m) 1304/2044 tested (1085 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 25m) 1306/2044 tested (1087 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 25m) 1307/2044 tested (1088 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 25m) 1309/2044 tested (1090 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 25m) 1310/2044 tested (1091 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 25m) 1311/2044 tested (1092 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 25m) 1313/2044 tested (1094 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 25m) 1314/2044 tested (1095 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 24m) 1316/2044 tested (1097 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 24m) 1317/2044 tested (1098 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 24m) 1319/2044 tested (1100 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 24m) 1320/2044 tested (1101 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 24m) 1322/2044 tested (1103 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 23m) 1323/2044 tested (1104 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 23m) 1325/2044 tested (1106 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 23m) 1326/2044 tested (1107 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 23m) 1328/2044 tested (1109 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 23m) 1329/2044 tested (1110 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 22m) 1331/2044 tested (1112 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 22m) 1332/2044 tested (1113 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 22m) 1334/2044 tested (1115 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 22m) 1335/2044 tested (1116 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 22m) 1336/2044 tested (1117 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 22m) 1338/2044 tested (1119 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 22m) 1339/2044 tested (1120 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 21m) 1341/2044 tested (1122 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 21m) 1342/2044 tested (1123 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 21m) 1344/2044 tested (1125 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 21m) 1345/2044 tested (1126 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 21m) 1347/2044 tested (1128 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 20m) 1348/2044 tested (1129 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 20m) 1350/2044 tested (1131 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 20m) 1351/2044 tested (1132 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 20m) 1353/2044 tested (1134 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 20m) 1354/2044 tested (1135 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 19m) 1356/2044 tested (1137 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 19m) 1357/2044 tested (1138 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 19m) 1358/2044 tested (1139 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 19m) 1360/2044 tested (1141 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 19m) 1361/2044 tested (1142 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 19m) 1363/2044 tested (1144 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 19m) 1364/2044 tested (1145 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 18m) 1366/2044 tested (1147 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 18m) 1367/2044 tested (1148 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 18m) 1369/2044 tested (1150 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 18m) 1370/2044 tested (1151 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 18m) 1372/2044 tested (1153 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 18m) 1373/2044 tested (1154 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 17m) 1375/2044 tested (1156 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 17m) 1376/2044 tested (1157 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 17m) 1378/2044 tested (1159 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 17m) 1379/2044 tested (1160 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 17m) 1381/2044 tested (1162 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 16m) 1382/2044 tested (1163 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 16m) 1384/2044 tested (1165 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 16m) 1385/2044 tested (1166 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 16m) 1386/2044 tested (1167 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 16m) 1388/2044 tested (1169 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 16m) 1389/2044 tested (1170 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 15m) 1391/2044 tested (1172 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 15m) 1392/2044 tested (1173 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 15m) 1394/2044 tested (1175 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 15m) 1395/2044 tested (1176 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 15m) 1397/2044 tested (1178 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 15m) 1398/2044 tested (1179 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 14m) 1400/2044 tested (1181 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 14m) 1401/2044 tested (1182 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 14m) 1403/2044 tested (1184 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 14m) 1404/2044 tested (1185 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 14m) 1406/2044 tested (1187 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 14m) 1407/2044 tested (1188 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 13m) 1409/2044 tested (1190 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 13m) 1410/2044 tested (1191 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 13m) 1411/2044 tested (1192 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 13m) 1413/2044 tested (1194 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 13m) 1414/2044 tested (1195 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 12m) 1416/2044 tested (1197 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 12m) 1417/2044 tested (1198 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 12m) 1419/2044 tested (1200 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 12m) 1420/2044 tested (1201 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 12m) 1422/2044 tested (1203 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 12m) 1423/2044 tested (1204 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 11m) 1425/2044 tested (1206 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 11m) 1426/2044 tested (1207 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 11m) 1428/2044 tested (1209 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 11m) 1429/2044 tested (1210 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 11m) 1431/2044 tested (1212 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 11m) 1432/2044 tested (1213 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 10m) 1433/2044 tested (1214 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 10m) 1435/2044 tested (1216 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 10m) 1436/2044 tested (1217 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 10m) 1438/2044 tested (1219 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 10m) 1439/2044 tested (1220 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 10m) 1441/2044 tested (1222 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 9m) 1442/2044 tested (1223 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 9m) 1444/2044 tested (1225 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 9m) 1445/2044 tested (1226 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 9m) 1447/2044 tested (1228 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 9m) 1448/2044 tested (1229 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 8m) 1450/2044 tested (1231 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 8m) 1451/2044 tested (1232 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 8m) 1453/2044 tested (1234 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 8m) 1454/2044 tested (1235 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 8m) 1456/2044 tested (1237 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 8m) 1457/2044 tested (1238 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 8m) 1458/2044 tested (1239 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 7m) 1460/2044 tested (1241 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 7m) 1461/2044 tested (1242 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 7m) 1463/2044 tested (1244 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 7m) 1464/2044 tested (1245 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 7m) 1466/2044 tested (1247 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 6m) 1467/2044 tested (1248 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 6m) 1469/2044 tested (1250 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 6m) 1470/2044 tested (1251 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 6m) 1472/2044 tested (1253 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 6m) 1473/2044 tested (1254 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 6m) 1475/2044 tested (1256 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 5m) 1476/2044 tested (1257 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 5m) 1478/2044 tested (1259 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 5m) 1479/2044 tested (1260 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 5m) 1481/2044 tested (1262 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 5m) 1482/2044 tested (1263 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 5m) 1483/2044 tested (1264 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 4m) 1485/2044 tested (1266 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 4m) 1486/2044 tested (1267 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 4m) 1488/2044 tested (1269 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 4m) 1489/2044 tested (1270 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 4m) 1491/2044 tested (1272 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 4m) 1492/2044 tested (1273 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 3m) 1494/2044 tested (1275 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 3m) 1495/2044 tested (1276 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 3m) 1497/2044 tested (1278 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 3m) 1498/2044 tested (1279 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 3m) 1500/2044 tested (1281 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 3m) 1501/2044 tested (1282 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 2m) 1503/2044 tested (1284 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 2m) 1504/2044 tested (1285 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 2m) 1506/2044 tested (1287 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 2m) 1507/2044 tested (1288 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 2m) 1508/2044 tested (1289 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 1m) 1510/2044 tested (1291 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 1m) 1511/2044 tested (1292 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~1h 1m) 1513/2044 tested (1294 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~1h 1m) 1514/2044 tested (1295 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~1h 1m) 1516/2044 tested (1297 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 1m) 1517/2044 tested (1298 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 0m) 1519/2044 tested (1300 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 0m) 1520/2044 tested (1301 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 0m) 1522/2044 tested (1303 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 0m) 1523/2044 tested (1304 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 0m) 1525/2044 tested (1306 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 0m) 1526/2044 tested (1307 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~59m) 1528/2044 tested (1309 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~59m) 1529/2044 tested (1310 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~59m) 1531/2044 tested (1312 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~59m) 1532/2044 tested (1313 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~59m) 1533/2044 tested (1314 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~59m) 1535/2044 tested (1316 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~58m) 1536/2044 tested (1317 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~58m) 1538/2044 tested (1319 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~58m) 1539/2044 tested (1320 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~58m) 1541/2044 tested (1322 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~58m) 1542/2044 tested (1323 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~57m) 1544/2044 tested (1325 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~57m) 1545/2044 tested (1326 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~57m) 1547/2044 tested (1328 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~57m) 1548/2044 tested (1329 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~57m) 1550/2044 tested (1331 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~57m) 1551/2044 tested (1332 survived, 81 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~56m) 1553/2044 tested (1334 survived, 81 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~56m) 1554/2044 tested (1335 survived, 81 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~56m) 1556/2044 tested (1337 survived, 81 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~56m) 1557/2044 tested (1338 survived, 81 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~56m) 1558/2044 tested (1339 survived, 81 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~56m) 1560/2044 tested (1341 survived, 81 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~56m) 1561/2044 tested (1342 survived, 81 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~55m) 1563/2044 tested (1344 survived, 81 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~55m) 1564/2044 tested (1345 survived, 81 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~55m) 1566/2044 tested (1347 survived, 81 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~55m) 1567/2044 tested (1348 survived, 81 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~55m) 1569/2044 tested (1350 survived, 81 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~54m) 1570/2044 tested (1351 survived, 81 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~54m) 1572/2044 tested (1353 survived, 81 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~54m) 1573/2044 tested (1354 survived, 81 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~54m) 1575/2044 tested (1356 survived, 81 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~54m) 1576/2044 tested (1357 survived, 81 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~53m) 1578/2044 tested (1359 survived, 81 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~53m) 1579/2044 tested (1360 survived, 81 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~53m) 1581/2044 tested (1362 survived, 81 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~53m) 1582/2044 tested (1363 survived, 81 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~53m) 1584/2044 tested (1365 survived, 81 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~53m) 1585/2044 tested (1366 survived, 81 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~53m) 1586/2044 tested (1367 survived, 81 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~52m) 1588/2044 tested (1369 survived, 81 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~52m) 1589/2044 tested (1370 survived, 81 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~52m) 1591/2044 tested (1372 survived, 81 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~52m) 1592/2044 tested (1373 survived, 81 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~52m) 1594/2044 tested (1375 survived, 81 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~52m) 1595/2044 tested (1376 survived, 81 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~51m) 1597/2044 tested (1378 survived, 81 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~51m) 1598/2044 tested (1379 survived, 81 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~51m) 1600/2044 tested (1381 survived, 81 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~51m) 1601/2044 tested (1382 survived, 81 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~51m) 1603/2044 tested (1384 survived, 81 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~50m) 1604/2044 tested (1385 survived, 81 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~50m) 1606/2044 tested (1387 survived, 81 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~50m) 1607/2044 tested (1388 survived, 81 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~50m) 1609/2044 tested (1390 survived, 81 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~50m) 1610/2044 tested (1391 survived, 81 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~50m) 1611/2044 tested (1392 survived, 81 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~49m) 1613/2044 tested (1394 survived, 81 timed out)
Mutation testing 78% (elapsed: ~3h 7m, remaining: ~49m) 1614/2044 tested (1395 survived, 81 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~49m) 1616/2044 tested (1397 survived, 81 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~49m) 1617/2044 tested (1398 survived, 81 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~49m) 1619/2044 tested (1400 survived, 81 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~49m) 1620/2044 tested (1401 survived, 81 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~48m) 1622/2044 tested (1403 survived, 81 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~48m) 1623/2044 tested (1404 survived, 81 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~48m) 1625/2044 tested (1406 survived, 81 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~48m) 1626/2044 tested (1407 survived, 81 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~48m) 1628/2044 tested (1409 survived, 81 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~48m) 1629/2044 tested (1410 survived, 81 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~47m) 1631/2044 tested (1412 survived, 81 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~47m) 1632/2044 tested (1413 survived, 81 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~47m) 1634/2044 tested (1415 survived, 81 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~47m) 1635/2044 tested (1416 survived, 81 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~47m) 1636/2044 tested (1417 survived, 81 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~47m) 1638/2044 tested (1419 survived, 81 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~46m) 1639/2044 tested (1420 survived, 81 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~46m) 1641/2044 tested (1422 survived, 81 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~46m) 1642/2044 tested (1423 survived, 81 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~46m) 1644/2044 tested (1425 survived, 81 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~46m) 1645/2044 tested (1426 survived, 81 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~45m) 1647/2044 tested (1428 survived, 81 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~45m) 1648/2044 tested (1429 survived, 81 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~45m) 1650/2044 tested (1431 survived, 81 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~45m) 1651/2044 tested (1432 survived, 81 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~45m) 1653/2044 tested (1434 survived, 81 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~45m) 1654/2044 tested (1435 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~44m) 1656/2044 tested (1437 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~44m) 1657/2044 tested (1438 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~44m) 1659/2044 tested (1440 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~44m) 1660/2044 tested (1441 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~44m) 1661/2044 tested (1442 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~44m) 1663/2044 tested (1444 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~43m) 1664/2044 tested (1445 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~43m) 1666/2044 tested (1447 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~43m) 1667/2044 tested (1448 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~43m) 1669/2044 tested (1450 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~43m) 1670/2044 tested (1451 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~43m) 1672/2044 tested (1453 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~42m) 1673/2044 tested (1454 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~42m) 1675/2044 tested (1456 survived, 81 timed out)
Mutation testing 81% (elapsed: ~3h 14m, remaining: ~42m) 1676/2044 tested (1457 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~42m) 1678/2044 tested (1459 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~42m) 1679/2044 tested (1460 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~42m) 1681/2044 tested (1462 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~41m) 1682/2044 tested (1463 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~41m) 1684/2044 tested (1465 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1685/2044 tested (1466 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1687/2044 tested (1468 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1688/2044 tested (1469 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1689/2044 tested (1470 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~40m) 1691/2044 tested (1472 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~40m) 1692/2044 tested (1473 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~40m) 1694/2044 tested (1475 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~40m) 1695/2044 tested (1476 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~40m) 1697/2044 tested (1478 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~40m) 1698/2044 tested (1479 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~39m) 1700/2044 tested (1481 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~39m) 1701/2044 tested (1482 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~39m) 1703/2044 tested (1484 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~39m) 1704/2044 tested (1485 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~39m) 1706/2044 tested (1487 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~38m) 1707/2044 tested (1488 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~38m) 1709/2044 tested (1490 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~38m) 1710/2044 tested (1491 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~38m) 1712/2044 tested (1493 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~38m) 1713/2044 tested (1494 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~38m) 1714/2044 tested (1495 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~37m) 1716/2044 tested (1497 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~37m) 1717/2044 tested (1498 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~37m) 1719/2044 tested (1500 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~37m) 1720/2044 tested (1501 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~37m) 1722/2044 tested (1503 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~37m) 1723/2044 tested (1504 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~36m) 1725/2044 tested (1506 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~36m) 1726/2044 tested (1507 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~36m) 1728/2044 tested (1509 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~36m) 1729/2044 tested (1510 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~36m) 1731/2044 tested (1512 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~36m) 1732/2044 tested (1513 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~35m) 1734/2044 tested (1515 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~35m) 1735/2044 tested (1516 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~35m) 1737/2044 tested (1518 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~35m) 1738/2044 tested (1519 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~35m) 1739/2044 tested (1520 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~35m) 1741/2044 tested (1522 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~34m) 1742/2044 tested (1523 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~34m) 1744/2044 tested (1525 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~34m) 1745/2044 tested (1526 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~34m) 1747/2044 tested (1528 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~34m) 1748/2044 tested (1529 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~33m) 1750/2044 tested (1531 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~33m) 1751/2044 tested (1532 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~33m) 1753/2044 tested (1534 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~33m) 1754/2044 tested (1535 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 23m, remaining: ~33m) 1756/2044 tested (1537 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 23m, remaining: ~33m) 1757/2044 tested (1538 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~32m) 1759/2044 tested (1540 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~32m) 1760/2044 tested (1541 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~32m) 1762/2044 tested (1543 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~32m) 1763/2044 tested (1544 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~32m) 1765/2044 tested (1546 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~32m) 1766/2044 tested (1547 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~32m) 1767/2044 tested (1548 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~31m) 1769/2044 tested (1550 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~31m) 1770/2044 tested (1551 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~31m) 1772/2044 tested (1553 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~31m) 1773/2044 tested (1554 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~31m) 1775/2044 tested (1556 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~30m) 1776/2044 tested (1557 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~30m) 1778/2044 tested (1559 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~30m) 1779/2044 tested (1560 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~30m) 1781/2044 tested (1562 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~30m) 1782/2044 tested (1563 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~30m) 1784/2044 tested (1565 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~29m) 1785/2044 tested (1566 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~29m) 1787/2044 tested (1568 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~29m) 1788/2044 tested (1569 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~29m) 1790/2044 tested (1571 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~29m) 1791/2044 tested (1572 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~29m) 1792/2044 tested (1573 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~28m) 1794/2044 tested (1575 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~28m) 1795/2044 tested (1576 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~28m) 1797/2044 tested (1578 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~28m) 1798/2044 tested (1579 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~28m) 1800/2044 tested (1581 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~28m) 1801/2044 tested (1582 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~27m) 1803/2044 tested (1584 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~27m) 1804/2044 tested (1585 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~27m) 1806/2044 tested (1587 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~27m) 1807/2044 tested (1588 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~27m) 1809/2044 tested (1590 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~27m) 1810/2044 tested (1591 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~26m) 1812/2044 tested (1593 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~26m) 1813/2044 tested (1594 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~26m) 1815/2044 tested (1596 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~26m) 1816/2044 tested (1597 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 30m, remaining: ~26m) 1818/2044 tested (1599 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 30m, remaining: ~25m) 1819/2044 tested (1600 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~25m) 1820/2044 tested (1601 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~25m) 1822/2044 tested (1603 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~25m) 1823/2044 tested (1604 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~25m) 1825/2044 tested (1606 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~25m) 1826/2044 tested (1607 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~24m) 1828/2044 tested (1609 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~24m) 1829/2044 tested (1610 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~24m) 1831/2044 tested (1612 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~24m) 1832/2044 tested (1613 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~24m) 1834/2044 tested (1615 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 32m, remaining: ~24m) 1835/2044 tested (1616 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 32m, remaining: ~23m) 1837/2044 tested (1618 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 32m, remaining: ~23m) 1838/2044 tested (1619 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~23m) 1840/2044 tested (1621 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~23m) 1841/2044 tested (1622 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~23m) 1843/2044 tested (1624 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~23m) 1844/2044 tested (1625 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~22m) 1846/2044 tested (1627 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~22m) 1847/2044 tested (1628 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~22m) 1848/2044 tested (1629 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~22m) 1850/2044 tested (1631 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~22m) 1851/2044 tested (1632 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~22m) 1853/2044 tested (1634 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~21m) 1854/2044 tested (1635 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~21m) 1856/2044 tested (1637 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~21m) 1857/2044 tested (1638 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~21m) 1859/2044 tested (1640 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~21m) 1860/2044 tested (1641 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~21m) 1862/2044 tested (1643 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1863/2044 tested (1644 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1865/2044 tested (1646 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1866/2044 tested (1647 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1868/2044 tested (1649 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1869/2044 tested (1650 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1871/2044 tested (1652 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1872/2044 tested (1653 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1873/2044 tested (1654 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1875/2044 tested (1656 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1876/2044 tested (1657 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1878/2044 tested (1659 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 37m, remaining: ~19m) 1879/2044 tested (1660 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~18m) 1881/2044 tested (1662 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~18m) 1882/2044 tested (1663 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~18m) 1884/2044 tested (1665 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~18m) 1885/2044 tested (1666 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~18m) 1887/2044 tested (1668 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~18m) 1888/2044 tested (1669 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~17m) 1890/2044 tested (1671 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~17m) 1891/2044 tested (1672 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~17m) 1893/2044 tested (1674 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~17m) 1894/2044 tested (1675 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~17m) 1896/2044 tested (1677 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 39m, remaining: ~16m) 1897/2044 tested (1678 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 39m, remaining: ~16m) 1898/2044 tested (1679 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 39m, remaining: ~16m) 1900/2044 tested (1681 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~16m) 1901/2044 tested (1682 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~16m) 1903/2044 tested (1684 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~16m) 1904/2044 tested (1685 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1906/2044 tested (1687 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1907/2044 tested (1688 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1909/2044 tested (1690 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1910/2044 tested (1691 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1912/2044 tested (1693 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1913/2044 tested (1694 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1915/2044 tested (1696 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1916/2044 tested (1697 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1918/2044 tested (1699 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1919/2044 tested (1700 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1921/2044 tested (1702 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 41m, remaining: ~14m) 1922/2044 tested (1703 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1924/2044 tested (1705 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1925/2044 tested (1706 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1926/2044 tested (1707 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1928/2044 tested (1709 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1929/2044 tested (1710 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1931/2044 tested (1712 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1932/2044 tested (1713 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1934/2044 tested (1715 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1935/2044 tested (1716 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1937/2044 tested (1718 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1938/2044 tested (1719 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~11m) 1940/2044 tested (1721 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 44m, remaining: ~11m) 1941/2044 tested (1722 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~11m) 1943/2044 tested (1724 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~11m) 1944/2044 tested (1725 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~11m) 1946/2044 tested (1727 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~11m) 1947/2044 tested (1728 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~10m) 1949/2044 tested (1730 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1950/2044 tested (1731 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1951/2044 tested (1732 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1953/2044 tested (1734 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1954/2044 tested (1735 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1956/2044 tested (1737 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1957/2044 tested (1738 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 46m, remaining: ~9m) 1959/2044 tested (1740 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 46m, remaining: ~9m) 1960/2044 tested (1741 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 46m, remaining: ~9m) 1962/2044 tested (1743 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~9m) 1963/2044 tested (1744 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~9m) 1965/2044 tested (1746 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~8m) 1966/2044 tested (1747 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1968/2044 tested (1749 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1969/2044 tested (1750 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1971/2044 tested (1752 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1972/2044 tested (1753 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1974/2044 tested (1755 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~7m) 1975/2044 tested (1756 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1977/2044 tested (1758 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1978/2044 tested (1759 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1979/2044 tested (1760 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1981/2044 tested (1762 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1982/2044 tested (1763 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~6m) 1984/2044 tested (1765 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1985/2044 tested (1766 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1987/2044 tested (1768 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1988/2044 tested (1769 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1990/2044 tested (1771 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1991/2044 tested (1772 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~5m) 1993/2044 tested (1774 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 1994/2044 tested (1775 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 1996/2044 tested (1777 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 1997/2044 tested (1778 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 1999/2044 tested (1780 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 2000/2044 tested (1781 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~4m) 2002/2044 tested (1783 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 51m, remaining: ~4m) 2003/2044 tested (1784 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~4m) 2005/2044 tested (1786 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~4m) 2006/2044 tested (1787 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~4m) 2007/2044 tested (1788 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~4m) 2009/2044 tested (1790 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~3m) 2010/2044 tested (1791 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~3m) 2012/2044 tested (1793 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~3m) 2013/2044 tested (1794 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~3m) 2015/2044 tested (1796 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~3m) 2016/2044 tested (1797 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~2m) 2018/2044 tested (1799 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~2m) 2019/2044 tested (1800 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 53m, remaining: ~2m) 2023/2044 tested (1801 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~2m) 2025/2044 tested (1803 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~2m) 2026/2044 tested (1804 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~1m) 2028/2044 tested (1806 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~1m) 2029/2044 tested (1807 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~1m) 2031/2044 tested (1809 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: ~1m) 2032/2044 tested (1810 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: ~1m) 2034/2044 tested (1812 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: ~1m) 2035/2044 tested (1813 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: <1m) 2036/2044 tested (1814 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: <1m) 2038/2044 tested (1816 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: <1m) 2039/2044 tested (1817 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 55m, remaining: <1m) 2041/2044 tested (1819 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 55m, remaining: <1m) 2042/2044 tested (1820 survived, 81 timed out)

All tests
  ✓ All tests (killed 141)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap === "object") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", "undefined");

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", 0);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "console.log"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "undefined"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "null"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("deferred", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("fulfilled", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("rejected", definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     throw new Error();
+   });

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     return 42;
+   });

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     return function () {
+       return 42;
+     };
+   });

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.buggy) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.buggy()) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.buggy === true) {

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(null);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(undefined);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define("foo");

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "object") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "function") {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notOk() && true) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notOk() || false) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.ok === true()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.ok !== true()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window === "undefined" || typeof self === "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self === "undefined") {

[Survived] PrecomputedMutator
q.js:115:16
-           while (head.next) {
+           while (tail.task) {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (domain && domain.enter()) {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.exit();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.run();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.bind();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, undefined);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, null, domain);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, {});

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:129:20
-               task = laterQueue.pop();
+               task = laterQueue.shift();

[Survived] PrecomputedMutator
q.js:130:13
-               runSingle(task);
+               noop(task);

[Survived] PrecomputedMutator
q.js:130:23
-               runSingle(task);
+               runSingle(() => {});

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.run(function () {})) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, "hello");

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain && false) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain || true) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (domain && false) {

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.destroy();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.run();

[Survived] PrecomputedMutator
q.js:197:30
-               process.nextTick(flush);
+               process.nextTick(flush.bind(null));

[Survived] PrecomputedMutator
q.js:197:30
-               process.nextTick(flush);
+               process.nextTick(function () {
+     flush();
+   });

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "object") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "function") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(this);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setInterval.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(this, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush());

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, requestAnimationFrame(flush));

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "undefined") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "object") {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port2.send(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.send(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage("hello");

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, "Hello, world!");

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:228:13
-               requestPortTick();
+               requestTick();

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(setInterval(flush, 1000), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (!flushing && true) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing || false) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length < 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (2);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (3);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (0);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index > this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index < this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index != this.length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index + 1 >= length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index + 2 >= length) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index != length; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = 0) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index in this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index in this.length - 1) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index in this.length + 1) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis * 2, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] + 1, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] - 1, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] * 2, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i == this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i = 0) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] + value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] * value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.pop(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.shift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) + 1);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) - 1);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) * 2);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.length));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.length - 1));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.length + 1));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call({}, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, null, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, "value", index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index - 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index * 2, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, null));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, undefined));

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key of object) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {}) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) || object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) ^ object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key - 1)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key * 2)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(undefined, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty({}, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, this[key])) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key.toUpperCase())) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(this[key]);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key + 1);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key.toUpperCase());

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_hasOwnProperty(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_keys(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_create(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.stack) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue !== "undefined" && ReturnValue === "undefined") {

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue !== "undefined" && ReturnValue !== "undefined") {

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && false

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && typeof error.stack === "string"

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.source; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise + 1; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.then(function () {
+     return null;
+   }); !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p.isRejected(); p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p.isFulfilled(); p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p && !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source.source.source) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__maximumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackDepth__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.shift(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.slice(0, -1));

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.slice(1));

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.slice(0, -2));

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.pop(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.shift(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.name);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.toString());

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + "From previous event:" + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + "From previous event:" + " ");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + "From previous event:" + "\t");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.reverse());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.slice(1));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.concat(["new error"]));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "error", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "message", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack.toUpperCase(),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack.split("").reverse().join(""),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(" ");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\t");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\\n");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = -1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = this.length; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i == lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i = i + 1) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!getFileNameAndLineNumber(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line.split(" ").join("")) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line.slice(1)) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line.replace(/^\w+/, "")) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.pop(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.shift(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.unshift(line);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line + 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line - 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line * 2);

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\t");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.match("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.search("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(node.js:)") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split("@")[1]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "hello"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], null(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], undefined(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(" ").reverse().join(" "));

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.toUpperCase());

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.replace("at", "from"));

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] > 0) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] !== attempt2[0]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] < attempt2[0]) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[4])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split("@")[1]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.replace(/^.*@/, ""));

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.substring(stackLine.indexOf("@") + 1));

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[1]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[0]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3.length) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], String(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], undefined(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[0])];

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split("at ")[1]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split("at ")[0]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split("at ").slice(-2)[0]);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[0] === undefined) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[1] === undefined) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\t");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(" ");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\\n");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].lastIndexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].includes("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("%") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("*") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[1]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[2]);

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber === undefined) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.indexOf(undefined) === -1) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console !== "object") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.apply(this, arguments));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.apply(null, arguments));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.apply(undefined, arguments));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.bind(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.toString(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, []);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, "foo");

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (value === Promise) {

[Survived] PrecomputedMutator
q.js:563:13
-           if (messages) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[1] === false) { // progress operand

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.pop(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.shift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.unshift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands.length);

[Survived] PrecomputedMutator
q.js:570:17
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(undefined, args));

[Survived] PrecomputedMutator
q.js:570:17
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(null, args));

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(0, args);

[Survived] PrecomputedMutator
q.js:570:72
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages[0]) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.pop()) {

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue + 1(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue - 1(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue * 2(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.promise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.source);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(fulfill(resolvedPromise));

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue !== null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue.valueOf() === null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (!isPromise(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromise && isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue + 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue * 2)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue - 1)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === null) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (typeof resolvedPromise === "undefined") {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise.isFulfilled()) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport ^ hasStacks) {

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") - 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(" ") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\\n") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && hasStacks && false) {

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(undefined, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(null, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(0, message);

[Survived] PrecomputedMutator
q.js:624:62
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message.concat(message));

[Survived] PrecomputedMutator
q.js:634:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== undefined) {

[Survived] PrecomputedMutator
q.js:638:16
-           become(Q(value));
+           become(Q.resolve(value));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== undefined) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(otherValue));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(value + 1));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(resolve(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(notify(value));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value * 2));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value - 1));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise === true) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== false) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListeners[0](progress);

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListeners[progressListeners.length - 1](progress);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress + 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress - 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress * 2);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error != null) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error !== null) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error !== undefined) {

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(error.message);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(error.stack);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(error.name);

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length < 2) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.fulfill(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 4));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 1), 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 3), 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 4));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.notify(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.fulfill(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(false);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== function () {}) {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== Promise.resolve) {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.reject();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.notify();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify.bind(deferred));

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify.call(deferred));

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.fulfill, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.makeNodeResolver, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(null));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(undefined));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(0));

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.fulfill(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject("Error");

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.reject(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.resolve(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.all(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + 1).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x * 2).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x + y);

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([null, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x == y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y && x !== -y) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i == len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = i + 10) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.reject(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.resolve(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.all(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] + 1).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] * 2).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] - 1).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === undefined) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === function () {}) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === undefined) {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (descriptor[op].bind(promise)) {

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(null, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply({}, args);

[Survived] PrecomputedMutator
q.js:808:56
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.reject);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.resolve);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.then);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(undefined, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(this, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op + 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op - 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op * 2, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, null);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, undefined);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, 0);

[Survived] PrecomputedMutator
q.js:813:22
-               result = reject(exception);
+               result = undefined(exception);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject("error");

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("custom error message"));

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.state) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.toString()) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.call()) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "unknown") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self, null);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self, undefined);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self, {});

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(null, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(undefined, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(0, self);

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed + 1(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed * 2(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed / 2(value) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed("foo") : value;

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done && false) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(undefined);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed({});

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(e, true)) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(e, false)) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(e, !Q.onerror)) {

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.message);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.stack);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.toString());

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw === true) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.reject(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(undefined);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify("foo");

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.call(null));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.apply(null));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.bind(null)());

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.fcall(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.fcall(value));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.call(value));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.apply(value));

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.fapply(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.fbind(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed, null);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed, undefined);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.reject(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.resolve(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.defer(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(0).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(null, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, resolved, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, then, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     throw new Error();
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.reject(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.resolve(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.all(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(0);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return Promise.reject(reason);
+   });

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Q.reject(promise).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Q.resolve(promise).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Q.defer(promise).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(null).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(undefined).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(new Promise()).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(undefined);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(0);

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (!isPromise(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isFulfilled(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isRejected(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(null)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(undefined)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(0)) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "fulfilled" && inspected.value === undefined) {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return !isPromise(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isFulfilled(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "pending") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "fulfilled") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "rejected") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.state().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.value().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.reason().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !!isPromise(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromiseAlike(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isFulfilled(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.then()) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.then(null)) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.then(function () {})) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.value().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.reason().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return !isPromise(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isFulfilled(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "rejected") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "fulfilled") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "pending") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return this.inspect.state().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return this.inspect.fulfilled().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return this.inspect.rejected().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== true) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections === true) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== false) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise) > 0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise) == -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise) < 0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.includes(promise), promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.indexOf(promise) !== -1, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     throw new Error("unhandled rejection");
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     return Q.reject(reason);
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     return Q.reject(new Error("unhandled rejection"));
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "foo", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "bar", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "baz", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.message, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.stack, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.name, promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.unshift(promise);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== undefined) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined" && reason.stack !== undefined) {

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.message);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.code);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.name);

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== true) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(reportedUnhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.concat(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.filter(function (rejection) {
+     return rejection === promise;
+   }), promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at < -1) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.indexOf(promise));

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.includes(promise));

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.findIndex(p => p === promise));

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledReasons.length, promise);

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport > -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (reportedUnhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled" + 1, unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled" + "1", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled" + "1" + "2", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at] = "new reason", promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], null);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], undefined);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then(function () {}));

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, reportedUnhandledRejections.length - 1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.length = 0(atReport, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at * 2, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledRejections.length = 0();

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledReasons.length = 0();

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected && false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected || true) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(0);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, undefined);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, "foo");

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       untrackRejection(rejection, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(0, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, "some string");

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === "undefined") {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === void 0) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(args, null);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(args.slice());

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.toString(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(0, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.slice());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.concat());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.map(function (arg) {
+     return arg * 2;
+   }));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice());

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat());

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].call(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].bind(value, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply({}, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args[0]);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice(1));

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.map());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.toString(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(this, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.map(function (x) {
+     return x * 2;
+   }));

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.keys(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(undefined);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys([]);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.progress);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.cancel(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(new Error());

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.concat(args[0]));

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch({}, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op + 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op - 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op * 2, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, null);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, []);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, undefined);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.reject(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.fulfill(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(null).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(undefined).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(false).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, Q.reject(new Error("rejected")));

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, Q.resolve(rejection));

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.then().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.catch().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.finally().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return rejected.apply(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.call(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.bind(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(0, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.slice());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.concat());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.map(function (x) {
+     return x * 2;
+   }));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration !== undefined) {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration !== null) {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("foo");

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return resolve(exception);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return Q.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.name);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value === undefined) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value !== undefined) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value + 1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value - 1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value * 2);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value * 2, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value - 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, reject, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, Q(undefined), errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, reject);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, resolve);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("foo");

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception instanceof StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.name === "StopIteration") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.constructor.name === "StopIteration") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (!isStopIteration(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration && false(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.value)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.message)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.message);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.stack);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.name);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return resolve(exception);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return Q.reject(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.name);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback, errback.bind(null, result));

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback.bind(null, result), errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.reject(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.defer(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.then(function (value) {
+     return value;
+   }), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.catch(function (error) {
+     throw error;
+   }), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, errback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, reject, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, resolve, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, null);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, undefined);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, function () {});

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({});

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.bind(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply("foo", arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.call(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.apply(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(null, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(generator, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(generator, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(errback.bind(continuer, "throw"));

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(null, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(undefined, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(void 0, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return reject();

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.fail(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.reject(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.resolve(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.bind(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.apply(this))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, any(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, some(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([1, 2, 3])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all("hello")], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat(args));

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, args.reverse());

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.bind(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply("foo", args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat([1]));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.map(function (x) {
+     return x + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.concat([1]));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.reject(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.deferred(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q({}).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op - 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op * 2, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[0]);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.concat(args[0]));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve(op, args));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.notify(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.resolve(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.promise, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op - 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op * 2, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, undefined);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key, []]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.reject(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q({}).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", ["key"]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key * 2]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value * 2]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.reject(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.resolve(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.when(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(undefined).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(Q.reject(new Error("error"))).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, 1]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key + 1, value]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value * 2]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("setValue", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set" + "Value", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, null]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, ""]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.reject(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q({}).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, "value"]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("post", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return Promise.prototype.dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return Q.dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, "key"]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args, 1]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args, "foo"]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.reject(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.resolve(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.all(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q({}).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("set", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args[0]]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.concat(args)]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.reject(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.resolve(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.defer(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(undefined).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q({}).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("set", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 3))]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 0, 2))]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 2), 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, -1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("put", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("patch", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, arguments.length - 1)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([arguments[1], arguments[2]])]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([arguments[1], arguments[3]])]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(null, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(undefined, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([], 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, [args]]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.concat()]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.reject(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q({}).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("concat", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args, 1]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args, "foo"]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args, function () {
+     return 1;
+   }]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [undefined, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply" + "call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, 0]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, "foo"]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, function () {
+     return "bar";
+   }]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [this, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(null).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q({}).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("concat", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, -1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 3), 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("concat", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(array_slice(arguments, 1, 2))]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(array_slice(arguments, 1, 3))]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q({});

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args, 1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3), 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, Math.floor(args.length / 2));

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 3))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(array_slice(arguments, 0, 1)))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.slice(1));

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.slice(0, -1));

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.slice(1, -1));

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(undefined))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("push", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.foo).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object[0]).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.bar).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [undefined]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [null]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("indexOf", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", ["a", "b", "c"]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [null, null, null]);

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().value === undefined

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state !== "fulfilled"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   !isPromise(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   isPromise && false(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   isPromise || true(promise) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {})) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.catch(function () {})) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.finally(function () {})) &&

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.value()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.reason()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === 0 && promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.cancel(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.concat([Q.reject()]));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.map(function (promise) {
+     return Q.reject(promise.inspect().value);
+   }));

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.resolve({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.progress({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress + 1
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress - 1
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress * 2
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.cancel(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([null]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([undefined]);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allResolved(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(null);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(undefined);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all([]);

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === 1) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.defer();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.when();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected, function () {}));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when.reject(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when.resolve(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when.all(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).then(onRejected, onFulfilled), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, noop, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, function () {}, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, noop);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.promise(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(index);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise.value);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount !== 0) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.inspect(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject("error");

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return all(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return some(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(null);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(undefined);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any([]);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(any, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "any", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "all", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "any");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "none");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, promises);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, undefined);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_forEach(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.reverse(), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(1), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.concat([Q.resolve()]), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.when);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(null, noop), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(noop, null), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop), noop, noop);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allRejected(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(undefined);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(0);

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.reject(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.resolve(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.defer(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.reverse()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice(1)).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.concat(Q.reject())).allSettled();

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(rejected, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(fulfilled, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(noop, regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, onRejected);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, onFulfilled);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, onProgress);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(rejected, null);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(0).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (err) {
+     throw err;
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (err) {
+     return err;
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (err) {
+     return Q.reject(err);
+   });

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(rejected, null);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(NaN, rejected);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, progressed.bind(this));

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(true, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, function () {}, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(function () {}, function () {}, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, 0, progressed);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.reject(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.resolve(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.defer(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(undefined)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(0)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.fcall());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.apply());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.bind());

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback !== null) {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback !== null && callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.defer(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fcall());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.call());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.apply());

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress, null);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress, function () {});

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(undefined).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(Q.reject(new Error("Test error"))).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progressed, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, progressed, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.then());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.catch());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.finally());

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, fulfilled, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, progress, void 0) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, fulfilled, progress, null) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(undefined, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, fulfilled, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected(new Error()), progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected(new Error("custom error message")), progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, null) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, undefined) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, 0) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(null));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, null);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(0, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError());

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, null);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, function () {});

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error());

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, "some string");

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(Q.reject(new Error("test"))).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms + 1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms - 1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, undefined);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error());

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.notify(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           null(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(new Error("Different error message"));

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(error.message = "Different error message");

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           undefined(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(Promise.reject());

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           null(exception);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== void 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === undefined) {

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(0).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(0);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(null);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(undefined);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve("foo");

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.reject(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.resolve(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.defer(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice.length(args);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([].concat(arguments));

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function (err) {
+     throw err;
+   }));

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(0, -1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(0, 1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 4));

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, NaN);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return Q.reject(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return Q.defer(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return Q.when(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice.length(arguments);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.concat(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.slice(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(undefined));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(deferred.promise));

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(0)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat([])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.map(function (x) {
+     return x;
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback !== "function") {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== null) {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(array_slice(arguments), 1);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.splice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1949:24
-           var deferred = defer();
+           var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1949:24
-           var deferred = defer();
+           var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function (err) {
+     throw err;
+   }));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeRejector());

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           deferred(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           this.deferred(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.deferred(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(undefined).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments.length);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift({});

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(0, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.concat([null]));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.reverse());

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 2), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 1, 2), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 3), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.splice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(undefined));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[0]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[1]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[2]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, nodeArgs);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, baseArgs);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, args.slice(2));

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.concat(array_slice(arguments))).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice(0, -1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.pop()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments.length);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([], 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, "hello");

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(Promise.reject());

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(42, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.concat([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.filter(function (x) {
+     return x !== 1;
+   }));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat(deferred.makeNodeResolver()));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, [args, deferred.makeNodeResolver()]);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q({}).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(null, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(undefined, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("name", args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, null);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, undefined);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, []);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice.length(args || []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver.bind(null));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("set", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "foo"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject("error"));

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject(new Error("error")));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 2, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice.length(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(1, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(undefined, 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(() => {});

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.reject(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.resolve(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.defer(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(null).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(undefined).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.slice(0, -1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice.length(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().bind(null));

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().apply(null));

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().call(null));

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "foo"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return 1(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return null(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return undefined(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(0).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(null);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(undefined);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(function () {});

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback + 1) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback.length) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, undefined);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback({}, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, "hello");

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback("error");

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.reject();

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.resolve();

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.all();

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("ends.promise.get('tail')");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail.head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("ends.promise.tail.head");

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.promise.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(new Error("Different error message"));

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(undefined)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(new Error("Different error message"))};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               closed.resolve(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               next.reject(end);

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   10.86 |      141 |        81 |       1822 |        0 |        0 |
 q.js     |   10.97 |      141 |        81 |       1801 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         21 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m06:16:46 (3108) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m06:16:46 (3108) INFO MutationTestExecutor[39m Done in 235 minutes 29 seconds.

real	235m31.122s
user	42m11.907s
sys	7m13.220s
