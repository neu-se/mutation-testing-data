*** using precomputed mutations ***
[32m08:58:31 (2373) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m08:58:31 (2373) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m08:58:31 (2373) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/zip-a-folder/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m08:58:31 (2373) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m08:58:31 (2373) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m08:58:32 (2373) INFO ProjectReader[39m Found 1 of 231 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 96 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with o.compression !== COMPRESSION_LEVEL.uncompressed
Mutant 1 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with o.compression === COMPRESSION_LEVEL.high
Mutant 2 in ZipAFolder.ts: ZipAFolder.compress replaced with ZipAFolder.archive
Mutant 3 in ZipAFolder.ts: ZipAFolder.compress replaced with fs.createArchive
Mutant 4 in ZipAFolder.ts: ZipAFolder.compress replaced with zipArchive.directory
Mutant 5 in ZipAFolder.ts: {
  src,
  targetFilePath: tarFilePath,
  format: 'tar',
  zipAFolderOptions
} replaced with {
  src,
  targetFilePath: zipFilePath,
  format: 'zip',
  zipAFolderOptions
}
Mutant 6 in ZipAFolder.ts: {
  src,
  targetFilePath: tarFilePath,
  format: 'tar',
  zipAFolderOptions
} replaced with {
  src,
  targetFilePath: tarFilePath,
  format: 'tar',
  zipAFolderOptions: {
    compression: COMPRESSION_LEVEL.low
  }
}
Mutant 7 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with o.compression !== COMPRESSION_LEVEL.uncompressed
Mutant 8 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with o.compression === COMPRESSION_LEVEL.high
Mutant 9 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with o.compression === COMPRESSION_LEVEL.medium
Mutant 10 in ZipAFolder.ts: !zipAFolderOptions?.customWriteStream && targetFilePath replaced with !zipAFolderOptions?.customWriteStream || targetFilePath
Mutant 11 in ZipAFolder.ts: path.dirname replaced with path.basename
Mutant 12 in ZipAFolder.ts: path.dirname replaced with path.extname
Mutant 13 in ZipAFolder.ts: path.dirname replaced with path.relative
Mutant 14 in ZipAFolder.ts: targetFilePath replaced with src
Mutant 15 in ZipAFolder.ts: targetFilePath replaced with targetFilePath + '.tmp'
Mutant 16 in ZipAFolder.ts: targetFilePath replaced with targetFilePath + '.bk'
Mutant 17 in ZipAFolder.ts: targetBasePath === src replaced with targetBasePath >= src
Mutant 18 in ZipAFolder.ts: targetBasePath === src replaced with targetBasePath != src
Mutant 19 in ZipAFolder.ts: targetBasePath === src replaced with targetBasePath.startsWith(src)
Mutant 20 in ZipAFolder.ts: !isGlob(src) replaced with isGlob(src)
Mutant 21 in ZipAFolder.ts: isGlob replaced with !isGlob
Mutant 22 in ZipAFolder.ts: fs.promises.access(src, fs.constants.R_OK) replaced with fs.promises.access(src, fs.constants.W_OK)
Mutant 23 in ZipAFolder.ts: fs.promises.access(src, fs.constants.R_OK) replaced with fs.promises.access(fs.constants.R_OK, src)
Mutant 24 in ZipAFolder.ts: fs.promises.access replaced with fs.promises.readdir
Mutant 25 in ZipAFolder.ts: fs.promises.access replaced with fs.promises.lstat
Mutant 26 in ZipAFolder.ts: fs.promises.access replaced with fs.promises.readFile
Mutant 27 in ZipAFolder.ts: src replaced with src + 1
Mutant 28 in ZipAFolder.ts: src replaced with src / 2
Mutant 29 in ZipAFolder.ts: src replaced with src === 0
Mutant 30 in ZipAFolder.ts: fs.constants.R_OK replaced with fs.constants.W_OK
Mutant 31 in ZipAFolder.ts: fs.constants.R_OK replaced with fs.constants.X_OK
Mutant 32 in ZipAFolder.ts: fs.promises.access(targetBasePath, fs.constants.R_OK | fs.constants.W_OK) replaced with fs.promises.access(targetBasePath, fs.constants.R_OK | fs.constants.X_OK)
Mutant 33 in ZipAFolder.ts: fs.promises.access(targetBasePath, fs.constants.R_OK | fs.constants.W_OK) replaced with fs.promises.access(targetBasePath, fs.constants.R_OK | fs.constants.W_OK | fs.constants.X_OK)
Mutant 34 in ZipAFolder.ts: fs.promises.access replaced with fs.promises.writeFile
Mutant 35 in ZipAFolder.ts: fs.promises.access replaced with fs.promises.readFile
Mutant 36 in ZipAFolder.ts: fs.promises.access replaced with fs.promises.unlink
Mutant 37 in ZipAFolder.ts: targetBasePath replaced with targetBasePath.slice(0)
Mutant 38 in ZipAFolder.ts: targetBasePath replaced with targetBasePath.split('/').reverse()
Mutant 39 in ZipAFolder.ts: fs.constants.R_OK | fs.constants.W_OK replaced with fs.constants.R_OK ^ fs.constants.W_OK
Mutant 40 in ZipAFolder.ts: fs.constants.R_OK | fs.constants.W_OK replaced with fs.constants.R_OK + fs.constants.W_OK
Mutant 41 in ZipAFolder.ts: fs.constants.R_OK | fs.constants.W_OK replaced with fs.constants.R_OK & fs.constants.W_OK
Mutant 42 in ZipAFolder.ts: fs.createWriteStream replaced with null
Mutant 43 in ZipAFolder.ts: targetFilePath replaced with "<UNPREDICTABLE>"
Mutant 44 in ZipAFolder.ts: targetFilePath replaced with "<INVALID_PATH>"
Mutant 45 in ZipAFolder.ts: targetFilePath replaced with "<customWriteStream(targetFilePath)>"
Mutant 46 in ZipAFolder.ts: zipAFolderOptions && zipAFolderOptions.customWriteStream replaced with !zipAFolderOptions || !zipAFolderOptions.customWriteStream
Mutant 47 in ZipAFolder.ts: zipAFolderOptions && zipAFolderOptions.customWriteStream replaced with zipAFolderOptions && !!zipAFolderOptions.customWriteStream
Mutant 48 in ZipAFolder.ts: archiver(format, archiverOptions || {}) replaced with archiver(format, {})
Mutant 49 in ZipAFolder.ts: archiver(format, archiverOptions || {}) replaced with archiver(null, archiverOptions || {})
Mutant 50 in ZipAFolder.ts: archiver(format, archiverOptions || {}) replaced with archiver('gzip', archiverOptions || {})
Mutant 51 in ZipAFolder.ts: format replaced with false
Mutant 52 in ZipAFolder.ts: format replaced with null
Mutant 53 in ZipAFolder.ts: format replaced with {
  gzip: false
}
Mutant 54 in ZipAFolder.ts: output.on('close', resolve) replaced with output.on('error', resolve)
Mutant 55 in ZipAFolder.ts: output.on('close', resolve) replaced with output.on('end', reject)
Mutant 56 in ZipAFolder.ts: output.on('close', resolve) replaced with output.on('abort', resolve)
Mutant 57 in ZipAFolder.ts: output.on replaced with output.off
Mutant 58 in ZipAFolder.ts: output.on replaced with output.close
Mutant 59 in ZipAFolder.ts: output.on replaced with output.error
Mutant 60 in ZipAFolder.ts: 'close' replaced with 'finish'
Mutant 61 in ZipAFolder.ts: 'close' replaced with 'end'
Mutant 62 in ZipAFolder.ts: 'close' replaced with 'error'
Mutant 63 in ZipAFolder.ts: resolve replaced with reject
Mutant 64 in ZipAFolder.ts: resolve replaced with output.on('error', resolve)
Mutant 65 in ZipAFolder.ts: resolve replaced with output.on('close', reject)
Mutant 66 in ZipAFolder.ts: output.on('error', reject) replaced with output.on('error', resolve)
Mutant 67 in ZipAFolder.ts: output.on('error', reject) replaced with output.on('close', reject)
Mutant 68 in ZipAFolder.ts: output.on('error', reject) replaced with output.on('error', output.end())
Mutant 69 in ZipAFolder.ts: output.on replaced with output.error.on
Mutant 70 in ZipAFolder.ts: 'error' replaced with 'end'
Mutant 71 in ZipAFolder.ts: 'error' replaced with 'close'
Mutant 72 in ZipAFolder.ts: 'error' replaced with 'finish'
Mutant 73 in ZipAFolder.ts: zipArchive.pipe replaced with zipArchive.unpipe
Mutant 74 in ZipAFolder.ts: zipArchive.pipe replaced with zipArchive.flash
Mutant 75 in ZipAFolder.ts: output replaced with null
Mutant 76 in ZipAFolder.ts: output replaced with undefined
Mutant 77 in ZipAFolder.ts: output replaced with output.toString()
Mutant 78 in ZipAFolder.ts: isGlob(src) replaced with !isGlob(src)
Mutant 79 in ZipAFolder.ts: isGlob(src) replaced with src, true
Mutant 80 in ZipAFolder.ts: isGlob replaced with isFile
Mutant 81 in ZipAFolder.ts: ',' replaced with '.'
Mutant 82 in ZipAFolder.ts: ',' replaced with ' '
Mutant 83 in ZipAFolder.ts: ',' replaced with 'X'
Mutant 84 in ZipAFolder.ts: zipArchive.glob replaced with zipArchive.append
Mutant 85 in ZipAFolder.ts: globPart replaced with globPart[0]
Mutant 86 in ZipAFolder.ts: globPart replaced with globPart.substring(1)
Mutant 87 in ZipAFolder.ts: globPart replaced with globPart.toLowerCase()
Mutant 88 in ZipAFolder.ts: zipArchive.directory(src, false) replaced with zipArchive.directory("src", true)
Mutant 89 in ZipAFolder.ts: zipArchive.directory(src, false) replaced with zipArchive.directory("src", false, {
  includeDotFiles: true
})
Mutant 90 in ZipAFolder.ts: zipArchive.directory(src, false) replaced with zipArchive.directory("src", {
  filter: file => !file.isDirectory()
})
Mutant 91 in ZipAFolder.ts: src replaced with src * 2
Mutant 92 in ZipAFolder.ts: src replaced with src + "../"
Mutant 93 in ZipAFolder.ts: false replaced with true
Mutant 94 in ZipAFolder.ts: false replaced with !false
Mutant 95 in ZipAFolder.ts: false replaced with null
[32m08:58:32 (2373) INFO Instrumenter[39m Instrumented 1 source file(s) with 96 mutant(s)
[32m08:58:32 (2373) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m08:58:33 (2373) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m08:58:33 (2373) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m08:58:39 (2373) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6249 ms, overhead 1 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~15m) 1/96 tested (0 survived, 0 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~7m) 4/96 tested (0 survived, 0 timed out)
Mutation testing 6% (elapsed: <1m, remaining: ~7m) 6/96 tested (0 survived, 0 timed out)
Mutation testing 8% (elapsed: <1m, remaining: ~7m) 8/96 tested (1 survived, 0 timed out)
Mutation testing 10% (elapsed: <1m, remaining: ~7m) 10/96 tested (1 survived, 0 timed out)
Mutation testing 12% (elapsed: ~1m, remaining: ~7m) 12/96 tested (1 survived, 0 timed out)
Mutation testing 14% (elapsed: ~1m, remaining: ~6m) 14/96 tested (1 survived, 0 timed out)
Mutation testing 16% (elapsed: ~1m, remaining: ~6m) 16/96 tested (2 survived, 0 timed out)
Mutation testing 18% (elapsed: ~1m, remaining: ~6m) 18/96 tested (3 survived, 0 timed out)
Mutation testing 18% (elapsed: ~1m, remaining: ~7m) 18/96 tested (3 survived, 0 timed out)
Mutation testing 19% (elapsed: ~1m, remaining: ~7m) 19/96 tested (3 survived, 1 timed out)
Mutation testing 20% (elapsed: ~2m, remaining: ~7m) 20/96 tested (3 survived, 2 timed out)
Mutation testing 20% (elapsed: ~2m, remaining: ~8m) 20/96 tested (3 survived, 2 timed out)
Mutation testing 21% (elapsed: ~2m, remaining: ~8m) 21/96 tested (3 survived, 3 timed out)
Mutation testing 22% (elapsed: ~2m, remaining: ~8m) 22/96 tested (3 survived, 4 timed out)
Mutation testing 22% (elapsed: ~2m, remaining: ~8m) 22/96 tested (3 survived, 4 timed out)
Mutation testing 23% (elapsed: ~2m, remaining: ~8m) 23/96 tested (3 survived, 5 timed out)
Mutation testing 25% (elapsed: ~3m, remaining: ~9m) 24/96 tested (3 survived, 6 timed out)
Mutation testing 26% (elapsed: ~3m, remaining: ~8m) 25/96 tested (3 survived, 7 timed out)
Mutation testing 26% (elapsed: ~3m, remaining: ~9m) 25/96 tested (3 survived, 7 timed out)
Mutation testing 27% (elapsed: ~3m, remaining: ~9m) 26/96 tested (3 survived, 8 timed out)
Mutation testing 28% (elapsed: ~3m, remaining: ~9m) 27/96 tested (3 survived, 9 timed out)
Mutation testing 28% (elapsed: ~3m, remaining: ~9m) 27/96 tested (3 survived, 9 timed out)
Mutation testing 29% (elapsed: ~4m, remaining: ~9m) 28/96 tested (3 survived, 10 timed out)
Mutation testing 30% (elapsed: ~4m, remaining: ~9m) 29/96 tested (3 survived, 11 timed out)
Mutation testing 30% (elapsed: ~4m, remaining: ~10m) 29/96 tested (3 survived, 11 timed out)
Mutation testing 31% (elapsed: ~4m, remaining: ~9m) 30/96 tested (3 survived, 12 timed out)
Mutation testing 32% (elapsed: ~4m, remaining: ~9m) 31/96 tested (3 survived, 13 timed out)
Mutation testing 32% (elapsed: ~4m, remaining: ~10m) 31/96 tested (3 survived, 13 timed out)
Mutation testing 33% (elapsed: ~5m, remaining: ~10m) 32/96 tested (3 survived, 14 timed out)
Mutation testing 34% (elapsed: ~5m, remaining: ~9m) 33/96 tested (3 survived, 15 timed out)
Mutation testing 35% (elapsed: ~5m, remaining: ~9m) 34/96 tested (3 survived, 16 timed out)
Mutation testing 35% (elapsed: ~5m, remaining: ~10m) 34/96 tested (3 survived, 16 timed out)
Mutation testing 36% (elapsed: ~5m, remaining: ~9m) 35/96 tested (3 survived, 17 timed out)
Mutation testing 37% (elapsed: ~5m, remaining: ~9m) 36/96 tested (3 survived, 18 timed out)
Mutation testing 37% (elapsed: ~6m, remaining: ~10m) 36/96 tested (3 survived, 18 timed out)
Mutation testing 38% (elapsed: ~6m, remaining: ~9m) 37/96 tested (3 survived, 19 timed out)
Mutation testing 39% (elapsed: ~6m, remaining: ~9m) 38/96 tested (3 survived, 20 timed out)
Mutation testing 39% (elapsed: ~6m, remaining: ~9m) 38/96 tested (3 survived, 20 timed out)
Mutation testing 40% (elapsed: ~6m, remaining: ~9m) 39/96 tested (3 survived, 21 timed out)
Mutation testing 41% (elapsed: ~6m, remaining: ~9m) 40/96 tested (3 survived, 22 timed out)
Mutation testing 41% (elapsed: ~7m, remaining: ~9m) 40/96 tested (3 survived, 22 timed out)
Mutation testing 42% (elapsed: ~7m, remaining: ~9m) 41/96 tested (3 survived, 23 timed out)
Mutation testing 43% (elapsed: ~7m, remaining: ~9m) 42/96 tested (3 survived, 24 timed out)
Mutation testing 44% (elapsed: ~7m, remaining: ~9m) 43/96 tested (3 survived, 25 timed out)
Mutation testing 44% (elapsed: ~7m, remaining: ~9m) 43/96 tested (3 survived, 25 timed out)
Mutation testing 45% (elapsed: ~7m, remaining: ~9m) 44/96 tested (3 survived, 26 timed out)
Mutation testing 46% (elapsed: ~8m, remaining: ~9m) 45/96 tested (3 survived, 27 timed out)
Mutation testing 46% (elapsed: ~8m, remaining: ~9m) 45/96 tested (3 survived, 27 timed out)
Mutation testing 47% (elapsed: ~8m, remaining: ~9m) 46/96 tested (3 survived, 28 timed out)
Mutation testing 48% (elapsed: ~8m, remaining: ~8m) 47/96 tested (3 survived, 29 timed out)
Mutation testing 48% (elapsed: ~8m, remaining: ~9m) 47/96 tested (3 survived, 29 timed out)
Mutation testing 50% (elapsed: ~8m, remaining: ~8m) 48/96 tested (3 survived, 30 timed out)
Mutation testing 52% (elapsed: ~9m, remaining: ~8m) 50/96 tested (3 survived, 31 timed out)
Mutation testing 55% (elapsed: ~9m, remaining: ~7m) 53/96 tested (3 survived, 31 timed out)
Mutation testing 56% (elapsed: ~9m, remaining: ~7m) 54/96 tested (3 survived, 31 timed out)
Mutation testing 57% (elapsed: ~9m, remaining: ~7m) 55/96 tested (3 survived, 32 timed out)
Mutation testing 57% (elapsed: ~9m, remaining: ~7m) 55/96 tested (3 survived, 32 timed out)
Mutation testing 58% (elapsed: ~9m, remaining: ~7m) 56/96 tested (3 survived, 33 timed out)
Mutation testing 59% (elapsed: ~10m, remaining: ~6m) 57/96 tested (3 survived, 34 timed out)
Mutation testing 60% (elapsed: ~10m, remaining: ~6m) 58/96 tested (3 survived, 35 timed out)
Mutation testing 62% (elapsed: ~10m, remaining: ~6m) 60/96 tested (3 survived, 35 timed out)
Mutation testing 62% (elapsed: ~10m, remaining: ~6m) 60/96 tested (3 survived, 35 timed out)
Mutation testing 63% (elapsed: ~10m, remaining: ~6m) 61/96 tested (3 survived, 36 timed out)
Mutation testing 64% (elapsed: ~10m, remaining: ~5m) 62/96 tested (3 survived, 37 timed out)
Mutation testing 65% (elapsed: ~11m, remaining: ~5m) 63/96 tested (3 survived, 38 timed out)
Mutation testing 65% (elapsed: ~11m, remaining: ~5m) 63/96 tested (3 survived, 38 timed out)
Mutation testing 68% (elapsed: ~11m, remaining: ~5m) 66/96 tested (3 survived, 39 timed out)
Mutation testing 68% (elapsed: ~11m, remaining: ~5m) 66/96 tested (3 survived, 39 timed out)
Mutation testing 69% (elapsed: ~11m, remaining: ~5m) 67/96 tested (3 survived, 40 timed out)
Mutation testing 70% (elapsed: ~11m, remaining: ~4m) 68/96 tested (3 survived, 41 timed out)
Mutation testing 72% (elapsed: ~12m, remaining: ~4m) 70/96 tested (3 survived, 41 timed out)
Mutation testing 73% (elapsed: ~12m, remaining: ~4m) 71/96 tested (3 survived, 42 timed out)
Mutation testing 73% (elapsed: ~12m, remaining: ~4m) 71/96 tested (3 survived, 42 timed out)
Mutation testing 75% (elapsed: ~12m, remaining: ~4m) 72/96 tested (3 survived, 43 timed out)
Mutation testing 76% (elapsed: ~12m, remaining: ~3m) 73/96 tested (3 survived, 44 timed out)
Mutation testing 76% (elapsed: ~12m, remaining: ~4m) 73/96 tested (3 survived, 44 timed out)
Mutation testing 79% (elapsed: ~13m, remaining: ~3m) 76/96 tested (3 survived, 45 timed out)
Mutation testing 82% (elapsed: ~13m, remaining: ~2m) 79/96 tested (3 survived, 45 timed out)
Mutation testing 84% (elapsed: ~13m, remaining: ~2m) 81/96 tested (3 survived, 45 timed out)
Mutation testing 84% (elapsed: ~13m, remaining: ~2m) 81/96 tested (3 survived, 45 timed out)
Mutation testing 85% (elapsed: ~13m, remaining: ~2m) 82/96 tested (3 survived, 46 timed out)
Mutation testing 86% (elapsed: ~13m, remaining: ~2m) 83/96 tested (3 survived, 47 timed out)
Mutation testing 87% (elapsed: ~14m, remaining: ~2m) 84/96 tested (3 survived, 48 timed out)
Mutation testing 87% (elapsed: ~14m, remaining: ~2m) 84/96 tested (3 survived, 48 timed out)
Mutation testing 88% (elapsed: ~14m, remaining: ~1m) 85/96 tested (3 survived, 49 timed out)
Mutation testing 89% (elapsed: ~14m, remaining: ~1m) 86/96 tested (3 survived, 50 timed out)
Mutation testing 89% (elapsed: ~14m, remaining: ~1m) 86/96 tested (3 survived, 50 timed out)
Mutation testing 90% (elapsed: ~14m, remaining: ~1m) 87/96 tested (3 survived, 51 timed out)
Mutation testing 91% (elapsed: ~15m, remaining: ~1m) 88/96 tested (3 survived, 52 timed out)
Mutation testing 94% (elapsed: ~15m, remaining: <1m) 91/96 tested (3 survived, 52 timed out)
Mutation testing 96% (elapsed: ~15m, remaining: <1m) 93/96 tested (3 survived, 52 timed out)
Mutation testing 97% (elapsed: ~15m, remaining: <1m) 94/96 tested (3 survived, 53 timed out)
Mutation testing 97% (elapsed: ~15m, remaining: <1m) 94/96 tested (3 survived, 53 timed out)
Mutation testing 98% (elapsed: ~15m, remaining: <1m) 95/96 tested (3 survived, 54 timed out)

All tests
  ✓ All tests (killed 38)

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:41:39
-               await ZipAFolder.compress({src, targetFilePath: tarFilePath, format: 'tar', zipAFolderOptions});
+               await ZipAFolder.compress({
+     src,
+     targetFilePath: tarFilePath,
+     format: 'tar',
+     zipAFolderOptions: {
+       compression: COMPRESSION_LEVEL.low
+     }
+   });

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:115:57
-               const targetBasePath: string = path.dirname(targetFilePath);
+               const targetBasePath: string = path.dirname(targetFilePath + '.tmp');

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:115:57
-               const targetBasePath: string = path.dirname(targetFilePath);
+               const targetBasePath: string = path.dirname(targetFilePath + '.bk');

Ran 0.43 tests per mutant on average.
---------------|---------|----------|-----------|------------|----------|----------|
File           | % score | # killed | # timeout | # survived | # no cov | # errors |
---------------|---------|----------|-----------|------------|----------|----------|
All files      |   96.88 |       38 |        55 |          3 |        0 |        0 |
 ZipAFolder.ts |   96.88 |       38 |        55 |          3 |        0 |        0 |
---------------|---------|----------|-----------|------------|----------|----------|
[32m09:14:37 (2373) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/zip-a-folder/reports/mutation/mutation.html
[32m09:14:37 (2373) INFO MutationTestExecutor[39m Done in 16 minutes 6 seconds.

real	16m8.739s
user	3m53.812s
sys	0m27.178s
