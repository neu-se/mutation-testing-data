*** using precomputed mutations ***
[32m09:38:41 (3212) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m09:38:41 (3212) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m09:38:42 (3212) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m09:38:42 (3212) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m09:38:42 (3212) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m09:38:42 (3212) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1609 mutants from MUTATION_TESTING/template-full_mixtral-8x7b-instruct_0.0/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with false
Mutant 1 in q.js: typeof bootstrap === "function" replaced with true
Mutant 2 in q.js: typeof bootstrap === "function" replaced with 1 === 0
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promisf", definition)
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", function () {})
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", true)
Mutant 6 in q.js: bootstrap replaced with null
Mutant 7 in q.js: "promise" replaced with null
Mutant 8 in q.js: "promise" replaced with 42
Mutant 9 in q.js: "promise" replaced with {}
Mutant 10 in q.js: typeof exports === "object" && typeof module === "object" replaced with true
Mutant 11 in q.js: typeof exports === "object" && typeof module === "object" replaced with "string"
Mutant 12 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof window === "undefined"
Mutant 13 in q.js: typeof define === "function" && define.amd replaced with true
Mutant 14 in q.js: typeof define === "function" && define.amd replaced with 1
Mutant 15 in q.js: typeof define === "function" && define.amd replaced with null
Mutant 16 in q.js: typeof ses !== "undefined" replaced with false
Mutant 17 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined"
Mutant 18 in q.js: typeof ses !== "undefined" replaced with true
Mutant 19 in q.js: !ses.ok() replaced with true
Mutant 20 in q.js: ses.ok replaced with false
Mutant 21 in q.js: ses.ok replaced with global.Q
Mutant 22 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with false
Mutant 23 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with 'undefined' === typeof window
Mutant 24 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with Object.prototype.toString.call(window) === '[object global]'
Mutant 25 in q.js: definition replaced with noop
Mutant 26 in q.js: head.next replaced with head.next || null
Mutant 27 in q.js: domain replaced with true
Mutant 28 in q.js: domain replaced with null
Mutant 29 in q.js: domain replaced with head.domain || {}
Mutant 30 in q.js: domain.enter replaced with null
Mutant 31 in q.js: runSingle(task, domain) replaced with runSingle(noop)
Mutant 32 in q.js: task replaced with () => task()
Mutant 33 in q.js: domain replaced with null
Mutant 34 in q.js: domain replaced with 123
Mutant 35 in q.js: domain replaced with 'string'
Mutant 36 in q.js: laterQueue.length replaced with laterQueue.length + 1
Mutant 37 in q.js: laterQueue.length replaced with 0
Mutant 38 in q.js: laterQueue.length replaced with laterQueue.pop()
Mutant 39 in q.js: task replaced with () => {
  throw new Error('Buggy!');
}
Mutant 40 in q.js: task replaced with noop
Mutant 41 in q.js: task replaced with global.Q
Mutant 42 in q.js: task replaced with null
Mutant 43 in q.js: task replaced with 123
Mutant 44 in q.js: task replaced with global.Q
Mutant 45 in q.js: isNodeJS replaced with false
Mutant 46 in q.js: isNodeJS replaced with 0
Mutant 47 in q.js: domain replaced with true
Mutant 48 in q.js: domain replaced with null
Mutant 49 in q.js: domain.exit replaced with global.Q.exit
Mutant 50 in q.js: domain.exit replaced with null
Mutant 51 in q.js: setTimeout(flush, 0) replaced with setTimeout(requestAnimationFrame(flush))
Mutant 52 in q.js: setTimeout replaced with 0
Mutant 53 in q.js: flush replaced with Promise.resolve().then(flush)
Mutant 54 in q.js: 0 replaced with 1
Mutant 55 in q.js: 0 replaced with '1'
Mutant 56 in q.js: 0 replaced with nextTick
Mutant 57 in q.js: domain replaced with false
Mutant 58 in q.js: domain replaced with null
Mutant 59 in q.js: domain replaced with {}
Mutant 60 in q.js: domain replaced with false
Mutant 61 in q.js: domain replaced with null
Mutant 62 in q.js: domain.exit replaced with null
Mutant 63 in q.js: !flushing replaced with false
Mutant 64 in q.js: !flushing replaced with true
Mutant 65 in q.js: !flushing replaced with 1 < 2
Mutant 66 in q.js: flush replaced with function () {
  throw new Error('BANG!');
}
Mutant 67 in q.js: typeof window !== "undefined" replaced with false
Mutant 68 in q.js: typeof window !== "undefined" replaced with 1 > 0
Mutant 69 in q.js: typeof window !== "undefined" replaced with typeof window !== "undefined" ? false : true
Mutant 70 in q.js: window replaced with function () {
  return flush();
}
Mutant 71 in q.js: window replaced with {}
Mutant 72 in q.js: window replaced with null
Mutant 73 in q.js: flush replaced with function () {}
Mutant 74 in q.js: typeof MessageChannel !== "undefined" replaced with false
Mutant 75 in q.js: typeof MessageChannel !== "undefined" replaced with 0
Mutant 76 in q.js: typeof MessageChannel !== "undefined" replaced with 'undefined'
Mutant 77 in q.js: channel.port2.postMessage replaced with null
Mutant 78 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 79 in q.js: 0 replaced with 1
Mutant 80 in q.js: 0 replaced with 'some string'
Mutant 81 in q.js: 0 replaced with this
Mutant 82 in q.js: 0 replaced with 1000
Mutant 83 in q.js: 0 replaced with Infinity
Mutant 84 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 85 in q.js: setTimeout(flush, 0) replaced with setTimeout(null)
Mutant 86 in q.js: setTimeout(flush, 0) replaced with setTimeout(function () {/* do nothing */})
Mutant 87 in q.js: setTimeout replaced with undefined
Mutant 88 in q.js: setTimeout replaced with alert
Mutant 89 in q.js: flush replaced with function () {}
Mutant 90 in q.js: flush replaced with 1 + 1
Mutant 91 in q.js: flush replaced with flush.bind(this)
Mutant 92 in q.js: 0 replaced with 1
Mutant 93 in q.js: 0 replaced with Infinity
Mutant 94 in q.js: 0 replaced with -1
Mutant 95 in q.js: laterQueue.push replaced with []
Mutant 96 in q.js: laterQueue.push replaced with 42
Mutant 97 in q.js: task replaced with null
Mutant 98 in q.js: task replaced with 42
Mutant 99 in q.js: task replaced with {}
Mutant 100 in q.js: !flushing replaced with false
Mutant 101 in q.js: !flushing replaced with 0
Mutant 102 in q.js: call.apply(f, arguments) replaced with call.apply(this)
Mutant 103 in q.js: call.apply(f, arguments) replaced with call.apply(null)
Mutant 104 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 105 in q.js: arguments replaced with null
Mutant 106 in q.js: uncurryThis replaced with Function.prototype.bind
Mutant 107 in q.js: uncurryThis replaced with Object.prototype.toString
Mutant 108 in q.js: Array.prototype.slice replaced with function () {
  return [1, 2, 3];
}
Mutant 109 in q.js: arguments.length === 1 replaced with true
Mutant 110 in q.js: arguments.length === 1 replaced with this.length > 0
Mutant 111 in q.js: arguments.length === 1 replaced with index < this.length - 1
Mutant 112 in q.js: 1 replaced with null
Mutant 113 in q.js: 1 replaced with array_indexOf(value, this)
Mutant 114 in q.js: index in this replaced with true
Mutant 115 in q.js: index in this replaced with index < this.length
Mutant 116 in q.js: index in this replaced with 0 in this
Mutant 117 in q.js: ++index >= length replaced with index > length
Mutant 118 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index > length; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 119 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index == length; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 120 in q.js: index++ replaced with index + 1
Mutant 121 in q.js: index++ replaced with index = index + 1
Mutant 122 in q.js: index in this replaced with false
Mutant 123 in q.js: index in this replaced with this.hasOwnProperty(index)
Mutant 124 in q.js: index in this replaced with index < this.length
Mutant 125 in q.js: callback(basis, this[index], index) replaced with callback(null)
Mutant 126 in q.js: callback(basis, this[index], index) replaced with callback(index)
Mutant 127 in q.js: callback replaced with callback + 1
Mutant 128 in q.js: this[index] replaced with 0
Mutant 129 in q.js: this[index] replaced with this.length
Mutant 130 in q.js: index replaced with null
Mutant 131 in q.js: index replaced with 42
Mutant 132 in q.js: index replaced with this
Mutant 133 in q.js: i < this.length replaced with i > this.length
Mutant 134 in q.js: i < this.length replaced with i !== this.length
Mutant 135 in q.js: i++ replaced with i--
Mutant 136 in q.js: i++ replaced with Math.random()
Mutant 137 in q.js: i++ replaced with array_indexOf(value, this)
Mutant 138 in q.js: this[i] === value replaced with i === value
Mutant 139 in q.js: collect.push replaced with null
Mutant 140 in q.js: collect.push replaced with 1
Mutant 141 in q.js: callback.call(thisp, value, index, self) replaced with callback(value, index, self)
Mutant 142 in q.js: callback.call(thisp, value, index, self) replaced with callback.apply(null, [value, index, self])
Mutant 143 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(self, index, value, self)
Mutant 144 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(undefined)
Mutant 145 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(null)
Mutant 146 in q.js: callback.call replaced with callback.bind
Mutant 147 in q.js: thisp replaced with 42
Mutant 148 in q.js: thisp replaced with function () {}
Mutant 149 in q.js: value replaced with 42
Mutant 150 in q.js: value replaced with this
Mutant 151 in q.js: self replaced with 5
Mutant 152 in q.js: self replaced with function () {}
Mutant 153 in q.js: uncurryThis replaced with Function.prototype.bind
Mutant 154 in q.js: object replaced with Object.prototype
Mutant 155 in q.js: object_hasOwnProperty(object, key) replaced with object.hasOwnProperty(key)
Mutant 156 in q.js: object_hasOwnProperty(object, key) replaced with Array.prototype.hasOwnProperty.call(object, key)
Mutant 157 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(this)
Mutant 158 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(window)
Mutant 159 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(Math)
Mutant 160 in q.js: object_hasOwnProperty replaced with null
Mutant 161 in q.js: object_hasOwnProperty replaced with Array.isArray
Mutant 162 in q.js: key replaced with "toString"
Mutant 163 in q.js: key replaced with null
Mutant 164 in q.js: key replaced with 1
Mutant 165 in q.js: key replaced with null
Mutant 166 in q.js: key replaced with 42
Mutant 167 in q.js: uncurryThis replaced with Function.prototype.bind
Mutant 168 in q.js: Object replaced with null
Mutant 169 in q.js: Object replaced with Array
Mutant 170 in q.js: value replaced with null
Mutant 171 in q.js: value replaced with ''
Mutant 172 in q.js: value replaced with true
Mutant 173 in q.js: object_toString replaced with '[object Object]'
Mutant 174 in q.js: object_toString replaced with 1
Mutant 175 in q.js: exception replaced with null
Mutant 176 in q.js: exception replaced with {}
Mutant 177 in q.js: exception replaced with []
Mutant 178 in q.js: typeof ReturnValue !== "undefined" replaced with true
Mutant 179 in q.js: typeof ReturnValue !== "undefined" replaced with typeof globalThis.ReturnValue !== "undefined"
Mutant 180 in q.js: typeof ReturnValue !== "undefined" replaced with typeof someUndefinedVariable !== "undefined"
Mutant 181 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with promise.stack && typeof error === "object" && error !== null && error.stack && hasStacks
Mutant 182 in q.js: !!p replaced with p ? 1 : 0
Mutant 183 in q.js: !!p replaced with !p.source
Mutant 184 in q.js: !!p replaced with p instanceof Error
Mutant 185 in q.js: p = p.source replaced with null
Mutant 186 in q.js: p = p.source replaced with 1
Mutant 187 in q.js: p = p.source replaced with p.length
Mutant 188 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ < p.stackCounter
Mutant 189 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(null)
Mutant 190 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty({})
Mutant 191 in q.js: object_defineProperty replaced with Object.defineProperty
Mutant 192 in q.js: error replaced with null
Mutant 193 in q.js: error replaced with []
Mutant 194 in q.js: error replaced with function () {}
Mutant 195 in q.js: "__minimumStackCounter__" replaced with this.__minimumStackCounter__
Mutant 196 in q.js: "__minimumStackCounter__" replaced with Math.random()
Mutant 197 in q.js: "__minimumStackCounter__" replaced with new Date().getTime()
Mutant 198 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: 42,
  configurable: true
}
Mutant 199 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.source.stackCounter,
  configurable: true
}
Mutant 200 in q.js: error.stack replaced with "error.stackTrace"
Mutant 201 in q.js: error.stack replaced with 1234
Mutant 202 in q.js: stacks.join replaced with stacks.concat.join
Mutant 203 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with " From previous event:\n"
Mutant 204 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with STACK_JUMP_SEPARATOR + "\t"
Mutant 205 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + "New Separator" + "\n"
Mutant 206 in q.js: filterStackString replaced with "<PLACEHOLDER>"
Mutant 207 in q.js: filterStackString replaced with []
Mutant 208 in q.js: concatedStacks replaced with error.stack.toString()
Mutant 209 in q.js: concatedStacks replaced with promise.stack
Mutant 210 in q.js: concatedStacks replaced with stacks.join("\n")
Mutant 211 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(null)
Mutant 212 in q.js: "stack" replaced with error.stack.toString()
Mutant 213 in q.js: "\n" replaced with ";\n"
Mutant 214 in q.js: "\n" replaced with "\n" + String.fromCharCode(0)
Mutant 215 in q.js: i < lines.length replaced with i <= lines.length
Mutant 216 in q.js: i < lines.length replaced with i > -1
Mutant 217 in q.js: i < lines.length replaced with i in lines
Mutant 218 in q.js: ++i replaced with i--
Mutant 219 in q.js: ++i replaced with i + 1
Mutant 220 in q.js: ++i replaced with Math.random()
Mutant 221 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with line.indexOf('node') === -1
Mutant 222 in q.js: isInternalFrame replaced with typeof isInternalFrame !== 'function'
Mutant 223 in q.js: line replaced with isInternalFrame(line + 'x')
Mutant 224 in q.js: isNodeFrame replaced with typeof isNodeFrame !== 'function'
Mutant 225 in q.js: isNodeFrame replaced with false
Mutant 226 in q.js: line replaced with "<PLACEHOLDER>"
Mutant 227 in q.js: line replaced with Math.random()
Mutant 228 in q.js: line replaced with new Error()
Mutant 229 in q.js: "\n" replaced with "<br>"
Mutant 230 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 231 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 232 in q.js: stackLine.indexOf replaced with stackLine.lastIndexOf
Mutant 233 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 234 in q.js: stackLine replaced with "1: " + stackLine
Mutant 235 in q.js: stackLine replaced with stackLine.toUpperCase()
Mutant 236 in q.js: stackLine replaced with global.stackLine
Mutant 237 in q.js: attempt1 replaced with null
Mutant 238 in q.js: attempt1 replaced with 0
Mutant 239 in q.js: attempt1 replaced with ''
Mutant 240 in q.js: Number replaced with value.length
Mutant 241 in q.js: attempt1[2] replaced with value.length
Mutant 242 in q.js: attempt1[2] replaced with this.value
Mutant 243 in q.js: attempt1[2] replaced with attempt2[2]
Mutant 244 in q.js: attempt2 replaced with attempt2 || []
Mutant 245 in q.js: attempt2 replaced with attempt2 || null
Mutant 246 in q.js: Number replaced with 1
Mutant 247 in q.js: Number replaced with Infinity
Mutant 248 in q.js: attempt2[2] replaced with Infinity
Mutant 249 in q.js: attempt2[2] replaced with 1 / 0
Mutant 250 in q.js: attempt2[2] replaced with new Date()
Mutant 251 in q.js: stackLine replaced with "[object GlobalError]"
Mutant 252 in q.js: stackLine replaced with /.*@(.+):(\d+)$/g
Mutant 253 in q.js: stackLine replaced with "anonymous function"
Mutant 254 in q.js: attempt3 replaced with /.*@(.+):(\d+)$/.exec(stackLine)[0]
Mutant 255 in q.js: attempt3 replaced with /.*@(.+):(\d+)$/.exec(null)
Mutant 256 in q.js: attempt3 replaced with /.*@(.+):(\d+)$/.exec("some string")
Mutant 257 in q.js: Number replaced with "0"
Mutant 258 in q.js: Number replaced with true
Mutant 259 in q.js: Number replaced with null
Mutant 260 in q.js: attempt3[2] replaced with 1
Mutant 261 in q.js: attempt3[2] replaced with 'PLACEHOLDER'
Mutant 262 in q.js: attempt3[2] replaced with Math.random()
Mutant 263 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 264 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === 'undefined'
Mutant 265 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length < 2
Mutant 266 in q.js: !hasStacks replaced with false
Mutant 267 in q.js: !hasStacks replaced with typeof hasStacks === "undefined"
Mutant 268 in q.js: !hasStacks replaced with hasStacks === null
Mutant 269 in q.js: e.stack.split replaced with "<error object>'.stack"
Mutant 270 in q.js: "\n" replaced with "\n<script>console.log('This is an injected script');</script>\n"
Mutant 271 in q.js: "\n" replaced with "\n<!-- This is an injected comment -->\n"
Mutant 272 in q.js: "\n" replaced with "\n" + Math.random() + "\n"
Mutant 273 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 274 in q.js: lines[0].indexOf replaced with "PLACEHOLDER".indexOf
Mutant 275 in q.js: lines[0].indexOf replaced with getFileNameAndLineNumber.indexOf
Mutant 276 in q.js: getFileNameAndLineNumber replaced with ['<filename>', 0]
Mutant 277 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 278 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === 'undefined'
Mutant 279 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with true
Mutant 280 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with 1 < 2
Mutant 281 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof window !== "undefined" && typeof window.console === "object" && typeof window.console.warn === "function"
Mutant 282 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, null)
Mutant 283 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, 42)
Mutant 284 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, reflect.apply(callback, arguments))
Mutant 285 in q.js: callback.apply replaced with callback.call
Mutant 286 in q.js: callback replaced with callback.bind(null, 1)
Mutant 287 in q.js: arguments replaced with [1, 2, 3]
Mutant 288 in q.js: arguments replaced with null
Mutant 289 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 290 in q.js: value instanceof Promise replaced with Object.prototype.toString.call(value) === '[object Promise]'
Mutant 291 in q.js: value instanceof Promise replaced with value && typeof value.then === 'function'
Mutant 292 in q.js: isPromiseAlike(value) replaced with value && isPromiseAlike(value)
Mutant 293 in q.js: isPromiseAlike(value) replaced with isPromiseAlike(value) || true
Mutant 294 in q.js: isPromiseAlike replaced with value && value.then
Mutant 295 in q.js: isPromiseAlike replaced with value !== null && value.then
Mutant 296 in q.js: isPromiseAlike replaced with value && typeof value.then === 'function'
Mutant 297 in q.js: value replaced with 1 * value
Mutant 298 in q.js: value replaced with value || true
Mutant 299 in q.js: coerce replaced with null
Mutant 300 in q.js: coerce replaced with {}
Mutant 301 in q.js: value replaced with value || true
Mutant 302 in q.js: value replaced with value ? value : 42
Mutant 303 in q.js: value replaced with value && 'some string'
Mutant 304 in q.js: value replaced with null
Mutant 305 in q.js: value replaced with Promise.resolve()
Mutant 306 in q.js: value replaced with new Function()
Mutant 307 in q.js: object_create replaced with {}
Mutant 308 in q.js: object_create replaced with null
Mutant 309 in q.js: defer.prototype replaced with {}
Mutant 310 in q.js: defer.prototype replaced with null
Mutant 311 in q.js: defer.prototype replaced with Object.create(Promise.prototype)
Mutant 312 in q.js: object_create replaced with {}
Mutant 313 in q.js: Promise.prototype replaced with null
Mutant 314 in q.js: Promise.prototype replaced with {}
Mutant 315 in q.js: Promise.prototype replaced with function () {}
Mutant 316 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 317 in q.js: arguments replaced with Array.prototype.slice.call(arguments)
Mutant 318 in q.js: arguments replaced with [...arguments]
Mutant 319 in q.js: messages replaced with messages.length > 0
Mutant 320 in q.js: messages replaced with true
Mutant 321 in q.js: messages replaced with typeof messages !== 'undefined'
Mutant 322 in q.js: messages.push replaced with messages.unshift
Mutant 323 in q.js: messages.push replaced with messages.length = 0
Mutant 324 in q.js: messages.push replaced with messages = [args]
Mutant 325 in q.js: args replaced with []
Mutant 326 in q.js: args replaced with null
Mutant 327 in q.js: args replaced with arguments
Mutant 328 in q.js: op === "when" && operands[1] replaced with op === "when" && "someString"
Mutant 329 in q.js: op === "when" && operands[1] replaced with op === "then"
Mutant 330 in q.js: op === "when" && operands[1] replaced with operands[0]
Mutant 331 in q.js: operands[1] replaced with 1
Mutant 332 in q.js: operands[1] replaced with null
Mutant 333 in q.js: operands[1] replaced with messages[0][1]
Mutant 334 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply([resolvedPromise].concat(args))
Mutant 335 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 336 in q.js: resolvedPromise replaced with Promise.resolve(resolvedPromise)
Mutant 337 in q.js: messages replaced with null
Mutant 338 in q.js: messages replaced with true
Mutant 339 in q.js: resolvedPromise replaced with null
Mutant 340 in q.js: resolvedPromise replaced with true
Mutant 341 in q.js: resolvedPromise replaced with messages
Mutant 342 in q.js: isPromise(nearerValue) replaced with nearerValue instanceof Promise
Mutant 343 in q.js: isPromise replaced with false
Mutant 344 in q.js: isPromise replaced with null
Mutant 345 in q.js: isPromise replaced with messages.length
Mutant 346 in q.js: nearerValue replaced with true
Mutant 347 in q.js: nearerValue replaced with null
Mutant 348 in q.js: !resolvedPromise replaced with this.inspect() === undefined
Mutant 349 in q.js: !resolvedPromise replaced with Q.longStackSupport && hasStacks
Mutant 350 in q.js: Q.longStackSupport && hasStacks replaced with false
Mutant 351 in q.js: Q.longStackSupport && hasStacks replaced with hasStacks
Mutant 352 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 353 in q.js: e.stack.substring replaced with e.message
Mutant 354 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.split("\n").length
Mutant 355 in q.js: e.stack.indexOf replaced with e.stack.search
Mutant 356 in q.js: "\n" replaced with e.stack.substring(e.stack.indexOf("\n") + 2)
Mutant 357 in q.js: Q.longStackSupport && hasStacks replaced with false
Mutant 358 in q.js: Q.longStackSupport && hasStacks replaced with true
Mutant 359 in q.js: Q.longStackSupport && hasStacks replaced with 1
Mutant 360 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise)
Mutant 361 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 362 in q.js: message replaced with []
Mutant 363 in q.js: message replaced with messages
Mutant 364 in q.js: message replaced with [1, 2, 3]
Mutant 365 in q.js: resolvedPromise replaced with true
Mutant 366 in q.js: resolvedPromise replaced with null
Mutant 367 in q.js: resolvedPromise replaced with new Promise(function (resolve) {
  resolve(value);
})
Mutant 368 in q.js: become replaced with deferred.resolve
Mutant 369 in q.js: become replaced with deferred.reject
Mutant 370 in q.js: Q(value) replaced with new Q(value)
Mutant 371 in q.js: Q(value) replaced with Promise.resolve(value)
Mutant 372 in q.js: Q(value) replaced with Q.resolve(value).then(function (result) {
  return result * 2;
})
Mutant 373 in q.js: value replaced with null
Mutant 374 in q.js: value replaced with this
Mutant 375 in q.js: value replaced with new Promise(resolve => resolve(value))
Mutant 376 in q.js: resolvedPromise replaced with false
Mutant 377 in q.js: resolvedPromise replaced with null
Mutant 378 in q.js: fulfill(value) replaced with new Promise(resolve => resolve(value))
Mutant 379 in q.js: value replaced with null
Mutant 380 in q.js: value replaced with this
Mutant 381 in q.js: value replaced with new Error('Replacement error')
Mutant 382 in q.js: resolvedPromise replaced with true
Mutant 383 in q.js: resolvedPromise replaced with null
Mutant 384 in q.js: resolvedPromise replaced with new Promise(function () {})
Mutant 385 in q.js: reject(reason) replaced with Promise.reject(reason)
Mutant 386 in q.js: reject(reason) replaced with deferred.reject(reason)
Mutant 387 in q.js: reject replaced with Q.resolve
Mutant 388 in q.js: reason replaced with new Error("New error message")
Mutant 389 in q.js: reason replaced with {}
Mutant 390 in q.js: reason replaced with null
Mutant 391 in q.js: resolvedPromise replaced with false
Mutant 392 in q.js: resolvedPromise replaced with null
Mutant 393 in q.js: resolvedPromise replaced with true
Mutant 394 in q.js: progressListener replaced with null
Mutant 395 in q.js: progress replaced with null
Mutant 396 in q.js: progress replaced with {}
Mutant 397 in q.js: progress replaced with progress + 1
Mutant 398 in q.js: error replaced with true
Mutant 399 in q.js: error replaced with Q.resolve()
Mutant 400 in q.js: self.reject replaced with self.resolve
Mutant 401 in q.js: error replaced with null
Mutant 402 in q.js: error replaced with 42
Mutant 403 in q.js: error replaced with new Error('User-defined error')
Mutant 404 in q.js: arguments.length > 2 replaced with false
Mutant 405 in q.js: arguments.length > 2 replaced with true
Mutant 406 in q.js: arguments.length > 2 replaced with arguments[0] === undefined
Mutant 407 in q.js: array_slice(arguments, 1) replaced with null
Mutant 408 in q.js: array_slice(arguments, 1) replaced with [1]
Mutant 409 in q.js: array_slice(arguments, 1) replaced with function () {}
Mutant 410 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 0))
Mutant 411 in q.js: array_slice replaced with arguments.callee.caller
Mutant 412 in q.js: arguments replaced with [1, 2, 3]
Mutant 413 in q.js: arguments replaced with {
  value: 'foo'
}
Mutant 414 in q.js: 1 replaced with arguments.length > 1
Mutant 415 in q.js: 1 replaced with 0
Mutant 416 in q.js: 1 replaced with Q.resolve(array_slice(arguments))
Mutant 417 in q.js: value replaced with null
Mutant 418 in q.js: value replaced with new Error('Replacement error')
Mutant 419 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 420 in q.js: typeof resolver !== "function" replaced with Object.prototype.toString.call(resolver) !== "[object Function]"
Mutant 421 in q.js: typeof resolver !== "function" replaced with typeof resolver !== typeof Function
Mutant 422 in q.js: defer replaced with null
Mutant 423 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver([deferred.resolve, deferred.reject, deferred.notify][Math.floor(Math.random() * 3)])
Mutant 424 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve.bind(deferred)())
Mutant 425 in q.js: resolver replaced with []
Mutant 426 in q.js: resolver replaced with null
Mutant 427 in q.js: resolver replaced with 0
Mutant 428 in q.js: deferred.resolve replaced with deferred.resolve(null)
Mutant 429 in q.js: deferred.resolve replaced with deferred.reject
Mutant 430 in q.js: deferred.reject replaced with deferred.resolve
Mutant 431 in q.js: deferred.reject replaced with deferred.notify
Mutant 432 in q.js: deferred.reject replaced with function () {
  throw new Error('Buggy replacement');
}
Mutant 433 in q.js: deferred.notify replaced with deferred.resolve
Mutant 434 in q.js: deferred.reject replaced with deferred.resolve
Mutant 435 in q.js: deferred.reject replaced with deferred.notify
Mutant 436 in q.js: reason replaced with new Error('Buggy Reason')
Mutant 437 in q.js: reason replaced with null
Mutant 438 in q.js: reason replaced with Q.reject('Buggy Reason')
Mutant 439 in q.js: Q replaced with Promise
Mutant 440 in q.js: Q replaced with null
Mutant 441 in q.js: x replaced with 0
Mutant 442 in q.js: x replaced with null
Mutant 443 in q.js: y replaced with null
Mutant 444 in q.js: y replaced with this
Mutant 445 in q.js: y replaced with []
Mutant 446 in q.js: [this, that] replaced with [[this, that]]
Mutant 447 in q.js: [this, that] replaced with [null, that]
Mutant 448 in q.js: [this, that] replaced with [that, this]
Mutant 449 in q.js: x === y replaced with x == y
Mutant 450 in q.js: x === y replaced with x.valueOf() === y.valueOf()
Mutant 451 in q.js: x === y replaced with Object.is(x, y)
Mutant 452 in q.js: i < len replaced with i > -1
Mutant 453 in q.js: i++ replaced with i += 2
Mutant 454 in q.js: i++ replaced with Q.resolve()
Mutant 455 in q.js: answerPs[i] replaced with null
Mutant 456 in q.js: answerPs[i] replaced with answerPs[i] || {}
Mutant 457 in q.js: answerPs[i] replaced with answerPs[Math.floor(Math.random() * answerPs.length)]
Mutant 458 in q.js: resolve replaced with deferred.resolve
Mutant 459 in q.js: reject replaced with function () {}
Mutant 460 in q.js: this.then replaced with this['then']
Mutant 461 in q.js: this.then replaced with this.constructor.prototype.then
Mutant 462 in q.js: Q.race replaced with function () {
  return Q();
}
Mutant 463 in q.js: fallback === void 0 replaced with fallback !== void 0
Mutant 464 in q.js: inspect === void 0 replaced with inspect !== undefined
Mutant 465 in q.js: inspect === void 0 replaced with inspect !== null
Mutant 466 in q.js: inspect === void 0 replaced with typeof inspect !== "undefined"
Mutant 467 in q.js: object_create replaced with null
Mutant 468 in q.js: Promise.prototype replaced with Object.create(null)
Mutant 469 in q.js: descriptor[op] replaced with false
Mutant 470 in q.js: descriptor[op] replaced with descriptor['op']
Mutant 471 in q.js: descriptor[op] replaced with Promise.resolve()
Mutant 472 in q.js: descriptor[op].apply replaced with descriptor[op].call
Mutant 473 in q.js: descriptor[op].apply replaced with descriptor.op
Mutant 474 in q.js: args replaced with []
Mutant 475 in q.js: args replaced with null
Mutant 476 in q.js: args replaced with {
  foo: 'bar'
}
Mutant 477 in q.js: fallback.call(promise, op, args) replaced with fallback.call([])
Mutant 478 in q.js: fallback.call(promise, op, args) replaced with fallback.call(null)
Mutant 479 in q.js: fallback.call(promise, op, args) replaced with fallback.call(function () {})
Mutant 480 in q.js: fallback.call replaced with fallback.apply
Mutant 481 in q.js: op replaced with "notAnOp"
Mutant 482 in q.js: op replaced with 123
Mutant 483 in q.js: op replaced with promise
Mutant 484 in q.js: args replaced with []
Mutant 485 in q.js: args replaced with null
Mutant 486 in q.js: args replaced with {
  then: function () {}
}
Mutant 487 in q.js: exception replaced with new Error("Buggy error message")
Mutant 488 in q.js: exception replaced with null
Mutant 489 in q.js: exception replaced with {}
Mutant 490 in q.js: result replaced with null
Mutant 491 in q.js: result replaced with 42
Mutant 492 in q.js: result replaced with deferred.resolve
Mutant 493 in q.js: inspect replaced with null
Mutant 494 in q.js: inspect replaced with {}
Mutant 495 in q.js: inspected.state === "rejected" replaced with inspected.state !== "fulfilled"
Mutant 496 in q.js: inspected.state === "rejected" replaced with inspected.reason
Mutant 497 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 498 in q.js: inspect replaced with null
Mutant 499 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "fulfilled"
Mutant 500 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled" || inspected.state === "rejected"
Mutant 501 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "settled"
Mutant 502 in q.js: defer replaced with {}
Mutant 503 in q.js: fulfilled replaced with 1 + fulfilled
Mutant 504 in q.js: fulfilled replaced with fulfilled || 0
Mutant 505 in q.js: value replaced with null
Mutant 506 in q.js: value replaced with new Promise(function () {})
Mutant 507 in q.js: value replaced with Promise.resolve()
Mutant 508 in q.js: reject replaced with 0
Mutant 509 in q.js: exception replaced with new Error("Buggy replacement")
Mutant 510 in q.js: exception replaced with {}
Mutant 511 in q.js: exception replaced with null
Mutant 512 in q.js: typeof rejected === "function" replaced with true
Mutant 513 in q.js: typeof rejected === "function" replaced with 1 < 2
Mutant 514 in q.js: typeof rejected === "function" replaced with typeof rejected !== "function"
Mutant 515 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(new Error())
Mutant 516 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(self)
Mutant 517 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(null)
Mutant 518 in q.js: exception replaced with new Error("New error message")
Mutant 519 in q.js: exception replaced with {}
Mutant 520 in q.js: exception replaced with Q.reject("Rejection message")
Mutant 521 in q.js: exception replaced with new Error("Buggy error")
Mutant 522 in q.js: exception replaced with {}
Mutant 523 in q.js: exception replaced with null
Mutant 524 in q.js: reject replaced with Promise.reject
Mutant 525 in q.js: reject replaced with Q.reject
Mutant 526 in q.js: newException replaced with value
Mutant 527 in q.js: newException replaced with null
Mutant 528 in q.js: newException replaced with Promise.resolve()
Mutant 529 in q.js: exception replaced with new Error("New error message")
Mutant 530 in q.js: exception replaced with null
Mutant 531 in q.js: value replaced with null
Mutant 532 in q.js: value replaced with undefined
Mutant 533 in q.js: value replaced with 0
Mutant 534 in q.js: done replaced with true
Mutant 535 in q.js: done replaced with 1 === 1
Mutant 536 in q.js: done replaced with void 0
Mutant 537 in q.js: deferred.resolve replaced with deferred.reject
Mutant 538 in q.js: deferred.resolve replaced with deferred.promise.resolve
Mutant 539 in q.js: deferred.resolve replaced with Promise.resolve
Mutant 540 in q.js: _fulfilled(value) replaced with _fulfilled(value) + 1
Mutant 541 in q.js: _fulfilled(value) replaced with Math.random()
Mutant 542 in q.js: _fulfilled(value) replaced with Promise.resolve(value)
Mutant 543 in q.js: _fulfilled replaced with _rejected
Mutant 544 in q.js: value replaced with null
Mutant 545 in q.js: value replaced with {}
Mutant 546 in q.js: value replaced with Promise.resolve()
Mutant 547 in q.js: deferred.resolve replaced with deferred.reject
Mutant 548 in q.js: deferred.resolve replaced with deferred.notify
Mutant 549 in q.js: _rejected(exception) replaced with Promise.reject(exception)
Mutant 550 in q.js: _rejected(exception) replaced with _rejected(null)
Mutant 551 in q.js: _rejected(exception) replaced with deferred.resolve(exception)
Mutant 552 in q.js: exception replaced with new Error('Intentionally introduced error')
Mutant 553 in q.js: exception replaced with exception.message
Mutant 554 in q.js: value replaced with 2 * value
Mutant 555 in q.js: value replaced with null
Mutant 556 in q.js: value replaced with promise.value
Mutant 557 in q.js: Q.onerror replaced with () => {}
Mutant 558 in q.js: Q.onerror replaced with null
Mutant 559 in q.js: Q.onerror replaced with console.log
Mutant 560 in q.js: Q.onerror replaced with console.error
Mutant 561 in q.js: Q.onerror replaced with null
Mutant 562 in q.js: e replaced with new Error()
Mutant 563 in q.js: e replaced with null
Mutant 564 in q.js: !threw replaced with true
Mutant 565 in q.js: !threw replaced with false
Mutant 566 in q.js: !threw replaced with threw === false
Mutant 567 in q.js: deferred.notify replaced with deferred.resolve
Mutant 568 in q.js: newValue replaced with null
Mutant 569 in q.js: newValue replaced with newValue + 1
Mutant 570 in q.js: newValue replaced with Q(newValue)
Mutant 571 in q.js: promise replaced with Promise.resolve()
Mutant 572 in q.js: promise replaced with Q.reject(new Error('Replacement error'))
Mutant 573 in q.js: promise replaced with Q.defer().promise
Mutant 574 in q.js: callback replaced with () => callback
Mutant 575 in q.js: callback replaced with callback.bind(this)
Mutant 576 in q.js: callback.fcall replaced with callback
not replacing callback.fcall with callback
not replacing callback.fcall with callback
Mutant 577 in q.js: value replaced with []
Mutant 578 in q.js: value replaced with callback.fcall(null)
Mutant 579 in q.js: value replaced with callback.fcall(value).then(() => value)
Mutant 580 in q.js: value replaced with Promise.resolve()
Mutant 581 in q.js: value replaced with null
Mutant 582 in q.js: value replaced with null
Mutant 583 in q.js: value replaced with value + 1
Mutant 584 in q.js: value replaced with this.value
Mutant 585 in q.js: fulfilled replaced with () => fulfilled
Mutant 586 in q.js: fulfilled replaced with Math.max
Mutant 587 in q.js: fulfilled replaced with deferred.resolve
Mutant 588 in q.js: rejected replaced with function () {
  return rejected.apply(this, arguments);
}
Mutant 589 in q.js: rejected replaced with Q.reject
Mutant 590 in q.js: progressed replaced with function () {
  return progressed.apply(this, arguments);
}
Mutant 591 in q.js: progressed replaced with progressed.bind(null)
Mutant 592 in q.js: progressed replaced with Math.max
Mutant 593 in q.js: this.then replaced with this.catch
Mutant 594 in q.js: function () {
  return value;
} replaced with function () {
  throw value;
}
Mutant 595 in q.js: function () {
  return value;
} replaced with function () {
  return;
}
Mutant 596 in q.js: function () {
  return value;
} replaced with function (value) {
  return value * 2;
}
Mutant 597 in q.js: Q replaced with Promise.resolve
Mutant 598 in q.js: Q replaced with Q.reject
Mutant 599 in q.js: promise replaced with Promise.resolve()
Mutant 600 in q.js: promise replaced with new Promise(function () {})
Mutant 601 in q.js: promise replaced with Q.reject('An error')
Mutant 602 in q.js: value replaced with null
Mutant 603 in q.js: function () {
  throw reason;
} replaced with () => {/* do nothing */}
Mutant 604 in q.js: function () {
  throw reason;
} replaced with () => {
  return reason;
}
Mutant 605 in q.js: function () {
  throw reason;
} replaced with () => {
  throw new Error(reason);
}
Mutant 606 in q.js: Q(promise).thenReject replaced with Promise.reject
Mutant 607 in q.js: promise replaced with Promise.resolve()
Mutant 608 in q.js: promise replaced with Q.reject(reason)
Mutant 609 in q.js: reason replaced with new Error('Replacement error')
Mutant 610 in q.js: reason replaced with null
Mutant 611 in q.js: reason replaced with reason.message
Mutant 612 in q.js: isPromise(value) replaced with value instanceof Promise
Mutant 613 in q.js: isPromise(value) replaced with Object.prototype.toString.call(value) === '[object Promise]'
Mutant 614 in q.js: isPromise(value) replaced with value.constructor.name === 'Promise'
Mutant 615 in q.js: isPromise replaced with value && value.then
Mutant 616 in q.js: value replaced with null
Mutant 617 in q.js: value replaced with value + 1
Mutant 618 in q.js: value replaced with value.then(function () {
  return value;
})
Mutant 619 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 620 in q.js: inspected.state === "fulfilled" replaced with inspected.value !== undefined
Mutant 621 in q.js: inspected.state === "fulfilled" replaced with inspected.hasOwnProperty("value")
Mutant 622 in q.js: isObject replaced with typeof object === 'object'
Mutant 623 in q.js: object replaced with null
Mutant 624 in q.js: object replaced with this
Mutant 625 in q.js: object replaced with Promise.resolve(object)
Mutant 626 in q.js: isPromise replaced with typeof value === 'object' && value !== null && typeof value.then === 'function'
Mutant 627 in q.js: isPromise replaced with value instanceof Promise || value.constructor.name === 'Promise'
Mutant 628 in q.js: object replaced with false
Mutant 629 in q.js: object replaced with null
Mutant 630 in q.js: object replaced with new Proxy({}, {
  get: function () {
    throw new Error('Unauthorized access');
  }
})
Mutant 631 in q.js: object.inspect replaced with global.inspect
not replacing object.inspect with global.inspect
Mutant 632 in q.js: this.inspect replaced with {}
Mutant 633 in q.js: this.inspect replaced with this.then
not replacing this.inspect with {}
not replacing this.inspect with this.then
Mutant 634 in q.js: object replaced with true
Mutant 635 in q.js: object replaced with null
Mutant 636 in q.js: object replaced with this
Mutant 637 in q.js: object.inspect replaced with null.inspect
not replacing object.inspect with null.inspect
Mutant 638 in q.js: isPromise replaced with false
Mutant 639 in q.js: isPromise replaced with null
Mutant 640 in q.js: object replaced with false
Mutant 641 in q.js: object replaced with null
Mutant 642 in q.js: object replaced with this
Mutant 643 in q.js: object.inspect replaced with false
Mutant 644 in q.js: object.inspect replaced with null
not replacing object.inspect with false
not replacing object.inspect with null
Mutant 645 in q.js: !trackUnhandledRejections replaced with false
Mutant 646 in q.js: !trackUnhandledRejections replaced with 0
Mutant 647 in q.js: !trackUnhandledRejections replaced with null
Mutant 648 in q.js: !trackUnhandledRejections replaced with false
Mutant 649 in q.js: !trackUnhandledRejections replaced with null
Mutant 650 in q.js: !trackUnhandledRejections replaced with 0
Mutant 651 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 652 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.some(p => p === promise)
Mutant 653 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, Q.reject(reason))
Mutant 654 in q.js: array_indexOf replaced with unhandledRejections.length
Mutant 655 in q.js: unhandledRejections replaced with []
Mutant 656 in q.js: unhandledRejections replaced with null
Mutant 657 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 658 in q.js: promise replaced with null
Mutant 659 in q.js: promise replaced with Promise.resolve()
Mutant 660 in q.js: promise replaced with new Function()
Mutant 661 in q.js: "unhandledRejection" replaced with "unhandledrejection"
Mutant 662 in q.js: "unhandledRejection" replaced with "unhandledException"
Mutant 663 in q.js: reason replaced with null
Mutant 664 in q.js: reason replaced with {}
Mutant 665 in q.js: reason replaced with unhandledReasons[at]
Mutant 666 in q.js: promise replaced with null
Mutant 667 in q.js: promise replaced with {}
Mutant 668 in q.js: promise replaced with this
Mutant 669 in q.js: reportedUnhandledRejections.push replaced with []
Mutant 670 in q.js: reportedUnhandledRejections.push replaced with null
Mutant 671 in q.js: reportedUnhandledRejections.push replaced with 123
Mutant 672 in q.js: promise replaced with null
Mutant 673 in q.js: promise replaced with {}
Mutant 674 in q.js: promise replaced with unhandledReasons
Mutant 675 in q.js: unhandledRejections.push replaced with []
Mutant 676 in q.js: promise replaced with null
Mutant 677 in q.js: promise replaced with {}
Mutant 678 in q.js: promise replaced with Promise.resolve()
Mutant 679 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack
Mutant 680 in q.js: reason && typeof reason.stack !== "undefined" replaced with typeof reason !== "undefined"
Mutant 681 in q.js: reason && typeof reason.stack !== "undefined" replaced with true
Mutant 682 in q.js: reason.stack replaced with "reason stack"
Mutant 683 in q.js: reason.stack replaced with null
Mutant 684 in q.js: reason.stack replaced with reason['stack']
Mutant 685 in q.js: unhandledReasons.push replaced with unhandledReasons.unshift
Mutant 686 in q.js: unhandledReasons.push replaced with console.error
Mutant 687 in q.js: "(no stack) " + reason replaced with "<an error occurred>"
Mutant 688 in q.js: "(no stack) " + reason replaced with reason.toString()
Mutant 689 in q.js: "(no stack) " + reason replaced with new Error().stack
Mutant 690 in q.js: !trackUnhandledRejections replaced with false
Mutant 691 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 692 in q.js: !trackUnhandledRejections replaced with 0
Mutant 693 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf([], promise)
Mutant 694 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, 'constant')
Mutant 695 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, function () {})
Mutant 696 in q.js: array_indexOf replaced with unhandledRejections.indexOf
Mutant 697 in q.js: array_indexOf replaced with [].indexOf
Mutant 698 in q.js: array_indexOf replaced with unhandledRejections.includes
Mutant 699 in q.js: unhandledRejections replaced with []
Mutant 700 in q.js: unhandledRejections replaced with {
  promise: []
}
Mutant 701 in q.js: unhandledRejections replaced with unhandledPromises
Mutant 702 in q.js: promise replaced with null
Mutant 703 in q.js: promise replaced with 123
Mutant 704 in q.js: promise replaced with {}
Mutant 705 in q.js: at !== -1 replaced with at > -1
Mutant 706 in q.js: at !== -1 replaced with unhandledRejections.indexOf(promise) !== -1
Mutant 707 in q.js: at !== -1 replaced with typeof at !== "number"
Mutant 708 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf([])
Mutant 709 in q.js: array_indexOf replaced with unhandledRejections.indexOf
Mutant 710 in q.js: array_indexOf replaced with [].indexOf
Mutant 711 in q.js: array_indexOf replaced with unhandledRejections.includes
Mutant 712 in q.js: reportedUnhandledRejections replaced with []
Mutant 713 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 714 in q.js: reportedUnhandledRejections replaced with unhandledRejections.slice()
Mutant 715 in q.js: promise replaced with false
Mutant 716 in q.js: promise replaced with null
Mutant 717 in q.js: atReport !== -1 replaced with true
Mutant 718 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", "some random string", promise)
Mutant 719 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[Math.floor(Math.random() * unhandledReasons.length)], promise)
Mutant 720 in q.js: "rejectionHandled" replaced with false
Mutant 721 in q.js: "rejectionHandled" replaced with null
Mutant 722 in q.js: "rejectionHandled" replaced with unhandledReasons[at]
Mutant 723 in q.js: unhandledReasons[at] replaced with null
Mutant 724 in q.js: unhandledReasons[at] replaced with {}
Mutant 725 in q.js: promise replaced with null
Mutant 726 in q.js: promise replaced with {}
Mutant 727 in q.js: promise replaced with unhandledReasons[at]
Mutant 728 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport.length)
Mutant 729 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(0)
Mutant 730 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(unhandledReasons.length)
Mutant 731 in q.js: reportedUnhandledRejections.splice replaced with reportedUnhandledRejections.length--
Mutant 732 in q.js: atReport replaced with atReport.length
Mutant 733 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(unhandledRejections.length)
Mutant 734 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(unhandledReasons.length)
Mutant 735 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(0)
Mutant 736 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(unhandledReasons.slice(at))
Mutant 737 in q.js: at replaced with unhandledReasons.length
Mutant 738 in q.js: at replaced with Math.floor(Math.random() * unhandledReasons.length)
Mutant 739 in q.js: at replaced with unhandledReasons.pop()
Mutant 740 in q.js: unhandledReasons.slice replaced with unhandledReasons.concat
Mutant 741 in q.js: unhandledReasons.slice replaced with unhandledReasons.push
Mutant 742 in q.js: unhandledReasons.slice replaced with unhandledReasons.forEach
Mutant 743 in q.js: resetUnhandledRejections replaced with resetUnhandledRejections = 42
Mutant 744 in q.js: rejected replaced with false
Mutant 745 in q.js: rejected replaced with 0
Mutant 746 in q.js: rejected replaced with untrackRejection.bind(this)
Mutant 747 in q.js: this replaced with null
Mutant 748 in q.js: rejected replaced with false
Mutant 749 in q.js: reason replaced with null
Mutant 750 in q.js: reason replaced with undefined
Mutant 751 in q.js: reason replaced with 0
Mutant 752 in q.js: trackRejection(rejection, reason) replaced with trackRejection(null)
Mutant 753 in q.js: trackRejection(rejection, reason) replaced with trackRejection([])
Mutant 754 in q.js: reason replaced with null
Mutant 755 in q.js: name === null || name === void 0 replaced with name === null || name === undefined
Mutant 756 in q.js: name === null || name === void 0 replaced with name === null || typeof name === 'undefined'
Mutant 757 in q.js: name === null || name === void 0 replaced with name == null
Mutant 758 in q.js: value.apply(void 0, args) replaced with value.apply(thisp, [args])
Mutant 759 in q.js: value.apply(void 0, args) replaced with value.apply(thisp, arguments)
Mutant 760 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 761 in q.js: value.apply replaced with value.call
Mutant 762 in q.js: value.apply replaced with Reflect.apply
Mutant 763 in q.js: void 0 replaced with null
Mutant 764 in q.js: void 0 replaced with 5
Mutant 765 in q.js: void 0 replaced with {}
Mutant 766 in q.js: args replaced with []
Mutant 767 in q.js: args replaced with null
Mutant 768 in q.js: args replaced with {
  length: 0
}
Mutant 769 in q.js: value[name].apply(value, args) replaced with value[name].apply(null)
Mutant 770 in q.js: value[name].apply(value, args) replaced with value[name].apply([])
Mutant 771 in q.js: value[name].apply(value, args) replaced with value[name].apply({})
Mutant 772 in q.js: value[name].apply replaced with value.apply
Mutant 773 in q.js: value[name].apply replaced with Function.prototype.apply
Mutant 774 in q.js: value[name].apply replaced with Math.max
Mutant 775 in q.js: value replaced with thisp
Mutant 776 in q.js: value replaced with null
Mutant 777 in q.js: value replaced with Math.random()
Mutant 778 in q.js: args replaced with []
Mutant 779 in q.js: args replaced with null
Mutant 780 in q.js: args replaced with {
  length: 0
}
Mutant 781 in q.js: value.apply(thisp, args) replaced with value.apply(null)
Mutant 782 in q.js: value.apply(thisp, args) replaced with value.apply(123)
Mutant 783 in q.js: value.apply(thisp, args) replaced with value.apply(window)
Mutant 784 in q.js: value.apply replaced with value.call
Mutant 785 in q.js: value.apply replaced with value.bind
Mutant 786 in q.js: thisp replaced with null
Mutant 787 in q.js: thisp replaced with []
Mutant 788 in q.js: thisp replaced with {}
Mutant 789 in q.js: args replaced with []
Mutant 790 in q.js: args replaced with null
Mutant 791 in q.js: args replaced with arguments
Mutant 792 in q.js: object_keys replaced with Object.keys
Mutant 793 in q.js: object_keys replaced with Object.prototype.keys
Mutant 794 in q.js: value replaced with null
Mutant 795 in q.js: value replaced with {}
Mutant 796 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve(42))
Mutant 797 in q.js: promise.then replaced with promise['then']
Mutant 798 in q.js: deferred.reject replaced with deferred.resolve
Mutant 799 in q.js: deferred.reject replaced with function () {
  throw new Error('Replacement error');
}
Mutant 800 in q.js: deferred.reject replaced with deferred.notify
Mutant 801 in q.js: deferred.notify replaced with deferred.resolve
Mutant 802 in q.js: deferred.reject replaced with deferred.resolve
Mutant 803 in q.js: deferred.reject replaced with deferred.notify
Mutant 804 in q.js: exception replaced with new Error('Buggy code fragment')
Mutant 805 in q.js: exception replaced with null
Mutant 806 in q.js: exception replaced with this
Mutant 807 in q.js: dispatch(object, op, args) replaced with dispatch(null, op, args)
Mutant 808 in q.js: dispatch replaced with null
Mutant 809 in q.js: object replaced with null
Mutant 810 in q.js: object replaced with []
Mutant 811 in q.js: object replaced with function () {}
Mutant 812 in q.js: op replaced with op + 1
Mutant 813 in q.js: op replaced with "op"
Mutant 814 in q.js: op replaced with Math.random()
Mutant 815 in q.js: args replaced with null
Mutant 816 in q.js: Q(object).inspect replaced with null
Mutant 817 in q.js: object replaced with {}
Mutant 818 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread([1, 2, 3])
Mutant 819 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled)
Mutant 820 in q.js: value replaced with null
Mutant 821 in q.js: value replaced with []
Mutant 822 in q.js: value replaced with {
  then: function () {}
}
Mutant 823 in q.js: fulfilled replaced with function () {
  throw new Error('Buggy replacement');
}
Mutant 824 in q.js: fulfilled replaced with null
Mutant 825 in q.js: fulfilled replaced with this
Mutant 826 in q.js: rejected replaced with function () {}
Mutant 827 in q.js: rejected replaced with null
Mutant 828 in q.js: rejected replaced with this
Mutant 829 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null, array)
Mutant 830 in q.js: fulfilled.apply replaced with fulfilled.call
Mutant 831 in q.js: void 0 replaced with null
Mutant 832 in q.js: void 0 replaced with ''
Mutant 833 in q.js: void 0 replaced with true
Mutant 834 in q.js: array replaced with []
Mutant 835 in q.js: array replaced with this
Mutant 836 in q.js: array replaced with Object.keys(value)
Mutant 837 in q.js: typeof StopIteration === "undefined" replaced with generator.constructor.name === "GeneratorFunction"
Mutant 838 in q.js: typeof StopIteration === "undefined" replaced with generator.constructor.prototype.constructor.name === "GeneratorFunction"
Mutant 839 in q.js: typeof StopIteration === "undefined" replaced with generator.constructor.toString().indexOf("GeneratorFunction") > -1
Mutant 840 in q.js: generator[verb] replaced with generator.verb
Mutant 841 in q.js: generator[verb] replaced with generator['verb']
Mutant 842 in q.js: generator[verb] replaced with generator[verbs[verb]]
Mutant 843 in q.js: arg replaced with null
Mutant 844 in q.js: arg replaced with 1
Mutant 845 in q.js: reject replaced with Promise.reject
Mutant 846 in q.js: exception replaced with new Error('Buggy error')
Mutant 847 in q.js: exception replaced with null
Mutant 848 in q.js: result.done replaced with Object.prototype.toString.call(result.value) === "[object Promise]"
Mutant 849 in q.js: result.done replaced with result.value && result.value.constructor.name === "Promise"
Mutant 850 in q.js: result.value replaced with null
Mutant 851 in q.js: result.value replaced with 1
Mutant 852 in q.js: result.value replaced with result.value + 1
Mutant 853 in q.js: when(result.value, callback, errback) replaced with when(null, callback, errback)
Mutant 854 in q.js: result.value replaced with null
Mutant 855 in q.js: result.value replaced with 1
Mutant 856 in q.js: result.value replaced with result.otherValue
Mutant 857 in q.js: callback replaced with function () {
  return callback;
}
Mutant 858 in q.js: callback replaced with callback.bind(this)
Mutant 859 in q.js: errback replaced with function () {}
Mutant 860 in q.js: errback replaced with 5
Mutant 861 in q.js: errback replaced with deferred.resolve
Mutant 862 in q.js: generator[verb] replaced with generator.verb
Mutant 863 in q.js: generator[verb] replaced with generator["" + verb]
Mutant 864 in q.js: arg replaced with null
Mutant 865 in q.js: arg replaced with 123
Mutant 866 in q.js: arg replaced with function () {}
Mutant 867 in q.js: isStopIteration(exception) replaced with exception.message === "Generator completed"
Mutant 868 in q.js: isStopIteration(exception) replaced with true
Mutant 869 in q.js: isStopIteration(exception) replaced with exception instanceof Error
Mutant 870 in q.js: isStopIteration replaced with {}
Mutant 871 in q.js: exception replaced with new Error('generator error')
Mutant 872 in q.js: Q replaced with null
Mutant 873 in q.js: exception.value replaced with null
Mutant 874 in q.js: exception replaced with new Error('Generator Error')
Mutant 875 in q.js: exception replaced with {}
Mutant 876 in q.js: exception replaced with null
Mutant 877 in q.js: when(result, callback, errback) replaced with when([])
Mutant 878 in q.js: when(result, callback, errback) replaced with when(null)
Mutant 879 in q.js: when(result, callback, errback) replaced with when(result.value, callback, errback)
Mutant 880 in q.js: when replaced with Promise.resolve
Mutant 881 in q.js: result replaced with null
Mutant 882 in q.js: result replaced with []
Mutant 883 in q.js: result replaced with {}
Mutant 884 in q.js: callback replaced with callback.bind(this)
Mutant 885 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null, arguments)
Mutant 886 in q.js: makeGenerator.apply replaced with Function.prototype.apply.call
Mutant 887 in q.js: this replaced with null
Mutant 888 in q.js: this replaced with window
Mutant 889 in q.js: this replaced with () => this
Mutant 890 in q.js: arguments replaced with Array.from(arguments)
Mutant 891 in q.js: arguments replaced with [...arguments]
Mutant 892 in q.js: arguments replaced with Object.assign([], arguments)
Mutant 893 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "then")
Mutant 894 in q.js: continuer replaced with this
Mutant 895 in q.js: continuer replaced with window
Mutant 896 in q.js: continuer replaced with function () {
  return continuer;
}
Mutant 897 in q.js: "next" replaced with "next".toUpperCase()
Mutant 898 in q.js: "next" replaced with 1
Mutant 899 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "throw", undefined)
Mutant 900 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "someInvalidOperation")
Mutant 901 in q.js: continuer.bind replaced with null
Mutant 902 in q.js: continuer.bind replaced with Object.prototype.hasOwnProperty.bind
Mutant 903 in q.js: continuer replaced with function () {}
Mutant 904 in q.js: continuer replaced with continuer.bind(this, "next")
Mutant 905 in q.js: "throw" replaced with "return"
Mutant 906 in q.js: "throw" replaced with function () {
  throw new Error("Replacement error");
}
Mutant 907 in q.js: "throw" replaced with "inflate"
Mutant 908 in q.js: Q.async replaced with Promise.resolve
Mutant 909 in q.js: Q.async replaced with Math.random
Mutant 910 in q.js: Q.async replaced with []
not replacing Q.async with Promise.resolve
not replacing Q.async with Math.random
not replacing Q.async with []
Mutant 911 in q.js: makeGenerator replaced with function* () {}
Mutant 912 in q.js: makeGenerator replaced with 42
Mutant 913 in q.js: all replaced with null
Mutant 914 in q.js: all replaced with 'not an array'
Mutant 915 in q.js: arguments replaced with []
Mutant 916 in q.js: arguments replaced with null
Mutant 917 in q.js: arguments replaced with 1
Mutant 918 in q.js: callback.apply(self, args) replaced with callback.apply(this)
Mutant 919 in q.js: callback.apply(self, args) replaced with callback.apply(null)
Mutant 920 in q.js: callback.apply(self, args) replaced with callback.apply([])
Mutant 921 in q.js: callback.apply replaced with callback.call
Mutant 922 in q.js: callback.apply replaced with Reflect.apply
Mutant 923 in q.js: self replaced with this
Mutant 924 in q.js: self replaced with global
Mutant 925 in q.js: self replaced with undefined
Mutant 926 in q.js: args replaced with []
Mutant 927 in q.js: args replaced with this
Mutant 928 in q.js: args replaced with 42
Mutant 929 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(null, null)
Mutant 930 in q.js: Q(object).dispatch replaced with Object.dispatch
Mutant 931 in q.js: object replaced with this
Mutant 932 in q.js: object replaced with Promise.resolve()
Mutant 933 in q.js: op replaced with 1
Mutant 934 in q.js: op replaced with null
Mutant 935 in q.js: args replaced with null
Mutant 936 in q.js: args replaced with []
Mutant 937 in q.js: args replaced with {
  foo: 'bar'
}
Mutant 938 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject)
Mutant 939 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.notify)
Mutant 940 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 941 in q.js: self.promiseDispatch replaced with deferred.promise
Mutant 942 in q.js: self.promiseDispatch replaced with Math.random
Mutant 943 in q.js: deferred.resolve replaced with deferred.reject
Mutant 944 in q.js: deferred.resolve replaced with deferred.notify
Mutant 945 in q.js: deferred.resolve replaced with deferred.promise
Mutant 946 in q.js: op replaced with null
Mutant 947 in q.js: args replaced with null
Mutant 948 in q.js: args replaced with []
Mutant 949 in q.js: args replaced with {
  length: 0
}
Mutant 950 in q.js: Q replaced with null
Mutant 951 in q.js: Q replaced with {}
Mutant 952 in q.js: object replaced with null
Mutant 953 in q.js: object replaced with []
Mutant 954 in q.js: object replaced with 123
Mutant 955 in q.js: "get" replaced with "GET"
Mutant 956 in q.js: "get" replaced with Symbol("get")
Mutant 957 in q.js: "get" replaced with () => "get"
Mutant 958 in q.js: [key] replaced with null
Mutant 959 in q.js: [key] replaced with {}
Mutant 960 in q.js: [key] replaced with function () {/* empty function */}
Mutant 961 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("GET", [key])
Mutant 962 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("get", [])
Mutant 963 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("get", {
  key: 'value'
})
Mutant 964 in q.js: this.dispatch replaced with this.promiseDispatch
Mutant 965 in q.js: "get" replaced with "GET"
Mutant 966 in q.js: "get" replaced with Symbol("get")
Mutant 967 in q.js: "get" replaced with () => "get"
Mutant 968 in q.js: [key] replaced with []
Mutant 969 in q.js: [key] replaced with {}
Mutant 970 in q.js: [key] replaced with this
Mutant 971 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch([])
Mutant 972 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("nonexistentMethod")
Mutant 973 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch([key, Q(value)])
Mutant 974 in q.js: Q(object).dispatch replaced with Object.prototype.dispatch
Mutant 975 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 976 in q.js: Q(object).dispatch replaced with Math.dispatch
Mutant 977 in q.js: [key, value] replaced with {}
Mutant 978 in q.js: [key, value] replaced with null
Mutant 979 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch([])
Mutant 980 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch(this)
Mutant 981 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch(Math.random())
Mutant 982 in q.js: "set" replaced with "__set__"
Mutant 983 in q.js: "set" replaced with null
Mutant 984 in q.js: "set" replaced with this.del
Mutant 985 in q.js: [key, value] replaced with []
Mutant 986 in q.js: [key, value] replaced with this
Mutant 987 in q.js: [key, value] replaced with null
Mutant 988 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch(["remove", key])
Mutant 989 in q.js: Q replaced with null
Mutant 990 in q.js: Q replaced with 5
Mutant 991 in q.js: object replaced with null
Mutant 992 in q.js: object replaced with []
Mutant 993 in q.js: object replaced with function () {}
Mutant 994 in q.js: [key] replaced with []
Mutant 995 in q.js: [key] replaced with {}
Mutant 996 in q.js: [key] replaced with null
Mutant 997 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch(["remove", key])
Mutant 998 in q.js: this.dispatch replaced with deferred.resolveThrown
Mutant 999 in q.js: this.dispatch replaced with deferred.promise
Mutant 1000 in q.js: "delete" replaced with null
Mutant 1001 in q.js: "delete" replaced with {}
Mutant 1002 in q.js: "delete" replaced with function () {}
Mutant 1003 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("Post", [name, args])
Mutant 1004 in q.js: Q(object).dispatch replaced with Object.dispatch
Mutant 1005 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 1006 in q.js: Q(object).dispatch replaced with deferred.dispatch
Mutant 1007 in q.js: Q replaced with null
Mutant 1008 in q.js: Q replaced with Q.when
Mutant 1009 in q.js: object replaced with null
Mutant 1010 in q.js: object replaced with []
Mutant 1011 in q.js: object replaced with function () {}
Mutant 1012 in q.js: "post" replaced with "POST"
Mutant 1013 in q.js: "post" replaced with symbol("post")
Mutant 1014 in q.js: [name, args] replaced with []
Mutant 1015 in q.js: [name, args] replaced with null
Mutant 1016 in q.js: [name, args] replaced with this
Mutant 1017 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, eval(args)])
Mutant 1018 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [window[name], args])
Mutant 1019 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.reverse()])
Mutant 1020 in q.js: "post" replaced with "POST"
Mutant 1021 in q.js: "post" replaced with null
Mutant 1022 in q.js: [name, args] replaced with []
Mutant 1023 in q.js: [name, args] replaced with null
Mutant 1024 in q.js: [name, args] replaced with this
Mutant 1025 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, arguments])
Mutant 1026 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, 123])
Mutant 1027 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("anotherMethod", [name, array_slice(arguments, 1)])
Mutant 1028 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 1029 in q.js: Q replaced with {}['dispatch']
Mutant 1030 in q.js: object replaced with null
Mutant 1031 in q.js: object replaced with true
Mutant 1032 in q.js: "post" replaced with "POST"
Mutant 1033 in q.js: [name, array_slice(arguments, 2)] replaced with [name, Array.prototype.slice.call(arguments, 1)]
Mutant 1034 in q.js: array_slice(arguments, 2) replaced with array_slice([name])
Mutant 1035 in q.js: array_slice(arguments, 2) replaced with array_slice([])
Mutant 1036 in q.js: array_slice replaced with null
Mutant 1037 in q.js: arguments replaced with []
Mutant 1038 in q.js: arguments replaced with null
Mutant 1039 in q.js: arguments replaced with function () {
  return 42;
}
Mutant 1040 in q.js: 2 replaced with null
Mutant 1041 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("POST", [name, array_slice(arguments, 1)])
Mutant 1042 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, 123])
Mutant 1043 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [null, array_slice(arguments, 1)])
Mutant 1044 in q.js: "post" replaced with "POST"
Mutant 1045 in q.js: [name, array_slice(arguments, 1)] replaced with null
Mutant 1046 in q.js: [name, array_slice(arguments, 1)] replaced with []
Mutant 1047 in q.js: [name, array_slice(arguments, 1)] replaced with this
Mutant 1048 in q.js: array_slice(arguments, 1) replaced with array_slice([])
Mutant 1049 in q.js: array_slice(arguments, 1) replaced with array_slice(this)
Mutant 1050 in q.js: array_slice(arguments, 1) replaced with array_slice(function () {})
Mutant 1051 in q.js: 1 replaced with arguments.length
Mutant 1052 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [args])
Mutant 1053 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [1, args])
Mutant 1054 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("spread", [args])
Mutant 1055 in q.js: Q(object).dispatch replaced with Q.prototype.dispatch
Mutant 1056 in q.js: Q(object).dispatch replaced with Q.dispatch
Mutant 1057 in q.js: object replaced with null
Mutant 1058 in q.js: object replaced with 'string'
Mutant 1059 in q.js: [void 0, args] replaced with args
Mutant 1060 in q.js: [void 0, args] replaced with [args]
Mutant 1061 in q.js: [void 0, args] replaced with null, args
Mutant 1062 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("spy", [void 0, args])
Mutant 1063 in q.js: [void 0, args] replaced with args
Mutant 1064 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("call", [array_slice(arguments, 1)])
Mutant 1065 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [null, array_slice(arguments, 1)])
Mutant 1066 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [, array_slice(arguments, 1)])
Mutant 1067 in q.js: Q(object).dispatch replaced with Object.prototype.dispatch
Mutant 1068 in q.js: Q(object).dispatch replaced with Math.random
Mutant 1069 in q.js: Q(object).dispatch replaced with Q.all
Mutant 1070 in q.js: Q replaced with {}
Mutant 1071 in q.js: object replaced with 5
Mutant 1072 in q.js: object replaced with () => {}
Mutant 1073 in q.js: "apply" replaced with "apPLY"
Mutant 1074 in q.js: "apply" replaced with "applyFn"
Mutant 1075 in q.js: "apply" replaced with this.apply
Mutant 1076 in q.js: [void 0, array_slice(arguments, 1)] replaced with null, arguments
Mutant 1077 in q.js: [void 0, array_slice(arguments, 1)] replaced with [, array_slice(arguments, 1)]
Mutant 1078 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments))
Mutant 1079 in q.js: array_slice replaced with [1, 2, 3]
Mutant 1080 in q.js: arguments replaced with Array.prototype.slice.call(arguments, 1)
Mutant 1081 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1082 in q.js: arguments replaced with arguments.slice(1)
Mutant 1083 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("spy", [void 0, array_slice(arguments)])
Mutant 1084 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [null, array_slice(arguments)])
Mutant 1085 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [array_slice(arguments)])
Mutant 1086 in q.js: "apply" replaced with "apPLY"
Mutant 1087 in q.js: [void 0, array_slice(arguments)] replaced with []
Mutant 1088 in q.js: [void 0, array_slice(arguments)] replaced with arguments
Mutant 1089 in q.js: [void 0, array_slice(arguments)] replaced with this
Mutant 1090 in q.js: array_slice replaced with Array.prototype.slice
Mutant 1091 in q.js: arguments replaced with 1
Mutant 1092 in q.js: object replaced with null
Mutant 1093 in q.js: object replaced with 5
Mutant 1094 in q.js: object replaced with window
Mutant 1095 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 2))
Mutant 1096 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 2))
Mutant 1097 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(2))
Mutant 1098 in q.js: array_slice replaced with [].slice
Mutant 1099 in q.js: arguments replaced with Array.prototype.slice.call(arguments, 1)
Mutant 1100 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1101 in q.js: arguments replaced with arguments.slice(1)
Mutant 1102 in q.js: args.concat replaced with [].concat
Mutant 1103 in q.js: args.concat replaced with args.slice
Mutant 1104 in q.js: array_slice(arguments) replaced with []
Mutant 1105 in q.js: array_slice(arguments) replaced with null
Mutant 1106 in q.js: array_slice(arguments) replaced with [1, 2, 3]
Mutant 1107 in q.js: array_slice replaced with arguments.callee
Mutant 1108 in q.js: array_slice replaced with arguments
Mutant 1109 in q.js: array_slice replaced with [].slice
Mutant 1110 in q.js: arguments replaced with []
Mutant 1111 in q.js: arguments replaced with null
Mutant 1112 in q.js: arguments replaced with {
  length: 0
}
Mutant 1113 in q.js: args.concat replaced with []
Mutant 1114 in q.js: array_slice(arguments) replaced with []
Mutant 1115 in q.js: array_slice(arguments) replaced with this.arguments
Mutant 1116 in q.js: array_slice(arguments) replaced with arguments[0]
Mutant 1117 in q.js: array_slice replaced with arguments.callee
Mutant 1118 in q.js: array_slice replaced with null
Mutant 1119 in q.js: array_slice replaced with eval
Mutant 1120 in q.js: arguments replaced with globalArguments
Mutant 1121 in q.js: Q replaced with null
Mutant 1122 in q.js: Q replaced with {}
Mutant 1123 in q.js: object replaced with null
Mutant 1124 in q.js: object replaced with {}
Mutant 1125 in q.js: object replaced with ['key']
Mutant 1126 in q.js: "keys" replaced with "nonexistentKey"
Mutant 1127 in q.js: [] replaced with Object.keys(this)
Mutant 1128 in q.js: [] replaced with null
Mutant 1129 in q.js: [] replaced with function () {
  return 42;
}
Mutant 1130 in q.js: this.dispatch("keys", []) replaced with this.dispatch("nonexistentMethod", [])
Mutant 1131 in q.js: "keys" replaced with "nonexistentKey"
Mutant 1132 in q.js: [] replaced with Object.keys(this)
Mutant 1133 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with snapshot.state === "pending"
Mutant 1134 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with isPromise(promise) && (snapshot = promise.inspect()).state === "rejected"
Mutant 1135 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with snapshot.state !== "fulfilled"
Mutant 1136 in q.js: isPromise replaced with typeof promise === 'object'
Mutant 1137 in q.js: isPromise replaced with promise instanceof Object
Mutant 1138 in q.js: isPromise replaced with true
Mutant 1139 in q.js: promise replaced with Promise.resolve()
Mutant 1140 in q.js: promise replaced with null
Mutant 1141 in q.js: promises replaced with null
Mutant 1142 in q.js: promises replaced with []
Mutant 1143 in q.js: promises replaced with promises.slice()
Mutant 1144 in q.js: {
  index: index,
  value: progress
} replaced with null
Mutant 1145 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  progress: progress
}
Mutant 1146 in q.js: {
  index: index,
  value: progress
} replaced with this
Mutant 1147 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1148 in q.js: pendingCount === 0 replaced with false
Mutant 1149 in q.js: pendingCount === 0 replaced with promises.length === 0
Mutant 1150 in q.js: promises replaced with []
Mutant 1151 in q.js: promises replaced with null
Mutant 1152 in q.js: promises replaced with this
Mutant 1153 in q.js: this replaced with null
Mutant 1154 in q.js: this replaced with []
Mutant 1155 in q.js: this replaced with Promise.resolve()
Mutant 1156 in q.js: promises.length === 0 replaced with Object.prototype.toString.call(promises) === '[object Array]'
Mutant 1157 in q.js: promises.length === 0 replaced with promises.constructor.name === 'Array'
Mutant 1158 in q.js: promises.length === 0 replaced with Array.isArray(promises)
Mutant 1159 in q.js: Q.resolve replaced with Promise.resolve
Mutant 1160 in q.js: Q.resolve replaced with Q.reject
Mutant 1161 in q.js: when replaced with Promise.resolve
Mutant 1162 in q.js: when replaced with this
Mutant 1163 in q.js: when replaced with Q.when
Mutant 1164 in q.js: promise replaced with null
Mutant 1165 in q.js: promise replaced with Promise.resolve()
Mutant 1166 in q.js: promise replaced with this
Mutant 1167 in q.js: onFulfilled replaced with onFulfilled.bind(null, null)
Mutant 1168 in q.js: onRejected replaced with function () {}
Mutant 1169 in q.js: onRejected replaced with onFulfilled
Mutant 1170 in q.js: onRejected replaced with this
Mutant 1171 in q.js: result replaced with null
Mutant 1172 in q.js: result replaced with promises[index]
Mutant 1173 in q.js: result replaced with this
Mutant 1174 in q.js: pendingCount === 0 replaced with promises.length === 0
Mutant 1175 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1176 in q.js: pendingCount === 0 replaced with true
Mutant 1177 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1178 in q.js: rejection replaced with new Error("This is a buggy error")
Mutant 1179 in q.js: rejection replaced with null
Mutant 1180 in q.js: this replaced with []
Mutant 1181 in q.js: this replaced with Q.resolve()
Mutant 1182 in q.js: this replaced with Promise.resolve()
Mutant 1183 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "all")
Mutant 1184 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", Q.reject("Placeholder error"))
Mutant 1185 in q.js: allResolved replaced with function allResolvedBad(promises) {
  return Q(promises).allSettled();
}
Mutant 1186 in q.js: "allResolved" replaced with "allSettled"
Mutant 1187 in q.js: "allResolved" replaced with function allResolved(promises) {
  return Q(promises).all();
}
Mutant 1188 in q.js: "allResolved" replaced with function allResolved(promises) {
  return Q(promises).all().then(function (results) {
    return Q.resolve(results.map(function (result) {
      return {
        state: result.state,
        value: result.value
      };
    }));
  });
}
Mutant 1189 in q.js: "allSettled" replaced with "all"
Mutant 1190 in q.js: array_map(promises, Q) replaced with array_map(promises, Array)
Mutant 1191 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.when)
Mutant 1192 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.all)
Mutant 1193 in q.js: promises replaced with promises.slice()
Mutant 1194 in q.js: promises replaced with Object.values(promises)
Mutant 1195 in q.js: promises replaced with promises.filter(x => x)
Mutant 1196 in q.js: Q replaced with Promise.resolve()
Mutant 1197 in q.js: Q replaced with Q.reject(new Error('Placeholder error'))
Mutant 1198 in q.js: when(promise, noop, noop) replaced with when(new Promise(resolve => resolve(null)))
Mutant 1199 in q.js: promise replaced with Promise.resolve()
Mutant 1200 in q.js: promise replaced with null
Mutant 1201 in q.js: promise replaced with function () {}
Mutant 1202 in q.js: noop replaced with function () {
  throw new Error('Buggy replacement');
}
Mutant 1203 in q.js: noop replaced with null
Mutant 1204 in q.js: noop replaced with promises[index]
Mutant 1205 in q.js: allResolved replaced with Q.all
Mutant 1206 in q.js: this replaced with null
Mutant 1207 in q.js: this replaced with []
Mutant 1208 in q.js: promises replaced with []
Mutant 1209 in q.js: promises replaced with promises.slice()
Mutant 1210 in q.js: promises replaced with Object.values(promises)
Mutant 1211 in q.js: promise replaced with Promise.resolve()
Mutant 1212 in q.js: promise replaced with promises[index]
Mutant 1213 in q.js: promise replaced with Q.resolve(promise)
Mutant 1214 in q.js: promise.inspect replaced with promise.always
Mutant 1215 in q.js: promise.then(regardless, regardless) replaced with promise.then(null, null)
Mutant 1216 in q.js: regardless replaced with function regardless() {
  return {};
}
Mutant 1217 in q.js: regardless replaced with function regardless() {
  return Q.resolve();
}
Mutant 1218 in q.js: regardless replaced with function regardless() {
  return Q.reject(new Error('Artificial rejection'));
}
Mutant 1219 in q.js: regardless replaced with function () {
  return {};
}
Mutant 1220 in q.js: regardless replaced with function () {
  throw new Error('Buggy!');
}
Mutant 1221 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(Promise.resolve())
Mutant 1222 in q.js: object replaced with null
Mutant 1223 in q.js: object replaced with true
Mutant 1224 in q.js: object replaced with Q.reject("An error occurred")
Mutant 1225 in q.js: void 0 replaced with function () {}
Mutant 1226 in q.js: void 0 replaced with null
Mutant 1227 in q.js: void 0 replaced with promises
Mutant 1228 in q.js: rejected replaced with function () {
  throw rejected;
}
Mutant 1229 in q.js: rejected replaced with Q.reject(rejected)
Mutant 1230 in q.js: rejected replaced with Promise.reject(rejected)
Mutant 1231 in q.js: this.then(void 0, rejected) replaced with this.then(function () {})
Mutant 1232 in q.js: this.then(void 0, rejected) replaced with this.then(this)
Mutant 1233 in q.js: this.then(void 0, rejected) replaced with this.then(42)
Mutant 1234 in q.js: this.then replaced with this.catch
Mutant 1235 in q.js: void 0 replaced with null
Mutant 1236 in q.js: void 0 replaced with 42
Mutant 1237 in q.js: void 0 replaced with function () {
  return 42;
}
Mutant 1238 in q.js: rejected replaced with Promise.resolve()
Mutant 1239 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(null, null, progressed)
Mutant 1240 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(true, true, progressed)
Mutant 1241 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(this, this, progressed)
Mutant 1242 in q.js: void 0 replaced with null
Mutant 1243 in q.js: void 0 replaced with function () {}
Mutant 1244 in q.js: void 0 replaced with deferred.reject
Mutant 1245 in q.js: void 0 replaced with null
Mutant 1246 in q.js: void 0 replaced with 1
Mutant 1247 in q.js: progressed replaced with function () {}
Mutant 1248 in q.js: progressed replaced with 42
Mutant 1249 in q.js: progressed replaced with deferred.resolve
Mutant 1250 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1251 in q.js: void 0 replaced with null
Mutant 1252 in q.js: void 0 replaced with 0
Mutant 1253 in q.js: void 0 replaced with function () {}
Mutant 1254 in q.js: void 0 replaced with null
Mutant 1255 in q.js: void 0 replaced with function () {}
Mutant 1256 in q.js: void 0 replaced with deferred.resolve
Mutant 1257 in q.js: progressed replaced with function () {}
Mutant 1258 in q.js: progressed replaced with null
Mutant 1259 in q.js: progressed replaced with "string"
Mutant 1260 in q.js: object replaced with null
Mutant 1261 in q.js: object replaced with []
Mutant 1262 in q.js: object replaced with Promise.resolve()
Mutant 1263 in q.js: callback replaced with function () {
  return callback;
}
Mutant 1264 in q.js: callback replaced with callback()
Mutant 1265 in q.js: callback replaced with callback.bind(this)
Mutant 1266 in q.js: !callback || typeof callback.apply !== "function" replaced with callback === null || typeof callback.apply !== "function"
Mutant 1267 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback || typeof callback.call !== "function"
Mutant 1268 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback || callback.constructor.name !== "Function"
Mutant 1269 in q.js: Q replaced with Promise
Mutant 1270 in q.js: Q replaced with null
Mutant 1271 in q.js: Q replaced with this
Mutant 1272 in q.js: callback replaced with function () {
  return callback;
}
Mutant 1273 in q.js: callback replaced with callback.bind(this)
Mutant 1274 in q.js: callback replaced with callback()
Mutant 1275 in q.js: callback.fcall replaced with callback.fapply
not replacing callback.fcall with callback.fapply
not replacing callback.fcall with callback.fapply
Mutant 1276 in q.js: callback.fcall replaced with callback.apply
Mutant 1277 in q.js: callback.fcall replaced with Math.random
not replacing callback.fcall with callback.apply
not replacing callback.fcall with callback.apply
not replacing callback.fcall with Math.random
not replacing callback.fcall with Math.random
Mutant 1278 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(null)
Mutant 1279 in q.js: object replaced with Promise.resolve()
Mutant 1280 in q.js: object replaced with function () {
  return "I'm not a promise";
}
Mutant 1281 in q.js: fulfilled replaced with Promise.resolve(fulfilled)
Mutant 1282 in q.js: fulfilled replaced with null
Mutant 1283 in q.js: rejected replaced with Q.reject(new Error('Rejected explicitly'))
Mutant 1284 in q.js: rejected replaced with null
Mutant 1285 in q.js: rejected replaced with function () {
  throw new Error('Rejected explicitly');
}
Mutant 1286 in q.js: progress replaced with function () {}
Mutant 1287 in q.js: progress replaced with null
Mutant 1288 in q.js: progress replaced with Q.progress
Mutant 1289 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(null, promise)
Mutant 1290 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, Q(promise))
Mutant 1291 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise, deferred.reject)
Mutant 1292 in q.js: error replaced with new Error()
Mutant 1293 in q.js: error replaced with null
Mutant 1294 in q.js: promise replaced with null
Mutant 1295 in q.js: Q.onerror replaced with function () {
  throw new Error('Handled error');
}
Mutant 1296 in q.js: Q.onerror replaced with null
Mutant 1297 in q.js: Q.onerror replaced with function () {}
Mutant 1298 in q.js: Q.onerror replaced with null
Mutant 1299 in q.js: error replaced with new Error("Timed out after " + (ms || 0) + " ms")
Mutant 1300 in q.js: error replaced with {}
Mutant 1301 in q.js: error replaced with null
Mutant 1302 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(null, rejected, progress)
Mutant 1303 in q.js: this.then replaced with this.fcall
Mutant 1304 in q.js: this.then replaced with this.spread
Mutant 1305 in q.js: this.then replaced with this.nodeify
Mutant 1306 in q.js: fulfilled replaced with null
Mutant 1307 in q.js: fulfilled replaced with function () {}
Mutant 1308 in q.js: fulfilled replaced with 42
Mutant 1309 in q.js: rejected replaced with true
Mutant 1310 in q.js: rejected replaced with {}
Mutant 1311 in q.js: onUnhandledError replaced with function () {
  throw new Error("Unhandled error");
}
Mutant 1312 in q.js: onUnhandledError replaced with Q.onerror
Mutant 1313 in q.js: onUnhandledError replaced with function () {
  throw new Error("Unhandled error");
}.bind(this)
Mutant 1314 in q.js: void 0 replaced with null
Mutant 1315 in q.js: void 0 replaced with 42
Mutant 1316 in q.js: void 0 replaced with function () {
  return true;
}
Mutant 1317 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(0, error)
Mutant 1318 in q.js: object replaced with null
Mutant 1319 in q.js: ms replaced with 0
Mutant 1320 in q.js: ms replaced with this.ms
Mutant 1321 in q.js: ms replaced with Math.random() * 1000
Mutant 1322 in q.js: error replaced with new Error("Timed out after " + (ms - 10) + " ms")
Mutant 1323 in q.js: error replaced with {}
Mutant 1324 in q.js: error replaced with function () {
  throw new Error("An error occurred");
}
Mutant 1325 in q.js: !error || "string" === typeof error replaced with true
Mutant 1326 in q.js: !error || "string" === typeof error replaced with 1 === 1
Mutant 1327 in q.js: !error || "string" === typeof error replaced with null
Mutant 1328 in q.js: error replaced with new Error("Timed out after " + (ms - 10) + " ms")
Mutant 1329 in q.js: error replaced with {}
Mutant 1330 in q.js: error replaced with function () {
  throw new Error("An error occurred");
}
Mutant 1331 in q.js: clearTimeout replaced with clearInterval
Mutant 1332 in q.js: clearTimeout replaced with deferred.reject
Mutant 1333 in q.js: timeoutId replaced with 0
Mutant 1334 in q.js: timeoutId replaced with deferred
Mutant 1335 in q.js: timeoutId replaced with null
Mutant 1336 in q.js: value replaced with null
Mutant 1337 in q.js: value replaced with new Error('Replaced value')
Mutant 1338 in q.js: value replaced with this
Mutant 1339 in q.js: clearTimeout replaced with clearInterval
Mutant 1340 in q.js: clearTimeout replaced with deferred.reject
Mutant 1341 in q.js: timeoutId replaced with deferred
Mutant 1342 in q.js: timeoutId replaced with null
Mutant 1343 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1344 in q.js: deferred.reject replaced with deferred.promise
Mutant 1345 in q.js: exception replaced with new Error("An error occurred")
Mutant 1346 in q.js: exception replaced with null
Mutant 1347 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1348 in q.js: timeout === void 0 replaced with typeof timeout === "undefined"
Mutant 1349 in q.js: timeout === void 0 replaced with timeout === Q.timeout.NONE
Mutant 1350 in q.js: object replaced with null
Mutant 1351 in q.js: object replaced with true
Mutant 1352 in q.js: object replaced with []
Mutant 1353 in q.js: timeout replaced with 2 * timeout
Mutant 1354 in q.js: timeout replaced with timeout - 100
Mutant 1355 in q.js: timeout replaced with timeout || 100
Mutant 1356 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1357 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1358 in q.js: value replaced with null
Mutant 1359 in q.js: Q(callback).nfapply replaced with callback.nfapply
Mutant 1360 in q.js: Q(callback).nfapply replaced with Q.nfapply
Mutant 1361 in q.js: callback replaced with function () {
  return callback.bind(this);
}
Mutant 1362 in q.js: callback replaced with function () {
  return callback.call(this, 42);
}
Mutant 1363 in q.js: args replaced with []
Mutant 1364 in q.js: args replaced with null
Mutant 1365 in q.js: args replaced with 123
Mutant 1366 in q.js: defer replaced with {}
Mutant 1367 in q.js: array_slice replaced with [].slice
Mutant 1368 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1369 in q.js: deferred.makeNodeResolver() replaced with function () {
  throw new Error("Buggy node resolver");
}
Mutant 1370 in q.js: deferred.makeNodeResolver() replaced with deferred.reject
Mutant 1371 in q.js: nodeArgs replaced with []
Mutant 1372 in q.js: nodeArgs replaced with null
Mutant 1373 in q.js: nodeArgs replaced with this
Mutant 1374 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1375 in q.js: deferred.reject replaced with function () {}
Mutant 1376 in q.js: deferred.reject replaced with deferred.promise.resolve
Mutant 1377 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1378 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 1))
Mutant 1379 in q.js: array_slice replaced with [].slice
Mutant 1380 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1381 in q.js: 1 replaced with Infinity
Mutant 1382 in q.js: 1 replaced with null
Mutant 1383 in q.js: 1 replaced with setInterval
Mutant 1384 in q.js: Q(callback).nfapply replaced with null
Mutant 1385 in q.js: callback replaced with function () {
  return callback;
}
Mutant 1386 in q.js: callback replaced with callback.bind(null)
Mutant 1387 in q.js: callback replaced with callback || function () {}
Mutant 1388 in q.js: args replaced with []
Mutant 1389 in q.js: args replaced with null
Mutant 1390 in q.js: args replaced with 123
Mutant 1391 in q.js: array_slice replaced with [].slice
Mutant 1392 in q.js: array_slice replaced with Array.prototype.slice
Mutant 1393 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1394 in q.js: arguments replaced with null
Mutant 1395 in q.js: arguments replaced with this.arguments
Mutant 1396 in q.js: deferred.makeNodeResolver() replaced with function () {
  throw new Error("Buggy timeout");
}
Mutant 1397 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve()
Mutant 1398 in q.js: deferred.makeNodeResolver() replaced with deferred.reject("Buggy rejection")
Mutant 1399 in q.js: deferred.makeNodeResolver replaced with null
Mutant 1400 in q.js: nodeArgs replaced with this
Mutant 1401 in q.js: nodeArgs replaced with []
Mutant 1402 in q.js: nodeArgs replaced with nodeArgs.concat(deferred.makeNodeResolver())
Mutant 1403 in q.js: callback === undefined replaced with callback !== null
Mutant 1404 in q.js: callback === undefined replaced with typeof callback === 'function'
Mutant 1405 in q.js: callback === undefined replaced with callback && typeof callback === 'function'
Mutant 1406 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 0))
Mutant 1407 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1408 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 1409 in q.js: array_slice replaced with [].slice
Mutant 1410 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1411 in q.js: arguments replaced with Object.keys(arguments)
Mutant 1412 in q.js: arguments replaced with Reflect.apply(Array.prototype.slice, arguments, [1])
Mutant 1413 in q.js: 1 replaced with Q.denodeify.length - 1
Mutant 1414 in q.js: 1 replaced with null
Mutant 1415 in q.js: 1 replaced with []
Mutant 1416 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1417 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1418 in q.js: baseArgs.concat replaced with baseArgs.unshift
Mutant 1419 in q.js: array_slice(arguments) replaced with [].slice.call(arguments)
Mutant 1420 in q.js: array_slice(arguments) replaced with Array.prototype.slice.call(arguments)
Mutant 1421 in q.js: array_slice(arguments) replaced with Function.prototype.apply.call([], arguments)
Mutant 1422 in q.js: array_slice replaced with [1, 2, 3]
Mutant 1423 in q.js: array_slice replaced with null
Mutant 1424 in q.js: nodeArgs.push replaced with deferred.promise
Mutant 1425 in q.js: nodeArgs.push replaced with deferred.reject
Mutant 1426 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1427 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1428 in q.js: Q(callback).fapply replaced with callback.apply
Mutant 1429 in q.js: Q(callback).fapply replaced with this.fapply
Mutant 1430 in q.js: Q(callback).fapply replaced with Q.fapply
not replacing Q(callback).fapply with callback.apply
not replacing Q(callback).fapply with callback.apply
not replacing Q(callback).fapply with this.fapply
not replacing Q(callback).fapply with this.fapply
not replacing Q(callback).fapply with Q.fapply
not replacing Q(callback).fapply with Q.fapply
Mutant 1431 in q.js: Q replaced with this.thenApply
Mutant 1432 in q.js: Q replaced with this.all
Mutant 1433 in q.js: callback replaced with function () {}
Mutant 1434 in q.js: callback replaced with callback || function () {}
Mutant 1435 in q.js: deferred.reject replaced with function () {}
Mutant 1436 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1437 in q.js: deferred.reject replaced with deferred.notify
Mutant 1438 in q.js: array_slice replaced with [].slice
Mutant 1439 in q.js: array_slice replaced with Math.floor
Mutant 1440 in q.js: arguments replaced with [].slice.call(arguments, 0)
Mutant 1441 in q.js: arguments replaced with Object.keys(arguments).map(function (key) {
  return arguments[key];
})
Mutant 1442 in q.js: arguments replaced with Function.prototype.apply.call(Array.prototype.slice, arguments, 0)
Mutant 1443 in q.js: args.unshift replaced with this.constructor
Mutant 1444 in q.js: args.unshift replaced with null
Mutant 1445 in q.js: this replaced with null
Mutant 1446 in q.js: this replaced with window
Mutant 1447 in q.js: this replaced with Math
Mutant 1448 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null, args)
Mutant 1449 in q.js: void 0 replaced with null
Mutant 1450 in q.js: void 0 replaced with true
Mutant 1451 in q.js: void 0 replaced with defer()
Mutant 1452 in q.js: args replaced with args.slice()
Mutant 1453 in q.js: args replaced with [...args]
Mutant 1454 in q.js: array_slice(arguments, 2) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1455 in q.js: array_slice(arguments, 2) replaced with array_slice(Function.prototype.apply.call(arguments, [1]))
Mutant 1456 in q.js: array_slice(arguments, 2) replaced with array_slice([].concat.apply([], arguments))
Mutant 1457 in q.js: array_slice replaced with [].slice
Mutant 1458 in q.js: array_slice replaced with Math.floor
Mutant 1459 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1460 in q.js: arguments replaced with Object.keys(arguments)[0]
Mutant 1461 in q.js: arguments replaced with Function.prototype.apply.call(arguments, [0].concat(Array.prototype.slice.call(arguments, 1)))
Mutant 1462 in q.js: 2 replaced with 3
Mutant 1463 in q.js: 2 replaced with null
Mutant 1464 in q.js: 2 replaced with function () {}
Mutant 1465 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1466 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1467 in q.js: baseArgs.concat replaced with baseArgs.sort
Mutant 1468 in q.js: array_slice(arguments) replaced with [].slice.call(arguments)
Mutant 1469 in q.js: array_slice(arguments) replaced with Array.prototype.slice.call(arguments)
Mutant 1470 in q.js: array_slice replaced with null
Mutant 1471 in q.js: arguments replaced with null
Mutant 1472 in q.js: arguments replaced with deferred.resolve
Mutant 1473 in q.js: defer replaced with Promise.resolve
Mutant 1474 in q.js: deferred.makeNodeResolver() replaced with function () {
  throw new Error('Buggy node resolver');
}
Mutant 1475 in q.js: deferred.makeNodeResolver() replaced with deferred.reject
Mutant 1476 in q.js: deferred.makeNodeResolver() replaced with deferred.promise
Mutant 1477 in q.js: callback.apply replaced with callback.call
Mutant 1478 in q.js: callback.apply replaced with callback.bind
Mutant 1479 in q.js: thisp replaced with global
Mutant 1480 in q.js: thisp replaced with null
Mutant 1481 in q.js: thisp replaced with window
Mutant 1482 in q.js: arguments replaced with thisp
Mutant 1483 in q.js: arguments replaced with null
Mutant 1484 in q.js: arguments replaced with [].slice.call(arguments, 0)
Mutant 1485 in q.js: Q(bound).fapply replaced with bound.fapply
Mutant 1486 in q.js: Q(bound).fapply replaced with Function.prototype.fapply
not replacing Q(bound).fapply with bound.fapply
not replacing Q(bound).fapply with bound.fapply
not replacing Q(bound).fapply with Function.prototype.fapply
not replacing Q(bound).fapply with Function.prototype.fapply
Mutant 1487 in q.js: bound replaced with callback.apply(thisp)
Mutant 1488 in q.js: deferred.reject replaced with () => deferred.reject
Mutant 1489 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1490 in q.js: deferred.reject replaced with deferred.reject(null)
Mutant 1491 in q.js: array_slice replaced with [].slice
Mutant 1492 in q.js: array_slice replaced with null
Mutant 1493 in q.js: array_slice replaced with Array.prototype.slice
Mutant 1494 in q.js: arguments replaced with [].slice.call(arguments, 0)
Mutant 1495 in q.js: arguments replaced with Object.keys(arguments)[0]
Mutant 1496 in q.js: arguments replaced with Function.prototype.apply.call(null, this, arguments)
Mutant 1497 in q.js: 0 replaced with Infinity
Mutant 1498 in q.js: 0 replaced with null
Mutant 1499 in q.js: this replaced with global
Mutant 1500 in q.js: this replaced with 0
Mutant 1501 in q.js: this replaced with null
Mutant 1502 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1503 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1504 in q.js: void 0 replaced with null
Mutant 1505 in q.js: void 0 replaced with 123
Mutant 1506 in q.js: void 0 replaced with function () {}
Mutant 1507 in q.js: args replaced with []
Mutant 1508 in q.js: args replaced with null
Mutant 1509 in q.js: args replaced with this
Mutant 1510 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(false)
Mutant 1511 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(null)
Mutant 1512 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(this)
Mutant 1513 in q.js: Q replaced with Q.npost
Mutant 1514 in q.js: args replaced with []
Mutant 1515 in q.js: args replaced with null
Mutant 1516 in q.js: args replaced with {
  foo: 'bar'
}
Mutant 1517 in q.js: array_slice replaced with [].slice
Mutant 1518 in q.js: array_slice replaced with null
Mutant 1519 in q.js: args || [] replaced with []
Mutant 1520 in q.js: args || [] replaced with null
Mutant 1521 in q.js: args || [] replaced with global.args || []
Mutant 1522 in q.js: defer replaced with Promise.resolve
Mutant 1523 in q.js: defer replaced with Q.resolve
Mutant 1524 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1525 in q.js: deferred.makeNodeResolver() replaced with {}
Mutant 1526 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1527 in q.js: deferred.makeNodeResolver replaced with this.makeNodeResolver
Mutant 1528 in q.js: "post" replaced with "Post"
Mutant 1529 in q.js: [name, nodeArgs] replaced with name
Mutant 1530 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1531 in q.js: deferred.reject replaced with function () {}
Mutant 1532 in q.js: array_slice(arguments, 2) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1533 in q.js: array_slice(arguments, 2) replaced with array_slice(Array.prototype.slice.call(arguments, 1))
Mutant 1534 in q.js: array_slice replaced with [].slice
Mutant 1535 in q.js: array_slice replaced with null
Mutant 1536 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1537 in q.js: arguments replaced with [].concat.apply([], arguments)
Mutant 1538 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1539 in q.js: deferred.makeNodeResolver() replaced with {}
Mutant 1540 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1541 in q.js: deferred.makeNodeResolver() replaced with function () {
  return true;
}
Mutant 1542 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("called", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("called", [name, nodeArgs])
Mutant 1543 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 1544 in q.js: Q(object).dispatch replaced with Q.dispatch
not replacing Q(object).dispatch with this.dispatch
not replacing Q(object).dispatch with this.dispatch
not replacing Q(object).dispatch with Q.dispatch
not replacing Q(object).dispatch with Q.dispatch
Mutant 1545 in q.js: "post" replaced with "Post"
Mutant 1546 in q.js: "post" replaced with this.dispatch.bind(this, "post")
Mutant 1547 in q.js: "post" replaced with function () {
  return this.dispatch("post");
}
Mutant 1548 in q.js: [name, nodeArgs] replaced with name
Mutant 1549 in q.js: [name, nodeArgs] replaced with nodeArgs
Mutant 1550 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 0))
Mutant 1551 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 0))
Mutant 1552 in q.js: array_slice(arguments, 1) replaced with array_slice(slice.call(arguments, 0))
Mutant 1553 in q.js: array_slice replaced with [].slice
Mutant 1554 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1555 in q.js: arguments replaced with Object.keys(arguments)[1]
Mutant 1556 in q.js: nodeArgs.push replaced with null
Mutant 1557 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1558 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("call", [name, nodeArgs])
Mutant 1559 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, deferred.resolve])
Mutant 1560 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("apply", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("call", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, deferred.resolve])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("apply", [name, nodeArgs])
Mutant 1561 in q.js: [name, nodeArgs] replaced with this.constructor.prototype.dispatch.call(this, "post", [name, nodeArgs])
Mutant 1562 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1563 in q.js: deferred.reject replaced with function () {}
Mutant 1564 in q.js: deferred.reject replaced with null
Mutant 1565 in q.js: Q replaced with Promise
Mutant 1566 in q.js: Q replaced with []
Mutant 1567 in q.js: object replaced with this
Mutant 1568 in q.js: object replaced with null
Mutant 1569 in q.js: object replaced with function () {}
Mutant 1570 in q.js: nodeback replaced with function () {
  nodeback && nodeback(null, value);
}
Mutant 1571 in q.js: nodeback replaced with nodeback || (value => Q.nextTick(() => nodeback(null, value)))
Mutant 1572 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1573 in q.js: nodeback replaced with true
Mutant 1574 in q.js: nodeback replaced with null
Mutant 1575 in q.js: null replaced with value
Mutant 1576 in q.js: null replaced with 1
Mutant 1577 in q.js: value replaced with undefined
Mutant 1578 in q.js: value replaced with null
Mutant 1579 in q.js: value replaced with arguments[0]
Mutant 1580 in q.js: error replaced with new Error("Different error message")
Mutant 1581 in q.js: error replaced with null
Mutant 1582 in q.js: error replaced with Q.when(null, function () {
  throw error;
})
Mutant 1583 in queue.js: Q.defer replaced with Q.reject
Mutant 1584 in queue.js: ends.promise.get replaced with ends.promise.then.get
Mutant 1585 in queue.js: ends.promise.get replaced with ends.promise['get']
Mutant 1586 in queue.js: ends.promise.get replaced with ends.promise.head
Mutant 1587 in queue.js: "head" replaced with null
Mutant 1588 in queue.js: "head" replaced with ends.promise
Mutant 1589 in queue.js: "head" replaced with ends.promise.then(function (val) {
  return val.head;
})
Mutant 1590 in queue.js: ends.promise.get replaced with ends.promise.then.get
Mutant 1591 in queue.js: "tail" replaced with null
Mutant 1592 in queue.js: "tail" replaced with ends.promise
Mutant 1593 in queue.js: "tail" replaced with Q.resolve()
Mutant 1594 in queue.js: error replaced with null
Mutant 1595 in queue.js: error replaced with {}
Mutant 1596 in queue.js: error replaced with Q.resolve()
Mutant 1597 in queue.js: Q.reject replaced with null
Mutant 1598 in queue.js: Q.reject replaced with {}
Mutant 1599 in queue.js: Q.reject replaced with Q.resolve
Mutant 1600 in queue.js: error replaced with new Error("Different error message")
Mutant 1601 in queue.js: error replaced with null
Mutant 1602 in queue.js: error replaced with Q.reject(new Error("Can't get value from closed queue"))
Mutant 1603 in queue.js: ends.resolve replaced with ends.reject
Mutant 1604 in queue.js: ends.resolve replaced with ends.notify
Mutant 1605 in queue.js: ends.resolve replaced with ends.promise.resolve
Mutant 1606 in queue.js: end replaced with null
Mutant 1607 in queue.js: end replaced with Q.reject(new Error('Unexpected closure'))
Mutant 1608 in queue.js: end replaced with {
  head: Q.resolve(),
  tail: Q.resolve()
}
[32m09:38:43 (3212) INFO Instrumenter[39m Instrumented 2 source file(s) with 1609 mutant(s)
[32m09:38:44 (3212) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m09:38:45 (3212) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m09:38:45 (3212) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m09:38:52 (3212) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6806 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~2h 13m) 2/1609 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 58m) 3/1609 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 40m) 5/1609 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 58m) 6/1609 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 46m) 8/1609 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 57m) 9/1609 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 49m) 11/1609 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 57m) 12/1609 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 50m) 14/1609 tested (13 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 57m) 15/1609 tested (14 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 51m) 17/1609 tested (16 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 56m) 18/1609 tested (17 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 52m) 20/1609 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 56m) 21/1609 tested (20 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 0m) 22/1609 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 56m) 24/1609 tested (23 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 59m) 25/1609 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~2h 55m) 27/1609 tested (26 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 5m) 27/1609 tested (26 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 1m) 29/1609 tested (27 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 10m) 29/1609 tested (27 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 12m) 30/1609 tested (27 survived, 2 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 15m) 31/1609 tested (28 survived, 2 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 17m) 32/1609 tested (28 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 18m) 33/1609 tested (29 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 20m) 34/1609 tested (30 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 22m) 35/1609 tested (30 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 29m) 35/1609 tested (30 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 19m) 38/1609 tested (31 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 11m) 41/1609 tested (32 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~2h 59m) 45/1609 tested (32 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~2h 57m) 47/1609 tested (34 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~2h 58m) 48/1609 tested (35 survived, 5 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 56m) 50/1609 tested (37 survived, 5 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 58m) 51/1609 tested (38 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 56m) 53/1609 tested (40 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 57m) 54/1609 tested (41 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 55m) 56/1609 tested (43 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 56m) 57/1609 tested (44 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 55m) 59/1609 tested (46 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 56m) 60/1609 tested (47 survived, 5 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~2h 54m) 62/1609 tested (49 survived, 5 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~2h 55m) 63/1609 tested (50 survived, 5 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~2h 59m) 63/1609 tested (50 survived, 5 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~2h 58m) 65/1609 tested (51 survived, 6 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~2h 59m) 66/1609 tested (52 survived, 6 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~3h 3m) 66/1609 tested (52 survived, 6 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 1m) 68/1609 tested (53 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 2m) 69/1609 tested (54 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 0m) 71/1609 tested (56 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 1m) 72/1609 tested (57 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~2h 59m) 74/1609 tested (59 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 0m) 75/1609 tested (60 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~2h 59m) 77/1609 tested (62 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~2h 59m) 78/1609 tested (63 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~2h 58m) 80/1609 tested (65 survived, 7 timed out)
Mutation testing 5% (elapsed: ~9m, remaining: ~2h 59m) 81/1609 tested (66 survived, 7 timed out)
Mutation testing 5% (elapsed: ~9m, remaining: ~2h 57m) 83/1609 tested (68 survived, 7 timed out)
Mutation testing 5% (elapsed: ~9m, remaining: ~2h 58m) 84/1609 tested (69 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 57m) 86/1609 tested (71 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 57m) 87/1609 tested (72 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 56m) 89/1609 tested (74 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 57m) 90/1609 tested (75 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 55m) 92/1609 tested (77 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 56m) 93/1609 tested (78 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~2h 57m) 94/1609 tested (79 survived, 7 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 48m) 100/1609 tested (80 survived, 7 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 47m) 102/1609 tested (82 survived, 7 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 38m) 109/1609 tested (82 survived, 7 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 38m) 110/1609 tested (83 survived, 7 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 38m) 112/1609 tested (85 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 38m) 113/1609 tested (86 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 38m) 115/1609 tested (88 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 38m) 116/1609 tested (89 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 37m) 118/1609 tested (91 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 38m) 119/1609 tested (92 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 37m) 121/1609 tested (94 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 38m) 122/1609 tested (95 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 37m) 124/1609 tested (97 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 38m) 125/1609 tested (98 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 37m) 127/1609 tested (100 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 38m) 128/1609 tested (101 survived, 7 timed out)
Mutation testing 8% (elapsed: ~13m, remaining: ~2h 37m) 130/1609 tested (103 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 37m) 131/1609 tested (104 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 37m) 133/1609 tested (106 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 37m) 134/1609 tested (107 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 37m) 136/1609 tested (109 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 37m) 137/1609 tested (110 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 38m) 138/1609 tested (111 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 37m) 140/1609 tested (113 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 37m) 141/1609 tested (114 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 37m) 143/1609 tested (116 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 37m) 144/1609 tested (117 survived, 7 timed out)
Mutation testing 9% (elapsed: ~15m, remaining: ~2h 36m) 146/1609 tested (119 survived, 7 timed out)
Mutation testing 9% (elapsed: ~15m, remaining: ~2h 37m) 147/1609 tested (120 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 36m) 149/1609 tested (122 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 37m) 150/1609 tested (123 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 36m) 152/1609 tested (125 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 35m) 154/1609 tested (126 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 35m) 156/1609 tested (128 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 35m) 157/1609 tested (129 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 35m) 159/1609 tested (131 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 35m) 160/1609 tested (132 survived, 7 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 35m) 161/1609 tested (133 survived, 7 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 35m) 163/1609 tested (135 survived, 7 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 35m) 164/1609 tested (136 survived, 7 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 35m) 166/1609 tested (138 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 33m) 169/1609 tested (139 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 33m) 170/1609 tested (139 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 33m) 172/1609 tested (139 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 33m) 173/1609 tested (139 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 33m) 174/1609 tested (140 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 33m) 176/1609 tested (142 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 33m) 177/1609 tested (143 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 32m) 180/1609 tested (145 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 32m) 181/1609 tested (146 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 31m) 183/1609 tested (148 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 32m) 184/1609 tested (149 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 31m) 186/1609 tested (151 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 32m) 187/1609 tested (152 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 31m) 189/1609 tested (154 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 31m) 190/1609 tested (155 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 31m) 192/1609 tested (157 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 31m) 193/1609 tested (158 survived, 7 timed out)
Mutation testing 12% (elapsed: ~20m, remaining: ~2h 31m) 195/1609 tested (160 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 31m) 196/1609 tested (161 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 30m) 198/1609 tested (163 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 31m) 199/1609 tested (164 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 31m) 200/1609 tested (165 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 30m) 202/1609 tested (167 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 31m) 203/1609 tested (168 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 30m) 205/1609 tested (170 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 30m) 206/1609 tested (171 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 30m) 208/1609 tested (173 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 30m) 209/1609 tested (174 survived, 7 timed out)
Mutation testing 13% (elapsed: ~22m, remaining: ~2h 30m) 211/1609 tested (176 survived, 7 timed out)
Mutation testing 13% (elapsed: ~22m, remaining: ~2h 30m) 212/1609 tested (177 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 29m) 214/1609 tested (179 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 30m) 215/1609 tested (180 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 29m) 217/1609 tested (182 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 29m) 218/1609 tested (183 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 29m) 220/1609 tested (185 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 29m) 221/1609 tested (186 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 29m) 223/1609 tested (188 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 29m) 224/1609 tested (189 survived, 7 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 28m) 226/1609 tested (191 survived, 7 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 29m) 227/1609 tested (192 survived, 7 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 28m) 229/1609 tested (194 survived, 7 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 28m) 230/1609 tested (195 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 29m) 231/1609 tested (196 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 28m) 233/1609 tested (198 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 28m) 234/1609 tested (199 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 28m) 236/1609 tested (201 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 28m) 237/1609 tested (202 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 28m) 239/1609 tested (204 survived, 7 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 28m) 240/1609 tested (205 survived, 7 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 27m) 242/1609 tested (207 survived, 7 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 28m) 243/1609 tested (208 survived, 7 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 27m) 245/1609 tested (210 survived, 7 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 26m) 248/1609 tested (211 survived, 7 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 26m) 249/1609 tested (212 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 26m) 251/1609 tested (214 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 26m) 252/1609 tested (215 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 25m) 254/1609 tested (217 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 26m) 255/1609 tested (218 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 25m) 257/1609 tested (220 survived, 7 timed out)
Mutation testing 16% (elapsed: ~27m, remaining: ~2h 25m) 258/1609 tested (221 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 25m) 260/1609 tested (223 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 25m) 261/1609 tested (224 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 25m) 263/1609 tested (226 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 25m) 264/1609 tested (227 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 24m) 266/1609 tested (229 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 24m) 267/1609 tested (230 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 24m) 269/1609 tested (232 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 24m) 271/1609 tested (233 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 24m) 272/1609 tested (234 survived, 7 timed out)
Mutation testing 17% (elapsed: ~29m, remaining: ~2h 23m) 274/1609 tested (236 survived, 7 timed out)
Mutation testing 17% (elapsed: ~29m, remaining: ~2h 22m) 277/1609 tested (237 survived, 7 timed out)
Mutation testing 17% (elapsed: ~29m, remaining: ~2h 22m) 278/1609 tested (238 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 22m) 280/1609 tested (240 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 22m) 281/1609 tested (241 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 22m) 283/1609 tested (243 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 22m) 284/1609 tested (244 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 21m) 286/1609 tested (246 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 22m) 287/1609 tested (247 survived, 7 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 20m) 290/1609 tested (249 survived, 7 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 21m) 291/1609 tested (250 survived, 7 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 20m) 293/1609 tested (251 survived, 7 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 21m) 293/1609 tested (251 survived, 7 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 19m) 297/1609 tested (251 survived, 8 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 20m) 298/1609 tested (251 survived, 8 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 19m) 300/1609 tested (252 survived, 8 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 19m) 301/1609 tested (252 survived, 8 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 19m) 302/1609 tested (253 survived, 8 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 19m) 304/1609 tested (254 survived, 8 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 20m) 304/1609 tested (254 survived, 8 timed out)
Mutation testing 19% (elapsed: ~32m, remaining: ~2h 19m) 306/1609 tested (254 survived, 9 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 19m) 307/1609 tested (254 survived, 10 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 18m) 310/1609 tested (255 survived, 10 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 19m) 311/1609 tested (256 survived, 10 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 17m) 316/1609 tested (257 survived, 10 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 17m) 317/1609 tested (258 survived, 10 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 16m) 320/1609 tested (260 survived, 10 timed out)
Mutation testing 20% (elapsed: ~34m, remaining: ~2h 15m) 322/1609 tested (261 survived, 10 timed out)
Mutation testing 20% (elapsed: ~34m, remaining: ~2h 14m) 325/1609 tested (261 survived, 10 timed out)
Mutation testing 20% (elapsed: ~34m, remaining: ~2h 15m) 325/1609 tested (261 survived, 10 timed out)
Mutation testing 20% (elapsed: ~34m, remaining: ~2h 15m) 326/1609 tested (261 survived, 11 timed out)
Mutation testing 20% (elapsed: ~34m, remaining: ~2h 15m) 327/1609 tested (261 survived, 12 timed out)
Mutation testing 20% (elapsed: ~34m, remaining: ~2h 16m) 328/1609 tested (262 survived, 12 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 15m) 330/1609 tested (264 survived, 12 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 15m) 331/1609 tested (265 survived, 12 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 15m) 333/1609 tested (267 survived, 12 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 15m) 334/1609 tested (268 survived, 12 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 16m) 334/1609 tested (268 survived, 12 timed out)
Mutation testing 21% (elapsed: ~35m, remaining: ~2h 14m) 338/1609 tested (269 survived, 13 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 14m) 339/1609 tested (270 survived, 13 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 14m) 340/1609 tested (271 survived, 13 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 14m) 342/1609 tested (273 survived, 13 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 14m) 343/1609 tested (274 survived, 13 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 14m) 345/1609 tested (276 survived, 13 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 14m) 346/1609 tested (277 survived, 13 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 14m) 348/1609 tested (279 survived, 13 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 14m) 349/1609 tested (280 survived, 13 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 13m) 351/1609 tested (282 survived, 13 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 13m) 352/1609 tested (283 survived, 13 timed out)
Mutation testing 22% (elapsed: ~37m, remaining: ~2h 13m) 354/1609 tested (285 survived, 13 timed out)
Mutation testing 22% (elapsed: ~37m, remaining: ~2h 13m) 355/1609 tested (286 survived, 13 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 13m) 357/1609 tested (288 survived, 13 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 13m) 358/1609 tested (289 survived, 13 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 12m) 360/1609 tested (291 survived, 13 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 13m) 360/1609 tested (291 survived, 13 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 13m) 362/1609 tested (291 survived, 14 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 13m) 362/1609 tested (291 survived, 14 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 13m) 363/1609 tested (291 survived, 15 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 13m) 365/1609 tested (291 survived, 16 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 14m) 365/1609 tested (291 survived, 16 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 13m) 367/1609 tested (291 survived, 17 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 13m) 368/1609 tested (291 survived, 18 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 13m) 369/1609 tested (291 survived, 18 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 13m) 370/1609 tested (291 survived, 19 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 13m) 372/1609 tested (292 survived, 19 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 13m) 373/1609 tested (292 survived, 20 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 14m) 373/1609 tested (292 survived, 20 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 14m) 374/1609 tested (292 survived, 21 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 14m) 375/1609 tested (292 survived, 22 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 14m) 375/1609 tested (292 survived, 22 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 14m) 376/1609 tested (292 survived, 23 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 14m) 378/1609 tested (294 survived, 23 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 14m) 379/1609 tested (295 survived, 23 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 14m) 381/1609 tested (297 survived, 23 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 14m) 382/1609 tested (298 survived, 23 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 14m) 382/1609 tested (298 survived, 23 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 14m) 384/1609 tested (298 survived, 24 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 14m) 385/1609 tested (298 survived, 25 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 14m) 387/1609 tested (298 survived, 25 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 14m) 388/1609 tested (298 survived, 26 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 14m) 389/1609 tested (298 survived, 26 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 14m) 390/1609 tested (298 survived, 26 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 14m) 390/1609 tested (298 survived, 26 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 14m) 392/1609 tested (299 survived, 26 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 14m) 393/1609 tested (300 survived, 26 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 14m) 395/1609 tested (302 survived, 26 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 14m) 396/1609 tested (303 survived, 26 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 13m) 398/1609 tested (305 survived, 26 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 13m) 399/1609 tested (306 survived, 26 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 13m) 401/1609 tested (308 survived, 26 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 13m) 402/1609 tested (309 survived, 26 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 13m) 404/1609 tested (311 survived, 26 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 13m) 405/1609 tested (312 survived, 26 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 12m) 407/1609 tested (314 survived, 26 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 12m) 408/1609 tested (315 survived, 26 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 12m) 410/1609 tested (317 survived, 26 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 12m) 411/1609 tested (318 survived, 26 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 12m) 413/1609 tested (320 survived, 26 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 12m) 414/1609 tested (321 survived, 26 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 12m) 415/1609 tested (322 survived, 26 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 11m) 417/1609 tested (324 survived, 26 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 12m) 418/1609 tested (325 survived, 26 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 11m) 420/1609 tested (327 survived, 26 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 11m) 421/1609 tested (328 survived, 26 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 11m) 423/1609 tested (330 survived, 26 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 11m) 424/1609 tested (331 survived, 26 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 10m) 426/1609 tested (333 survived, 26 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 11m) 427/1609 tested (334 survived, 26 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 10m) 429/1609 tested (336 survived, 26 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 10m) 430/1609 tested (337 survived, 26 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 10m) 432/1609 tested (339 survived, 26 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 10m) 433/1609 tested (340 survived, 26 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 9m) 435/1609 tested (342 survived, 26 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 10m) 436/1609 tested (343 survived, 26 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 9m) 438/1609 tested (345 survived, 26 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 9m) 439/1609 tested (346 survived, 26 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 9m) 441/1609 tested (348 survived, 26 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 9m) 442/1609 tested (349 survived, 26 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 9m) 444/1609 tested (351 survived, 26 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 9m) 445/1609 tested (352 survived, 26 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 8m) 447/1609 tested (354 survived, 26 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 8m) 448/1609 tested (355 survived, 26 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 8m) 449/1609 tested (356 survived, 26 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 8m) 451/1609 tested (358 survived, 26 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 8m) 452/1609 tested (359 survived, 26 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 8m) 454/1609 tested (361 survived, 26 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 8m) 455/1609 tested (362 survived, 26 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 7m) 457/1609 tested (364 survived, 26 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 7m) 458/1609 tested (365 survived, 26 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 7m) 460/1609 tested (367 survived, 26 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 7m) 461/1609 tested (368 survived, 26 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 7m) 463/1609 tested (370 survived, 26 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 7m) 464/1609 tested (371 survived, 26 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 6m) 466/1609 tested (373 survived, 26 timed out)
Mutation testing 29% (elapsed: ~51m, remaining: ~2h 6m) 468/1609 tested (374 survived, 26 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 6m) 468/1609 tested (374 survived, 26 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 6m) 469/1609 tested (374 survived, 27 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 6m) 470/1609 tested (374 survived, 28 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 7m) 470/1609 tested (374 survived, 28 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 7m) 471/1609 tested (374 survived, 29 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 7m) 472/1609 tested (374 survived, 30 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 7m) 472/1609 tested (374 survived, 30 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 7m) 473/1609 tested (374 survived, 31 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 7m) 474/1609 tested (374 survived, 32 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 8m) 474/1609 tested (374 survived, 32 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 8m) 475/1609 tested (374 survived, 33 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 8m) 476/1609 tested (374 survived, 34 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 8m) 476/1609 tested (374 survived, 34 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 8m) 478/1609 tested (375 survived, 35 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 8m) 479/1609 tested (376 survived, 35 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 8m) 480/1609 tested (377 survived, 35 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 7m) 482/1609 tested (379 survived, 35 timed out)
Mutation testing 30% (elapsed: ~54m, remaining: ~2h 7m) 483/1609 tested (380 survived, 35 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 7m) 485/1609 tested (382 survived, 35 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 7m) 486/1609 tested (383 survived, 35 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 7m) 488/1609 tested (385 survived, 35 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 7m) 489/1609 tested (386 survived, 35 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 7m) 490/1609 tested (387 survived, 35 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 7m) 491/1609 tested (387 survived, 36 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 7m) 491/1609 tested (387 survived, 36 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 6m) 495/1609 tested (387 survived, 37 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 6m) 497/1609 tested (389 survived, 37 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 6m) 498/1609 tested (390 survived, 37 timed out)
Mutation testing 31% (elapsed: ~56m, remaining: ~2h 5m) 500/1609 tested (391 survived, 37 timed out)
Mutation testing 31% (elapsed: ~56m, remaining: ~2h 5m) 501/1609 tested (392 survived, 37 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 5m) 503/1609 tested (393 survived, 37 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 5m) 504/1609 tested (393 survived, 38 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 5m) 505/1609 tested (394 survived, 38 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 5m) 505/1609 tested (394 survived, 38 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 5m) 506/1609 tested (394 survived, 39 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 5m) 507/1609 tested (394 survived, 40 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 6m) 507/1609 tested (394 survived, 40 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 5m) 509/1609 tested (394 survived, 41 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 5m) 510/1609 tested (394 survived, 41 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 6m) 510/1609 tested (394 survived, 41 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 6m) 511/1609 tested (394 survived, 41 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 6m) 512/1609 tested (394 survived, 41 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 6m) 513/1609 tested (394 survived, 41 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 6m) 514/1609 tested (394 survived, 41 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 6m) 515/1609 tested (394 survived, 42 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 6m) 515/1609 tested (394 survived, 42 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 6m) 516/1609 tested (394 survived, 43 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 6m) 517/1609 tested (394 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 6m) 517/1609 tested (394 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 6m) 518/1609 tested (394 survived, 45 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 6m) 520/1609 tested (396 survived, 45 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 6m) 521/1609 tested (397 survived, 45 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 6m) 521/1609 tested (397 survived, 45 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 6m) 522/1609 tested (397 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 6m) 523/1609 tested (397 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 7m) 523/1609 tested (397 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 6m) 524/1609 tested (397 survived, 48 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 6m) 525/1609 tested (397 survived, 48 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 6m) 526/1609 tested (398 survived, 48 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 6m) 527/1609 tested (398 survived, 48 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 6m) 528/1609 tested (398 survived, 48 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 6m) 529/1609 tested (398 survived, 48 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 6m) 530/1609 tested (398 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 6m) 531/1609 tested (398 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 6m) 532/1609 tested (399 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 6m) 534/1609 tested (401 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 6m) 534/1609 tested (401 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 6m) 535/1609 tested (401 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 6m) 536/1609 tested (401 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 6m) 537/1609 tested (401 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 7m) 537/1609 tested (401 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 6m) 540/1609 tested (401 survived, 51 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 6m) 541/1609 tested (401 survived, 52 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 6m) 541/1609 tested (401 survived, 52 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 6m) 543/1609 tested (401 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 6m) 543/1609 tested (401 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 6m) 544/1609 tested (401 survived, 54 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 6m) 545/1609 tested (401 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 6m) 545/1609 tested (401 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 6m) 547/1609 tested (401 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 6m) 548/1609 tested (401 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 6m) 548/1609 tested (401 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 6m) 549/1609 tested (401 survived, 58 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 6m) 550/1609 tested (401 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 7m) 550/1609 tested (401 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 7m) 551/1609 tested (401 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 7m) 551/1609 tested (401 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 7m) 552/1609 tested (401 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 7m) 553/1609 tested (401 survived, 62 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 7m) 553/1609 tested (401 survived, 62 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 7m) 555/1609 tested (402 survived, 63 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 7m) 556/1609 tested (403 survived, 63 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 6m) 558/1609 tested (405 survived, 63 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 6m) 559/1609 tested (406 survived, 63 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 6m) 561/1609 tested (408 survived, 63 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 6m) 562/1609 tested (409 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 5m) 564/1609 tested (411 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 5m) 565/1609 tested (412 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 5m) 567/1609 tested (414 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 5m) 568/1609 tested (415 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 5m) 570/1609 tested (417 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 5m) 571/1609 tested (418 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 4m) 573/1609 tested (420 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 4m) 574/1609 tested (421 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 4m) 576/1609 tested (423 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 4m) 577/1609 tested (424 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 4m) 578/1609 tested (425 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 9m, remaining: ~2h 3m) 580/1609 tested (427 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 3m) 581/1609 tested (428 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 3m) 583/1609 tested (430 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 3m) 584/1609 tested (431 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 3m) 586/1609 tested (433 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 3m) 587/1609 tested (434 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 2m) 589/1609 tested (436 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 2m) 590/1609 tested (437 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 2m) 592/1609 tested (439 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 2m) 593/1609 tested (440 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 1m) 595/1609 tested (442 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 11m, remaining: ~2h 1m) 596/1609 tested (443 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 11m, remaining: ~2h 1m) 598/1609 tested (445 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 1m) 599/1609 tested (446 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 1m) 601/1609 tested (448 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 0m) 602/1609 tested (449 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 0m) 603/1609 tested (450 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 0m) 605/1609 tested (452 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 0m) 606/1609 tested (453 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 0m) 608/1609 tested (455 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 0m) 609/1609 tested (456 survived, 63 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~1h 59m) 611/1609 tested (458 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 13m, remaining: ~1h 59m) 612/1609 tested (459 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 13m, remaining: ~1h 59m) 614/1609 tested (461 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 13m, remaining: ~1h 59m) 615/1609 tested (462 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~1h 58m) 617/1609 tested (464 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~1h 58m) 618/1609 tested (465 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~1h 58m) 620/1609 tested (467 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~1h 58m) 621/1609 tested (468 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~1h 58m) 623/1609 tested (469 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~1h 57m) 626/1609 tested (469 survived, 63 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~1h 57m) 627/1609 tested (470 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 15m, remaining: ~1h 57m) 629/1609 tested (472 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 15m, remaining: ~1h 57m) 630/1609 tested (473 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 15m, remaining: ~1h 57m) 631/1609 tested (474 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 15m, remaining: ~1h 56m) 633/1609 tested (476 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 15m, remaining: ~1h 56m) 634/1609 tested (477 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 56m) 636/1609 tested (479 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 56m) 637/1609 tested (480 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 55m) 639/1609 tested (482 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 55m) 640/1609 tested (483 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 55m) 642/1609 tested (485 survived, 63 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 55m) 643/1609 tested (486 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 17m, remaining: ~1h 55m) 645/1609 tested (488 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 17m, remaining: ~1h 55m) 646/1609 tested (489 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 17m, remaining: ~1h 54m) 648/1609 tested (491 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 17m, remaining: ~1h 54m) 649/1609 tested (492 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 17m, remaining: ~1h 54m) 651/1609 tested (494 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 17m, remaining: ~1h 54m) 652/1609 tested (495 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 54m) 653/1609 tested (496 survived, 63 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 53m) 655/1609 tested (496 survived, 64 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 53m) 657/1609 tested (497 survived, 64 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 53m) 659/1609 tested (499 survived, 64 timed out)
Mutation testing 41% (elapsed: ~1h 18m, remaining: ~1h 52m) 661/1609 tested (500 survived, 64 timed out)
Mutation testing 41% (elapsed: ~1h 18m, remaining: ~1h 52m) 662/1609 tested (501 survived, 64 timed out)
Mutation testing 41% (elapsed: ~1h 19m, remaining: ~1h 52m) 664/1609 tested (503 survived, 64 timed out)
Mutation testing 41% (elapsed: ~1h 19m, remaining: ~1h 52m) 666/1609 tested (504 survived, 64 timed out)
Mutation testing 41% (elapsed: ~1h 19m, remaining: ~1h 52m) 667/1609 tested (505 survived, 64 timed out)
Mutation testing 41% (elapsed: ~1h 19m, remaining: ~1h 51m) 669/1609 tested (507 survived, 64 timed out)
Mutation testing 41% (elapsed: ~1h 19m, remaining: ~1h 51m) 672/1609 tested (507 survived, 64 timed out)
Mutation testing 41% (elapsed: ~1h 19m, remaining: ~1h 51m) 673/1609 tested (508 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 20m, remaining: ~1h 50m) 676/1609 tested (510 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 20m, remaining: ~1h 50m) 677/1609 tested (511 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 20m, remaining: ~1h 49m) 680/1609 tested (513 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 20m, remaining: ~1h 49m) 681/1609 tested (513 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 20m, remaining: ~1h 49m) 682/1609 tested (513 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 20m, remaining: ~1h 49m) 684/1609 tested (515 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 49m) 685/1609 tested (516 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 48m) 687/1609 tested (518 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 48m) 688/1609 tested (519 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 48m) 689/1609 tested (519 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 48m) 691/1609 tested (521 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 21m, remaining: ~1h 48m) 692/1609 tested (522 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 22m, remaining: ~1h 48m) 694/1609 tested (524 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 22m, remaining: ~1h 48m) 695/1609 tested (525 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 22m, remaining: ~1h 48m) 696/1609 tested (526 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 22m, remaining: ~1h 47m) 697/1609 tested (526 survived, 65 timed out)
Mutation testing 43% (elapsed: ~1h 22m, remaining: ~1h 48m) 697/1609 tested (526 survived, 65 timed out)
Mutation testing 43% (elapsed: ~1h 22m, remaining: ~1h 48m) 698/1609 tested (526 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 48m) 699/1609 tested (526 survived, 67 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 47m) 701/1609 tested (528 survived, 67 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 47m) 701/1609 tested (528 survived, 67 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 47m) 702/1609 tested (528 survived, 68 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 47m) 704/1609 tested (530 survived, 68 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 47m) 705/1609 tested (531 survived, 68 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 47m) 707/1609 tested (533 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 24m, remaining: ~1h 47m) 708/1609 tested (534 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 24m, remaining: ~1h 46m) 712/1609 tested (535 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 24m, remaining: ~1h 45m) 714/1609 tested (537 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 24m, remaining: ~1h 45m) 715/1609 tested (538 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 24m, remaining: ~1h 45m) 716/1609 tested (539 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 45m) 718/1609 tested (541 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 45m) 719/1609 tested (542 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 45m) 721/1609 tested (544 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 45m) 722/1609 tested (545 survived, 68 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 44m) 724/1609 tested (547 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 25m, remaining: ~1h 44m) 725/1609 tested (548 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 26m, remaining: ~1h 44m) 727/1609 tested (550 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 26m, remaining: ~1h 44m) 728/1609 tested (551 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 26m, remaining: ~1h 43m) 730/1609 tested (553 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 26m, remaining: ~1h 43m) 731/1609 tested (554 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 26m, remaining: ~1h 43m) 733/1609 tested (556 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 26m, remaining: ~1h 43m) 734/1609 tested (557 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 43m) 736/1609 tested (559 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 43m) 737/1609 tested (560 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 42m) 739/1609 tested (562 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 42m) 740/1609 tested (563 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 27m, remaining: ~1h 42m) 741/1609 tested (564 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 27m, remaining: ~1h 42m) 744/1609 tested (566 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 28m, remaining: ~1h 42m) 745/1609 tested (567 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 28m, remaining: ~1h 41m) 747/1609 tested (569 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 28m, remaining: ~1h 41m) 748/1609 tested (570 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 28m, remaining: ~1h 41m) 748/1609 tested (570 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 28m, remaining: ~1h 41m) 749/1609 tested (570 survived, 69 timed out)
Mutation testing 46% (elapsed: ~1h 28m, remaining: ~1h 41m) 750/1609 tested (570 survived, 70 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 41m) 750/1609 tested (570 survived, 70 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 41m) 751/1609 tested (570 survived, 71 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 41m) 752/1609 tested (570 survived, 72 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 41m) 753/1609 tested (571 survived, 72 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 41m) 755/1609 tested (573 survived, 72 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 41m) 756/1609 tested (574 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 30m, remaining: ~1h 41m) 758/1609 tested (576 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 30m, remaining: ~1h 40m) 759/1609 tested (577 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 30m, remaining: ~1h 40m) 761/1609 tested (579 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 30m, remaining: ~1h 40m) 762/1609 tested (580 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 30m, remaining: ~1h 40m) 764/1609 tested (582 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 30m, remaining: ~1h 40m) 765/1609 tested (583 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 39m) 767/1609 tested (585 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 39m) 768/1609 tested (586 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 39m) 770/1609 tested (588 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 39m) 771/1609 tested (589 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 31m, remaining: ~1h 39m) 773/1609 tested (591 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 31m, remaining: ~1h 39m) 774/1609 tested (592 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 32m, remaining: ~1h 38m) 776/1609 tested (594 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 32m, remaining: ~1h 38m) 777/1609 tested (595 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 32m, remaining: ~1h 38m) 779/1609 tested (597 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 32m, remaining: ~1h 38m) 780/1609 tested (598 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 32m, remaining: ~1h 38m) 781/1609 tested (599 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 32m, remaining: ~1h 37m) 783/1609 tested (601 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 33m, remaining: ~1h 37m) 784/1609 tested (602 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 33m, remaining: ~1h 37m) 786/1609 tested (604 survived, 72 timed out)
Mutation testing 48% (elapsed: ~1h 33m, remaining: ~1h 37m) 787/1609 tested (605 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 33m, remaining: ~1h 37m) 789/1609 tested (607 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 33m, remaining: ~1h 37m) 790/1609 tested (608 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 33m, remaining: ~1h 36m) 792/1609 tested (610 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 34m, remaining: ~1h 36m) 793/1609 tested (611 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 34m, remaining: ~1h 36m) 795/1609 tested (613 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 34m, remaining: ~1h 36m) 796/1609 tested (614 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 34m, remaining: ~1h 36m) 797/1609 tested (614 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 34m, remaining: ~1h 35m) 799/1609 tested (615 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 34m, remaining: ~1h 35m) 800/1609 tested (615 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 35m, remaining: ~1h 35m) 802/1609 tested (616 survived, 72 timed out)
Mutation testing 49% (elapsed: ~1h 35m, remaining: ~1h 35m) 803/1609 tested (617 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 35m, remaining: ~1h 35m) 805/1609 tested (619 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 35m, remaining: ~1h 35m) 806/1609 tested (620 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 35m, remaining: ~1h 34m) 808/1609 tested (622 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 35m, remaining: ~1h 34m) 809/1609 tested (623 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 36m, remaining: ~1h 34m) 811/1609 tested (625 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 36m, remaining: ~1h 34m) 812/1609 tested (626 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 36m, remaining: ~1h 34m) 813/1609 tested (627 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 36m, remaining: ~1h 34m) 815/1609 tested (629 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 36m, remaining: ~1h 33m) 816/1609 tested (630 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 36m, remaining: ~1h 33m) 818/1609 tested (632 survived, 72 timed out)
Mutation testing 50% (elapsed: ~1h 37m, remaining: ~1h 33m) 819/1609 tested (633 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 37m, remaining: ~1h 33m) 821/1609 tested (635 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 37m, remaining: ~1h 33m) 822/1609 tested (636 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 37m, remaining: ~1h 32m) 824/1609 tested (638 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 37m, remaining: ~1h 32m) 825/1609 tested (639 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 37m, remaining: ~1h 32m) 827/1609 tested (641 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 38m, remaining: ~1h 32m) 828/1609 tested (642 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 38m, remaining: ~1h 32m) 830/1609 tested (644 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 38m, remaining: ~1h 32m) 831/1609 tested (645 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 38m, remaining: ~1h 31m) 833/1609 tested (647 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 38m, remaining: ~1h 31m) 834/1609 tested (648 survived, 72 timed out)
Mutation testing 51% (elapsed: ~1h 38m, remaining: ~1h 31m) 836/1609 tested (650 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 39m, remaining: ~1h 31m) 837/1609 tested (651 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 39m, remaining: ~1h 31m) 839/1609 tested (653 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 39m, remaining: ~1h 30m) 840/1609 tested (654 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 39m, remaining: ~1h 30m) 842/1609 tested (656 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 39m, remaining: ~1h 30m) 843/1609 tested (657 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 39m, remaining: ~1h 30m) 845/1609 tested (659 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 40m, remaining: ~1h 30m) 846/1609 tested (660 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 40m, remaining: ~1h 30m) 847/1609 tested (661 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 40m, remaining: ~1h 29m) 849/1609 tested (663 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 40m, remaining: ~1h 29m) 850/1609 tested (664 survived, 72 timed out)
Mutation testing 52% (elapsed: ~1h 40m, remaining: ~1h 29m) 852/1609 tested (666 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 40m, remaining: ~1h 29m) 853/1609 tested (667 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 41m, remaining: ~1h 29m) 855/1609 tested (669 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 41m, remaining: ~1h 28m) 856/1609 tested (670 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 41m, remaining: ~1h 28m) 858/1609 tested (672 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 41m, remaining: ~1h 28m) 859/1609 tested (673 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 41m, remaining: ~1h 28m) 861/1609 tested (675 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 41m, remaining: ~1h 28m) 862/1609 tested (676 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 42m, remaining: ~1h 27m) 864/1609 tested (678 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 42m, remaining: ~1h 27m) 865/1609 tested (679 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 42m, remaining: ~1h 27m) 867/1609 tested (681 survived, 72 timed out)
Mutation testing 53% (elapsed: ~1h 42m, remaining: ~1h 27m) 868/1609 tested (682 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 42m, remaining: ~1h 27m) 870/1609 tested (684 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 42m, remaining: ~1h 27m) 871/1609 tested (685 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 43m, remaining: ~1h 26m) 873/1609 tested (687 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 43m, remaining: ~1h 26m) 874/1609 tested (688 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 43m, remaining: ~1h 26m) 876/1609 tested (690 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 43m, remaining: ~1h 26m) 877/1609 tested (691 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 43m, remaining: ~1h 26m) 879/1609 tested (693 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 43m, remaining: ~1h 26m) 880/1609 tested (694 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 44m, remaining: ~1h 25m) 882/1609 tested (696 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 44m, remaining: ~1h 25m) 883/1609 tested (697 survived, 72 timed out)
Mutation testing 54% (elapsed: ~1h 44m, remaining: ~1h 25m) 884/1609 tested (698 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 44m, remaining: ~1h 25m) 886/1609 tested (700 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 44m, remaining: ~1h 25m) 887/1609 tested (701 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 44m, remaining: ~1h 24m) 889/1609 tested (703 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 45m, remaining: ~1h 24m) 890/1609 tested (704 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 45m, remaining: ~1h 24m) 892/1609 tested (706 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 45m, remaining: ~1h 24m) 893/1609 tested (707 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 45m, remaining: ~1h 24m) 895/1609 tested (709 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 45m, remaining: ~1h 24m) 896/1609 tested (710 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 45m, remaining: ~1h 23m) 898/1609 tested (712 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 46m, remaining: ~1h 23m) 899/1609 tested (713 survived, 72 timed out)
Mutation testing 55% (elapsed: ~1h 46m, remaining: ~1h 23m) 901/1609 tested (715 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 46m, remaining: ~1h 23m) 902/1609 tested (716 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 46m, remaining: ~1h 23m) 904/1609 tested (718 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 46m, remaining: ~1h 22m) 905/1609 tested (719 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 46m, remaining: ~1h 22m) 907/1609 tested (721 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 47m, remaining: ~1h 22m) 908/1609 tested (722 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 47m, remaining: ~1h 22m) 910/1609 tested (724 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 47m, remaining: ~1h 22m) 911/1609 tested (725 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 47m, remaining: ~1h 21m) 913/1609 tested (727 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 47m, remaining: ~1h 21m) 914/1609 tested (728 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 47m, remaining: ~1h 21m) 916/1609 tested (730 survived, 72 timed out)
Mutation testing 56% (elapsed: ~1h 48m, remaining: ~1h 21m) 917/1609 tested (731 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 48m, remaining: ~1h 21m) 919/1609 tested (733 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 48m, remaining: ~1h 21m) 920/1609 tested (734 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 48m, remaining: ~1h 20m) 922/1609 tested (736 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 48m, remaining: ~1h 20m) 923/1609 tested (737 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 48m, remaining: ~1h 20m) 924/1609 tested (738 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 49m, remaining: ~1h 20m) 926/1609 tested (740 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 49m, remaining: ~1h 20m) 927/1609 tested (741 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 49m, remaining: ~1h 20m) 929/1609 tested (743 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 49m, remaining: ~1h 19m) 930/1609 tested (744 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 49m, remaining: ~1h 19m) 932/1609 tested (746 survived, 72 timed out)
Mutation testing 57% (elapsed: ~1h 49m, remaining: ~1h 19m) 933/1609 tested (747 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 50m, remaining: ~1h 19m) 935/1609 tested (749 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 50m, remaining: ~1h 19m) 936/1609 tested (750 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 50m, remaining: ~1h 18m) 938/1609 tested (752 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 50m, remaining: ~1h 18m) 939/1609 tested (753 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 50m, remaining: ~1h 18m) 941/1609 tested (755 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 50m, remaining: ~1h 18m) 942/1609 tested (756 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 51m, remaining: ~1h 18m) 944/1609 tested (758 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 51m, remaining: ~1h 18m) 945/1609 tested (759 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 51m, remaining: ~1h 17m) 947/1609 tested (761 survived, 72 timed out)
Mutation testing 58% (elapsed: ~1h 51m, remaining: ~1h 17m) 948/1609 tested (762 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 51m, remaining: ~1h 17m) 950/1609 tested (764 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 51m, remaining: ~1h 17m) 951/1609 tested (765 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 52m, remaining: ~1h 17m) 953/1609 tested (767 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 52m, remaining: ~1h 17m) 954/1609 tested (768 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 52m, remaining: ~1h 16m) 956/1609 tested (770 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 52m, remaining: ~1h 16m) 957/1609 tested (771 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 52m, remaining: ~1h 16m) 958/1609 tested (772 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 52m, remaining: ~1h 16m) 960/1609 tested (774 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 53m, remaining: ~1h 16m) 961/1609 tested (775 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 53m, remaining: ~1h 15m) 963/1609 tested (777 survived, 72 timed out)
Mutation testing 59% (elapsed: ~1h 53m, remaining: ~1h 15m) 964/1609 tested (778 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 53m, remaining: ~1h 15m) 966/1609 tested (780 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 53m, remaining: ~1h 15m) 967/1609 tested (781 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 53m, remaining: ~1h 15m) 969/1609 tested (783 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 54m, remaining: ~1h 15m) 970/1609 tested (784 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 54m, remaining: ~1h 14m) 972/1609 tested (786 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 54m, remaining: ~1h 14m) 973/1609 tested (787 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 54m, remaining: ~1h 14m) 975/1609 tested (789 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 54m, remaining: ~1h 14m) 976/1609 tested (790 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 54m, remaining: ~1h 14m) 978/1609 tested (792 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 55m, remaining: ~1h 14m) 979/1609 tested (793 survived, 72 timed out)
Mutation testing 60% (elapsed: ~1h 55m, remaining: ~1h 13m) 981/1609 tested (795 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 55m, remaining: ~1h 13m) 982/1609 tested (796 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 55m, remaining: ~1h 13m) 984/1609 tested (798 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 55m, remaining: ~1h 13m) 985/1609 tested (799 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 55m, remaining: ~1h 12m) 987/1609 tested (801 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 56m, remaining: ~1h 12m) 988/1609 tested (802 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 56m, remaining: ~1h 12m) 989/1609 tested (803 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 56m, remaining: ~1h 12m) 991/1609 tested (805 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 56m, remaining: ~1h 12m) 992/1609 tested (806 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 56m, remaining: ~1h 12m) 994/1609 tested (808 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 56m, remaining: ~1h 12m) 995/1609 tested (809 survived, 72 timed out)
Mutation testing 61% (elapsed: ~1h 57m, remaining: ~1h 11m) 997/1609 tested (811 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 57m, remaining: ~1h 11m) 998/1609 tested (812 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 57m, remaining: ~1h 11m) 1000/1609 tested (814 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 57m, remaining: ~1h 11m) 1001/1609 tested (815 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 57m, remaining: ~1h 11m) 1003/1609 tested (817 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 57m, remaining: ~1h 11m) 1004/1609 tested (818 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 58m, remaining: ~1h 10m) 1006/1609 tested (820 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 58m, remaining: ~1h 10m) 1007/1609 tested (821 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 58m, remaining: ~1h 10m) 1009/1609 tested (823 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 58m, remaining: ~1h 10m) 1010/1609 tested (824 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 58m, remaining: ~1h 10m) 1012/1609 tested (826 survived, 72 timed out)
Mutation testing 62% (elapsed: ~1h 58m, remaining: ~1h 9m) 1013/1609 tested (827 survived, 72 timed out)
Mutation testing 63% (elapsed: ~1h 59m, remaining: ~1h 9m) 1015/1609 tested (829 survived, 72 timed out)
Mutation testing 63% (elapsed: ~1h 59m, remaining: ~1h 9m) 1016/1609 tested (830 survived, 72 timed out)
Mutation testing 63% (elapsed: ~1h 59m, remaining: ~1h 9m) 1017/1609 tested (831 survived, 72 timed out)
Mutation testing 63% (elapsed: ~1h 59m, remaining: ~1h 9m) 1019/1609 tested (833 survived, 72 timed out)
Mutation testing 63% (elapsed: ~1h 59m, remaining: ~1h 9m) 1020/1609 tested (834 survived, 72 timed out)
Mutation testing 63% (elapsed: ~1h 59m, remaining: ~1h 8m) 1022/1609 tested (836 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 0m, remaining: ~1h 8m) 1023/1609 tested (837 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 0m, remaining: ~1h 8m) 1025/1609 tested (839 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 0m, remaining: ~1h 8m) 1026/1609 tested (840 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 0m, remaining: ~1h 8m) 1028/1609 tested (842 survived, 72 timed out)
Mutation testing 63% (elapsed: ~2h 0m, remaining: ~1h 8m) 1029/1609 tested (843 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 0m, remaining: ~1h 7m) 1031/1609 tested (845 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 1m, remaining: ~1h 7m) 1032/1609 tested (846 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 1m, remaining: ~1h 7m) 1034/1609 tested (848 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 1m, remaining: ~1h 7m) 1035/1609 tested (849 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 1m, remaining: ~1h 7m) 1037/1609 tested (851 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 1m, remaining: ~1h 6m) 1038/1609 tested (852 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 1m, remaining: ~1h 6m) 1040/1609 tested (854 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 2m, remaining: ~1h 6m) 1041/1609 tested (855 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 2m, remaining: ~1h 6m) 1043/1609 tested (857 survived, 72 timed out)
Mutation testing 64% (elapsed: ~2h 2m, remaining: ~1h 6m) 1044/1609 tested (858 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 2m, remaining: ~1h 5m) 1046/1609 tested (860 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 2m, remaining: ~1h 5m) 1047/1609 tested (861 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 2m, remaining: ~1h 5m) 1048/1609 tested (862 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 3m, remaining: ~1h 5m) 1050/1609 tested (864 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 3m, remaining: ~1h 5m) 1051/1609 tested (865 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 3m, remaining: ~1h 5m) 1053/1609 tested (867 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 3m, remaining: ~1h 5m) 1054/1609 tested (868 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 3m, remaining: ~1h 4m) 1056/1609 tested (870 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 3m, remaining: ~1h 4m) 1057/1609 tested (871 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 4m, remaining: ~1h 4m) 1059/1609 tested (873 survived, 72 timed out)
Mutation testing 65% (elapsed: ~2h 4m, remaining: ~1h 4m) 1060/1609 tested (874 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 4m, remaining: ~1h 4m) 1062/1609 tested (876 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 4m, remaining: ~1h 3m) 1063/1609 tested (877 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 4m, remaining: ~1h 3m) 1065/1609 tested (879 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 4m, remaining: ~1h 3m) 1066/1609 tested (880 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 5m, remaining: ~1h 3m) 1068/1609 tested (882 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 5m, remaining: ~1h 3m) 1069/1609 tested (883 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 5m, remaining: ~1h 2m) 1071/1609 tested (885 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 5m, remaining: ~1h 2m) 1072/1609 tested (886 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 5m, remaining: ~1h 2m) 1074/1609 tested (888 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 5m, remaining: ~1h 2m) 1075/1609 tested (889 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 6m, remaining: ~1h 2m) 1077/1609 tested (891 survived, 72 timed out)
Mutation testing 66% (elapsed: ~2h 6m, remaining: ~1h 2m) 1078/1609 tested (892 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 6m, remaining: ~1h 1m) 1080/1609 tested (894 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 6m, remaining: ~1h 1m) 1081/1609 tested (895 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 6m, remaining: ~1h 1m) 1082/1609 tested (896 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 6m, remaining: ~1h 1m) 1084/1609 tested (898 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 7m, remaining: ~1h 1m) 1085/1609 tested (899 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 7m, remaining: ~1h 1m) 1087/1609 tested (901 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 7m, remaining: ~1h 0m) 1088/1609 tested (902 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 7m, remaining: ~1h 0m) 1090/1609 tested (904 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 7m, remaining: ~1h 0m) 1091/1609 tested (905 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 7m, remaining: ~1h 0m) 1093/1609 tested (907 survived, 72 timed out)
Mutation testing 67% (elapsed: ~2h 8m, remaining: ~1h 0m) 1094/1609 tested (908 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 8m, remaining: ~59m) 1096/1609 tested (910 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 8m, remaining: ~59m) 1097/1609 tested (911 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 8m, remaining: ~59m) 1099/1609 tested (913 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 8m, remaining: ~59m) 1100/1609 tested (914 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 8m, remaining: ~59m) 1102/1609 tested (916 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 9m, remaining: ~59m) 1103/1609 tested (917 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 9m, remaining: ~58m) 1105/1609 tested (919 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 9m, remaining: ~58m) 1106/1609 tested (920 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 9m, remaining: ~58m) 1108/1609 tested (922 survived, 72 timed out)
Mutation testing 68% (elapsed: ~2h 9m, remaining: ~58m) 1109/1609 tested (923 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 9m, remaining: ~58m) 1111/1609 tested (925 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 10m, remaining: ~58m) 1112/1609 tested (926 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 10m, remaining: ~57m) 1114/1609 tested (928 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 10m, remaining: ~57m) 1115/1609 tested (929 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 10m, remaining: ~57m) 1117/1609 tested (931 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 10m, remaining: ~57m) 1118/1609 tested (932 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 10m, remaining: ~57m) 1120/1609 tested (934 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 11m, remaining: ~57m) 1121/1609 tested (935 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 11m, remaining: ~56m) 1122/1609 tested (936 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 11m, remaining: ~56m) 1124/1609 tested (938 survived, 72 timed out)
Mutation testing 69% (elapsed: ~2h 11m, remaining: ~56m) 1125/1609 tested (939 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 11m, remaining: ~56m) 1127/1609 tested (941 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 11m, remaining: ~56m) 1128/1609 tested (942 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 12m, remaining: ~55m) 1130/1609 tested (944 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 12m, remaining: ~55m) 1131/1609 tested (945 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 12m, remaining: ~55m) 1133/1609 tested (947 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 12m, remaining: ~55m) 1134/1609 tested (948 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 12m, remaining: ~55m) 1136/1609 tested (950 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 12m, remaining: ~55m) 1137/1609 tested (951 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 13m, remaining: ~54m) 1139/1609 tested (953 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 13m, remaining: ~54m) 1140/1609 tested (954 survived, 72 timed out)
Mutation testing 70% (elapsed: ~2h 13m, remaining: ~54m) 1142/1609 tested (956 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 13m, remaining: ~54m) 1143/1609 tested (957 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 13m, remaining: ~54m) 1145/1609 tested (959 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 13m, remaining: ~54m) 1146/1609 tested (960 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 14m, remaining: ~53m) 1148/1609 tested (962 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 14m, remaining: ~53m) 1149/1609 tested (963 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 14m, remaining: ~53m) 1151/1609 tested (965 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 14m, remaining: ~53m) 1152/1609 tested (966 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 14m, remaining: ~53m) 1153/1609 tested (967 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 14m, remaining: ~52m) 1155/1609 tested (969 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 15m, remaining: ~52m) 1156/1609 tested (970 survived, 72 timed out)
Mutation testing 71% (elapsed: ~2h 15m, remaining: ~52m) 1158/1609 tested (972 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 15m, remaining: ~52m) 1159/1609 tested (973 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 15m, remaining: ~52m) 1161/1609 tested (975 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 15m, remaining: ~52m) 1162/1609 tested (976 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 15m, remaining: ~51m) 1164/1609 tested (978 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 16m, remaining: ~51m) 1165/1609 tested (979 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 16m, remaining: ~51m) 1167/1609 tested (981 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 16m, remaining: ~51m) 1168/1609 tested (982 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 16m, remaining: ~51m) 1170/1609 tested (984 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 16m, remaining: ~51m) 1171/1609 tested (985 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 16m, remaining: ~50m) 1173/1609 tested (987 survived, 72 timed out)
Mutation testing 72% (elapsed: ~2h 17m, remaining: ~50m) 1174/1609 tested (988 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 17m, remaining: ~50m) 1176/1609 tested (990 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 17m, remaining: ~50m) 1177/1609 tested (991 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 17m, remaining: ~50m) 1179/1609 tested (993 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 17m, remaining: ~50m) 1180/1609 tested (994 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 17m, remaining: ~49m) 1182/1609 tested (996 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 18m, remaining: ~49m) 1183/1609 tested (997 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 18m, remaining: ~49m) 1185/1609 tested (999 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 18m, remaining: ~49m) 1186/1609 tested (1000 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 18m, remaining: ~49m) 1187/1609 tested (1001 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 18m, remaining: ~48m) 1189/1609 tested (1003 survived, 72 timed out)
Mutation testing 73% (elapsed: ~2h 18m, remaining: ~48m) 1190/1609 tested (1004 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 19m, remaining: ~48m) 1192/1609 tested (1006 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 19m, remaining: ~48m) 1193/1609 tested (1007 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 19m, remaining: ~48m) 1195/1609 tested (1009 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 19m, remaining: ~48m) 1196/1609 tested (1010 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 19m, remaining: ~47m) 1198/1609 tested (1012 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 19m, remaining: ~47m) 1199/1609 tested (1013 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 20m, remaining: ~47m) 1201/1609 tested (1015 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 20m, remaining: ~47m) 1202/1609 tested (1016 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 20m, remaining: ~47m) 1204/1609 tested (1018 survived, 72 timed out)
Mutation testing 74% (elapsed: ~2h 20m, remaining: ~47m) 1205/1609 tested (1019 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 20m, remaining: ~46m) 1207/1609 tested (1021 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 20m, remaining: ~46m) 1208/1609 tested (1022 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 21m, remaining: ~46m) 1210/1609 tested (1024 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 21m, remaining: ~46m) 1211/1609 tested (1025 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 21m, remaining: ~46m) 1213/1609 tested (1027 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 21m, remaining: ~46m) 1214/1609 tested (1028 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 21m, remaining: ~45m) 1216/1609 tested (1030 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 21m, remaining: ~45m) 1217/1609 tested (1031 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 22m, remaining: ~45m) 1219/1609 tested (1033 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 22m, remaining: ~45m) 1220/1609 tested (1034 survived, 72 timed out)
Mutation testing 75% (elapsed: ~2h 22m, remaining: ~45m) 1221/1609 tested (1035 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 22m, remaining: ~44m) 1223/1609 tested (1037 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 22m, remaining: ~44m) 1224/1609 tested (1038 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 22m, remaining: ~44m) 1226/1609 tested (1040 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 23m, remaining: ~44m) 1227/1609 tested (1041 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 23m, remaining: ~44m) 1229/1609 tested (1043 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 23m, remaining: ~44m) 1230/1609 tested (1044 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 23m, remaining: ~43m) 1232/1609 tested (1046 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 23m, remaining: ~43m) 1233/1609 tested (1047 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 23m, remaining: ~43m) 1235/1609 tested (1049 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 24m, remaining: ~43m) 1236/1609 tested (1050 survived, 72 timed out)
Mutation testing 76% (elapsed: ~2h 24m, remaining: ~43m) 1238/1609 tested (1052 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 24m, remaining: ~43m) 1239/1609 tested (1053 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 24m, remaining: ~42m) 1241/1609 tested (1055 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 24m, remaining: ~42m) 1242/1609 tested (1056 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 24m, remaining: ~42m) 1244/1609 tested (1058 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 25m, remaining: ~42m) 1245/1609 tested (1059 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 25m, remaining: ~42m) 1247/1609 tested (1061 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 25m, remaining: ~42m) 1248/1609 tested (1062 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 25m, remaining: ~41m) 1250/1609 tested (1064 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 25m, remaining: ~41m) 1251/1609 tested (1065 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 25m, remaining: ~41m) 1253/1609 tested (1067 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 26m, remaining: ~41m) 1254/1609 tested (1068 survived, 72 timed out)
Mutation testing 77% (elapsed: ~2h 26m, remaining: ~41m) 1255/1609 tested (1069 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 26m, remaining: ~40m) 1257/1609 tested (1071 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 26m, remaining: ~40m) 1258/1609 tested (1072 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 26m, remaining: ~40m) 1260/1609 tested (1074 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 26m, remaining: ~40m) 1261/1609 tested (1075 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 27m, remaining: ~40m) 1263/1609 tested (1077 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 27m, remaining: ~40m) 1264/1609 tested (1078 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 27m, remaining: ~39m) 1266/1609 tested (1080 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 27m, remaining: ~39m) 1267/1609 tested (1081 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 27m, remaining: ~39m) 1269/1609 tested (1083 survived, 72 timed out)
Mutation testing 78% (elapsed: ~2h 27m, remaining: ~39m) 1270/1609 tested (1084 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 28m, remaining: ~39m) 1272/1609 tested (1086 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 28m, remaining: ~39m) 1273/1609 tested (1087 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 28m, remaining: ~38m) 1275/1609 tested (1089 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 28m, remaining: ~38m) 1276/1609 tested (1090 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 28m, remaining: ~38m) 1278/1609 tested (1092 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 28m, remaining: ~38m) 1279/1609 tested (1093 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 29m, remaining: ~38m) 1281/1609 tested (1095 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 29m, remaining: ~38m) 1282/1609 tested (1096 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 29m, remaining: ~37m) 1283/1609 tested (1097 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 29m, remaining: ~37m) 1285/1609 tested (1099 survived, 72 timed out)
Mutation testing 79% (elapsed: ~2h 29m, remaining: ~37m) 1286/1609 tested (1100 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 29m, remaining: ~37m) 1288/1609 tested (1102 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 30m, remaining: ~37m) 1289/1609 tested (1103 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 30m, remaining: ~36m) 1291/1609 tested (1105 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 30m, remaining: ~36m) 1292/1609 tested (1106 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 30m, remaining: ~36m) 1294/1609 tested (1108 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 30m, remaining: ~36m) 1295/1609 tested (1109 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 30m, remaining: ~36m) 1297/1609 tested (1111 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 31m, remaining: ~36m) 1298/1609 tested (1112 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 31m, remaining: ~35m) 1300/1609 tested (1114 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 31m, remaining: ~35m) 1301/1609 tested (1115 survived, 72 timed out)
Mutation testing 80% (elapsed: ~2h 31m, remaining: ~35m) 1303/1609 tested (1117 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 31m, remaining: ~35m) 1304/1609 tested (1118 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 31m, remaining: ~35m) 1306/1609 tested (1120 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 32m, remaining: ~35m) 1307/1609 tested (1121 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 32m, remaining: ~34m) 1309/1609 tested (1123 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 32m, remaining: ~34m) 1310/1609 tested (1124 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 32m, remaining: ~34m) 1312/1609 tested (1126 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 32m, remaining: ~34m) 1313/1609 tested (1127 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 32m, remaining: ~34m) 1314/1609 tested (1128 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 33m, remaining: ~34m) 1316/1609 tested (1130 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 33m, remaining: ~33m) 1317/1609 tested (1131 survived, 72 timed out)
Mutation testing 81% (elapsed: ~2h 33m, remaining: ~33m) 1319/1609 tested (1133 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 33m, remaining: ~33m) 1320/1609 tested (1134 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 33m, remaining: ~33m) 1322/1609 tested (1136 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 33m, remaining: ~33m) 1323/1609 tested (1137 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 34m, remaining: ~33m) 1325/1609 tested (1139 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 34m, remaining: ~32m) 1326/1609 tested (1140 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 34m, remaining: ~32m) 1328/1609 tested (1142 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 34m, remaining: ~32m) 1329/1609 tested (1143 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 34m, remaining: ~32m) 1331/1609 tested (1145 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 34m, remaining: ~32m) 1332/1609 tested (1146 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 35m, remaining: ~31m) 1334/1609 tested (1148 survived, 72 timed out)
Mutation testing 82% (elapsed: ~2h 35m, remaining: ~31m) 1335/1609 tested (1149 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 35m, remaining: ~31m) 1337/1609 tested (1151 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 35m, remaining: ~31m) 1338/1609 tested (1152 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 35m, remaining: ~31m) 1340/1609 tested (1154 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 35m, remaining: ~31m) 1341/1609 tested (1155 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 36m, remaining: ~30m) 1343/1609 tested (1157 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 36m, remaining: ~30m) 1344/1609 tested (1158 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 36m, remaining: ~30m) 1346/1609 tested (1160 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 36m, remaining: ~30m) 1347/1609 tested (1161 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 36m, remaining: ~30m) 1348/1609 tested (1162 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 36m, remaining: ~30m) 1350/1609 tested (1164 survived, 72 timed out)
Mutation testing 83% (elapsed: ~2h 37m, remaining: ~29m) 1351/1609 tested (1165 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 37m, remaining: ~29m) 1353/1609 tested (1167 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 37m, remaining: ~29m) 1354/1609 tested (1168 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 37m, remaining: ~29m) 1356/1609 tested (1170 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 37m, remaining: ~29m) 1357/1609 tested (1171 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 37m, remaining: ~29m) 1359/1609 tested (1173 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 38m, remaining: ~28m) 1360/1609 tested (1174 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 38m, remaining: ~28m) 1362/1609 tested (1176 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 38m, remaining: ~28m) 1363/1609 tested (1177 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 38m, remaining: ~28m) 1365/1609 tested (1179 survived, 72 timed out)
Mutation testing 84% (elapsed: ~2h 38m, remaining: ~28m) 1366/1609 tested (1180 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 38m, remaining: ~27m) 1368/1609 tested (1182 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 39m, remaining: ~27m) 1369/1609 tested (1183 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 39m, remaining: ~27m) 1371/1609 tested (1185 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 39m, remaining: ~27m) 1372/1609 tested (1186 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 39m, remaining: ~27m) 1374/1609 tested (1188 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 39m, remaining: ~27m) 1375/1609 tested (1189 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 39m, remaining: ~26m) 1377/1609 tested (1191 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 40m, remaining: ~26m) 1378/1609 tested (1192 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 40m, remaining: ~26m) 1379/1609 tested (1193 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 40m, remaining: ~26m) 1381/1609 tested (1195 survived, 72 timed out)
Mutation testing 85% (elapsed: ~2h 40m, remaining: ~26m) 1382/1609 tested (1196 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 40m, remaining: ~26m) 1384/1609 tested (1198 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 40m, remaining: ~26m) 1385/1609 tested (1199 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 41m, remaining: ~25m) 1387/1609 tested (1201 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 41m, remaining: ~25m) 1388/1609 tested (1202 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 41m, remaining: ~25m) 1390/1609 tested (1204 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 41m, remaining: ~25m) 1391/1609 tested (1205 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 41m, remaining: ~25m) 1393/1609 tested (1207 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 41m, remaining: ~24m) 1394/1609 tested (1208 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 42m, remaining: ~24m) 1396/1609 tested (1210 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 42m, remaining: ~24m) 1397/1609 tested (1211 survived, 72 timed out)
Mutation testing 86% (elapsed: ~2h 42m, remaining: ~24m) 1399/1609 tested (1213 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 42m, remaining: ~24m) 1400/1609 tested (1214 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 42m, remaining: ~24m) 1402/1609 tested (1216 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 42m, remaining: ~23m) 1403/1609 tested (1217 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 43m, remaining: ~23m) 1405/1609 tested (1219 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 43m, remaining: ~23m) 1406/1609 tested (1220 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 43m, remaining: ~23m) 1407/1609 tested (1221 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 43m, remaining: ~23m) 1409/1609 tested (1223 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 43m, remaining: ~23m) 1410/1609 tested (1224 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 43m, remaining: ~22m) 1412/1609 tested (1226 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 44m, remaining: ~22m) 1413/1609 tested (1227 survived, 72 timed out)
Mutation testing 87% (elapsed: ~2h 44m, remaining: ~22m) 1415/1609 tested (1229 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 44m, remaining: ~22m) 1416/1609 tested (1230 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 44m, remaining: ~22m) 1418/1609 tested (1232 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 44m, remaining: ~22m) 1419/1609 tested (1233 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 44m, remaining: ~21m) 1421/1609 tested (1235 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 45m, remaining: ~21m) 1422/1609 tested (1236 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 45m, remaining: ~21m) 1424/1609 tested (1238 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 45m, remaining: ~21m) 1425/1609 tested (1239 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 45m, remaining: ~21m) 1427/1609 tested (1241 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 45m, remaining: ~20m) 1428/1609 tested (1242 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 45m, remaining: ~20m) 1430/1609 tested (1244 survived, 72 timed out)
Mutation testing 88% (elapsed: ~2h 46m, remaining: ~20m) 1431/1609 tested (1245 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 46m, remaining: ~20m) 1433/1609 tested (1247 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 46m, remaining: ~20m) 1434/1609 tested (1248 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 46m, remaining: ~20m) 1436/1609 tested (1250 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 46m, remaining: ~19m) 1437/1609 tested (1251 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 46m, remaining: ~19m) 1439/1609 tested (1253 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 47m, remaining: ~19m) 1440/1609 tested (1254 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 47m, remaining: ~19m) 1442/1609 tested (1256 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 47m, remaining: ~19m) 1443/1609 tested (1257 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 47m, remaining: ~19m) 1444/1609 tested (1258 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 47m, remaining: ~18m) 1446/1609 tested (1260 survived, 72 timed out)
Mutation testing 89% (elapsed: ~2h 47m, remaining: ~18m) 1447/1609 tested (1261 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 48m, remaining: ~18m) 1449/1609 tested (1263 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 48m, remaining: ~18m) 1450/1609 tested (1264 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 48m, remaining: ~18m) 1452/1609 tested (1266 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 48m, remaining: ~18m) 1453/1609 tested (1267 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 48m, remaining: ~17m) 1455/1609 tested (1269 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 48m, remaining: ~17m) 1456/1609 tested (1270 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 49m, remaining: ~17m) 1458/1609 tested (1272 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 49m, remaining: ~17m) 1459/1609 tested (1273 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 49m, remaining: ~17m) 1461/1609 tested (1275 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 49m, remaining: ~17m) 1462/1609 tested (1276 survived, 72 timed out)
Mutation testing 90% (elapsed: ~2h 49m, remaining: ~16m) 1464/1609 tested (1278 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 49m, remaining: ~16m) 1465/1609 tested (1279 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 50m, remaining: ~16m) 1467/1609 tested (1281 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 50m, remaining: ~16m) 1468/1609 tested (1282 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 50m, remaining: ~16m) 1469/1609 tested (1283 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 50m, remaining: ~15m) 1471/1609 tested (1285 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 50m, remaining: ~15m) 1472/1609 tested (1286 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 50m, remaining: ~15m) 1474/1609 tested (1288 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 51m, remaining: ~15m) 1475/1609 tested (1289 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 51m, remaining: ~15m) 1477/1609 tested (1291 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 51m, remaining: ~15m) 1478/1609 tested (1292 survived, 72 timed out)
Mutation testing 91% (elapsed: ~2h 51m, remaining: ~14m) 1480/1609 tested (1294 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 51m, remaining: ~14m) 1481/1609 tested (1295 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 51m, remaining: ~14m) 1483/1609 tested (1297 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 52m, remaining: ~14m) 1484/1609 tested (1298 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 52m, remaining: ~14m) 1486/1609 tested (1300 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 52m, remaining: ~14m) 1487/1609 tested (1301 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 52m, remaining: ~13m) 1489/1609 tested (1303 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 52m, remaining: ~13m) 1490/1609 tested (1304 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 52m, remaining: ~13m) 1492/1609 tested (1306 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 53m, remaining: ~13m) 1493/1609 tested (1307 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 53m, remaining: ~13m) 1495/1609 tested (1309 survived, 72 timed out)
Mutation testing 92% (elapsed: ~2h 53m, remaining: ~13m) 1496/1609 tested (1310 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 53m, remaining: ~12m) 1497/1609 tested (1311 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 53m, remaining: ~12m) 1499/1609 tested (1313 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 53m, remaining: ~12m) 1500/1609 tested (1314 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 54m, remaining: ~12m) 1502/1609 tested (1316 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 54m, remaining: ~12m) 1503/1609 tested (1317 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 54m, remaining: ~12m) 1505/1609 tested (1319 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 54m, remaining: ~11m) 1506/1609 tested (1320 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 54m, remaining: ~11m) 1508/1609 tested (1322 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 54m, remaining: ~11m) 1509/1609 tested (1323 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 55m, remaining: ~11m) 1511/1609 tested (1325 survived, 72 timed out)
Mutation testing 93% (elapsed: ~2h 55m, remaining: ~11m) 1512/1609 tested (1326 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 55m, remaining: ~11m) 1514/1609 tested (1328 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 55m, remaining: ~10m) 1515/1609 tested (1329 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 55m, remaining: ~10m) 1517/1609 tested (1331 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 55m, remaining: ~10m) 1518/1609 tested (1332 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 56m, remaining: ~10m) 1520/1609 tested (1334 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 56m, remaining: ~10m) 1521/1609 tested (1335 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 56m, remaining: ~9m) 1523/1609 tested (1337 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 56m, remaining: ~9m) 1524/1609 tested (1338 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 56m, remaining: ~9m) 1526/1609 tested (1340 survived, 72 timed out)
Mutation testing 94% (elapsed: ~2h 56m, remaining: ~9m) 1527/1609 tested (1341 survived, 72 timed out)
Mutation testing 95% (elapsed: ~2h 57m, remaining: ~9m) 1529/1609 tested (1343 survived, 72 timed out)
Mutation testing 95% (elapsed: ~2h 57m, remaining: ~9m) 1530/1609 tested (1344 survived, 72 timed out)
Mutation testing 95% (elapsed: ~2h 57m, remaining: ~8m) 1532/1609 tested (1346 survived, 72 timed out)
Mutation testing 95% (elapsed: ~2h 57m, remaining: ~8m) 1533/1609 tested (1347 survived, 72 timed out)
Mutation testing 95% (elapsed: ~2h 57m, remaining: ~8m) 1534/1609 tested (1348 survived, 72 timed out)
Mutation testing 95% (elapsed: ~2h 57m, remaining: ~8m) 1536/1609 tested (1350 survived, 72 timed out)
Mutation testing 95% (elapsed: ~2h 58m, remaining: ~8m) 1537/1609 tested (1351 survived, 72 timed out)
Mutation testing 95% (elapsed: ~2h 58m, remaining: ~8m) 1539/1609 tested (1353 survived, 72 timed out)
Mutation testing 95% (elapsed: ~2h 58m, remaining: ~7m) 1540/1609 tested (1354 survived, 72 timed out)
Mutation testing 95% (elapsed: ~2h 58m, remaining: ~7m) 1542/1609 tested (1356 survived, 72 timed out)
Mutation testing 95% (elapsed: ~2h 58m, remaining: ~7m) 1543/1609 tested (1357 survived, 72 timed out)
Mutation testing 96% (elapsed: ~2h 58m, remaining: ~7m) 1545/1609 tested (1359 survived, 72 timed out)
Mutation testing 96% (elapsed: ~2h 59m, remaining: ~7m) 1546/1609 tested (1360 survived, 72 timed out)
Mutation testing 96% (elapsed: ~2h 59m, remaining: ~7m) 1548/1609 tested (1362 survived, 72 timed out)
Mutation testing 96% (elapsed: ~2h 59m, remaining: ~6m) 1549/1609 tested (1363 survived, 72 timed out)
Mutation testing 96% (elapsed: ~2h 59m, remaining: ~6m) 1551/1609 tested (1365 survived, 72 timed out)
Mutation testing 96% (elapsed: ~2h 59m, remaining: ~6m) 1552/1609 tested (1366 survived, 72 timed out)
Mutation testing 96% (elapsed: ~2h 59m, remaining: ~6m) 1554/1609 tested (1368 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 0m, remaining: ~6m) 1555/1609 tested (1369 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 0m, remaining: ~6m) 1557/1609 tested (1371 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 0m, remaining: ~5m) 1558/1609 tested (1372 survived, 72 timed out)
Mutation testing 96% (elapsed: ~3h 0m, remaining: ~5m) 1560/1609 tested (1374 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 0m, remaining: ~5m) 1561/1609 tested (1375 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 0m, remaining: ~5m) 1563/1609 tested (1377 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 1m, remaining: ~5m) 1564/1609 tested (1378 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 1m, remaining: ~5m) 1565/1609 tested (1379 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 1m, remaining: ~4m) 1567/1609 tested (1381 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 1m, remaining: ~4m) 1568/1609 tested (1382 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 1m, remaining: ~4m) 1570/1609 tested (1384 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 1m, remaining: ~4m) 1571/1609 tested (1385 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 2m, remaining: ~4m) 1573/1609 tested (1387 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 2m, remaining: ~4m) 1574/1609 tested (1388 survived, 72 timed out)
Mutation testing 97% (elapsed: ~3h 2m, remaining: ~3m) 1576/1609 tested (1390 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 2m, remaining: ~3m) 1577/1609 tested (1391 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 2m, remaining: ~3m) 1579/1609 tested (1393 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 2m, remaining: ~3m) 1580/1609 tested (1394 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 3m, remaining: ~3m) 1582/1609 tested (1396 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 3m, remaining: ~3m) 1583/1609 tested (1397 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 3m, remaining: ~2m) 1585/1609 tested (1399 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 3m, remaining: ~2m) 1586/1609 tested (1400 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 3m, remaining: ~2m) 1588/1609 tested (1402 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 3m, remaining: ~2m) 1589/1609 tested (1403 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 4m, remaining: ~2m) 1591/1609 tested (1405 survived, 72 timed out)
Mutation testing 98% (elapsed: ~3h 4m, remaining: ~1m) 1592/1609 tested (1406 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 4m, remaining: ~1m) 1594/1609 tested (1408 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 4m, remaining: ~1m) 1595/1609 tested (1409 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 4m, remaining: ~1m) 1597/1609 tested (1411 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 4m, remaining: ~1m) 1598/1609 tested (1412 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 5m, remaining: ~1m) 1599/1609 tested (1413 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 5m, remaining: <1m) 1601/1609 tested (1415 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 5m, remaining: <1m) 1602/1609 tested (1416 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 5m, remaining: <1m) 1604/1609 tested (1418 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 5m, remaining: <1m) 1605/1609 tested (1419 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 5m, remaining: <1m) 1607/1609 tested (1421 survived, 72 timed out)
Mutation testing 99% (elapsed: ~3h 6m, remaining: <1m) 1608/1609 tested (1422 survived, 72 timed out)

All tests
  ✓ All tests (killed 114)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (false) {

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (1 === 0) {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promisf", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {});

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", true);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           null("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(null, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(42, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap({}, definition);

[Survived] PrecomputedMutator
q.js:42:16
-       } else if (typeof exports === "object" && typeof module === "object") {
+       } else if (true) {

[Survived] PrecomputedMutator
q.js:42:16
-       } else if (typeof exports === "object" && typeof module === "object") {
+       } else if ("string") {

[Survived] PrecomputedMutator
q.js:42:16
-       } else if (typeof exports === "object" && typeof module === "object") {
+       } else if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (true) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (1) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (null) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (false) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (true) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!false()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!global.Q()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (false) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if ('undefined' === typeof window) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (Object.prototype.toString.call(window) === '[object global]') {

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = noop();

[Survived] PrecomputedMutator
q.js:115:16
-           while (head.next) {
+           while (head.next || null) {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   null();

[Survived] PrecomputedMutator
q.js:125:23
-               runSingle(task, domain);
+               runSingle(() => task(), domain);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (0) {

[Survived] PrecomputedMutator
q.js:130:23
-               runSingle(task);
+               runSingle(noop);

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (0) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (true) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (null) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       global.Q.exit();

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       null();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(requestAnimationFrame(flush));

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   0(flush, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(Promise.resolve().then(flush), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, '1');

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, nextTick);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (false) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (null) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if ({}) {

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               null();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (1 < 2) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (false) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (1 > 0) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "undefined" ? false : true) {

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(function () {
+     return flush();
+   }, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind({}, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(function () {});

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (false) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (0) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if ('undefined') {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               null(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage('some string');

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(this);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(null);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(function () {/* do nothing */});

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               undefined(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               alert(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(function () {}, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(1 + 1, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush.bind(this), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (this.length > 0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (index < this.length - 1) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (null);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (array_indexOf(value, this));

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (true) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index < this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (0 in this) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index > length) {

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index > length; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index == length; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index + 1) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = index + 1) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (this.hasOwnProperty(index)) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index < this.length) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(null);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback + 1(basis, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, 0, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this.length, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], null);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], 42);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], this);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i !== this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; Math.random()) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; array_indexOf(value, this)) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (i === value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               null(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               1(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback(value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(null, [value, index, self]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(self, index, value, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(42, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(function () {}, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, 42, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, this, index, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, 5));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, function () {}));

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in Object.prototype) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object.hasOwnProperty(key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (Array.prototype.hasOwnProperty.call(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(this)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(window)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(Math)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (null(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (Array.isArray(object, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, "toString")) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, null)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, 1)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(null);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(42);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           '[object Object]'(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           1(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(null) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString({}) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString([]) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof globalThis.ReturnValue !== "undefined") {

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof someUndefinedVariable !== "undefined") {

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (promise.stack && typeof error === "object" && error !== null && error.stack && hasStacks

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p ? 1 : 0; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p.source; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p instanceof Error; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; null) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; 1) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p.length) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ < p.stackCounter) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(null);

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty({});

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   Object.defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(null, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty([], "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(function () {}, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, this.__minimumStackCounter__, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, Math.random(), {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, new Date().getTime(), {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: 42,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.source.stackCounter,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift("error.stackTrace");

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(1234);

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.concat.join("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join(" From previous event:\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join(STACK_JUMP_SEPARATOR + "\t");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + "New Separator" + "\n");

[Survived] PrecomputedMutator
q.js:397:21
-           var stack = filterStackString(concatedStacks);
+           var stack = "<PLACEHOLDER>"(concatedStacks);

[Survived] PrecomputedMutator
q.js:397:21
-           var stack = filterStackString(concatedStacks);
+           var stack = [](concatedStacks);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(error.stack.toString());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(promise.stack);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(stacks.join("\n"));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(null);

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, error.stack.toString(), {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(";\n");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\n" + String.fromCharCode(0));

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > -1; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i in lines; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i + 1) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; Math.random()) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (line.indexOf('node') === -1) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!typeof isInternalFrame !== 'function'(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(isInternalFrame(line + 'x')) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !typeof isNodeFrame !== 'function'(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !false(line) && line) {

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push("<PLACEHOLDER>");

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(Math.random());

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(new Error());

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("<br>");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.lastIndexOf("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.search("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec("1: " + stackLine);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.toUpperCase());

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(global.stackLine);

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (null) {

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (0) {

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if ('') {

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], value.length(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(value.length)];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(this.value)];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[2])];

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2 || []) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2 || null) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(Infinity)];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(1 / 0)];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(new Date())];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec("[object GlobalError]");

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(/.*@(.+):(\d+)$/g);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec("anonymous function");

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (/.*@(.+):(\d+)$/.exec(stackLine)[0]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (/.*@(.+):(\d+)$/.exec(null)) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (/.*@(.+):(\d+)$/.exec("some string")) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "0"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], true(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(1)];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number('PLACEHOLDER')];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(Math.random())];

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (typeof fileNameAndLineNumber === 'undefined') {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber.length < 2) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (typeof hasStacks === "undefined") {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks === null) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\n<script>console.log('This is an injected script');</script>\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\n<!-- This is an injected comment -->\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\n" + Math.random() + "\n");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = "PLACEHOLDER".indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (typeof fileNameAndLineNumber === 'undefined') {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (true) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (1 < 2) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof window !== "undefined" && typeof window.console === "object" && typeof window.console.warn === "function") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, 42);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, reflect.apply(callback, arguments));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.bind(null, 1), arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (Object.prototype.toString.call(value) === '[object Promise]') {

[Survived] PrecomputedMutator
q.js:506:9
-       if (isPromiseAlike(value)) {
+       if (value && isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:506:24
-       if (isPromiseAlike(value)) {
+       if (isPromiseAlike(value || true)) {

[Survived] PrecomputedMutator
q.js:507:23
-           return coerce(value);
+           return coerce(value || true);

[Survived] PrecomputedMutator
q.js:507:23
-           return coerce(value);
+           return coerce(value ? value : 42);

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create({});

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(null);

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(Object.create(Promise.prototype));

[Survived] PrecomputedMutator
q.js:562:32
-           var args = array_slice(arguments);
+           var args = array_slice([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:562:32
-           var args = array_slice(arguments);
+           var args = array_slice(Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:562:32
-           var args = array_slice(arguments);
+           var args = array_slice([...arguments]);

[Survived] PrecomputedMutator
q.js:563:13
-           if (messages) {
+           if (typeof messages !== 'undefined') {

[Survived] PrecomputedMutator
q.js:564:27
-               messages.push(args);
+               messages.push(arguments);

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && "someString") { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "then") { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (operands[0]) { // progress operand

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(1);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(null);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(messages[0][1]);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(null);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(true);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(messages);

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue instanceof Promise) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (false(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (null(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (messages.length(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(true)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(null)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (this.inspect() === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:604:29
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.message(e.stack.indexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.split("\n").length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.search("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(e.stack.substring(e.stack.indexOf("\n") + 2)) + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (1) {

[Survived] PrecomputedMutator
q.js:638:16
-           become(Q(value));
+           become(new Q(value));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(new Promise(resolve => resolve(value)));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(this));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(new Error('Replacement error')));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   null(progress);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(null);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener({});

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress + 1);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (Q.resolve()) {

[Survived] PrecomputedMutator
q.js:679:13
-               self.reject(error);
+               self.resolve(error);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(null);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(42);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(new Error('User-defined error'));

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (false) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (true) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments[0] === undefined) {

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve([1]);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(function () {});

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(Array.prototype.slice.call(arguments, 0)));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(arguments.callee.caller(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice([1, 2, 3], 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice({
+     value: 'foo'
+   }, 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, arguments.length > 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, Q.resolve(array_slice(arguments))));

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(new Error('Replacement error'));

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (Object.prototype.toString.call(resolver) !== "[object Function]") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== typeof Function) {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = null();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver([deferred.resolve, deferred.reject, deferred.notify][Math.floor(Math.random() * 3)]);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve.bind(deferred)());

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           [](deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           null(deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           0(deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve(null), deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, function () {
+     throw new Error('Buggy replacement');
+   }, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(new Error('Buggy Reason'));

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(Q.reject('Buggy Reason'));

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Promise(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return null(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(0).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(null).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(null);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(this);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join([]);

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([[this, that]]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([null, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x == y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x.valueOf() === y.valueOf()) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (Object.is(x, y)) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > -1; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; Q.resolve()) {

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(null).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] || {}).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[Math.floor(Math.random() * answerPs.length)]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(deferred.resolve, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, function () {});

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return this['then'](Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return this.constructor.prototype.then(Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(function () {
+     return Q();
+   });

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== undefined) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (typeof inspect !== "undefined") {

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call([]);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(function () {});

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.apply(promise, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "notAnOp", args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, 123, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, promise, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, []);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, null);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, {
+     then: function () {}
+   });

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("Buggy error message"));

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject({});

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.reason) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled" || inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "settled") {

[Survived] PrecomputedMutator
q.js:854:54
-               return typeof fulfilled === "function" ? fulfilled(value) : value;
+               return typeof fulfilled === "function" ? fulfilled || 0(value) : value;

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(new Error("New error message"), self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong({}, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(Q.reject("Rejection message"), self);

[Survived] PrecomputedMutator
q.js:866:24
-                   return reject(newException);
+                   return Q.reject(newException);

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(0) : value;

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(2 * value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(promise.value);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (() => {}) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (console.log) {

[Survived] PrecomputedMutator
q.js:903:17
-                   Q.onerror(e);
+                   console.error(e);

[Survived] PrecomputedMutator
q.js:903:17
-                   Q.onerror(e);
+                   null(e);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(new Error());

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw === false) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.resolve(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue + 1);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(Q(newValue));

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Promise.resolve()).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Q.reject(new Error('Replacement error'))).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Q.defer().promise).tap(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(() => callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.bind(this));

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall([]).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(callback.fcall(null)).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(callback.fcall(value).then(() => value)).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(Promise.resolve());

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(null).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value + 1).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(this.value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(() => fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(Math.max, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(deferred.resolve, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function () {
+     return rejected.apply(this, arguments);
+   }, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, Q.reject, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function () {
+     return progressed.apply(this, arguments);
+   });

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed.bind(null));

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, Math.max);

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return this.catch(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     throw value;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function (value) {
+     return value * 2;
+   });

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Promise.resolve(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.reject(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Promise.resolve()).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(new Promise(function () {})).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Q.reject('An error')).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(() => {/* do nothing */});

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(() => {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(() => {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Promise.reject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Promise.resolve()).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.reject(reason)).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(new Error('Replacement error'));

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(reason.message);

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value instanceof Promise) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (Object.prototype.toString.call(value) === '[object Promise]') {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value.constructor.name === 'Promise') {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value && value.then(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(null)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value.then(function () {
+     return value;
+   }))) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.value !== undefined) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.hasOwnProperty("value")) {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return typeof value === 'object' && value !== null && typeof value.then === 'function'(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return value instanceof Promise || value.constructor.name === 'Promise'(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(false) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(null) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(new Proxy({}, {
+     get: function () {
+       throw new Error('Unauthorized access');
+     }
+   })) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && global.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return {}().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.then().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(true) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(null) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(this) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:34
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object) || null.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return false(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return null(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(false) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(null) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(this) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && false().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && null().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (0) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (null) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (null) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.some(p => p === promise)) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf([], promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.slice(), promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, null) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, new Function()) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledrejection", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledException", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", null, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", {}, promise);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, {});

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, this);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push({});

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(unhandledReasons);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push({});

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack) {

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push("reason stack");

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(null);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason['stack']);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.unshift("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           console.error("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push("<an error occurred>");

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(new Error().stack);

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (0) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, 'constant');

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, function () {});

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf({
+     promise: []
+   }, promise);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, 123);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, {});

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (unhandledRejections.indexOf(promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (typeof at !== "number") {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([]);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, false);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (true) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", "some random string", promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[Math.floor(Math.random() * unhandledReasons.length)], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit(false, unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit(null, unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit(unhandledReasons[at], unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", null, promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", {}, promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], null);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], {});

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(0);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.length--(atReport, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length, 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(unhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons.slice(at));

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons.length, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(Math.floor(Math.random() * unhandledReasons.length), 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons.pop(), 1);

[Survived] PrecomputedMutator
q.js:1118:12
-       return unhandledReasons.slice();
+       return unhandledReasons.concat();

[Survived] PrecomputedMutator
q.js:1118:12
-       return unhandledReasons.slice();
+       return unhandledReasons.push();

[Survived] PrecomputedMutator
q.js:1118:12
-       return unhandledReasons.slice();
+       return unhandledReasons.forEach();

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (0) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (untrackRejection.bind(this)) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection([]);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === null || name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === null || typeof name === 'undefined') {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name == null) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(thisp, [args]);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return Reflect.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(5, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, {
+     length: 0
+   });

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(null);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply([]);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply({});

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value.apply(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return Function.prototype.apply(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return Math.max(value, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(thisp, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(Math.random(), args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, []);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, null);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, {
+     length: 0
+   });

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(null);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(123);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(window);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply([], args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.keys(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.prototype.keys(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys({});

[Survived] PrecomputedMutator
q.js:1204:13
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise['then'](deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(new Error('Buggy code fragment'));

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(this);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return null(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch([], op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(function () {}, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op + 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, "op", args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, Math.random(), args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, null);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return null();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(null).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q([]).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q({
+     then: function () {}
+   }).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(function () {
+     throw new Error('Buggy replacement');
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(this, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, function () {});

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, this);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.call(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply('', array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(true, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, this);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, Object.keys(value));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (generator.constructor.name === "GeneratorFunction") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (generator.constructor.prototype.constructor.name === "GeneratorFunction") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (generator.constructor.toString().indexOf("GeneratorFunction") > -1) {

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generator.verb(arg);

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generator['verb'](arg);

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generator[verbs[verb]](arg);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](1);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return Promise.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(new Error('Buggy error'));

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(null);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (Object.prototype.toString.call(result.value) === "[object Promise]") {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value && result.value.constructor.name === "Promise") {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(null);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value + 1);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.otherValue, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, function () {
+     return callback;
+   }, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback.bind(this), errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, function () {});

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, 5);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = generator.verb(arg);

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = generator["" + verb](arg);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](123);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](function () {});

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.message === "Generator completed") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (true) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception instanceof Error) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if ({}(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(new Error('generator error'))) {

[Survived] PrecomputedMutator
q.js:1314:32
-                           return Q(exception.value);
+                           return null(exception.value);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(null);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(new Error('Generator Error'));

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject({});

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(null);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when([]);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(null);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Promise.resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when([], callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when({}, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, callback.bind(this), errback);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = Function.prototype.apply.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(window, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(() => this, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, Array.from(arguments));

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, [...arguments]);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, Object.assign([], arguments));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "then");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(this, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(window, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(function () {
+     return continuer;
+   }, "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "next".toUpperCase());

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, 1);

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "throw", undefined);

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "someInvalidOperation");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = null(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = Object.prototype.hasOwnProperty.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(function () {}, "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(this, "next"), "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, function () {
+     throw new Error("Replacement error");
+   });

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "inflate");

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Promise.resolve(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Math.random(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done([](makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(function* () {})());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(42)());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, null(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, 'not an array'(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(1)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(this);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(null);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply([]);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return Reflect.apply(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(this, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(global, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, []);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, this);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, 42);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(null, null);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Object.dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(this).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(Promise.resolve()).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(null, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, []);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, {
+     foo: 'bar'
+   });

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.promise(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           Math.random(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.promise, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, null, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, {
+     length: 0
+   });

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return null(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return {}(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q([]).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(123).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("GET", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch(Symbol("get"), [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch(() => "get", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", null);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", {});

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", function () {/* empty function */});

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("GET", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", []);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", {
+     key: 'value'
+   });

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.promiseDispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("GET", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch(Symbol("get"), [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch(() => "get", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", []);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", {});

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", this);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch([]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("nonexistentMethod");

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch([key, Q(value)]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Object.prototype.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Math.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", {});

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", null);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch([]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(this);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(Math.random());

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("__set__", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(null, [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(this.del, [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", []);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", this);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", null);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch(["remove", key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return null(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return 5(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(null).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q([]).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(function () {}).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", []);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", {});

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", null);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch(["remove", key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return deferred.resolveThrown("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return deferred.promise("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch(null, [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch({}, [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch(function () {}, [key]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("Post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Object.dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return deferred.dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return null(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.when(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q([]).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(function () {}).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("POST", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch(symbol("post"), [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", []);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", null);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", this);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, eval(args)]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [window[name], args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("POST", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch(null, [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", []);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", null);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", this);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, arguments]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, 123]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("anotherMethod", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return {}['dispatch'](object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(true).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("POST", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, Array.prototype.slice.call(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([name])]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([])]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, null(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([], 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(null, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(function () {
+     return 42;
+   }, 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, null)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("POST", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, 123]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("POST", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", null);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", []);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", this);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([])]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(this)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(function () {})]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, arguments.length)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [1, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("spread", [args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.prototype.dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q('string').dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", args);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", null, args);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("spy", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", args);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Object.prototype.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Math.random("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.all("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return {}(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(5).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(() => {}).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apPLY", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("applyFn", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch(this.apply, [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", null, arguments);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(Array.prototype.slice.call(arguments))]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, [1, 2, 3](arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(Array.prototype.slice.call(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([].slice.call(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments.slice(1), 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("spy", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [null, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apPLY", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", []);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", arguments);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", this);

[Survived] PrecomputedMutator
q.js:1527:44
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, Array.prototype.slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(1)]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(5);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(window);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(Array.prototype.slice.call(arguments, 2));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 2));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments.slice(2));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(Array.prototype.slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments.slice(1), 1);

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               [].concat(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args.slice(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat([])

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(null)

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat([1, 2, 3])

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments.callee(arguments))

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = arguments(arguments);

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = [].slice(arguments);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice([]);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice({
+     length: 0
+   });

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               [](array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat([])

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(this.arguments)

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments[0])

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments.callee(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(null(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(eval(arguments))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(globalArguments))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return null(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return {}(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(null).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q({}).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(['key']).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("nonexistentKey", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", Object.keys(this));

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", function () {
+     return 42;
+   });

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("nonexistentMethod", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("nonexistentKey", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", Object.keys(this));

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   snapshot.state === "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   isPromise(promise) && (snapshot = promise.inspect()).state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   snapshot.state !== "fulfilled"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   typeof promise === 'object'(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   promise instanceof Object(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   true(promise) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(Promise.resolve()) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(null) &&

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice());

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify(null);

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     progress: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify(this);

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(null);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all([]);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (Object.prototype.toString.call(promises) === '[object Array]') {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.constructor.name === 'Array') {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (Array.isArray(promises)) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Promise.resolve();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           Promise.resolve(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           this(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           Q.when(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(null, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(Promise.resolve(), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(this, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled.bind(null, null), onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, function () {}, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, this, onProgress);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promises[index]);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(this);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (true) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(new Error("This is a buggy error"));

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any([]);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Q.resolve());

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", Q.reject("Placeholder error"));

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(function allResolvedBad(promises) {
+     return Q(promises).allSettled();
+   }, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, function allResolved(promises) {
+     return Q(promises).all();
+   }, "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, function allResolved(promises) {
+     return Q(promises).all().then(function (results) {
+       return Q.resolve(results.map(function (result) {
+         return {
+           state: result.state,
+           value: result.value
+         };
+       }));
+     });
+   }, "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Array);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.when);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.all);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(Object.values(promises), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.filter(x => x), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Promise.resolve());

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject(new Error('Placeholder error')));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(new Promise(resolve => resolve(null)));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(Promise.resolve(), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(null, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(function () {}, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function () {
+     throw new Error('Buggy replacement');
+   });

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, null);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, promises[index]);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return Q.all(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved([]);

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q([]).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(Object.values(promises)).allSettled();

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promises[index]);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(Q.resolve(promise));

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.always();

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(null, null);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function regardless() {
+     return {};
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function regardless() {
+     return Q.resolve();
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function regardless() {
+     return Q.reject(new Error('Artificial rejection'));
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function () {
+     return {};
+   });

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function () {
+     throw new Error('Buggy!');
+   });

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(null).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(true).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(Q.reject("An error occurred")).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(function () {}, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(promises, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function () {
+     throw rejected;
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, Q.reject(rejected));

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, Promise.reject(rejected));

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(function () {});

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(this);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(42);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.catch(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(42, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(function () {
+     return 42;
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, Promise.resolve());

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(true, true, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(this, this, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(deferred.reject, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, 1, progressed);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, function () {});

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, 42);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, function () {}, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, deferred.resolve, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, function () {});

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, "string");

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q([])["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Promise.resolve())["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](function () {
+     return callback;
+   });

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.bind(this));

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback === null || typeof callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback || typeof callback.call !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback || callback.constructor.name !== "Function") {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Promise(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = null(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = this(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(function () {
+     return callback;
+   });

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.bind(this));

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback());

[Survived] PrecomputedMutator
q.js:1782:16
-           return callback.fcall().then(function () {
+           return callback.fapply().then(function () {

[Survived] PrecomputedMutator
q.js:1787:16
-           return callback.fcall().then(function () {
+           return callback.apply().then(function () {

[Survived] PrecomputedMutator
q.js:1787:16
-           return callback.fcall().then(function () {
+           return Math.random().then(function () {

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(Promise.resolve()).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(function () {
+     return "I'm not a promise";
+   }).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(Promise.resolve(fulfilled), rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, Q.reject(new Error('Rejected explicitly')), progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, null, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, function () {
+     throw new Error('Rejected explicitly');
+   }, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, Q.progress);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, Q(promise));

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise, deferred.reject);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(new Error(), promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, null);

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (function () {
+     throw new Error('Handled error');
+   }) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (function () {}) {

[Survived] PrecomputedMutator
q.js:1810:17
-                   Q.onerror(error);
+                   null(error);

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(new Error("Timed out after " + (ms || 0) + " ms"));

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror({});

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.fcall(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.spread(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.nodeify(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(function () {}, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(42, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, true, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, {}, progress) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(function () {
+     throw new Error("Unhandled error");
+   });

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(Q.onerror);

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(function () {
+     throw new Error("Unhandled error");
+   }.bind(this));

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(42, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(function () {
+     return true;
+   }, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(this.ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(Math.random() * 1000, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Timed out after " + (ms - 10) + " ms"));

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, {});

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, function () {
+     throw new Error("An error occurred");
+   });

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (1 === 1) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(new Error("Timed out after " + (ms - 10) + " ms"));

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject({});

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(function () {
+     throw new Error("An error occurred");
+   });

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           deferred.reject(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(deferred);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(new Error('Replaced value'));

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(this);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           deferred.reject(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(deferred);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.promise(exception);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(new Error("An error occurred"));

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (typeof timeout === "undefined") {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === Q.timeout.NONE) {

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(true).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q([]).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(2 * timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout - 100);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout || 100);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return callback.nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return callback.bind(this);
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return callback.call(this, 42);
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(123);

[Survived] PrecomputedMutator
q.js:1904:20
-       var deferred = defer();
+       var deferred = {}();

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = [].slice(args);

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {
+     throw new Error("Buggy node resolver");
+   });

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(this).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(function () {});

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.promise.resolve);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(Array.prototype.slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, Infinity);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, setInterval);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return null(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return callback;
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(callback.bind(null)).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(callback || function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(123);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = [].slice(arguments);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = Array.prototype.slice(arguments);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(this.arguments);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {
+     throw new Error("Buggy timeout");
+   });

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject("Buggy rejection"));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null());

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(this).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat(deferred.makeNodeResolver())).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback === 'function') {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback && typeof callback === 'function') {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(Array.prototype.slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([].slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(Object.keys(arguments), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(Reflect.apply(Array.prototype.slice, arguments, [1]), 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, Q.denodeify.length - 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, []);

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.unshift(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Function.prototype.apply.call([], arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([1, 2, 3](arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(null(arguments));

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           deferred.promise(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           deferred.reject(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           callback.apply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           this.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           this.thenApply(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           this.all(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback || function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(function () {});

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = [].slice(arguments);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = Math.floor(arguments);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice([].slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(Object.keys(arguments).map(function (key) {
+     return arguments[key];
+   }));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(Function.prototype.apply.call(Array.prototype.slice, arguments, 0));

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       this.constructor(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       null(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(window);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(Math);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(true, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(defer(), args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice());

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, [...args]);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(Function.prototype.apply.call(arguments, [1]));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([].concat.apply([], arguments));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = [].slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = Math.floor(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([].slice.call(arguments), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(Object.keys(arguments)[0], 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(Function.prototype.apply.call(arguments, [0].concat(Array.prototype.slice.call(arguments, 1))), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, function () {});

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.sort(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(null(arguments));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(deferred.resolve));

[Survived] PrecomputedMutator
q.js:1967:24
-           var deferred = defer();
+           var deferred = Promise.resolve();

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(function () {
+     throw new Error('Buggy node resolver');
+   });

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.reject);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.promise);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(global, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(window, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, thisp);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, [].slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           bound.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Function.prototype.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback.apply(thisp)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(() => deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.reject(null));

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = [].slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = null(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = Array.prototype.slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([].slice.call(arguments, 0), 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(Object.keys(arguments)[0], 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(Function.prototype.apply.call(null, this, arguments), 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, Infinity);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(global);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(123, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(function () {}, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, this);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(false);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(null);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(this);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.npost(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, []);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, null);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, {
+     foo: 'bar'
+   });

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = [].slice(args || []);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = null(args || []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(global.args || []);

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = Promise.resolve();

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = Q.resolve();

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push({});

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(this.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("Post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", name).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(function () {});

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(Array.prototype.slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = [].slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = null(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([].slice.call(arguments, 1), 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([].concat.apply([], arguments), 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([].slice.call(arguments), 2);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push({});

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {
+     return true;
+   });

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("called", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("Post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch(this.dispatch.bind(this, "post"), [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch(function () {
+     return this.dispatch("post");
+   }, [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", name).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([].slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(Array.prototype.slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([].slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(Object.keys(arguments)[1], 1);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       null(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("call", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, deferred.resolve]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", this.constructor.prototype.dispatch.call(this, "post", [name, nodeArgs])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(function () {});

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Promise(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return [](object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(this).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(function () {}).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(function () {
+     nodeback && nodeback(null, value);
+   });

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback || (value => Q.nextTick(() => nodeback(null, value))));

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   true(null, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   null(null, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(value, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(1, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, arguments[0]);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(new Error("Different error message"));

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(Q.when(null, function () {
+     throw error;
+   }));

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.reject();

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.then.get("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise['get']("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.head("head");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(null);

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(ends.promise);

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(ends.promise.then(function (val) {
+     return val.head;
+   }));

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.then.get("tail");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(null);

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(ends.promise);

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(Q.resolve());

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve({});

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(Q.resolve());

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: null(error)};

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: {}(error)};

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(new Error("Different error message"))};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(Q.reject(new Error("Can't get value from closed queue")))};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.notify(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.promise.resolve(end);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(null);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(Q.reject(new Error('Unexpected closure')));

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve({
+     head: Q.resolve(),
+     tail: Q.resolve()
+   });

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.56 |      114 |        72 |       1423 |        0 |        0 |
 q.js     |   11.75 |      114 |        72 |       1397 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         26 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m12:44:54 (3212) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m12:44:54 (3212) INFO MutationTestExecutor[39m Done in 186 minutes 12 seconds.

real	186m13.934s
user	32m34.972s
sys	5m35.934s
