*** using precomputed mutations ***
[32m23:26:48 (2552) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m23:26:48 (2552) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m23:26:49 (2552) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/countries-and-timezones/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m23:26:49 (2552) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m23:26:49 (2552) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m23:26:49 (2552) INFO ProjectReader[39m Found 3 of 481 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 215 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.25/mutants.json ***
Mutant 0 in build-country.js: !name replaced with !data.countries[id]
Mutant 1 in build-country.js: !name replaced with name === null
Mutant 2 in build-country.js: !name replaced with !tzMap.current
Mutant 3 in build-country.js: data replaced with null
Mutant 4 in build-country.js: data replaced with undefined
Mutant 5 in build-country.js: data replaced with {}
Mutant 6 in build-country.js: !timezonesMap replaced with timezonesMap === null
Mutant 7 in build-country.js: !timezonesMap replaced with timezonesMap.length === 0
Mutant 8 in build-country.js: !timezonesMap replaced with typeof timezonesMap === 'undefined'
Mutant 9 in build-country.js: data replaced with data.timezones[id]
Mutant 10 in build-country.js: data replaced with data.timezones[id].r
Mutant 11 in build-country.js: data replaced with data.timezones[id].c
Mutant 12 in build-country.js: data.timezones replaced with data.timezones.slice(0)
Mutant 13 in build-country.js: data.timezones replaced with data.timezones.filter(tz => tz.r !== undefined)
Mutant 14 in build-country.js: data.timezones replaced with data.timezones.map(tz => tz.r)
Mutant 15 in build-country.js: !countries replaced with countries.length === 0
Mutant 16 in build-country.js: !countries replaced with countries.includes(undefined)
Mutant 17 in build-country.js: !countries replaced with countries.some(country => country === undefined)
Mutant 18 in build-country.js: !result[country] replaced with result[country] === undefined
Mutant 19 in build-country.js: !result[country] replaced with result[country] !== undefined
Mutant 20 in build-country.js: Object.assign(result, {
  [country]: {
    current: [],
    all: []
  }
}) replaced with Object.assign(result, {
  [country]: {
    current: [id],
    all: []
  }
})
Mutant 21 in build-country.js: Object.assign(result, {
  [country]: {
    current: [],
    all: []
  }
}) replaced with Object.assign(result, {
  [country]: {
    current: [],
    all: [id]
  }
})
Mutant 22 in build-country.js: Object.assign(result, {
  [country]: {
    current: [],
    all: []
  }
}) replaced with Object.assign(result, {
  [country]: {
    current: [id],
    all: [id]
  }
})
Mutant 23 in build-country.js: {
  [country]: {
    current: [],
    all: []
  }
} replaced with {
  [country]: {
    current: [id],
    all: []
  }
}
Mutant 24 in build-country.js: {
  [country]: {
    current: [],
    all: []
  }
} replaced with {
  [country]: {
    current: [],
    all: [id]
  }
}
Mutant 25 in build-country.js: {
  [country]: {
    current: [],
    all: []
  }
} replaced with {
  [country]: {
    current: [id],
    all: [id]
  }
}
Mutant 26 in build-country.js: tz.r === undefined replaced with tz.r !== undefined
Mutant 27 in build-country.js: tz.r === undefined replaced with tz.r === null
Mutant 28 in build-country.js: tz.r === undefined replaced with tz.r === 'foo'
Mutant 29 in build-country.js: id replaced with tz.r
Mutant 30 in build-country.js: id replaced with tz.r || id
Mutant 31 in build-country.js: id replaced with tz.r && id
Mutant 32 in build-country.js: id replaced with tz.r
Mutant 33 in build-country.js: id replaced with tz.r + 1
Mutant 34 in build-country.js: id replaced with id + 1
Mutant 35 in build-timezone.js: !timezone replaced with timezone == null
Mutant 36 in build-timezone.js: !timezone replaced with timezone !== null
Mutant 37 in build-timezone.js: !timezone replaced with !timezone || timezone.length === 0
Mutant 38 in build-timezone.js: Number.isInteger replaced with Number.isFinite
Mutant 39 in build-timezone.js: Number.isInteger replaced with !Number.isInteger
Mutant 40 in build-timezone.js: Number.isInteger replaced with Number.isNaN
Mutant 41 in build-timezone.js: tz.d replaced with tz.d + 1
Mutant 42 in build-timezone.js: tz.d replaced with tz.d * 2
Mutant 43 in build-timezone.js: tz.d replaced with tz.d - 1
Mutant 44 in build-timezone.js: utcOffset replaced with utcOffset + 1
Mutant 45 in build-timezone.js: utcOffset replaced with dstOffset
Mutant 46 in build-timezone.js: utcOffset replaced with Math.abs(utcOffset)
Mutant 47 in build-timezone.js: dstOffset replaced with dstOffset + 1
Mutant 48 in build-timezone.js: dstOffset replaced with utcOffset
Mutant 49 in build-timezone.js: dstOffset replaced with Number.isInteger(utcOffset) ? utcOffset : dstOffset
Mutant 50 in build-timezone.js: timezone.r replaced with timezone.r && timezone.r.aliasOf
Mutant 51 in build-timezone.js: timezone.r replaced with timezone.r ? timezone.r.aliasOf : null
Mutant 52 in build-timezone.js: timezone.r replaced with timezone.r && timezone.r.aliasOf && timezone.r.aliasOf.length > 0
Mutant 53 in build-timezone.js: Math.floor replaced with Math.ceil
Mutant 54 in build-timezone.js: Math.floor replaced with Math.round
Mutant 55 in build-timezone.js: Math.floor replaced with Math.trunc
Mutant 56 in build-timezone.js: offset / 60 replaced with offset % 60
Mutant 57 in build-timezone.js: offset / 60 replaced with offset * 60
Mutant 58 in build-timezone.js: offset / 60 replaced with offset - 60
Mutant 59 in build-timezone.js: hours replaced with min
Mutant 60 in build-timezone.js: hours replaced with offset
Mutant 61 in build-timezone.js: hours replaced with Math.abs(offset)
Mutant 62 in build-timezone.js: min replaced with Math.floor(min)
Mutant 63 in build-timezone.js: min replaced with Math.ceil(min)
Mutant 64 in build-timezone.js: min replaced with Math.abs(min)
Mutant 65 in build-timezone.js: Math.abs replaced with Math.floor
Mutant 66 in build-timezone.js: Math.abs replaced with Math.ceil
Mutant 67 in build-timezone.js: Math.abs replaced with Math.round
Mutant 68 in build-timezone.js: input replaced with Math.floor(input / 60)
Mutant 69 in build-timezone.js: input replaced with Math.ceil(input / 60)
Mutant 70 in build-timezone.js: input replaced with Math.round(input / 60)
Mutant 71 in index.js: data.timezones replaced with data.countries
Mutant 72 in index.js: data.timezones replaced with data.timezones.length
Mutant 73 in index.js: data.timezones replaced with data.timezones[0]
Mutant 74 in index.js: data.countries replaced with data.timezones
Mutant 75 in index.js: data.countries replaced with data.countries.length
Mutant 76 in index.js: data.countries replaced with data.timezones.length
Mutant 77 in index.js: Object.assign(prev, {
  [id]: getCountry(id, options)
}) replaced with Object.assign(prev, {
  [id]: getTimezone(id, options)
})
Mutant 78 in index.js: Object.assign(prev, {
  [id]: getCountry(id, options)
}) replaced with Object.assign(prev, {
  [id]: getCountry(id, options).timezones
})
Mutant 79 in index.js: Object.assign(prev, {
  [id]: getCountry(id, options)
}) replaced with Object.assign(prev, {
  [id]: getCountry(id, options).allTimezones
})
Mutant 80 in index.js: prev replaced with prev + 1
Mutant 81 in index.js: prev replaced with prev * 2
Mutant 82 in index.js: prev replaced with prev - 1
Mutant 83 in index.js: {
  [id]: getCountry(id, options)
} replaced with {
  [id]: getTimezone(id, options)
}
Mutant 84 in index.js: {
  [id]: getCountry(id, options)
} replaced with {
  [id]: getCountry(id, {
    deprecated: true
  })
}
Mutant 85 in index.js: {
  [id]: getCountry(id, options)
} replaced with {
  [id]: getCountry(id, {
    allTimezones: true
  })
}
Mutant 86 in index.js: getCountry(id, options) replaced with getCountry(id, options = {})
Mutant 87 in index.js: getCountry(id, options) replaced with getCountry(id, options = null)
Mutant 88 in index.js: getCountry(id, options) replaced with getCountry(id, options = undefined)
Mutant 89 in index.js: getCountry replaced with getCountryForTimezone
Mutant 90 in index.js: getCountry replaced with getTimezonesForCountry
Mutant 91 in index.js: id replaced with id + 1
Mutant 92 in index.js: id replaced with id - 1
Mutant 93 in index.js: id replaced with id * 2
Mutant 94 in index.js: options replaced with options.deprecated
Mutant 95 in index.js: options replaced with options.timezones
Mutant 96 in index.js: options replaced with options.countries
Mutant 97 in index.js: totalTimezones !== memoizedTimezones replaced with totalTimezones !== memoizedTimezones + 1
Mutant 98 in index.js: totalTimezones !== memoizedTimezones replaced with totalTimezones !== memoizedTimezones - 1
Mutant 99 in index.js: totalTimezones !== memoizedTimezones replaced with totalTimezones !== memoizedTimezones * 2
Mutant 100 in index.js: data.timezones replaced with data.countries
Mutant 101 in index.js: data.timezones replaced with data.timezones.length
Mutant 102 in index.js: data.timezones replaced with data.timezones[0]
Mutant 103 in index.js: getTimezone replaced with getTimezone(timezones[id])
Mutant 104 in index.js: getTimezone replaced with getTimezone(timezones[id].name)
Mutant 105 in index.js: deliverTimezones(timezones, options) replaced with deliverTimezones(timezones.filter(tz => tz.deprecated), options)
Mutant 106 in index.js: deliverTimezones(timezones, options) replaced with deliverTimezones(timezones.map(tz => tz.name), options)
Mutant 107 in index.js: deliverTimezones(timezones, options) replaced with deliverTimezones(timezones.reduce((acc, tz) => acc + tz.offset, 0), options)
Mutant 108 in index.js: timezones replaced with timezones.length
Mutant 109 in index.js: timezones replaced with timezones[0]
Mutant 110 in index.js: timezones replaced with timezones.map(tz => tz.name)
Mutant 111 in index.js: options replaced with options.deprecated
Mutant 112 in index.js: options replaced with !options.deprecated
Mutant 113 in index.js: options replaced with options.deprecated ? options.deprecated : true
Mutant 114 in index.js: !countries[id] replaced with countries[id]
Mutant 115 in index.js: !countries[id] replaced with !timezones[id]
Mutant 116 in index.js: !countries[id] replaced with countries[id] && countries[id].timezones
Mutant 117 in index.js: memoizeCountry replaced with memoizeTimezone
Mutant 118 in index.js: buildCountry(data, id) replaced with buildCountry(data, id + 1)
Mutant 119 in index.js: buildCountry(data, id) replaced with buildCountry(data, id - 1)
Mutant 120 in index.js: buildCountry(data, id) replaced with buildCountry(data, id * 2)
Mutant 121 in index.js: data replaced with null
Mutant 122 in index.js: data replaced with undefined
Mutant 123 in index.js: data replaced with {}
Mutant 124 in index.js: deliverCountry(countries[id], options) replaced with deliverCountry(countries[id] + options)
Mutant 125 in index.js: deliverCountry(countries[id], options) replaced with deliverCountry(countries[id] - options)
Mutant 126 in index.js: deliverCountry(countries[id], options) replaced with deliverCountry(countries[id] * options)
Mutant 127 in index.js: deliverCountry replaced with deliverTimezones
Mutant 128 in index.js: deliverCountry replaced with getTimezonesForCountry
Mutant 129 in index.js: deliverCountry replaced with getCountryForTimezone
Mutant 130 in index.js: options replaced with options.deprecated
Mutant 131 in index.js: options replaced with options.deprecated = true
Mutant 132 in index.js: options replaced with options.deprecated = !options.deprecated
Mutant 133 in index.js: !country replaced with !countries[id]
Mutant 134 in index.js: !country replaced with !country.id
Mutant 135 in index.js: !country replaced with !data.countries[id]
Mutant 136 in index.js: !timezones[name] replaced with timezones[name] === undefined
Mutant 137 in index.js: !timezones[name] replaced with timezones[name] === null
Mutant 138 in index.js: !timezones[name] replaced with timezones[name] === false
Mutant 139 in index.js: buildTimezone(data, name) replaced with buildTimezone(data, name.toUpperCase())
Mutant 140 in index.js: buildTimezone(data, name) replaced with buildTimezone(data, name.split('').reverse().join(''))
Mutant 141 in index.js: buildTimezone(data, name) replaced with buildTimezone(data, name + 'foo')
Mutant 142 in index.js: buildTimezone(data, name) replaced with buildTimezone(data, name.toLowerCase())
Mutant 143 in index.js: data replaced with null
Mutant 144 in index.js: data replaced with undefined
Mutant 145 in index.js: data replaced with {}
Mutant 146 in index.js: name replaced with name + "foo"
Mutant 147 in index.js: name replaced with name.length
Mutant 148 in index.js: !timezone replaced with timezone.name
Mutant 149 in index.js: !timezone replaced with timezone.name === 'UTC'
Mutant 150 in index.js: !timezone replaced with timezone.name.length > 0
Mutant 151 in index.js: timezone replaced with timezone.name
Mutant 152 in index.js: timezone replaced with timezone.timezones
Mutant 153 in index.js: timezone replaced with timezone.countries
Mutant 154 in index.js: tzName replaced with "invalid"
Mutant 155 in index.js: tzName replaced with "UTC"
Mutant 156 in index.js: tzName replaced with "America/New_York"
Mutant 157 in index.js: c => getCountry(c, options) replaced with c => getTimezone(c, options)
Mutant 158 in index.js: c => getCountry(c, options) replaced with c => getCountry(c, {
  deprecated: true
})
Mutant 159 in index.js: c => getCountry(c, options) replaced with c => getCountry(c, {
  allTimezones: true
})
Mutant 160 in index.js: getCountry(c, options) replaced with getCountry(c.id, options)
Mutant 161 in index.js: getCountry(c, options) replaced with getCountry(c.name, options)
Mutant 162 in index.js: getCountry(c, options) replaced with getCountry(c.timezones[0], options)
Mutant 163 in index.js: getCountry replaced with getCountriesForTimezone
Mutant 164 in index.js: getCountry replaced with getTimezonesForCountry
Mutant 165 in index.js: c replaced with c.id
Mutant 166 in index.js: c replaced with c.name
Mutant 167 in index.js: c replaced with c.timezones[0]
Mutant 168 in index.js: options replaced with options.deprecated
Mutant 169 in index.js: options replaced with options.deprecated ? options : {}
Mutant 170 in index.js: options replaced with options.deprecated ? options.deprecated : options
Mutant 171 in index.js: getCountriesForTimezone(tzName, options) replaced with getCountriesForTimezone(tzName + options)
Mutant 172 in index.js: getCountriesForTimezone(tzName, options) replaced with getCountriesForTimezone(options[tzName])
Mutant 173 in index.js: getCountriesForTimezone(tzName, options) replaced with getCountriesForTimezone(tzName.split('').reverse().join(''))
Mutant 174 in index.js: getCountriesForTimezone replaced with getTimezonesForCountry
Mutant 175 in index.js: getCountriesForTimezone replaced with getCountryForTimezone
Mutant 176 in index.js: tzName replaced with "invalid"
Mutant 177 in index.js: tzName replaced with "UTC"
Mutant 178 in index.js: tzName replaced with "America/New_York"
Mutant 179 in index.js: getCountry(countryId, options) replaced with getCountry(countryId + options)
Mutant 180 in index.js: getCountry(countryId, options) replaced with getCountry(countryId - options)
Mutant 181 in index.js: getCountry(countryId, options) replaced with getCountry(countryId * options)
Mutant 182 in index.js: getCountry replaced with getTimezone
Mutant 183 in index.js: getCountry replaced with getCountryForTimezone
Mutant 184 in index.js: getCountry replaced with getCountriesForTimezone
Mutant 185 in index.js: countryId replaced with countryId + 1
Mutant 186 in index.js: countryId replaced with countryId - 1
Mutant 187 in index.js: countryId replaced with countryId * 2
Mutant 188 in index.js: !country replaced with country === null
Mutant 189 in index.js: !country replaced with country.length === 0
Mutant 190 in index.js: !country replaced with country.hasOwnProperty('length') && country.length === 0
Mutant 191 in index.js: getTimezone replaced with getTimezone(name).name
Mutant 192 in index.js: getTimezone replaced with getTimezone(name).timezones[0]
Mutant 193 in index.js: getTimezone replaced with getTimezone(name).timezones.length
Mutant 194 in index.js: deprecated === true replaced with deprecated !== true
Mutant 195 in index.js: deprecated === true replaced with !deprecated
Mutant 196 in index.js: deprecated === true replaced with deprecated ? false : true
Mutant 197 in index.js: tzs replaced with Object.values(tzs)
Mutant 198 in index.js: tzs replaced with Object.entries(tzs)
Mutant 199 in index.js: tzs replaced with Object.getOwnPropertyNames(tzs)
Mutant 200 in index.js: !tzs[key].deprecated replaced with tzs[key].deprecated
Mutant 201 in index.js: !tzs[key].deprecated replaced with tzs[key].deprecated === true
Mutant 202 in index.js: !tzs[key].deprecated replaced with !tzs[key].deprecated && tzs[key].deprecated
Mutant 203 in index.js: Object.assign(prev, {
  [key]: tzs[key]
}) replaced with Object.assign(prev, {
  [key]: tzs[key] + 1
})
Mutant 204 in index.js: Object.assign(prev, {
  [key]: tzs[key]
}) replaced with Object.assign(prev, {
  [key]: tzs[key] - 1
})
Mutant 205 in index.js: Object.assign(prev, {
  [key]: tzs[key]
}) replaced with Object.assign(prev, {
  [key]: tzs[key] * 2
})
Mutant 206 in index.js: prev replaced with prev + tzs[key]
Mutant 207 in index.js: prev replaced with prev - tzs[key]
Mutant 208 in index.js: prev replaced with prev * tzs[key]
Mutant 209 in index.js: {
  [key]: tzs[key]
} replaced with {
  [key]: tzs[key] + 1
}
Mutant 210 in index.js: {
  [key]: tzs[key]
} replaced with {
  [key]: tzs[key] - 1
}
Mutant 211 in index.js: {
  [key]: tzs[key]
} replaced with {
  [key]: tzs[key] * 2
}
Mutant 212 in index.js: !country replaced with country === null
Mutant 213 in index.js: !country replaced with country !== null
Mutant 214 in index.js: !country replaced with typeof country === 'undefined'
[32m23:26:50 (2552) INFO Instrumenter[39m Instrumented 3 source file(s) with 215 mutant(s)
[32m23:26:50 (2552) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m23:26:51 (2552) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m23:26:51 (2552) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m23:26:53 (2552) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 2 seconds (net 2420 ms, overhead 1 ms).
Mutation testing 2% (elapsed: <1m, remaining: ~5m) 6/215 tested (1 survived, 0 timed out)
Mutation testing 6% (elapsed: <1m, remaining: ~5m) 13/215 tested (2 survived, 0 timed out)
Mutation testing 9% (elapsed: <1m, remaining: ~4m) 21/215 tested (3 survived, 0 timed out)
Mutation testing 13% (elapsed: <1m, remaining: ~4m) 28/215 tested (3 survived, 0 timed out)
Mutation testing 16% (elapsed: <1m, remaining: ~4m) 35/215 tested (4 survived, 0 timed out)
Mutation testing 19% (elapsed: ~1m, remaining: ~4m) 41/215 tested (7 survived, 0 timed out)
Mutation testing 22% (elapsed: ~1m, remaining: ~4m) 48/215 tested (10 survived, 0 timed out)
Mutation testing 25% (elapsed: ~1m, remaining: ~3m) 55/215 tested (12 survived, 0 timed out)
Mutation testing 28% (elapsed: ~1m, remaining: ~3m) 62/215 tested (13 survived, 0 timed out)
Mutation testing 32% (elapsed: ~1m, remaining: ~3m) 69/215 tested (16 survived, 0 timed out)
Mutation testing 35% (elapsed: ~1m, remaining: ~3m) 77/215 tested (17 survived, 0 timed out)
Mutation testing 39% (elapsed: ~2m, remaining: ~3m) 84/215 tested (17 survived, 0 timed out)
Mutation testing 42% (elapsed: ~2m, remaining: ~2m) 92/215 tested (17 survived, 0 timed out)
Mutation testing 46% (elapsed: ~2m, remaining: ~2m) 99/215 tested (19 survived, 0 timed out)
Mutation testing 49% (elapsed: ~2m, remaining: ~2m) 107/215 tested (20 survived, 0 timed out)
Mutation testing 53% (elapsed: ~2m, remaining: ~2m) 114/215 tested (20 survived, 0 timed out)
Mutation testing 56% (elapsed: ~2m, remaining: ~2m) 122/215 tested (20 survived, 0 timed out)
Mutation testing 59% (elapsed: ~3m, remaining: ~2m) 128/215 tested (20 survived, 0 timed out)
Mutation testing 62% (elapsed: ~3m, remaining: ~1m) 135/215 tested (20 survived, 0 timed out)
Mutation testing 66% (elapsed: ~3m, remaining: ~1m) 143/215 tested (21 survived, 0 timed out)
Mutation testing 69% (elapsed: ~3m, remaining: ~1m) 150/215 tested (21 survived, 0 timed out)
Mutation testing 73% (elapsed: ~3m, remaining: ~1m) 157/215 tested (23 survived, 0 timed out)
Mutation testing 76% (elapsed: ~3m, remaining: ~1m) 164/215 tested (23 survived, 0 timed out)
Mutation testing 79% (elapsed: ~4m, remaining: ~1m) 170/215 tested (24 survived, 0 timed out)
Mutation testing 82% (elapsed: ~4m, remaining: <1m) 177/215 tested (24 survived, 0 timed out)
Mutation testing 85% (elapsed: ~4m, remaining: <1m) 184/215 tested (24 survived, 0 timed out)
Mutation testing 88% (elapsed: ~4m, remaining: <1m) 190/215 tested (25 survived, 0 timed out)
Mutation testing 91% (elapsed: ~4m, remaining: <1m) 197/215 tested (25 survived, 0 timed out)
Mutation testing 95% (elapsed: ~4m, remaining: <1m) 205/215 tested (25 survived, 0 timed out)
Mutation testing 98% (elapsed: ~5m, remaining: <1m) 212/215 tested (25 survived, 0 timed out)

All tests
  ✓ All tests (killed 189)

[Survived] PrecomputedMutator
src/build-country.js:5:7
-     if (!name) return null;
+     if (!data.countries[id]) return null;

[Survived] PrecomputedMutator
src/build-country.js:18:7
-     if (!timezonesMap) timezonesMap = buildTimezonesMap(data);
+     if (typeof timezonesMap === 'undefined') timezonesMap = buildTimezonesMap(data);

[Survived] PrecomputedMutator
src/build-country.js:32:11
-         if (!result[country]) Object.assign(result, { [country]: { current: [], all: [] } });
+         if (result[country] === undefined) Object.assign(result, { [country]: { current: [], all: [] } });

[Survived] PrecomputedMutator
src/build-country.js:33:60
-         if (tz.r === undefined) result[country].current.push(id);
+         if (tz.r === undefined) result[country].current.push(tz.r || id);

[Survived] PrecomputedMutator
src/build-timezone.js:3:7
-     if (!timezone) return null;
+     if (timezone == null) return null;

[Survived] PrecomputedMutator
src/build-timezone.js:3:7
-     if (!timezone) return null;
+     if (!timezone || timezone.length === 0) return null;

[Survived] PrecomputedMutator
src/build-timezone.js:14:21
-     const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;
+     const dstOffset = Number.isFinite(tz.d) ? tz.d : utcOffset;

[Survived] PrecomputedMutator
src/build-timezone.js:14:38
-     const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;
+     const dstOffset = Number.isInteger(tz.d + 1) ? tz.d : utcOffset;

[Survived] PrecomputedMutator
src/build-timezone.js:14:38
-     const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;
+     const dstOffset = Number.isInteger(tz.d * 2) ? tz.d : utcOffset;

[Survived] PrecomputedMutator
src/build-timezone.js:14:38
-     const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;
+     const dstOffset = Number.isInteger(tz.d - 1) ? tz.d : utcOffset;

[Survived] PrecomputedMutator
src/build-timezone.js:30:17
-     const hours = Math.floor(offset / 60);
+     const hours = Math.ceil(offset / 60);

[Survived] PrecomputedMutator
src/build-timezone.js:30:17
-     const hours = Math.floor(offset / 60);
+     const hours = Math.round(offset / 60);

[Survived] PrecomputedMutator
src/build-timezone.js:30:17
-     const hours = Math.floor(offset / 60);
+     const hours = Math.trunc(offset / 60);

[Survived] PrecomputedMutator
src/build-timezone.js:34:50
-     return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;
+     return `${sign}${getNumStr(hours)}:${getNumStr(Math.floor(min))}`;

[Survived] PrecomputedMutator
src/build-timezone.js:34:50
-     return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;
+     return `${sign}${getNumStr(hours)}:${getNumStr(Math.ceil(min))}`;

[Survived] PrecomputedMutator
src/build-timezone.js:34:50
-     return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;
+     return `${sign}${getNumStr(hours)}:${getNumStr(Math.abs(min))}`;

[Survived] PrecomputedMutator
src/index.js:5:36
-   const totalTimezones = Object.keys(data.timezones).length;
+   const totalTimezones = Object.keys(data.countries).length;

[Survived] PrecomputedMutator
src/index.js:17:7
-     if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);
+     if (totalTimezones !== memoizedTimezones + 1) Object.keys(data.timezones).forEach(getTimezone);

[Survived] PrecomputedMutator
src/index.js:17:7
-     if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);
+     if (totalTimezones !== memoizedTimezones - 1) Object.keys(data.timezones).forEach(getTimezone);

[Survived] PrecomputedMutator
src/index.js:17:7
-     if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);
+     if (totalTimezones !== memoizedTimezones * 2) Object.keys(data.timezones).forEach(getTimezone);

[Survived] PrecomputedMutator
src/index.js:32:7
-     if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));
+     if (timezones[name] === undefined) memoizeTimezone(buildTimezone(data, name));

[Survived] PrecomputedMutator
src/index.js:39:35
-     memoizedTimezones = Object.keys(timezone).length;
+     memoizedTimezones = Object.keys(timezone.name).length;

[Survived] PrecomputedMutator
src/index.js:39:35
-     memoizedTimezones = Object.keys(timezone).length;
+     memoizedTimezones = Object.keys(timezone.countries).length;

[Survived] PrecomputedMutator
src/index.js:45:42
-     return values.map((c) => getCountry(c, options));
+     return values.map((c) => getCountry(c, options.deprecated ? options : {}));

[Survived] PrecomputedMutator
src/index.js:55:7
-     if (!country) return null;
+     if (country === null) return null;

[Survived] PrecomputedMutator
src/index.js:70:7
-     if (!country) return null;
+     if (typeof country === 'undefined') return null;

Ran 1.00 tests per mutant on average.
-------------------|---------|----------|-----------|------------|----------|----------|
File               | % score | # killed | # timeout | # survived | # no cov | # errors |
-------------------|---------|----------|-----------|------------|----------|----------|
All files          |   87.91 |      189 |         0 |         26 |        0 |        0 |
 build-country.js  |   88.57 |       31 |         0 |          4 |        0 |        0 |
 build-timezone.js |   66.67 |       24 |         0 |         12 |        0 |        0 |
 index.js          |   93.06 |      134 |         0 |         10 |        0 |        0 |
-------------------|---------|----------|-----------|------------|----------|----------|
[32m23:31:56 (2552) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/countries-and-timezones/reports/mutation/mutation.html
[32m23:31:56 (2552) INFO MutationTestExecutor[39m Done in 5 minutes 8 seconds.

real	5m9.332s
user	5m31.922s
sys	0m49.736s
