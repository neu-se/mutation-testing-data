*** using precomputed mutations ***
[32m12:15:00 (2485) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m12:15:00 (2485) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m12:15:00 (2485) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/node-jsonfile/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m12:15:01 (2485) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m12:15:01 (2485) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m12:15:01 (2485) INFO ProjectReader[39m Found 2 of 298 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 141 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in index.js: typeof options === 'string' replaced with options === 'string'
Mutant 1 in index.js: typeof options === 'string' replaced with typeof options !== 'string'
Mutant 2 in index.js: typeof options === 'string' replaced with !(options === 'string')
Mutant 3 in index.js: universalify.fromCallback(fs.readFile)(file, options) replaced with universalify.fromCallback(fs.readFile)(Math.random(), options)
Mutant 4 in index.js: universalify.fromCallback(fs.readFile)(file, options) replaced with universalify.fromCallback(fs.readFile)(null, options)
Mutant 5 in index.js: universalify.fromCallback(fs.readFile)(file, options) replaced with universalify.fromCallback(fs.readFile)(undefined, options)
Mutant 6 in index.js: fs.readFile replaced with fs.readFileSync
Mutant 7 in index.js: fs.readFile replaced with fs.readFile.bind(fs)
Mutant 8 in index.js: fs.readFile replaced with fs.createReadStream
Mutant 9 in index.js: file replaced with undefined
Mutant 10 in index.js: options replaced with null
Mutant 11 in index.js: options replaced with {
  encoding: 'utf8'
}
Mutant 12 in index.js: options replaced with {
  throws: false
}
Mutant 13 in index.js: stripBom replaced with "stripped_bom"
Mutant 14 in index.js: stripBom replaced with "bom"
Mutant 15 in index.js: stripBom replaced with undefined
Mutant 16 in index.js: data replaced with !data
Mutant 17 in index.js: data replaced with data + 'x'
Mutant 18 in index.js: data replaced with null
Mutant 19 in index.js: data replaced with ''
Mutant 20 in index.js: data replaced with 0
Mutant 21 in index.js: options ? options.reviver : null replaced with options ? options.reviver : undefined
Mutant 22 in index.js: options ? options.reviver : null replaced with options ? null : options.reviver
Mutant 23 in index.js: options ? options.reviver : null replaced with JSON.parse(data, options.reviver || null)
Mutant 24 in index.js: shouldThrow replaced with !shouldThrow
Mutant 25 in index.js: shouldThrow replaced with !options.throws
Mutant 26 in index.js: shouldThrow replaced with typeof shouldThrow === 'boolean'
Mutant 27 in index.js: universalify.fromPromise replaced with universalify.fromCallback
Mutant 28 in index.js: universalify.fromPromise replaced with Bluebird.promisify
Mutant 29 in index.js: _readFile replaced with _readFileAsync
Mutant 30 in index.js: _readFile replaced with _readFileSync
Mutant 31 in index.js: _readFile replaced with _writeFile
Mutant 32 in index.js: typeof options === 'string' replaced with options === 'string'
Mutant 33 in index.js: typeof options === 'string' replaced with options.toString() === 'string'
Mutant 34 in index.js: typeof options === 'string' replaced with typeof options.toString() === 'string'
Mutant 35 in index.js: fs.readFileSync(file, options) replaced with fs.readFileSync(file)
Mutant 36 in index.js: fs.readFileSync(file, options) replaced with fs.readFileSync(options)
Mutant 37 in index.js: fs.readFileSync(file, options) replaced with fs.readFileSync(fs.readFileSync(file, {
  buffer: true,
  throws: false
}))
Mutant 38 in index.js: fs.readFileSync replaced with fs.readFile
Mutant 39 in index.js: fs.readFileSync replaced with fs.writeFile
Mutant 40 in index.js: fs.readFileSync replaced with fs.readdir
Mutant 41 in index.js: file replaced with file + '.json'
Mutant 42 in index.js: file replaced with null
Mutant 43 in index.js: file replaced with 'file.json'
Mutant 44 in index.js: options replaced with null
Mutant 45 in index.js: options replaced with undefined
Mutant 46 in index.js: options replaced with 5
Mutant 47 in index.js: stripBom replaced with content
Mutant 48 in index.js: content replaced with content + 'a'
Mutant 49 in index.js: content replaced with content * 2
Mutant 50 in index.js: content replaced with 'a' + content
Mutant 51 in index.js: JSON.parse(content, options.reviver) replaced with JSON.parse(stripBom(content))
Mutant 52 in index.js: JSON.parse(content, options.reviver) replaced with JSON.parse(undefined)
Mutant 53 in index.js: JSON.parse(content, options.reviver) replaced with JSON.parse(file)
Mutant 54 in index.js: JSON.parse replaced with JSON.stringify
Mutant 55 in index.js: JSON.parse replaced with window.JSON.parse
Mutant 56 in index.js: content replaced with data
Mutant 57 in index.js: content replaced with obj
Mutant 58 in index.js: content replaced with str
Mutant 59 in index.js: options.reviver replaced with null
Mutant 60 in index.js: options.reviver replaced with {}
Mutant 61 in index.js: options.reviver replaced with console.log
Mutant 62 in index.js: shouldThrow replaced with shouldThrow === true
Mutant 63 in index.js: shouldThrow replaced with !shouldThrow
Mutant 64 in index.js: shouldThrow replaced with shouldThrow ? true : false
Mutant 65 in index.js: stringify replaced with JSON.parse
Mutant 66 in index.js: stringify replaced with stringify.toJSON
Mutant 67 in index.js: stringify replaced with JSON.stringify
Mutant 68 in index.js: obj replaced with {
  ...obj
}
Mutant 69 in index.js: obj replaced with {}
Mutant 70 in index.js: obj replaced with obj.toString()
Mutant 71 in index.js: options replaced with options.encode()
Mutant 72 in index.js: options replaced with {
  encode: 'utf-8',
  space: 2
}
Mutant 73 in index.js: universalify.fromCallback(fs.writeFile)(file, str, options) replaced with universalify.fromCallback(fs.writeFile)(file, str + 'x', options)
Mutant 74 in index.js: universalify.fromCallback(fs.writeFile)(file, str, options) replaced with universalify.fromCallback(fs.writeFile)(file, str, options + 1)
Mutant 75 in index.js: universalify.fromCallback(fs.writeFile)(file, str, options) replaced with universalify.fromCallback(fs.writeFile)(file, str, options.encoding = 'utf16')
Mutant 76 in index.js: universalify.fromCallback(fs.writeFile) replaced with fs.writeFileSync
Mutant 77 in index.js: universalify.fromCallback(fs.writeFile) replaced with _fs.writeFileSync
Mutant 78 in index.js: fs.writeFile replaced with JSON.parse
Mutant 79 in index.js: file replaced with 1 + file
Mutant 80 in index.js: file replaced with file + 1
Mutant 81 in index.js: file replaced with file - 1
Mutant 82 in index.js: str replaced with str === ''
Mutant 83 in index.js: str replaced with typeof str === 'object' && str !== null
Mutant 84 in index.js: options replaced with options.encoding
Mutant 85 in index.js: options replaced with false
Mutant 86 in index.js: options replaced with options.flag
Mutant 87 in index.js: universalify.fromPromise replaced with universalify.fromCallback
Mutant 88 in index.js: _writeFile replaced with _wrongFile
Mutant 89 in index.js: _writeFile replaced with _writeFile.bind(null)
Mutant 90 in index.js: _writeFile replaced with function wrongFile(file, obj, options) {
  _writeFile(file, obj, options);
}
Mutant 91 in index.js: stringify(obj, options) replaced with stringify("stringified-object", options)
Mutant 92 in index.js: stringify(obj, options) replaced with stringify(obj, "stringified-options")
Mutant 93 in index.js: stringify(obj, options) replaced with stringify(obj, {
  ...options,
  encoding: "base64"
})
Mutant 94 in index.js: obj replaced with obj[0]
Mutant 95 in index.js: fs.writeFileSync(file, str, options) replaced with fs.writeFileSync(fs.writeFileSync(file, str, options.encoding))
Mutant 96 in index.js: fs.writeFileSync(file, str, options) replaced with fs.writeFileSync(fs.writeFileSync(file, str, 'utf8'))
Mutant 97 in index.js: fs.writeFileSync(file, str, options) replaced with fs.writeFileSync(fs.writeFileSync(file, str, Object.keys(options)[0]))
Mutant 98 in index.js: fs.writeFileSync replaced with fs.writeFile
Mutant 99 in index.js: str replaced with -1 * str
Mutant 100 in index.js: str replaced with "hello" + str
Mutant 101 in index.js: str replaced with null
Mutant 102 in index.js: options replaced with options.encoding
Mutant 103 in index.js: options replaced with "utf8"
Mutant 104 in index.js: options replaced with fs.constants.O_SYNC
Mutant 105 in utils.js: JSON.stringify(obj, replacer, spaces) replaced with JSON.stringify(obj, null, spaces)
Mutant 106 in utils.js: JSON.stringify(obj, replacer, spaces) replaced with JSON.stringify(obj, replacer, spaces, null)
Mutant 107 in utils.js: JSON.stringify(obj, replacer, spaces) replaced with JSON.stringify(obj, replacer, spaces, 'foo')
Mutant 108 in utils.js: obj replaced with obj === null
Mutant 109 in utils.js: obj replaced with obj !== null
Mutant 110 in utils.js: obj replaced with obj === undefined
Mutant 111 in utils.js: replacer replaced with function stupidSwap(a, b) {
  return [b, a];
}
Mutant 112 in utils.js: replacer replaced with function stupidReplacer(key, value) {
  return value + '_stupid';
}
Mutant 113 in utils.js: replacer replaced with function brokenReplacer(key, value) {
  if (value == null) {
    throw new Error('Invalid value');
  }
  return value;
}
Mutant 114 in utils.js: spaces replaced with spaces + 1
Mutant 115 in utils.js: spaces replaced with spaces / 2
Mutant 116 in utils.js: spaces replaced with 0
Mutant 117 in utils.js: str.replace(/\n/g, EOL) replaced with str.replace('\\n')
Mutant 118 in utils.js: str.replace(/\n/g, EOL) replaced with str.replace('\r\n')
Mutant 119 in utils.js: str.replace(/\n/g, EOL) replaced with str.replace('(\r\n|\n|\r)')
Mutant 120 in utils.js: str.replace replaced with str.replaceAll
Mutant 121 in utils.js: EOL replaced with "<RI> <chn>"
Mutant 122 in utils.js: Buffer.isBuffer(content) replaced with !Buffer.isBuffer(content)
Mutant 123 in utils.js: Buffer.isBuffer(content) replaced with content.isBuffer()
Mutant 124 in utils.js: Buffer.isBuffer(content) replaced with content.toString('utf8')[0]
Mutant 125 in utils.js: Buffer.isBuffer replaced with typeof content === 'Buffer'
Mutant 126 in utils.js: content replaced with content + 1
Mutant 127 in utils.js: content replaced with content.substring(1)
Mutant 128 in utils.js: content replaced with Buffer.from(content)
Mutant 129 in utils.js: 'utf8' replaced with 'ascii'
Mutant 130 in utils.js: 'utf8' replaced with 'base64'
Mutant 131 in utils.js: 'utf8' replaced with 'utf16le'
Mutant 132 in utils.js: content.replace(/^\uFEFF/, '') replaced with content.replace(/^\u0000/, '')
Mutant 133 in utils.js: content.replace(/^\uFEFF/, '') replaced with content.replace(content.split(/^\uFEFF/).join(''))
Mutant 134 in utils.js: content.replace(/^\uFEFF/, '') replaced with content.replace(content.replace(/^\uFEFF/g, ''))
Mutant 135 in utils.js: /^\uFEFF/ replaced with /^\uffff/
Mutant 136 in utils.js: /^\uFEFF/ replaced with /\ufeff/
Mutant 137 in utils.js: /^\uFEFF/ replaced with /^foo/
Mutant 138 in utils.js: '' replaced with 'x'
Mutant 139 in utils.js: '' replaced with content.charAt(0)
Mutant 140 in utils.js: '' replaced with content.indexOf('\uFEFF') !== -1 ? content.charAt(content.indexOf('\uFEFF')) : ''
[32m12:15:01 (2485) INFO Instrumenter[39m Instrumented 2 source file(s) with 141 mutant(s)
[32m12:15:01 (2485) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m12:15:02 (2485) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m12:15:02 (2485) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m12:15:03 (2485) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 847 ms, overhead 0 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~23m) 1/141 tested (0 survived, 0 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~15m) 3/141 tested (0 survived, 2 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~17m) 4/141 tested (0 survived, 3 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~15m) 6/141 tested (0 survived, 5 timed out)
Mutation testing 6% (elapsed: <1m, remaining: ~12m) 9/141 tested (1 survived, 7 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~9m) 13/141 tested (4 survived, 8 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~10m) 14/141 tested (4 survived, 9 timed out)
Mutation testing 11% (elapsed: ~1m, remaining: ~10m) 16/141 tested (4 survived, 11 timed out)
Mutation testing 12% (elapsed: ~1m, remaining: ~10m) 17/141 tested (4 survived, 12 timed out)
Mutation testing 13% (elapsed: ~1m, remaining: ~10m) 19/141 tested (4 survived, 14 timed out)
Mutation testing 14% (elapsed: ~1m, remaining: ~10m) 21/141 tested (4 survived, 16 timed out)
Mutation testing 16% (elapsed: ~2m, remaining: ~10m) 23/141 tested (5 survived, 16 timed out)
Mutation testing 17% (elapsed: ~2m, remaining: ~10m) 25/141 tested (5 survived, 17 timed out)
Mutation testing 19% (elapsed: ~2m, remaining: ~9m) 27/141 tested (5 survived, 18 timed out)
Mutation testing 21% (elapsed: ~2m, remaining: ~8m) 31/141 tested (5 survived, 19 timed out)
Mutation testing 29% (elapsed: ~2m, remaining: ~6m) 41/141 tested (6 survived, 20 timed out)
Mutation testing 37% (elapsed: ~2m, remaining: ~4m) 53/141 tested (8 survived, 20 timed out)
Mutation testing 46% (elapsed: ~3m, remaining: ~3m) 65/141 tested (10 survived, 20 timed out)
Mutation testing 46% (elapsed: ~3m, remaining: ~3m) 66/141 tested (10 survived, 21 timed out)
Mutation testing 48% (elapsed: ~3m, remaining: ~3m) 69/141 tested (11 survived, 23 timed out)
Mutation testing 49% (elapsed: ~3m, remaining: ~3m) 70/141 tested (11 survived, 24 timed out)
Mutation testing 51% (elapsed: ~3m, remaining: ~3m) 72/141 tested (11 survived, 26 timed out)
Mutation testing 51% (elapsed: ~3m, remaining: ~3m) 73/141 tested (11 survived, 27 timed out)
Mutation testing 53% (elapsed: ~4m, remaining: ~3m) 75/141 tested (11 survived, 29 timed out)
Mutation testing 55% (elapsed: ~4m, remaining: ~3m) 78/141 tested (13 survived, 30 timed out)
Mutation testing 56% (elapsed: ~4m, remaining: ~3m) 80/141 tested (13 survived, 32 timed out)
Mutation testing 57% (elapsed: ~4m, remaining: ~3m) 81/141 tested (13 survived, 33 timed out)
Mutation testing 58% (elapsed: ~4m, remaining: ~3m) 83/141 tested (13 survived, 35 timed out)
Mutation testing 60% (elapsed: ~4m, remaining: ~3m) 85/141 tested (14 survived, 36 timed out)
Mutation testing 63% (elapsed: ~5m, remaining: ~2m) 90/141 tested (16 survived, 38 timed out)
Mutation testing 71% (elapsed: ~5m, remaining: ~2m) 101/141 tested (17 survived, 38 timed out)
Mutation testing 76% (elapsed: ~5m, remaining: ~1m) 108/141 tested (21 survived, 38 timed out)
Mutation testing 77% (elapsed: ~5m, remaining: ~1m) 109/141 tested (21 survived, 39 timed out)
Mutation testing 78% (elapsed: ~5m, remaining: ~1m) 111/141 tested (21 survived, 41 timed out)
Mutation testing 79% (elapsed: ~5m, remaining: ~1m) 112/141 tested (21 survived, 42 timed out)
Mutation testing 80% (elapsed: ~6m, remaining: ~1m) 114/141 tested (21 survived, 43 timed out)
Mutation testing 82% (elapsed: ~6m, remaining: ~1m) 116/141 tested (21 survived, 45 timed out)
Mutation testing 83% (elapsed: ~6m, remaining: ~1m) 118/141 tested (21 survived, 46 timed out)
Mutation testing 85% (elapsed: ~6m, remaining: ~1m) 120/141 tested (21 survived, 46 timed out)
Mutation testing 86% (elapsed: ~6m, remaining: ~1m) 122/141 tested (22 survived, 47 timed out)
Mutation testing 87% (elapsed: ~6m, remaining: <1m) 124/141 tested (22 survived, 49 timed out)
Mutation testing 89% (elapsed: ~7m, remaining: <1m) 126/141 tested (23 survived, 50 timed out)
Mutation testing 90% (elapsed: ~7m, remaining: <1m) 128/141 tested (23 survived, 52 timed out)
Mutation testing 92% (elapsed: ~7m, remaining: <1m) 130/141 tested (24 survived, 52 timed out)
Mutation testing 93% (elapsed: ~7m, remaining: <1m) 132/141 tested (24 survived, 54 timed out)
Mutation testing 95% (elapsed: ~7m, remaining: <1m) 134/141 tested (24 survived, 55 timed out)
Mutation testing 95% (elapsed: ~7m, remaining: <1m) 135/141 tested (24 survived, 56 timed out)
Mutation testing 97% (elapsed: ~8m, remaining: <1m) 138/141 tested (25 survived, 56 timed out)
Mutation testing 99% (elapsed: ~8m, remaining: <1m) 140/141 tested (25 survived, 56 timed out)

All tests
  ✓ All tests (killed 60)

[Survived] PrecomputedMutator
index.js:19:46
-     let data = await universalify.fromCallback(fs.readFile)(file, options)
+     let data = await universalify.fromCallback(fs.readFile.bind(fs))(file, options)

[Survived] PrecomputedMutator
index.js:19:65
-     let data = await universalify.fromCallback(fs.readFile)(file, options)
+     let data = await universalify.fromCallback(fs.readFile)(file, null)

[Survived] PrecomputedMutator
index.js:19:65
-     let data = await universalify.fromCallback(fs.readFile)(file, options)
+     let data = await universalify.fromCallback(fs.readFile)(file, {
+     encoding: 'utf8'
+   })

[Survived] PrecomputedMutator
index.js:19:65
-     let data = await universalify.fromCallback(fs.readFile)(file, options)
+     let data = await universalify.fromCallback(fs.readFile)(file, {
+     throws: false
+   })

[Survived] PrecomputedMutator
index.js:25:28
-       obj = JSON.parse(data, options ? options.reviver : null)
+       obj = JSON.parse(data, options ? options.reviver : undefined)

[Survived] PrecomputedMutator
index.js:50:19
-       let content = fs.readFileSync(file, options)
+       let content = fs.readFileSync(file)

[Survived] PrecomputedMutator
index.js:50:41
-       let content = fs.readFileSync(file, options)
+       let content = fs.readFileSync(file, null)

[Survived] PrecomputedMutator
index.js:50:41
-       let content = fs.readFileSync(file, options)
+       let content = fs.readFileSync(file, undefined)

[Survived] PrecomputedMutator
index.js:54:9
-       if (shouldThrow) {
+       if (shouldThrow === true) {

[Survived] PrecomputedMutator
index.js:54:9
-       if (shouldThrow) {
+       if (shouldThrow ? true : false) {

[Survived] PrecomputedMutator
index.js:66:25
-     const str = stringify(obj, options)
+     const str = stringify({
+     ...obj
+   }, options)

[Survived] PrecomputedMutator
index.js:68:9
-     await universalify.fromCallback(fs.writeFile)(file, str, options)
+     await fs.writeFileSync(file, str, options)

[Survived] PrecomputedMutator
index.js:68:9
-     await universalify.fromCallback(fs.writeFile)(file, str, options)
+     await _fs.writeFileSync(file, str, options)

[Survived] PrecomputedMutator
index.js:68:60
-     await universalify.fromCallback(fs.writeFile)(file, str, options)
+     await universalify.fromCallback(fs.writeFile)(file, str, options.encoding)

[Survived] PrecomputedMutator
index.js:68:60
-     await universalify.fromCallback(fs.writeFile)(file, str, options)
+     await universalify.fromCallback(fs.writeFile)(file, str, options.flag)

[Survived] PrecomputedMutator
index.js:71:44
-   const writeFile = universalify.fromPromise(_writeFile)
+   const writeFile = universalify.fromPromise(_writeFile.bind(null))

[Survived] PrecomputedMutator
index.js:76:15
-     const str = stringify(obj, options)
+     const str = stringify(obj, {
+     ...options,
+     encoding: "base64"
+   })

[Survived] PrecomputedMutator
index.js:78:38
-     return fs.writeFileSync(file, str, options)
+     return fs.writeFileSync(file, str, options.encoding)

[Survived] PrecomputedMutator
index.js:78:38
-     return fs.writeFileSync(file, str, options)
+     return fs.writeFileSync(file, str, "utf8")

[Survived] PrecomputedMutator
utils.js:3:15
-     const str = JSON.stringify(obj, replacer, spaces)
+     const str = JSON.stringify(obj, replacer, spaces, null)

[Survived] PrecomputedMutator
utils.js:3:15
-     const str = JSON.stringify(obj, replacer, spaces)
+     const str = JSON.stringify(obj, replacer, spaces, 'foo')

[Survived] PrecomputedMutator
utils.js:5:10
-     return str.replace(/\n/g, EOL) + EOF
+     return str.replaceAll(/\n/g, EOL) + EOF

[Survived] PrecomputedMutator
utils.js:10:7
-     if (Buffer.isBuffer(content)) content = content.toString('utf8')
+     if (content.toString('utf8')[0]) content = content.toString('utf8')

[Survived] PrecomputedMutator
utils.js:10:23
-     if (Buffer.isBuffer(content)) content = content.toString('utf8')
+     if (Buffer.isBuffer(Buffer.from(content))) content = content.toString('utf8')

[Survived] PrecomputedMutator
utils.js:11:26
-     return content.replace(/^\uFEFF/, '')
+     return content.replace(/\ufeff/, '')

Ran 0.60 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   82.27 |       60 |        56 |         25 |        0 |        0 |
 index.js |   81.90 |       48 |        38 |         19 |        0 |        0 |
 utils.js |   83.33 |       12 |        18 |          6 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m12:23:13 (2485) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/node-jsonfile/reports/mutation/mutation.html
[32m12:23:13 (2485) INFO MutationTestExecutor[39m Done in 8 minutes 12 seconds.

real	8m14.299s
user	1m20.960s
sys	0m16.466s
