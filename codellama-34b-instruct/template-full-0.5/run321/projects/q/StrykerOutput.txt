*** using precomputed mutations ***
[32m16:36:00 (3001) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m16:36:00 (3001) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m16:36:00 (3001) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m16:36:01 (3001) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m16:36:01 (3001) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m16:36:01 (3001) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 2033 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.5/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "object"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", null)
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", {})
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", "string")
Mutant 6 in q.js: bootstrap replaced with "q"
Mutant 7 in q.js: bootstrap replaced with noop
Mutant 8 in q.js: bootstrap replaced with "promise"
Mutant 9 in q.js: "promise" replaced with 42
Mutant 10 in q.js: "promise" replaced with null
Mutant 11 in q.js: definition replaced with () => {
  throw new Error("I'm a buggy function!");
}
Mutant 12 in q.js: definition replaced with () => {
  return "I'm a buggy function!";
}
Mutant 13 in q.js: definition replaced with () => {
  return function () {
    throw new Error("I'm a buggy function!");
  };
}
Mutant 14 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports !== "object" || typeof module !== "object"
Mutant 15 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "string" && typeof module === "string"
Mutant 16 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module !== "object"
Mutant 17 in q.js: definition replaced with "PLACEHOLDER"
Mutant 18 in q.js: definition replaced with null
Mutant 19 in q.js: definition replaced with undefined
Mutant 20 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && !define.amd
Mutant 21 in q.js: typeof define === "function" && define.amd replaced with typeof define !== "function" || !define.amd
Mutant 22 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd !== undefined
Mutant 23 in q.js: definition replaced with 0
Mutant 24 in q.js: definition replaced with null
Mutant 25 in q.js: definition replaced with undefined
Mutant 26 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "undefined" && ses.ok()
Mutant 27 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined" || !ses.ok()
Mutant 28 in q.js: !ses.ok() replaced with !ses.nok()
Mutant 29 in q.js: !ses.ok() replaced with ses.ok()
Mutant 30 in q.js: ses.ok replaced with ses.notOk
Mutant 31 in q.js: ses.ok replaced with ses.maybeOk
Mutant 32 in q.js: ses.ok replaced with ses.notOk && ses.maybeOk
Mutant 33 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined"
Mutant 34 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" ^ typeof self !== "undefined"
Mutant 35 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" || typeof self !== "undefined" || true
Mutant 36 in q.js: definition replaced with "Hello, world!"
Mutant 37 in q.js: definition replaced with null
Mutant 38 in q.js: definition replaced with undefined
Mutant 39 in q.js: head.next replaced with head
Mutant 40 in q.js: head.next replaced with tail
Mutant 41 in q.js: head.next replaced with head.task
Mutant 42 in q.js: domain replaced with domain.exit()
Mutant 43 in q.js: domain replaced with domain.enter()
Mutant 44 in q.js: domain replaced with domain.foo()
Mutant 45 in q.js: runSingle(task, domain) replaced with runSingle(head.task, head.domain)
Mutant 46 in q.js: runSingle(task, domain) replaced with runSingle(tail.task, tail.domain)
Mutant 47 in q.js: runSingle(task, domain) replaced with runSingle(undefined, undefined)
Mutant 48 in q.js: task replaced with null
Mutant 49 in q.js: task replaced with undefined
Mutant 50 in q.js: task replaced with () => {
  throw new Error();
}
Mutant 51 in q.js: domain replaced with 0
Mutant 52 in q.js: domain replaced with "domain"
Mutant 53 in q.js: domain replaced with null
Mutant 54 in q.js: laterQueue.length replaced with laterQueue.length()
Mutant 55 in q.js: laterQueue.length replaced with laterQueue.pop()
Mutant 56 in q.js: laterQueue.length replaced with laterQueue.shift()
Mutant 57 in q.js: laterQueue.pop replaced with laterQueue.shift
Mutant 58 in q.js: runSingle replaced with noop
Mutant 59 in q.js: runSingle replaced with undefined
Mutant 60 in q.js: task replaced with null
Mutant 61 in q.js: task replaced with undefined
Mutant 62 in q.js: task replaced with () => {}
Mutant 63 in q.js: task replaced with null
Mutant 64 in q.js: task replaced with task.domain = undefined
Mutant 65 in q.js: task replaced with task.domain = {
  enter: null
}
Mutant 66 in q.js: isNodeJS replaced with !isNodeJS
Mutant 67 in q.js: isNodeJS replaced with false
Mutant 68 in q.js: isNodeJS replaced with typeof isNodeJS === "undefined"
Mutant 69 in q.js: domain replaced with !domain
Mutant 70 in q.js: domain replaced with domain + 1
Mutant 71 in q.js: domain replaced with domain.foo
Mutant 72 in q.js: flush replaced with flush()
Mutant 73 in q.js: flush replaced with flush + 1
Mutant 74 in q.js: flush replaced with flush.call(null)
Mutant 75 in q.js: 0 replaced with 1
Mutant 76 in q.js: 0 replaced with -1
Mutant 77 in q.js: 0 replaced with null
Mutant 78 in q.js: domain replaced with !domain
Mutant 79 in q.js: domain replaced with domain + 1
Mutant 80 in q.js: domain replaced with domain.length
Mutant 81 in q.js: domain.enter replaced with domain.exit
Mutant 82 in q.js: domain replaced with !domain
Mutant 83 in q.js: domain replaced with domain === null
Mutant 84 in q.js: domain replaced with domain.exit
Mutant 85 in q.js: domain.exit replaced with domain.enter
Mutant 86 in q.js: !flushing replaced with flushing
Mutant 87 in q.js: !flushing replaced with !flushing && false
Mutant 88 in q.js: !flushing replaced with flushing || true
Mutant 89 in q.js: flush replaced with flush()
Mutant 90 in q.js: flush replaced with flush.call()
Mutant 91 in q.js: typeof window !== "undefined" replaced with typeof window !== "undefined" && window
Mutant 92 in q.js: typeof window !== "undefined" replaced with typeof window !== "undefined" || window
Mutant 93 in q.js: typeof window !== "undefined" replaced with typeof window !== "undefined" ? window : false
Mutant 94 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 95 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 96 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(() => {})
Mutant 97 in q.js: setImmediate.bind replaced with setInterval.bind
Mutant 98 in q.js: setImmediate.bind replaced with requestAnimationFrame.bind
Mutant 99 in q.js: window replaced with undefined
Mutant 100 in q.js: window replaced with null
Mutant 101 in q.js: window replaced with this
Mutant 102 in q.js: flush replaced with undefined
Mutant 103 in q.js: flush replaced with flush()
Mutant 104 in q.js: flush replaced with console.log('test')
Mutant 105 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "undefined"
Mutant 106 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "object"
Mutant 107 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "function"
Mutant 108 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 109 in q.js: 0 replaced with 1
Mutant 110 in q.js: 0 replaced with "foo"
Mutant 111 in q.js: 0 replaced with Math.PI
Mutant 112 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 113 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 114 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, null)
Mutant 115 in q.js: flush replaced with flush()
Mutant 116 in q.js: 0 replaced with 1
Mutant 117 in q.js: 0 replaced with -1
Mutant 118 in q.js: 0 replaced with Infinity
Mutant 119 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 120 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 121 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, Math.random())
Mutant 122 in q.js: setTimeout replaced with setInterval
Mutant 123 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 124 in q.js: 0 replaced with 1
Mutant 125 in q.js: 0 replaced with -1
Mutant 126 in q.js: 0 replaced with Infinity
Mutant 127 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 128 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 129 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 130 in q.js: task replaced with 0
Mutant 131 in q.js: task replaced with null
Mutant 132 in q.js: task replaced with undefined
Mutant 133 in q.js: !flushing replaced with flushing
Mutant 134 in q.js: !flushing replaced with flushing + 1
Mutant 135 in q.js: call.apply(f, arguments) replaced with call.apply(f, [1, 2, 3])
Mutant 136 in q.js: call.apply(f, arguments) replaced with call.apply(f, "hello")
Mutant 137 in q.js: call.apply(f, arguments) replaced with call.apply(f, null)
Mutant 138 in q.js: call.apply replaced with call.bind
Mutant 139 in q.js: call.apply replaced with call.call
Mutant 140 in q.js: f replaced with f.call(null)
Mutant 141 in q.js: f replaced with f.apply(undefined)
Mutant 142 in q.js: f replaced with f.bind(null)()
Mutant 143 in q.js: arguments replaced with [1, 2, 3]
Mutant 144 in q.js: arguments replaced with null
Mutant 145 in q.js: arguments replaced with "hello"
Mutant 146 in q.js: Array.prototype.slice replaced with Array.prototype.pop
Mutant 147 in q.js: Array.prototype.slice replaced with Array.prototype.shift
Mutant 148 in q.js: Array.prototype.slice replaced with Array.prototype.reverse
Mutant 149 in q.js: arguments.length === 1 replaced with arguments.length < 1
Mutant 150 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 151 in q.js: arguments.length === 1 replaced with arguments.length === 0
Mutant 152 in q.js: 1 replaced with 0
Mutant 153 in q.js: 1 replaced with -1
Mutant 154 in q.js: 1 replaced with this.length - 1
Mutant 155 in q.js: index in this replaced with index > this
Mutant 156 in q.js: index in this replaced with index === this
Mutant 157 in q.js: index in this replaced with index < this
Mutant 158 in q.js: ++index >= length replaced with index > length
Mutant 159 in q.js: ++index >= length replaced with index >= length + 1
Mutant 160 in q.js: ++index >= length replaced with index + 1 >= length
Mutant 161 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (i >= length; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 162 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (i > length; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 163 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (i < length; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 164 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index += 2; index < length; index -= 2) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 165 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index % 2 === 0; index < length; index += 2) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 166 in q.js: index < length replaced with index > length
Mutant 167 in q.js: index < length replaced with index += 2
Mutant 168 in q.js: index < length replaced with index *= 2
Mutant 169 in q.js: index++ replaced with index--
Mutant 170 in q.js: index++ replaced with index += 2
Mutant 171 in q.js: index++ replaced with index = index + 1
Mutant 172 in q.js: index in this replaced with index < this.length
Mutant 173 in q.js: index in this replaced with this.hasOwnProperty(index)
Mutant 174 in q.js: index in this replaced with Object.prototype.hasOwnProperty.call(this, index)
Mutant 175 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index + 1], index)
Mutant 176 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index + 1)
Mutant 177 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index + 1], index + 1)
Mutant 178 in q.js: basis replaced with basis + 1
Mutant 179 in q.js: basis replaced with basis - 1
Mutant 180 in q.js: basis replaced with basis * 2
Mutant 181 in q.js: this[index] replaced with this[index + 1]
Mutant 182 in q.js: this[index] replaced with this[index - 1]
Mutant 183 in q.js: this[index] replaced with this[index] + 1
Mutant 184 in q.js: index replaced with index + 1
Mutant 185 in q.js: index replaced with index - 1
Mutant 186 in q.js: index replaced with length - index
Mutant 187 in q.js: i < this.length replaced with i <= this.length
Mutant 188 in q.js: i < this.length replaced with i > this.length
Mutant 189 in q.js: i < this.length replaced with i != this.length
Mutant 190 in q.js: i++ replaced with i--
Mutant 191 in q.js: i++ replaced with i += 2
Mutant 192 in q.js: i++ replaced with i = -1
Mutant 193 in q.js: this[i] === value replaced with this[i] !== value
Mutant 194 in q.js: this[i] === value replaced with this[i] > value
Mutant 195 in q.js: this[i] === value replaced with this[i] + value
Mutant 196 in q.js: collect.push replaced with collect.pop
Mutant 197 in q.js: collect.push replaced with collect.shift
Mutant 198 in q.js: collect.push replaced with collect.unshift
Mutant 199 in q.js: callback.call(thisp, value, index, self) replaced with callback.apply(thisp, [value, index, self])
Mutant 200 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self, null)
Mutant 201 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self, 1)
Mutant 202 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(undefined)
Mutant 203 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(null)
Mutant 204 in q.js: callback.call(thisp, value, index, self) replaced with callback.call({})
Mutant 205 in q.js: callback.call replaced with callback.bind
Mutant 206 in q.js: thisp replaced with undefined
Mutant 207 in q.js: thisp replaced with "foo"
Mutant 208 in q.js: value replaced with value + 1
Mutant 209 in q.js: value replaced with value * 2
Mutant 210 in q.js: value replaced with value - 1
Mutant 211 in q.js: index replaced with index + 1
Mutant 212 in q.js: index replaced with index * 2
Mutant 213 in q.js: index replaced with index - 1
Mutant 214 in q.js: self replaced with self + 1
Mutant 215 in q.js: self replaced with self[0]
Mutant 216 in q.js: self replaced with self.length
Mutant 217 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key of object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 218 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key in object.keys) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 219 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key in object.prototype) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 220 in q.js: object replaced with null
Mutant 221 in q.js: object replaced with undefined
Mutant 222 in q.js: object replaced with {}
Mutant 223 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && object[key] !== undefined
Mutant 224 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) || object[key] === undefined
Mutant 225 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && object[key] !== null
Mutant 226 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key, 1)
Mutant 227 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key, 0)
Mutant 228 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key, undefined)
Mutant 229 in q.js: object_hasOwnProperty replaced with !object_hasOwnProperty[key]
Mutant 230 in q.js: object replaced with object.prototype
Mutant 231 in q.js: key replaced with this[key]
Mutant 232 in q.js: key replaced with key++
Mutant 233 in q.js: key replaced with key + 1
Mutant 234 in q.js: key replaced with value
Mutant 235 in q.js: key replaced with this[key]
Mutant 236 in q.js: key replaced with key + 1
Mutant 237 in q.js: uncurryThis replaced with null
Mutant 238 in q.js: uncurryThis replaced with undefined
Mutant 239 in q.js: uncurryThis replaced with "uncurryThis"
Mutant 240 in q.js: Object replaced with Number
Mutant 241 in q.js: Object replaced with Array
Mutant 242 in q.js: Object replaced with String
Mutant 243 in q.js: value replaced with value + 1
Mutant 244 in q.js: value replaced with value - 1
Mutant 245 in q.js: value replaced with value * 2
Mutant 246 in q.js: object_toString replaced with object_hasOwnProperty
Mutant 247 in q.js: object_toString replaced with object_keys
Mutant 248 in q.js: object_toString replaced with object_create
Mutant 249 in q.js: exception replaced with exception.message
Mutant 250 in q.js: exception replaced with exception.prototype
Mutant 251 in q.js: exception replaced with exception.constructor
Mutant 252 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue === "undefined"
Mutant 253 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "object"
Mutant 254 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue === "function"
Mutant 255 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && error.stack.length > 0
Mutant 256 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && error.stack.length > 0 && error.stack.indexOf("From previous event:") === -1
Mutant 257 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.value) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 258 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.length) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 259 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.prototype) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 260 in q.js: !!p replaced with !p
Mutant 261 in q.js: !!p replaced with p && true
Mutant 262 in q.js: !!p replaced with p || false
Mutant 263 in q.js: p = p.source replaced with p = p.source.source
Mutant 264 in q.js: p = p.source replaced with p = p.source.source.source
Mutant 265 in q.js: p = p.source replaced with p = p.source.source.source.source
Mutant 266 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)
Mutant 267 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ !== p.stackCounter)
Mutant 268 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ > p.stackCounter
Mutant 269 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 270 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 271 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: 0,
  configurable: true
})
Mutant 272 in q.js: "__minimumStackCounter__" replaced with "__maximumStackCounter__"
Mutant 273 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__"
Mutant 274 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__" + 1
Mutant 275 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 276 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 277 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 278 in q.js: stacks.unshift replaced with stacks.pop
Mutant 279 in q.js: stacks.unshift replaced with stacks.shift
Mutant 280 in q.js: stacks.unshift replaced with stacks.push
Mutant 281 in q.js: p.stack replaced with p.stack.slice(0, p.stack.indexOf("@"))
Mutant 282 in q.js: p.stack replaced with p.stack.slice(0, p.stack.indexOf("@")) + "foo"
Mutant 283 in q.js: p.stack replaced with p.stack.slice(0, p.stack.indexOf("@")) + p.stack.slice(p.stack.indexOf("@"))
Mutant 284 in q.js: error.stack replaced with error.message
Mutant 285 in q.js: error.stack replaced with error.name
Mutant 286 in q.js: error.stack replaced with error.toString()
Mutant 287 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + " "
Mutant 288 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + ""
Mutant 289 in q.js: concatedStacks replaced with concatedStacks.toLowerCase()
Mutant 290 in q.js: concatedStacks replaced with concatedStacks.split("").reverse().join("")
Mutant 291 in q.js: concatedStacks replaced with concatedStacks.replace("stack", "trace")
Mutant 292 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack + "foo",
  configurable: true
})
Mutant 293 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  enumerable: true
})
Mutant 294 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  writable: true
})
Mutant 295 in q.js: "stack" replaced with "stacktrace"
Mutant 296 in q.js: "stack" replaced with "error"
Mutant 297 in q.js: "stack" replaced with "trace"
Mutant 298 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack + "foo",
  configurable: true
}
Mutant 299 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  enumerable: true
}
Mutant 300 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  writable: false
}
Mutant 301 in q.js: stackString.split replaced with stackString.slice
Mutant 302 in q.js: stackString.split replaced with stackString.substring
Mutant 303 in q.js: "\n" replaced with "\t"
Mutant 304 in q.js: "\n" replaced with "\r"
Mutant 305 in q.js: "\n" replaced with " "
Mutant 306 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 307 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = this.length - 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 308 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = Math.floor(Math.random() * this.length); i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 309 in q.js: i < lines.length replaced with i <= lines.length
Mutant 310 in q.js: i < lines.length replaced with i > lines.length
Mutant 311 in q.js: i < lines.length replaced with i >= lines.length
Mutant 312 in q.js: ++i replaced with i--
Mutant 313 in q.js: ++i replaced with i += 2
Mutant 314 in q.js: ++i replaced with i *= 2
Mutant 315 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with line && !isInternalFrame(line) && !isNodeFrame(line)
Mutant 316 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with line && !isInternalFrame(line) && !isNodeFrame(line) && line.indexOf("qFileName") >= 0
Mutant 317 in q.js: isInternalFrame replaced with isExternalFrame
Mutant 318 in q.js: isInternalFrame replaced with isInternalFrame || isExternalFrame
Mutant 319 in q.js: line replaced with line.split("")
Mutant 320 in q.js: line replaced with line.split(" ")[0]
Mutant 321 in q.js: line replaced with line.includes("node.js")
Mutant 322 in q.js: isNodeFrame replaced with isNodeFrame || isInternalFrame
Mutant 323 in q.js: isNodeFrame replaced with isNodeFrame && isInternalFrame
Mutant 324 in q.js: isNodeFrame replaced with isNodeFrame ^ isInternalFrame
Mutant 325 in q.js: desiredLines.push replaced with desiredLines.pop
Mutant 326 in q.js: desiredLines.push replaced with desiredLines.shift
Mutant 327 in q.js: desiredLines.push replaced with desiredLines.unshift
Mutant 328 in q.js: line replaced with line + 1
Mutant 329 in q.js: line replaced with line - 1
Mutant 330 in q.js: line replaced with line * 2
Mutant 331 in q.js: desiredLines.join replaced with desiredLines.push
Mutant 332 in q.js: desiredLines.join replaced with desiredLines.reverse
Mutant 333 in q.js: desiredLines.join replaced with desiredLines.sort
Mutant 334 in q.js: "\n" replaced with "\t"
Mutant 335 in q.js: "\n" replaced with " "
Mutant 336 in q.js: "\n" replaced with ""
Mutant 337 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 338 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 339 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 340 in q.js: "(module.js:" replaced with "(module.js:0)"
Mutant 341 in q.js: "(module.js:" replaced with "(module.js:1)"
Mutant 342 in q.js: "(module.js:" replaced with "(module.js:2)"
Mutant 343 in q.js: stackLine.indexOf replaced with stackLine.lastIndexOf
Mutant 344 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 345 in q.js: stackLine.indexOf replaced with stackLine.startsWith
Mutant 346 in q.js: "(node.js:" replaced with "(node.js:)"
Mutant 347 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 348 in q.js: stackLine replaced with stackLine.split(" ").pop()
Mutant 349 in q.js: stackLine replaced with stackLine.split(" ")[1]
Mutant 350 in q.js: attempt1 replaced with attempt2
Mutant 351 in q.js: attempt1 replaced with attempt3
Mutant 352 in q.js: attempt1 replaced with attempt1 + attempt2
Mutant 353 in q.js: Number replaced with "string"
Mutant 354 in q.js: Number replaced with null
Mutant 355 in q.js: Number replaced with undefined
Mutant 356 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 357 in q.js: attempt1[2] replaced with attempt2[1]
Mutant 358 in q.js: attempt1[2] replaced with attempt1[1] + attempt2[2]
Mutant 359 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 360 in q.js: stackLine replaced with stackLine.substring(1)
Mutant 361 in q.js: attempt2 replaced with attempt2[2]
Mutant 362 in q.js: attempt2 replaced with attempt2[1]
Mutant 363 in q.js: attempt2 replaced with attempt2[0]
Mutant 364 in q.js: Number replaced with "a"
Mutant 365 in q.js: Number replaced with NaN
Mutant 366 in q.js: Number replaced with null
Mutant 367 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 368 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 369 in q.js: attempt2[2] replaced with attempt2[attempt2.length - 1]
Mutant 370 in q.js: stackLine replaced with stackLine.split("\n")[0]
Mutant 371 in q.js: stackLine replaced with stackLine.split("\n")[1]
Mutant 372 in q.js: stackLine replaced with stackLine.split("\n").slice(-1)
Mutant 373 in q.js: attempt3 replaced with attempt3[1] > attempt3[2]
Mutant 374 in q.js: attempt3 replaced with attempt3[1] === attempt3[2]
Mutant 375 in q.js: attempt3 replaced with attempt3[1] !== attempt3[2]
Mutant 376 in q.js: Number replaced with "1"
Mutant 377 in q.js: Number replaced with null
Mutant 378 in q.js: Number replaced with undefined
Mutant 379 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 380 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 381 in q.js: attempt3[2] replaced with attempt3[4]
Mutant 382 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[0]
Mutant 383 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber.length
Mutant 384 in q.js: !fileNameAndLineNumber replaced with !fileNameAndLineNumber[0]
Mutant 385 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 386 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === "undefined"
Mutant 387 in q.js: !hasStacks replaced with hasStacks === false
Mutant 388 in q.js: !hasStacks replaced with hasStacks !== true
Mutant 389 in q.js: "\n" replaced with "\t"
Mutant 390 in q.js: "\n" replaced with " "
Mutant 391 in q.js: "\n" replaced with "_"
Mutant 392 in q.js: lines[0].indexOf replaced with lines[0].includes
Mutant 393 in q.js: lines[0].indexOf replaced with lines[0].lastIndexOf
Mutant 394 in q.js: lines[0].indexOf replaced with lines[0].length
Mutant 395 in q.js: "@" replaced with "#"
Mutant 396 in q.js: "@" replaced with "%"
Mutant 397 in q.js: "@" replaced with "&"
Mutant 398 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[0]
Mutant 399 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0]
Mutant 400 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length
Mutant 401 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.includes(0)
Mutant 402 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.log("Deprecation warning: Q.defer is deprecated and will be removed in a future version. Use Q.Promise instead.")
Mutant 403 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn("Deprecation warning: Q.defer is deprecated and will be removed in a future version. Use Q.Promise instead.")
Mutant 404 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, arguments[0])
Mutant 405 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, arguments.slice(1))
Mutant 406 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, [])
Mutant 407 in q.js: callback.apply replaced with promise.reject
Mutant 408 in q.js: callback.apply replaced with promise.resolve
Mutant 409 in q.js: callback.apply replaced with promise.then
Mutant 410 in q.js: callback replaced with function () {
  throw new Error("This is a bug");
}
Mutant 411 in q.js: callback replaced with function () {
  return "This is a bug";
}
Mutant 412 in q.js: callback replaced with function () {
  return Promise.reject("This is a bug");
}
Mutant 413 in q.js: arguments replaced with null
Mutant 414 in q.js: arguments replaced with []
Mutant 415 in q.js: arguments replaced with new Object()
Mutant 416 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 417 in q.js: value instanceof Promise replaced with typeof value === "Promise"
Mutant 418 in q.js: value instanceof Promise replaced with value instanceof Object
Mutant 419 in q.js: isPromiseAlike(value) replaced with value !== null
Mutant 420 in q.js: isPromiseAlike(value) replaced with value !== undefined
Mutant 421 in q.js: isPromiseAlike(value) replaced with typeof value === "object"
Mutant 422 in q.js: isPromiseAlike replaced with !isPromiseAlike
Mutant 423 in q.js: value replaced with value + 1
Mutant 424 in q.js: value replaced with value * 2
Mutant 425 in q.js: value replaced with value - 1
Mutant 426 in q.js: value replaced with value + 1
Mutant 427 in q.js: value replaced with value * 2
Mutant 428 in q.js: value replaced with value - 1
Mutant 429 in q.js: fulfill replaced with reject
Mutant 430 in q.js: value replaced with null
Mutant 431 in q.js: value replaced with undefined
Mutant 432 in q.js: value replaced with new Error("The value is not a promise")
Mutant 433 in q.js: object_create replaced with null
Mutant 434 in q.js: object_create replaced with undefined
Mutant 435 in q.js: object_create replaced with {}
Mutant 436 in q.js: defer.prototype replaced with object_create(Promise.prototype)
Mutant 437 in q.js: defer.prototype replaced with object_create(Object.prototype)
Mutant 438 in q.js: defer.prototype replaced with object_create(null)
Mutant 439 in q.js: object_create replaced with null
Mutant 440 in q.js: object_create replaced with undefined
Mutant 441 in q.js: object_create replaced with {}
Mutant 442 in q.js: Promise.prototype replaced with Object.prototype
Mutant 443 in q.js: Promise.prototype replaced with Promise.prototype.constructor
Mutant 444 in q.js: Promise.prototype replaced with null
Mutant 445 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 446 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 447 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 448 in q.js: messages replaced with messages.length
Mutant 449 in q.js: messages replaced with messages.length > 0
Mutant 450 in q.js: messages replaced with messages.length === 0
Mutant 451 in q.js: messages.push replaced with messages.unshift
Mutant 452 in q.js: messages.push replaced with messages.length = 0
Mutant 453 in q.js: messages.push replaced with messages.pop
Mutant 454 in q.js: args replaced with args[0]
Mutant 455 in q.js: args replaced with args[1]
Mutant 456 in q.js: args replaced with args.slice(1)
Mutant 457 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 458 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[1]
Mutant 459 in q.js: op === "when" && operands[1] replaced with op !== "when" || operands[1]
Mutant 460 in q.js: progressListeners.push replaced with progressListeners.pop
Mutant 461 in q.js: progressListeners.push replaced with progressListeners.shift
Mutant 462 in q.js: progressListeners.push replaced with progressListeners.unshift
Mutant 463 in q.js: operands[1] replaced with operands[0]
Mutant 464 in q.js: operands[1] replaced with operands[2]
Mutant 465 in q.js: operands[1] replaced with null
Mutant 466 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(promise, args)
Mutant 467 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise, args.concat([1]))
Mutant 468 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise, args.slice(1))
Mutant 469 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 470 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.bind
Mutant 471 in q.js: resolvedPromise replaced with null
Mutant 472 in q.js: resolvedPromise replaced with undefined
Mutant 473 in q.js: resolvedPromise replaced with promise
Mutant 474 in q.js: args replaced with args[0]
Mutant 475 in q.js: args replaced with args.slice(1)
Mutant 476 in q.js: args replaced with args.concat(["extra"])
Mutant 477 in q.js: messages replaced with messages.length
Mutant 478 in q.js: messages replaced with !messages
Mutant 479 in q.js: messages replaced with messages[0]
Mutant 480 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 481 in q.js: resolvedPromise replaced with resolvedPromise.value
Mutant 482 in q.js: resolvedPromise replaced with fulfill(resolvedPromise)
Mutant 483 in q.js: isPromise(nearerValue) replaced with nearerValue !== null
Mutant 484 in q.js: isPromise(nearerValue) replaced with nearerValue !== undefined
Mutant 485 in q.js: isPromise(nearerValue) replaced with nearerValue !== 0
Mutant 486 in q.js: isPromise replaced with isPromiseAlike
Mutant 487 in q.js: isPromise replaced with !isPromise
Mutant 488 in q.js: isPromise replaced with isPromise && isPromiseAlike
Mutant 489 in q.js: nearerValue replaced with nearerValue + 1
Mutant 490 in q.js: nearerValue replaced with nearerValue - 1
Mutant 491 in q.js: nearerValue replaced with nearerValue * 2
Mutant 492 in q.js: !resolvedPromise replaced with resolvedPromise === undefined
Mutant 493 in q.js: !resolvedPromise replaced with resolvedPromise !== undefined
Mutant 494 in q.js: !resolvedPromise replaced with resolvedPromise === null
Mutant 495 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 496 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 497 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport || hasStacks
Mutant 498 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.length
Mutant 499 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.split("\n").length
Mutant 500 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.split("\n")[0].length
Mutant 501 in q.js: e.stack.indexOf replaced with e.stack.lastIndexOf
Mutant 502 in q.js: e.stack.indexOf replaced with e.stack.includes
Mutant 503 in q.js: e.stack.indexOf replaced with e.stack.findIndex
Mutant 504 in q.js: "\n" replaced with "\t"
Mutant 505 in q.js: "\n" replaced with " "
Mutant 506 in q.js: "\n" replaced with "\\n"
Mutant 507 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport && hasStacks
Mutant 508 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 509 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 510 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message[0])
Mutant 511 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.slice(1))
Mutant 512 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.length)
Mutant 513 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 514 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.bind
Mutant 515 in q.js: newPromise replaced with null
Mutant 516 in q.js: newPromise replaced with undefined
Mutant 517 in q.js: newPromise replaced with 0
Mutant 518 in q.js: message replaced with message.length
Mutant 519 in q.js: message replaced with message[0]
Mutant 520 in q.js: message replaced with message.slice(1)
Mutant 521 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 522 in q.js: resolvedPromise replaced with resolvedPromise === false
Mutant 523 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 524 in q.js: Q(value) replaced with Q(reject(value))
Mutant 525 in q.js: Q(value) replaced with Q(value).then(reject)
Mutant 526 in q.js: Q(value) replaced with Q(value).then(function () {
  throw new Error("test");
})
Mutant 527 in q.js: Q replaced with Q.reject
Mutant 528 in q.js: value replaced with value + 1
Mutant 529 in q.js: value replaced with value * 2
Mutant 530 in q.js: value replaced with value - 1
Mutant 531 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 532 in q.js: resolvedPromise replaced with resolvedPromise === null
Mutant 533 in q.js: resolvedPromise replaced with resolvedPromise !== undefined
Mutant 534 in q.js: fulfill(value) replaced with reject(value)
Mutant 535 in q.js: fulfill(value) replaced with fulfill(otherValue)
Mutant 536 in q.js: fulfill(value) replaced with fulfill(value + 1)
Mutant 537 in q.js: value replaced with value - 1
Mutant 538 in q.js: value replaced with value * 2
Mutant 539 in q.js: resolvedPromise replaced with resolvedPromise = undefined
Mutant 540 in q.js: resolvedPromise replaced with resolvedPromise = null
Mutant 541 in q.js: resolvedPromise replaced with resolvedPromise = new Promise(() => {})
Mutant 542 in q.js: reject replaced with resolve
Mutant 543 in q.js: reject replaced with fulfill
Mutant 544 in q.js: reason replaced with reason.message
Mutant 545 in q.js: reason replaced with reason + "error"
Mutant 546 in q.js: reason replaced with {
  error: reason
}
Mutant 547 in q.js: resolvedPromise replaced with progressListeners.length
Mutant 548 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 549 in q.js: resolvedPromise replaced with typeof resolvedPromise === "undefined"
Mutant 550 in q.js: progress replaced with "progress"
Mutant 551 in q.js: progress replaced with progress + 1
Mutant 552 in q.js: progress replaced with progress * 2
Mutant 553 in q.js: arguments.length > 2 replaced with arguments.length > 1
Mutant 554 in q.js: arguments.length > 2 replaced with arguments.length === 0
Mutant 555 in q.js: arguments.length > 2 replaced with arguments[0] > 2
Mutant 556 in q.js: self.resolve replaced with self.fulfill
Mutant 557 in q.js: self.resolve replaced with self.reject
Mutant 558 in q.js: self.resolve replaced with self.notify
Mutant 559 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 560 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0, 1)
Mutant 561 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 1, 2)
Mutant 562 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 563 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1, 2))
Mutant 564 in q.js: arguments replaced with -1
Mutant 565 in q.js: 1 replaced with 3
Mutant 566 in q.js: 1 replaced with 4
Mutant 567 in q.js: self.resolve replaced with self.reject
Mutant 568 in q.js: self.resolve replaced with self.notify
Mutant 569 in q.js: self.resolve replaced with self.fulfill
Mutant 570 in q.js: value replaced with null
Mutant 571 in q.js: value replaced with undefined
Mutant 572 in q.js: value replaced with "value"
Mutant 573 in q.js: typeof resolver !== "function" replaced with resolver === null
Mutant 574 in q.js: typeof resolver !== "function" replaced with typeof resolver !== "object"
Mutant 575 in q.js: typeof resolver !== "function" replaced with resolver.constructor !== Function
Mutant 576 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.resolve, deferred.notify)
Mutant 577 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.notify, deferred.resolve, deferred.reject)
Mutant 578 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.notify, deferred.resolve)
Mutant 579 in q.js: deferred.resolve replaced with deferred.reject
Mutant 580 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 581 in q.js: deferred.resolve replaced with deferred.notify
Mutant 582 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 583 in q.js: deferred.reject replaced with deferred.notify
Mutant 584 in q.js: deferred.reject replaced with deferred.makeNodeResolver
Mutant 585 in q.js: deferred.notify replaced with deferred.reject
Mutant 586 in q.js: deferred.notify replaced with promise.notify
Mutant 587 in q.js: deferred.notify replaced with Q.notify
Mutant 588 in q.js: reason replaced with "error"
Mutant 589 in q.js: reason replaced with null
Mutant 590 in q.js: reason replaced with undefined
Mutant 591 in q.js: x replaced with y
Mutant 592 in q.js: x replaced with x + 1
Mutant 593 in q.js: x replaced with null
Mutant 594 in q.js: y replaced with x
Mutant 595 in q.js: y replaced with x + y
Mutant 596 in q.js: y replaced with null
Mutant 597 in q.js: Q replaced with Q.reject
Mutant 598 in q.js: Q replaced with Q.resolve
Mutant 599 in q.js: Q replaced with Q.defer
Mutant 600 in q.js: [this, that] replaced with [that, this]
Mutant 601 in q.js: [this, that] replaced with [this, this]
Mutant 602 in q.js: [this, that] replaced with [null, null]
Mutant 603 in q.js: x === y replaced with x !== y
Mutant 604 in q.js: x === y replaced with x == y
Mutant 605 in q.js: x === y replaced with x === y || x === z
Mutant 606 in q.js: i < len replaced with i > len
Mutant 607 in q.js: i < len replaced with i <= len
Mutant 608 in q.js: i < len replaced with i >= len
Mutant 609 in q.js: i++ replaced with i--
Mutant 610 in q.js: i++ replaced with i += 2
Mutant 611 in q.js: i++ replaced with i = answerPs.length - 1
Mutant 612 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, exception)
Mutant 613 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve)
Mutant 614 in q.js: answerPs[i] replaced with answerPs[i + 1]
Mutant 615 in q.js: answerPs[i] replaced with answerPs[i - 1]
Mutant 616 in q.js: resolve replaced with reject
Mutant 617 in q.js: resolve replaced with undefined
Mutant 618 in q.js: reject replaced with resolve
Mutant 619 in q.js: this.then replaced with null
Mutant 620 in q.js: this.then replaced with undefined
Mutant 621 in q.js: Q.race replaced with Q.all
Mutant 622 in q.js: Q.race replaced with Q.reject
Mutant 623 in q.js: Q.race replaced with Q.resolve
Mutant 624 in q.js: fallback === void 0 replaced with fallback === null
Mutant 625 in q.js: fallback === void 0 replaced with fallback !== void 0
Mutant 626 in q.js: fallback === void 0 replaced with typeof fallback !== "function"
Mutant 627 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 628 in q.js: inspect === void 0 replaced with inspect === null
Mutant 629 in q.js: inspect === void 0 replaced with inspect === 0
Mutant 630 in q.js: Promise.prototype replaced with Object.prototype
Mutant 631 in q.js: Promise.prototype replaced with Function.prototype
Mutant 632 in q.js: Promise.prototype replaced with Array.prototype
Mutant 633 in q.js: descriptor[op] replaced with descriptor[op] = function () {}
Mutant 634 in q.js: descriptor[op] replaced with descriptor[op] = null
Mutant 635 in q.js: descriptor[op] replaced with descriptor[op] = function () {
  throw new Error("test error");
}
Mutant 636 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(null)
Mutant 637 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(undefined)
Mutant 638 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(this)
Mutant 639 in q.js: descriptor[op].apply replaced with descriptor[op].call
Mutant 640 in q.js: descriptor[op].apply replaced with descriptor[op].bind
Mutant 641 in q.js: promise replaced with null
Mutant 642 in q.js: promise replaced with undefined
Mutant 643 in q.js: promise replaced with {}
Mutant 644 in q.js: args replaced with args.slice(1)
Mutant 645 in q.js: args replaced with args.concat(1)
Mutant 646 in q.js: args replaced with args.map(function (x) {
  return x + 1;
})
Mutant 647 in q.js: promise replaced with null
Mutant 648 in q.js: promise replaced with undefined
Mutant 649 in q.js: promise replaced with {}.promiseDispatch
Mutant 650 in q.js: op replaced with op + 1
Mutant 651 in q.js: op replaced with op - 1
Mutant 652 in q.js: op replaced with op * 2
Mutant 653 in q.js: args replaced with args[0]
Mutant 654 in q.js: args replaced with args[1]
Mutant 655 in q.js: args replaced with args[2]
Mutant 656 in q.js: reject replaced with resolve
Mutant 657 in q.js: exception replaced with null
Mutant 658 in q.js: exception replaced with undefined
Mutant 659 in q.js: exception replaced with new Error("test")
Mutant 660 in q.js: resolve replaced with !resolve
Mutant 661 in q.js: resolve replaced with resolve(null)
Mutant 662 in q.js: resolve replaced with resolve(reject)
Mutant 663 in q.js: resolve replaced with reject
Mutant 664 in q.js: result replaced with null
Mutant 665 in q.js: result replaced with undefined
Mutant 666 in q.js: result replaced with false
Mutant 667 in q.js: inspect replaced with inspect.state
Mutant 668 in q.js: inspect replaced with inspect()
Mutant 669 in q.js: inspect replaced with inspect.bind(this)
Mutant 670 in q.js: inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 671 in q.js: inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 672 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 673 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 674 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 675 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "pending"
Mutant 676 in q.js: defer replaced with defer.promise
Mutant 677 in q.js: defer replaced with defer.resolve
Mutant 678 in q.js: defer replaced with defer.reject
Mutant 679 in q.js: fulfilled replaced with rejected
Mutant 680 in q.js: value replaced with null
Mutant 681 in q.js: value replaced with undefined
Mutant 682 in q.js: value replaced with 0
Mutant 683 in q.js: reject replaced with undefined
Mutant 684 in q.js: exception replaced with exception.message
Mutant 685 in q.js: exception replaced with new Error(exception)
Mutant 686 in q.js: exception replaced with exception.stack
Mutant 687 in q.js: typeof rejected === "function" replaced with rejected !== null
Mutant 688 in q.js: typeof rejected === "function" replaced with rejected !== undefined
Mutant 689 in q.js: typeof rejected === "function" replaced with typeof rejected !== "undefined"
Mutant 690 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self.promiseDispatch)
Mutant 691 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self.promiseDispatch.bind(exception))
Mutant 692 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, Q.resolve(exception))
Mutant 693 in q.js: exception replaced with exception.message
Mutant 694 in q.js: exception replaced with exception.stack
Mutant 695 in q.js: rejected replaced with fulfilled
Mutant 696 in q.js: exception replaced with null
Mutant 697 in q.js: exception replaced with new Error("Different error message")
Mutant 698 in q.js: exception replaced with undefined
Mutant 699 in q.js: newException replaced with newException.message
Mutant 700 in q.js: newException replaced with null
Mutant 701 in q.js: newException replaced with undefined
Mutant 702 in q.js: exception replaced with null
Mutant 703 in q.js: exception replaced with new Error("A different error message")
Mutant 704 in q.js: exception replaced with undefined
Mutant 705 in q.js: value replaced with null
Mutant 706 in q.js: value replaced with undefined
Mutant 707 in q.js: value replaced with "foo"
Mutant 708 in q.js: done replaced with !done
Mutant 709 in q.js: done replaced with done === true
Mutant 710 in q.js: done replaced with done !== false
Mutant 711 in q.js: deferred.resolve replaced with deferred.reject
Mutant 712 in q.js: deferred.resolve replaced with deferred.notify
Mutant 713 in q.js: deferred.resolve replaced with deferred.then
Mutant 714 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 715 in q.js: _fulfilled(value) replaced with _fulfilled(reject(value))
Mutant 716 in q.js: _fulfilled(value) replaced with _fulfilled(value + 1)
Mutant 717 in q.js: _fulfilled replaced with _progressed
Mutant 718 in q.js: value replaced with undefined
Mutant 719 in q.js: value replaced with null
Mutant 720 in q.js: value replaced with 0
Mutant 721 in q.js: done replaced with !done
Mutant 722 in q.js: done replaced with done == false
Mutant 723 in q.js: done replaced with done !== true
Mutant 724 in q.js: deferred.resolve replaced with deferred.reject
Mutant 725 in q.js: deferred.resolve replaced with deferred.notify
Mutant 726 in q.js: deferred.resolve replaced with Q.reject
Mutant 727 in q.js: _rejected(exception) replaced with _rejected(new Error("Injected error"))
Mutant 728 in q.js: _rejected(exception) replaced with _rejected(null)
Mutant 729 in q.js: _rejected(exception) replaced with _rejected(undefined)
Mutant 730 in q.js: _rejected replaced with _fulfilled
Mutant 731 in q.js: _rejected replaced with _progressed
Mutant 732 in q.js: exception replaced with exception.message
Mutant 733 in q.js: exception replaced with new Error(exception.message)
Mutant 734 in q.js: _progressed replaced with _rejected
Mutant 735 in q.js: _progressed replaced with _fulfilled
Mutant 736 in q.js: value replaced with null
Mutant 737 in q.js: value replaced with undefined
Mutant 738 in q.js: value replaced with 0
Mutant 739 in q.js: Q.onerror replaced with Q.onerror()
Mutant 740 in q.js: Q.onerror replaced with Q.onerror = function () {
  return;
}
Mutant 741 in q.js: Q.onerror replaced with Q.onerror = function () {
  throw new Error();
}
Mutant 742 in q.js: e replaced with e.message
Mutant 743 in q.js: e replaced with e.stack
Mutant 744 in q.js: e replaced with e.name
Mutant 745 in q.js: !threw replaced with threw
Mutant 746 in q.js: !threw replaced with false
Mutant 747 in q.js: newValue replaced with null
Mutant 748 in q.js: newValue replaced with undefined
Mutant 749 in q.js: newValue replaced with "foo"
Mutant 750 in q.js: Q replaced with 1
Mutant 751 in q.js: Q replaced with "string"
Mutant 752 in q.js: Q replaced with null
Mutant 753 in q.js: callback replaced with callback.call(null)
Mutant 754 in q.js: callback replaced with callback.bind(null)
Mutant 755 in q.js: callback replaced with callback.apply(null)
Mutant 756 in q.js: callback replaced with null
Mutant 757 in q.js: callback replaced with undefined
Mutant 758 in q.js: callback replaced with 0
Mutant 759 in q.js: value replaced with null
Mutant 760 in q.js: value replaced with undefined
Mutant 761 in q.js: value replaced with 0
Mutant 762 in q.js: value replaced with null
Mutant 763 in q.js: value replaced with undefined
Mutant 764 in q.js: value replaced with Promise.reject(new Error("something went wrong"))
Mutant 765 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed.reverse())
Mutant 766 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed.slice(1))
Mutant 767 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed.concat(["extra"]))
Mutant 768 in q.js: value replaced with value + 1
Mutant 769 in q.js: value replaced with value * 2
Mutant 770 in q.js: value replaced with value - 1
Mutant 771 in q.js: fulfilled replaced with rejected
Mutant 772 in q.js: fulfilled replaced with undefined
Mutant 773 in q.js: fulfilled replaced with null
Mutant 774 in q.js: rejected replaced with fulfilled
Mutant 775 in q.js: rejected replaced with undefined
Mutant 776 in q.js: progressed replaced with null
Mutant 777 in q.js: progressed replaced with undefined
Mutant 778 in q.js: progressed replaced with () => {}
Mutant 779 in q.js: function () {
  return value;
} replaced with function () {
  return null;
}
Mutant 780 in q.js: function () {
  return value;
} replaced with function () {
  return undefined;
}
Mutant 781 in q.js: function () {
  return value;
} replaced with function () {
  return this;
}
Mutant 782 in q.js: promise replaced with null
Mutant 783 in q.js: promise replaced with undefined
Mutant 784 in q.js: promise replaced with {}
Mutant 785 in q.js: value replaced with value + 1
Mutant 786 in q.js: value replaced with value * 2
Mutant 787 in q.js: value replaced with value - 1
Mutant 788 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 789 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error(reason);
}
Mutant 790 in q.js: function () {
  throw reason;
} replaced with function () {
  return Q.reject(reason);
}
Mutant 791 in q.js: promise replaced with null
Mutant 792 in q.js: promise replaced with undefined
Mutant 793 in q.js: promise replaced with 0
Mutant 794 in q.js: reason replaced with null
Mutant 795 in q.js: reason replaced with undefined
Mutant 796 in q.js: reason replaced with Promise.reject(reason)
Mutant 797 in q.js: isPromise(value) replaced with isPromiseAlike(value)
Mutant 798 in q.js: isPromise(value) replaced with !isPromise(value)
Mutant 799 in q.js: isPromise(value) replaced with value instanceof Promise
Mutant 800 in q.js: isPromise replaced with isFulfilled
Mutant 801 in q.js: isPromise replaced with isRejected
Mutant 802 in q.js: value replaced with !value
Mutant 803 in q.js: value replaced with value + 1
Mutant 804 in q.js: value replaced with value * 0
Mutant 805 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 806 in q.js: inspected.state === "fulfilled" replaced with inspected.value === undefined
Mutant 807 in q.js: inspected.state === "fulfilled" replaced with inspected.state !== "fulfilled"
Mutant 808 in q.js: isObject replaced with !isObject
Mutant 809 in q.js: isObject replaced with isArray
Mutant 810 in q.js: isObject replaced with isFunction
Mutant 811 in q.js: object replaced with object.foo
Mutant 812 in q.js: object replaced with object.bar
Mutant 813 in q.js: object replaced with object.baz
Mutant 814 in q.js: isPromise replaced with isPromiseAlike
Mutant 815 in q.js: isPromise replaced with isObject
Mutant 816 in q.js: isPromise replaced with isString
Mutant 817 in q.js: object replaced with null
Mutant 818 in q.js: object replaced with undefined
Mutant 819 in q.js: object replaced with 0
Mutant 820 in q.js: object.inspect replaced with object.inspect.state
Mutant 821 in q.js: object.inspect replaced with object.inspect.then
not replacing object.inspect with object.inspect.state
not replacing object.inspect with object.inspect.then
Mutant 822 in q.js: isPromise replaced with isPromiseAlike
Mutant 823 in q.js: isPromise replaced with isNotPromise
Mutant 824 in q.js: object replaced with !object
Mutant 825 in q.js: object replaced with undefined
Mutant 826 in q.js: object replaced with null
Mutant 827 in q.js: this.inspect replaced with this.inspect.state
not replacing this.inspect with this.inspect.state
Mutant 828 in q.js: isPromise replaced with !isPromise
Mutant 829 in q.js: isPromise replaced with isPromiseAlike
Mutant 830 in q.js: isPromise replaced with isFulfilled
Mutant 831 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 832 in q.js: object replaced with object.inspect().state !== "rejected"
Mutant 833 in q.js: object replaced with object.inspect().state === "pending"
Mutant 834 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === true
Mutant 835 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== false
Mutant 836 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections == false
Mutant 837 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 838 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 839 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with promise === unhandledRejections[0]
Mutant 840 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with promise.inspect().state === "rejected"
Mutant 841 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, reason)
Mutant 842 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons, promise)
Mutant 843 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, promise)
Mutant 844 in q.js: array_indexOf replaced with unhandledRejections.length - 1
Mutant 845 in q.js: array_indexOf replaced with unhandledRejections[promise]
Mutant 846 in q.js: array_indexOf replaced with promise in unhandledRejections
Mutant 847 in q.js: unhandledRejections replaced with unhandledRejections.length
Mutant 848 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 849 in q.js: promise replaced with unhandledRejections.length
Mutant 850 in q.js: promise replaced with reportedUnhandledRejections.length
Mutant 851 in q.js: promise replaced with unhandledReasons.length
Mutant 852 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "abc"
Mutant 853 in q.js: "unhandledRejection" replaced with "unhandledRejection" + 1
Mutant 854 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "xyz"
Mutant 855 in q.js: reason replaced with reason.stack.toLowerCase()
Mutant 856 in q.js: reason replaced with reason.message
Mutant 857 in q.js: reason replaced with reason.stack.split("\n")[0]
Mutant 858 in q.js: promise replaced with promise.then(function () {
  throw new Error("Oh no!");
})
Mutant 859 in q.js: promise replaced with promise.then(function () {
  return Q.reject("Oh no!");
})
Mutant 860 in q.js: promise replaced with promise.then(function () {
  return Q.reject("Oh no!");
}, function () {
  throw new Error("Oh no!");
})
Mutant 861 in q.js: promise replaced with promise.then(function () {
  throw new Error("Test error");
})
Mutant 862 in q.js: promise replaced with promise.then(function () {
  return 42;
})
Mutant 863 in q.js: promise replaced with promise.then(function () {
  return Q.reject("Test error");
})
Mutant 864 in q.js: unhandledRejections.push replaced with unhandledRejections.pop
Mutant 865 in q.js: unhandledRejections.push replaced with unhandledReasons.push
Mutant 866 in q.js: promise replaced with null
Mutant 867 in q.js: promise replaced with undefined
Mutant 868 in q.js: promise replaced with Q.reject(reason)
Mutant 869 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== undefined
Mutant 870 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== null
Mutant 871 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined"
Mutant 872 in q.js: reason.stack replaced with reason.message
Mutant 873 in q.js: reason.stack replaced with reason.name
Mutant 874 in q.js: reason.stack replaced with reason.code
Mutant 875 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.stack
Mutant 876 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.toString()
Mutant 877 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.message
Mutant 878 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 879 in q.js: !trackUnhandledRejections replaced with unhandledRejections.length > 0
Mutant 880 in q.js: !trackUnhandledRejections replaced with reportedUnhandledRejections.length > 0
Mutant 881 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.slice(), promise)
Mutant 882 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.concat(promise), promise)
Mutant 883 in q.js: unhandledRejections replaced with unhandledRejections.length
Mutant 884 in q.js: unhandledRejections replaced with unhandledRejections.pop()
Mutant 885 in q.js: unhandledRejections replaced with unhandledRejections.indexOf(promise)
Mutant 886 in q.js: promise replaced with promise.then(function () {})
Mutant 887 in q.js: promise replaced with promise.catch(function () {})
Mutant 888 in q.js: promise replaced with promise.finally(function () {})
Mutant 889 in q.js: at !== -1 replaced with at > -1
Mutant 890 in q.js: at !== -1 replaced with at < -1
Mutant 891 in q.js: at !== -1 replaced with at === -1
Mutant 892 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, unhandledRejections)
Mutant 893 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, unhandledReasons)
Mutant 894 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 895 in q.js: array_indexOf replaced with array_includes
Mutant 896 in q.js: array_indexOf replaced with array_findIndex
Mutant 897 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 898 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.slice()
Mutant 899 in q.js: reportedUnhandledRejections replaced with Q.getUnhandledReasons()
Mutant 900 in q.js: promise replaced with null
Mutant 901 in q.js: promise replaced with undefined
Mutant 902 in q.js: promise replaced with {}
Mutant 903 in q.js: atReport !== -1 replaced with atReport === -1
Mutant 904 in q.js: atReport !== -1 replaced with reportedUnhandledRejections.length > 0
Mutant 905 in q.js: atReport !== -1 replaced with !reportedUnhandledRejections.includes(promise)
Mutant 906 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at + 1], promise)
Mutant 907 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at - 1], promise)
Mutant 908 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at + 2], promise)
Mutant 909 in q.js: "rejectionHandled" replaced with "unhandledRejection"
Mutant 910 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 911 in q.js: unhandledReasons[at] replaced with unhandledReasons[at - 1]
Mutant 912 in q.js: unhandledReasons[at] replaced with unhandledReasons.length
Mutant 913 in q.js: promise replaced with promise.then(function () {})
Mutant 914 in q.js: promise replaced with promise.catch(function () {})
Mutant 915 in q.js: promise replaced with promise.finally(function () {})
Mutant 916 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 0)
Mutant 917 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 2)
Mutant 918 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, -1)
Mutant 919 in q.js: atReport replaced with atReport + 1
Mutant 920 in q.js: atReport replaced with atReport - 1
Mutant 921 in q.js: atReport replaced with reportedUnhandledRejections.length - 1
Mutant 922 in q.js: 1 replaced with 0
Mutant 923 in q.js: 1 replaced with 2
Mutant 924 in q.js: 1 replaced with -1
Mutant 925 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 0)
Mutant 926 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 2)
Mutant 927 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, -1)
Mutant 928 in q.js: unhandledRejections.splice replaced with unhandledRejections = []
Mutant 929 in q.js: at replaced with at + 1
Mutant 930 in q.js: at replaced with at - 1
Mutant 931 in q.js: at replaced with at + 2
Mutant 932 in q.js: 1 replaced with 0
Mutant 933 in q.js: 1 replaced with -1
Mutant 934 in q.js: 1 replaced with undefined
Mutant 935 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 0)
Mutant 936 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 2)
Mutant 937 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, unhandledReasons.length - 1)
Mutant 938 in q.js: unhandledReasons.splice replaced with unhandledReasons.length = 0
Mutant 939 in q.js: at replaced with at - 1
Mutant 940 in q.js: at replaced with at + 1
Mutant 941 in q.js: at replaced with at.length - 1
Mutant 942 in q.js: 1 replaced with 0
Mutant 943 in q.js: 1 replaced with -1
Mutant 944 in q.js: 1 replaced with array_indexOf(unhandledRejections, promise) + 1
Mutant 945 in q.js: rejected replaced with !rejected
Mutant 946 in q.js: rejected replaced with rejected && false
Mutant 947 in q.js: rejected replaced with rejected || true
Mutant 948 in q.js: untrackRejection replaced with trackRejection
Mutant 949 in q.js: untrackRejection replaced with Q.stopUnhandledRejectionTracking
Mutant 950 in q.js: this replaced with null
Mutant 951 in q.js: this replaced with undefined
Mutant 952 in q.js: this replaced with {}
Mutant 953 in q.js: rejected replaced with "rejected"
Mutant 954 in q.js: rejected replaced with "fulfilled"
Mutant 955 in q.js: reason replaced with null
Mutant 956 in q.js: reason replaced with undefined
Mutant 957 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason + 1)
Mutant 958 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason - 1)
Mutant 959 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason * 2)
Mutant 960 in q.js: rejection replaced with null
Mutant 961 in q.js: rejection replaced with undefined
Mutant 962 in q.js: rejection replaced with 0
Mutant 963 in q.js: reason replaced with null
Mutant 964 in q.js: reason replaced with undefined
Mutant 965 in q.js: reason replaced with new Error()
Mutant 966 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 967 in q.js: name === null || name === void 0 replaced with name == null
Mutant 968 in q.js: name === null || name === void 0 replaced with name != null
Mutant 969 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 970 in q.js: value.apply(void 0, args) replaced with value.apply(undefined, args)
Mutant 971 in q.js: value.apply(void 0, args) replaced with value.apply(args.slice())
Mutant 972 in q.js: value.apply replaced with value.call
Mutant 973 in q.js: value.apply replaced with value.bind
Mutant 974 in q.js: value.apply replaced with value.toString
Mutant 975 in q.js: void 0 replaced with null
Mutant 976 in q.js: void 0 replaced with undefined
Mutant 977 in q.js: void 0 replaced with NaN
Mutant 978 in q.js: args replaced with args.slice()
Mutant 979 in q.js: args replaced with args.concat()
Mutant 980 in q.js: args replaced with args.map(function (x) {
  return x + 1;
})
Mutant 981 in q.js: value[name].apply(value, args) replaced with value[name].apply(value)
Mutant 982 in q.js: value[name].apply(value, args) replaced with value[name].apply(args)
Mutant 983 in q.js: value[name].apply(value, args) replaced with value[name].apply(value[0])
Mutant 984 in q.js: value replaced with undefined
Mutant 985 in q.js: value replaced with null
Mutant 986 in q.js: value replaced with 0
Mutant 987 in q.js: args replaced with args.slice()
Mutant 988 in q.js: args replaced with args.concat()
Mutant 989 in q.js: args replaced with args.filter(function (arg) {
  return arg !== undefined;
})
Mutant 990 in q.js: value.apply(thisp, args) replaced with value.apply(void 0)
Mutant 991 in q.js: value.apply(thisp, args) replaced with value.apply(null)
Mutant 992 in q.js: value.apply(thisp, args) replaced with value.apply(undefined)
Mutant 993 in q.js: value.apply replaced with value.call
Mutant 994 in q.js: value.apply replaced with value.bind
Mutant 995 in q.js: value.apply replaced with value.toString
Mutant 996 in q.js: thisp replaced with null
Mutant 997 in q.js: thisp replaced with void 0
Mutant 998 in q.js: thisp replaced with undefined
Mutant 999 in q.js: args replaced with args + 1
Mutant 1000 in q.js: args replaced with args.length
Mutant 1001 in q.js: args replaced with args.slice()
Mutant 1002 in q.js: object_keys replaced with object_values
Mutant 1003 in q.js: object_keys replaced with Object.values
Mutant 1004 in q.js: value replaced with undefined
Mutant 1005 in q.js: value replaced with null
Mutant 1006 in q.js: value replaced with {}
Mutant 1007 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve(deferred.reject), deferred.notify)
Mutant 1008 in q.js: promise.then replaced with promise.catch
Mutant 1009 in q.js: promise.then replaced with promise.finally
Mutant 1010 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1011 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1012 in q.js: deferred.resolve replaced with deferred.promise
Mutant 1013 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1014 in q.js: deferred.reject replaced with deferred.notify
Mutant 1015 in q.js: deferred.notify replaced with deferred.reject
Mutant 1016 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1017 in q.js: deferred.notify replaced with deferred.notify(reason)
Mutant 1018 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1019 in q.js: deferred.reject replaced with deferred.notify
Mutant 1020 in q.js: deferred.reject replaced with deferred.cancel
Mutant 1021 in q.js: exception replaced with null
Mutant 1022 in q.js: exception replaced with undefined
Mutant 1023 in q.js: exception replaced with 0
Mutant 1024 in q.js: dispatch(object, op, args) replaced with dispatch(object[op].apply(object, args))
Mutant 1025 in q.js: dispatch(object, op, args) replaced with dispatch(object[op](args))
Mutant 1026 in q.js: dispatch(object, op, args) replaced with dispatch(object[op](args, object))
Mutant 1027 in q.js: dispatch replaced with "undefined"
Mutant 1028 in q.js: dispatch replaced with "null"
Mutant 1029 in q.js: dispatch replaced with "0"
Mutant 1030 in q.js: object replaced with null
Mutant 1031 in q.js: object replaced with undefined
Mutant 1032 in q.js: object replaced with {}
Mutant 1033 in q.js: op replaced with op + 1
Mutant 1034 in q.js: op replaced with op - 1
Mutant 1035 in q.js: op replaced with op * 2
Mutant 1036 in q.js: args replaced with args[0]
Mutant 1037 in q.js: args replaced with null
Mutant 1038 in q.js: args replaced with args.slice(1)
Mutant 1039 in q.js: Q replaced with Q + 1
Mutant 1040 in q.js: Q replaced with Q.foo
Mutant 1041 in q.js: Q replaced with Q.reject
Mutant 1042 in q.js: object replaced with null
Mutant 1043 in q.js: object replaced with undefined
Mutant 1044 in q.js: object replaced with {}
Mutant 1045 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled, rejected, 0)
Mutant 1046 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled, rejected, undefined)
Mutant 1047 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled, rejected, null)
Mutant 1048 in q.js: value replaced with 42
Mutant 1049 in q.js: fulfilled replaced with rejected
Mutant 1050 in q.js: fulfilled replaced with fulfilled()
Mutant 1051 in q.js: fulfilled replaced with undefined
Mutant 1052 in q.js: rejected replaced with resolved
Mutant 1053 in q.js: rejected replaced with rejected(new Error("error"))
Mutant 1054 in q.js: rejected replaced with rejected(promise)
Mutant 1055 in q.js: this.all replaced with this.then
Mutant 1056 in q.js: this.all replaced with this.resolve
Mutant 1057 in q.js: this.all replaced with this.reject
not replacing this.all with this.then
not replacing this.all with this.then
not replacing this.all with this.resolve
not replacing this.all with this.resolve
not replacing this.all with this.reject
not replacing this.all with this.reject
Mutant 1058 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(array)
Mutant 1059 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 1060 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(undefined)
Mutant 1061 in q.js: fulfilled.apply replaced with rejected.apply
Mutant 1062 in q.js: fulfilled.apply replaced with deferred.resolve.apply
Mutant 1063 in q.js: fulfilled.apply replaced with deferred.reject.apply
Mutant 1064 in q.js: void 0 replaced with null
Mutant 1065 in q.js: void 0 replaced with undefined
Mutant 1066 in q.js: void 0 replaced with {}
Mutant 1067 in q.js: array replaced with array.slice()
Mutant 1068 in q.js: array replaced with array.concat()
Mutant 1069 in q.js: array replaced with array.map(function (value) {
  return value + 1;
})
Mutant 1070 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 1071 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration === "function"
Mutant 1072 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration === "object"
Mutant 1073 in q.js: arg replaced with undefined
Mutant 1074 in q.js: arg replaced with null
Mutant 1075 in q.js: arg replaced with 0
Mutant 1076 in q.js: reject replaced with undefined
Mutant 1077 in q.js: result.done replaced with result.value
Mutant 1078 in q.js: result.done replaced with result.fulfilled
Mutant 1079 in q.js: result.done replaced with result.rejected
Mutant 1080 in q.js: result.value replaced with result.value + 1
Mutant 1081 in q.js: result.value replaced with result.value * 2
Mutant 1082 in q.js: result.value replaced with result.value.length
Mutant 1083 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, callback)
Mutant 1084 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback)
Mutant 1085 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback)
Mutant 1086 in q.js: result.value replaced with result.error
Mutant 1087 in q.js: result.value replaced with result.value.error
Mutant 1088 in q.js: result.value replaced with result.value[0]
Mutant 1089 in q.js: callback replaced with reject
Mutant 1090 in q.js: callback replaced with args[0]
Mutant 1091 in q.js: callback replaced with self
Mutant 1092 in q.js: errback replaced with errback.bind(null, "throw")
Mutant 1093 in q.js: errback replaced with errback.bind(null, "next")
Mutant 1094 in q.js: arg replaced with undefined
Mutant 1095 in q.js: arg replaced with null
Mutant 1096 in q.js: arg replaced with "foo"
Mutant 1097 in q.js: isStopIteration(exception) replaced with exception.name === "StopIteration"
Mutant 1098 in q.js: isStopIteration(exception) replaced with exception instanceof StopIteration
Mutant 1099 in q.js: isStopIteration(exception) replaced with exception.constructor === StopIteration
Mutant 1100 in q.js: isStopIteration replaced with isStopIteration === true
Mutant 1101 in q.js: isStopIteration replaced with isStopIteration !== true
Mutant 1102 in q.js: exception replaced with exception.value
Mutant 1103 in q.js: exception replaced with exception.message
Mutant 1104 in q.js: exception replaced with exception.stack
Mutant 1105 in q.js: exception.value replaced with exception.reason
Mutant 1106 in q.js: exception.value replaced with exception.message
Mutant 1107 in q.js: exception.value replaced with exception.name
Mutant 1108 in q.js: reject replaced with resolve
Mutant 1109 in q.js: exception replaced with null
Mutant 1110 in q.js: exception replaced with undefined
Mutant 1111 in q.js: when(result, callback, errback) replaced with when(result.value, callback, errback)
Mutant 1112 in q.js: when(result, callback, errback) replaced with when(result[0], callback, errback)
Mutant 1113 in q.js: when(result, callback, errback) replaced with when(result.then(callback, errback))
Mutant 1114 in q.js: when replaced with Q.reject
Mutant 1115 in q.js: when replaced with Q.resolve
Mutant 1116 in q.js: when replaced with Q.all
Mutant 1117 in q.js: result replaced with result.value
Mutant 1118 in q.js: result replaced with result.then(function (value) {
  return value;
})
Mutant 1119 in q.js: result replaced with Q(result)
Mutant 1120 in q.js: callback replaced with errback
Mutant 1121 in q.js: callback replaced with reject
Mutant 1122 in q.js: errback replaced with reject
Mutant 1123 in q.js: errback replaced with callback
Mutant 1124 in q.js: errback replaced with function (error) {
  throw error;
}
Mutant 1125 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1126 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(undefined)
Mutant 1127 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply({})
Mutant 1128 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 1129 in q.js: makeGenerator.apply replaced with makeGenerator.bind
Mutant 1130 in q.js: makeGenerator.apply replaced with makeGenerator.arrow
Mutant 1131 in q.js: this replaced with null
Mutant 1132 in q.js: this replaced with undefined
Mutant 1133 in q.js: this replaced with 0
Mutant 1134 in q.js: arguments replaced with null
Mutant 1135 in q.js: arguments replaced with undefined
Mutant 1136 in q.js: arguments replaced with []
Mutant 1137 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "send")
Mutant 1138 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "throw")
Mutant 1139 in q.js: continuer replaced with continuer.bind(null, "next")
Mutant 1140 in q.js: continuer replaced with continuer.bind(undefined, "next")
Mutant 1141 in q.js: continuer replaced with continuer.bind(self, "next")
Mutant 1142 in q.js: "next" replaced with "throw"
Mutant 1143 in q.js: "next" replaced with "return"
Mutant 1144 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw"))
Mutant 1145 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw", undefined))
Mutant 1146 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw", null))
Mutant 1147 in q.js: continuer.bind replaced with continuer.throw
Mutant 1148 in q.js: continuer.bind replaced with continuer.next
Mutant 1149 in q.js: continuer.bind replaced with continuer.value
Mutant 1150 in q.js: continuer replaced with continuer.bind(null, "throw")
Mutant 1151 in q.js: continuer replaced with continuer.bind(undefined, "throw")
Mutant 1152 in q.js: continuer replaced with continuer.bind(void 0, "throw")
Mutant 1153 in q.js: "throw" replaced with "send"
Mutant 1154 in q.js: "throw" replaced with "undefined"
Mutant 1155 in q.js: "throw" replaced with "null"
Mutant 1156 in q.js: callback replaced with errback
Mutant 1157 in q.js: callback replaced with undefined
Mutant 1158 in q.js: callback replaced with null
Mutant 1159 in q.js: Q.done replaced with Q.fail
Mutant 1160 in q.js: Q.done replaced with Q.delay
Mutant 1161 in q.js: Q.done replaced with Q.reject
Mutant 1162 in q.js: Q.async(makeGenerator)() replaced with Q.async(makeGenerator)(null)
Mutant 1163 in q.js: Q.async(makeGenerator)() replaced with Q.async(makeGenerator)("foo")
Mutant 1164 in q.js: makeGenerator replaced with makeGenerator.bind(this)
Mutant 1165 in q.js: makeGenerator replaced with makeGenerator.call(this)
Mutant 1166 in q.js: makeGenerator replaced with makeGenerator.apply(this)
Mutant 1167 in q.js: all replaced with any
Mutant 1168 in q.js: all replaced with filter
Mutant 1169 in q.js: all replaced with map
Mutant 1170 in q.js: arguments replaced with [1, 2, 3]
Mutant 1171 in q.js: arguments replaced with null
Mutant 1172 in q.js: arguments replaced with new Array(1, 2, 3)
Mutant 1173 in q.js: callback.apply(self, args) replaced with callback.apply(undefined)
Mutant 1174 in q.js: callback.apply(self, args) replaced with callback.apply(null)
Mutant 1175 in q.js: callback.apply(self, args) replaced with callback.apply(true)
Mutant 1176 in q.js: callback.apply replaced with callback.call
Mutant 1177 in q.js: callback.apply replaced with callback.bind
Mutant 1178 in q.js: self replaced with this
Mutant 1179 in q.js: self replaced with null
Mutant 1180 in q.js: self replaced with undefined
Mutant 1181 in q.js: args replaced with args[0]
Mutant 1182 in q.js: args replaced with args.slice(1)
Mutant 1183 in q.js: args replaced with args.concat(1)
Mutant 1184 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.slice(1))
Mutant 1185 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.concat(["extra argument"]))
Mutant 1186 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.reverse())
Mutant 1187 in q.js: object replaced with null
Mutant 1188 in q.js: object replaced with undefined
Mutant 1189 in q.js: object replaced with {}
Mutant 1190 in q.js: op replaced with op.toUpperCase()
Mutant 1191 in q.js: op replaced with op.slice(0)
Mutant 1192 in q.js: op replaced with op.length + 1
Mutant 1193 in q.js: args replaced with args[0]
Mutant 1194 in q.js: args replaced with args.slice(1)
Mutant 1195 in q.js: args replaced with null
Mutant 1196 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1197 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.notify, op, args)
Mutant 1198 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve(op, args))
Mutant 1199 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1200 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1201 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1202 in q.js: op replaced with op + 1
Mutant 1203 in q.js: op replaced with op.toUpperCase()
Mutant 1204 in q.js: op replaced with op.length
Mutant 1205 in q.js: args replaced with args.slice(1)
Mutant 1206 in q.js: args replaced with args.concat([1, 2, 3])
Mutant 1207 in q.js: args replaced with args.map(function (x) {
  return x + 1;
})
Mutant 1208 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key])
Mutant 1209 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("post", [key, "get"])
Mutant 1210 in q.js: object replaced with null
Mutant 1211 in q.js: object replaced with undefined
Mutant 1212 in q.js: object replaced with Q.reject(new Error("invalid object"))
Mutant 1213 in q.js: "get" replaced with "set"
Mutant 1214 in q.js: "get" replaced with "post"
Mutant 1215 in q.js: [key] replaced with [key + 1]
Mutant 1216 in q.js: [key] replaced with [key, value]
Mutant 1217 in q.js: [key] replaced with [this.key]
Mutant 1218 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key])
Mutant 1219 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key])
Mutant 1220 in q.js: this.dispatch replaced with Promise.prototype.dispatch
Mutant 1221 in q.js: this.dispatch replaced with Q.dispatch
Mutant 1222 in q.js: "get" replaced with "set"
Mutant 1223 in q.js: "get" replaced with "post"
Mutant 1224 in q.js: [key] replaced with [key, key]
Mutant 1225 in q.js: [key] replaced with [key, value]
Mutant 1226 in q.js: [key] replaced with [value]
Mutant 1227 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, value + 1])
Mutant 1228 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key + 1, value])
Mutant 1229 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, value - 1])
Mutant 1230 in q.js: object replaced with null
Mutant 1231 in q.js: object replaced with undefined
Mutant 1232 in q.js: object replaced with {}
Mutant 1233 in q.js: "set" replaced with "post"
Mutant 1234 in q.js: "set" replaced with "get"
Mutant 1235 in q.js: [key, value] replaced with [value, key]
Mutant 1236 in q.js: [key, value] replaced with [key, null]
Mutant 1237 in q.js: [key, value] replaced with [key, false]
Mutant 1238 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value, key])
Mutant 1239 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, key])
Mutant 1240 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value])
Mutant 1241 in q.js: "set" replaced with "get"
Mutant 1242 in q.js: "set" replaced with "post"
Mutant 1243 in q.js: [key, value] replaced with [key]
Mutant 1244 in q.js: [key, value] replaced with [key, value, null]
Mutant 1245 in q.js: [key, value] replaced with [key, value + 1]
Mutant 1246 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1247 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("get", [key])
Mutant 1248 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("hasOwnProperty", [key])
Mutant 1249 in q.js: Q replaced with Q.reject
Mutant 1250 in q.js: object replaced with null
Mutant 1251 in q.js: object replaced with {
  foo: "bar"
}
Mutant 1252 in q.js: "delete" replaced with "del"
Mutant 1253 in q.js: "delete" replaced with "remove"
Mutant 1254 in q.js: [key] replaced with [key, "wrong_key"]
Mutant 1255 in q.js: [key] replaced with ["wrong_key"]
Mutant 1256 in q.js: [key] replaced with [key, key]
Mutant 1257 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, undefined])
Mutant 1258 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("get", [key])
Mutant 1259 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("hasOwnProperty", [key])
Mutant 1260 in q.js: this.dispatch replaced with this.reject
Mutant 1261 in q.js: this.dispatch replaced with this.resolve
Mutant 1262 in q.js: this.dispatch replaced with this.then
Mutant 1263 in q.js: "delete" replaced with "clear"
Mutant 1264 in q.js: "delete" replaced with "remove"
Mutant 1265 in q.js: "delete" replaced with "pop"
Mutant 1266 in q.js: [key] replaced with [key] + 1
Mutant 1267 in q.js: [key] replaced with key.toUpperCase()
Mutant 1268 in q.js: [key] replaced with key + "1"
Mutant 1269 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.slice()])
Mutant 1270 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.concat([])])
Mutant 1271 in q.js: object replaced with null
Mutant 1272 in q.js: object replaced with undefined
Mutant 1273 in q.js: object replaced with {}
Mutant 1274 in q.js: "post" replaced with "put"
Mutant 1275 in q.js: "post" replaced with "apply"
Mutant 1276 in q.js: "post" replaced with "call"
Mutant 1277 in q.js: [name, args] replaced with [name, args.reverse()]
Mutant 1278 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1279 in q.js: [name, args] replaced with [name, args.concat([42])]
Mutant 1280 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("put", [name, args])
Mutant 1281 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [args, name])
Mutant 1282 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.slice(1)])
Mutant 1283 in q.js: "post" replaced with "put"
Mutant 1284 in q.js: "post" replaced with "get"
Mutant 1285 in q.js: [name, args] replaced with [name, args.slice()]
Mutant 1286 in q.js: [name, args] replaced with [name, args.concat()]
Mutant 1287 in q.js: [name, args] replaced with [name, args.filter(function (arg) {
  return arg !== undefined;
})]
Mutant 1288 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1289 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1, 2)])
Mutant 1290 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)])
Mutant 1291 in q.js: object replaced with null
Mutant 1292 in q.js: object replaced with undefined
Mutant 1293 in q.js: object replaced with 0
Mutant 1294 in q.js: "post" replaced with "put"
Mutant 1295 in q.js: "post" replaced with "resolve"
Mutant 1296 in q.js: "post" replaced with "reject"
Mutant 1297 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1298 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 3)]
Mutant 1299 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 4)]
Mutant 1300 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 3))
Mutant 1301 in q.js: array_slice(arguments, 2) replaced with array_slice(deferred.resolve)
Mutant 1302 in q.js: arguments replaced with null
Mutant 1303 in q.js: arguments replaced with undefined
Mutant 1304 in q.js: arguments replaced with []
Mutant 1305 in q.js: 2 replaced with 0
Mutant 1306 in q.js: 2 replaced with -1
Mutant 1307 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("apply", [name, array_slice(arguments, 1)])
Mutant 1308 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1309 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 0, -1)])
Mutant 1310 in q.js: this.dispatch replaced with this.reject
Mutant 1311 in q.js: "post" replaced with "put"
Mutant 1312 in q.js: "post" replaced with "getAll"
Mutant 1313 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1314 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 3)]
Mutant 1315 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 4)]
Mutant 1316 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1317 in q.js: array_slice(arguments, 1) replaced with array_slice([arguments[0], arguments[2]])
Mutant 1318 in q.js: arguments replaced with null
Mutant 1319 in q.js: arguments replaced with []
Mutant 1320 in q.js: arguments replaced with ['foo', 'bar']
Mutant 1321 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [void 0, args])
Mutant 1322 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [args, void 0])
Mutant 1323 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("bind", [void 0, args])
Mutant 1324 in q.js: object replaced with null
Mutant 1325 in q.js: object replaced with undefined
Mutant 1326 in q.js: object replaced with {}
Mutant 1327 in q.js: "apply" replaced with "call"
Mutant 1328 in q.js: "apply" replaced with "bind"
Mutant 1329 in q.js: "apply" replaced with "fapply"
Mutant 1330 in q.js: [void 0, args] replaced with [void 1, args]
Mutant 1331 in q.js: [void 0, args] replaced with [args, void 0]
Mutant 1332 in q.js: [void 0, args] replaced with [args, void 1]
Mutant 1333 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [this, args])
Mutant 1334 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [void 0, args.slice(1)])
Mutant 1335 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [void 0, [].concat(args)])
Mutant 1336 in q.js: "apply" replaced with "call"
Mutant 1337 in q.js: "apply" replaced with "bind"
Mutant 1338 in q.js: "apply" replaced with "post"
Mutant 1339 in q.js: [void 0, args] replaced with [void 0, args, undefined]
Mutant 1340 in q.js: [void 0, args] replaced with [void 0, args, null]
Mutant 1341 in q.js: [void 0, args] replaced with [void 0, args, "foo"]
Mutant 1342 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("call", [void 0, array_slice(arguments, 1)])
Mutant 1343 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1344 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)])
Mutant 1345 in q.js: object replaced with null
Mutant 1346 in q.js: object replaced with undefined
Mutant 1347 in q.js: object replaced with 42
Mutant 1348 in q.js: "apply" replaced with "call"
Mutant 1349 in q.js: "apply" replaced with "bind"
Mutant 1350 in q.js: "apply" replaced with "map"
Mutant 1351 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1352 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 1, 2)]
Mutant 1353 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 1, -1)]
Mutant 1354 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1355 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length)
Mutant 1356 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1357 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [this, array_slice(arguments)])
Mutant 1358 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1359 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1360 in q.js: "apply" replaced with "call"
Mutant 1361 in q.js: "apply" replaced with "bind"
Mutant 1362 in q.js: "apply" replaced with "concat"
Mutant 1363 in q.js: [void 0, array_slice(arguments)] replaced with [this, array_slice(arguments)]
Mutant 1364 in q.js: [void 0, array_slice(arguments)] replaced with [array_slice(arguments), void 0]
Mutant 1365 in q.js: [void 0, array_slice(arguments)] replaced with [array_slice(arguments), array_slice(arguments)]
Mutant 1366 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1367 in q.js: object replaced with null
Mutant 1368 in q.js: object replaced with undefined
Mutant 1369 in q.js: object replaced with 0
Mutant 1370 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1371 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 0))
Mutant 1372 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 3))
Mutant 1373 in q.js: arguments replaced with null
Mutant 1374 in q.js: arguments replaced with []
Mutant 1375 in q.js: arguments replaced with {}
Mutant 1376 in q.js: 1 replaced with 1 + 1
Mutant 1377 in q.js: 1 replaced with 2
Mutant 1378 in q.js: 1 replaced with 0
Mutant 1379 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1380 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1381 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1382 in q.js: array_slice replaced with array_splice
Mutant 1383 in q.js: array_slice replaced with void 0
Mutant 1384 in q.js: array_slice replaced with null
Mutant 1385 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1386 in q.js: arguments replaced with args
Mutant 1387 in q.js: arguments replaced with arguments[0]
Mutant 1388 in q.js: arguments replaced with this
Mutant 1389 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1390 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1391 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 2)
Mutant 1392 in q.js: arguments replaced with null
Mutant 1393 in q.js: arguments replaced with []
Mutant 1394 in q.js: arguments replaced with [1, 2, 3]
Mutant 1395 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1396 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("length", [])
Mutant 1397 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("concat", [])
Mutant 1398 in q.js: Q replaced with Q.reject
Mutant 1399 in q.js: Q replaced with Q.resolve
Mutant 1400 in q.js: Q replaced with Q.when
Mutant 1401 in q.js: object replaced with object.length
Mutant 1402 in q.js: object replaced with object.toString()
Mutant 1403 in q.js: object replaced with object[0]
Mutant 1404 in q.js: "keys" replaced with "values"
Mutant 1405 in q.js: "keys" replaced with "length"
Mutant 1406 in q.js: "keys" replaced with "toString"
Mutant 1407 in q.js: [] replaced with [1, 2, 3]
Mutant 1408 in q.js: [] replaced with [1, 2, 3, 4]
Mutant 1409 in q.js: [] replaced with [1, 2, 3, 4, 5]
Mutant 1410 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1411 in q.js: this.dispatch("keys", []) replaced with this.dispatch("keys", [1])
Mutant 1412 in q.js: "keys" replaced with "values"
Mutant 1413 in q.js: "keys" replaced with "length"
Mutant 1414 in q.js: "keys" replaced with "slice"
Mutant 1415 in q.js: [] replaced with [1, 2, 3]
Mutant 1416 in q.js: [] replaced with [1, 2, 3, 4, 5]
Mutant 1417 in q.js: [] replaced with [1, 2, 3, 4, 5, 6]
Mutant 1418 in q.js: defer replaced with deferred.promise
Mutant 1419 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "rejected"
Mutant 1420 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "pending"
Mutant 1421 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "fulfilled" && promise.inspect().value !== undefined
Mutant 1422 in q.js: promise replaced with promise.then(function () {
  throw new Error("Test error");
})
Mutant 1423 in q.js: promise replaced with promise.then(function () {
  return Q.reject("Test error");
})
Mutant 1424 in q.js: promise replaced with promise.then(function () {
  return Q.resolve("Test error");
})
Mutant 1425 in q.js: promise.inspect replaced with promise.inspect.value
Mutant 1426 in q.js: promise.inspect replaced with promise.inspect.promise
Mutant 1427 in q.js: promise.inspect replaced with promise.inspect.state
Mutant 1428 in q.js: --pendingCount === 0 replaced with pendingCount < 0
Mutant 1429 in q.js: --pendingCount === 0 replaced with pendingCount !== promises.length
Mutant 1430 in q.js: --pendingCount === 0 replaced with pendingCount === promises.length - 1
Mutant 1431 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1432 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1433 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1434 in q.js: promises replaced with promises.slice(1)
Mutant 1435 in q.js: promises replaced with promises.concat(Q.resolve(42))
Mutant 1436 in q.js: promises replaced with promises.map(function (promise) {
  return promise.then(function (value) {
    return value * 2;
  });
})
Mutant 1437 in q.js: deferred.notify replaced with deferred.reject
Mutant 1438 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1439 in q.js: deferred.notify replaced with deferred.progress
Mutant 1440 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: index
}
Mutant 1441 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: promises[index]
}
Mutant 1442 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: index * 2
}
Mutant 1443 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1444 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1445 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1446 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1447 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1448 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1449 in q.js: promises replaced with []
Mutant 1450 in q.js: promises replaced with null
Mutant 1451 in q.js: promises replaced with undefined
Mutant 1452 in q.js: all replaced with any
Mutant 1453 in q.js: all replaced with allSettled
Mutant 1454 in q.js: all replaced with Promise.race
Mutant 1455 in q.js: this replaced with null
Mutant 1456 in q.js: this replaced with undefined
Mutant 1457 in q.js: this replaced with Promise.reject()
Mutant 1458 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1459 in q.js: promises.length === 0 replaced with promises.length > 1
Mutant 1460 in q.js: promises.length === 0 replaced with promises.length === promises.length
Mutant 1461 in q.js: Q.resolve replaced with Q.reject
Mutant 1462 in q.js: Q.resolve replaced with Q.defer
Mutant 1463 in q.js: Q.resolve replaced with Q.when
Mutant 1464 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected, onProgress))
Mutant 1465 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected, onProgress).then(onProgress))
Mutant 1466 in q.js: promise replaced with promise.then(null, onRejected)
Mutant 1467 in q.js: promise replaced with promise.then(onFulfilled, null)
Mutant 1468 in q.js: promise replaced with promise.then(onFulfilled, onRejected)
Mutant 1469 in q.js: onFulfilled replaced with onRejected
Mutant 1470 in q.js: onFulfilled replaced with onProgress
Mutant 1471 in q.js: onFulfilled replaced with noop
Mutant 1472 in q.js: onRejected replaced with onFulfilled
Mutant 1473 in q.js: onRejected replaced with function () {}
Mutant 1474 in q.js: onProgress replaced with onRejected
Mutant 1475 in q.js: onProgress replaced with noop
Mutant 1476 in q.js: onProgress replaced with function (progress) {
  deferred.notify({
    index: index,
    value: progress
  });
}
Mutant 1477 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1478 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1479 in q.js: result replaced with "result"
Mutant 1480 in q.js: result replaced with result + 1
Mutant 1481 in q.js: result replaced with result * 2
Mutant 1482 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1483 in q.js: pendingCount === 0 replaced with pendingCount < promises.length
Mutant 1484 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1485 in q.js: deferred.reject replaced with deferred.notify
Mutant 1486 in q.js: deferred.reject replaced with Q.reject
Mutant 1487 in q.js: rejection replaced with null
Mutant 1488 in q.js: rejection replaced with new Error("Different error message")
Mutant 1489 in q.js: rejection replaced with undefined
Mutant 1490 in q.js: any replaced with all
Mutant 1491 in q.js: any replaced with none
Mutant 1492 in q.js: any replaced with filter
Mutant 1493 in q.js: this replaced with null
Mutant 1494 in q.js: this replaced with undefined
Mutant 1495 in q.js: this replaced with 1
Mutant 1496 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "allSettled", "allResolved")
Mutant 1497 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "allSettled", "allSettled")
Mutant 1498 in q.js: allResolved replaced with any
Mutant 1499 in q.js: allResolved replaced with none
Mutant 1500 in q.js: allResolved replaced with allSettled
Mutant 1501 in q.js: "allResolved" replaced with "allRejected"
Mutant 1502 in q.js: "allResolved" replaced with "any"
Mutant 1503 in q.js: "allResolved" replaced with "allSettled"
Mutant 1504 in q.js: "allSettled" replaced with "allFulfilled"
Mutant 1505 in q.js: "allSettled" replaced with "anyRejected"
Mutant 1506 in q.js: "allSettled" replaced with "allRejected"
Mutant 1507 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.resolve(promises))
Mutant 1508 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.reject(promises))
Mutant 1509 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.defer())
Mutant 1510 in q.js: array_map replaced with array_filter
Mutant 1511 in q.js: array_map replaced with array_reduce
Mutant 1512 in q.js: array_map replaced with array_forEach
Mutant 1513 in q.js: promises replaced with promises.slice(0, promises.length - 1)
Mutant 1514 in q.js: promises replaced with promises.concat([])
Mutant 1515 in q.js: promises replaced with promises.filter(function (promise) {
  return promise !== undefined;
})
Mutant 1516 in q.js: Q replaced with Q.reject
Mutant 1517 in q.js: Q replaced with Q.defer
Mutant 1518 in q.js: Q replaced with Q.when
Mutant 1519 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop))
Mutant 1520 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop).then(noop))
Mutant 1521 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop))
Mutant 1522 in q.js: promise replaced with null
Mutant 1523 in q.js: promise replaced with undefined
Mutant 1524 in q.js: promise replaced with 0
Mutant 1525 in q.js: noop replaced with function (err) {
  deferred.reject(err);
}
Mutant 1526 in q.js: noop replaced with function (err) {
  deferred.resolve(err);
}
Mutant 1527 in q.js: noop replaced with function (err) {
  deferred.notify(err);
}
Mutant 1528 in q.js: noop replaced with deferred.reject
Mutant 1529 in q.js: noop replaced with deferred.notify
Mutant 1530 in q.js: noop replaced with deferred.resolve
Mutant 1531 in q.js: allResolved replaced with any
Mutant 1532 in q.js: allResolved replaced with allSettled
Mutant 1533 in q.js: this replaced with null
Mutant 1534 in q.js: this replaced with undefined
Mutant 1535 in q.js: this replaced with []
Mutant 1536 in q.js: promises replaced with promises.slice()
Mutant 1537 in q.js: promises replaced with promises.filter(function () {
  return true;
})
Mutant 1538 in q.js: promises replaced with promises.map(function () {
  return Q.resolve();
})
Mutant 1539 in q.js: promise.then(regardless, regardless) replaced with promise.then(regardless, regardless, regardless)
Mutant 1540 in q.js: promise.then(regardless, regardless) replaced with promise.then(regardless, noop, noop)
Mutant 1541 in q.js: promise.then(regardless, regardless) replaced with promise.then(noop, noop, regardless)
Mutant 1542 in q.js: regardless replaced with noop
Mutant 1543 in q.js: regardless replaced with undefined
Mutant 1544 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(null, rejected)
Mutant 1545 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(undefined, rejected)
Mutant 1546 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(rejected, null)
Mutant 1547 in q.js: object replaced with Q.reject()
Mutant 1548 in q.js: void 0 replaced with null
Mutant 1549 in q.js: void 0 replaced with undefined
Mutant 1550 in q.js: rejected replaced with resolved
Mutant 1551 in q.js: rejected replaced with Q.reject
Mutant 1552 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1553 in q.js: this.then(void 0, rejected) replaced with this.then(void 0, "rejected")
Mutant 1554 in q.js: void 0 replaced with null
Mutant 1555 in q.js: void 0 replaced with undefined
Mutant 1556 in q.js: void 0 replaced with NaN
Mutant 1557 in q.js: rejected replaced with resolved
Mutant 1558 in q.js: rejected replaced with deferred.reject("Error message")
Mutant 1559 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(null, null, progressed)
Mutant 1560 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(undefined, undefined, progressed)
Mutant 1561 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then("hello", "world", progressed)
Mutant 1562 in q.js: object replaced with function () {}
Mutant 1563 in q.js: void 0 replaced with 0
Mutant 1564 in q.js: void 0 replaced with null
Mutant 1565 in q.js: void 0 replaced with "undefined"
Mutant 1566 in q.js: void 0 replaced with null
Mutant 1567 in q.js: void 0 replaced with NaN
Mutant 1568 in q.js: void 0 replaced with Infinity
Mutant 1569 in q.js: progressed replaced with promise.then(void 0, progressed)
Mutant 1570 in q.js: progressed replaced with promise.then(progressed, void 0)
Mutant 1571 in q.js: progressed replaced with promise.then(void 0, function () {})
Mutant 1572 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1573 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, progressed)
Mutant 1574 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(0, 0, progressed)
Mutant 1575 in q.js: void 0 replaced with null
Mutant 1576 in q.js: void 0 replaced with undefined
Mutant 1577 in q.js: void 0 replaced with 0
Mutant 1578 in q.js: void 0 replaced with null
Mutant 1579 in q.js: void 0 replaced with undefined
Mutant 1580 in q.js: void 0 replaced with 0
Mutant 1581 in q.js: progressed replaced with undefined
Mutant 1582 in q.js: progressed replaced with null
Mutant 1583 in q.js: progressed replaced with "foo"
Mutant 1584 in q.js: object replaced with null
Mutant 1585 in q.js: object replaced with undefined
Mutant 1586 in q.js: object replaced with Q.reject("error")
Mutant 1587 in q.js: callback replaced with random()
Mutant 1588 in q.js: callback replaced with null
Mutant 1589 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.apply !== "function"
Mutant 1590 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.apply === "function"
Mutant 1591 in q.js: !callback || typeof callback.apply !== "function" replaced with typeof callback !== "function"
Mutant 1592 in q.js: Q replaced with "hello world"
Mutant 1593 in q.js: Q replaced with null
Mutant 1594 in q.js: callback replaced with callback.fcall()
Mutant 1595 in q.js: callback replaced with callback.then()
Mutant 1596 in q.js: callback replaced with callback.catch()
Mutant 1597 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1598 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, progress, rejected)
Mutant 1599 in q.js: Q replaced with Q.reject
Mutant 1600 in q.js: Q replaced with Q.defer
Mutant 1601 in q.js: Q replaced with Q.fcall
Mutant 1602 in q.js: object replaced with null
Mutant 1603 in q.js: object replaced with undefined
Mutant 1604 in q.js: object replaced with Q.reject("error")
Mutant 1605 in q.js: fulfilled replaced with rejected
Mutant 1606 in q.js: fulfilled replaced with progress
Mutant 1607 in q.js: fulfilled replaced with void 0
Mutant 1608 in q.js: rejected replaced with rejected(new Error("Different error"))
Mutant 1609 in q.js: rejected replaced with fulfilled(null)
Mutant 1610 in q.js: rejected replaced with progressed(10)
Mutant 1611 in q.js: progress replaced with "progress"
Mutant 1612 in q.js: progress replaced with "progressed"
Mutant 1613 in q.js: progress replaced with "notify"
Mutant 1614 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.then())
Mutant 1615 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.catch())
Mutant 1616 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.finally())
Mutant 1617 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected)
Mutant 1618 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(rejected, fulfilled, progress)
Mutant 1619 in q.js: fulfilled replaced with rejected
Mutant 1620 in q.js: fulfilled replaced with void 0
Mutant 1621 in q.js: fulfilled replaced with null
Mutant 1622 in q.js: rejected replaced with resolved
Mutant 1623 in q.js: rejected replaced with Q.reject("test error")
Mutant 1624 in q.js: progress replaced with rejected
Mutant 1625 in q.js: progress replaced with fulfilled
Mutant 1626 in q.js: progress replaced with progressed
Mutant 1627 in q.js: onUnhandledError replaced with onUnhandledError(error, promise)
Mutant 1628 in q.js: onUnhandledError replaced with onUnhandledError(error, Q.resolve(promise))
Mutant 1629 in q.js: onUnhandledError replaced with onUnhandledError(error, Q.reject(promise))
Mutant 1630 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(null, onUnhandledError)
Mutant 1631 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(void 0, onUnhandledError())
Mutant 1632 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(undefined, onUnhandledError)
Mutant 1633 in q.js: void 0 replaced with null
Mutant 1634 in q.js: void 0 replaced with undefined
Mutant 1635 in q.js: void 0 replaced with NaN
Mutant 1636 in q.js: onUnhandledError replaced with onUnhandledError()
Mutant 1637 in q.js: onUnhandledError replaced with undefined
Mutant 1638 in q.js: onUnhandledError replaced with () => {}
Mutant 1639 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms * 2, error)
Mutant 1640 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms / 2, error)
Mutant 1641 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(0, error)
Mutant 1642 in q.js: Q replaced with Q.reject
Mutant 1643 in q.js: Q replaced with Q.resolve
Mutant 1644 in q.js: Q replaced with Q.all
Mutant 1645 in q.js: object replaced with null
Mutant 1646 in q.js: object replaced with undefined
Mutant 1647 in q.js: ms replaced with ms + 1
Mutant 1648 in q.js: ms replaced with ms - 1
Mutant 1649 in q.js: ms replaced with 0
Mutant 1650 in q.js: error replaced with null
Mutant 1651 in q.js: error replaced with function () {}
Mutant 1652 in q.js: error replaced with function (e) {
  throw e;
}
Mutant 1653 in q.js: defer replaced with deferred.reject
Mutant 1654 in q.js: defer replaced with deferred.notify
Mutant 1655 in q.js: defer replaced with deferred.resolve
Mutant 1656 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1657 in q.js: !error || "string" === typeof error replaced with error || "string" !== typeof error
Mutant 1658 in q.js: !error || "string" === typeof error replaced with error || "string" === typeof error
Mutant 1659 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1660 in q.js: error replaced with "Error"
Mutant 1661 in q.js: error replaced with null
Mutant 1662 in q.js: error replaced with new Error()
Mutant 1663 in q.js: clearTimeout replaced with clearInterval
Mutant 1664 in q.js: clearTimeout replaced with setInterval
Mutant 1665 in q.js: timeoutId replaced with null
Mutant 1666 in q.js: timeoutId replaced with undefined
Mutant 1667 in q.js: timeoutId replaced with 0
Mutant 1668 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1669 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1670 in q.js: deferred.resolve replaced with null
Mutant 1671 in q.js: value replaced with null
Mutant 1672 in q.js: value replaced with undefined
Mutant 1673 in q.js: value replaced with new Error("Something went wrong")
Mutant 1674 in q.js: clearTimeout replaced with clearInterval
Mutant 1675 in q.js: clearTimeout replaced with setInterval
Mutant 1676 in q.js: timeoutId replaced with null
Mutant 1677 in q.js: timeoutId replaced with undefined
Mutant 1678 in q.js: timeoutId replaced with 0
Mutant 1679 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1680 in q.js: deferred.reject replaced with null
Mutant 1681 in q.js: deferred.reject replaced with undefined
Mutant 1682 in q.js: exception replaced with null
Mutant 1683 in q.js: exception replaced with undefined
Mutant 1684 in q.js: exception replaced with "Error: Timed out after " + ms + " ms"
Mutant 1685 in q.js: timeout === void 0 replaced with timeout !== void 0
Mutant 1686 in q.js: timeout === void 0 replaced with timeout !== null
Mutant 1687 in q.js: timeout === void 0 replaced with timeout !== undefined
Mutant 1688 in q.js: Q replaced with undefined
Mutant 1689 in q.js: Q replaced with null
Mutant 1690 in q.js: Q replaced with 0
Mutant 1691 in q.js: object replaced with null
Mutant 1692 in q.js: object replaced with undefined
Mutant 1693 in q.js: object replaced with {}
Mutant 1694 in q.js: timeout replaced with timeout + 10
Mutant 1695 in q.js: timeout replaced with timeout - 10
Mutant 1696 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1697 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1698 in q.js: deferred.resolve replaced with deferred.makeNodeResolver
Mutant 1699 in q.js: value replaced with null
Mutant 1700 in q.js: value replaced with undefined
Mutant 1701 in q.js: value replaced with 0
Mutant 1702 in q.js: callback replaced with null
Mutant 1703 in q.js: callback replaced with undefined
Mutant 1704 in q.js: callback replaced with function () {}
Mutant 1705 in q.js: args replaced with null
Mutant 1706 in q.js: args replaced with []
Mutant 1707 in q.js: args replaced with [1, 2, 3]
Mutant 1708 in q.js: array_slice replaced with null
Mutant 1709 in q.js: array_slice replaced with undefined
Mutant 1710 in q.js: array_slice replaced with []
Mutant 1711 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1712 in q.js: nodeArgs.push replaced with nodeArgs.length
Mutant 1713 in q.js: nodeArgs.push replaced with nodeArgs[0]
Mutant 1714 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1715 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1716 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(deferred.reject)
Mutant 1717 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeRejecter
Mutant 1718 in q.js: nodeArgs replaced with void 0
Mutant 1719 in q.js: nodeArgs replaced with []
Mutant 1720 in q.js: nodeArgs replaced with null
Mutant 1721 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1722 in q.js: deferred.reject replaced with deferred.notify
Mutant 1723 in q.js: deferred.reject replaced with undefined
Mutant 1724 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1725 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments), 1)
Mutant 1726 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[1])
Mutant 1727 in q.js: array_slice replaced with array_shift
Mutant 1728 in q.js: array_slice replaced with array_pop
Mutant 1729 in q.js: array_slice replaced with array_reverse
Mutant 1730 in q.js: arguments replaced with null
Mutant 1731 in q.js: arguments replaced with undefined
Mutant 1732 in q.js: arguments replaced with []
Mutant 1733 in q.js: 1 replaced with 0
Mutant 1734 in q.js: 1 replaced with 2
Mutant 1735 in q.js: 1 replaced with null
Mutant 1736 in q.js: callback replaced with null
Mutant 1737 in q.js: callback replaced with undefined
Mutant 1738 in q.js: callback replaced with {}
Mutant 1739 in q.js: args replaced with null
Mutant 1740 in q.js: args replaced with []
Mutant 1741 in q.js: args replaced with [1, 2, 3]
Mutant 1742 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1743 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1744 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1745 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1746 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1747 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1748 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(true)
Mutant 1749 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(false)
Mutant 1750 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver("string")
Mutant 1751 in q.js: deferred.makeNodeResolver replaced with deferred.resolve
Mutant 1752 in q.js: deferred.makeNodeResolver replaced with deferred.reject
Mutant 1753 in q.js: this.fapply replaced with this.nfapply
Mutant 1754 in q.js: this.fapply replaced with this.nfcall
not replacing this.fapply with this.nfapply
not replacing this.fapply with this.nfapply
not replacing this.fapply with this.nfcall
not replacing this.fapply with this.nfcall
Mutant 1755 in q.js: nodeArgs replaced with nodeArgs.slice(0, -1)
Mutant 1756 in q.js: nodeArgs replaced with nodeArgs.reverse()
Mutant 1757 in q.js: nodeArgs replaced with nodeArgs.concat(["foo"])
Mutant 1758 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1759 in q.js: deferred.reject replaced with deferred.notify
Mutant 1760 in q.js: deferred.reject replaced with deferred.makeNodeResolver
Mutant 1761 in q.js: callback === undefined replaced with callback !== null
Mutant 1762 in q.js: callback === undefined replaced with typeof callback === "function"
Mutant 1763 in q.js: callback === undefined replaced with callback instanceof Function
Mutant 1764 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1765 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 1766 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1767 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1768 in q.js: arguments replaced with array_slice(arguments, 1, 2)
Mutant 1769 in q.js: arguments replaced with array_slice(arguments, 0, 1)
Mutant 1770 in q.js: 1 replaced with 0
Mutant 1771 in q.js: 1 replaced with -1
Mutant 1772 in q.js: 1 replaced with NaN
Mutant 1773 in q.js: array_slice(arguments) replaced with array_slice(arguments).reverse()
Mutant 1774 in q.js: array_slice(arguments) replaced with array_slice(arguments).pop()
Mutant 1775 in q.js: array_slice(arguments) replaced with array_slice(arguments).shift()
Mutant 1776 in q.js: array_slice replaced with array_slice.length
Mutant 1777 in q.js: arguments replaced with null
Mutant 1778 in q.js: arguments replaced with undefined
Mutant 1779 in q.js: arguments replaced with []
Mutant 1780 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1781 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1782 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1783 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1784 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(undefined)
Mutant 1785 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1786 in q.js: deferred.makeNodeResolver replaced with deferred.reject
Mutant 1787 in q.js: deferred.makeNodeResolver replaced with deferred.notify
Mutant 1788 in q.js: Q replaced with deferred
Mutant 1789 in q.js: Q replaced with deferred.reject
Mutant 1790 in q.js: Q replaced with undefined
Mutant 1791 in q.js: callback replaced with function () {}
Mutant 1792 in q.js: callback replaced with callback.bind(null)
Mutant 1793 in q.js: callback replaced with callback.bind(this)
Mutant 1794 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1795 in q.js: deferred.reject replaced with null
Mutant 1796 in q.js: deferred.reject replaced with deferred.notify
Mutant 1797 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1798 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1799 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1800 in q.js: args.unshift replaced with args.push
Mutant 1801 in q.js: args.unshift replaced with args.shift
Mutant 1802 in q.js: args.unshift replaced with args.pop
Mutant 1803 in q.js: this replaced with null
Mutant 1804 in q.js: this replaced with undefined
Mutant 1805 in q.js: this replaced with 0
Mutant 1806 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply("hello")
Mutant 1807 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null)
Mutant 1808 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(undefined)
Mutant 1809 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1810 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1811 in q.js: Q.denodeify.apply replaced with Q.denodeify.apply.bind
Mutant 1812 in q.js: void 0 replaced with null
Mutant 1813 in q.js: void 0 replaced with undefined
Mutant 1814 in q.js: void 0 replaced with this
Mutant 1815 in q.js: args replaced with void 0
Mutant 1816 in q.js: args replaced with null
Mutant 1817 in q.js: args replaced with undefined
Mutant 1818 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1819 in q.js: array_slice(arguments, 2) replaced with array_slice(args, 1)
Mutant 1820 in q.js: array_slice(arguments, 2) replaced with array_slice(baseArgs, 2)
Mutant 1821 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1822 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1823 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1824 in q.js: 2 replaced with 1
Mutant 1825 in q.js: 2 replaced with 3
Mutant 1826 in q.js: 2 replaced with "foo"
Mutant 1827 in q.js: baseArgs.concat replaced with baseArgs + args
Mutant 1828 in q.js: baseArgs.concat replaced with [baseArgs, args]
Mutant 1829 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1830 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1831 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1832 in q.js: array_slice replaced with arguments.length
Mutant 1833 in q.js: arguments replaced with 1 + arguments
Mutant 1834 in q.js: arguments replaced with arguments.length
Mutant 1835 in q.js: arguments replaced with arguments.toString()
Mutant 1836 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1837 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1838 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1839 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver() + 1
Mutant 1840 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver() - 1
Mutant 1841 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver() * 2
Mutant 1842 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, args)
Mutant 1843 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, baseArgs)
Mutant 1844 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, nodeArgs)
Mutant 1845 in q.js: callback.apply replaced with callback.call
Mutant 1846 in q.js: callback.apply replaced with callback.bind
Mutant 1847 in q.js: thisp replaced with null
Mutant 1848 in q.js: thisp replaced with undefined
Mutant 1849 in q.js: thisp replaced with {}
Mutant 1850 in q.js: arguments replaced with []
Mutant 1851 in q.js: arguments replaced with [1]
Mutant 1852 in q.js: arguments replaced with [undefined]
Mutant 1853 in q.js: bound replaced with callback
Mutant 1854 in q.js: bound replaced with thisp
Mutant 1855 in q.js: bound replaced with undefined
Mutant 1856 in q.js: nodeArgs replaced with nodeArgs.concat()
Mutant 1857 in q.js: nodeArgs replaced with nodeArgs.pop()
Mutant 1858 in q.js: nodeArgs replaced with nodeArgs.slice(0, 1)
Mutant 1859 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1860 in q.js: deferred.reject replaced with deferred.notify
Mutant 1861 in q.js: deferred.reject replaced with undefined
Mutant 1862 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1863 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 2)
Mutant 1864 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, "foo")
Mutant 1865 in q.js: arguments replaced with undefined
Mutant 1866 in q.js: arguments replaced with null
Mutant 1867 in q.js: arguments replaced with []
Mutant 1868 in q.js: 0 replaced with 1
Mutant 1869 in q.js: 0 replaced with null
Mutant 1870 in q.js: 0 replaced with "hello"
Mutant 1871 in q.js: args.unshift replaced with args.push
Mutant 1872 in q.js: args.unshift replaced with args.pop
Mutant 1873 in q.js: args.unshift replaced with args.shift
Mutant 1874 in q.js: this replaced with null
Mutant 1875 in q.js: this replaced with undefined
Mutant 1876 in q.js: this replaced with {}
Mutant 1877 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1878 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined, args)
Mutant 1879 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this, args)
Mutant 1880 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1881 in q.js: Q.nbind.apply replaced with Q.nbind.bind
Mutant 1882 in q.js: void 0 replaced with null
Mutant 1883 in q.js: void 0 replaced with undefined
Mutant 1884 in q.js: void 0 replaced with 0
Mutant 1885 in q.js: args replaced with args.reverse()
Mutant 1886 in q.js: args replaced with args.concat(["extra argument"])
Mutant 1887 in q.js: args replaced with []
Mutant 1888 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.slice(1))
Mutant 1889 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, [args])
Mutant 1890 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.concat(args))
Mutant 1891 in q.js: Q replaced with Q.reject
Mutant 1892 in q.js: object replaced with undefined
Mutant 1893 in q.js: object replaced with null
Mutant 1894 in q.js: name replaced with name + "foo"
Mutant 1895 in q.js: name replaced with name * 2
Mutant 1896 in q.js: name replaced with name.toUpperCase()
Mutant 1897 in q.js: args replaced with args.slice(1)
Mutant 1898 in q.js: args replaced with args.pop()
Mutant 1899 in q.js: args replaced with args.reverse()
Mutant 1900 in q.js: array_slice replaced with array_slice.length
Mutant 1901 in q.js: args || [] replaced with null
Mutant 1902 in q.js: args || [] replaced with undefined
Mutant 1903 in q.js: args || [] replaced with 0
Mutant 1904 in q.js: defer replaced with defer.promise
Mutant 1905 in q.js: defer replaced with defer.resolve
Mutant 1906 in q.js: defer replaced with defer.reject
Mutant 1907 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1908 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1909 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1910 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1911 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1912 in q.js: deferred.makeNodeResolver() replaced with () => {}
Mutant 1913 in q.js: deferred.makeNodeResolver replaced with deferred.reject
Mutant 1914 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1915 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [nodeArgs, name])
Mutant 1916 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, "optional"])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [nodeArgs, name])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, "optional"])
Mutant 1917 in q.js: "post" replaced with "get"
Mutant 1918 in q.js: "post" replaced with "put"
Mutant 1919 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, object]
Mutant 1920 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.reverse()]
Mutant 1921 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.concat(object)]
Mutant 1922 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1923 in q.js: deferred.reject replaced with deferred.notify
Mutant 1924 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1925 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1926 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1927 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 0)
Mutant 1928 in q.js: arguments replaced with null
Mutant 1929 in q.js: arguments replaced with undefined
Mutant 1930 in q.js: arguments replaced with []
Mutant 1931 in q.js: 2 replaced with 1
Mutant 1932 in q.js: 2 replaced with 3
Mutant 1933 in q.js: 2 replaced with 0
Mutant 1934 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1935 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1936 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1937 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(true)
Mutant 1938 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(false)
Mutant 1939 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(undefined)
Mutant 1940 in q.js: deferred.makeNodeResolver replaced with null
Mutant 1941 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [nodeArgs, name])
Mutant 1942 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1943 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, 1])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [nodeArgs, name])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, 1])
Mutant 1944 in q.js: Q replaced with null
Mutant 1945 in q.js: Q replaced with undefined
Mutant 1946 in q.js: object replaced with this
Mutant 1947 in q.js: object replaced with null
Mutant 1948 in q.js: object replaced with undefined
Mutant 1949 in q.js: "post" replaced with "get"
Mutant 1950 in q.js: "post" replaced with "put"
Mutant 1951 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1952 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1953 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.length]
Mutant 1954 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1955 in q.js: deferred.reject replaced with null
Mutant 1956 in q.js: deferred.reject replaced with function () {}
Mutant 1957 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1958 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, "foo")
Mutant 1959 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, null)
Mutant 1960 in q.js: array_slice replaced with array_slice.length + 1
Mutant 1961 in q.js: arguments replaced with null
Mutant 1962 in q.js: arguments replaced with undefined
Mutant 1963 in q.js: arguments replaced with []
Mutant 1964 in q.js: 1 replaced with 2
Mutant 1965 in q.js: 1 replaced with nodeArgs.length
Mutant 1966 in q.js: 1 replaced with Math.random()
Mutant 1967 in q.js: defer replaced with undefined
Mutant 1968 in q.js: defer replaced with null
Mutant 1969 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1970 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1971 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1972 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1973 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1974 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1975 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeRejector
Mutant 1976 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("send", [name, nodeArgs])
Mutant 1977 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, 1])
Mutant 1978 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs.reverse()])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("send", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, 1])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs.reverse()])
Mutant 1979 in q.js: "post" replaced with "get"
Mutant 1980 in q.js: "post" replaced with "put"
Mutant 1981 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, 1]
Mutant 1982 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, undefined]
Mutant 1983 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1984 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1985 in q.js: deferred.reject replaced with deferred.notify
Mutant 1986 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1987 in q.js: Q(object).nodeify replaced with object
Mutant 1988 in q.js: Q replaced with undefined
Mutant 1989 in q.js: Q replaced with null
Mutant 1990 in q.js: Q replaced with {}
Mutant 1991 in q.js: object replaced with null
Mutant 1992 in q.js: object replaced with undefined
Mutant 1993 in q.js: object replaced with {}
Mutant 1994 in q.js: nodeback replaced with !nodeback
Mutant 1995 in q.js: nodeback replaced with nodeback + 1
Mutant 1996 in q.js: nodeback replaced with nodeback.call()
Mutant 1997 in q.js: nodeback replaced with !nodeback
Mutant 1998 in q.js: nodeback replaced with nodeback + 1
Mutant 1999 in q.js: nodeback replaced with undefined
Mutant 2000 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 2001 in q.js: nodeback(null, value) replaced with nodeback(value, null)
Mutant 2002 in q.js: nodeback(null, value) replaced with nodeback(value, undefined)
Mutant 2003 in q.js: null replaced with undefined
Mutant 2004 in q.js: null replaced with 0
Mutant 2005 in q.js: null replaced with {}
Mutant 2006 in q.js: value replaced with null
Mutant 2007 in q.js: value replaced with undefined
Mutant 2008 in q.js: value replaced with 0
Mutant 2009 in q.js: error replaced with undefined
Mutant 2010 in q.js: error replaced with null
Mutant 2011 in q.js: error replaced with "error"
Mutant 2012 in q.js: captureLine replaced with captureLine + 1
Mutant 2013 in q.js: captureLine replaced with captureLine - 1
Mutant 2014 in q.js: captureLine replaced with captureLine + 10
Mutant 2015 in queue.js: Q.defer replaced with Q.reject
Mutant 2016 in queue.js: ends.promise.get replaced with ends.promise.then
Mutant 2017 in queue.js: ends.promise.get replaced with ends.promise.catch
Mutant 2018 in queue.js: ends.promise.get replaced with ends.promise.finally
Mutant 2019 in queue.js: "head" replaced with "tail"
Mutant 2020 in queue.js: "head" replaced with "head.tail"
Mutant 2021 in queue.js: "head" replaced with "ends.promise.tail"
Mutant 2022 in queue.js: "tail" replaced with "head"
Mutant 2023 in queue.js: "tail" replaced with "tail.next"
Mutant 2024 in queue.js: "tail" replaced with "tail.promise"
Mutant 2025 in queue.js: closed.resolve replaced with closed.reject
Mutant 2026 in queue.js: error replaced with error.message
Mutant 2027 in queue.js: error replaced with new Error("Can't get value from closed queue")
Mutant 2028 in queue.js: error replaced with undefined
Mutant 2029 in queue.js: Q.reject replaced with Q.resolve
Mutant 2030 in queue.js: error replaced with Q.reject(error)
Mutant 2031 in queue.js: error replaced with Q.resolve(error)
Mutant 2032 in queue.js: ends.resolve replaced with ends.reject
[32m16:36:02 (3001) INFO Instrumenter[39m Instrumented 2 source file(s) with 2033 mutant(s)
[32m16:36:02 (3001) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m16:36:04 (3001) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m16:36:04 (3001) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m16:36:11 (3001) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6829 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 52m) 3/2033 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 49m) 4/2033 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 48m) 6/2033 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 12m) 7/2033 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 7m) 9/2033 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 22m) 10/2033 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 16m) 12/2033 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 27m) 13/2033 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 30m) 20/2033 tested (12 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 39m) 21/2033 tested (13 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 40m) 23/2033 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 47m) 24/2033 tested (16 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 47m) 26/2033 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 53m) 27/2033 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 52m) 29/2033 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 58m) 30/2033 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 2m) 31/2033 tested (23 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 1m) 33/2033 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 6m) 34/2033 tested (26 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 4m) 36/2033 tested (28 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 8m) 37/2033 tested (29 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 7m) 39/2033 tested (31 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 15m) 39/2033 tested (31 survived, 0 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 19m) 40/2033 tested (31 survived, 1 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 22m) 41/2033 tested (31 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 30m) 41/2033 tested (31 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 33m) 42/2033 tested (31 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 35m) 43/2033 tested (31 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 43m) 43/2033 tested (31 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 46m) 44/2033 tested (31 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 48m) 45/2033 tested (31 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 27m) 51/2033 tested (31 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 29m) 52/2033 tested (32 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 31m) 53/2033 tested (32 survived, 7 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 33m) 54/2033 tested (33 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 39m) 54/2033 tested (33 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 33m) 57/2033 tested (33 survived, 8 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 35m) 58/2033 tested (34 survived, 8 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 37m) 59/2033 tested (35 survived, 8 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 31m) 62/2033 tested (35 survived, 9 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 23m) 66/2033 tested (36 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 25m) 67/2033 tested (37 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 23m) 69/2033 tested (39 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 25m) 70/2033 tested (40 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 24m) 72/2033 tested (42 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 25m) 73/2033 tested (43 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 27m) 74/2033 tested (44 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 26m) 76/2033 tested (46 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 27m) 77/2033 tested (47 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 26m) 79/2033 tested (49 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 27m) 80/2033 tested (50 survived, 9 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 26m) 82/2033 tested (52 survived, 9 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 30m) 82/2033 tested (52 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 31m) 83/2033 tested (52 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 32m) 84/2033 tested (52 survived, 11 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 36m) 84/2033 tested (52 survived, 11 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 37m) 85/2033 tested (52 survived, 12 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 38m) 86/2033 tested (53 survived, 12 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 39m) 87/2033 tested (53 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 43m) 87/2033 tested (53 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 39m) 90/2033 tested (54 survived, 14 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 38m) 92/2033 tested (55 survived, 14 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 39m) 93/2033 tested (56 survived, 14 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 37m) 95/2033 tested (58 survived, 14 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 38m) 96/2033 tested (59 survived, 14 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 37m) 98/2033 tested (61 survived, 14 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 38m) 99/2033 tested (62 survived, 14 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 36m) 101/2033 tested (64 survived, 14 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 37m) 102/2033 tested (65 survived, 14 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 36m) 104/2033 tested (67 survived, 14 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 37m) 105/2033 tested (68 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 35m) 107/2033 tested (70 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 36m) 108/2033 tested (71 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 37m) 109/2033 tested (72 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 36m) 111/2033 tested (74 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 37m) 112/2033 tested (75 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 36m) 114/2033 tested (77 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 36m) 115/2033 tested (78 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 35m) 117/2033 tested (80 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 36m) 118/2033 tested (81 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 35m) 120/2033 tested (83 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 35m) 121/2033 tested (84 survived, 14 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 34m) 123/2033 tested (86 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 35m) 124/2033 tested (87 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 34m) 126/2033 tested (89 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 35m) 127/2033 tested (90 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 35m) 128/2033 tested (91 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 31m) 132/2033 tested (93 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 30m) 134/2033 tested (94 survived, 14 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 25m) 138/2033 tested (95 survived, 14 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 28m) 138/2033 tested (95 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 19m) 145/2033 tested (95 survived, 15 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 20m) 146/2033 tested (95 survived, 15 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 21m) 147/2033 tested (95 survived, 16 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 23m) 147/2033 tested (95 survived, 16 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 20m) 150/2033 tested (96 survived, 17 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 21m) 151/2033 tested (97 survived, 17 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 22m) 152/2033 tested (98 survived, 17 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 21m) 154/2033 tested (100 survived, 17 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 21m) 155/2033 tested (101 survived, 17 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 21m) 157/2033 tested (103 survived, 17 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 21m) 158/2033 tested (104 survived, 17 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 20m) 160/2033 tested (106 survived, 17 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 21m) 161/2033 tested (107 survived, 17 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 20m) 163/2033 tested (109 survived, 17 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 21m) 164/2033 tested (110 survived, 17 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 20m) 166/2033 tested (112 survived, 17 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 21m) 167/2033 tested (113 survived, 17 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 20m) 169/2033 tested (115 survived, 17 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 20m) 170/2033 tested (116 survived, 17 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 21m) 171/2033 tested (117 survived, 17 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 20m) 173/2033 tested (119 survived, 17 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 21m) 174/2033 tested (120 survived, 17 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 20m) 176/2033 tested (122 survived, 17 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 20m) 177/2033 tested (123 survived, 17 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 20m) 179/2033 tested (125 survived, 17 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 20m) 180/2033 tested (126 survived, 17 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 20m) 182/2033 tested (128 survived, 17 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 20m) 183/2033 tested (129 survived, 17 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 19m) 185/2033 tested (131 survived, 17 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 20m) 186/2033 tested (132 survived, 17 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 19m) 188/2033 tested (134 survived, 17 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 20m) 189/2033 tested (135 survived, 17 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 20m) 190/2033 tested (136 survived, 17 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 19m) 192/2033 tested (138 survived, 17 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 20m) 193/2033 tested (139 survived, 17 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 19m) 195/2033 tested (141 survived, 17 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 19m) 196/2033 tested (142 survived, 17 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 19m) 198/2033 tested (144 survived, 17 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 19m) 199/2033 tested (145 survived, 17 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 18m) 201/2033 tested (147 survived, 17 timed out)
Mutation testing 9% (elapsed: ~22m, remaining: ~3h 19m) 202/2033 tested (148 survived, 17 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 18m) 204/2033 tested (150 survived, 17 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 19m) 205/2033 tested (151 survived, 17 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 18m) 207/2033 tested (153 survived, 17 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 18m) 208/2033 tested (154 survived, 17 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 19m) 209/2033 tested (155 survived, 17 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 18m) 211/2033 tested (157 survived, 17 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 18m) 212/2033 tested (158 survived, 17 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 18m) 214/2033 tested (160 survived, 17 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 18m) 215/2033 tested (161 survived, 17 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 18m) 217/2033 tested (163 survived, 17 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 18m) 218/2033 tested (164 survived, 17 timed out)
Mutation testing 10% (elapsed: ~24m, remaining: ~3h 17m) 220/2033 tested (166 survived, 17 timed out)
Mutation testing 10% (elapsed: ~24m, remaining: ~3h 18m) 221/2033 tested (167 survived, 17 timed out)
Mutation testing 10% (elapsed: ~24m, remaining: ~3h 17m) 223/2033 tested (169 survived, 17 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 17m) 224/2033 tested (170 survived, 17 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 17m) 226/2033 tested (172 survived, 17 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 17m) 227/2033 tested (173 survived, 17 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 17m) 228/2033 tested (174 survived, 17 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 17m) 230/2033 tested (176 survived, 17 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 17m) 231/2033 tested (177 survived, 17 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 16m) 233/2033 tested (179 survived, 17 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 17m) 234/2033 tested (180 survived, 17 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 16m) 236/2033 tested (182 survived, 17 timed out)
Mutation testing 11% (elapsed: ~26m, remaining: ~3h 14m) 240/2033 tested (183 survived, 17 timed out)
Mutation testing 11% (elapsed: ~26m, remaining: ~3h 14m) 241/2033 tested (183 survived, 17 timed out)
Mutation testing 11% (elapsed: ~26m, remaining: ~3h 14m) 242/2033 tested (183 survived, 17 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 14m) 244/2033 tested (183 survived, 17 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 14m) 245/2033 tested (183 survived, 17 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 14m) 246/2033 tested (183 survived, 17 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 14m) 248/2033 tested (185 survived, 17 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 14m) 249/2033 tested (186 survived, 17 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 14m) 251/2033 tested (188 survived, 17 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 12m) 254/2033 tested (189 survived, 17 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 12m) 255/2033 tested (190 survived, 17 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 12m) 257/2033 tested (192 survived, 17 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 12m) 258/2033 tested (193 survived, 17 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 12m) 260/2033 tested (195 survived, 17 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 12m) 261/2033 tested (196 survived, 17 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 11m) 263/2033 tested (198 survived, 17 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 12m) 264/2033 tested (199 survived, 17 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 11m) 266/2033 tested (201 survived, 17 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 11m) 267/2033 tested (202 survived, 17 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 11m) 269/2033 tested (204 survived, 17 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 11m) 270/2033 tested (205 survived, 17 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 11m) 271/2033 tested (206 survived, 17 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 11m) 273/2033 tested (208 survived, 17 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 11m) 274/2033 tested (209 survived, 17 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 10m) 276/2033 tested (211 survived, 17 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 11m) 277/2033 tested (212 survived, 17 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 10m) 279/2033 tested (214 survived, 17 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 10m) 280/2033 tested (215 survived, 17 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 10m) 282/2033 tested (217 survived, 17 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 10m) 283/2033 tested (218 survived, 17 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 10m) 285/2033 tested (220 survived, 17 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 10m) 286/2033 tested (221 survived, 17 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 9m) 288/2033 tested (223 survived, 17 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 10m) 289/2033 tested (224 survived, 17 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 10m) 290/2033 tested (225 survived, 17 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 9m) 292/2033 tested (227 survived, 17 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 10m) 293/2033 tested (228 survived, 17 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 9m) 295/2033 tested (230 survived, 17 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 9m) 296/2033 tested (231 survived, 17 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 9m) 298/2033 tested (233 survived, 17 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 9m) 299/2033 tested (234 survived, 17 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 8m) 301/2033 tested (236 survived, 17 timed out)
Mutation testing 14% (elapsed: ~33m, remaining: ~3h 9m) 302/2033 tested (237 survived, 17 timed out)
Mutation testing 14% (elapsed: ~33m, remaining: ~3h 8m) 304/2033 tested (239 survived, 17 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 8m) 305/2033 tested (240 survived, 17 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 8m) 307/2033 tested (242 survived, 17 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 8m) 308/2033 tested (243 survived, 17 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 8m) 309/2033 tested (244 survived, 17 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 8m) 311/2033 tested (246 survived, 17 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 8m) 312/2033 tested (247 survived, 17 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 7m) 314/2033 tested (249 survived, 17 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 8m) 315/2033 tested (250 survived, 17 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 7m) 317/2033 tested (252 survived, 17 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 7m) 318/2033 tested (253 survived, 17 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 7m) 320/2033 tested (255 survived, 17 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 7m) 321/2033 tested (256 survived, 17 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 7m) 323/2033 tested (258 survived, 17 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 7m) 324/2033 tested (259 survived, 17 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 6m) 326/2033 tested (261 survived, 17 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 6m) 327/2033 tested (262 survived, 17 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 7m) 328/2033 tested (263 survived, 17 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 6m) 330/2033 tested (265 survived, 17 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 6m) 331/2033 tested (266 survived, 17 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 6m) 333/2033 tested (268 survived, 17 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 6m) 334/2033 tested (269 survived, 17 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 6m) 336/2033 tested (271 survived, 17 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 6m) 337/2033 tested (272 survived, 17 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 5m) 339/2033 tested (274 survived, 17 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 5m) 340/2033 tested (275 survived, 17 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 5m) 342/2033 tested (277 survived, 17 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 5m) 343/2033 tested (278 survived, 17 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 5m) 345/2033 tested (280 survived, 17 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 5m) 346/2033 tested (281 survived, 17 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 4m) 348/2033 tested (283 survived, 17 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 4m) 349/2033 tested (284 survived, 17 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 5m) 350/2033 tested (285 survived, 17 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 4m) 352/2033 tested (287 survived, 17 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 4m) 353/2033 tested (288 survived, 17 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 4m) 355/2033 tested (290 survived, 17 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 4m) 356/2033 tested (291 survived, 17 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 4m) 358/2033 tested (293 survived, 17 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 4m) 359/2033 tested (294 survived, 17 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 3m) 361/2033 tested (296 survived, 17 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 3m) 362/2033 tested (297 survived, 17 timed out)
Mutation testing 17% (elapsed: ~40m, remaining: ~3h 2m) 365/2033 tested (299 survived, 17 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~3h 1m) 368/2033 tested (300 survived, 17 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~3h 1m) 369/2033 tested (301 survived, 17 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~3h 1m) 371/2033 tested (303 survived, 17 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~3h 1m) 372/2033 tested (304 survived, 17 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~3h 1m) 374/2033 tested (306 survived, 17 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~3h 1m) 375/2033 tested (307 survived, 17 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~3h 0m) 377/2033 tested (309 survived, 17 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~3h 0m) 378/2033 tested (310 survived, 17 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~3h 0m) 380/2033 tested (312 survived, 17 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~3h 0m) 381/2033 tested (313 survived, 17 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~3h 0m) 383/2033 tested (315 survived, 17 timed out)
Mutation testing 18% (elapsed: ~42m, remaining: ~3h 0m) 384/2033 tested (316 survived, 17 timed out)
Mutation testing 18% (elapsed: ~42m, remaining: ~3h 0m) 385/2033 tested (317 survived, 17 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~3h 0m) 387/2033 tested (319 survived, 17 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~3h 0m) 388/2033 tested (320 survived, 17 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 59m) 390/2033 tested (322 survived, 17 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 59m) 391/2033 tested (323 survived, 17 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 59m) 393/2033 tested (325 survived, 17 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 59m) 395/2033 tested (326 survived, 17 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 58m) 397/2033 tested (328 survived, 17 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 58m) 399/2033 tested (329 survived, 17 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 57m) 401/2033 tested (331 survived, 17 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 57m) 402/2033 tested (332 survived, 17 timed out)
Mutation testing 19% (elapsed: ~44m, remaining: ~2h 57m) 403/2033 tested (333 survived, 17 timed out)
Mutation testing 19% (elapsed: ~44m, remaining: ~2h 57m) 405/2033 tested (335 survived, 17 timed out)
Mutation testing 19% (elapsed: ~44m, remaining: ~2h 57m) 406/2033 tested (336 survived, 17 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 57m) 408/2033 tested (338 survived, 17 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 57m) 409/2033 tested (339 survived, 17 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 56m) 411/2033 tested (341 survived, 17 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 57m) 412/2033 tested (342 survived, 17 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 56m) 414/2033 tested (344 survived, 17 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 56m) 415/2033 tested (345 survived, 17 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 55m) 418/2033 tested (347 survived, 17 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 55m) 419/2033 tested (347 survived, 17 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 56m) 420/2033 tested (347 survived, 18 timed out)
Mutation testing 20% (elapsed: ~46m, remaining: ~2h 56m) 420/2033 tested (347 survived, 18 timed out)
Mutation testing 20% (elapsed: ~46m, remaining: ~2h 56m) 421/2033 tested (347 survived, 19 timed out)
Mutation testing 20% (elapsed: ~46m, remaining: ~2h 56m) 423/2033 tested (347 survived, 20 timed out)
Mutation testing 20% (elapsed: ~46m, remaining: ~2h 56m) 424/2033 tested (347 survived, 20 timed out)
Mutation testing 20% (elapsed: ~46m, remaining: ~2h 56m) 426/2033 tested (347 survived, 20 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 56m) 427/2033 tested (347 survived, 20 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 56m) 428/2033 tested (347 survived, 20 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 56m) 429/2033 tested (347 survived, 20 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 56m) 430/2033 tested (347 survived, 21 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 57m) 430/2033 tested (347 survived, 21 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 57m) 431/2033 tested (347 survived, 22 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 57m) 432/2033 tested (347 survived, 23 timed out)
Mutation testing 21% (elapsed: ~48m, remaining: ~2h 57m) 432/2033 tested (347 survived, 23 timed out)
Mutation testing 21% (elapsed: ~48m, remaining: ~2h 56m) 436/2033 tested (347 survived, 24 timed out)
Mutation testing 21% (elapsed: ~48m, remaining: ~2h 56m) 437/2033 tested (348 survived, 24 timed out)
Mutation testing 21% (elapsed: ~48m, remaining: ~2h 55m) 441/2033 tested (350 survived, 24 timed out)
Mutation testing 21% (elapsed: ~48m, remaining: ~2h 52m) 447/2033 tested (350 survived, 24 timed out)
Mutation testing 21% (elapsed: ~48m, remaining: ~2h 53m) 447/2033 tested (350 survived, 24 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 51m) 451/2033 tested (350 survived, 25 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 51m) 453/2033 tested (350 survived, 25 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 52m) 453/2033 tested (350 survived, 25 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 52m) 454/2033 tested (350 survived, 26 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 51m) 457/2033 tested (350 survived, 27 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 51m) 458/2033 tested (351 survived, 27 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 50m) 460/2033 tested (353 survived, 27 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 51m) 461/2033 tested (354 survived, 27 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 50m) 463/2033 tested (356 survived, 27 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 50m) 464/2033 tested (357 survived, 27 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 50m) 466/2033 tested (359 survived, 27 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 50m) 467/2033 tested (360 survived, 27 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 49m) 470/2033 tested (361 survived, 27 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 50m) 470/2033 tested (361 survived, 27 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 49m) 472/2033 tested (362 survived, 28 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 49m) 473/2033 tested (363 survived, 28 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 49m) 474/2033 tested (364 survived, 28 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 49m) 476/2033 tested (364 survived, 29 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 49m) 477/2033 tested (365 survived, 29 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 49m) 479/2033 tested (367 survived, 29 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 49m) 480/2033 tested (368 survived, 29 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 48m) 482/2033 tested (370 survived, 29 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 49m) 483/2033 tested (371 survived, 29 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 48m) 485/2033 tested (373 survived, 29 timed out)
Mutation testing 23% (elapsed: ~53m, remaining: ~2h 48m) 486/2033 tested (374 survived, 29 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 48m) 488/2033 tested (376 survived, 29 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 48m) 489/2033 tested (377 survived, 29 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 48m) 491/2033 tested (379 survived, 29 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 48m) 492/2033 tested (380 survived, 29 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 47m) 494/2033 tested (382 survived, 29 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 47m) 495/2033 tested (383 survived, 29 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 47m) 497/2033 tested (385 survived, 29 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 47m) 498/2033 tested (386 survived, 29 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 47m) 500/2033 tested (388 survived, 29 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 47m) 501/2033 tested (389 survived, 29 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 46m) 503/2033 tested (391 survived, 29 timed out)
Mutation testing 24% (elapsed: ~55m, remaining: ~2h 46m) 504/2033 tested (392 survived, 29 timed out)
Mutation testing 24% (elapsed: ~55m, remaining: ~2h 46m) 506/2033 tested (394 survived, 29 timed out)
Mutation testing 24% (elapsed: ~55m, remaining: ~2h 46m) 507/2033 tested (395 survived, 29 timed out)
Mutation testing 24% (elapsed: ~55m, remaining: ~2h 46m) 508/2033 tested (396 survived, 29 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 46m) 510/2033 tested (398 survived, 29 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 46m) 510/2033 tested (398 survived, 29 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 45m) 514/2033 tested (398 survived, 30 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 45m) 514/2033 tested (398 survived, 30 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 45m) 516/2033 tested (399 survived, 31 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 45m) 517/2033 tested (400 survived, 31 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 45m) 519/2033 tested (401 survived, 31 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 44m) 521/2033 tested (401 survived, 32 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 524/2033 tested (401 survived, 32 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 524/2033 tested (401 survived, 32 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 525/2033 tested (401 survived, 33 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 526/2033 tested (401 survived, 34 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 45m) 526/2033 tested (401 survived, 34 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 45m) 527/2033 tested (401 survived, 35 timed out)
Mutation testing 25% (elapsed: ~58m, remaining: ~2h 45m) 528/2033 tested (401 survived, 36 timed out)
Mutation testing 25% (elapsed: ~58m, remaining: ~2h 45m) 528/2033 tested (401 survived, 36 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 45m) 529/2033 tested (401 survived, 37 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 45m) 530/2033 tested (401 survived, 38 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 46m) 530/2033 tested (401 survived, 38 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 46m) 531/2033 tested (401 survived, 39 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 46m) 533/2033 tested (403 survived, 39 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 46m) 534/2033 tested (404 survived, 39 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 45m) 536/2033 tested (406 survived, 39 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 45m) 537/2033 tested (407 survived, 39 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 45m) 539/2033 tested (409 survived, 39 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 45m) 541/2033 tested (409 survived, 39 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 45m) 542/2033 tested (409 survived, 40 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 45m) 543/2033 tested (409 survived, 40 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 45m) 544/2033 tested (409 survived, 41 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 45m) 545/2033 tested (409 survived, 41 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 45m) 546/2033 tested (409 survived, 41 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 45m) 547/2033 tested (409 survived, 41 timed out)
Mutation testing 26% (elapsed: ~1h 1m, remaining: ~2h 45m) 548/2033 tested (410 survived, 41 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 44m) 550/2033 tested (412 survived, 41 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 44m) 551/2033 tested (413 survived, 41 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 45m) 552/2033 tested (414 survived, 41 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 44m) 554/2033 tested (416 survived, 41 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 44m) 555/2033 tested (417 survived, 41 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 44m) 557/2033 tested (419 survived, 41 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 44m) 558/2033 tested (420 survived, 41 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 43m) 560/2033 tested (422 survived, 41 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 43m) 561/2033 tested (423 survived, 41 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 43m) 563/2033 tested (425 survived, 41 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 43m) 564/2033 tested (426 survived, 41 timed out)
Mutation testing 27% (elapsed: ~1h 3m, remaining: ~2h 43m) 566/2033 tested (428 survived, 41 timed out)
Mutation testing 27% (elapsed: ~1h 3m, remaining: ~2h 43m) 567/2033 tested (429 survived, 41 timed out)
Mutation testing 27% (elapsed: ~1h 3m, remaining: ~2h 42m) 569/2033 tested (431 survived, 41 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 42m) 570/2033 tested (432 survived, 41 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 42m) 572/2033 tested (434 survived, 41 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 42m) 573/2033 tested (435 survived, 41 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 42m) 575/2033 tested (437 survived, 41 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 42m) 576/2033 tested (438 survived, 41 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 41m) 578/2033 tested (440 survived, 41 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 41m) 579/2033 tested (441 survived, 41 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 41m) 581/2033 tested (443 survived, 41 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 41m) 582/2033 tested (444 survived, 41 timed out)
Mutation testing 28% (elapsed: ~1h 5m, remaining: ~2h 41m) 584/2033 tested (446 survived, 41 timed out)
Mutation testing 28% (elapsed: ~1h 5m, remaining: ~2h 41m) 585/2033 tested (447 survived, 41 timed out)
Mutation testing 28% (elapsed: ~1h 5m, remaining: ~2h 41m) 586/2033 tested (448 survived, 41 timed out)
Mutation testing 28% (elapsed: ~1h 5m, remaining: ~2h 40m) 588/2033 tested (450 survived, 41 timed out)
Mutation testing 28% (elapsed: ~1h 5m, remaining: ~2h 40m) 589/2033 tested (451 survived, 41 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 40m) 591/2033 tested (453 survived, 41 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 40m) 592/2033 tested (454 survived, 41 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 40m) 594/2033 tested (456 survived, 41 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 40m) 595/2033 tested (457 survived, 41 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 39m) 597/2033 tested (459 survived, 41 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 39m) 598/2033 tested (460 survived, 41 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 39m) 600/2033 tested (462 survived, 41 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 39m) 601/2033 tested (463 survived, 41 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 39m) 603/2033 tested (465 survived, 41 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 39m) 604/2033 tested (466 survived, 41 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 38m) 606/2033 tested (468 survived, 41 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 38m) 607/2033 tested (469 survived, 41 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 38m) 609/2033 tested (471 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 38m) 610/2033 tested (472 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 38m) 612/2033 tested (474 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 38m) 613/2033 tested (475 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 37m) 615/2033 tested (477 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 37m) 616/2033 tested (478 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 37m) 618/2033 tested (480 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 37m) 619/2033 tested (481 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 37m) 621/2033 tested (483 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 37m) 622/2033 tested (484 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 37m) 623/2033 tested (485 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 36m) 625/2033 tested (487 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 36m) 626/2033 tested (488 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 10m, remaining: ~2h 36m) 628/2033 tested (490 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 10m, remaining: ~2h 36m) 629/2033 tested (491 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 10m, remaining: ~2h 36m) 630/2033 tested (492 survived, 41 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 36m) 631/2033 tested (492 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 37m) 631/2033 tested (492 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 37m) 632/2033 tested (492 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 37m) 633/2033 tested (492 survived, 43 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 37m) 633/2033 tested (492 survived, 43 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 37m) 634/2033 tested (492 survived, 44 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 37m) 635/2033 tested (492 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 37m) 635/2033 tested (492 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 37m) 636/2033 tested (492 survived, 46 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 37m) 637/2033 tested (492 survived, 47 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 38m) 637/2033 tested (492 survived, 47 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 38m) 638/2033 tested (492 survived, 48 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 38m) 639/2033 tested (492 survived, 49 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 38m) 639/2033 tested (492 survived, 49 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 38m) 640/2033 tested (492 survived, 50 timed out)
Mutation testing 31% (elapsed: ~1h 13m, remaining: ~2h 38m) 641/2033 tested (492 survived, 51 timed out)
Mutation testing 31% (elapsed: ~1h 13m, remaining: ~2h 38m) 642/2033 tested (493 survived, 51 timed out)
Mutation testing 31% (elapsed: ~1h 13m, remaining: ~2h 38m) 644/2033 tested (495 survived, 51 timed out)
Mutation testing 31% (elapsed: ~1h 13m, remaining: ~2h 38m) 644/2033 tested (495 survived, 51 timed out)
Mutation testing 31% (elapsed: ~1h 13m, remaining: ~2h 38m) 645/2033 tested (495 survived, 52 timed out)
Mutation testing 31% (elapsed: ~1h 13m, remaining: ~2h 38m) 646/2033 tested (496 survived, 52 timed out)
Mutation testing 31% (elapsed: ~1h 14m, remaining: ~2h 38m) 647/2033 tested (496 survived, 53 timed out)
Mutation testing 31% (elapsed: ~1h 14m, remaining: ~2h 38m) 649/2033 tested (498 survived, 53 timed out)
Mutation testing 31% (elapsed: ~1h 14m, remaining: ~2h 38m) 650/2033 tested (499 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 38m) 651/2033 tested (500 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 37m) 653/2033 tested (502 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 37m) 654/2033 tested (503 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 37m) 656/2033 tested (505 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 37m) 657/2033 tested (506 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 37m) 659/2033 tested (508 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 36m) 663/2033 tested (509 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 36m) 663/2033 tested (509 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 36m) 664/2033 tested (509 survived, 54 timed out)
Mutation testing 32% (elapsed: ~1h 16m, remaining: ~2h 36m) 665/2033 tested (509 survived, 55 timed out)
Mutation testing 32% (elapsed: ~1h 16m, remaining: ~2h 36m) 665/2033 tested (509 survived, 55 timed out)
Mutation testing 32% (elapsed: ~1h 16m, remaining: ~2h 36m) 666/2033 tested (509 survived, 56 timed out)
Mutation testing 32% (elapsed: ~1h 16m, remaining: ~2h 36m) 667/2033 tested (509 survived, 57 timed out)
Mutation testing 32% (elapsed: ~1h 16m, remaining: ~2h 36m) 668/2033 tested (510 survived, 57 timed out)
Mutation testing 32% (elapsed: ~1h 16m, remaining: ~2h 36m) 669/2033 tested (511 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 36m) 671/2033 tested (513 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 36m) 672/2033 tested (514 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 35m) 674/2033 tested (516 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 35m) 675/2033 tested (517 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 34m) 679/2033 tested (518 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 34m) 680/2033 tested (518 survived, 58 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 35m) 680/2033 tested (518 survived, 58 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 35m) 681/2033 tested (518 survived, 59 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 35m) 681/2033 tested (518 survived, 59 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 35m) 682/2033 tested (518 survived, 60 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 35m) 684/2033 tested (518 survived, 61 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 35m) 684/2033 tested (518 survived, 61 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 35m) 685/2033 tested (518 survived, 61 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 35m) 686/2033 tested (518 survived, 61 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 35m) 687/2033 tested (518 survived, 61 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 35m) 688/2033 tested (518 survived, 61 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 35m) 689/2033 tested (518 survived, 61 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 35m) 690/2033 tested (518 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 35m) 692/2033 tested (520 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 35m) 693/2033 tested (521 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 34m) 694/2033 tested (521 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 34m) 695/2033 tested (521 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 34m) 696/2033 tested (521 survived, 62 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 35m) 696/2033 tested (521 survived, 62 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 35m) 697/2033 tested (521 survived, 63 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 35m) 698/2033 tested (521 survived, 64 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 35m) 698/2033 tested (521 survived, 64 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 35m) 699/2033 tested (521 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 35m) 700/2033 tested (521 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 35m) 701/2033 tested (521 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 35m) 701/2033 tested (521 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 35m) 702/2033 tested (521 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 35m) 703/2033 tested (521 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 35m) 704/2033 tested (521 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 35m) 706/2033 tested (522 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 35m) 707/2033 tested (523 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 23m, remaining: ~2h 35m) 708/2033 tested (524 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 23m, remaining: ~2h 35m) 709/2033 tested (524 survived, 66 timed out)
Mutation testing 34% (elapsed: ~1h 23m, remaining: ~2h 35m) 710/2033 tested (525 survived, 66 timed out)
Mutation testing 34% (elapsed: ~1h 23m, remaining: ~2h 35m) 711/2033 tested (526 survived, 66 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 35m) 712/2033 tested (526 survived, 67 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 35m) 712/2033 tested (526 survived, 67 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 35m) 714/2033 tested (526 survived, 68 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 35m) 715/2033 tested (526 survived, 69 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 35m) 715/2033 tested (526 survived, 69 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 35m) 716/2033 tested (526 survived, 70 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 35m) 717/2033 tested (526 survived, 71 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 35m) 717/2033 tested (526 survived, 71 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 35m) 718/2033 tested (526 survived, 72 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 35m) 719/2033 tested (526 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 35m) 719/2033 tested (526 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 35m) 720/2033 tested (526 survived, 74 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 35m) 721/2033 tested (526 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 36m) 721/2033 tested (526 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 36m) 722/2033 tested (526 survived, 76 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 36m) 723/2033 tested (526 survived, 77 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 36m) 723/2033 tested (526 survived, 77 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 36m) 724/2033 tested (526 survived, 78 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 36m) 725/2033 tested (526 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 36m) 725/2033 tested (526 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 27m, remaining: ~2h 36m) 726/2033 tested (526 survived, 80 timed out)
Mutation testing 35% (elapsed: ~1h 27m, remaining: ~2h 36m) 726/2033 tested (526 survived, 80 timed out)
Mutation testing 35% (elapsed: ~1h 27m, remaining: ~2h 36m) 727/2033 tested (526 survived, 81 timed out)
Mutation testing 35% (elapsed: ~1h 27m, remaining: ~2h 36m) 728/2033 tested (526 survived, 82 timed out)
Mutation testing 35% (elapsed: ~1h 27m, remaining: ~2h 37m) 728/2033 tested (526 survived, 82 timed out)
Mutation testing 35% (elapsed: ~1h 27m, remaining: ~2h 37m) 729/2033 tested (526 survived, 83 timed out)
Mutation testing 35% (elapsed: ~1h 28m, remaining: ~2h 37m) 730/2033 tested (526 survived, 84 timed out)
Mutation testing 35% (elapsed: ~1h 28m, remaining: ~2h 37m) 730/2033 tested (526 survived, 84 timed out)
Mutation testing 35% (elapsed: ~1h 28m, remaining: ~2h 37m) 731/2033 tested (526 survived, 85 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 37m) 732/2033 tested (526 survived, 86 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 37m) 732/2033 tested (526 survived, 86 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 37m) 733/2033 tested (526 survived, 87 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 37m) 734/2033 tested (526 survived, 88 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 37m) 735/2033 tested (527 survived, 88 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 37m) 737/2033 tested (529 survived, 88 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 37m) 738/2033 tested (530 survived, 88 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 36m) 740/2033 tested (532 survived, 88 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 36m) 741/2033 tested (533 survived, 88 timed out)
Mutation testing 36% (elapsed: ~1h 30m, remaining: ~2h 36m) 743/2033 tested (535 survived, 88 timed out)
Mutation testing 36% (elapsed: ~1h 30m, remaining: ~2h 36m) 744/2033 tested (536 survived, 88 timed out)
Mutation testing 36% (elapsed: ~1h 30m, remaining: ~2h 35m) 746/2033 tested (538 survived, 88 timed out)
Mutation testing 36% (elapsed: ~1h 30m, remaining: ~2h 35m) 747/2033 tested (539 survived, 88 timed out)
Mutation testing 36% (elapsed: ~1h 30m, remaining: ~2h 35m) 748/2033 tested (540 survived, 88 timed out)
Mutation testing 36% (elapsed: ~1h 30m, remaining: ~2h 35m) 750/2033 tested (542 survived, 88 timed out)
Mutation testing 36% (elapsed: ~1h 31m, remaining: ~2h 35m) 751/2033 tested (543 survived, 88 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 34m) 753/2033 tested (545 survived, 88 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 34m) 754/2033 tested (546 survived, 88 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 34m) 756/2033 tested (548 survived, 88 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 34m) 757/2033 tested (549 survived, 88 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 34m) 759/2033 tested (551 survived, 88 timed out)
Mutation testing 37% (elapsed: ~1h 32m, remaining: ~2h 34m) 760/2033 tested (552 survived, 88 timed out)
Mutation testing 37% (elapsed: ~1h 32m, remaining: ~2h 33m) 762/2033 tested (554 survived, 88 timed out)
Mutation testing 37% (elapsed: ~1h 32m, remaining: ~2h 33m) 763/2033 tested (555 survived, 88 timed out)
Mutation testing 37% (elapsed: ~1h 32m, remaining: ~2h 33m) 765/2033 tested (557 survived, 88 timed out)
Mutation testing 37% (elapsed: ~1h 32m, remaining: ~2h 33m) 766/2033 tested (558 survived, 88 timed out)
Mutation testing 37% (elapsed: ~1h 32m, remaining: ~2h 32m) 768/2033 tested (560 survived, 88 timed out)
Mutation testing 37% (elapsed: ~1h 33m, remaining: ~2h 32m) 769/2033 tested (561 survived, 88 timed out)
Mutation testing 37% (elapsed: ~1h 33m, remaining: ~2h 32m) 771/2033 tested (563 survived, 88 timed out)
Mutation testing 37% (elapsed: ~1h 33m, remaining: ~2h 32m) 772/2033 tested (564 survived, 88 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 32m) 774/2033 tested (566 survived, 88 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 32m) 775/2033 tested (567 survived, 88 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 31m) 776/2033 tested (568 survived, 88 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 31m) 778/2033 tested (570 survived, 88 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 31m) 779/2033 tested (571 survived, 88 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 31m) 781/2033 tested (573 survived, 88 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 31m) 782/2033 tested (574 survived, 88 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 30m) 784/2033 tested (576 survived, 88 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 30m) 785/2033 tested (577 survived, 88 timed out)
Mutation testing 38% (elapsed: ~1h 35m, remaining: ~2h 30m) 787/2033 tested (579 survived, 88 timed out)
Mutation testing 38% (elapsed: ~1h 35m, remaining: ~2h 30m) 788/2033 tested (580 survived, 88 timed out)
Mutation testing 38% (elapsed: ~1h 35m, remaining: ~2h 29m) 790/2033 tested (582 survived, 88 timed out)
Mutation testing 38% (elapsed: ~1h 35m, remaining: ~2h 29m) 791/2033 tested (583 survived, 88 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 29m) 793/2033 tested (585 survived, 88 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 29m) 794/2033 tested (586 survived, 88 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 29m) 796/2033 tested (588 survived, 88 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 29m) 797/2033 tested (589 survived, 88 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 28m) 799/2033 tested (591 survived, 88 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 28m) 800/2033 tested (592 survived, 88 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 28m) 802/2033 tested (594 survived, 88 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 28m) 803/2033 tested (595 survived, 88 timed out)
Mutation testing 39% (elapsed: ~1h 37m, remaining: ~2h 27m) 805/2033 tested (597 survived, 88 timed out)
Mutation testing 39% (elapsed: ~1h 37m, remaining: ~2h 27m) 806/2033 tested (598 survived, 88 timed out)
Mutation testing 39% (elapsed: ~1h 37m, remaining: ~2h 27m) 808/2033 tested (600 survived, 88 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 26m) 814/2033 tested (600 survived, 88 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 25m) 816/2033 tested (602 survived, 88 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 25m) 817/2033 tested (603 survived, 88 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 25m) 818/2033 tested (604 survived, 88 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 25m) 820/2033 tested (606 survived, 88 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 25m) 821/2033 tested (607 survived, 88 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 24m) 823/2033 tested (609 survived, 88 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 24m) 824/2033 tested (610 survived, 88 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 24m) 826/2033 tested (612 survived, 88 timed out)
Mutation testing 40% (elapsed: ~1h 39m, remaining: ~2h 24m) 827/2033 tested (613 survived, 88 timed out)
Mutation testing 40% (elapsed: ~1h 39m, remaining: ~2h 24m) 829/2033 tested (615 survived, 88 timed out)
Mutation testing 40% (elapsed: ~1h 39m, remaining: ~2h 23m) 830/2033 tested (616 survived, 88 timed out)
Mutation testing 40% (elapsed: ~1h 39m, remaining: ~2h 23m) 832/2033 tested (618 survived, 88 timed out)
Mutation testing 40% (elapsed: ~1h 39m, remaining: ~2h 23m) 833/2033 tested (619 survived, 88 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 23m) 835/2033 tested (621 survived, 88 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 23m) 836/2033 tested (622 survived, 88 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 22m) 838/2033 tested (624 survived, 88 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 22m) 839/2033 tested (625 survived, 88 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 22m) 841/2033 tested (627 survived, 88 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 22m) 842/2033 tested (628 survived, 88 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 22m) 844/2033 tested (630 survived, 88 timed out)
Mutation testing 41% (elapsed: ~1h 41m, remaining: ~2h 21m) 848/2033 tested (631 survived, 88 timed out)
Mutation testing 41% (elapsed: ~1h 41m, remaining: ~2h 21m) 849/2033 tested (632 survived, 88 timed out)
Mutation testing 41% (elapsed: ~1h 41m, remaining: ~2h 20m) 851/2033 tested (634 survived, 88 timed out)
Mutation testing 41% (elapsed: ~1h 41m, remaining: ~2h 20m) 852/2033 tested (635 survived, 88 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 20m) 854/2033 tested (637 survived, 88 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 20m) 856/2033 tested (638 survived, 88 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 19m) 858/2033 tested (639 survived, 88 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 19m) 859/2033 tested (640 survived, 88 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 19m) 861/2033 tested (642 survived, 88 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 19m) 862/2033 tested (643 survived, 88 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 19m) 863/2033 tested (644 survived, 88 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 18m) 865/2033 tested (646 survived, 88 timed out)
Mutation testing 42% (elapsed: ~1h 43m, remaining: ~2h 18m) 866/2033 tested (647 survived, 88 timed out)
Mutation testing 42% (elapsed: ~1h 43m, remaining: ~2h 18m) 869/2033 tested (649 survived, 88 timed out)
Mutation testing 42% (elapsed: ~1h 43m, remaining: ~2h 18m) 870/2033 tested (650 survived, 88 timed out)
Mutation testing 42% (elapsed: ~1h 43m, remaining: ~2h 17m) 872/2033 tested (652 survived, 88 timed out)
Mutation testing 42% (elapsed: ~1h 43m, remaining: ~2h 17m) 873/2033 tested (653 survived, 88 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 17m) 875/2033 tested (655 survived, 88 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 17m) 876/2033 tested (655 survived, 88 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 17m) 877/2033 tested (655 survived, 88 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 17m) 878/2033 tested (655 survived, 88 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 16m) 880/2033 tested (657 survived, 88 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 16m) 881/2033 tested (658 survived, 88 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 16m) 883/2033 tested (660 survived, 88 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 16m) 884/2033 tested (661 survived, 88 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 16m) 886/2033 tested (662 survived, 88 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 16m) 886/2033 tested (662 survived, 88 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 16m) 887/2033 tested (662 survived, 89 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 16m) 887/2033 tested (662 survived, 89 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 16m) 888/2033 tested (662 survived, 90 timed out)
Mutation testing 43% (elapsed: ~1h 46m, remaining: ~2h 16m) 889/2033 tested (662 survived, 91 timed out)
Mutation testing 43% (elapsed: ~1h 46m, remaining: ~2h 16m) 891/2033 tested (664 survived, 91 timed out)
Mutation testing 43% (elapsed: ~1h 46m, remaining: ~2h 16m) 892/2033 tested (665 survived, 91 timed out)
Mutation testing 43% (elapsed: ~1h 46m, remaining: ~2h 15m) 894/2033 tested (667 survived, 91 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 15m) 897/2033 tested (667 survived, 91 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 14m) 899/2033 tested (669 survived, 91 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 14m) 900/2033 tested (670 survived, 91 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 14m) 902/2033 tested (672 survived, 91 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 14m) 903/2033 tested (673 survived, 91 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 13m) 905/2033 tested (675 survived, 91 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 13m) 906/2033 tested (676 survived, 91 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 13m) 908/2033 tested (678 survived, 91 timed out)
Mutation testing 44% (elapsed: ~1h 48m, remaining: ~2h 13m) 909/2033 tested (679 survived, 91 timed out)
Mutation testing 44% (elapsed: ~1h 48m, remaining: ~2h 13m) 911/2033 tested (681 survived, 91 timed out)
Mutation testing 44% (elapsed: ~1h 48m, remaining: ~2h 13m) 912/2033 tested (682 survived, 91 timed out)
Mutation testing 44% (elapsed: ~1h 48m, remaining: ~2h 12m) 914/2033 tested (684 survived, 91 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 12m) 915/2033 tested (685 survived, 91 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 12m) 917/2033 tested (687 survived, 91 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 12m) 918/2033 tested (688 survived, 91 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 12m) 920/2033 tested (690 survived, 91 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 12m) 921/2033 tested (691 survived, 91 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 11m) 923/2033 tested (693 survived, 91 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 11m) 924/2033 tested (694 survived, 91 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 11m) 926/2033 tested (696 survived, 91 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 11m) 927/2033 tested (697 survived, 91 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 11m) 928/2033 tested (698 survived, 91 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 11m) 929/2033 tested (698 survived, 92 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 11m) 930/2033 tested (699 survived, 92 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 10m) 932/2033 tested (701 survived, 92 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 10m) 933/2033 tested (702 survived, 92 timed out)
Mutation testing 45% (elapsed: ~1h 51m, remaining: ~2h 10m) 935/2033 tested (704 survived, 92 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 10m) 936/2033 tested (705 survived, 92 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 9m) 938/2033 tested (707 survived, 92 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 10m) 938/2033 tested (707 survived, 92 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 10m) 939/2033 tested (707 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 9m) 941/2033 tested (709 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 9m) 942/2033 tested (710 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 9m) 944/2033 tested (712 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 9m) 945/2033 tested (713 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 9m) 947/2033 tested (715 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 8m) 948/2033 tested (716 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 8m) 950/2033 tested (718 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 8m) 951/2033 tested (719 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 8m) 953/2033 tested (721 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 8m) 953/2033 tested (721 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 8m) 954/2033 tested (721 survived, 94 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 8m) 955/2033 tested (721 survived, 95 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 8m) 955/2033 tested (721 survived, 95 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 8m) 956/2033 tested (721 survived, 96 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 8m) 957/2033 tested (721 survived, 97 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 8m) 958/2033 tested (722 survived, 97 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 8m) 959/2033 tested (723 survived, 97 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 7m) 961/2033 tested (725 survived, 97 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 7m) 962/2033 tested (726 survived, 97 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 7m) 964/2033 tested (728 survived, 97 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 7m) 965/2033 tested (729 survived, 97 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 7m) 967/2033 tested (731 survived, 97 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 7m) 968/2033 tested (732 survived, 97 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 6m) 970/2033 tested (734 survived, 97 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 6m) 971/2033 tested (735 survived, 97 timed out)
Mutation testing 47% (elapsed: ~1h 56m, remaining: ~2h 6m) 973/2033 tested (737 survived, 97 timed out)
Mutation testing 47% (elapsed: ~1h 56m, remaining: ~2h 6m) 974/2033 tested (738 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 5m) 976/2033 tested (740 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 5m) 977/2033 tested (741 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 5m) 979/2033 tested (743 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 5m) 980/2033 tested (744 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 5m) 982/2033 tested (746 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 5m) 983/2033 tested (747 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 4m) 985/2033 tested (749 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 4m) 986/2033 tested (750 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 4m) 988/2033 tested (752 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 4m) 989/2033 tested (753 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 58m, remaining: ~2h 4m) 991/2033 tested (755 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 58m, remaining: ~2h 4m) 992/2033 tested (756 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 58m, remaining: ~2h 3m) 993/2033 tested (757 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 58m, remaining: ~2h 3m) 995/2033 tested (759 survived, 97 timed out)
Mutation testing 48% (elapsed: ~1h 58m, remaining: ~2h 3m) 996/2033 tested (760 survived, 97 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~2h 3m) 998/2033 tested (762 survived, 97 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 3m) 999/2033 tested (763 survived, 97 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 2m) 1001/2033 tested (765 survived, 97 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 2m) 1002/2033 tested (766 survived, 97 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 2m) 1004/2033 tested (768 survived, 97 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 2m) 1005/2033 tested (769 survived, 97 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 2m) 1007/2033 tested (771 survived, 97 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 2m) 1008/2033 tested (771 survived, 97 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 1m) 1009/2033 tested (771 survived, 97 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 1m) 1011/2033 tested (771 survived, 97 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 1m) 1012/2033 tested (771 survived, 97 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 1m) 1014/2033 tested (771 survived, 97 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 1m) 1015/2033 tested (771 survived, 97 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~2h 0m) 1017/2033 tested (773 survived, 97 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~2h 0m) 1018/2033 tested (773 survived, 97 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~2h 0m) 1019/2033 tested (774 survived, 97 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~2h 0m) 1021/2033 tested (776 survived, 97 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~2h 0m) 1022/2033 tested (777 survived, 97 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~2h 0m) 1024/2033 tested (779 survived, 97 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 59m) 1025/2033 tested (780 survived, 97 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 59m) 1027/2033 tested (782 survived, 97 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 59m) 1028/2033 tested (783 survived, 97 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 59m) 1030/2033 tested (785 survived, 97 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 59m) 1031/2033 tested (786 survived, 97 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 58m) 1033/2033 tested (788 survived, 97 timed out)
Mutation testing 50% (elapsed: ~2h 3m, remaining: ~1h 58m) 1034/2033 tested (789 survived, 97 timed out)
Mutation testing 50% (elapsed: ~2h 3m, remaining: ~1h 58m) 1036/2033 tested (791 survived, 97 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 58m) 1037/2033 tested (792 survived, 97 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 58m) 1039/2033 tested (794 survived, 97 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 58m) 1040/2033 tested (795 survived, 97 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 57m) 1042/2033 tested (797 survived, 97 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 57m) 1043/2033 tested (798 survived, 97 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 57m) 1045/2033 tested (800 survived, 97 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 57m) 1046/2033 tested (801 survived, 97 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 57m) 1047/2033 tested (802 survived, 97 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 56m) 1049/2033 tested (804 survived, 97 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 56m) 1050/2033 tested (805 survived, 97 timed out)
Mutation testing 51% (elapsed: ~2h 5m, remaining: ~1h 56m) 1052/2033 tested (807 survived, 97 timed out)
Mutation testing 51% (elapsed: ~2h 5m, remaining: ~1h 56m) 1053/2033 tested (808 survived, 97 timed out)
Mutation testing 51% (elapsed: ~2h 5m, remaining: ~1h 56m) 1055/2033 tested (810 survived, 97 timed out)
Mutation testing 51% (elapsed: ~2h 5m, remaining: ~1h 56m) 1056/2033 tested (811 survived, 97 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 55m) 1058/2033 tested (813 survived, 97 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 55m) 1059/2033 tested (814 survived, 97 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 55m) 1061/2033 tested (816 survived, 97 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 55m) 1062/2033 tested (817 survived, 97 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 55m) 1064/2033 tested (819 survived, 97 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 54m) 1065/2033 tested (820 survived, 97 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 54m) 1067/2033 tested (822 survived, 97 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 54m) 1068/2033 tested (823 survived, 97 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 54m) 1070/2033 tested (825 survived, 97 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 54m) 1071/2033 tested (826 survived, 97 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 53m) 1073/2033 tested (828 survived, 97 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 53m) 1074/2033 tested (829 survived, 97 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 53m) 1075/2033 tested (830 survived, 97 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 53m) 1077/2033 tested (832 survived, 97 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 53m) 1078/2033 tested (833 survived, 97 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 53m) 1080/2033 tested (835 survived, 97 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 53m) 1081/2033 tested (836 survived, 97 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 52m) 1083/2033 tested (838 survived, 97 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 52m) 1084/2033 tested (839 survived, 97 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 52m) 1086/2033 tested (841 survived, 97 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 52m) 1087/2033 tested (842 survived, 97 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 51m) 1089/2033 tested (844 survived, 97 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 51m) 1090/2033 tested (845 survived, 97 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 51m) 1092/2033 tested (847 survived, 97 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 51m) 1093/2033 tested (848 survived, 97 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 51m) 1095/2033 tested (850 survived, 97 timed out)
Mutation testing 53% (elapsed: ~2h 10m, remaining: ~1h 51m) 1096/2033 tested (851 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 50m) 1098/2033 tested (853 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 50m) 1099/2033 tested (854 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 50m) 1101/2033 tested (856 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 50m) 1102/2033 tested (857 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 50m) 1104/2033 tested (859 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 50m) 1105/2033 tested (860 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 49m) 1106/2033 tested (861 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 49m) 1108/2033 tested (863 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 49m) 1109/2033 tested (864 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 49m) 1111/2033 tested (866 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 49m) 1112/2033 tested (867 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 12m, remaining: ~1h 48m) 1114/2033 tested (869 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 12m, remaining: ~1h 48m) 1115/2033 tested (870 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 12m, remaining: ~1h 48m) 1117/2033 tested (872 survived, 97 timed out)
Mutation testing 54% (elapsed: ~2h 12m, remaining: ~1h 48m) 1118/2033 tested (873 survived, 97 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 48m) 1120/2033 tested (875 survived, 97 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 48m) 1121/2033 tested (876 survived, 97 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 47m) 1123/2033 tested (878 survived, 97 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 47m) 1124/2033 tested (879 survived, 97 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 47m) 1126/2033 tested (881 survived, 97 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 47m) 1127/2033 tested (882 survived, 97 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 47m) 1128/2033 tested (883 survived, 97 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 46m) 1130/2033 tested (885 survived, 97 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 46m) 1131/2033 tested (886 survived, 97 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 46m) 1133/2033 tested (888 survived, 97 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 46m) 1134/2033 tested (889 survived, 97 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 46m) 1136/2033 tested (891 survived, 97 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 46m) 1137/2033 tested (892 survived, 97 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 45m) 1139/2033 tested (894 survived, 97 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 45m) 1140/2033 tested (895 survived, 97 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 45m) 1142/2033 tested (897 survived, 97 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 45m) 1143/2033 tested (898 survived, 97 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 45m) 1145/2033 tested (900 survived, 97 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 45m) 1146/2033 tested (901 survived, 97 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 44m) 1148/2033 tested (903 survived, 97 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 44m) 1149/2033 tested (904 survived, 97 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 44m) 1151/2033 tested (906 survived, 97 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 44m) 1152/2033 tested (907 survived, 97 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 44m) 1153/2033 tested (908 survived, 97 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 43m) 1155/2033 tested (910 survived, 97 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 43m) 1156/2033 tested (911 survived, 97 timed out)
Mutation testing 56% (elapsed: ~2h 17m, remaining: ~1h 43m) 1158/2033 tested (913 survived, 97 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 43m) 1159/2033 tested (914 survived, 97 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 43m) 1161/2033 tested (916 survived, 97 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 43m) 1162/2033 tested (917 survived, 97 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 42m) 1164/2033 tested (919 survived, 97 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 42m) 1165/2033 tested (920 survived, 97 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 42m) 1167/2033 tested (922 survived, 97 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 42m) 1168/2033 tested (923 survived, 97 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 42m) 1170/2033 tested (925 survived, 97 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 41m) 1171/2033 tested (926 survived, 97 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 41m) 1173/2033 tested (928 survived, 97 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 41m) 1174/2033 tested (929 survived, 97 timed out)
Mutation testing 57% (elapsed: ~2h 19m, remaining: ~1h 41m) 1176/2033 tested (931 survived, 97 timed out)
Mutation testing 57% (elapsed: ~2h 19m, remaining: ~1h 41m) 1177/2033 tested (932 survived, 97 timed out)
Mutation testing 57% (elapsed: ~2h 19m, remaining: ~1h 40m) 1179/2033 tested (934 survived, 97 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 40m) 1180/2033 tested (935 survived, 97 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 40m) 1182/2033 tested (937 survived, 97 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 40m) 1183/2033 tested (938 survived, 97 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 40m) 1185/2033 tested (940 survived, 97 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 40m) 1186/2033 tested (941 survived, 97 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 40m) 1187/2033 tested (942 survived, 97 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 39m) 1189/2033 tested (944 survived, 97 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 39m) 1190/2033 tested (945 survived, 97 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 39m) 1192/2033 tested (947 survived, 97 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 39m) 1193/2033 tested (948 survived, 97 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 38m) 1195/2033 tested (950 survived, 97 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 38m) 1196/2033 tested (951 survived, 97 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 38m) 1198/2033 tested (953 survived, 97 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 38m) 1199/2033 tested (954 survived, 97 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 38m) 1201/2033 tested (956 survived, 97 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 38m) 1202/2033 tested (957 survived, 97 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 37m) 1204/2033 tested (959 survived, 97 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 37m) 1205/2033 tested (960 survived, 97 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 37m) 1207/2033 tested (962 survived, 97 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 37m) 1208/2033 tested (963 survived, 97 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 37m) 1210/2033 tested (965 survived, 97 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 37m) 1211/2033 tested (966 survived, 97 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 36m) 1212/2033 tested (967 survived, 97 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 36m) 1214/2033 tested (969 survived, 97 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 36m) 1215/2033 tested (970 survived, 97 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 36m) 1217/2033 tested (972 survived, 97 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 36m) 1218/2033 tested (973 survived, 97 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 35m) 1220/2033 tested (975 survived, 97 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 35m) 1221/2033 tested (976 survived, 97 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 35m) 1223/2033 tested (978 survived, 97 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 35m) 1224/2033 tested (979 survived, 97 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 35m) 1226/2033 tested (981 survived, 97 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 35m) 1227/2033 tested (982 survived, 97 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 34m) 1229/2033 tested (984 survived, 97 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 34m) 1230/2033 tested (985 survived, 97 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 34m) 1232/2033 tested (987 survived, 97 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 34m) 1233/2033 tested (988 survived, 97 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 34m) 1235/2033 tested (990 survived, 97 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 34m) 1236/2033 tested (991 survived, 97 timed out)
Mutation testing 60% (elapsed: ~2h 26m, remaining: ~1h 33m) 1238/2033 tested (993 survived, 97 timed out)
Mutation testing 60% (elapsed: ~2h 26m, remaining: ~1h 33m) 1239/2033 tested (994 survived, 97 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 33m) 1241/2033 tested (996 survived, 97 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 33m) 1242/2033 tested (997 survived, 97 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 33m) 1244/2033 tested (999 survived, 97 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 32m) 1245/2033 tested (1000 survived, 97 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 32m) 1247/2033 tested (1002 survived, 97 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 32m) 1248/2033 tested (1003 survived, 97 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 32m) 1249/2033 tested (1004 survived, 97 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 32m) 1251/2033 tested (1006 survived, 97 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 32m) 1252/2033 tested (1007 survived, 97 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 31m) 1254/2033 tested (1009 survived, 97 timed out)
Mutation testing 61% (elapsed: ~2h 28m, remaining: ~1h 31m) 1255/2033 tested (1010 survived, 97 timed out)
Mutation testing 61% (elapsed: ~2h 28m, remaining: ~1h 31m) 1257/2033 tested (1012 survived, 97 timed out)
Mutation testing 61% (elapsed: ~2h 28m, remaining: ~1h 31m) 1258/2033 tested (1013 survived, 97 timed out)
Mutation testing 61% (elapsed: ~2h 28m, remaining: ~1h 31m) 1260/2033 tested (1015 survived, 97 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 31m) 1261/2033 tested (1016 survived, 97 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 30m) 1263/2033 tested (1018 survived, 97 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 30m) 1264/2033 tested (1019 survived, 97 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 30m) 1266/2033 tested (1021 survived, 97 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 30m) 1267/2033 tested (1022 survived, 97 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 30m) 1269/2033 tested (1024 survived, 97 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 29m) 1270/2033 tested (1025 survived, 97 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 29m) 1272/2033 tested (1027 survived, 97 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 29m) 1273/2033 tested (1028 survived, 97 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 29m) 1275/2033 tested (1030 survived, 97 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 29m) 1276/2033 tested (1031 survived, 97 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 28m) 1278/2033 tested (1033 survived, 97 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 28m) 1279/2033 tested (1034 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 28m) 1281/2033 tested (1036 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 28m) 1282/2033 tested (1037 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 28m) 1283/2033 tested (1038 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 28m) 1285/2033 tested (1040 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 28m) 1286/2033 tested (1041 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 27m) 1288/2033 tested (1043 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 27m) 1289/2033 tested (1044 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 27m) 1291/2033 tested (1046 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 27m) 1292/2033 tested (1047 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 26m) 1294/2033 tested (1049 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 26m) 1295/2033 tested (1050 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 26m) 1297/2033 tested (1052 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 26m) 1298/2033 tested (1053 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 33m, remaining: ~1h 26m) 1300/2033 tested (1055 survived, 97 timed out)
Mutation testing 63% (elapsed: ~2h 33m, remaining: ~1h 26m) 1301/2033 tested (1056 survived, 97 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 25m) 1303/2033 tested (1058 survived, 97 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 25m) 1304/2033 tested (1059 survived, 97 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 25m) 1306/2033 tested (1061 survived, 97 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 25m) 1307/2033 tested (1062 survived, 97 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 25m) 1309/2033 tested (1064 survived, 97 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 25m) 1310/2033 tested (1065 survived, 97 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 24m) 1312/2033 tested (1067 survived, 97 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 24m) 1313/2033 tested (1068 survived, 97 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 24m) 1314/2033 tested (1069 survived, 97 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 24m) 1316/2033 tested (1071 survived, 97 timed out)
Mutation testing 64% (elapsed: ~2h 35m, remaining: ~1h 24m) 1317/2033 tested (1072 survived, 97 timed out)
Mutation testing 64% (elapsed: ~2h 35m, remaining: ~1h 23m) 1319/2033 tested (1074 survived, 97 timed out)
Mutation testing 64% (elapsed: ~2h 35m, remaining: ~1h 23m) 1320/2033 tested (1075 survived, 97 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 23m) 1322/2033 tested (1077 survived, 97 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 23m) 1323/2033 tested (1078 survived, 97 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 23m) 1325/2033 tested (1080 survived, 97 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 23m) 1326/2033 tested (1081 survived, 97 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 22m) 1328/2033 tested (1083 survived, 97 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 22m) 1329/2033 tested (1084 survived, 97 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 22m) 1331/2033 tested (1086 survived, 97 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 22m) 1332/2033 tested (1087 survived, 97 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 22m) 1334/2033 tested (1089 survived, 97 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 22m) 1335/2033 tested (1090 survived, 97 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 21m) 1337/2033 tested (1092 survived, 97 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 21m) 1338/2033 tested (1093 survived, 97 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 21m) 1340/2033 tested (1095 survived, 97 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 21m) 1341/2033 tested (1096 survived, 97 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 21m) 1343/2033 tested (1098 survived, 97 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 20m) 1344/2033 tested (1099 survived, 97 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 20m) 1346/2033 tested (1101 survived, 97 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 20m) 1347/2033 tested (1102 survived, 97 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 20m) 1349/2033 tested (1104 survived, 97 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 20m) 1350/2033 tested (1105 survived, 97 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 20m) 1351/2033 tested (1106 survived, 97 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 19m) 1353/2033 tested (1108 survived, 97 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 19m) 1354/2033 tested (1109 survived, 97 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 19m) 1356/2033 tested (1111 survived, 97 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 19m) 1357/2033 tested (1112 survived, 97 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 19m) 1359/2033 tested (1114 survived, 97 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 19m) 1360/2033 tested (1115 survived, 97 timed out)
Mutation testing 66% (elapsed: ~2h 40m, remaining: ~1h 18m) 1362/2033 tested (1117 survived, 97 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 18m) 1363/2033 tested (1118 survived, 97 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 18m) 1365/2033 tested (1120 survived, 97 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 18m) 1366/2033 tested (1121 survived, 97 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 18m) 1368/2033 tested (1123 survived, 97 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 18m) 1369/2033 tested (1124 survived, 97 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 17m) 1371/2033 tested (1126 survived, 97 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 17m) 1372/2033 tested (1127 survived, 97 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 17m) 1374/2033 tested (1129 survived, 97 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 17m) 1375/2033 tested (1130 survived, 97 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 17m) 1376/2033 tested (1131 survived, 97 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 16m) 1378/2033 tested (1133 survived, 97 timed out)
Mutation testing 67% (elapsed: ~2h 42m, remaining: ~1h 16m) 1379/2033 tested (1134 survived, 97 timed out)
Mutation testing 67% (elapsed: ~2h 42m, remaining: ~1h 16m) 1381/2033 tested (1136 survived, 97 timed out)
Mutation testing 67% (elapsed: ~2h 42m, remaining: ~1h 16m) 1382/2033 tested (1137 survived, 97 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 16m) 1384/2033 tested (1139 survived, 97 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 16m) 1385/2033 tested (1140 survived, 97 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 15m) 1387/2033 tested (1142 survived, 97 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 15m) 1388/2033 tested (1143 survived, 97 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 15m) 1390/2033 tested (1145 survived, 97 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 15m) 1391/2033 tested (1146 survived, 97 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 15m) 1393/2033 tested (1148 survived, 97 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 15m) 1394/2033 tested (1149 survived, 97 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 14m) 1396/2033 tested (1151 survived, 97 timed out)
Mutation testing 68% (elapsed: ~2h 44m, remaining: ~1h 14m) 1397/2033 tested (1152 survived, 97 timed out)
Mutation testing 68% (elapsed: ~2h 44m, remaining: ~1h 14m) 1398/2033 tested (1153 survived, 97 timed out)
Mutation testing 68% (elapsed: ~2h 44m, remaining: ~1h 14m) 1400/2033 tested (1155 survived, 97 timed out)
Mutation testing 68% (elapsed: ~2h 44m, remaining: ~1h 14m) 1401/2033 tested (1156 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 13m) 1403/2033 tested (1158 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 13m) 1404/2033 tested (1159 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 13m) 1406/2033 tested (1161 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 13m) 1407/2033 tested (1162 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 13m) 1409/2033 tested (1164 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 13m) 1410/2033 tested (1165 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 12m) 1412/2033 tested (1167 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 12m) 1413/2033 tested (1168 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 12m) 1415/2033 tested (1170 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 12m) 1416/2033 tested (1171 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 12m) 1418/2033 tested (1173 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 12m) 1419/2033 tested (1174 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 11m) 1421/2033 tested (1176 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 11m) 1422/2033 tested (1177 survived, 97 timed out)
Mutation testing 69% (elapsed: ~2h 47m, remaining: ~1h 11m) 1423/2033 tested (1178 survived, 97 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 11m) 1425/2033 tested (1180 survived, 97 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 11m) 1426/2033 tested (1181 survived, 97 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 10m) 1428/2033 tested (1183 survived, 97 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 10m) 1429/2033 tested (1184 survived, 97 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 10m) 1431/2033 tested (1186 survived, 97 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 10m) 1432/2033 tested (1187 survived, 97 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 10m) 1434/2033 tested (1189 survived, 97 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 10m) 1435/2033 tested (1190 survived, 97 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 9m) 1437/2033 tested (1192 survived, 97 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 9m) 1438/2033 tested (1193 survived, 97 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 9m) 1440/2033 tested (1195 survived, 97 timed out)
Mutation testing 70% (elapsed: ~2h 49m, remaining: ~1h 9m) 1441/2033 tested (1196 survived, 97 timed out)
Mutation testing 70% (elapsed: ~2h 49m, remaining: ~1h 9m) 1443/2033 tested (1198 survived, 97 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 9m) 1444/2033 tested (1199 survived, 97 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 8m) 1446/2033 tested (1201 survived, 97 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 8m) 1447/2033 tested (1202 survived, 97 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 8m) 1449/2033 tested (1204 survived, 97 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 8m) 1450/2033 tested (1205 survived, 97 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 8m) 1452/2033 tested (1207 survived, 97 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 7m) 1453/2033 tested (1208 survived, 97 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 7m) 1455/2033 tested (1210 survived, 97 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 7m) 1456/2033 tested (1211 survived, 97 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 7m) 1457/2033 tested (1212 survived, 97 timed out)
Mutation testing 71% (elapsed: ~2h 51m, remaining: ~1h 7m) 1459/2033 tested (1214 survived, 97 timed out)
Mutation testing 71% (elapsed: ~2h 51m, remaining: ~1h 7m) 1460/2033 tested (1215 survived, 97 timed out)
Mutation testing 71% (elapsed: ~2h 51m, remaining: ~1h 6m) 1462/2033 tested (1217 survived, 97 timed out)
Mutation testing 71% (elapsed: ~2h 51m, remaining: ~1h 6m) 1463/2033 tested (1218 survived, 97 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 6m) 1465/2033 tested (1220 survived, 97 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 6m) 1466/2033 tested (1221 survived, 97 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 6m) 1468/2033 tested (1223 survived, 97 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 6m) 1469/2033 tested (1224 survived, 97 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 5m) 1471/2033 tested (1226 survived, 97 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 5m) 1472/2033 tested (1227 survived, 97 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 5m) 1474/2033 tested (1229 survived, 97 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 5m) 1475/2033 tested (1230 survived, 97 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 5m) 1477/2033 tested (1232 survived, 97 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 5m) 1478/2033 tested (1233 survived, 97 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 4m) 1480/2033 tested (1235 survived, 97 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 4m) 1481/2033 tested (1236 survived, 97 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 4m) 1483/2033 tested (1238 survived, 97 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 4m) 1484/2033 tested (1239 survived, 97 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 4m) 1486/2033 tested (1241 survived, 97 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 3m) 1487/2033 tested (1242 survived, 97 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 3m) 1489/2033 tested (1244 survived, 97 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 3m) 1490/2033 tested (1245 survived, 97 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 3m) 1492/2033 tested (1247 survived, 97 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 3m) 1493/2033 tested (1248 survived, 97 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 3m) 1494/2033 tested (1249 survived, 97 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 2m) 1496/2033 tested (1251 survived, 97 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 2m) 1497/2033 tested (1252 survived, 97 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 2m) 1500/2033 tested (1254 survived, 97 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 2m) 1501/2033 tested (1255 survived, 97 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 2m) 1503/2033 tested (1257 survived, 97 timed out)
Mutation testing 73% (elapsed: ~2h 56m, remaining: ~1h 1m) 1504/2033 tested (1258 survived, 97 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 1m) 1506/2033 tested (1260 survived, 97 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 1m) 1507/2033 tested (1261 survived, 97 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 1m) 1509/2033 tested (1263 survived, 97 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 1m) 1510/2033 tested (1264 survived, 97 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 1m) 1511/2033 tested (1265 survived, 97 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 0m) 1513/2033 tested (1267 survived, 97 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 0m) 1514/2033 tested (1268 survived, 97 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 0m) 1516/2033 tested (1270 survived, 97 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 0m) 1517/2033 tested (1271 survived, 97 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 0m) 1519/2033 tested (1273 survived, 97 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 0m) 1520/2033 tested (1274 survived, 97 timed out)
Mutation testing 74% (elapsed: ~2h 58m, remaining: ~59m) 1522/2033 tested (1276 survived, 97 timed out)
Mutation testing 74% (elapsed: ~2h 58m, remaining: ~59m) 1523/2033 tested (1277 survived, 97 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~59m) 1525/2033 tested (1279 survived, 97 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~59m) 1526/2033 tested (1280 survived, 97 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~59m) 1528/2033 tested (1282 survived, 97 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~58m) 1529/2033 tested (1283 survived, 97 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~58m) 1531/2033 tested (1285 survived, 97 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~58m) 1532/2033 tested (1286 survived, 97 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~58m) 1534/2033 tested (1288 survived, 97 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~58m) 1535/2033 tested (1289 survived, 97 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~57m) 1537/2033 tested (1291 survived, 97 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~57m) 1538/2033 tested (1292 survived, 97 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~57m) 1539/2033 tested (1293 survived, 97 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~57m) 1541/2033 tested (1295 survived, 97 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~57m) 1542/2033 tested (1296 survived, 97 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~57m) 1544/2033 tested (1298 survived, 97 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~57m) 1545/2033 tested (1299 survived, 97 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~56m) 1547/2033 tested (1301 survived, 97 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~56m) 1548/2033 tested (1302 survived, 97 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~56m) 1550/2033 tested (1304 survived, 97 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~56m) 1551/2033 tested (1305 survived, 97 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~56m) 1553/2033 tested (1307 survived, 97 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~55m) 1554/2033 tested (1308 survived, 97 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~55m) 1556/2033 tested (1310 survived, 97 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~55m) 1557/2033 tested (1311 survived, 97 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~55m) 1559/2033 tested (1313 survived, 97 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~55m) 1560/2033 tested (1314 survived, 97 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~55m) 1562/2033 tested (1316 survived, 97 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~54m) 1563/2033 tested (1317 survived, 97 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~54m) 1565/2033 tested (1319 survived, 97 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~54m) 1566/2033 tested (1320 survived, 97 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~54m) 1567/2033 tested (1321 survived, 97 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~54m) 1569/2033 tested (1323 survived, 97 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~54m) 1570/2033 tested (1324 survived, 97 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~53m) 1572/2033 tested (1326 survived, 97 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~53m) 1573/2033 tested (1327 survived, 97 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~53m) 1575/2033 tested (1329 survived, 97 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~53m) 1576/2033 tested (1330 survived, 97 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~53m) 1578/2033 tested (1332 survived, 97 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~53m) 1579/2033 tested (1333 survived, 97 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~52m) 1581/2033 tested (1335 survived, 97 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~52m) 1582/2033 tested (1336 survived, 97 timed out)
Mutation testing 77% (elapsed: ~3h 5m, remaining: ~52m) 1584/2033 tested (1338 survived, 97 timed out)
Mutation testing 77% (elapsed: ~3h 5m, remaining: ~52m) 1585/2033 tested (1339 survived, 97 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~52m) 1587/2033 tested (1341 survived, 97 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~51m) 1588/2033 tested (1342 survived, 97 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~51m) 1590/2033 tested (1344 survived, 97 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~51m) 1591/2033 tested (1345 survived, 97 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~51m) 1593/2033 tested (1347 survived, 97 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~51m) 1594/2033 tested (1348 survived, 97 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~51m) 1596/2033 tested (1350 survived, 97 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~50m) 1597/2033 tested (1351 survived, 97 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~50m) 1598/2033 tested (1352 survived, 97 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~50m) 1600/2033 tested (1354 survived, 97 timed out)
Mutation testing 78% (elapsed: ~3h 7m, remaining: ~50m) 1601/2033 tested (1355 survived, 97 timed out)
Mutation testing 78% (elapsed: ~3h 7m, remaining: ~50m) 1603/2033 tested (1357 survived, 97 timed out)
Mutation testing 78% (elapsed: ~3h 7m, remaining: ~50m) 1604/2033 tested (1358 survived, 97 timed out)
Mutation testing 78% (elapsed: ~3h 7m, remaining: ~49m) 1606/2033 tested (1360 survived, 97 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~49m) 1607/2033 tested (1361 survived, 97 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~49m) 1609/2033 tested (1363 survived, 97 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~49m) 1610/2033 tested (1364 survived, 97 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~49m) 1612/2033 tested (1366 survived, 97 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~49m) 1613/2033 tested (1367 survived, 97 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~48m) 1615/2033 tested (1369 survived, 97 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~48m) 1616/2033 tested (1370 survived, 97 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~48m) 1618/2033 tested (1372 survived, 97 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~48m) 1619/2033 tested (1373 survived, 97 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~48m) 1621/2033 tested (1375 survived, 97 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~47m) 1622/2033 tested (1376 survived, 97 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~47m) 1624/2033 tested (1378 survived, 97 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~47m) 1625/2033 tested (1379 survived, 97 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~47m) 1627/2033 tested (1381 survived, 97 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~47m) 1628/2033 tested (1382 survived, 97 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~47m) 1630/2033 tested (1384 survived, 97 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~46m) 1631/2033 tested (1385 survived, 97 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~46m) 1633/2033 tested (1387 survived, 97 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~46m) 1634/2033 tested (1388 survived, 97 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~46m) 1635/2033 tested (1389 survived, 97 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~46m) 1637/2033 tested (1391 survived, 97 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~46m) 1638/2033 tested (1392 survived, 97 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~45m) 1640/2033 tested (1394 survived, 97 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~45m) 1641/2033 tested (1395 survived, 97 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~45m) 1643/2033 tested (1397 survived, 97 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~45m) 1644/2033 tested (1398 survived, 97 timed out)
Mutation testing 80% (elapsed: ~3h 12m, remaining: ~45m) 1646/2033 tested (1400 survived, 97 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~45m) 1647/2033 tested (1401 survived, 97 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~44m) 1649/2033 tested (1403 survived, 97 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~44m) 1650/2033 tested (1404 survived, 97 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~44m) 1652/2033 tested (1406 survived, 97 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~44m) 1653/2033 tested (1407 survived, 97 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~44m) 1655/2033 tested (1409 survived, 97 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~43m) 1656/2033 tested (1410 survived, 97 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~43m) 1658/2033 tested (1412 survived, 97 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~43m) 1659/2033 tested (1413 survived, 97 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~43m) 1661/2033 tested (1415 survived, 97 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~43m) 1662/2033 tested (1416 survived, 97 timed out)
Mutation testing 81% (elapsed: ~3h 14m, remaining: ~43m) 1663/2033 tested (1417 survived, 97 timed out)
Mutation testing 81% (elapsed: ~3h 14m, remaining: ~42m) 1665/2033 tested (1419 survived, 97 timed out)
Mutation testing 81% (elapsed: ~3h 14m, remaining: ~42m) 1666/2033 tested (1420 survived, 97 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~42m) 1668/2033 tested (1422 survived, 97 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~42m) 1669/2033 tested (1423 survived, 97 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~42m) 1671/2033 tested (1425 survived, 97 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~42m) 1672/2033 tested (1426 survived, 97 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1674/2033 tested (1428 survived, 97 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1675/2033 tested (1429 survived, 97 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1677/2033 tested (1431 survived, 97 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1678/2033 tested (1432 survived, 97 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1680/2033 tested (1434 survived, 97 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~41m) 1681/2033 tested (1435 survived, 97 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~40m) 1683/2033 tested (1437 survived, 97 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~40m) 1684/2033 tested (1438 survived, 97 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~40m) 1686/2033 tested (1440 survived, 97 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~40m) 1687/2033 tested (1441 survived, 97 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~40m) 1688/2033 tested (1442 survived, 97 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~39m) 1690/2033 tested (1444 survived, 97 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~39m) 1691/2033 tested (1445 survived, 97 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~39m) 1693/2033 tested (1447 survived, 97 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~39m) 1694/2033 tested (1448 survived, 97 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~39m) 1696/2033 tested (1450 survived, 97 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~39m) 1697/2033 tested (1451 survived, 97 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~38m) 1699/2033 tested (1453 survived, 97 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~38m) 1700/2033 tested (1454 survived, 97 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~38m) 1702/2033 tested (1456 survived, 97 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~38m) 1703/2033 tested (1457 survived, 97 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~38m) 1705/2033 tested (1459 survived, 97 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~38m) 1706/2033 tested (1460 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~37m) 1708/2033 tested (1462 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~37m) 1709/2033 tested (1463 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~37m) 1711/2033 tested (1465 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~37m) 1712/2033 tested (1466 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~37m) 1714/2033 tested (1468 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~37m) 1715/2033 tested (1469 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~36m) 1717/2033 tested (1471 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~36m) 1718/2033 tested (1472 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~36m) 1720/2033 tested (1474 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~36m) 1721/2033 tested (1475 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~36m) 1723/2033 tested (1477 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~35m) 1724/2033 tested (1478 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 21m, remaining: ~35m) 1725/2033 tested (1479 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 21m, remaining: ~35m) 1727/2033 tested (1481 survived, 97 timed out)
Mutation testing 84% (elapsed: ~3h 21m, remaining: ~35m) 1728/2033 tested (1482 survived, 97 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~35m) 1730/2033 tested (1484 survived, 97 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~35m) 1731/2033 tested (1485 survived, 97 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~34m) 1733/2033 tested (1487 survived, 97 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~34m) 1734/2033 tested (1488 survived, 97 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~34m) 1736/2033 tested (1490 survived, 97 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~34m) 1737/2033 tested (1491 survived, 97 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~34m) 1739/2033 tested (1493 survived, 97 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~34m) 1740/2033 tested (1494 survived, 97 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~33m) 1742/2033 tested (1496 survived, 97 timed out)
Mutation testing 85% (elapsed: ~3h 23m, remaining: ~33m) 1743/2033 tested (1497 survived, 97 timed out)
Mutation testing 85% (elapsed: ~3h 23m, remaining: ~33m) 1745/2033 tested (1499 survived, 97 timed out)
Mutation testing 85% (elapsed: ~3h 23m, remaining: ~33m) 1746/2033 tested (1500 survived, 97 timed out)
Mutation testing 85% (elapsed: ~3h 23m, remaining: ~33m) 1748/2033 tested (1502 survived, 97 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~33m) 1749/2033 tested (1503 survived, 97 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~32m) 1751/2033 tested (1505 survived, 97 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~32m) 1752/2033 tested (1506 survived, 97 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~32m) 1754/2033 tested (1508 survived, 97 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~32m) 1755/2033 tested (1509 survived, 97 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~32m) 1757/2033 tested (1511 survived, 97 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~32m) 1758/2033 tested (1512 survived, 97 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~31m) 1760/2033 tested (1514 survived, 97 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~31m) 1761/2033 tested (1515 survived, 97 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~31m) 1762/2033 tested (1516 survived, 97 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~31m) 1764/2033 tested (1518 survived, 97 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~31m) 1765/2033 tested (1519 survived, 97 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~30m) 1767/2033 tested (1521 survived, 97 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~30m) 1768/2033 tested (1522 survived, 97 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~30m) 1770/2033 tested (1524 survived, 97 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~30m) 1771/2033 tested (1525 survived, 97 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~30m) 1773/2033 tested (1527 survived, 97 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~30m) 1774/2033 tested (1528 survived, 97 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~29m) 1776/2033 tested (1530 survived, 97 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~29m) 1777/2033 tested (1531 survived, 97 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~29m) 1779/2033 tested (1533 survived, 97 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~29m) 1780/2033 tested (1534 survived, 97 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~29m) 1782/2033 tested (1536 survived, 97 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~29m) 1783/2033 tested (1537 survived, 97 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~28m) 1785/2033 tested (1539 survived, 97 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~28m) 1786/2033 tested (1540 survived, 97 timed out)
Mutation testing 87% (elapsed: ~3h 28m, remaining: ~28m) 1788/2033 tested (1542 survived, 97 timed out)
Mutation testing 87% (elapsed: ~3h 28m, remaining: ~28m) 1789/2033 tested (1543 survived, 97 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~28m) 1791/2033 tested (1545 survived, 97 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~28m) 1792/2033 tested (1546 survived, 97 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~27m) 1794/2033 tested (1548 survived, 97 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~27m) 1795/2033 tested (1549 survived, 97 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~27m) 1797/2033 tested (1551 survived, 97 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~27m) 1798/2033 tested (1552 survived, 97 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~27m) 1799/2033 tested (1553 survived, 97 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~26m) 1801/2033 tested (1555 survived, 97 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~26m) 1802/2033 tested (1556 survived, 97 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~26m) 1804/2033 tested (1558 survived, 97 timed out)
Mutation testing 88% (elapsed: ~3h 30m, remaining: ~26m) 1805/2033 tested (1559 survived, 97 timed out)
Mutation testing 88% (elapsed: ~3h 30m, remaining: ~26m) 1807/2033 tested (1561 survived, 97 timed out)
Mutation testing 88% (elapsed: ~3h 30m, remaining: ~26m) 1808/2033 tested (1562 survived, 97 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~25m) 1810/2033 tested (1564 survived, 97 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~25m) 1811/2033 tested (1565 survived, 97 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~25m) 1813/2033 tested (1567 survived, 97 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~25m) 1814/2033 tested (1568 survived, 97 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~25m) 1816/2033 tested (1570 survived, 97 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~25m) 1817/2033 tested (1571 survived, 97 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~24m) 1819/2033 tested (1573 survived, 97 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~24m) 1820/2033 tested (1574 survived, 97 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~24m) 1822/2033 tested (1576 survived, 97 timed out)
Mutation testing 89% (elapsed: ~3h 32m, remaining: ~24m) 1823/2033 tested (1577 survived, 97 timed out)
Mutation testing 89% (elapsed: ~3h 32m, remaining: ~24m) 1825/2033 tested (1579 survived, 97 timed out)
Mutation testing 89% (elapsed: ~3h 32m, remaining: ~24m) 1826/2033 tested (1580 survived, 97 timed out)
Mutation testing 89% (elapsed: ~3h 32m, remaining: ~23m) 1828/2033 tested (1582 survived, 97 timed out)
Mutation testing 89% (elapsed: ~3h 32m, remaining: ~23m) 1829/2033 tested (1583 survived, 97 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~23m) 1831/2033 tested (1585 survived, 97 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~23m) 1832/2033 tested (1586 survived, 97 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~23m) 1833/2033 tested (1587 survived, 97 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~23m) 1835/2033 tested (1589 survived, 97 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~22m) 1836/2033 tested (1590 survived, 97 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~22m) 1838/2033 tested (1592 survived, 97 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~22m) 1839/2033 tested (1593 survived, 97 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~22m) 1841/2033 tested (1595 survived, 97 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~22m) 1842/2033 tested (1596 survived, 97 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~21m) 1844/2033 tested (1598 survived, 97 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~21m) 1845/2033 tested (1599 survived, 97 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~21m) 1847/2033 tested (1601 survived, 97 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~21m) 1848/2033 tested (1602 survived, 97 timed out)
Mutation testing 90% (elapsed: ~3h 35m, remaining: ~21m) 1850/2033 tested (1604 survived, 97 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~21m) 1851/2033 tested (1605 survived, 97 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1853/2033 tested (1607 survived, 97 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1854/2033 tested (1608 survived, 97 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1856/2033 tested (1610 survived, 97 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1857/2033 tested (1611 survived, 97 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~20m) 1859/2033 tested (1613 survived, 97 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~20m) 1860/2033 tested (1614 survived, 97 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1862/2033 tested (1616 survived, 97 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1863/2033 tested (1617 survived, 97 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1865/2033 tested (1619 survived, 97 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1866/2033 tested (1620 survived, 97 timed out)
Mutation testing 91% (elapsed: ~3h 37m, remaining: ~19m) 1868/2033 tested (1622 survived, 97 timed out)
Mutation testing 91% (elapsed: ~3h 37m, remaining: ~19m) 1869/2033 tested (1623 survived, 97 timed out)
Mutation testing 91% (elapsed: ~3h 37m, remaining: ~18m) 1870/2033 tested (1624 survived, 97 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~18m) 1872/2033 tested (1626 survived, 97 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~18m) 1873/2033 tested (1627 survived, 97 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~18m) 1875/2033 tested (1629 survived, 97 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~18m) 1876/2033 tested (1630 survived, 97 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~18m) 1878/2033 tested (1632 survived, 97 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~17m) 1879/2033 tested (1633 survived, 97 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~17m) 1881/2033 tested (1635 survived, 97 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~17m) 1882/2033 tested (1636 survived, 97 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~17m) 1884/2033 tested (1638 survived, 97 timed out)
Mutation testing 92% (elapsed: ~3h 39m, remaining: ~17m) 1885/2033 tested (1639 survived, 97 timed out)
Mutation testing 92% (elapsed: ~3h 39m, remaining: ~16m) 1887/2033 tested (1641 survived, 97 timed out)
Mutation testing 92% (elapsed: ~3h 39m, remaining: ~16m) 1888/2033 tested (1642 survived, 97 timed out)
Mutation testing 92% (elapsed: ~3h 39m, remaining: ~16m) 1890/2033 tested (1644 survived, 97 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~16m) 1891/2033 tested (1645 survived, 97 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~16m) 1893/2033 tested (1647 survived, 97 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~16m) 1894/2033 tested (1648 survived, 97 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1896/2033 tested (1650 survived, 97 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1897/2033 tested (1651 survived, 97 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1899/2033 tested (1653 survived, 97 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1900/2033 tested (1654 survived, 97 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1902/2033 tested (1656 survived, 97 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~15m) 1903/2033 tested (1657 survived, 97 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1905/2033 tested (1659 survived, 97 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1906/2033 tested (1660 survived, 97 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1908/2033 tested (1662 survived, 97 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1909/2033 tested (1663 survived, 97 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1910/2033 tested (1664 survived, 97 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~14m) 1912/2033 tested (1666 survived, 97 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1913/2033 tested (1667 survived, 97 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1915/2033 tested (1669 survived, 97 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1916/2033 tested (1670 survived, 97 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1918/2033 tested (1672 survived, 97 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1919/2033 tested (1673 survived, 97 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~13m) 1921/2033 tested (1675 survived, 97 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1922/2033 tested (1676 survived, 97 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1924/2033 tested (1678 survived, 97 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1925/2033 tested (1679 survived, 97 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1927/2033 tested (1681 survived, 97 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1928/2033 tested (1682 survived, 97 timed out)
Mutation testing 94% (elapsed: ~3h 44m, remaining: ~11m) 1930/2033 tested (1684 survived, 97 timed out)
Mutation testing 94% (elapsed: ~3h 44m, remaining: ~11m) 1931/2033 tested (1685 survived, 97 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~11m) 1933/2033 tested (1687 survived, 97 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~11m) 1934/2033 tested (1688 survived, 97 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~11m) 1936/2033 tested (1690 survived, 97 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~11m) 1937/2033 tested (1691 survived, 97 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1939/2033 tested (1693 survived, 97 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1940/2033 tested (1694 survived, 97 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1942/2033 tested (1696 survived, 97 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1943/2033 tested (1697 survived, 97 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1944/2033 tested (1698 survived, 97 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1946/2033 tested (1700 survived, 97 timed out)
Mutation testing 95% (elapsed: ~3h 46m, remaining: ~9m) 1947/2033 tested (1701 survived, 97 timed out)
Mutation testing 95% (elapsed: ~3h 46m, remaining: ~9m) 1949/2033 tested (1703 survived, 97 timed out)
Mutation testing 95% (elapsed: ~3h 46m, remaining: ~9m) 1950/2033 tested (1704 survived, 97 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~9m) 1952/2033 tested (1706 survived, 97 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~9m) 1953/2033 tested (1707 survived, 97 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~9m) 1955/2033 tested (1709 survived, 97 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1956/2033 tested (1710 survived, 97 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1958/2033 tested (1712 survived, 97 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1959/2033 tested (1713 survived, 97 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1961/2033 tested (1715 survived, 97 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1962/2033 tested (1716 survived, 97 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1964/2033 tested (1718 survived, 97 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1965/2033 tested (1719 survived, 97 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1967/2033 tested (1721 survived, 97 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1968/2033 tested (1722 survived, 97 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1970/2033 tested (1724 survived, 97 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1971/2033 tested (1725 survived, 97 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~6m) 1973/2033 tested (1727 survived, 97 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1974/2033 tested (1728 survived, 97 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1976/2033 tested (1730 survived, 97 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1977/2033 tested (1731 survived, 97 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1979/2033 tested (1733 survived, 97 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1980/2033 tested (1734 survived, 97 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1981/2033 tested (1735 survived, 97 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 1983/2033 tested (1737 survived, 97 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 1984/2033 tested (1738 survived, 97 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 1986/2033 tested (1740 survived, 97 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 1987/2033 tested (1741 survived, 97 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 1989/2033 tested (1743 survived, 97 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~4m) 1990/2033 tested (1744 survived, 97 timed out)
Mutation testing 97% (elapsed: ~3h 51m, remaining: ~4m) 1992/2033 tested (1746 survived, 97 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~4m) 1993/2033 tested (1747 survived, 97 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~4m) 1995/2033 tested (1749 survived, 97 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~4m) 1996/2033 tested (1750 survived, 97 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~4m) 1998/2033 tested (1752 survived, 97 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~3m) 1999/2033 tested (1753 survived, 97 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~3m) 2001/2033 tested (1755 survived, 97 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~3m) 2002/2033 tested (1756 survived, 97 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~3m) 2004/2033 tested (1758 survived, 97 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~3m) 2005/2033 tested (1759 survived, 97 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~3m) 2007/2033 tested (1761 survived, 97 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~2m) 2008/2033 tested (1762 survived, 97 timed out)
Mutation testing 98% (elapsed: ~3h 53m, remaining: ~2m) 2010/2033 tested (1764 survived, 97 timed out)
Mutation testing 98% (elapsed: ~3h 53m, remaining: ~2m) 2011/2033 tested (1765 survived, 97 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~2m) 2015/2033 tested (1766 survived, 97 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~1m) 2017/2033 tested (1768 survived, 97 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~1m) 2018/2033 tested (1769 survived, 97 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~1m) 2020/2033 tested (1771 survived, 97 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: ~1m) 2021/2033 tested (1772 survived, 97 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: ~1m) 2022/2033 tested (1773 survived, 97 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: ~1m) 2024/2033 tested (1775 survived, 97 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: <1m) 2025/2033 tested (1776 survived, 97 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: <1m) 2027/2033 tested (1778 survived, 97 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: <1m) 2028/2033 tested (1779 survived, 97 timed out)
Mutation testing 99% (elapsed: ~3h 55m, remaining: <1m) 2030/2033 tested (1781 survived, 97 timed out)
Mutation testing 99% (elapsed: ~3h 55m, remaining: <1m) 2031/2033 tested (1782 survived, 97 timed out)

All tests
  ✓ All tests (killed 152)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap === "object") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", {});

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", "string");

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "q"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           noop("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "promise"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(42, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(null, definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", () => {
+     throw new Error("I'm a buggy function!");
+   });

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", () => {
+     return "I'm a buggy function!";
+   });

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", () => {
+     return function () {
+       throw new Error("I'm a buggy function!");
+     };
+   });

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && !define.amd) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define !== "function" || !define.amd) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd !== undefined) {

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(0);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(null);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(undefined);

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "undefined" && ses.ok()) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined" || !ses.ok()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (!ses.nok()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.ok()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.maybeOk()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.notOk && ses.maybeOk()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" ^ typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" || typeof self !== "undefined" || true) {

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = "Hello, world!"();

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = null();

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = undefined();

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, 0);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:129:20
-               task = laterQueue.pop();
+               task = laterQueue.shift();

[Survived] PrecomputedMutator
q.js:130:13
-               runSingle(task);
+               noop(task);

[Survived] PrecomputedMutator
q.js:130:23
-               runSingle(task);
+               runSingle(() => {});

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (typeof isNodeJS === "undefined") {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain + 1) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.foo) {

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush + 1, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush.call(null), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain + 1) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain.length) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (flushing || true) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "undefined" && window) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "undefined" || window) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "undefined" ? window : false) {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(() => {});

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setInterval.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(this, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, undefined);

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(flush());

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(console.log('test'));

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "undefined") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "object") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "function") {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage("foo");

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(Math.PI);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, Math.random());

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing + 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length < 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (0);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (-1);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (this.length - 1);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index > this) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index === this) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index < this) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index > length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index >= length + 1) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index + 1 >= length) {

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (i >= length; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (i > length; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (i < length; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index += 2; index < length; index -= 2) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index % 2 === 0; index < length; index += 2) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index += 2; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index *= 2; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = index + 1) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index < this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (this.hasOwnProperty(index)) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (Object.prototype.hasOwnProperty.call(this, index)) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index + 1);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis * 2, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index - 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] + 1, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], length - index);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i != this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i = -1) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] > value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] + value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.pop(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.shift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, [value, index, self]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self, null));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self, 1));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call({}));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call("foo", value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value + 1, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value * 2, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value - 1, index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index * 2, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index - 1, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self + 1));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self[0]));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.length));

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key of object) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key in object.keys) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key in object.prototype) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {}) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && object[key] !== undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) || object[key] === undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && object[key] !== null) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key, 1)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key, 0)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key, undefined)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (!object_hasOwnProperty[key](object, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object.prototype, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, this[key])) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key++)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(value);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(this[key]);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key + 1);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_hasOwnProperty(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_keys(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_create(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.prototype) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.constructor) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue === "function") {

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && error.stack.length > 0

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && error.stack.length > 0 && error.stack.indexOf("From previous event:") === -1

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.value) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.length) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.prototype) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p && true; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p || false; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source.source.source) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ !== p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ > p.stackCounter) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: 0,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__maximumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__" + 1, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.pop(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.shift(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.slice(0, p.stack.indexOf("@")));

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.slice(0, p.stack.indexOf("@")) + "foo");

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.slice(0, p.stack.indexOf("@")) + p.stack.slice(p.stack.indexOf("@")));

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.name);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.toString());

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + " ");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.toLowerCase());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("").reverse().join(""));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.replace("stack", "trace"));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: true
+   });

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stacktrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "error", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "trace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: false
+   });

[Survived] PrecomputedMutator
q.js:403:17
-       var lines = stackString.split("\n");
+       var lines = stackString.slice("\n");

[Survived] PrecomputedMutator
q.js:403:17
-       var lines = stackString.split("\n");
+       var lines = stackString.substring("\n");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\t");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\r");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(" ");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = this.length - 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = Math.floor(Math.random() * this.length); i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i >= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i *= 2) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (line && !isInternalFrame(line) && !isNodeFrame(line)) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (line && !isInternalFrame(line) && !isNodeFrame(line) && line.indexOf("qFileName") >= 0) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isExternalFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame || isExternalFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line.split("")) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line.split(" ")[0]) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line.includes("node.js")) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame || isInternalFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame && isInternalFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame ^ isInternalFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.pop(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.shift(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.unshift(line);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line + 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line - 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line * 2);

[Survived] PrecomputedMutator
q.js:412:12
-       return desiredLines.join("\n");
+       return desiredLines.push("\n");

[Survived] PrecomputedMutator
q.js:412:12
-       return desiredLines.join("\n");
+       return desiredLines.reverse("\n");

[Survived] PrecomputedMutator
q.js:412:12
-       return desiredLines.join("\n");
+       return desiredLines.sort("\n");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\t");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:30
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.indexOf("(module.js:0)") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:30
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.indexOf("(module.js:1)") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:30
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.indexOf("(module.js:2)") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.lastIndexOf("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.startsWith("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(node.js:)") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(" ").pop());

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(" ")[1]);

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (attempt2) {

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (attempt3) {

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (attempt1 + attempt2) {

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "string"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], null(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], undefined(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1] + attempt2[2])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.substring(1));

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[2]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[0]) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[attempt2.length - 1])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split("\n")[0]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split("\n")[1]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split("\n").slice(-1));

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[1] > attempt3[2]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[1] === attempt3[2]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[1] !== attempt3[2]) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "1"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], undefined(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[4])];

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber[0](stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber.length(stackLine);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (!fileNameAndLineNumber[0]) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (typeof fileNameAndLineNumber === "undefined") {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks === false) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks !== true) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\t");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(" ");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("_");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].includes("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].lastIndexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("%") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("&") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[0]) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.length) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.includes(0)) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.log("Deprecation warning: Q.defer is deprecated and will be removed in a future version. Use Q.Promise instead.")) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn("Deprecation warning: Q.defer is deprecated and will be removed in a future version. Use Q.Promise instead.")) {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, arguments[0]);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, arguments.slice(1));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, []);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return promise.reject(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return promise.resolve(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return promise.then(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(function () {
+     throw new Error("This is a bug");
+   }, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(function () {
+     return "This is a bug";
+   }, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(function () {
+     return Promise.reject("This is a bug");
+   }, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, []);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, new Object());

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (typeof value === "Promise") {

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(object_create(Promise.prototype));

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(object_create(Object.prototype));

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(object_create(null));

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op !== "when" || operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.pop(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.shift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.unshift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(null);

[Survived] PrecomputedMutator
q.js:570:17
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(promise, args);

[Survived] PrecomputedMutator
q.js:570:17
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args.concat([1]));

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(promise, args);

[Survived] PrecomputedMutator
q.js:570:72
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args.concat(["extra"]));

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (!messages) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages[0]) {

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.promise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.value);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(fulfill(resolvedPromise));

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue !== null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue !== undefined) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue !== 0) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (!isPromise(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromise && isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue + 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue - 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue * 2)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise !== undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === null) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (!Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.split("\n").length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.split("\n")[0].length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.includes("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.findIndex("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(" ") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\\n") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(null, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(undefined, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(0, message);

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise === null) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== undefined) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(otherValue));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(value + 1));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value - 1));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value * 2));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (progressListeners.length) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (typeof resolvedPromise === "undefined") {

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener("progress");

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress + 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress * 2);

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments[0] > 2) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.fulfill(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 2)));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 1, 2)));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(-1, 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 4));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.notify(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.fulfill(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve("value");

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver === null) {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== "object") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver.constructor !== Function) {

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.resolve, deferred.reject);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.notify, deferred.resolve);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.fulfill, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.makeNodeResolver, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, promise.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, Q.notify);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + 1).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(null).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x + y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(null);

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.reject([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.resolve([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.defer([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([null, null]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x == y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x === y || x === z) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i >= len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = answerPs.length - 1) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, exception);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i + 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i - 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(undefined, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return null(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return undefined(Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback !== void 0) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (typeof fallback !== "function") {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === 0) {

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(null, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply({}, args);

[Survived] PrecomputedMutator
q.js:808:56
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args.concat(1));

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(undefined, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call({}.promiseDispatch, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op + 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op - 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op * 2, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[0]);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[1]);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[2]);

[Survived] PrecomputedMutator
q.js:813:22
-               result = reject(exception);
+               result = resolve(exception);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(undefined);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("test"));

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.state) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect()) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.bind(this)) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "pending") {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch.bind(exception));

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, Q.resolve(exception));

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed("foo") : value;

[Survived] PrecomputedMutator
q.js:878:17
-               if (done) {
+               if (done === true) {

[Survived] PrecomputedMutator
q.js:878:17
-               if (done) {
+               if (done !== false) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(undefined);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(0);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror()) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror = function () {
+     return;
+   }) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror = function () {
+     throw new Error();
+   }) {

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.message);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.stack);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.name);

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(undefined);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify("foo");

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return 1(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return "string"(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return null(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.call(null));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.bind(null));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.apply(null));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(null);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(undefined);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(0);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(Promise.reject(new Error("something went wrong")));

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed.reverse());

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed.slice(1));

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed.concat(["extra"]));

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value + 1).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value * 2).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value - 1).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(null, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, undefined, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, () => {});

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return undefined;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return this;
+   });

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q({}).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(value + 1);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(value * 2);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(value - 1);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return Q.reject(reason);
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(null).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(undefined).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(0).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(undefined);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(Promise.reject(reason));

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (!isPromise(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value instanceof Promise) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isFulfilled(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isRejected(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(!value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value * 0)) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.value === undefined) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isObject(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isString(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(null) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(undefined) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(0) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && object.inspect.state().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && object.inspect.then().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromiseAlike(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isNotPromise(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(!object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(undefined) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(null) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return !isPromise(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isFulfilled(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "rejected") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state !== "rejected") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "pending") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === true) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections == false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (promise === unhandledRejections[0]) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (promise.inspect().state === "rejected") {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.slice(), promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, unhandledRejections.length) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, reportedUnhandledRejections.length) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, unhandledReasons.length) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "abc", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + 1, reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "xyz", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.message, promise);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function () {
+     throw new Error("Oh no!");
+   }));

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function () {
+     return Q.reject("Oh no!");
+   }));

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function () {
+     return Q.reject("Oh no!");
+   }, function () {
+     throw new Error("Oh no!");
+   }));

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.then(function () {
+     throw new Error("Test error");
+   }));

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.then(function () {
+     return 42;
+   }));

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.then(function () {
+     return Q.reject("Test error");
+   }));

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledReasons.push(promise);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== undefined) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== null) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined") {

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.message);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.name);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.code);

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (unhandledRejections.length > 0) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (reportedUnhandledRejections.length > 0) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.concat(promise), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.indexOf(promise), promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at < -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === -1) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, unhandledRejections);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, unhandledReasons);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(Q.getUnhandledReasons(), promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, undefined);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, {});

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (reportedUnhandledRejections.length > 0) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (!reportedUnhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 2], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("unhandledRejection", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons.length, promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then(function () {}));

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.catch(function () {}));

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.finally(function () {}));

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(reportedUnhandledRejections.length - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, undefined);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, unhandledReasons.length - 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at.length - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, array_indexOf(unhandledRejections, promise) + 1);

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected && false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected || true) {

[Survived] PrecomputedMutator
q.js:1140:17
-                   untrackRejection(this);
+                   trackRejection(this);

[Survived] PrecomputedMutator
q.js:1140:17
-                   untrackRejection(this);
+                   Q.stopUnhandledRejectionTracking(this);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection({});

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason + 1);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason - 1);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason * 2);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(0, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, new Error());

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name == null) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name != null) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(args.slice());

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.toString(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(NaN, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.slice());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.concat());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.map(function (x) {
+     return x + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value[0]);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(0, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice());

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat());

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.filter(function (arg) {
+     return arg !== undefined;
+   }));

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(void 0);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(null);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(undefined);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.toString(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args + 1);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.length);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.values(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(undefined);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys({});

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.cancel(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(0);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object[op].apply(object, args));

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object[op](args));

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object[op](args, object));

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return "undefined"(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return "null"(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return "0"(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch({}, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op + 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op - 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op * 2, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, null);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q + 1(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.foo(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.reject(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, rejected, 0);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(42).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled(), rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, resolved);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, rejected(new Error("error")));

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, rejected(promise));

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.then().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.resolve().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.reject().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return rejected.apply(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return deferred.resolve.apply(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return deferred.reject.apply(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply({}, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.slice());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.concat());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.map(function (value) {
+     return value + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration === "function") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration === "object") {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](0);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return undefined(exception);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.fulfilled) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.rejected) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value + 1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value * 2);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value.length);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.error, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value.error, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value[0], callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, reject, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, args[0], errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, self, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, errback.bind(null, "throw"));

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, errback.bind(null, "next"));

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("foo");

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.name === "StopIteration") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception instanceof StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.constructor === StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration === true(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration !== true(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.value)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.message)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.stack)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.reason);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.message);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.name);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return resolve(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(null);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(undefined);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result[0], callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result.then(callback, errback));

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.reject(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.all(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.then(function (value) {
+     return value;
+   }), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(Q(result), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, errback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, reject, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, reject);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, callback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, function (error) {
+     throw error;
+   });

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({});

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.bind(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.arrow(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(0, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(null, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(undefined, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(self, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw", undefined));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw", null));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.throw(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.next(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.value(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(null, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(undefined, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(void 0, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "undefined");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "null");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return undefined();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return null();

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.fail(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.delay(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.reject(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator)(null));

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator)("foo"));

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.bind(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.apply(this))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, any(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, filter(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, map(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([1, 2, 3])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(new Array(1, 2, 3))], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(undefined);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(null);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(true);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.bind(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(this, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args[0]);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat(1));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.reverse());

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q({}).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op.toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op.slice(0), args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op.length + 1, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[0]);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve(op, args));

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.cancel, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op.toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op.length, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.concat([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.map(function (x) {
+     return x + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key, "get"]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(undefined).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(Q.reject(new Error("invalid object"))).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [this.key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return Promise.prototype.dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return Q.dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key + 1, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value - 1]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(undefined).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q({}).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, false]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, null]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("hasOwnProperty", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.reject(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(null).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q({
+     foo: "bar"
+   }).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("del", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, "wrong_key"]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", ["wrong_key"]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("hasOwnProperty", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.reject("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.resolve("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.then("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("clear", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("pop", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key] + 1);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", key.toUpperCase());

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", key + "1");

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice()]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat([])]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q({}).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("apply", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("call", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat([42])]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice()]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.concat()]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.filter(function (arg) {
+     return arg !== undefined;
+   })]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(undefined).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(0).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("put", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("resolve", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("reject", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 3))]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(deferred.resolve)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(null, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(undefined, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([], 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("apply", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0, -1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.reject("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("put", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("getAll", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 2))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([arguments[0], arguments[2]])]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(null, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([], 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(['foo', 'bar'], 1)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q({}).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("fapply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 1, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, void 1]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [this, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, [].concat(args)]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("post", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, undefined]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, null]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, "foo"]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(null).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(42).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("map", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, -1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments.length)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 3), 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("concat", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [array_slice(arguments), void 0]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [array_slice(arguments), array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(array_slice(arguments, 3))]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(0);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 0));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice({}, 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 1 + 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_splice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(void 0(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(null(arguments))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(array_slice(arguments, 3)))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(this);

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 2))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([1, 2, 3]))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("concat", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.reject(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.resolve(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.when(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.length).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.toString()).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object[0]).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1, 2, 3, 4]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1, 2, 3, 4, 5]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("slice", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3, 4, 5]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3, 4, 5, 6]);

[Survived] PrecomputedMutator
q.js:1584:24
-           var deferred = defer();
+           var deferred = deferred.promise();

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "fulfilled" && promise.inspect().value !== undefined

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     throw new Error("Test error");
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return Q.reject("Test error");
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return Q.resolve("Test error");
+   })) &&

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.value()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.promise()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount !== promises.length) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === promises.length - 1) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.cancel(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.concat(Q.resolve(42)));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.map(function (promise) {
+     return promise.then(function (value) {
+       return value * 2;
+     });
+   }));

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.resolve({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.progress({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: index
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: promises[index]
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: index * 2
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.cancel(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return Promise.race(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(null);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(undefined);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(Promise.reject());

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 1) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === promises.length) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.defer();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.when();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected, onProgress).then(onProgress));

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(null, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, null), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, noop, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, function () {}, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, noop);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, function (progress) {
+     deferred.notify({
+       index: index,
+       value: progress
+     });
+   });

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve("result");

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(result + 1);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(result * 2);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < promises.length) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   Q.reject(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(new Error("Different error message"));

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return all(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return filter(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(null);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(undefined);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(1);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(any, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allRejected", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "any", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allFulfilled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "anyRejected");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allRejected");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve(promises));

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject(promises));

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer());

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_forEach(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(0, promises.length - 1), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.concat([]), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.filter(function (promise) {
+     return promise !== undefined;
+   }), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.when);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop).then(noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(null, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(undefined, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(0, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function (err) {
+     deferred.reject(err);
+   }, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function (err) {
+     deferred.resolve(err);
+   }, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function (err) {
+     deferred.notify(err);
+   }, noop);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, deferred.reject);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, deferred.notify);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(undefined);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved([]);

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.filter(function () {
+     return true;
+   })).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.map(function () {
+     return Q.resolve();
+   })).allSettled();

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, noop, noop);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(noop, noop, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(noop, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(undefined, regardless);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(rejected, null);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(Q.reject()).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, Q.reject);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(void 0, "rejected");

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(NaN, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, deferred.reject("Error message"));

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then("hello", "world", progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(function () {}).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then("undefined", void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, NaN, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, Infinity, progressed);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, promise.then(void 0, progressed));

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, promise.then(progressed, void 0));

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, promise.then(void 0, function () {}));

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(0, 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, undefined);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, "foo");

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(undefined)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Q.reject("error"))["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](random());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](null);

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.apply === "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (typeof callback !== "function") {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = "hello world"(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = null(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fcall());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.then());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.catch());

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, progress, rejected);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.reject(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.defer(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.fcall(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(null).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(undefined).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(Q.reject("error")).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progress, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(void 0, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected(new Error("Different error")), progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, fulfilled(null), progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, progressed(10), progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, "progress");

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, "progressed");

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, "notify");

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.then());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.catch());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.finally());

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, fulfilled, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(void 0, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, resolved, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, Q.reject("test error"), progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, rejected) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, fulfilled) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, progressed) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError(error, promise));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError(error, Q.resolve(promise)));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError(error, Q.reject(promise)));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError());

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(NaN, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError());

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, () => {});

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms * 2, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms / 2, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.reject(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.resolve(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.all(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms + 1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms - 1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, function () {});

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, function (e) {
+     throw e;
+   });

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = deferred.reject();

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = deferred.notify();

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = deferred.resolve();

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject("Error");

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(new Error());

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           setInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           null(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(new Error("Something went wrong"));

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           setInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           null(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           undefined(exception);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject("Error: Timed out after " + ms + " ms");

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== void 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== undefined) {

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return undefined(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return null(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return 0(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q({}).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout + 10);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout - 10);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.makeNodeResolver(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(0);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = null(args);

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = undefined(args);

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = [](args);

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.length(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs[0](deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(deferred.reject));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeRejecter());

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(void 0).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments), 1);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments[1]);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_shift(arguments, 1);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_pop(arguments, 1);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_reverse(arguments, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q({}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(true));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(false));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver("string"));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.nfapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.nfcall(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(0, -1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.reverse()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat(["foo"])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.makeNodeResolver);

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback === "function") {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback instanceof Function) {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(array_slice(arguments, 1, 2), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(array_slice(arguments, 0, 1), 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, NaN);

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).reverse());

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).pop());

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).shift());

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice.length(arguments));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(undefined));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.notify());

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           deferred(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           deferred.reject(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           undefined(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback.bind(null)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback.bind(this)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply("hello");

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, void 0);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(args, 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(baseArgs, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 1), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 2), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 3), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, "foo");

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs + args(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = [baseArgs, args](array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(arguments.length(arguments));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(1 + arguments));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments.length));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments.toString()));

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver() + 1);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver() - 1);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver() * 2);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, args);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, baseArgs);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, nodeArgs);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, [1]);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, [undefined]);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(thisp).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.concat()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.pop()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice(0, 1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, "foo");

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([], 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, "hello");

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift({});

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(0, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.reverse());

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, [args]);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat(args));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.reject(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name + "foo", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name * 2, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.pop());

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.reverse());

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice.length(args || []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(0);

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = defer.resolve();

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = defer.reject();

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(() => {});

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "optional"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, object]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.concat(object)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(undefined, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([], 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(true));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(false));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(undefined));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null());

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       null(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       undefined(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(this).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(null).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(undefined).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.length]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(function () {});

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, "foo");

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice.length + 1(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, nodeArgs.length);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, Math.random());

[Survived] PrecomputedMutator
q.js:2030:20
-       var deferred = defer();
+       var deferred = undefined();

[Survived] PrecomputedMutator
q.js:2030:20
-       var deferred = defer();
+       var deferred = null();

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeRejector());

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return object(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return undefined(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return null(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return {}(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q({}).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(!nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback + 1);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback.call());

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback + 1) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (undefined) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, undefined);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback({}, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, 0);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback("error");

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.reject();

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.then("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.catch("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.finally("head");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("ends.promise.tail");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail.next");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail.promise");

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(error.message);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(new Error("Can't get value from closed queue"));

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(Q.reject(error))};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(Q.resolve(error))};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

Ran 0.95 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   12.25 |      152 |        97 |       1784 |        0 |        0 |
 q.js     |   12.36 |      152 |        97 |       1766 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         18 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m20:31:30 (3001) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m20:31:30 (3001) INFO MutationTestExecutor[39m Done in 235 minutes 29 seconds.

real	235m31.087s
user	41m25.492s
sys	7m5.749s
