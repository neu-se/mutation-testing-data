  Mutation Testing
=========================

Mutation testing is a software testing technique that involves modifying the source code of a program and then observing the behavior of the program to see if the changes cause any test cases to fail. The goal of mutation testing is to identify weaknesses in the test suite and to improve its effectiveness.

Mutation testing can be applied to the code you provided by making small changes to the code and then observing how the changes affect the behavior of the program. For example, you can change the `+` operator to a `-` operator in the `range()` function to see if the test cases still pass. If the tests still pass, then the mutation has been "killed" and the test suite is effective.

Option 1: The PLACEHOLDER can be replaced with:
```
const end = index + (1 - step);
```
This would result in different behavior because the calculation for `end` is now backwards. The `range()` function would produce a different set of numbers and the tests would fail.

Option 2: The PLACEHOLDER can be replaced with:
```
