*** using precomputed mutations ***
[32m23:59:03 (3074) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m23:59:03 (3074) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m23:59:03 (3074) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m23:59:04 (3074) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m23:59:04 (3074) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m23:59:04 (3074) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1894 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof window === "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof window === "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof Q === "undefined"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("sun")
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap(0)
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap(head)
Mutant 6 in q.js: bootstrap replaced with "hello"
Mutant 7 in q.js: bootstrap replaced with 123
Mutant 8 in q.js: bootstrap replaced with null
Mutant 9 in q.js: "promise" replaced with "deferred"
Mutant 10 in q.js: "promise" replaced with undefined
Mutant 11 in q.js: "promise" replaced with null
Mutant 12 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "undefined"
Mutant 13 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof void 0
Mutant 14 in q.js: typeof exports === "object" && typeof module === "object" replaced with null && typeof exports === "object"
Mutant 15 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && !define.amd
Mutant 16 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd === 1
Mutant 17 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && !/^define\.amd/.test(define)
Mutant 18 in q.js: definition replaced with definition()
Mutant 19 in q.js: definition replaced with function () {}
Mutant 20 in q.js: definition replaced with void 0
Mutant 21 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined"
Mutant 22 in q.js: typeof ses !== "undefined" replaced with ses !== undefined
Mutant 23 in q.js: !ses.ok() replaced with ses.notOk()
Mutant 24 in q.js: !ses.ok() replaced with !ses.notOk()
Mutant 25 in q.js: !ses.ok() replaced with ses.ok()
Mutant 26 in q.js: ses.ok replaced with ses.fail
Mutant 27 in q.js: ses.ok replaced with 0
Mutant 28 in q.js: ses.ok replaced with NaN
Mutant 29 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== true && typeof self !== false
Mutant 30 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" || typeof self !== " undefined"
Mutant 31 in q.js: captureLine replaced with 1 + 1
Mutant 32 in q.js: captureLine replaced with null
Mutant 33 in q.js: captureLine replaced with false
Mutant 34 in q.js: head.next replaced with head.lastChild
Mutant 35 in q.js: head.next replaced with tail
Mutant 36 in q.js: head.next replaced with head.previousSibling
Mutant 37 in q.js: domain replaced with domain && domain.exit()
Mutant 38 in q.js: domain replaced with !domain
Mutant 39 in q.js: domain replaced with domain === 'exit'
Mutant 40 in q.js: domain.enter replaced with domain.exit
Mutant 41 in q.js: domain.enter replaced with noop
Mutant 42 in q.js: runSingle(task, domain) replaced with runSingle(task())
Mutant 43 in q.js: runSingle(task, domain) replaced with runSingle(tail.task())
Mutant 44 in q.js: runSingle(task, domain) replaced with runSingle(someOtherTask())
Mutant 45 in q.js: domain replaced with undefined
Mutant 46 in q.js: domain replaced with null
Mutant 47 in q.js: domain replaced with 0
Mutant 48 in q.js: laterQueue.length replaced with laterQueue.push()
Mutant 49 in q.js: laterQueue.length replaced with laterQueue.shift()
Mutant 50 in q.js: laterQueue.length replaced with laterQueue.length % 2
Mutant 51 in q.js: laterQueue.pop replaced with laterQueue.shift
Mutant 52 in q.js: laterQueue.pop replaced with laterQueue.length = 0
Mutant 53 in q.js: runSingle replaced with noop
Mutant 54 in q.js: task replaced with null
Mutant 55 in q.js: task replaced with undefined
Mutant 56 in q.js: task replaced with function () {}
Mutant 57 in q.js: task replaced with task + 1
Mutant 58 in q.js: task replaced with undefined
Mutant 59 in q.js: isNodeJS replaced with !isNodeJS
Mutant 60 in q.js: isNodeJS replaced with typeof window !== "undefined"
Mutant 61 in q.js: domain replaced with false
Mutant 62 in q.js: domain replaced with true
Mutant 63 in q.js: domain replaced with window.isNodeJS
Mutant 64 in q.js: domain.exit replaced with domain.simple
Mutant 65 in q.js: domain.exit replaced with domain.complex
Mutant 66 in q.js: 0 replaced with 1000
Mutant 67 in q.js: 0 replaced with -1000
Mutant 68 in q.js: domain replaced with "hello"
Mutant 69 in q.js: domain replaced with 0
Mutant 70 in q.js: domain replaced with 1 / 0
Mutant 71 in q.js: domain.exit replaced with domain.enter
Mutant 72 in q.js: domain.exit replaced with domain.remove
Mutant 73 in q.js: domain.exit replaced with domain.pop
Mutant 74 in q.js: !flushing replaced with !flushing && Math.random() < 0.5
Mutant 75 in q.js: !flushing replaced with !flushing || Math.random() < 0.5
Mutant 76 in q.js: !flushing replaced with !flushing && !Math.random() < 0.5
Mutant 77 in q.js: flush replaced with flush + 1
Mutant 78 in q.js: flush replaced with flush(1)
Mutant 79 in q.js: flush replaced with flush.bind(null)
Mutant 80 in q.js: typeof setImmediate === "function" replaced with typeof Promise === "function"
Mutant 81 in q.js: typeof window !== "undefined" replaced with typeof window !== "object"
Mutant 82 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 83 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 84 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(requestTick.apply(window, [flush]))
Mutant 85 in q.js: setImmediate.bind replaced with requestAnimationFrame
Mutant 86 in q.js: window replaced with document
Mutant 87 in q.js: window replaced with undefined
Mutant 88 in q.js: window replaced with null
Mutant 89 in q.js: flush replaced with null
Mutant 90 in q.js: flush replaced with undefined
Mutant 91 in q.js: flush replaced with "flush"
Mutant 92 in q.js: flush replaced with flush.bind(null)
Mutant 93 in q.js: flush replaced with flush.toString()
Mutant 94 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "undefined"
Mutant 95 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "function"
Mutant 96 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "object"
Mutant 97 in q.js: channel.port2.postMessage replaced with 1 + channel.port2.postMessage
Mutant 98 in q.js: 0 replaced with 1
Mutant 99 in q.js: 0 replaced with null
Mutant 100 in q.js: 0 replaced with Infinity
Mutant 101 in q.js: setTimeout replaced with setInterval
Mutant 102 in q.js: flush replaced with FLUSH
Mutant 103 in q.js: flush replaced with requestTick
Mutant 104 in q.js: flush replaced with []
Mutant 105 in q.js: 0 replaced with 1
Mutant 106 in q.js: 0 replaced with 2
Mutant 107 in q.js: 0 replaced with -1
Mutant 108 in q.js: setTimeout(flush, 0) replaced with setTimeout("foo")
Mutant 109 in q.js: setTimeout(flush, 0) replaced with setTimeout(undefined)
Mutant 110 in q.js: setTimeout(flush, 0) replaced with setTimeout(null)
Mutant 111 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 112 in q.js: setTimeout replaced with setAnytime
Mutant 113 in q.js: flush replaced with function () {
  throw "Error!";
}
Mutant 114 in q.js: flush replaced with function () {/* empty function */}
Mutant 115 in q.js: 0 replaced with 1
Mutant 116 in q.js: 0 replaced with -1
Mutant 117 in q.js: 0 replaced with Math.random()
Mutant 118 in q.js: task replaced with null
Mutant 119 in q.js: task replaced with {}
Mutant 120 in q.js: task replaced with []
Mutant 121 in q.js: !flushing replaced with flushing
Mutant 122 in q.js: !flushing replaced with !isNodeJS
Mutant 123 in q.js: !flushing replaced with !!flushing
Mutant 124 in q.js: requestTick replaced with null
Mutant 125 in q.js: call.apply(f, arguments) replaced with call.apply(f, "arguments")
Mutant 126 in q.js: call.apply(f, arguments) replaced with call.apply(f, null)
Mutant 127 in q.js: call.apply(f, arguments) replaced with call.apply(f, NaN)
Mutant 128 in q.js: f replaced with array_slice.call(f, 0)
Mutant 129 in q.js: f replaced with array_reduce.call(f, function (a, b) {
  return a + b;
}, 0)
Mutant 130 in q.js: f replaced with array_map.call(f, function (x) {
  return x * 2;
})
Mutant 131 in q.js: arguments replaced with Object.create(arguments)
Mutant 132 in q.js: arguments replaced with [...arguments]
Mutant 133 in q.js: arguments replaced with {}
Mutant 134 in q.js: uncurryThis replaced with "string"
Mutant 135 in q.js: uncurryThis replaced with 1
Mutant 136 in q.js: Array.prototype.slice replaced with Object.prototype.slice
Mutant 137 in q.js: Array.prototype.slice replaced with Array.prototype.join
Mutant 138 in q.js: Array.prototype.slice replaced with Object.prototype.toString
Mutant 139 in q.js: arguments.length === 1 replaced with arguments.length <= 1
Mutant 140 in q.js: arguments.length === 1 replaced with arguments.length >= 1
Mutant 141 in q.js: arguments.length === 1 replaced with arguments.length !== 1
Mutant 142 in q.js: 1 replaced with 0
Mutant 143 in q.js: 1 replaced with 1.1
Mutant 144 in q.js: 1 replaced with -1
Mutant 145 in q.js: index in this replaced with index in self
Mutant 146 in q.js: index in this replaced with this.index
Mutant 147 in q.js: ++index >= length replaced with index > length
Mutant 148 in q.js: ++index >= length replaced with index <= length
Mutant 149 in q.js: ++index >= length replaced with length - index
Mutant 150 in q.js: index < length replaced with !(index >= length)
Mutant 151 in q.js: index++ replaced with --index
Mutant 152 in q.js: index++ replaced with index--
Mutant 153 in q.js: index in this replaced with this[index] === value
Mutant 154 in q.js: index in this replaced with this[index] !== value
Mutant 155 in q.js: callback(basis, this[index], index) replaced with callback(basis + index)
Mutant 156 in q.js: callback(basis, this[index], index) replaced with callback(this[index] + basis)
Mutant 157 in q.js: callback(basis, this[index], index) replaced with callback(basis + Math.sqrt(index))
Mutant 158 in q.js: basis replaced with null
Mutant 159 in q.js: basis replaced with undefined
Mutant 160 in q.js: basis replaced with basis + 1
Mutant 161 in q.js: this[index] replaced with this[index + 1]
Mutant 162 in q.js: this[index] replaced with this[index] + 1
Mutant 163 in q.js: this[index] replaced with this[index + 2]
Mutant 164 in q.js: index replaced with incrementedIndex
Mutant 165 in q.js: index replaced with decrementedIndex
Mutant 166 in q.js: index replaced with index *= 2
Mutant 167 in q.js: i < this.length replaced with i <= this.length
Mutant 168 in q.js: i < this.length replaced with i < this.length - 1
Mutant 169 in q.js: i < this.length replaced with i % 2 === 0
Mutant 170 in q.js: i++ replaced with i--
Mutant 171 in q.js: i++ replaced with i += 2
Mutant 172 in q.js: i++ replaced with i -= 10
Mutant 173 in q.js: this[i] === value replaced with this[i] !== value
Mutant 174 in q.js: this[i] === value replaced with this[i + 1] === value
Mutant 175 in q.js: this[i] === value replaced with this[i] = value
Mutant 176 in q.js: collect.push replaced with basis
Mutant 177 in q.js: collect.push replaced with null
Mutant 178 in q.js: collect.push replaced with undefined
Mutant 179 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, self, index, value)
Mutant 180 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(self, index, value, thisp)
Mutant 181 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(value, index, thisp, self)
Mutant 182 in q.js: thisp replaced with null
Mutant 183 in q.js: thisp replaced with undefined
Mutant 184 in q.js: thisp replaced with function () {
  return;
}
Mutant 185 in q.js: value replaced with undefined
Mutant 186 in q.js: value replaced with null
Mutant 187 in q.js: value replaced with Infinity
Mutant 188 in q.js: index replaced with index + 1
Mutant 189 in q.js: index replaced with this.length - index - 1
Mutant 190 in q.js: index replaced with Math.random() * this.length
Mutant 191 in q.js: uncurryThis replaced with 0
Mutant 192 in q.js: uncurryThis replaced with "I'm a placeholder"
Mutant 193 in q.js: uncurryThis replaced with []
Mutant 194 in q.js: object replaced with undefined
Mutant 195 in q.js: object replaced with {
  key: value
}
Mutant 196 in q.js: object replaced with Symbol('key')
Mutant 197 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && typeof object[key] !== "undefined"
Mutant 198 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) || typeof object[key] === "undefined"
Mutant 199 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) !== typeof object[key] !== "undefined"
Mutant 200 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty([object])
Mutant 201 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty([object.prototype])
Mutant 202 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty([hasOwnProperty])
Mutant 203 in q.js: object_hasOwnProperty replaced with !object_hasOwnProperty
Mutant 204 in q.js: object replaced with null
Mutant 205 in q.js: object replaced with ''
Mutant 206 in q.js: key replaced with key += 1
Mutant 207 in q.js: key replaced with key = 0
Mutant 208 in q.js: key replaced with "value"
Mutant 209 in q.js: key replaced with Math.floor(Math.random() * 100)
Mutant 210 in q.js: key replaced with null
Mutant 211 in q.js: uncurryThis replaced with Error.prototype.toString
Mutant 212 in q.js: uncurryThis replaced with Array.prototype.toString
Mutant 213 in q.js: uncurryThis replaced with "[Object object]".toString
Mutant 214 in q.js: Object replaced with undefined
Mutant 215 in q.js: Object replaced with null
Mutant 216 in q.js: Object replaced with NaN
Mutant 217 in q.js: value replaced with value + 1
Mutant 218 in q.js: object_toString replaced with Object.prototype
Mutant 219 in q.js: object_toString replaced with Function.prototype
Mutant 220 in q.js: object_toString replaced with Array.prototype
Mutant 221 in q.js: exception replaced with exception[0]
Mutant 222 in q.js: exception replaced with typeof exception
Mutant 223 in q.js: exception replaced with exception.message
Mutant 224 in q.js: typeof ReturnValue !== "undefined" replaced with function () {}
Mutant 225 in q.js: typeof ReturnValue !== "undefined" replaced with true
Mutant 226 in q.js: typeof ReturnValue !== "undefined" replaced with false
Mutant 227 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = !promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 228 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = undefined; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 229 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = "Hello"; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 230 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 231 in q.js: !!p replaced with !p
Mutant 232 in q.js: !!p replaced with p && 1
Mutant 233 in q.js: !!p replaced with p instanceof Object
Mutant 234 in q.js: p = p.source replaced with p = p.sink
Mutant 235 in q.js: p = p.source replaced with p = p.source.sink
Mutant 236 in q.js: p = p.source replaced with p = p.sink.sink
Mutant 237 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)
Mutant 238 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) && 1
Mutant 239 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 240 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter_", {
  value: p.stackCounter,
  configurable: true
})
Mutant 241 in q.js: error replaced with undefined
Mutant 242 in q.js: error replaced with []
Mutant 243 in q.js: error replaced with 'foo'
Mutant 244 in q.js: "__minimumStackCounter__" replaced with "__minimumStackCount__"
Mutant 245 in q.js: "__minimumStackCounter__" replaced with "stackCounter"
Mutant 246 in q.js: "__minimumStackCounter__" replaced with "stack"
Mutant 247 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 248 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 249 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 250 in q.js: stacks.unshift replaced with stacks.push
Mutant 251 in q.js: stacks.unshift replaced with stacks.pop
Mutant 252 in q.js: stacks.unshift replaced with stacks.shift
Mutant 253 in q.js: p.stack replaced with p.stack.slice(p.stackCounter + 1)
Mutant 254 in q.js: p.stack replaced with p.stack.pop(p.stackCounter)
Mutant 255 in q.js: p.stack replaced with p.stack.splice(p.stackCounter + 1)
Mutant 256 in q.js: error.stack replaced with error.message
Mutant 257 in q.js: error.stack replaced with error.toString()
Mutant 258 in q.js: error.stack replaced with error.name
Mutant 259 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + "<!-- Our friends at Hackbass #Testing Generator Consortium recommend avoiding whitespace in error messages. -->\n"
Mutant 260 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR.toUpperCase() + "\n"
Mutant 261 in q.js: concatedStacks replaced with concatenatedStacks
Mutant 262 in q.js: concatedStacks replaced with stacks.join("")
Mutant 263 in q.js: concatedStacks replaced with stacks.reverse().join("\n").reverse()
Mutant 264 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(promise[concatedStacks])
Mutant 265 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error.__stack__ = stack)
Mutant 266 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error.stack = stack)
Mutant 267 in q.js: error replaced with error.stack
Mutant 268 in q.js: error replaced with promise.stack
Mutant 269 in q.js: error replaced with QReturnValue
Mutant 270 in q.js: "stack" replaced with "stackTrace"
Mutant 271 in q.js: "stack" replaced with "error.stackTrace"
Mutant 272 in q.js: "stack" replaced with "error.stacktrace"
Mutant 273 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: null,
  configurable: true
}
Mutant 274 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: undefined,
  configurable: true
}
Mutant 275 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  configurable: false
}
Mutant 276 in q.js: stackString.split replaced with stackString.slice
Mutant 277 in q.js: stackString.split replaced with stackString.substring
Mutant 278 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 279 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = this.length; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 280 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = undefined; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 281 in q.js: ++i replaced with i--
Mutant 282 in q.js: ++i replaced with i = 0
Mutant 283 in q.js: ++i replaced with i = Infinity
Mutant 284 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with isInternalFrame(line)
Mutant 285 in q.js: isInternalFrame replaced with isNodeInternalFrame
Mutant 286 in q.js: isInternalFrame replaced with typeof isInternalFrame === "function"
Mutant 287 in q.js: line replaced with line > 5
Mutant 288 in q.js: line replaced with line <= 5
Mutant 289 in q.js: line replaced with line[0] > 5
Mutant 290 in q.js: isNodeFrame replaced with lineNumber >= qEndingLine
Mutant 291 in q.js: line replaced with line + 1
Mutant 292 in q.js: line replaced with line * 2
Mutant 293 in q.js: line replaced with line - 1
Mutant 294 in q.js: desiredLines.join replaced with desiredLines.unshift
Mutant 295 in q.js: desiredLines.join replaced with desiredLines.slice
Mutant 296 in q.js: stackLine.indexOf replaced with ~stackLine.indexOf
Mutant 297 in q.js: stackLine.indexOf replaced with stackLine.contains
Mutant 298 in q.js: stackLine replaced with stackLine + "abc"
Mutant 299 in q.js: stackLine replaced with stackLine.slice(1)
Mutant 300 in q.js: stackLine replaced with stackLine.replace(":", "")
Mutant 301 in q.js: Number replaced with "Hello, world!"
Mutant 302 in q.js: Number replaced with undefined
Mutant 303 in q.js: stackLine replaced with stackLine.match(/^at <external>/g)
Mutant 304 in q.js: stackLine replaced with stackLine.split("at")[1].trim()
Mutant 305 in q.js: stackLine replaced with stackLine.substring(stackLine.indexOf("at")).trim()
Mutant 306 in q.js: Number replaced with "NaN"
Mutant 307 in q.js: Number replaced with -1
Mutant 308 in q.js: Number replaced with "undefined"
Mutant 309 in q.js: attempt2[2] replaced with attempt3[1]
Mutant 310 in q.js: attempt2[2] replaced with attempt3[2]
Mutant 311 in q.js: attempt2[2] replaced with "myfilename.js"
Mutant 312 in q.js: stackLine replaced with stackLine + "1"
Mutant 313 in q.js: stackLine replaced with stackLine.substring(2)
Mutant 314 in q.js: stackLine replaced with stackLine.toUpperCase()
Mutant 315 in q.js: attempt3 replaced with attempt3 && attempt3[1] !== undefined
Mutant 316 in q.js: attempt3 replaced with attempt3 && attempt3[1] === undefined
Mutant 317 in q.js: attempt3 replaced with attempt3 && attempt3[1] instanceof Error
Mutant 318 in q.js: Number replaced with "qqq"
Mutant 319 in q.js: Number replaced with "xxxx"
Mutant 320 in q.js: Number replaced with "#$%&"
Mutant 321 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 322 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 323 in q.js: attempt3[2] replaced with attempt3[4]
Mutant 324 in q.js: stackLine replaced with stackLine.split(":")
Mutant 325 in q.js: stackLine replaced with stackLine.substring(0, stackLine.lastIndexOf(":"))
Mutant 326 in q.js: stackLine replaced with stackLine.replace(/^.*?:/, "")
Mutant 327 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber == null
Mutant 328 in q.js: !fileNameAndLineNumber replaced with !fileNameAndLineNumber.hasOwnProperty("fileName")
Mutant 329 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber && !fileNameAndLineNumber.hasOwnProperty("fileName")
Mutant 330 in q.js: e.stack.split replaced with e.message.split
Mutant 331 in q.js: "\n" replaced with " "
Mutant 332 in q.js: "\n" replaced with "hello"
Mutant 333 in q.js: "\n" replaced with resolve
Mutant 334 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 335 in q.js: "@" replaced with "#"
Mutant 336 in q.js: "@" replaced with ","
Mutant 337 in q.js: "@" replaced with "|"
Mutant 338 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0]
Mutant 339 in q.js: !fileNameAndLineNumber replaced with stackLine.match(/\((.+):\d+:\d+\)/)
Mutant 340 in q.js: !fileNameAndLineNumber replaced with isInternalFrame(stackLine.substring(stackLine.indexOf("@")))
Mutant 341 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console === "undefined"
Mutant 342 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn === "function123"
Mutant 343 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console.warn !== "function"
Mutant 344 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback.apply(this, arguments))
Mutant 345 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback.call(this, arguments))
Mutant 346 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback.bind(this, arguments))
Mutant 347 in q.js: arguments replaced with "Hello, world!"
Mutant 348 in q.js: arguments replaced with [1, 2, 3]
Mutant 349 in q.js: arguments replaced with null
Mutant 350 in q.js: value instanceof Promise replaced with 1 + 1 === 2
Mutant 351 in q.js: value instanceof Promise replaced with isPromise(value)
Mutant 352 in q.js: value instanceof Promise replaced with Object.prototype.toString.call(value) === '[object Promise]'
Mutant 353 in q.js: isPromiseAlike(value) replaced with typeof value !== "object"
Mutant 354 in q.js: isPromiseAlike(value) replaced with value !== Object(value)
Mutant 355 in q.js: isPromiseAlike(value) replaced with value.constructor !== Object
Mutant 356 in q.js: isPromiseAlike replaced with isPromiseAlike === undefined
Mutant 357 in q.js: isPromiseAlike replaced with isPromiseAlike !== isPromiseAlike
Mutant 358 in q.js: isPromiseAlike replaced with isPromiseAlike === isPromiseAlike
Mutant 359 in q.js: value replaced with null
Mutant 360 in q.js: value replaced with undefined
Mutant 361 in q.js: value replaced with {
  then: function () {}
}
Mutant 362 in q.js: coerce replaced with coerce - 1
Mutant 363 in q.js: coerce replaced with coerce * 2
Mutant 364 in q.js: coerce replaced with coerce / 0
Mutant 365 in q.js: value replaced with value.then()
Mutant 366 in q.js: value replaced with value.catch()
Mutant 367 in q.js: value replaced with value.finally()
Mutant 368 in q.js: fulfill replaced with reject
Mutant 369 in q.js: value replaced with null
Mutant 370 in q.js: value replaced with 0
Mutant 371 in q.js: value replaced with undefined
Mutant 372 in q.js: object_create replaced with assimilate
Mutant 373 in q.js: object_create replaced with true + object_create
Mutant 374 in q.js: defer.prototype replaced with null
Mutant 375 in q.js: defer.prototype replaced with document
Mutant 376 in q.js: defer.prototype replaced with this
Mutant 377 in q.js: object_create replaced with null
Mutant 378 in q.js: object_create replaced with object_assign
Mutant 379 in q.js: Promise.prototype replaced with Object.create(Promise.prototype)
Mutant 380 in q.js: Promise.prototype replaced with function () {
  return new Promise(function (resolve, reject) {
    resolve(messages);
  });
}
Mutant 381 in q.js: Promise.prototype replaced with Object.create(null)
Mutant 382 in q.js: arguments replaced with "hello world"
Mutant 383 in q.js: arguments replaced with []
Mutant 384 in q.js: arguments replaced with null
Mutant 385 in q.js: messages replaced with Array.isArray(messages)
Mutant 386 in q.js: messages replaced with messages.length > 0
Mutant 387 in q.js: messages replaced with !messages.every(function (msg) {
  return msg !== q;
})
Mutant 388 in q.js: args replaced with args[0].toLowerCase()
Mutant 389 in q.js: args replaced with args[1] + args[2]
Mutant 390 in q.js: args replaced with args.slice(1)
Mutant 391 in q.js: op === "when" && operands[1] replaced with op !== "when" && operands[1]
Mutant 392 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 393 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[0]
Mutant 394 in q.js: progressListeners.push replaced with promise.progress
Mutant 395 in q.js: operands[1] replaced with operands[0]
Mutant 396 in q.js: operands[1] replaced with "hello"
Mutant 397 in q.js: operands[1] replaced with 1 + 1
Mutant 398 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise, args[1])
Mutant 399 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(args, resolvedPromise)
Mutant 400 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(undefined, resolvedPromise)
Mutant 401 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.source.promiseDispatch.apply
Mutant 402 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.constructor.prototype.promiseDispatch.apply
Mutant 403 in q.js: resolvedPromise replaced with resolvedPromise + 1
Mutant 404 in q.js: resolvedPromise replaced with resolvedPromise * 2
Mutant 405 in q.js: resolvedPromise replaced with resolvedPromise.then(function (value) {
  return value + 1;
})
Mutant 406 in q.js: args replaced with [args, progressListeners]
Mutant 407 in q.js: args replaced with [args, 'undefined']
Mutant 408 in q.js: args replaced with [args, 'isFulfilled']
Mutant 409 in q.js: messages replaced with messages == false
Mutant 410 in q.js: messages replaced with messages === false
Mutant 411 in q.js: messages replaced with messages.length > 0
Mutant 412 in q.js: nearer replaced with nearerValue + 1
Mutant 413 in q.js: nearer replaced with nearerValue - 1
Mutant 414 in q.js: nearer replaced with nearerValue * 2
Mutant 415 in q.js: resolvedPromise replaced with 2
Mutant 416 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 417 in q.js: resolvedPromise replaced with resolvedPromise || 0
Mutant 418 in q.js: isPromise(nearerValue) replaced with nearerValue === resolvedPromise
Mutant 419 in q.js: isPromise(nearerValue) replaced with nearerValue != resolvedPromise
Mutant 420 in q.js: isPromise(nearerValue) replaced with nearerValue != resolvedPromise.promise
Mutant 421 in q.js: !resolvedPromise replaced with resolvedPromise === undefined
Mutant 422 in q.js: !resolvedPromise replaced with messages.length > 0
Mutant 423 in q.js: !resolvedPromise replaced with longStackSupport === true
Mutant 424 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport || !hasStacks
Mutant 425 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 426 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && hasStacks && false
Mutant 427 in q.js: e.stack.substring replaced with e.stack.length
Mutant 428 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.lastIndexOf("\n") + 1
Mutant 429 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.slice(0, e.stack.indexOf("\n")).length
Mutant 430 in q.js: e.stack.indexOf replaced with e.stackLength
Mutant 431 in q.js: e.stack.indexOf replaced with e.type
Mutant 432 in q.js: e.stack.indexOf replaced with e.message
Mutant 433 in q.js: "\n" replaced with "Arbitrary String"
Mutant 434 in q.js: "\n" replaced with "Applying XOR operation to the stack trace"
Mutant 435 in q.js: "\n" replaced with "Using a different string concatenation method"
Mutant 436 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 437 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 438 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport || !hasStacks
Mutant 439 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise = null)
Mutant 440 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(Promise.reject(new Error()))
Mutant 441 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(Promise.resolve(message))
Mutant 442 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.reject.apply
Mutant 443 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.resolve.apply
Mutant 444 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.tolute.apply
Mutant 445 in q.js: newPromise replaced with null
Mutant 446 in q.js: newPromise replaced with true
Mutant 447 in q.js: newPromise replaced with message
Mutant 448 in q.js: message replaced with message[0]
Mutant 449 in q.js: message replaced with message.pop()
Mutant 450 in q.js: message replaced with message.slice(1)
Mutant 451 in q.js: Q(value) replaced with null
Mutant 452 in q.js: Q(value) replaced with Q.reject(value)
Mutant 453 in q.js: Q(value) replaced with Q.resolve(value * 2)
Mutant 454 in q.js: Q replaced with undefined
Mutant 455 in q.js: Q replaced with "Q"
Mutant 456 in q.js: value replaced with value - 1
Mutant 457 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 458 in q.js: resolvedPromise replaced with resolvedPromise !== true
Mutant 459 in q.js: fulfill(value) replaced with reject(value)
Mutant 460 in q.js: fulfill(value) replaced with become(value)
Mutant 461 in q.js: value replaced with value + 1
Mutant 462 in q.js: value replaced with null
Mutant 463 in q.js: resolvedPromise replaced with resolvedPromise.isFulfilled
Mutant 464 in q.js: resolvedPromise replaced with resolvedPromise.isRejected
Mutant 465 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 466 in q.js: reject(reason) replaced with become(Card(value))
Mutant 467 in q.js: reject(reason) replaced with become(valued(value))
Mutant 468 in q.js: reason replaced with null
Mutant 469 in q.js: reason replaced with undefined
Mutant 470 in q.js: reason replaced with 0
Mutant 471 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 472 in q.js: resolvedPromise replaced with progress
Mutant 473 in q.js: resolvedPromise replaced with !progress
Mutant 474 in q.js: progress replaced with progress + 1
Mutant 475 in q.js: progress replaced with progress - 1
Mutant 476 in q.js: progress replaced with 2 * progress
Mutant 477 in q.js: error replaced with !PLACEHOLDER
Mutant 478 in q.js: error replaced with ~PLACEHOLDER
Mutant 479 in q.js: error replaced with PLACEHOLDER + 0
Mutant 480 in q.js: self.reject replaced with this.reject
Mutant 481 in q.js: self.reject replaced with deferred.reject
Mutant 482 in q.js: arguments.length > 2 replaced with arguments.length > 1
Mutant 483 in q.js: arguments.length > 2 replaced with arguments.length >= 2
Mutant 484 in q.js: arguments.length > 2 replaced with arguments.lenth % 2 === 0
Mutant 485 in q.js: self.resolve replaced with self.reject
Mutant 486 in q.js: self.resolve replaced with self.notify
Mutant 487 in q.js: self.resolve replaced with self.fulfill
Mutant 488 in q.js: array_slice(arguments, 1) replaced with 1
Mutant 489 in q.js: array_slice(arguments, 1) replaced with 2
Mutant 490 in q.js: array_slice(arguments, 1) replaced with []
Mutant 491 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 492 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 3))
Mutant 493 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1, 1))
Mutant 494 in q.js: array_slice replaced with array_map
Mutant 495 in q.js: array_slice replaced with array_filter
Mutant 496 in q.js: array_slice replaced with array_reduce
Mutant 497 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 498 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 499 in q.js: arguments replaced with array_slice(arguments, 0, 1)
Mutant 500 in q.js: 1 replaced with Array.prototype.slice.call(arguments, 2)
Mutant 501 in q.js: 1 replaced with Array.prototype.slice.call(arguments, 3)
Mutant 502 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 503 in q.js: typeof resolver !== "function" replaced with resolver != "function"
Mutant 504 in q.js: typeof resolver !== "function" replaced with typeof resolver != "function"
Mutant 505 in q.js: defer replaced with deferring
Mutant 506 in q.js: defer replaced with definitelyDeferred
Mutant 507 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(null)
Mutant 508 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(undefined)
Mutant 509 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(Math.random())
Mutant 510 in q.js: deferred.resolve replaced with deferred.reject
Mutant 511 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 512 in q.js: deferred.resolve replaced with deferred.notify
Mutant 513 in q.js: deferred.reject replaced with deferred.reject(1)
Mutant 514 in q.js: deferred.reject replaced with deferred.notify(1)
Mutant 515 in q.js: deferred.reject replaced with deferred.resolve(reject)
Mutant 516 in q.js: deferred.notify replaced with deferred.notify.bind(null)
Mutant 517 in q.js: deferred.notify replaced with deferred.notify.apply(undefined)
Mutant 518 in q.js: deferred.notify replaced with deferred.notify.call(null)
Mutant 519 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 520 in q.js: deferred.reject replaced with promise.reject
Mutant 521 in q.js: deferred.reject replaced with Promise.reject
Mutant 522 in q.js: reason replaced with 1
Mutant 523 in q.js: reason replaced with null
Mutant 524 in q.js: reason replaced with {
  message: "Error"
}
Mutant 525 in q.js: x replaced with y
Mutant 526 in q.js: x replaced with x + y
Mutant 527 in q.js: x replaced with x * y
Mutant 528 in q.js: y replaced with null
Mutant 529 in q.js: y replaced with x
Mutant 530 in q.js: y replaced with new Error()
Mutant 531 in q.js: [this, that] replaced with [that, this]
Mutant 532 in q.js: [this, that] replaced with [this, that, that]
Mutant 533 in q.js: [this, that] replaced with [that, this, this]
Mutant 534 in q.js: x === y replaced with x !== y
Mutant 535 in q.js: x === y replaced with x < y
Mutant 536 in q.js: x === y replaced with x > y
Mutant 537 in q.js: // Switch to this once we can assume at least ES5
// answerPs.forEach(function (answerP) {
//     Q(answerP).then(resolve, reject);
// });
// Use this in the meantime
for (var i = 0, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
} replaced with for (var i = 10, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
}
Mutant 538 in q.js: // Switch to this once we can assume at least ES5
// answerPs.forEach(function (answerP) {
//     Q(answerP).then(resolve, reject);
// });
// Use this in the meantime
for (var i = 0, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
} replaced with for (var i = 0, len = answerPs.length + 100; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
}
Mutant 539 in q.js: // Switch to this once we can assume at least ES5
// answerPs.forEach(function (answerP) {
//     Q(answerP).then(resolve, reject);
// });
// Use this in the meantime
for (var i = 0, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
} replaced with for (var i = 0, len = answerPs.length * 2; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
}
Mutant 540 in q.js: // Switch to this once we can assume at least ES5
// answerPs.forEach(function (answerP) {
//     Q(answerP).then(resolve, reject);
// });
// Use this in the meantime
for (var i = 0, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
} replaced with for (var i = 0; i >= len; i--) {
  Q(answerPs[i]).then(resolve, reject);
}
Mutant 541 in q.js: // Switch to this once we can assume at least ES5
// answerPs.forEach(function (answerP) {
//     Q(answerP).then(resolve, reject);
// });
// Use this in the meantime
for (var i = 0, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
} replaced with for (var i = len; i >= 0; i--) {
  Q(answerPs[i]).then(resolve, reject);
}
Mutant 542 in q.js: i < len replaced with i < len + 1
Mutant 543 in q.js: i < len replaced with i > len
Mutant 544 in q.js: i < len replaced with i <= len
Mutant 545 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(_rejected, _rejected)
Mutant 546 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve)
Mutant 547 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(_fulfilled, _rejected)
Mutant 548 in q.js: answerPs[i] replaced with answerPs[i++]
Mutant 549 in q.js: resolve replaced with resolve()
Mutant 550 in q.js: resolve replaced with deferred.resolve()
Mutant 551 in q.js: resolve replaced with deferred.deferred.resolve()
Mutant 552 in q.js: reject replaced with resolve
Mutant 553 in q.js: reject replaced with null
Mutant 554 in q.js: this.then replaced with null
Mutant 555 in q.js: this.then replaced with undefined
Mutant 556 in q.js: Q.race replaced with Q.all()
Mutant 557 in q.js: Q.race replaced with Q.race(undefined)
Mutant 558 in q.js: Q.race replaced with Q.resolve(undefined)
Mutant 559 in q.js: fallback === void 0 replaced with descriptor[op] === void 0
Mutant 560 in q.js: fallback === void 0 replaced with typeof descriptor[op] !== "function"
Mutant 561 in q.js: fallback === void 0 replaced with Object.prototype.hasOwnProperty.call(descriptor[op], op)
Mutant 562 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 563 in q.js: inspect === void 0 replaced with typeof inspect !== "function"
Mutant 564 in q.js: inspect === void 0 replaced with Promise.prototype.isPrototypeOf(inspect)
Mutant 565 in q.js: object_create replaced with null
Mutant 566 in q.js: object_create replaced with undefined
Mutant 567 in q.js: object_create replaced with {}
Mutant 568 in q.js: descriptor[op] replaced with descriptor[op] + 1
Mutant 569 in q.js: descriptor[op] replaced with descriptor.prototype[op]
Mutant 570 in q.js: descriptor[op] replaced with descriptor[op]()
Mutant 571 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise.join(args))
Mutant 572 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(makePromise(descriptor, fallback, inspect))
Mutant 573 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(this.promiseDispatch)
Mutant 574 in q.js: promise replaced with Q.race(promise)
Mutant 575 in q.js: promise replaced with Q.all(promise)
Mutant 576 in q.js: promise replaced with Q("hello").join(promise)
Mutant 577 in q.js: args replaced with args[0]
Mutant 578 in q.js: args replaced with args.slice(1)
Mutant 579 in q.js: args replaced with Promise.resolve(args)
Mutant 580 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.fulfill, op, args)
Mutant 581 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise, "‌uncaught", [op])
Mutant 582 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise, "‌fulfilled", [value])
Mutant 583 in q.js: promise replaced with null
Mutant 584 in q.js: promise replaced with promise.then(function () {})
Mutant 585 in q.js: promise replaced with Object.create(promise)
Mutant 586 in q.js: args replaced with 1 + args
Mutant 587 in q.js: args replaced with args + 1
Mutant 588 in q.js: args replaced with args.length
Mutant 589 in q.js: reject replaced with false
Mutant 590 in q.js: reject replaced with void 0
Mutant 591 in q.js: exception replaced with reject(null)
Mutant 592 in q.js: exception replaced with reject(new Error("Some other error"))
Mutant 593 in q.js: inspect replaced with inspect()
Mutant 594 in q.js: inspect replaced with inspect.call(promise)
Mutant 595 in q.js: inspect replaced with inspect.bind(promise)
Mutant 596 in q.js: inspect replaced with inspected.state
Mutant 597 in q.js: inspect replaced with inspected["state"]
Mutant 598 in q.js: inspected.state === "rejected" replaced with inspected.state === "rejected" && inspected.reason !== void 0
Mutant 599 in q.js: inspected.state === "rejected" replaced with inspected.state === "rejected" && inspected.reason.code === 404
Mutant 600 in q.js: inspected.state === "rejected" replaced with inspected.state === "rejected" && inspected.reason instanceof TypeError
Mutant 601 in q.js: inspect replaced with inspected.value
Mutant 602 in q.js: inspect replaced with inspected.reason
Mutant 603 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 604 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "pending" && inspected.state === "rejected"
Mutant 605 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "settled"
Mutant 606 in q.js: defer replaced with defer.promise
Mutant 607 in q.js: fulfilled replaced with rejected
Mutant 608 in q.js: value replaced with null
Mutant 609 in q.js: value replaced with undefined
Mutant 610 in q.js: reject replaced with resolve
Mutant 611 in q.js: exception replaced with undefined
Mutant 612 in q.js: exception replaced with null
Mutant 613 in q.js: exception replaced with 0
Mutant 614 in q.js: typeof rejected === "function" replaced with typeof rejected !== "function"
Mutant 615 in q.js: typeof rejected === "function" replaced with rejected === void 0
Mutant 616 in q.js: typeof rejected === "function" replaced with typeof fulfilled === "function"
Mutant 617 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, null)
Mutant 618 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, Q.Promise)
Mutant 619 in q.js: exception replaced with exception.message
Mutant 620 in q.js: exception replaced with new Error(exception)
Mutant 621 in q.js: exception replaced with console.log(exception)
Mutant 622 in q.js: self replaced with self.parent
Mutant 623 in q.js: self replaced with this
Mutant 624 in q.js: self replaced with null
Mutant 625 in q.js: rejected replaced with resolve
Mutant 626 in q.js: exception replaced with null
Mutant 627 in q.js: exception replaced with {}
Mutant 628 in q.js: exception replaced with function () {
  return null;
}
Mutant 629 in q.js: newException replaced with null
Mutant 630 in q.js: newException replaced with undefined
Mutant 631 in q.js: newException replaced with "some string"
Mutant 632 in q.js: exception replaced with null
Mutant 633 in q.js: exception replaced with undefined
Mutant 634 in q.js: exception replaced with 0
Mutant 635 in q.js: value replaced with newValue
Mutant 636 in q.js: value replaced with null
Mutant 637 in q.js: value replaced with undefined
Mutant 638 in q.js: done replaced with done == true
Mutant 639 in q.js: done replaced with done != true
Mutant 640 in q.js: done replaced with !done
Mutant 641 in q.js: deferred.resolve replaced with deferred.reject
Mutant 642 in q.js: deferred.resolve replaced with deferred.notify
Mutant 643 in q.js: deferred.resolve replaced with deferred.never
Mutant 644 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 645 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 646 in q.js: _fulfilled(value) replaced with _fulfilled(promise)
Mutant 647 in q.js: _fulfilled replaced with null
Mutant 648 in q.js: value replaced with null
Mutant 649 in q.js: value replaced with undefined
Mutant 650 in q.js: done replaced with done()
Mutant 651 in q.js: done replaced with !done
Mutant 652 in q.js: done replaced with void 0
Mutant 653 in q.js: deferred.resolve replaced with deferred.reject
Mutant 654 in q.js: deferred.resolve replaced with deferred.notify
Mutant 655 in q.js: deferred.resolve replaced with void 0
Mutant 656 in q.js: _rejected(exception) replaced with _fulfilled(exception)
Mutant 657 in q.js: _rejected(exception) replaced with reject(exception)
Mutant 658 in q.js: exception replaced with reject("newException")
Mutant 659 in q.js: exception replaced with reject(new Error("newException"))
Mutant 660 in q.js: exception replaced with reject(new Promise.reject(exception))
Mutant 661 in q.js: value replaced with (value + 1).toString()
Mutant 662 in q.js: value replaced with value * 2 + 1
Mutant 663 in q.js: value replaced with value.toLowerCase()
Mutant 664 in q.js: Q.onerror replaced with Q.reject(e)
Mutant 665 in q.js: Q.onerror replaced with Q.onerror = Q.stacktrace
Mutant 666 in q.js: Q.onerror replaced with Q.onerror = Q.stacktrace.cancel
Mutant 667 in q.js: Q.onerror replaced with Q.onerror = Q.stacktrace.refresh
Mutant 668 in q.js: !threw replaced with threw == false
Mutant 669 in q.js: !threw replaced with threw === null
Mutant 670 in q.js: !threw replaced with threw !== false
Mutant 671 in q.js: deferred.notify replaced with deferred.reject
Mutant 672 in q.js: deferred.notify replaced with deferred.resolve
Mutant 673 in q.js: deferred.notify replaced with promise.reject
Mutant 674 in q.js: promise replaced with promise.inspect()
Mutant 675 in q.js: promise replaced with promise.resolve()
Mutant 676 in q.js: promise replaced with Q(promise)
Mutant 677 in q.js: Q replaced with Q.nearer
Mutant 678 in q.js: Q replaced with Q.when
Mutant 679 in q.js: Q replaced with Q.inspect
Mutant 680 in q.js: callback replaced with Q(null)
Mutant 681 in q.js: callback replaced with Q(undefined)
Mutant 682 in q.js: callback replaced with Q.reject(new Error('different error'))
Mutant 683 in q.js: callback.fcall replaced with this
Mutant 684 in q.js: callback.fcall replaced with callback.reject
Mutant 685 in q.js: callback.fcall replaced with promise.throw
not replacing callback.fcall with this
not replacing callback.fcall with this
not replacing callback.fcall with callback.reject
not replacing callback.fcall with callback.reject
not replacing callback.fcall with promise.throw
not replacing callback.fcall with promise.throw
Mutant 686 in q.js: value replaced with null
Mutant 687 in q.js: value replaced with "hello"
Mutant 688 in q.js: value replaced with value + 1
Mutant 689 in q.js: value replaced with new Q.Promise(() => {
  throw new Error('test');
})
Mutant 690 in q.js: value replaced with Q.Promise.resolve(value * 2)
Mutant 691 in q.js: value replaced with Q.Promise.reject(new Error('test'))
Mutant 692 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed.reverse())
Mutant 693 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed.map(func))
Mutant 694 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed.filter(func))
Mutant 695 in q.js: value replaced with null
Mutant 696 in q.js: value replaced with undefined
Mutant 697 in q.js: value replaced with "foo"
Mutant 698 in q.js: fulfilled replaced with rejected
Mutant 699 in q.js: fulfilled replaced with function () {
  throw new Error('error');
}
Mutant 700 in q.js: fulfilled replaced with undefined
Mutant 701 in q.js: rejected replaced with function (error) {
  throw error;
}
Mutant 702 in q.js: rejected replaced with function (error) {
  return "ERROR";
}
Mutant 703 in q.js: rejected replaced with function (error) {
  return Q.reject(error);
}
Mutant 704 in q.js: progressed replaced with function () {
  return;
}
Mutant 705 in q.js: progressed replaced with function (value) {
  return value;
}
Mutant 706 in q.js: progressed replaced with function () {
  return Q(function () {
    return;
  });
}
Mutant 707 in q.js: promise replaced with undefined
Mutant 708 in q.js: promise replaced with null
Mutant 709 in q.js: promise replaced with new Error()
Mutant 710 in q.js: value replaced with null
Mutant 711 in q.js: value replaced with undefined
Mutant 712 in q.js: value replaced with {}
Mutant 713 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 714 in q.js: function () {
  throw reason;
} replaced with function () {
  return undefined;
}
Mutant 715 in q.js: function () {
  throw reason;
} replaced with function () {
  return null;
}
Mutant 716 in q.js: promise replaced with ''
Mutant 717 in q.js: promise replaced with false
Mutant 718 in q.js: promise replaced with undefined
Mutant 719 in q.js: reason replaced with []
Mutant 720 in q.js: reason replaced with null
Mutant 721 in q.js: reason replaced with Promise.reject(reason)
Mutant 722 in q.js: isPromise(value) replaced with isPromiseAlike(value)
Mutant 723 in q.js: isPromise(value) replaced with isObject(value)
Mutant 724 in q.js: isPromise(value) replaced with typeof value === "Promise"
Mutant 725 in q.js: isPromise replaced with !isFulfilled
Mutant 726 in q.js: isPromise replaced with isRejected
Mutant 727 in q.js: value replaced with "null"
Mutant 728 in q.js: value replaced with NaN
Mutant 729 in q.js: value.inspect replaced with value['inspect']
Mutant 730 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 731 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "pending"
Mutant 732 in q.js: inspected.state === "fulfilled" replaced with inspected.state !== "fulfilled"
Mutant 733 in q.js: isObject replaced with isPrimitive
Mutant 734 in q.js: isObject replaced with isArray
Mutant 735 in q.js: isObject replaced with isFunction
Mutant 736 in q.js: object replaced with object && object.then
Mutant 737 in q.js: object replaced with object instanceof Promise
Mutant 738 in q.js: object replaced with object.then && object.then instanceof Function
Mutant 739 in q.js: isPromise replaced with isPromise || isPromiseAlike
Mutant 740 in q.js: isPromise replaced with isPromise && isFulfilled
Mutant 741 in q.js: isPromise replaced with isPromise && !isRejected
Mutant 742 in q.js: object replaced with object === null
Mutant 743 in q.js: object replaced with object === "string"
Mutant 744 in q.js: object replaced with object === Promise.resolve()
Mutant 745 in q.js: object.inspect replaced with object
Mutant 746 in q.js: object.inspect replaced with object.value
not replacing object.inspect with object
not replacing object.inspect with object.value
Mutant 747 in q.js: this.inspect replaced with this.isRejected
Mutant 748 in q.js: this.inspect replaced with !this.isFulfilled
Mutant 749 in q.js: this.inspect replaced with this.isPending
not replacing this.inspect with this.isRejected
not replacing this.inspect with !this.isFulfilled
not replacing this.inspect with this.isPending
Mutant 750 in q.js: object replaced with object.then()
Mutant 751 in q.js: object replaced with object.isFulfilled()
Mutant 752 in q.js: object replaced with undefined
Mutant 753 in q.js: isPromise replaced with none
Mutant 754 in q.js: isPromise replaced with null
Mutant 755 in q.js: object replaced with object.inspect().state === 'rejected'
Mutant 756 in q.js: object replaced with object.rejected
Mutant 757 in q.js: object replaced with object.fulfilled
Mutant 758 in q.js: this.inspect replaced with rejection.inspect
Mutant 759 in q.js: this.inspect replaced with promise.inspect
not replacing this.inspect with rejection.inspect
not replacing this.inspect with promise.inspect
Mutant 760 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections > 1
Mutant 761 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections >= 1
Mutant 762 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections < 1
Mutant 763 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections == false
Mutant 764 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections != false
Mutant 765 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections != true
Mutant 766 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length, promise)
Mutant 767 in q.js: array_indexOf replaced with !array_indexOf
Mutant 768 in q.js: array_indexOf replaced with array_includes
Mutant 769 in q.js: array_indexOf replaced with array_findIndex
Mutant 770 in q.js: unhandledRejections replaced with unhandledRejections.length
Mutant 771 in q.js: unhandledRejections replaced with reportedUnhandledRejections.length
Mutant 772 in q.js: unhandledRejections replaced with untrackedRejections.length
Mutant 773 in q.js: promise replaced with -promise
Mutant 774 in q.js: promise replaced with null
Mutant 775 in q.js: promise replaced with promise + true
Mutant 776 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("uncaughtException", reason, promise)
Mutant 777 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, reason)
Mutant 778 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, new Error(reason))
Mutant 779 in q.js: "unhandledRejection" replaced with "unhandledRejectionTracker"
Mutant 780 in q.js: "unhandledRejection" replaced with "rejected"
Mutant 781 in q.js: "unhandledRejection" replaced with "error"
Mutant 782 in q.js: reason replaced with reason.stack
Mutant 783 in q.js: reason replaced with reason.message
Mutant 784 in q.js: reason replaced with new Error(reason)
Mutant 785 in q.js: promise replaced with promise.reject("new rejection reason")
Mutant 786 in q.js: promise replaced with promise.resolve("new resolution value")
Mutant 787 in q.js: promise replaced with Q.reject("new rejection reason")
Mutant 788 in q.js: reportedUnhandledRejections.push replaced with unhandledRejections.push
Mutant 789 in q.js: reportedUnhandledRejections.push replaced with untrackRejection
Mutant 790 in q.js: promise replaced with null
Mutant 791 in q.js: promise replaced with undefined
Mutant 792 in q.js: promise replaced with Q.getUnhandledReasons()[0]
Mutant 793 in q.js: promise replaced with untrackRejection()
Mutant 794 in q.js: promise replaced with rejection
Mutant 795 in q.js: promise replaced with null
Mutant 796 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && typeof reason.stack === "undefined"
Mutant 797 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && typeof reason.stack !== "function"
Mutant 798 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack.name === "stack"
Mutant 799 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 800 in q.js: unhandledReasons.push replaced with null
Mutant 801 in q.js: unhandledReasons.push replaced with 0
Mutant 802 in q.js: "(no stack) " + reason replaced with Math.ceil(reason)
Mutant 803 in q.js: "(no stack) " + reason replaced with reason.toFixed(2)
Mutant 804 in q.js: "(no stack) " + reason replaced with 1 + reason
Mutant 805 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== true
Mutant 806 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons)
Mutant 807 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections)
Mutant 808 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.concat(reportedUnhandledRejections))
Mutant 809 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 810 in q.js: unhandledRejections replaced with unhandledPromises
Mutant 811 in q.js: unhandledRejections replaced with rejectionHandlers.length
Mutant 812 in q.js: unhandledRejections replaced with Math.floor(Math.random() * unhandledRejections.length)
Mutant 813 in q.js: at !== -1 replaced with at === -1
Mutant 814 in q.js: at !== -1 replaced with at = -1
Mutant 815 in q.js: at !== -1 replaced with at = 1
Mutant 816 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.length
Mutant 817 in q.js: reportedUnhandledRejections replaced with unhandledRejections.length
Mutant 818 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.slice()
Mutant 819 in q.js: promise replaced with false
Mutant 820 in q.js: promise replaced with typename
Mutant 821 in q.js: promise replaced with "abc"
Mutant 822 in q.js: atReport !== -1 replaced with atReport > -1
Mutant 823 in q.js: atReport !== -1 replaced with atReport >= 0
Mutant 824 in q.js: atReport !== -1 replaced with atReport < reportedUnhandledRejections.length
Mutant 825 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at - 1], promise)
Mutant 826 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at + 1], promise)
Mutant 827 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at] + 1, promise)
Mutant 828 in q.js: "rejectionHandled" replaced with "myRejectionHandled"
Mutant 829 in q.js: "rejectionHandled" replaced with "undefined"
Mutant 830 in q.js: "rejectionHandled" replaced with null
Mutant 831 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 832 in q.js: unhandledReasons[at] replaced with unhandledReasons[at - 1]
Mutant 833 in q.js: unhandledReasons[at] replaced with unhandledReasons.shift()
Mutant 834 in q.js: promise replaced with unhandledRejections[0]
Mutant 835 in q.js: promise replaced with reportedUnhandledRejections[0]
Mutant 836 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport - 1)
Mutant 837 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(reportedUnhandledRejections.length - 1)
Mutant 838 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport < reportedUnhandledRejections.length - 1)
Mutant 839 in q.js: atReport replaced with reportedUnhandledRejections.length - 1
Mutant 840 in q.js: atReport replaced with reportedUnhandledRejections[0]
Mutant 841 in q.js: atReport replaced with reportedUnhandledRejections[atReport - 1]
Mutant 842 in q.js: 1 replaced with 0
Mutant 843 in q.js: 1 replaced with 1000
Mutant 844 in q.js: 1 replaced with -1
Mutant 845 in q.js: unhandledRejections.splice replaced with unhandledRejections.slice
Mutant 846 in q.js: at replaced with at - 1
Mutant 847 in q.js: at replaced with at + 1
Mutant 848 in q.js: at replaced with at | 1
Mutant 849 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 0)
Mutant 850 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, -1)
Mutant 851 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, unhandledRejections.length - 2)
Mutant 852 in q.js: unhandledReasons.splice replaced with unhandledReasons = []
Mutant 853 in q.js: 1 replaced with -1
Mutant 854 in q.js: 1 replaced with 100
Mutant 855 in q.js: 1 replaced with NaN
Mutant 856 in q.js: resetUnhandledRejections replaced with unhandledRejections = []
Mutant 857 in q.js: resetUnhandledRejections replaced with unhandledReasons.length = 0
Mutant 858 in q.js: resetUnhandledRejections replaced with reportedUnhandledRejections = []
Mutant 859 in q.js: this replaced with null
Mutant 860 in q.js: this replaced with true
Mutant 861 in q.js: this replaced with Promise.resolve()
Mutant 862 in q.js: rejected replaced with undefined
Mutant 863 in q.js: rejected replaced with null
Mutant 864 in q.js: reason replaced with undefined
Mutant 865 in q.js: reason replaced with null
Mutant 866 in q.js: reason replaced with error
Mutant 867 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection)
Mutant 868 in q.js: trackRejection(rejection, reason) replaced with trackRejection(reason)
Mutant 869 in q.js: trackRejection(rejection, reason) replaced with trackRejection(null)
Mutant 870 in q.js: trackRejection replaced with untrackRejection
Mutant 871 in q.js: trackRejection replaced with trackUnhandledRejection
Mutant 872 in q.js: trackRejection replaced with ReportUnhandledRejection
Mutant 873 in q.js: rejection replaced with rejected
Mutant 874 in q.js: rejection replaced with Promise.reject(reason)
Mutant 875 in q.js: rejection replaced with new Promise(() => {
  throw reason;
})
Mutant 876 in q.js: reason replaced with null
Mutant 877 in q.js: reason replaced with undefined
Mutant 878 in q.js: reason replaced with 42
Mutant 879 in q.js: name === null || name === void 0 replaced with name == null
Mutant 880 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 881 in q.js: name === null || name === void 0 replaced with !name
Mutant 882 in q.js: value.apply replaced with console.log
Mutant 883 in q.js: value.apply replaced with null
Mutant 884 in q.js: value.apply replaced with undefined
Mutant 885 in q.js: void 0 replaced with null
Mutant 886 in q.js: void 0 replaced with []
Mutant 887 in q.js: void 0 replaced with {}
Mutant 888 in q.js: args replaced with 1 + args
Mutant 889 in q.js: args replaced with "abc"
Mutant 890 in q.js: args replaced with []
Mutant 891 in q.js: value[name].apply(value, args) replaced with value[name].apply(null)
Mutant 892 in q.js: value[name].apply(value, args) replaced with value[name].apply(undefined)
Mutant 893 in q.js: value[name].apply(value, args) replaced with value[name].apply("test")
Mutant 894 in q.js: value replaced with undefined
Mutant 895 in q.js: value replaced with null
Mutant 896 in q.js: value replaced with this
Mutant 897 in q.js: args replaced with []
Mutant 898 in q.js: args replaced with null
Mutant 899 in q.js: args replaced with {
  args
}
Mutant 900 in q.js: value.apply(thisp, args) replaced with value.apply(null)
Mutant 901 in q.js: value.apply(thisp, args) replaced with value.apply(Math.PI)
Mutant 902 in q.js: value.apply replaced with value.call
Mutant 903 in q.js: value.apply replaced with value.bind
Mutant 904 in q.js: args replaced with promise
Mutant 905 in q.js: args replaced with Q(args)
Mutant 906 in q.js: args replaced with Object.keys(arguments)
Mutant 907 in q.js: value replaced with undefined
Mutant 908 in q.js: value replaced with null
Mutant 909 in q.js: value replaced with []
Mutant 910 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.reject())
Mutant 911 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.notify(reason))
Mutant 912 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(random.choose([deferred.resolve, deferred.reject, deferred.notify])())
Mutant 913 in q.js: deferred.resolve replaced with deferred.reject
Mutant 914 in q.js: deferred.resolve replaced with null
Mutant 915 in q.js: deferred.resolve replaced with undefined
Mutant 916 in q.js: deferred.reject replaced with reject
Mutant 917 in q.js: deferred.reject replaced with deferred.resolve
Mutant 918 in q.js: deferred.reject replaced with Q.reject
Mutant 919 in q.js: deferred.notify replaced with undefined
Mutant 920 in q.js: deferred.notify replaced with "deferred.notifyError"
Mutant 921 in q.js: deferred.notify replaced with null
Mutant 922 in q.js: deferred.reject replaced with deferred.resolve
Mutant 923 in q.js: deferred.reject replaced with reject
Mutant 924 in q.js: dispatch replaced with this.field
Mutant 925 in q.js: dispatch replaced with this.field = value
Mutant 926 in q.js: object replaced with null
Mutant 927 in q.js: object replaced with undefined
Mutant 928 in q.js: object replaced with "object"
Mutant 929 in q.js: op replaced with op === null
Mutant 930 in q.js: op replaced with op === undefined
Mutant 931 in q.js: op replaced with op != null && op != void 0
Mutant 932 in q.js: args replaced with args[0]
Mutant 933 in q.js: args replaced with args[len(args) - 1]
Mutant 934 in q.js: args replaced with args[len(args) - 1][0]
Mutant 935 in q.js: Q replaced with 5
Mutant 936 in q.js: Q replaced with undefined
Mutant 937 in q.js: Q replaced with null
Mutant 938 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 939 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(null)
Mutant 940 in q.js: value replaced with undefined
Mutant 941 in q.js: value replaced with []
Mutant 942 in q.js: fulfilled replaced with apply
Mutant 943 in q.js: fulfilled replaced with call
Mutant 944 in q.js: fulfilled replaced with run
Mutant 945 in q.js: this.all replaced with this.then
Mutant 946 in q.js: this.all replaced with this.race
Mutant 947 in q.js: this.all replaced with this.any
not replacing this.all with this.then
not replacing this.all with this.then
not replacing this.all with this.race
not replacing this.all with this.race
not replacing this.all with this.any
not replacing this.all with this.any
Mutant 948 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply([array.length])
Mutant 949 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply([array[0]])
Mutant 950 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply([this.length])
Mutant 951 in q.js: fulfilled.apply replaced with rejected.apply
Mutant 952 in q.js: fulfilled.apply replaced with fulfilled.bind
Mutant 953 in q.js: fulfilled.apply replaced with undefined
Mutant 954 in q.js: void 0 replaced with this
Mutant 955 in q.js: void 0 replaced with null
Mutant 956 in q.js: void 0 replaced with 42
Mutant 957 in q.js: array replaced with value
Mutant 958 in q.js: array replaced with args
Mutant 959 in q.js: array replaced with null
Mutant 960 in q.js: typeof StopIteration === "undefined" replaced with null === StopIteration
Mutant 961 in q.js: typeof StopIteration === "undefined" replaced with undefined === StopIteration
Mutant 962 in q.js: typeof StopIteration === "undefined" replaced with isStopIteration !== StopIteration
Mutant 963 in q.js: generator[verb] replaced with generator[verb + 1]
Mutant 964 in q.js: generator[verb] replaced with null
Mutant 965 in q.js: arg replaced with arg + 1
Mutant 966 in q.js: arg replaced with arg * 2
Mutant 967 in q.js: arg replaced with arg - 10
Mutant 968 in q.js: reject replaced with Q.reject
Mutant 969 in q.js: exception replaced with "ERROR"
Mutant 970 in q.js: exception replaced with null
Mutant 971 in q.js: exception replaced with undefined
Mutant 972 in q.js: result.done replaced with !result.done
Mutant 973 in q.js: result.done replaced with result.value === undefined
Mutant 974 in q.js: result.done replaced with result.value === 'rejected'
Mutant 975 in q.js: when(result.value, callback, errback) replaced with when(result.value)
Mutant 976 in q.js: when(result.value, callback, errback) replaced with when(result.errback)
Mutant 977 in q.js: when(result.value, callback, errback) replaced with when(endl)
Mutant 978 in q.js: result.value replaced with result.err
Mutant 979 in q.js: result.value replaced with new Error("test")
Mutant 980 in q.js: callback replaced with null
Mutant 981 in q.js: callback replaced with undefined
Mutant 982 in q.js: callback replaced with Promise.resolve(result.value)
Mutant 983 in q.js: errback replaced with errback.dispatch
Mutant 984 in q.js: errback replaced with Send(object, op, args)
Mutant 985 in q.js: errback replaced with Promise.resolve(object).then(op, args)
Mutant 986 in q.js: arg replaced with arg.value
Mutant 987 in q.js: arg replaced with arg[0]
Mutant 988 in q.js: arg replaced with arg + 1
Mutant 989 in q.js: isStopIteration(exception) replaced with isNotIteration(exception)
Mutant 990 in q.js: isStopIteration(exception) replaced with exception.name !== "StopIteration"
Mutant 991 in q.js: isStopIteration(exception) replaced with !isIteration(exception)
Mutant 992 in q.js: isStopIteration replaced with isStopIteration + 1
Mutant 993 in q.js: isStopIteration replaced with isStopIteration || true
Mutant 994 in q.js: isStopIteration replaced with isStopIteration && false
Mutant 995 in q.js: Q replaced with undefined
Mutant 996 in q.js: exception.value replaced with exception
Mutant 997 in q.js: exception.value replaced with true
Mutant 998 in q.js: exception.value replaced with null
Mutant 999 in q.js: when(result, callback, errback) replaced with when(result, undefined, errback)
Mutant 1000 in q.js: when(result, callback, errback) replaced with when(result, null, errback)
Mutant 1001 in q.js: when(result, callback, errback) replaced with when(result, function () {}, errback)
Mutant 1002 in q.js: when replaced with result
Mutant 1003 in q.js: result replaced with result[0]
Mutant 1004 in q.js: result replaced with result + 1
Mutant 1005 in q.js: result replaced with result.slice(1)
Mutant 1006 in q.js: callback replaced with Q.reject
Mutant 1007 in q.js: callback replaced with Q.defer().reject
Mutant 1008 in q.js: callback replaced with Q.failed
Mutant 1009 in q.js: errback replaced with undefined
Mutant 1010 in q.js: errback replaced with null
Mutant 1011 in q.js: errback replaced with reject
Mutant 1012 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1013 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(0)
Mutant 1014 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply({})
Mutant 1015 in q.js: this replaced with null
Mutant 1016 in q.js: this replaced with 1
Mutant 1017 in q.js: this replaced with {}
Mutant 1018 in q.js: arguments replaced with arguments[0]
Mutant 1019 in q.js: arguments replaced with this
Mutant 1020 in q.js: arguments replaced with null
Mutant 1021 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind("next", callback, errback))
Mutant 1022 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind("throw", callback, Q.return))
Mutant 1023 in q.js: continuer replaced with continuex
Mutant 1024 in q.js: continuer replaced with breakx
Mutant 1025 in q.js: "next" replaced with "nextTick"
Mutant 1026 in q.js: "next" replaced with "prev"
Mutant 1027 in q.js: "next" replaced with "all"
Mutant 1028 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuation))
Mutant 1029 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(Q.sync(arg).throw)
Mutant 1030 in q.js: continuer replaced with error
Mutant 1031 in q.js: continuer replaced with "error"
Mutant 1032 in q.js: continuer replaced with () => {
  throw new Error();
}
Mutant 1033 in q.js: "throw" replaced with "error"
Mutant 1034 in q.js: "throw" replaced with "console.log"
Mutant 1035 in q.js: "throw" replaced with "Return"
Mutant 1036 in q.js: callback replaced with errback
Mutant 1037 in q.js: callback replaced with reject
Mutant 1038 in q.js: callback replaced with deferred.resolve
Mutant 1039 in q.js: Q.async replaced with Q.Australian
Mutant 1040 in q.js: Q.async replaced with Q.Canadian
Mutant 1041 in q.js: Q.async replaced with Q.Discover
not replacing Q.async with Q.Australian
not replacing Q.async with Q.Canadian
not replacing Q.async with Q.Discover
Mutant 1042 in q.js: makeGenerator replaced with Math.random()
Mutant 1043 in q.js: makeGenerator replaced with Math.PI
Mutant 1044 in q.js: makeGenerator replaced with undefined
Mutant 1045 in q.js: all replaced with any
Mutant 1046 in q.js: all replaced with some
Mutant 1047 in q.js: all replaced with none
Mutant 1048 in q.js: callback.apply(self, args) replaced with callback.apply(undefined)
Mutant 1049 in q.js: callback.apply(self, args) replaced with callback.apply(null)
Mutant 1050 in q.js: callback.apply(self, args) replaced with callback.apply({})
Mutant 1051 in q.js: callback.apply replaced with result[verb].apply
Mutant 1052 in q.js: callback.apply replaced with generator[verb].apply
Mutant 1053 in q.js: callback.apply replaced with makeGenerator[verb].apply
Mutant 1054 in q.js: self replaced with 1
Mutant 1055 in q.js: self replaced with null
Mutant 1056 in q.js: self replaced with "string"
Mutant 1057 in q.js: args replaced with args.shift()
Mutant 1058 in q.js: args replaced with args.pop()
Mutant 1059 in q.js: args replaced with undefined
Mutant 1060 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op + args)
Mutant 1061 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch("op", [args])
Mutant 1062 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(null, [op, args])
Mutant 1063 in q.js: Q(object).dispatch replaced with object.dispatch
Mutant 1064 in q.js: Q(object).dispatch replaced with object[dispatch]
Mutant 1065 in q.js: Q replaced with undefined
Mutant 1066 in q.js: Q replaced with this.resolve
Mutant 1067 in q.js: object replaced with undefined
Mutant 1068 in q.js: object replaced with false
Mutant 1069 in q.js: op replaced with op + "imagineASuffix"
Mutant 1070 in q.js: op replaced with op.toUpperCase()
Mutant 1071 in q.js: op replaced with 42
Mutant 1072 in q.js: args replaced with undefined
Mutant 1073 in q.js: args replaced with null
Mutant 1074 in q.js: args replaced with function () {
  return "I'm a very confused placeholder";
}
Mutant 1075 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1076 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.someOtherMethod, op, args)
Mutant 1077 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(someOtherDeferred.resolve, op, args)
Mutant 1078 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1079 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1080 in q.js: deferred.resolve replaced with this.deferred.resolve
Mutant 1081 in q.js: op replaced with op + 1
Mutant 1082 in q.js: op replaced with op * 2
Mutant 1083 in q.js: op replaced with op - 1
Mutant 1084 in q.js: args replaced with null
Mutant 1085 in q.js: args replaced with "args"
Mutant 1086 in q.js: args replaced with 5
Mutant 1087 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key])
Mutant 1088 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("apply", [key, []])
Mutant 1089 in q.js: Q replaced with null
Mutant 1090 in q.js: Q replaced with undefined
Mutant 1091 in q.js: Q replaced with 5
Mutant 1092 in q.js: object replaced with void 0
Mutant 1093 in q.js: object replaced with object.value
Mutant 1094 in q.js: object replaced with object[0]
Mutant 1095 in q.js: "get" replaced with "set"
Mutant 1096 in q.js: "get" replaced with "apply"
Mutant 1097 in q.js: "get" replaced with "throw"
Mutant 1098 in q.js: [key] replaced with "myKey"
Mutant 1099 in q.js: [key] replaced with key.substring(1)
Mutant 1100 in q.js: [key] replaced with undefined
Mutant 1101 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set")
Mutant 1102 in q.js: this.dispatch("get", [key]) replaced with this.dispatch([])
Mutant 1103 in q.js: this.dispatch("get", [key]) replaced with this.dispatch(Q)
Mutant 1104 in q.js: "get" replaced with "set"
Mutant 1105 in q.js: "get" replaced with "post"
Mutant 1106 in q.js: [key] replaced with [key, value]
Mutant 1107 in q.js: [key] replaced with ["key"]
Mutant 1108 in q.js: [key] replaced with {
  key: value
}
Mutant 1109 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key + value])
Mutant 1110 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, value * 2])
Mutant 1111 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, Q(value)])
Mutant 1112 in q.js: Q replaced with 1 + 1
Mutant 1113 in q.js: object replaced with 0
Mutant 1114 in q.js: object replaced with undefined
Mutant 1115 in q.js: object replaced with null
Mutant 1116 in q.js: "set" replaced with "add"
Mutant 1117 in q.js: "set" replaced with "abc"
Mutant 1118 in q.js: "set" replaced with null
Mutant 1119 in q.js: [key, value] replaced with [value, key]
Mutant 1120 in q.js: [key, value] replaced with [key, value, null]
Mutant 1121 in q.js: [key, value] replaced with [key, value + 1]
Mutant 1122 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value + 1])
Mutant 1123 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("get", [key])
Mutant 1124 in q.js: this.dispatch replaced with Q.dispatch
Mutant 1125 in q.js: "set" replaced with "replace"
Mutant 1126 in q.js: "set" replaced with "newSet"
Mutant 1127 in q.js: [key, value] replaced with [value, key]
Mutant 1128 in q.js: [key, value] replaced with [null, key]
Mutant 1129 in q.js: [key, value] replaced with [value, "key"]
Mutant 1130 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("void", [key])
Mutant 1131 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("null", [key])
Mutant 1132 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("typeof", [key])
Mutant 1133 in q.js: Q replaced with undefined
Mutant 1134 in q.js: Q replaced with "Hello, world!"
Mutant 1135 in q.js: object replaced with ""
Mutant 1136 in q.js: object replaced with 42
Mutant 1137 in q.js: object replaced with undefined
Mutant 1138 in q.js: "delete" replaced with "+"
Mutant 1139 in q.js: "delete" replaced with "_"
Mutant 1140 in q.js: [key] replaced with [key + 1]
Mutant 1141 in q.js: [key] replaced with [key - 1]
Mutant 1142 in q.js: [key] replaced with ["key"]
Mutant 1143 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, value])
Mutant 1144 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("get", [value])
Mutant 1145 in q.js: "delete" replaced with "set"
Mutant 1146 in q.js: "delete" replaced with undefined
Mutant 1147 in q.js: [key] replaced with [key + '_buggy']
Mutant 1148 in q.js: [key] replaced with [key - 1]
Mutant 1149 in q.js: object replaced with undefined
Mutant 1150 in q.js: object replaced with null
Mutant 1151 in q.js: object replaced with {}
Mutant 1152 in q.js: "post" replaced with "add"
Mutant 1153 in q.js: "post" replaced with "multiply"
Mutant 1154 in q.js: "post" replaced with "get"
Mutant 1155 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("put", [name, args])
Mutant 1156 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [args, name])
Mutant 1157 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [args])
Mutant 1158 in q.js: [name, args] replaced with [name, args.concat("Mutated")]
Mutant 1159 in q.js: [name, args] replaced with ["Mutated name", args]
Mutant 1160 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [person, array_slice(names, 2)])
Mutant 1161 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("get", [key, value])
Mutant 1162 in q.js: Q(object).dispatch replaced with Q.dispatch
Mutant 1163 in q.js: Q(object).dispatch replaced with Q.prototype.dispatch
Mutant 1164 in q.js: object replaced with Q
Mutant 1165 in q.js: object replaced with dispatch
Mutant 1166 in q.js: object replaced with Q.send
Mutant 1167 in q.js: "post" replaced with "put"
Mutant 1168 in q.js: "post" replaced with "get"
Mutant 1169 in q.js: "post" replaced with "set"
Mutant 1170 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1171 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 3)]
Mutant 1172 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 4)]
Mutant 1173 in q.js: array_slice(arguments, 2) replaced with array_slice(...arguments, 1)
Mutant 1174 in q.js: array_slice(arguments, 2) replaced with array_slice(...arguments, 3)
Mutant 1175 in q.js: array_slice(arguments, 2) replaced with array_slice(...arguments, arguments.length - 1)
Mutant 1176 in q.js: array_slice replaced with "DUMMY"
Mutant 1177 in q.js: array_slice replaced with "DUMMY".length
Mutant 1178 in q.js: array_slice replaced with 0
Mutant 1179 in q.js: arguments replaced with arguments.length
Mutant 1180 in q.js: arguments replaced with undefined
Mutant 1181 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("apply", [name, args])
Mutant 1182 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("call", [name, args])
Mutant 1183 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 0)])
Mutant 1184 in q.js: "post" replaced with "get"
Mutant 1185 in q.js: "post" replaced with "send"
Mutant 1186 in q.js: "post" replaced with "squirrel"
Mutant 1187 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(promises, 1)]
Mutant 1188 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1189 in q.js: [name, array_slice(arguments, 1)] replaced with [name, promises[1]]
Mutant 1190 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1191 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 3))
Mutant 1192 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 4))
Mutant 1193 in q.js: array_slice replaced with null
Mutant 1194 in q.js: arguments replaced with 1 + 1
Mutant 1195 in q.js: arguments replaced with x => x
Mutant 1196 in q.js: 1 replaced with 1.0
Mutant 1197 in q.js: 1 replaced with true
Mutant 1198 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [args, void 0])
Mutant 1199 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [void 0, args])
Mutant 1200 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [args, void 0])
Mutant 1201 in q.js: Q replaced with q
Mutant 1202 in q.js: Q replaced with this
Mutant 1203 in q.js: "apply" replaced with "call"
Mutant 1204 in q.js: "apply" replaced with "undefined"
Mutant 1205 in q.js: "apply" replaced with "null"
Mutant 1206 in q.js: [void 0, args] replaced with [void 1, args]
Mutant 1207 in q.js: [void 0, args] replaced with [void 0, "args"]
Mutant 1208 in q.js: [void 0, args] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1209 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [this, args])
Mutant 1210 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [globalThis, args])
Mutant 1211 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("call", [object, args])
Mutant 1212 in q.js: this.dispatch replaced with this.dispatch1
Mutant 1213 in q.js: this.dispatch replaced with this.dispatch === isPromise
Mutant 1214 in q.js: "apply" replaced with "call"
Mutant 1215 in q.js: "apply" replaced with "bind"
Mutant 1216 in q.js: "apply" replaced with "map"
Mutant 1217 in q.js: [void 0, args] replaced with [array_slice(arguments)]
Mutant 1218 in q.js: [void 0, args] replaced with [void 0, arguments]
Mutant 1219 in q.js: [void 0, args] replaced with [void 0, args.concat(arguments)]
Mutant 1220 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [this, array_slice(arguments, 1)])
Mutant 1221 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("call", [void 0, array_slice(arguments, 1)])
Mutant 1222 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1223 in q.js: Q replaced with promise
Mutant 1224 in q.js: Q replaced with name
Mutant 1225 in q.js: Q replaced with 5
Mutant 1226 in q.js: object replaced with undefined
Mutant 1227 in q.js: object replaced with null
Mutant 1228 in q.js: object replaced with {}
Mutant 1229 in q.js: object replaced with 42
Mutant 1230 in q.js: "apply" replaced with "call"
Mutant 1231 in q.js: "apply" replaced with "bind"
Mutant 1232 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, arguments]
Mutant 1233 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, "hello world"]
Mutant 1234 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, [3, 2, 1]]
Mutant 1235 in q.js: array_slice(arguments, 1) replaced with array_slice(args.slice(1))
Mutant 1236 in q.js: array_slice(arguments, 1) replaced with array_slice(this.args)
Mutant 1237 in q.js: array_slice replaced with []
Mutant 1238 in q.js: array_slice replaced with null
Mutant 1239 in q.js: arguments replaced with args
Mutant 1240 in q.js: arguments replaced with [args]
Mutant 1241 in q.js: arguments replaced with Promise.resolve(args)
Mutant 1242 in q.js: 1 replaced with promises.length
Mutant 1243 in q.js: 1 replaced with arguments.length - 1
Mutant 1244 in q.js: 1 replaced with arguments.length + 1
Mutant 1245 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [undefined, array_slice(arguments)])
Mutant 1246 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("call", [void 0, array_slice(arguments)])
Mutant 1247 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1248 in q.js: this.dispatch replaced with this.reject
Mutant 1249 in q.js: this.dispatch replaced with this.Promise.dispatch
Mutant 1250 in q.js: "apply" replaced with "call"
Mutant 1251 in q.js: "apply" replaced with "bind"
Mutant 1252 in q.js: "apply" replaced with "apply2"
Mutant 1253 in q.js: [void 0, array_slice(arguments)] replaced with [void 1, array_slice(arguments)]
Mutant 1254 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1255 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 0, -1)]
Mutant 1256 in q.js: array_slice replaced with array_splice
Mutant 1257 in q.js: array_slice replaced with array.length
Mutant 1258 in q.js: arguments replaced with args
Mutant 1259 in q.js: arguments replaced with arguments[0]
Mutant 1260 in q.js: arguments replaced with promise.args
Mutant 1261 in q.js: Q replaced with undefined
Mutant 1262 in q.js: Q replaced with null
Mutant 1263 in q.js: Q replaced with 0
Mutant 1264 in q.js: object replaced with null
Mutant 1265 in q.js: object replaced with {}
Mutant 1266 in q.js: object replaced with Q.defer()
Mutant 1267 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1268 in q.js: array_slice(arguments, 1) replaced with array_slice(void 0, args)
Mutant 1269 in q.js: array_slice(arguments, 1) replaced with array_slice(args, 1)
Mutant 1270 in q.js: array_slice replaced with array_reverse
Mutant 1271 in q.js: array_slice replaced with array_length
Mutant 1272 in q.js: array_slice replaced with array_sort
Mutant 1273 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1274 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1275 in q.js: arguments replaced with array_filter(arguments, function (arg) {
  return arg !== 1;
})
Mutant 1276 in q.js: 1 replaced with 1 + 1
Mutant 1277 in q.js: 1 replaced with 1 / 0
Mutant 1278 in q.js: args.concat replaced with void 0
Mutant 1279 in q.js: args.concat replaced with null
Mutant 1280 in q.js: args.concat replaced with undefined
Mutant 1281 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1282 in q.js: array_slice(arguments) replaced with function () {
  return arguments;
}()
Mutant 1283 in q.js: array_slice(arguments) replaced with function () {
  return arguments();
}()
Mutant 1284 in q.js: array_slice replaced with array_reverse
Mutant 1285 in q.js: array_slice replaced with array_sort
Mutant 1286 in q.js: array_slice replaced with []
Mutant 1287 in q.js: arguments replaced with "foo"
Mutant 1288 in q.js: arguments replaced with []
Mutant 1289 in q.js: arguments replaced with 0
Mutant 1290 in q.js: array_slice replaced with array_reverse
Mutant 1291 in q.js: array_slice replaced with array.length - 1
Mutant 1292 in q.js: arguments replaced with []
Mutant 1293 in q.js: arguments replaced with this
Mutant 1294 in q.js: arguments replaced with null
Mutant 1295 in q.js: args.concat replaced with ["hello", "world"]
Mutant 1296 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1297 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1, 2)
Mutant 1298 in q.js: array_slice replaced with array_keys
Mutant 1299 in q.js: array_slice replaced with array_split
Mutant 1300 in q.js: array_slice replaced with array_push
Mutant 1301 in q.js: arguments replaced with array_slice(array_slice(arguments, 1), 1)
Mutant 1302 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1303 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [1])
Mutant 1304 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [name])
Mutant 1305 in q.js: Q replaced with Q.reject
Mutant 1306 in q.js: Q replaced with Q.defer
Mutant 1307 in q.js: Q replaced with Q.negate
Mutant 1308 in q.js: object replaced with object.key
Mutant 1309 in q.js: object replaced with object[0]
Mutant 1310 in q.js: object replaced with object.property
Mutant 1311 in q.js: "keys" replaced with "valueOf"
Mutant 1312 in q.js: "keys" replaced with "hasOwnProperty"
Mutant 1313 in q.js: "keys" replaced with "prototype"
Mutant 1314 in q.js: [] replaced with [1]
Mutant 1315 in q.js: [] replaced with {}
Mutant 1316 in q.js: [] replaced with null
Mutant 1317 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1318 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [1])
Mutant 1319 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", null)
Mutant 1320 in q.js: this.dispatch replaced with method = deferred.resolve
Mutant 1321 in q.js: this.dispatch replaced with method = Q.when
Mutant 1322 in q.js: this.dispatch replaced with method = Q.apply
Mutant 1323 in q.js: "keys" replaced with "values"
Mutant 1324 in q.js: "keys" replaced with "length"
Mutant 1325 in q.js: "keys" replaced with "toString"
Mutant 1326 in q.js: [] replaced with void 0
Mutant 1327 in q.js: [] replaced with null
Mutant 1328 in q.js: [] replaced with undefined || []
Mutant 1329 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with isPromise(promise) && (typeof snapshot === "undefined" || snapshot.state === "fulfilled")
Mutant 1330 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with !isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled"
Mutant 1331 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with isPromise(promise) && (snapshot = promise.inspect()).state === "rejected"
Mutant 1332 in q.js: promise replaced with promise + 1
Mutant 1333 in q.js: promise replaced with promise - 1
Mutant 1334 in q.js: promise replaced with promise.then(function () {
  return 1;
})
Mutant 1335 in q.js: promise.inspect replaced with promise.state
Mutant 1336 in q.js: promise.inspect replaced with promise["state"]
Mutant 1337 in q.js: promise.inspect replaced with promise.inspect << 1
Mutant 1338 in q.js: --pendingCount === 0 replaced with --pendingCount < 0
Mutant 1339 in q.js: --pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1340 in q.js: --pendingCount === 0 replaced with !promises.length
Mutant 1341 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1342 in q.js: deferred.resolve replaced with undefined
Mutant 1343 in q.js: deferred.resolve replaced with null
Mutant 1344 in q.js: promises replaced with []
Mutant 1345 in q.js: promises replaced with [promises[0], promises[1]]
Mutant 1346 in q.js: deferred.notify replaced with Q.reject
Mutant 1347 in q.js: deferred.notify replaced with deferred.reject
Mutant 1348 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index + 1,
  value: progress
}
Mutant 1349 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index - 1,
  value: progress
}
Mutant 1350 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: "foo",
  value: progress
}
Mutant 1351 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1352 in q.js: pendingCount === 0 replaced with pendingCount <= 0
Mutant 1353 in q.js: pendingCount === 0 replaced with promises.length === 0
Mutant 1354 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1355 in q.js: all replaced with any
Mutant 1356 in q.js: all replaced with none
Mutant 1357 in q.js: all replaced with race
Mutant 1358 in q.js: this replaced with void 0
Mutant 1359 in q.js: this replaced with null
Mutant 1360 in q.js: promises.length === 0 replaced with promises.length > 0
Mutant 1361 in q.js: promises.length === 0 replaced with !promises.includes(null)
Mutant 1362 in q.js: Q.resolve replaced with Q.reject
Mutant 1363 in q.js: Q.resolve replaced with Promise.reject
Mutant 1364 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected, onProgress))
Mutant 1365 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onRejected, onFulfilled, onProgress))
Mutant 1366 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onProgress, onFulfilled, onRejected))
Mutant 1367 in q.js: onRejected replaced with onFulfilled
Mutant 1368 in q.js: onRejected replaced with _ => onFulfilled()
Mutant 1369 in q.js: onRejected replaced with null
Mutant 1370 in q.js: onProgress replaced with onFulfilled
Mutant 1371 in q.js: onProgress replaced with onRejected
Mutant 1372 in q.js: onProgress replaced with onAny
Mutant 1373 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1374 in q.js: deferred.resolve replaced with undefined
Mutant 1375 in q.js: deferred.resolve replaced with promise.reject
Mutant 1376 in q.js: result replaced with result + 1
Mutant 1377 in q.js: result replaced with result * 2
Mutant 1378 in q.js: result replaced with result.length
Mutant 1379 in q.js: deferred.reject replaced with deferred.notify
Mutant 1380 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1381 in q.js: deferred.reject replaced with deferred.always
Mutant 1382 in q.js: rejection replaced with {
  message: "Q can't get fulfillment value from any promise, all promises were rejected. Last error message: " + err.message
}
Mutant 1383 in q.js: rejection replaced with {
  message: "Q can't get fulfillment value from any promise, all promises were rejected. Last error message: " + err
}
Mutant 1384 in q.js: rejection replaced with {
  message: "Q can't get fulfillment value from any promise, all promises were rejected. Last error message: none"
}
Mutant 1385 in q.js: this replaced with this.inspect()
Mutant 1386 in q.js: this replaced with void 0
Mutant 1387 in q.js: this replaced with Promise.reject()
Mutant 1388 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate("allRejected")
Mutant 1389 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate("allSettled")
Mutant 1390 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate("settled")
Mutant 1391 in q.js: deprecate replaced with "allResolved"
Mutant 1392 in q.js: deprecate replaced with "getAll"
Mutant 1393 in q.js: deprecate replaced with "allSettled"
Mutant 1394 in q.js: allResolved replaced with function resolve(promise) {
  return promise;
}
Mutant 1395 in q.js: allResolved replaced with function reject(error) {
  return error;
}
Mutant 1396 in q.js: allResolved replaced with function immediate(value) {
  return value;
}
Mutant 1397 in q.js: "allResolved" replaced with "allSettled"
Mutant 1398 in q.js: "allResolved" replaced with "spread"
Mutant 1399 in q.js: "allSettled" replaced with "allFulfilled"
Mutant 1400 in q.js: "allSettled" replaced with "allRejected"
Mutant 1401 in q.js: "allSettled" replaced with "alwaysFulfilled"
Mutant 1402 in q.js: array_map(promises, Q) replaced with array_map(promises.slice(0), Q.reject)
Mutant 1403 in q.js: array_map(promises, Q) replaced with array_map(promises.shift(), Q.defer)
Mutant 1404 in q.js: array_map(promises, Q) replaced with array_map(promises.pop(), Q.delay)
Mutant 1405 in q.js: array_map replaced with array_reduce
Mutant 1406 in q.js: array_map replaced with Q.map
Mutant 1407 in q.js: array_map replaced with promise.inspect
Mutant 1408 in q.js: promises replaced with null
Mutant 1409 in q.js: promises replaced with 0
Mutant 1410 in q.js: promises replaced with undefined
Mutant 1411 in q.js: Q replaced with Q.reject("Testing mutation 1")
Mutant 1412 in q.js: Q replaced with Q.reject("Testing mutation 2")
Mutant 1413 in q.js: Q replaced with undefined
Mutant 1414 in q.js: when(promise, noop, noop) replaced with when(undefined)
Mutant 1415 in q.js: when(promise, noop, noop) replaced with when(null)
Mutant 1416 in q.js: when(promise, noop, noop) replaced with when({})
Mutant 1417 in q.js: when replaced with undefined
Mutant 1418 in q.js: promise replaced with "foo"
Mutant 1419 in q.js: promise replaced with undefined
Mutant 1420 in q.js: noop replaced with Q.resolve()
Mutant 1421 in q.js: noop replaced with Q.reject()
Mutant 1422 in q.js: noop replaced with Q.somethingElse()
Mutant 1423 in q.js: allResolved replaced with anyResolved
Mutant 1424 in q.js: allResolved replaced with allSettled
Mutant 1425 in q.js: allResolved replaced with noneResolved
Mutant 1426 in q.js: this replaced with promises[0]
Mutant 1427 in q.js: this replaced with promises[promises.length - 1]
Mutant 1428 in q.js: this replaced with null
Mutant 1429 in q.js: promises replaced with promises.slice()
Mutant 1430 in q.js: promises replaced with promises.concat()
Mutant 1431 in q.js: promises replaced with promises.filter(() => false)
Mutant 1432 in q.js: Q replaced with Q.when
Mutant 1433 in q.js: Q replaced with Promise.reject
Mutant 1434 in q.js: Q replaced with Q.reject
Mutant 1435 in q.js: promise replaced with null
Mutant 1436 in q.js: promise replaced with undefined
Mutant 1437 in q.js: promise replaced with Math.random()
Mutant 1438 in q.js: promise.inspect replaced with null
Mutant 1439 in q.js: promise.inspect replaced with undefined
Mutant 1440 in q.js: promise.inspect replaced with promise.then
Mutant 1441 in q.js: regardless replaced with null
Mutant 1442 in q.js: regardless replaced with 0
Mutant 1443 in q.js: regardless replaced with undefined
Mutant 1444 in q.js: regardless replaced with promise.state
Mutant 1445 in q.js: regardless replaced with promise.then(function () {
  return "fulfilled";
}, function () {
  return "rejected";
}, function () {
  return "pending";
})
Mutant 1446 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void 0, void 0, rejected)
Mutant 1447 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void 0, rejected, void 0)
Mutant 1448 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void 0, void 0, resolved)
Mutant 1449 in q.js: object replaced with null
Mutant 1450 in q.js: object replaced with undefined
Mutant 1451 in q.js: object replaced with Q.reject(object)
Mutant 1452 in q.js: void 0 replaced with null
Mutant 1453 in q.js: void 0 replaced with undefined
Mutant 1454 in q.js: void 0 replaced with NaN
Mutant 1455 in q.js: rejected replaced with resolved
Mutant 1456 in q.js: this.then(void 0, rejected) replaced with this.then(void 1, rejected)
Mutant 1457 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1458 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, rejected)
Mutant 1459 in q.js: void 0 replaced with null
Mutant 1460 in q.js: void 0 replaced with undefined
Mutant 1461 in q.js: rejected replaced with Q.rejected
Mutant 1462 in q.js: rejected replaced with Promise.rejected
Mutant 1463 in q.js: rejected replaced with deferred.rejected
Mutant 1464 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(null, undefined, progressed)
Mutant 1465 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then("hello", 3, progressed)
Mutant 1466 in q.js: object replaced with blue
Mutant 1467 in q.js: void 0 replaced with "string"
Mutant 1468 in q.js: void 0 replaced with true
Mutant 1469 in q.js: void 0 replaced with false
Mutant 1470 in q.js: void 0 replaced with NaN
Mutant 1471 in q.js: void 0 replaced with null
Mutant 1472 in q.js: void 0 replaced with undefined
Mutant 1473 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1474 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(void 0, void 0, progressed[0])
Mutant 1475 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(void 0, progressed, progressed)
Mutant 1476 in q.js: this.then replaced with this.then.foo
Mutant 1477 in q.js: void 0 replaced with 1
Mutant 1478 in q.js: void 0 replaced with true
Mutant 1479 in q.js: void 0 replaced with promise.then(function () {
  throw new Error("intentional error");
})
Mutant 1480 in q.js: void 0 replaced with promise
Mutant 1481 in q.js: void 0 replaced with null
Mutant 1482 in q.js: void 0 replaced with undefined
Mutant 1483 in q.js: progressed replaced with null
Mutant 1484 in q.js: progressed replaced with undefined
Mutant 1485 in q.js: progressed replaced with function () {}
Mutant 1486 in q.js: Q replaced with ["Q"]
Mutant 1487 in q.js: object replaced with NaN
Mutant 1488 in q.js: object replaced with Promise.resolve(object)
Mutant 1489 in q.js: object replaced with object.then(function () {
  throw Error("This is a bug");
})
Mutant 1490 in q.js: callback replaced with void 0
Mutant 1491 in q.js: callback replaced with when(callback)
Mutant 1492 in q.js: Q replaced with null
Mutant 1493 in q.js: Q replaced with 1
Mutant 1494 in q.js: Q replaced with "Q"
Mutant 1495 in q.js: callback.fcall replaced with callback.call
Mutant 1496 in q.js: callback.fcall replaced with callback.apply
not replacing callback.fcall with callback.call
not replacing callback.fcall with callback.call
not replacing callback.fcall with callback.apply
not replacing callback.fcall with callback.apply
Mutant 1497 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1498 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done([null, fulfilled, rejected])
Mutant 1499 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(Q.allSettled([fulfilled, rejected, progress]))
Mutant 1500 in q.js: Q replaced with this
Mutant 1501 in q.js: Q replaced with undefined
Mutant 1502 in q.js: object replaced with {}
Mutant 1503 in q.js: object replaced with undefined
Mutant 1504 in q.js: fulfilled replaced with rejected
Mutant 1505 in q.js: fulfilled replaced with trace.message
Mutant 1506 in q.js: fulfilled replaced with resolve
Mutant 1507 in q.js: rejected replaced with resolved
Mutant 1508 in q.js: rejected replaced with new Error(reason)
Mutant 1509 in q.js: rejected replaced with deferred.resolve()
Mutant 1510 in q.js: progress replaced with null
Mutant 1511 in q.js: progress replaced with () => {}
Mutant 1512 in q.js: progress replaced with rejected => {}
Mutant 1513 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error)
Mutant 1514 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(promise)
Mutant 1515 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise, null)
Mutant 1516 in q.js: error replaced with 0
Mutant 1517 in q.js: error replaced with null
Mutant 1518 in q.js: error replaced with undefined
Mutant 1519 in q.js: promise replaced with null
Mutant 1520 in q.js: Q.onerror replaced with Q.onerror()
Mutant 1521 in q.js: Q.onerror replaced with undefined
Mutant 1522 in q.js: Q.onerror replaced with null
Mutant 1523 in q.js: this.then replaced with this
Mutant 1524 in q.js: this.then replaced with Q
Mutant 1525 in q.js: fulfilled replaced with rejected
Mutant 1526 in q.js: fulfilled replaced with undefined
Mutant 1527 in q.js: fulfilled replaced with null
Mutant 1528 in q.js: rejected replaced with fulfilled
Mutant 1529 in q.js: rejected replaced with void 0
Mutant 1530 in q.js: rejected replaced with undefined
Mutant 1531 in q.js: progress replaced with function () {}
Mutant 1532 in q.js: progress replaced with Q
Mutant 1533 in q.js: onUnhandledError replaced with onUnhandledError(null)
Mutant 1534 in q.js: onUnhandledError replaced with onUnhandledError.apply(null)
Mutant 1535 in q.js: onUnhandledError replaced with onUnhandledError.bind(null)
Mutant 1536 in q.js: void 0 replaced with null
Mutant 1537 in q.js: void 0 replaced with 0
Mutant 1538 in q.js: onUnhandledError replaced with function () {}
Mutant 1539 in q.js: onUnhandledError replaced with function () {
  throw new Error("Unhandled error");
}
Mutant 1540 in q.js: onUnhandledError replaced with function (error) {
  throw error;
}
Mutant 1541 in q.js: object replaced with 42
Mutant 1542 in q.js: object replaced with "Hello, world!"
Mutant 1543 in q.js: object replaced with false
Mutant 1544 in q.js: ms replaced with "0"
Mutant 1545 in q.js: ms replaced with Infinity
Mutant 1546 in q.js: ms replaced with NaN
Mutant 1547 in q.js: error replaced with promise.reject(error)
Mutant 1548 in q.js: !error || "string" === typeof error replaced with error
Mutant 1549 in q.js: !error || "string" === typeof error replaced with !error || "object" === typeof error
Mutant 1550 in q.js: !error || "string" === typeof error replaced with error || "string" === typeof error
Mutant 1551 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1552 in q.js: deferred.reject replaced with undefined
Mutant 1553 in q.js: error replaced with null
Mutant 1554 in q.js: error replaced with promise
Mutant 1555 in q.js: error replaced with undefined
Mutant 1556 in q.js: clearTimeout replaced with undefined && clearTimeout
Mutant 1557 in q.js: clearTimeout replaced with clearTimeout >> 1
Mutant 1558 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1559 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1560 in q.js: deferred.resolve replaced with void 0
Mutant 1561 in q.js: value replaced with null
Mutant 1562 in q.js: value replaced with undefined
Mutant 1563 in q.js: value replaced with 5
Mutant 1564 in q.js: timeoutId replaced with 0
Mutant 1565 in q.js: timeoutId replaced with null
Mutant 1566 in q.js: timeoutId replaced with undefined
Mutant 1567 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1568 in q.js: deferred.reject replaced with null
Mutant 1569 in q.js: timeout === void 0 replaced with timeout !== void 0
Mutant 1570 in q.js: timeout === void 0 replaced with timeout > 0
Mutant 1571 in q.js: timeout === void 0 replaced with !timeout
Mutant 1572 in q.js: object replaced with undefined
Mutant 1573 in q.js: object replaced with null
Mutant 1574 in q.js: object replaced with void 0
Mutant 1575 in q.js: timeout replaced with '10000'
Mutant 1576 in q.js: timeout replaced with timeout + 1000
Mutant 1577 in q.js: timeout replaced with timeout - 1000
Mutant 1578 in q.js: defer replaced with deferred.reject
Mutant 1579 in q.js: defer replaced with null
Mutant 1580 in q.js: defer replaced with undefined
Mutant 1581 in q.js: value replaced with undefined
Mutant 1582 in q.js: value replaced with null
Mutant 1583 in q.js: value replaced with 42
Mutant 1584 in q.js: Q replaced with 1
Mutant 1585 in q.js: Q replaced with "hello"
Mutant 1586 in q.js: callback replaced with null
Mutant 1587 in q.js: callback replaced with undefined
Mutant 1588 in q.js: callback replaced with Q.reject('error')
Mutant 1589 in q.js: args replaced with 0
Mutant 1590 in q.js: args replaced with undefined
Mutant 1591 in q.js: args replaced with null
Mutant 1592 in q.js: array_slice replaced with undefined
Mutant 1593 in q.js: args replaced with null
Mutant 1594 in q.js: args replaced with undefined
Mutant 1595 in q.js: nodeArgs.push replaced with varArgs.push
Mutant 1596 in q.js: nodeArgs.push replaced with newArgs.push
Mutant 1597 in q.js: nodeArgs.push replaced with []
Mutant 1598 in q.js: deferred.makeNodeResolver() replaced with deferred.reject()
Mutant 1599 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve()
Mutant 1600 in q.js: deferred.makeNodeResolver() replaced with deferred.notify()
Mutant 1601 in q.js: nodeArgs replaced with timeoutId + 100
Mutant 1602 in q.js: nodeArgs replaced with ms - 50
Mutant 1603 in q.js: nodeArgs replaced with Math.random() * 1000
Mutant 1604 in q.js: deferred.reject replaced with deferred.throw
Mutant 1605 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1606 in q.js: deferred.reject replaced with Q.error
Mutant 1607 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1608 in q.js: array_slice(arguments, 1) replaced with array_slice(null)
Mutant 1609 in q.js: arguments replaced with 1
Mutant 1610 in q.js: arguments replaced with null
Mutant 1611 in q.js: arguments replaced with []
Mutant 1612 in q.js: 1 replaced with 1 + 1
Mutant 1613 in q.js: 1 replaced with 0
Mutant 1614 in q.js: 1 replaced with -1
Mutant 1615 in q.js: Q replaced with this.denodeify
Mutant 1616 in q.js: Q replaced with undefined
Mutant 1617 in q.js: Q replaced with deferred.makeNodeResolver
Mutant 1618 in q.js: callback replaced with null
Mutant 1619 in q.js: callback replaced with undefined
Mutant 1620 in q.js: callback replaced with function () {
  return "foo";
}
Mutant 1621 in q.js: args replaced with typeof args.pop() !== "undefined"
Mutant 1622 in q.js: args replaced with Math.random() < 1
Mutant 1623 in q.js: array_slice replaced with void 0
Mutant 1624 in q.js: array_slice replaced with Q.array_slice
Mutant 1625 in q.js: arguments replaced with args.concat()
Mutant 1626 in q.js: arguments replaced with [].slice.call(args)
Mutant 1627 in q.js: arguments replaced with [].concat(args)
Mutant 1628 in q.js: defer replaced with deferred
Mutant 1629 in q.js: defer replaced with resolve
Mutant 1630 in q.js: defer replaced with reject
Mutant 1631 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1632 in q.js: nodeArgs.push replaced with nodeArgs.concat
Mutant 1633 in q.js: nodeArgs.push replaced with nodeArgs.splice
Mutant 1634 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1635 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1636 in q.js: deferred.makeNodeResolver() replaced with "Providing `undefined` as the first argument to any `then()` method becomes and remains an unresolved promise chain until it is joined by another unresolved chain or an already-resolved one."
Mutant 1637 in q.js: deferred.makeNodeResolver replaced with deferred.seleniumWebDriverSolver
Mutant 1638 in q.js: deferred.makeNodeResolver replaced with deferred.promise.upperEdges
Mutant 1639 in q.js: deferred.makeNodeResolver replaced with deferred.noeventWPflow
Mutant 1640 in q.js: this.fapply replaced with this.nfapply
Mutant 1641 in q.js: this.fapply replaced with deferred.resolve
not replacing this.fapply with this.nfapply
not replacing this.fapply with this.nfapply
not replacing this.fapply with deferred.resolve
not replacing this.fapply with deferred.resolve
Mutant 1642 in q.js: nodeArgs replaced with null
Mutant 1643 in q.js: nodeArgs replaced with []
Mutant 1644 in q.js: nodeArgs replaced with function () {}
Mutant 1645 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1646 in q.js: deferred.reject replaced with deferred.notify
Mutant 1647 in q.js: deferred.reject replaced with undefined
Mutant 1648 in q.js: callback === undefined replaced with callback === null
Mutant 1649 in q.js: callback === undefined replaced with callback === void 0
Mutant 1650 in q.js: callback === undefined replaced with callback == null
Mutant 1651 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1652 in q.js: array_slice(arguments, 1) replaced with array_slice([])
Mutant 1653 in q.js: array_slice(arguments, 1) replaced with array_slice(null)
Mutant 1654 in q.js: array_slice replaced with array_shift
Mutant 1655 in q.js: array_slice replaced with array_pop
Mutant 1656 in q.js: array_slice replaced with array_reverse
Mutant 1657 in q.js: arguments replaced with array_slice(arguments)
Mutant 1658 in q.js: arguments replaced with this
Mutant 1659 in q.js: 1 replaced with 2
Mutant 1660 in q.js: 1 replaced with math.random()
Mutant 1661 in q.js: 1 replaced with math.floor(math.random() * 100)
Mutant 1662 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1663 in q.js: array_slice(arguments) replaced with Object.keys(arguments)
Mutant 1664 in q.js: array_slice(arguments) replaced with Array.prototype.slice.call(arguments)
Mutant 1665 in q.js: arguments replaced with undefined
Mutant 1666 in q.js: arguments replaced with null
Mutant 1667 in q.js: arguments replaced with [1, 2, 3]
Mutant 1668 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1669 in q.js: nodeArgs.push replaced with ""
Mutant 1670 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().resolve
Mutant 1671 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().reject
Mutant 1672 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().notify
Mutant 1673 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeRejector
Mutant 1674 in q.js: Q replaced with 0
Mutant 1675 in q.js: Q replaced with null
Mutant 1676 in q.js: Q replaced with "hello"
Mutant 1677 in q.js: callback replaced with undefined
Mutant 1678 in q.js: callback replaced with function () {}
Mutant 1679 in q.js: callback replaced with null
Mutant 1680 in q.js: nodeArgs replaced with undefined
Mutant 1681 in q.js: nodeArgs replaced with null
Mutant 1682 in q.js: nodeArgs replaced with []
Mutant 1683 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1684 in q.js: deferred.reject replaced with Q.reject
Mutant 1685 in q.js: deferred.reject replaced with null
Mutant 1686 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1687 in q.js: arguments replaced with Array.prototype.slice.call(arguments, 1)
Mutant 1688 in q.js: arguments replaced with [...arguments].slice(1)
Mutant 1689 in q.js: args.unshift replaced with args.shift
Mutant 1690 in q.js: args.unshift replaced with args.push
Mutant 1691 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(this, args)
Mutant 1692 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(Object.create(null), args)
Mutant 1693 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(Function.prototype, args)
Mutant 1694 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1695 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1696 in q.js: void 0 replaced with 42
Mutant 1697 in q.js: void 0 replaced with {}
Mutant 1698 in q.js: args replaced with function () {
  return;
}
Mutant 1699 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 1, 2))
Mutant 1700 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 5))
Mutant 1701 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 2, 1))
Mutant 1702 in q.js: array_slice replaced with None
Mutant 1703 in q.js: array_slice replaced with object[object.length - 1]
Mutant 1704 in q.js: array_slice replaced with null
Mutant 1705 in q.js: array_slice(arguments) replaced with array_slice(arguments).reverse()
Mutant 1706 in q.js: array_slice(arguments) replaced with array_slice(arguments).shift()
Mutant 1707 in q.js: array_slice(arguments) replaced with array_slice(arguments).splice(1, 0, "foo")
Mutant 1708 in q.js: arguments replaced with null
Mutant 1709 in q.js: arguments replaced with {}
Mutant 1710 in q.js: nodeArgs.push replaced with nodeArgs.length = 0
Mutant 1711 in q.js: nodeArgs.push replaced with nodeArgs[0] = 0
Mutant 1712 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1713 in q.js: deferred.makeNodeResolver() replaced with deferred.reject
Mutant 1714 in q.js: deferred.makeNodeResolver() replaced with deferred.promise
Mutant 1715 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeReject
Mutant 1716 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeCallback
Mutant 1717 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(console.log)
Mutant 1718 in q.js: callback.apply(thisp, arguments) replaced with callback.apply([])
Mutant 1719 in q.js: thisp replaced with this
Mutant 1720 in q.js: thisp replaced with undefined
Mutant 1721 in q.js: thisp replaced with {}
Mutant 1722 in q.js: arguments replaced with 1
Mutant 1723 in q.js: arguments replaced with []
Mutant 1724 in q.js: arguments replaced with null
Mutant 1725 in q.js: Q replaced with deferred
Mutant 1726 in q.js: Q replaced with null
Mutant 1727 in q.js: bound replaced with null
Mutant 1728 in q.js: bound replaced with undefined
Mutant 1729 in q.js: bound replaced with this
Mutant 1730 in q.js: nodeArgs replaced with nodeArgs.push(deferred.makeNodeResolver())
Mutant 1731 in q.js: nodeArgs replaced with nodeArgs.splice(0, 1, deferred.makeNodeResolver())
Mutant 1732 in q.js: nodeArgs replaced with deferred.makeNodeResolver().call(null, nodeArgs)
Mutant 1733 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1734 in q.js: deferred.reject replaced with undefined
Mutant 1735 in q.js: deferred.reject replaced with Deferred.resolve
Mutant 1736 in q.js: array_slice replaced with "array_slice"
Mutant 1737 in q.js: arguments replaced with null
Mutant 1738 in q.js: arguments replaced with 0
Mutant 1739 in q.js: arguments replaced with undefined
Mutant 1740 in q.js: 0 replaced with 1
Mutant 1741 in q.js: 0 replaced with 99
Mutant 1742 in q.js: 0 replaced with Math.random()
Mutant 1743 in q.js: this replaced with null
Mutant 1744 in q.js: this replaced with undefined
Mutant 1745 in q.js: this replaced with function () {}
Mutant 1746 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1747 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined, args)
Mutant 1748 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply({})
Mutant 1749 in q.js: void 0 replaced with null
Mutant 1750 in q.js: void 0 replaced with false
Mutant 1751 in q.js: void 0 replaced with NaN
Mutant 1752 in q.js: args replaced with "new fake argument"
Mutant 1753 in q.js: args replaced with "hello world"
Mutant 1754 in q.js: Q(object).npost(name, args) replaced with Q(object).npost("name, args")
Mutant 1755 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(null)
Mutant 1756 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(args)
Mutant 1757 in q.js: Q replaced with 1 + 1
Mutant 1758 in q.js: Q replaced with Q + 1
Mutant 1759 in q.js: Q replaced with Q - 1
Mutant 1760 in q.js: object replaced with ~object
Mutant 1761 in q.js: object replaced with object + 1
Mutant 1762 in q.js: object replaced with object + object
Mutant 1763 in q.js: name replaced with "differentMethod"
Mutant 1764 in q.js: name replaced with "name".toUpperCase()
Mutant 1765 in q.js: args replaced with null
Mutant 1766 in q.js: args replaced with []
Mutant 1767 in q.js: args replaced with [1, 2, 3]
Mutant 1768 in q.js: array_slice replaced with array_slice.length
Mutant 1769 in q.js: array_slice replaced with array_slice[0]
Mutant 1770 in q.js: args || [] replaced with arg1 || arg2
Mutant 1771 in q.js: defer replaced with {}
Mutant 1772 in q.js: defer replaced with undefined
Mutant 1773 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1774 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1775 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1776 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1777 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1778 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver.bind(null)
Mutant 1779 in q.js: deferred.makeNodeResolver replaced with Q
Mutant 1780 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch(" jack", [name, nodeArgs])
Mutant 1781 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch(" get", [name, nodeArgs])
Mutant 1782 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch(" post")
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch(" jack", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch(" get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch(" post")
Mutant 1783 in q.js: this.dispatch replaced with this.post
Mutant 1784 in q.js: this.dispatch replaced with this.get
Mutant 1785 in q.js: this.dispatch replaced with this.set
not replacing this.dispatch with this.post
not replacing this.dispatch with this.post
not replacing this.dispatch with this.get
not replacing this.dispatch with this.get
not replacing this.dispatch with this.set
not replacing this.dispatch with this.set
Mutant 1786 in q.js: "post" replaced with "get"
Mutant 1787 in q.js: "post" replaced with "head"
Mutant 1788 in q.js: "post" replaced with "put"
Mutant 1789 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1790 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1791 in q.js: [name, nodeArgs] replaced with [[name], nodeArgs]
Mutant 1792 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1793 in q.js: array_slice(arguments, 2) replaced with array_slice(nodeArgs)
Mutant 1794 in q.js: array_slice(arguments, 2) replaced with array_slice(deferred)
Mutant 1795 in q.js: array_slice replaced with undefined
Mutant 1796 in q.js: array_slice replaced with null
Mutant 1797 in q.js: array_slice replaced with []
Mutant 1798 in q.js: arguments replaced with 0
Mutant 1799 in q.js: arguments replaced with null
Mutant 1800 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1801 in q.js: 2 replaced with 1
Mutant 1802 in q.js: 2 replaced with "foobar"
Mutant 1803 in q.js: 2 replaced with undefined
Mutant 1804 in q.js: defer replaced with reject
Mutant 1805 in q.js: nodeArgs.push replaced with nodeArgs.concat
Mutant 1806 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1807 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1808 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1809 in q.js: deferred.makeNodeResolver() replaced with new Error()
Mutant 1810 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("pre", [name, nodeArgs])
Mutant 1811 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("send", nodeArgs)
Mutant 1812 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", nodeArgs)
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("pre", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("send", nodeArgs)
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", nodeArgs)
Mutant 1813 in q.js: object replaced with null
Mutant 1814 in q.js: object replaced with {}
Mutant 1815 in q.js: object replaced with undefined
Mutant 1816 in q.js: "post" replaced with "Pre"
Mutant 1817 in q.js: [name, nodeArgs] replaced with [args, name]
Mutant 1818 in q.js: [name, nodeArgs] replaced with [nodeArgs, '']
Mutant 1819 in q.js: [name, nodeArgs] replaced with [name, '']
Mutant 1820 in q.js: deferred.reject replaced with deferred.reject()
Mutant 1821 in q.js: deferred.reject replaced with deferred.resolve()
Mutant 1822 in q.js: deferred.reject replaced with null
Mutant 1823 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1824 in q.js: array_slice(arguments, 1) replaced with array_slice(nodeArgs.length)
Mutant 1825 in q.js: array_slice(arguments, 1) replaced with array_slice(Q(2))
Mutant 1826 in q.js: array_slice replaced with -1
Mutant 1827 in q.js: array_slice replaced with undefined
Mutant 1828 in q.js: array_slice replaced with "hello world"
Mutant 1829 in q.js: arguments replaced with "... args"
Mutant 1830 in q.js: arguments replaced with "foo"
Mutant 1831 in q.js: arguments replaced with 42
Mutant 1832 in q.js: 1 replaced with 10
Mutant 1833 in q.js: 1 replaced with nodeArgs.length
Mutant 1834 in q.js: 1 replaced with -1
Mutant 1835 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1836 in q.js: nodeArgs.push replaced with nodeArgs = ['foo', 'bar']
Mutant 1837 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1838 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1839 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1840 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeRejector
Mutant 1841 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeMapper
Mutant 1842 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeResolverWithArg
Mutant 1843 in q.js: "post" replaced with "get"
Mutant 1844 in q.js: "post" replaced with "dispatch"
Mutant 1845 in q.js: "post" replaced with "resolve"
Mutant 1846 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1847 in q.js: [name, nodeArgs] replaced with ["foo", name]
Mutant 1848 in q.js: [name, nodeArgs] replaced with [name, null, nodeArgs]
Mutant 1849 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1850 in q.js: deferred.reject replaced with null
Mutant 1851 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1852 in q.js: Q(object).nodeify replaced with {}
Mutant 1853 in q.js: object replaced with undefined
Mutant 1854 in q.js: object replaced with null
Mutant 1855 in q.js: object replaced with "replace me"
Mutant 1856 in q.js: nodeback replaced with !nodeback
Mutant 1857 in q.js: nodeback replaced with typeof nodeback === "function"
Mutant 1858 in q.js: nodeback replaced with nodeback.constructor === Function
Mutant 1859 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1860 in q.js: nodeback(null, value) replaced with nodeback(true, value)
Mutant 1861 in q.js: nodeback(null, value) replaced with nodeback(false, value)
Mutant 1862 in q.js: null replaced with undefined
Mutant 1863 in q.js: null replaced with 0
Mutant 1864 in q.js: null replaced with NaN
Mutant 1865 in q.js: value replaced with undefined
Mutant 1866 in q.js: value replaced with null
Mutant 1867 in q.js: value replaced with "any string"
Mutant 1868 in q.js: error replaced with null
Mutant 1869 in q.js: error replaced with 1
Mutant 1870 in q.js: error replaced with "error"
Mutant 1871 in q.js: captureLine replaced with 1 + 1
Mutant 1872 in queue.js: Q.defer replaced with Q.reject
Mutant 1873 in queue.js: Q.defer replaced with Q.resolve
Mutant 1874 in queue.js: "head" replaced with "tail"
Mutant 1875 in queue.js: "head" replaced with "length"
Mutant 1876 in queue.js: "head" replaced with "NAN"
Mutant 1877 in queue.js: ends.promise.get replaced with ends.promise["get"]
Mutant 1878 in queue.js: ends.promise.get replaced with ends.promise.returns
Mutant 1879 in queue.js: ends.promise.get replaced with ends.promise["then"]
Mutant 1880 in queue.js: "tail" replaced with "tail.error"
Mutant 1881 in queue.js: "tail" replaced with "head.error"
Mutant 1882 in queue.js: "tail" replaced with "result.fail"
Mutant 1883 in queue.js: closed.resolve replaced with closed.reject
Mutant 1884 in queue.js: closed.resolve replaced with closed.resolved
Mutant 1885 in queue.js: closed.resolve replaced with closed.then
Mutant 1886 in queue.js: error replaced with null
Mutant 1887 in queue.js: error replaced with undefined
Mutant 1888 in queue.js: Q.reject replaced with Q.resolve
Mutant 1889 in queue.js: error replaced with null
Mutant 1890 in queue.js: error replaced with "error"
Mutant 1891 in queue.js: error replaced with Error("error")
Mutant 1892 in queue.js: ends.resolve replaced with ends.reject
Mutant 1893 in queue.js: ends.resolve replaced with ended.resolve
[32m23:59:05 (3074) INFO Instrumenter[39m Instrumented 2 source file(s) with 1894 mutant(s)
[32m23:59:05 (3074) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m23:59:07 (3074) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m23:59:07 (3074) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m23:59:14 (3074) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6781 ms, overhead 0 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 45m) 3/1894 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 37m) 4/1894 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 37m) 6/1894 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 59m) 7/1894 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 54m) 9/1894 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 8m) 10/1894 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 2m) 12/1894 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 47m) 15/1894 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 56m) 16/1894 tested (12 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 53m) 18/1894 tested (14 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~3h 0m) 19/1894 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 58m) 21/1894 tested (17 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 4m) 22/1894 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 1m) 24/1894 tested (20 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 6m) 25/1894 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 4m) 27/1894 tested (23 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 8m) 28/1894 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 6m) 30/1894 tested (26 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~2h 53m) 34/1894 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 2m) 34/1894 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 5m) 35/1894 tested (27 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 14m) 35/1894 tested (27 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 17m) 36/1894 tested (27 survived, 2 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 20m) 37/1894 tested (27 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 23m) 38/1894 tested (28 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 26m) 39/1894 tested (28 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 28m) 40/1894 tested (29 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 20m) 43/1894 tested (31 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 28m) 43/1894 tested (31 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 30m) 44/1894 tested (31 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 32m) 45/1894 tested (31 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 34m) 46/1894 tested (32 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 31m) 48/1894 tested (34 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 28m) 50/1894 tested (35 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 30m) 51/1894 tested (36 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 32m) 52/1894 tested (37 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 34m) 53/1894 tested (37 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 27m) 56/1894 tested (38 survived, 7 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 22m) 59/1894 tested (39 survived, 7 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 20m) 61/1894 tested (41 survived, 7 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 21m) 62/1894 tested (42 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 20m) 64/1894 tested (44 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 21m) 65/1894 tested (45 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 23m) 66/1894 tested (46 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 21m) 68/1894 tested (48 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 22m) 69/1894 tested (49 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 21m) 71/1894 tested (51 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 22m) 72/1894 tested (52 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 20m) 74/1894 tested (54 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 22m) 75/1894 tested (54 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 23m) 76/1894 tested (55 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 19m) 79/1894 tested (56 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 17m) 81/1894 tested (58 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 18m) 82/1894 tested (59 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 17m) 84/1894 tested (61 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 18m) 85/1894 tested (62 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 17m) 87/1894 tested (64 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 18m) 88/1894 tested (65 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 17m) 90/1894 tested (67 survived, 7 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 18m) 91/1894 tested (68 survived, 7 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 16m) 93/1894 tested (70 survived, 7 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 17m) 94/1894 tested (71 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 16m) 96/1894 tested (73 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 17m) 97/1894 tested (74 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 16m) 99/1894 tested (76 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 17m) 100/1894 tested (77 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 18m) 101/1894 tested (78 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 17m) 103/1894 tested (80 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 17m) 104/1894 tested (81 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 16m) 106/1894 tested (83 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 17m) 107/1894 tested (84 survived, 7 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 16m) 109/1894 tested (86 survived, 7 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 17m) 110/1894 tested (87 survived, 7 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 16m) 112/1894 tested (89 survived, 7 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 17m) 113/1894 tested (90 survived, 7 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~3h 15m) 115/1894 tested (92 survived, 7 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~3h 16m) 116/1894 tested (93 survived, 7 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 13m) 119/1894 tested (95 survived, 7 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 11m) 122/1894 tested (96 survived, 7 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 11m) 123/1894 tested (97 survived, 7 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 3m) 130/1894 tested (98 survived, 7 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 2m) 132/1894 tested (99 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 56m) 138/1894 tested (100 survived, 7 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~2h 55m) 140/1894 tested (101 survived, 7 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~2h 56m) 141/1894 tested (102 survived, 7 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~2h 55m) 143/1894 tested (104 survived, 7 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~2h 56m) 144/1894 tested (105 survived, 7 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~2h 55m) 146/1894 tested (107 survived, 7 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~2h 56m) 147/1894 tested (108 survived, 7 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~2h 55m) 149/1894 tested (110 survived, 7 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~2h 56m) 150/1894 tested (111 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 55m) 152/1894 tested (113 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 56m) 153/1894 tested (114 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 55m) 155/1894 tested (116 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 56m) 156/1894 tested (117 survived, 7 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 55m) 158/1894 tested (119 survived, 7 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 56m) 159/1894 tested (120 survived, 7 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 55m) 161/1894 tested (122 survived, 7 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 56m) 162/1894 tested (123 survived, 7 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 55m) 164/1894 tested (125 survived, 7 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 56m) 165/1894 tested (126 survived, 7 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~2h 55m) 167/1894 tested (128 survived, 7 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~2h 56m) 168/1894 tested (129 survived, 7 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~2h 55m) 170/1894 tested (131 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 56m) 171/1894 tested (132 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 56m) 172/1894 tested (133 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 56m) 174/1894 tested (135 survived, 7 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 56m) 175/1894 tested (136 survived, 7 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 56m) 177/1894 tested (138 survived, 7 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 56m) 178/1894 tested (139 survived, 7 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 56m) 180/1894 tested (141 survived, 7 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 56m) 181/1894 tested (142 survived, 7 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 56m) 183/1894 tested (144 survived, 7 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 56m) 184/1894 tested (145 survived, 7 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 56m) 186/1894 tested (147 survived, 7 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 56m) 187/1894 tested (148 survived, 7 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 55m) 189/1894 tested (150 survived, 7 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 56m) 190/1894 tested (151 survived, 7 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 53m) 194/1894 tested (152 survived, 7 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 53m) 196/1894 tested (154 survived, 7 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 53m) 197/1894 tested (155 survived, 7 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 53m) 199/1894 tested (157 survived, 7 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 53m) 200/1894 tested (158 survived, 7 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 53m) 202/1894 tested (160 survived, 7 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 53m) 203/1894 tested (161 survived, 7 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 53m) 205/1894 tested (163 survived, 7 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 53m) 206/1894 tested (164 survived, 7 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 52m) 208/1894 tested (166 survived, 7 timed out)
Mutation testing 11% (elapsed: ~21m, remaining: ~2h 53m) 209/1894 tested (167 survived, 7 timed out)
Mutation testing 11% (elapsed: ~21m, remaining: ~2h 52m) 211/1894 tested (169 survived, 7 timed out)
Mutation testing 11% (elapsed: ~21m, remaining: ~2h 48m) 217/1894 tested (169 survived, 7 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 49m) 218/1894 tested (169 survived, 7 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 48m) 220/1894 tested (171 survived, 7 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 49m) 221/1894 tested (172 survived, 7 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 48m) 223/1894 tested (174 survived, 7 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 47m) 226/1894 tested (175 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 46m) 228/1894 tested (177 survived, 7 timed out)
Mutation testing 12% (elapsed: ~23m, remaining: ~2h 47m) 229/1894 tested (178 survived, 7 timed out)
Mutation testing 12% (elapsed: ~23m, remaining: ~2h 46m) 231/1894 tested (180 survived, 7 timed out)
Mutation testing 12% (elapsed: ~23m, remaining: ~2h 47m) 232/1894 tested (181 survived, 7 timed out)
Mutation testing 12% (elapsed: ~23m, remaining: ~2h 47m) 233/1894 tested (182 survived, 7 timed out)
Mutation testing 12% (elapsed: ~23m, remaining: ~2h 47m) 235/1894 tested (184 survived, 7 timed out)
Mutation testing 12% (elapsed: ~23m, remaining: ~2h 47m) 236/1894 tested (185 survived, 7 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 46m) 238/1894 tested (187 survived, 7 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 47m) 239/1894 tested (188 survived, 7 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 46m) 241/1894 tested (190 survived, 7 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 47m) 242/1894 tested (191 survived, 7 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 46m) 244/1894 tested (193 survived, 7 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 47m) 245/1894 tested (194 survived, 7 timed out)
Mutation testing 13% (elapsed: ~25m, remaining: ~2h 46m) 247/1894 tested (196 survived, 7 timed out)
Mutation testing 13% (elapsed: ~25m, remaining: ~2h 47m) 248/1894 tested (197 survived, 7 timed out)
Mutation testing 13% (elapsed: ~25m, remaining: ~2h 46m) 250/1894 tested (199 survived, 7 timed out)
Mutation testing 13% (elapsed: ~25m, remaining: ~2h 46m) 251/1894 tested (200 survived, 7 timed out)
Mutation testing 13% (elapsed: ~25m, remaining: ~2h 46m) 253/1894 tested (202 survived, 7 timed out)
Mutation testing 13% (elapsed: ~25m, remaining: ~2h 46m) 254/1894 tested (203 survived, 7 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 46m) 256/1894 tested (205 survived, 7 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 46m) 257/1894 tested (206 survived, 7 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 46m) 259/1894 tested (208 survived, 7 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 46m) 260/1894 tested (209 survived, 7 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 46m) 262/1894 tested (211 survived, 7 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 46m) 263/1894 tested (212 survived, 7 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 45m) 265/1894 tested (214 survived, 7 timed out)
Mutation testing 14% (elapsed: ~27m, remaining: ~2h 46m) 266/1894 tested (215 survived, 7 timed out)
Mutation testing 14% (elapsed: ~27m, remaining: ~2h 46m) 267/1894 tested (216 survived, 7 timed out)
Mutation testing 14% (elapsed: ~27m, remaining: ~2h 46m) 269/1894 tested (218 survived, 7 timed out)
Mutation testing 14% (elapsed: ~27m, remaining: ~2h 46m) 270/1894 tested (219 survived, 7 timed out)
Mutation testing 14% (elapsed: ~27m, remaining: ~2h 45m) 272/1894 tested (221 survived, 7 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 46m) 273/1894 tested (222 survived, 7 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 45m) 275/1894 tested (224 survived, 7 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 46m) 276/1894 tested (225 survived, 7 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 45m) 278/1894 tested (227 survived, 7 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 45m) 279/1894 tested (228 survived, 7 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 45m) 281/1894 tested (230 survived, 7 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 45m) 282/1894 tested (231 survived, 7 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 45m) 284/1894 tested (233 survived, 7 timed out)
Mutation testing 15% (elapsed: ~29m, remaining: ~2h 45m) 285/1894 tested (234 survived, 7 timed out)
Mutation testing 15% (elapsed: ~29m, remaining: ~2h 45m) 287/1894 tested (236 survived, 7 timed out)
Mutation testing 15% (elapsed: ~29m, remaining: ~2h 45m) 288/1894 tested (237 survived, 7 timed out)
Mutation testing 15% (elapsed: ~29m, remaining: ~2h 45m) 290/1894 tested (239 survived, 7 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 45m) 291/1894 tested (240 survived, 7 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 44m) 293/1894 tested (242 survived, 7 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 45m) 294/1894 tested (243 survived, 7 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 44m) 296/1894 tested (245 survived, 7 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 44m) 297/1894 tested (246 survived, 7 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 44m) 299/1894 tested (248 survived, 7 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 44m) 300/1894 tested (249 survived, 7 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 44m) 302/1894 tested (251 survived, 7 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 44m) 303/1894 tested (252 survived, 7 timed out)
Mutation testing 16% (elapsed: ~31m, remaining: ~2h 44m) 304/1894 tested (253 survived, 7 timed out)
Mutation testing 16% (elapsed: ~31m, remaining: ~2h 43m) 308/1894 tested (255 survived, 7 timed out)
Mutation testing 16% (elapsed: ~31m, remaining: ~2h 41m) 312/1894 tested (256 survived, 7 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 41m) 313/1894 tested (257 survived, 7 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 41m) 315/1894 tested (259 survived, 7 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 41m) 316/1894 tested (260 survived, 7 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 41m) 318/1894 tested (262 survived, 7 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 41m) 319/1894 tested (263 survived, 7 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 40m) 321/1894 tested (265 survived, 7 timed out)
Mutation testing 17% (elapsed: ~33m, remaining: ~2h 41m) 322/1894 tested (266 survived, 7 timed out)
Mutation testing 17% (elapsed: ~33m, remaining: ~2h 41m) 323/1894 tested (267 survived, 7 timed out)
Mutation testing 17% (elapsed: ~33m, remaining: ~2h 40m) 325/1894 tested (269 survived, 7 timed out)
Mutation testing 17% (elapsed: ~33m, remaining: ~2h 41m) 326/1894 tested (270 survived, 7 timed out)
Mutation testing 17% (elapsed: ~33m, remaining: ~2h 40m) 328/1894 tested (272 survived, 7 timed out)
Mutation testing 17% (elapsed: ~33m, remaining: ~2h 40m) 329/1894 tested (273 survived, 7 timed out)
Mutation testing 17% (elapsed: ~34m, remaining: ~2h 40m) 331/1894 tested (275 survived, 7 timed out)
Mutation testing 17% (elapsed: ~34m, remaining: ~2h 40m) 332/1894 tested (276 survived, 7 timed out)
Mutation testing 17% (elapsed: ~34m, remaining: ~2h 39m) 335/1894 tested (278 survived, 7 timed out)
Mutation testing 17% (elapsed: ~34m, remaining: ~2h 39m) 336/1894 tested (279 survived, 7 timed out)
Mutation testing 17% (elapsed: ~34m, remaining: ~2h 39m) 338/1894 tested (281 survived, 7 timed out)
Mutation testing 18% (elapsed: ~34m, remaining: ~2h 38m) 341/1894 tested (282 survived, 7 timed out)
Mutation testing 18% (elapsed: ~35m, remaining: ~2h 38m) 342/1894 tested (283 survived, 7 timed out)
Mutation testing 18% (elapsed: ~35m, remaining: ~2h 38m) 344/1894 tested (285 survived, 7 timed out)
Mutation testing 18% (elapsed: ~35m, remaining: ~2h 38m) 345/1894 tested (286 survived, 7 timed out)
Mutation testing 18% (elapsed: ~35m, remaining: ~2h 38m) 347/1894 tested (288 survived, 7 timed out)
Mutation testing 18% (elapsed: ~35m, remaining: ~2h 38m) 348/1894 tested (289 survived, 7 timed out)
Mutation testing 18% (elapsed: ~35m, remaining: ~2h 37m) 351/1894 tested (291 survived, 7 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 37m) 352/1894 tested (292 survived, 7 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 37m) 353/1894 tested (293 survived, 7 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 38m) 354/1894 tested (293 survived, 7 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 36m) 358/1894 tested (293 survived, 7 timed out)
Mutation testing 19% (elapsed: ~36m, remaining: ~2h 36m) 360/1894 tested (293 survived, 7 timed out)
Mutation testing 19% (elapsed: ~36m, remaining: ~2h 36m) 361/1894 tested (293 survived, 7 timed out)
Mutation testing 19% (elapsed: ~37m, remaining: ~2h 37m) 361/1894 tested (293 survived, 7 timed out)
Mutation testing 19% (elapsed: ~37m, remaining: ~2h 36m) 363/1894 tested (293 survived, 8 timed out)
Mutation testing 19% (elapsed: ~37m, remaining: ~2h 36m) 364/1894 tested (293 survived, 8 timed out)
Mutation testing 19% (elapsed: ~37m, remaining: ~2h 36m) 366/1894 tested (293 survived, 8 timed out)
Mutation testing 19% (elapsed: ~37m, remaining: ~2h 36m) 367/1894 tested (293 survived, 8 timed out)
Mutation testing 19% (elapsed: ~37m, remaining: ~2h 36m) 368/1894 tested (293 survived, 8 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 37m) 369/1894 tested (293 survived, 9 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 37m) 369/1894 tested (293 survived, 9 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 37m) 370/1894 tested (293 survived, 10 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 38m) 371/1894 tested (293 survived, 11 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 38m) 371/1894 tested (293 survived, 11 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 37m) 374/1894 tested (293 survived, 12 timed out)
Mutation testing 20% (elapsed: ~39m, remaining: ~2h 35m) 379/1894 tested (294 survived, 12 timed out)
Mutation testing 20% (elapsed: ~39m, remaining: ~2h 34m) 383/1894 tested (295 survived, 12 timed out)
Mutation testing 20% (elapsed: ~39m, remaining: ~2h 35m) 383/1894 tested (295 survived, 12 timed out)
Mutation testing 20% (elapsed: ~39m, remaining: ~2h 34m) 385/1894 tested (295 survived, 13 timed out)
Mutation testing 20% (elapsed: ~39m, remaining: ~2h 32m) 391/1894 tested (296 survived, 13 timed out)
Mutation testing 20% (elapsed: ~39m, remaining: ~2h 32m) 392/1894 tested (297 survived, 13 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 32m) 394/1894 tested (299 survived, 13 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 32m) 395/1894 tested (299 survived, 13 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 32m) 396/1894 tested (300 survived, 13 timed out)
Mutation testing 21% (elapsed: ~40m, remaining: ~2h 31m) 399/1894 tested (302 survived, 13 timed out)
Mutation testing 21% (elapsed: ~40m, remaining: ~2h 32m) 399/1894 tested (302 survived, 13 timed out)
Mutation testing 21% (elapsed: ~40m, remaining: ~2h 32m) 400/1894 tested (302 survived, 14 timed out)
Mutation testing 21% (elapsed: ~41m, remaining: ~2h 32m) 401/1894 tested (302 survived, 15 timed out)
Mutation testing 21% (elapsed: ~41m, remaining: ~2h 31m) 404/1894 tested (303 survived, 15 timed out)
Mutation testing 21% (elapsed: ~41m, remaining: ~2h 31m) 405/1894 tested (304 survived, 15 timed out)
Mutation testing 21% (elapsed: ~41m, remaining: ~2h 30m) 409/1894 tested (305 survived, 15 timed out)
Mutation testing 21% (elapsed: ~41m, remaining: ~2h 30m) 410/1894 tested (306 survived, 15 timed out)
Mutation testing 21% (elapsed: ~41m, remaining: ~2h 30m) 412/1894 tested (308 survived, 15 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 30m) 413/1894 tested (309 survived, 15 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 30m) 415/1894 tested (311 survived, 15 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 30m) 416/1894 tested (312 survived, 15 timed out)
Mutation testing 22% (elapsed: ~42m, remaining: ~2h 30m) 418/1894 tested (314 survived, 15 timed out)
Mutation testing 22% (elapsed: ~42m, remaining: ~2h 30m) 419/1894 tested (315 survived, 15 timed out)
Mutation testing 22% (elapsed: ~42m, remaining: ~2h 29m) 421/1894 tested (317 survived, 15 timed out)
Mutation testing 22% (elapsed: ~43m, remaining: ~2h 29m) 422/1894 tested (318 survived, 15 timed out)
Mutation testing 22% (elapsed: ~43m, remaining: ~2h 29m) 424/1894 tested (320 survived, 15 timed out)
Mutation testing 22% (elapsed: ~43m, remaining: ~2h 29m) 425/1894 tested (321 survived, 15 timed out)
Mutation testing 22% (elapsed: ~43m, remaining: ~2h 29m) 427/1894 tested (323 survived, 15 timed out)
Mutation testing 22% (elapsed: ~43m, remaining: ~2h 29m) 428/1894 tested (324 survived, 15 timed out)
Mutation testing 22% (elapsed: ~43m, remaining: ~2h 29m) 430/1894 tested (326 survived, 15 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 29m) 431/1894 tested (327 survived, 15 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 29m) 433/1894 tested (329 survived, 15 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 29m) 434/1894 tested (330 survived, 15 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 29m) 435/1894 tested (331 survived, 15 timed out)
Mutation testing 23% (elapsed: ~44m, remaining: ~2h 28m) 437/1894 tested (333 survived, 15 timed out)
Mutation testing 23% (elapsed: ~44m, remaining: ~2h 29m) 438/1894 tested (334 survived, 15 timed out)
Mutation testing 23% (elapsed: ~45m, remaining: ~2h 26m) 445/1894 tested (335 survived, 15 timed out)
Mutation testing 23% (elapsed: ~45m, remaining: ~2h 26m) 446/1894 tested (336 survived, 15 timed out)
Mutation testing 23% (elapsed: ~45m, remaining: ~2h 26m) 448/1894 tested (338 survived, 15 timed out)
Mutation testing 23% (elapsed: ~45m, remaining: ~2h 26m) 448/1894 tested (338 survived, 15 timed out)
Mutation testing 23% (elapsed: ~45m, remaining: ~2h 26m) 449/1894 tested (338 survived, 16 timed out)
Mutation testing 23% (elapsed: ~45m, remaining: ~2h 26m) 451/1894 tested (338 survived, 17 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 26m) 452/1894 tested (338 survived, 17 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 26m) 453/1894 tested (338 survived, 18 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 27m) 453/1894 tested (338 survived, 18 timed out)
Mutation testing 24% (elapsed: ~46m, remaining: ~2h 26m) 456/1894 tested (338 survived, 19 timed out)
Mutation testing 24% (elapsed: ~46m, remaining: ~2h 26m) 457/1894 tested (338 survived, 20 timed out)
Mutation testing 24% (elapsed: ~46m, remaining: ~2h 26m) 458/1894 tested (339 survived, 20 timed out)
Mutation testing 24% (elapsed: ~47m, remaining: ~2h 26m) 460/1894 tested (341 survived, 20 timed out)
Mutation testing 24% (elapsed: ~47m, remaining: ~2h 26m) 461/1894 tested (342 survived, 20 timed out)
Mutation testing 24% (elapsed: ~47m, remaining: ~2h 26m) 463/1894 tested (344 survived, 20 timed out)
Mutation testing 24% (elapsed: ~47m, remaining: ~2h 25m) 466/1894 tested (344 survived, 20 timed out)
Mutation testing 24% (elapsed: ~47m, remaining: ~2h 25m) 468/1894 tested (344 survived, 20 timed out)
Mutation testing 24% (elapsed: ~47m, remaining: ~2h 25m) 469/1894 tested (344 survived, 20 timed out)
Mutation testing 24% (elapsed: ~48m, remaining: ~2h 25m) 470/1894 tested (344 survived, 20 timed out)
Mutation testing 24% (elapsed: ~48m, remaining: ~2h 25m) 471/1894 tested (344 survived, 20 timed out)
Mutation testing 24% (elapsed: ~48m, remaining: ~2h 25m) 473/1894 tested (346 survived, 20 timed out)
Mutation testing 25% (elapsed: ~48m, remaining: ~2h 25m) 474/1894 tested (347 survived, 20 timed out)
Mutation testing 25% (elapsed: ~48m, remaining: ~2h 24m) 476/1894 tested (349 survived, 20 timed out)
Mutation testing 25% (elapsed: ~48m, remaining: ~2h 25m) 477/1894 tested (350 survived, 20 timed out)
Mutation testing 25% (elapsed: ~49m, remaining: ~2h 24m) 479/1894 tested (352 survived, 20 timed out)
Mutation testing 25% (elapsed: ~49m, remaining: ~2h 24m) 480/1894 tested (353 survived, 20 timed out)
Mutation testing 25% (elapsed: ~49m, remaining: ~2h 24m) 481/1894 tested (354 survived, 20 timed out)
Mutation testing 25% (elapsed: ~49m, remaining: ~2h 24m) 483/1894 tested (356 survived, 20 timed out)
Mutation testing 25% (elapsed: ~49m, remaining: ~2h 24m) 484/1894 tested (357 survived, 20 timed out)
Mutation testing 25% (elapsed: ~49m, remaining: ~2h 24m) 486/1894 tested (359 survived, 20 timed out)
Mutation testing 25% (elapsed: ~50m, remaining: ~2h 24m) 487/1894 tested (360 survived, 20 timed out)
Mutation testing 25% (elapsed: ~50m, remaining: ~2h 24m) 489/1894 tested (362 survived, 20 timed out)
Mutation testing 25% (elapsed: ~50m, remaining: ~2h 24m) 490/1894 tested (363 survived, 20 timed out)
Mutation testing 25% (elapsed: ~50m, remaining: ~2h 23m) 492/1894 tested (365 survived, 20 timed out)
Mutation testing 26% (elapsed: ~50m, remaining: ~2h 23m) 493/1894 tested (366 survived, 20 timed out)
Mutation testing 26% (elapsed: ~50m, remaining: ~2h 23m) 495/1894 tested (368 survived, 20 timed out)
Mutation testing 26% (elapsed: ~51m, remaining: ~2h 23m) 496/1894 tested (369 survived, 20 timed out)
Mutation testing 26% (elapsed: ~51m, remaining: ~2h 23m) 498/1894 tested (371 survived, 20 timed out)
Mutation testing 26% (elapsed: ~51m, remaining: ~2h 23m) 499/1894 tested (372 survived, 20 timed out)
Mutation testing 26% (elapsed: ~51m, remaining: ~2h 23m) 501/1894 tested (374 survived, 20 timed out)
Mutation testing 26% (elapsed: ~51m, remaining: ~2h 23m) 502/1894 tested (375 survived, 20 timed out)
Mutation testing 26% (elapsed: ~51m, remaining: ~2h 22m) 504/1894 tested (377 survived, 20 timed out)
Mutation testing 26% (elapsed: ~52m, remaining: ~2h 23m) 505/1894 tested (378 survived, 20 timed out)
Mutation testing 26% (elapsed: ~52m, remaining: ~2h 22m) 507/1894 tested (380 survived, 20 timed out)
Mutation testing 26% (elapsed: ~52m, remaining: ~2h 22m) 508/1894 tested (381 survived, 20 timed out)
Mutation testing 26% (elapsed: ~52m, remaining: ~2h 22m) 510/1894 tested (383 survived, 20 timed out)
Mutation testing 26% (elapsed: ~52m, remaining: ~2h 22m) 511/1894 tested (384 survived, 20 timed out)
Mutation testing 27% (elapsed: ~52m, remaining: ~2h 22m) 513/1894 tested (386 survived, 20 timed out)
Mutation testing 27% (elapsed: ~53m, remaining: ~2h 22m) 514/1894 tested (387 survived, 20 timed out)
Mutation testing 27% (elapsed: ~53m, remaining: ~2h 21m) 516/1894 tested (389 survived, 20 timed out)
Mutation testing 27% (elapsed: ~53m, remaining: ~2h 22m) 517/1894 tested (390 survived, 20 timed out)
Mutation testing 27% (elapsed: ~53m, remaining: ~2h 21m) 519/1894 tested (392 survived, 20 timed out)
Mutation testing 27% (elapsed: ~53m, remaining: ~2h 21m) 520/1894 tested (393 survived, 20 timed out)
Mutation testing 27% (elapsed: ~53m, remaining: ~2h 21m) 521/1894 tested (394 survived, 20 timed out)
Mutation testing 27% (elapsed: ~54m, remaining: ~2h 21m) 523/1894 tested (396 survived, 20 timed out)
Mutation testing 27% (elapsed: ~54m, remaining: ~2h 21m) 524/1894 tested (397 survived, 20 timed out)
Mutation testing 27% (elapsed: ~54m, remaining: ~2h 21m) 526/1894 tested (399 survived, 20 timed out)
Mutation testing 27% (elapsed: ~54m, remaining: ~2h 21m) 527/1894 tested (400 survived, 20 timed out)
Mutation testing 27% (elapsed: ~54m, remaining: ~2h 21m) 529/1894 tested (402 survived, 20 timed out)
Mutation testing 27% (elapsed: ~54m, remaining: ~2h 21m) 530/1894 tested (403 survived, 20 timed out)
Mutation testing 28% (elapsed: ~55m, remaining: ~2h 20m) 532/1894 tested (405 survived, 20 timed out)
Mutation testing 28% (elapsed: ~55m, remaining: ~2h 20m) 533/1894 tested (406 survived, 20 timed out)
Mutation testing 28% (elapsed: ~55m, remaining: ~2h 20m) 535/1894 tested (408 survived, 20 timed out)
Mutation testing 28% (elapsed: ~55m, remaining: ~2h 20m) 536/1894 tested (409 survived, 20 timed out)
Mutation testing 28% (elapsed: ~55m, remaining: ~2h 20m) 538/1894 tested (411 survived, 20 timed out)
Mutation testing 28% (elapsed: ~55m, remaining: ~2h 20m) 539/1894 tested (412 survived, 20 timed out)
Mutation testing 28% (elapsed: ~56m, remaining: ~2h 20m) 541/1894 tested (414 survived, 20 timed out)
Mutation testing 28% (elapsed: ~56m, remaining: ~2h 20m) 542/1894 tested (415 survived, 20 timed out)
Mutation testing 28% (elapsed: ~56m, remaining: ~2h 19m) 544/1894 tested (417 survived, 20 timed out)
Mutation testing 28% (elapsed: ~56m, remaining: ~2h 19m) 545/1894 tested (418 survived, 20 timed out)
Mutation testing 28% (elapsed: ~56m, remaining: ~2h 19m) 547/1894 tested (420 survived, 20 timed out)
Mutation testing 28% (elapsed: ~56m, remaining: ~2h 19m) 548/1894 tested (421 survived, 20 timed out)
Mutation testing 29% (elapsed: ~57m, remaining: ~2h 19m) 550/1894 tested (423 survived, 20 timed out)
Mutation testing 29% (elapsed: ~57m, remaining: ~2h 19m) 551/1894 tested (424 survived, 20 timed out)
Mutation testing 29% (elapsed: ~57m, remaining: ~2h 19m) 553/1894 tested (426 survived, 20 timed out)
Mutation testing 29% (elapsed: ~57m, remaining: ~2h 19m) 554/1894 tested (427 survived, 20 timed out)
Mutation testing 29% (elapsed: ~57m, remaining: ~2h 19m) 555/1894 tested (428 survived, 20 timed out)
Mutation testing 29% (elapsed: ~57m, remaining: ~2h 18m) 557/1894 tested (430 survived, 20 timed out)
Mutation testing 29% (elapsed: ~58m, remaining: ~2h 18m) 558/1894 tested (431 survived, 20 timed out)
Mutation testing 29% (elapsed: ~58m, remaining: ~2h 17m) 562/1894 tested (432 survived, 20 timed out)
Mutation testing 29% (elapsed: ~58m, remaining: ~2h 17m) 564/1894 tested (434 survived, 20 timed out)
Mutation testing 29% (elapsed: ~58m, remaining: ~2h 16m) 568/1894 tested (435 survived, 20 timed out)
Mutation testing 30% (elapsed: ~58m, remaining: ~2h 16m) 569/1894 tested (436 survived, 20 timed out)
Mutation testing 30% (elapsed: ~58m, remaining: ~2h 16m) 570/1894 tested (436 survived, 21 timed out)
Mutation testing 30% (elapsed: ~59m, remaining: ~2h 17m) 570/1894 tested (436 survived, 21 timed out)
Mutation testing 30% (elapsed: ~59m, remaining: ~2h 17m) 571/1894 tested (436 survived, 21 timed out)
Mutation testing 30% (elapsed: ~59m, remaining: ~2h 17m) 572/1894 tested (436 survived, 22 timed out)
Mutation testing 30% (elapsed: ~59m, remaining: ~2h 17m) 572/1894 tested (436 survived, 22 timed out)
Mutation testing 30% (elapsed: ~59m, remaining: ~2h 17m) 573/1894 tested (436 survived, 23 timed out)
Mutation testing 30% (elapsed: ~59m, remaining: ~2h 17m) 574/1894 tested (436 survived, 24 timed out)
Mutation testing 30% (elapsed: ~1h 0m, remaining: ~2h 17m) 575/1894 tested (437 survived, 24 timed out)
Mutation testing 30% (elapsed: ~1h 0m, remaining: ~2h 17m) 576/1894 tested (437 survived, 25 timed out)
Mutation testing 30% (elapsed: ~1h 0m, remaining: ~2h 18m) 576/1894 tested (437 survived, 25 timed out)
Mutation testing 30% (elapsed: ~1h 0m, remaining: ~2h 18m) 577/1894 tested (437 survived, 26 timed out)
Mutation testing 30% (elapsed: ~1h 0m, remaining: ~2h 18m) 578/1894 tested (437 survived, 27 timed out)
Mutation testing 30% (elapsed: ~1h 0m, remaining: ~2h 18m) 578/1894 tested (437 survived, 27 timed out)
Mutation testing 30% (elapsed: ~1h 1m, remaining: ~2h 18m) 579/1894 tested (437 survived, 28 timed out)
Mutation testing 30% (elapsed: ~1h 1m, remaining: ~2h 18m) 580/1894 tested (437 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 1m, remaining: ~2h 18m) 581/1894 tested (438 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 1m, remaining: ~2h 18m) 583/1894 tested (440 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 1m, remaining: ~2h 18m) 584/1894 tested (441 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 1m, remaining: ~2h 18m) 586/1894 tested (443 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 18m) 587/1894 tested (444 survived, 29 timed out)
Mutation testing 31% (elapsed: ~1h 2m, remaining: ~2h 17m) 589/1894 tested (446 survived, 29 timed out)
Mutation testing 31% (elapsed: ~1h 2m, remaining: ~2h 17m) 590/1894 tested (447 survived, 29 timed out)
Mutation testing 31% (elapsed: ~1h 2m, remaining: ~2h 17m) 591/1894 tested (448 survived, 29 timed out)
Mutation testing 31% (elapsed: ~1h 2m, remaining: ~2h 17m) 593/1894 tested (450 survived, 29 timed out)
Mutation testing 31% (elapsed: ~1h 2m, remaining: ~2h 17m) 594/1894 tested (451 survived, 29 timed out)
Mutation testing 31% (elapsed: ~1h 3m, remaining: ~2h 16m) 598/1894 tested (453 survived, 29 timed out)
Mutation testing 31% (elapsed: ~1h 3m, remaining: ~2h 16m) 599/1894 tested (454 survived, 29 timed out)
Mutation testing 31% (elapsed: ~1h 3m, remaining: ~2h 16m) 600/1894 tested (454 survived, 29 timed out)
Mutation testing 31% (elapsed: ~1h 3m, remaining: ~2h 16m) 602/1894 tested (455 survived, 29 timed out)
Mutation testing 31% (elapsed: ~1h 3m, remaining: ~2h 16m) 603/1894 tested (455 survived, 29 timed out)
Mutation testing 31% (elapsed: ~1h 3m, remaining: ~2h 16m) 605/1894 tested (457 survived, 29 timed out)
Mutation testing 32% (elapsed: ~1h 4m, remaining: ~2h 15m) 607/1894 tested (458 survived, 29 timed out)
Mutation testing 32% (elapsed: ~1h 4m, remaining: ~2h 16m) 607/1894 tested (458 survived, 29 timed out)
Mutation testing 32% (elapsed: ~1h 4m, remaining: ~2h 16m) 608/1894 tested (458 survived, 30 timed out)
Mutation testing 32% (elapsed: ~1h 4m, remaining: ~2h 16m) 609/1894 tested (458 survived, 31 timed out)
Mutation testing 32% (elapsed: ~1h 4m, remaining: ~2h 16m) 609/1894 tested (458 survived, 31 timed out)
Mutation testing 32% (elapsed: ~1h 4m, remaining: ~2h 16m) 611/1894 tested (458 survived, 32 timed out)
Mutation testing 32% (elapsed: ~1h 5m, remaining: ~2h 16m) 612/1894 tested (458 survived, 32 timed out)
Mutation testing 32% (elapsed: ~1h 5m, remaining: ~2h 16m) 612/1894 tested (458 survived, 32 timed out)
Mutation testing 32% (elapsed: ~1h 5m, remaining: ~2h 16m) 613/1894 tested (458 survived, 32 timed out)
Mutation testing 32% (elapsed: ~1h 5m, remaining: ~2h 16m) 614/1894 tested (458 survived, 32 timed out)
Mutation testing 32% (elapsed: ~1h 5m, remaining: ~2h 16m) 615/1894 tested (458 survived, 33 timed out)
Mutation testing 32% (elapsed: ~1h 5m, remaining: ~2h 16m) 615/1894 tested (458 survived, 33 timed out)
Mutation testing 32% (elapsed: ~1h 6m, remaining: ~2h 16m) 616/1894 tested (458 survived, 34 timed out)
Mutation testing 32% (elapsed: ~1h 6m, remaining: ~2h 16m) 617/1894 tested (458 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 6m, remaining: ~2h 17m) 617/1894 tested (458 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 6m, remaining: ~2h 17m) 618/1894 tested (458 survived, 36 timed out)
Mutation testing 32% (elapsed: ~1h 6m, remaining: ~2h 16m) 620/1894 tested (459 survived, 36 timed out)
Mutation testing 32% (elapsed: ~1h 6m, remaining: ~2h 17m) 621/1894 tested (460 survived, 36 timed out)
Mutation testing 32% (elapsed: ~1h 7m, remaining: ~2h 17m) 622/1894 tested (461 survived, 36 timed out)
Mutation testing 32% (elapsed: ~1h 7m, remaining: ~2h 17m) 623/1894 tested (461 survived, 37 timed out)
Mutation testing 32% (elapsed: ~1h 7m, remaining: ~2h 17m) 623/1894 tested (461 survived, 37 timed out)
Mutation testing 32% (elapsed: ~1h 7m, remaining: ~2h 17m) 624/1894 tested (461 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 7m, remaining: ~2h 17m) 625/1894 tested (461 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 7m, remaining: ~2h 17m) 625/1894 tested (461 survived, 39 timed out)
Mutation testing 33% (elapsed: ~1h 8m, remaining: ~2h 17m) 626/1894 tested (461 survived, 40 timed out)
Mutation testing 33% (elapsed: ~1h 8m, remaining: ~2h 17m) 627/1894 tested (461 survived, 41 timed out)
Mutation testing 33% (elapsed: ~1h 8m, remaining: ~2h 18m) 627/1894 tested (461 survived, 41 timed out)
Mutation testing 33% (elapsed: ~1h 8m, remaining: ~2h 18m) 628/1894 tested (461 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 8m, remaining: ~2h 18m) 629/1894 tested (461 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 8m, remaining: ~2h 18m) 629/1894 tested (461 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 9m, remaining: ~2h 18m) 630/1894 tested (461 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 9m, remaining: ~2h 18m) 631/1894 tested (461 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 9m, remaining: ~2h 18m) 632/1894 tested (461 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 9m, remaining: ~2h 18m) 633/1894 tested (461 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 9m, remaining: ~2h 18m) 634/1894 tested (461 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 9m, remaining: ~2h 18m) 635/1894 tested (461 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 10m, remaining: ~2h 18m) 636/1894 tested (462 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 10m, remaining: ~2h 18m) 638/1894 tested (464 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 10m, remaining: ~2h 18m) 639/1894 tested (465 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 10m, remaining: ~2h 18m) 640/1894 tested (465 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 10m, remaining: ~2h 18m) 640/1894 tested (465 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 10m, remaining: ~2h 18m) 641/1894 tested (465 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 11m, remaining: ~2h 18m) 642/1894 tested (465 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 11m, remaining: ~2h 18m) 642/1894 tested (465 survived, 46 timed out)
Mutation testing 34% (elapsed: ~1h 11m, remaining: ~2h 18m) 644/1894 tested (465 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 11m, remaining: ~2h 18m) 644/1894 tested (465 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 11m, remaining: ~2h 18m) 645/1894 tested (465 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 11m, remaining: ~2h 18m) 646/1894 tested (465 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 12m, remaining: ~2h 19m) 646/1894 tested (465 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 12m, remaining: ~2h 18m) 648/1894 tested (465 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 12m, remaining: ~2h 18m) 649/1894 tested (465 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 12m, remaining: ~2h 19m) 649/1894 tested (465 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 12m, remaining: ~2h 19m) 650/1894 tested (465 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 12m, remaining: ~2h 19m) 651/1894 tested (465 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 13m, remaining: ~2h 19m) 651/1894 tested (465 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 13m, remaining: ~2h 19m) 652/1894 tested (465 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 13m, remaining: ~2h 19m) 653/1894 tested (466 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 13m, remaining: ~2h 19m) 654/1894 tested (466 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 13m, remaining: ~2h 19m) 654/1894 tested (466 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 13m, remaining: ~2h 19m) 655/1894 tested (466 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 14m, remaining: ~2h 19m) 656/1894 tested (466 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 14m, remaining: ~2h 19m) 656/1894 tested (466 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 14m, remaining: ~2h 19m) 657/1894 tested (466 survived, 58 timed out)
Mutation testing 34% (elapsed: ~1h 14m, remaining: ~2h 19m) 658/1894 tested (466 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 14m, remaining: ~2h 20m) 658/1894 tested (466 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 14m, remaining: ~2h 20m) 659/1894 tested (466 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 20m) 660/1894 tested (466 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 20m) 660/1894 tested (466 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 20m) 662/1894 tested (467 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 15m, remaining: ~2h 20m) 663/1894 tested (468 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 15m, remaining: ~2h 19m) 665/1894 tested (470 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 15m, remaining: ~2h 19m) 666/1894 tested (471 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 16m, remaining: ~2h 19m) 668/1894 tested (473 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 16m, remaining: ~2h 19m) 669/1894 tested (474 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 16m, remaining: ~2h 19m) 670/1894 tested (475 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 16m, remaining: ~2h 19m) 672/1894 tested (477 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 16m, remaining: ~2h 19m) 673/1894 tested (478 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 16m, remaining: ~2h 18m) 675/1894 tested (480 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 17m, remaining: ~2h 18m) 676/1894 tested (481 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 17m, remaining: ~2h 18m) 678/1894 tested (483 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 17m, remaining: ~2h 18m) 679/1894 tested (484 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 17m, remaining: ~2h 18m) 681/1894 tested (486 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 17m, remaining: ~2h 18m) 682/1894 tested (487 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 17m, remaining: ~2h 17m) 684/1894 tested (489 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 18m, remaining: ~2h 17m) 685/1894 tested (490 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 18m, remaining: ~2h 17m) 687/1894 tested (492 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 18m, remaining: ~2h 17m) 688/1894 tested (493 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 18m, remaining: ~2h 16m) 690/1894 tested (495 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 18m, remaining: ~2h 16m) 691/1894 tested (496 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 18m, remaining: ~2h 16m) 693/1894 tested (498 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 19m, remaining: ~2h 16m) 694/1894 tested (499 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 19m, remaining: ~2h 16m) 696/1894 tested (501 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 19m, remaining: ~2h 16m) 697/1894 tested (502 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 19m, remaining: ~2h 15m) 699/1894 tested (504 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 19m, remaining: ~2h 15m) 700/1894 tested (505 survived, 62 timed out)
Mutation testing 37% (elapsed: ~1h 19m, remaining: ~2h 15m) 702/1894 tested (507 survived, 62 timed out)
Mutation testing 37% (elapsed: ~1h 20m, remaining: ~2h 15m) 703/1894 tested (508 survived, 62 timed out)
Mutation testing 37% (elapsed: ~1h 20m, remaining: ~2h 15m) 704/1894 tested (509 survived, 62 timed out)
Mutation testing 37% (elapsed: ~1h 20m, remaining: ~2h 15m) 706/1894 tested (511 survived, 62 timed out)
Mutation testing 37% (elapsed: ~1h 20m, remaining: ~2h 15m) 707/1894 tested (512 survived, 62 timed out)
Mutation testing 37% (elapsed: ~1h 20m, remaining: ~2h 14m) 709/1894 tested (514 survived, 62 timed out)
Mutation testing 37% (elapsed: ~1h 20m, remaining: ~2h 14m) 710/1894 tested (515 survived, 62 timed out)
Mutation testing 37% (elapsed: ~1h 21m, remaining: ~2h 14m) 712/1894 tested (517 survived, 62 timed out)
Mutation testing 37% (elapsed: ~1h 21m, remaining: ~2h 14m) 713/1894 tested (518 survived, 62 timed out)
Mutation testing 37% (elapsed: ~1h 21m, remaining: ~2h 14m) 715/1894 tested (520 survived, 62 timed out)
Mutation testing 37% (elapsed: ~1h 21m, remaining: ~2h 14m) 716/1894 tested (521 survived, 62 timed out)
Mutation testing 37% (elapsed: ~1h 21m, remaining: ~2h 13m) 718/1894 tested (523 survived, 62 timed out)
Mutation testing 37% (elapsed: ~1h 21m, remaining: ~2h 13m) 719/1894 tested (524 survived, 62 timed out)
Mutation testing 38% (elapsed: ~1h 22m, remaining: ~2h 13m) 721/1894 tested (526 survived, 62 timed out)
Mutation testing 38% (elapsed: ~1h 22m, remaining: ~2h 13m) 722/1894 tested (527 survived, 62 timed out)
Mutation testing 38% (elapsed: ~1h 22m, remaining: ~2h 13m) 724/1894 tested (529 survived, 62 timed out)
Mutation testing 38% (elapsed: ~1h 22m, remaining: ~2h 13m) 725/1894 tested (530 survived, 62 timed out)
Mutation testing 38% (elapsed: ~1h 22m, remaining: ~2h 12m) 727/1894 tested (532 survived, 62 timed out)
Mutation testing 38% (elapsed: ~1h 22m, remaining: ~2h 12m) 728/1894 tested (533 survived, 62 timed out)
Mutation testing 38% (elapsed: ~1h 23m, remaining: ~2h 12m) 730/1894 tested (535 survived, 62 timed out)
Mutation testing 38% (elapsed: ~1h 23m, remaining: ~2h 12m) 731/1894 tested (536 survived, 62 timed out)
Mutation testing 38% (elapsed: ~1h 23m, remaining: ~2h 12m) 732/1894 tested (537 survived, 62 timed out)
Mutation testing 38% (elapsed: ~1h 23m, remaining: ~2h 11m) 737/1894 tested (539 survived, 62 timed out)
Mutation testing 39% (elapsed: ~1h 23m, remaining: ~2h 10m) 739/1894 tested (539 survived, 62 timed out)
Mutation testing 39% (elapsed: ~1h 23m, remaining: ~2h 10m) 740/1894 tested (540 survived, 62 timed out)
Mutation testing 39% (elapsed: ~1h 24m, remaining: ~2h 10m) 742/1894 tested (542 survived, 62 timed out)
Mutation testing 39% (elapsed: ~1h 24m, remaining: ~2h 10m) 743/1894 tested (543 survived, 62 timed out)
Mutation testing 39% (elapsed: ~1h 24m, remaining: ~2h 10m) 745/1894 tested (545 survived, 62 timed out)
Mutation testing 39% (elapsed: ~1h 24m, remaining: ~2h 10m) 746/1894 tested (546 survived, 62 timed out)
Mutation testing 39% (elapsed: ~1h 24m, remaining: ~2h 9m) 748/1894 tested (548 survived, 62 timed out)
Mutation testing 39% (elapsed: ~1h 24m, remaining: ~2h 9m) 749/1894 tested (549 survived, 62 timed out)
Mutation testing 39% (elapsed: ~1h 25m, remaining: ~2h 9m) 751/1894 tested (551 survived, 62 timed out)
Mutation testing 39% (elapsed: ~1h 25m, remaining: ~2h 9m) 752/1894 tested (552 survived, 62 timed out)
Mutation testing 39% (elapsed: ~1h 25m, remaining: ~2h 9m) 754/1894 tested (554 survived, 62 timed out)
Mutation testing 39% (elapsed: ~1h 25m, remaining: ~2h 8m) 755/1894 tested (555 survived, 62 timed out)
Mutation testing 39% (elapsed: ~1h 25m, remaining: ~2h 8m) 757/1894 tested (557 survived, 62 timed out)
Mutation testing 40% (elapsed: ~1h 25m, remaining: ~2h 8m) 758/1894 tested (558 survived, 62 timed out)
Mutation testing 40% (elapsed: ~1h 26m, remaining: ~2h 8m) 759/1894 tested (559 survived, 62 timed out)
Mutation testing 40% (elapsed: ~1h 26m, remaining: ~2h 8m) 761/1894 tested (561 survived, 62 timed out)
Mutation testing 40% (elapsed: ~1h 26m, remaining: ~2h 8m) 762/1894 tested (562 survived, 62 timed out)
Mutation testing 40% (elapsed: ~1h 26m, remaining: ~2h 7m) 764/1894 tested (564 survived, 62 timed out)
Mutation testing 40% (elapsed: ~1h 26m, remaining: ~2h 7m) 765/1894 tested (565 survived, 62 timed out)
Mutation testing 40% (elapsed: ~1h 26m, remaining: ~2h 7m) 769/1894 tested (567 survived, 62 timed out)
Mutation testing 40% (elapsed: ~1h 27m, remaining: ~2h 6m) 771/1894 tested (568 survived, 62 timed out)
Mutation testing 40% (elapsed: ~1h 27m, remaining: ~2h 6m) 773/1894 tested (569 survived, 62 timed out)
Mutation testing 40% (elapsed: ~1h 27m, remaining: ~2h 6m) 775/1894 tested (571 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 27m, remaining: ~2h 5m) 777/1894 tested (572 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 27m, remaining: ~2h 5m) 778/1894 tested (573 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 27m, remaining: ~2h 5m) 780/1894 tested (575 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 28m, remaining: ~2h 5m) 782/1894 tested (576 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 28m, remaining: ~2h 5m) 783/1894 tested (577 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 28m, remaining: ~2h 4m) 785/1894 tested (579 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 28m, remaining: ~2h 4m) 787/1894 tested (579 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 28m, remaining: ~2h 4m) 787/1894 tested (579 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 28m, remaining: ~2h 4m) 789/1894 tested (580 survived, 63 timed out)
Mutation testing 41% (elapsed: ~1h 29m, remaining: ~2h 4m) 790/1894 tested (581 survived, 63 timed out)
Mutation testing 41% (elapsed: ~1h 29m, remaining: ~2h 4m) 792/1894 tested (583 survived, 63 timed out)
Mutation testing 41% (elapsed: ~1h 29m, remaining: ~2h 4m) 793/1894 tested (584 survived, 63 timed out)
Mutation testing 42% (elapsed: ~1h 29m, remaining: ~2h 3m) 796/1894 tested (586 survived, 63 timed out)
Mutation testing 42% (elapsed: ~1h 29m, remaining: ~2h 3m) 797/1894 tested (587 survived, 63 timed out)
Mutation testing 42% (elapsed: ~1h 29m, remaining: ~2h 3m) 799/1894 tested (588 survived, 63 timed out)
Mutation testing 42% (elapsed: ~1h 30m, remaining: ~2h 2m) 804/1894 tested (590 survived, 63 timed out)
Mutation testing 42% (elapsed: ~1h 30m, remaining: ~2h 1m) 805/1894 tested (591 survived, 63 timed out)
Mutation testing 42% (elapsed: ~1h 30m, remaining: ~2h 1m) 806/1894 tested (592 survived, 63 timed out)
Mutation testing 42% (elapsed: ~1h 30m, remaining: ~2h 1m) 808/1894 tested (594 survived, 63 timed out)
Mutation testing 42% (elapsed: ~1h 30m, remaining: ~2h 1m) 809/1894 tested (595 survived, 63 timed out)
Mutation testing 42% (elapsed: ~1h 30m, remaining: ~2h 1m) 810/1894 tested (595 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 31m, remaining: ~2h 1m) 810/1894 tested (595 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 31m, remaining: ~2h 1m) 811/1894 tested (595 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 31m, remaining: ~2h 1m) 812/1894 tested (595 survived, 66 timed out)
Mutation testing 42% (elapsed: ~1h 31m, remaining: ~2h 1m) 813/1894 tested (596 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 31m, remaining: ~2h 1m) 815/1894 tested (598 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 31m, remaining: ~2h 1m) 816/1894 tested (599 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 32m, remaining: ~2h 1m) 818/1894 tested (601 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 32m, remaining: ~2h 0m) 819/1894 tested (602 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 32m, remaining: ~2h 0m) 821/1894 tested (603 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 32m, remaining: ~2h 0m) 823/1894 tested (605 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 32m, remaining: ~2h 0m) 824/1894 tested (606 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 32m, remaining: ~2h 0m) 826/1894 tested (608 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 33m, remaining: ~1h 59m) 827/1894 tested (609 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 33m, remaining: ~1h 59m) 829/1894 tested (611 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 33m, remaining: ~1h 59m) 830/1894 tested (612 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 33m, remaining: ~1h 59m) 832/1894 tested (614 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 33m, remaining: ~1h 59m) 833/1894 tested (615 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 33m, remaining: ~1h 59m) 835/1894 tested (617 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 34m, remaining: ~1h 58m) 836/1894 tested (618 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 34m, remaining: ~1h 58m) 838/1894 tested (620 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 34m, remaining: ~1h 58m) 839/1894 tested (621 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 34m, remaining: ~1h 58m) 841/1894 tested (623 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 34m, remaining: ~1h 58m) 842/1894 tested (624 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 34m, remaining: ~1h 58m) 843/1894 tested (625 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 35m, remaining: ~1h 57m) 845/1894 tested (627 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 35m, remaining: ~1h 57m) 846/1894 tested (628 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 35m, remaining: ~1h 57m) 848/1894 tested (630 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 35m, remaining: ~1h 57m) 849/1894 tested (631 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 35m, remaining: ~1h 57m) 851/1894 tested (633 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 35m, remaining: ~1h 57m) 852/1894 tested (634 survived, 66 timed out)
Mutation testing 45% (elapsed: ~1h 36m, remaining: ~1h 57m) 853/1894 tested (634 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 36m, remaining: ~1h 57m) 854/1894 tested (635 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 36m, remaining: ~1h 56m) 856/1894 tested (637 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 36m, remaining: ~1h 56m) 857/1894 tested (638 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 36m, remaining: ~1h 56m) 859/1894 tested (640 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 36m, remaining: ~1h 56m) 860/1894 tested (641 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 37m, remaining: ~1h 56m) 861/1894 tested (642 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 37m, remaining: ~1h 56m) 862/1894 tested (642 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 37m, remaining: ~1h 56m) 862/1894 tested (642 survived, 68 timed out)
Mutation testing 45% (elapsed: ~1h 37m, remaining: ~1h 56m) 863/1894 tested (642 survived, 69 timed out)
Mutation testing 45% (elapsed: ~1h 37m, remaining: ~1h 56m) 864/1894 tested (642 survived, 70 timed out)
Mutation testing 45% (elapsed: ~1h 37m, remaining: ~1h 56m) 864/1894 tested (642 survived, 70 timed out)
Mutation testing 45% (elapsed: ~1h 38m, remaining: ~1h 56m) 865/1894 tested (642 survived, 71 timed out)
Mutation testing 45% (elapsed: ~1h 38m, remaining: ~1h 56m) 866/1894 tested (642 survived, 72 timed out)
Mutation testing 45% (elapsed: ~1h 38m, remaining: ~1h 56m) 866/1894 tested (642 survived, 72 timed out)
Mutation testing 45% (elapsed: ~1h 38m, remaining: ~1h 56m) 867/1894 tested (642 survived, 73 timed out)
Mutation testing 45% (elapsed: ~1h 38m, remaining: ~1h 56m) 869/1894 tested (644 survived, 73 timed out)
Mutation testing 45% (elapsed: ~1h 38m, remaining: ~1h 56m) 870/1894 tested (645 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 39m, remaining: ~1h 55m) 875/1894 tested (646 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 39m, remaining: ~1h 54m) 877/1894 tested (648 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 39m, remaining: ~1h 54m) 878/1894 tested (649 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 39m, remaining: ~1h 54m) 879/1894 tested (650 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 39m, remaining: ~1h 54m) 881/1894 tested (652 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 39m, remaining: ~1h 54m) 882/1894 tested (653 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 40m, remaining: ~1h 54m) 884/1894 tested (655 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 40m, remaining: ~1h 54m) 885/1894 tested (656 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 40m, remaining: ~1h 53m) 887/1894 tested (658 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 40m, remaining: ~1h 53m) 888/1894 tested (659 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 40m, remaining: ~1h 53m) 890/1894 tested (661 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 40m, remaining: ~1h 53m) 891/1894 tested (662 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 41m, remaining: ~1h 53m) 893/1894 tested (664 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 41m, remaining: ~1h 53m) 894/1894 tested (665 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 41m, remaining: ~1h 52m) 896/1894 tested (667 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 41m, remaining: ~1h 52m) 897/1894 tested (668 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 41m, remaining: ~1h 52m) 899/1894 tested (670 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 41m, remaining: ~1h 52m) 900/1894 tested (671 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 42m, remaining: ~1h 52m) 902/1894 tested (673 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 42m, remaining: ~1h 52m) 903/1894 tested (674 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 42m, remaining: ~1h 51m) 905/1894 tested (676 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 42m, remaining: ~1h 51m) 906/1894 tested (677 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 42m, remaining: ~1h 51m) 908/1894 tested (679 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 42m, remaining: ~1h 51m) 909/1894 tested (680 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 43m, remaining: ~1h 51m) 910/1894 tested (681 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 43m, remaining: ~1h 51m) 912/1894 tested (681 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 43m, remaining: ~1h 51m) 913/1894 tested (681 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 43m, remaining: ~1h 50m) 915/1894 tested (681 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 43m, remaining: ~1h 50m) 916/1894 tested (681 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 43m, remaining: ~1h 50m) 917/1894 tested (681 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 44m, remaining: ~1h 50m) 919/1894 tested (681 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 44m, remaining: ~1h 50m) 920/1894 tested (682 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 44m, remaining: ~1h 49m) 922/1894 tested (684 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 44m, remaining: ~1h 49m) 923/1894 tested (685 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 44m, remaining: ~1h 49m) 925/1894 tested (687 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 44m, remaining: ~1h 49m) 926/1894 tested (688 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 45m, remaining: ~1h 49m) 928/1894 tested (690 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 45m, remaining: ~1h 49m) 929/1894 tested (691 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 45m, remaining: ~1h 48m) 931/1894 tested (693 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 45m, remaining: ~1h 48m) 932/1894 tested (694 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 45m, remaining: ~1h 48m) 934/1894 tested (696 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 45m, remaining: ~1h 48m) 935/1894 tested (697 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 46m, remaining: ~1h 48m) 937/1894 tested (699 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 46m, remaining: ~1h 48m) 938/1894 tested (700 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 46m, remaining: ~1h 48m) 939/1894 tested (701 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 46m, remaining: ~1h 47m) 941/1894 tested (703 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 46m, remaining: ~1h 47m) 942/1894 tested (704 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 46m, remaining: ~1h 47m) 944/1894 tested (706 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 47m, remaining: ~1h 47m) 945/1894 tested (707 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 47m, remaining: ~1h 47m) 947/1894 tested (709 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 47m, remaining: ~1h 47m) 948/1894 tested (710 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 47m, remaining: ~1h 46m) 950/1894 tested (712 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 47m, remaining: ~1h 46m) 951/1894 tested (713 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 47m, remaining: ~1h 46m) 953/1894 tested (715 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 48m, remaining: ~1h 46m) 954/1894 tested (716 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 48m, remaining: ~1h 46m) 956/1894 tested (718 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 48m, remaining: ~1h 46m) 957/1894 tested (719 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 48m, remaining: ~1h 45m) 959/1894 tested (721 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 48m, remaining: ~1h 45m) 960/1894 tested (722 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 48m, remaining: ~1h 45m) 962/1894 tested (724 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 49m, remaining: ~1h 45m) 963/1894 tested (725 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 49m, remaining: ~1h 45m) 965/1894 tested (727 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 49m, remaining: ~1h 45m) 966/1894 tested (728 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 49m, remaining: ~1h 44m) 968/1894 tested (730 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 49m, remaining: ~1h 44m) 969/1894 tested (731 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 49m, remaining: ~1h 44m) 970/1894 tested (732 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 50m, remaining: ~1h 44m) 972/1894 tested (734 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 50m, remaining: ~1h 44m) 973/1894 tested (735 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 50m, remaining: ~1h 43m) 975/1894 tested (737 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 50m, remaining: ~1h 43m) 976/1894 tested (738 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 50m, remaining: ~1h 43m) 978/1894 tested (740 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 50m, remaining: ~1h 43m) 979/1894 tested (741 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 51m, remaining: ~1h 43m) 981/1894 tested (743 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 51m, remaining: ~1h 43m) 982/1894 tested (744 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 51m, remaining: ~1h 42m) 984/1894 tested (746 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 51m, remaining: ~1h 42m) 985/1894 tested (747 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 51m, remaining: ~1h 42m) 987/1894 tested (749 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 51m, remaining: ~1h 42m) 988/1894 tested (750 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 52m, remaining: ~1h 42m) 990/1894 tested (752 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 52m, remaining: ~1h 42m) 991/1894 tested (753 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 52m, remaining: ~1h 41m) 993/1894 tested (755 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 52m, remaining: ~1h 41m) 994/1894 tested (756 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 52m, remaining: ~1h 41m) 996/1894 tested (758 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 52m, remaining: ~1h 41m) 997/1894 tested (759 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 53m, remaining: ~1h 41m) 999/1894 tested (761 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 53m, remaining: ~1h 41m) 1000/1894 tested (762 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 53m, remaining: ~1h 40m) 1002/1894 tested (764 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 53m, remaining: ~1h 40m) 1003/1894 tested (765 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 53m, remaining: ~1h 40m) 1005/1894 tested (767 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 53m, remaining: ~1h 40m) 1006/1894 tested (768 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 54m, remaining: ~1h 40m) 1007/1894 tested (769 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 54m, remaining: ~1h 40m) 1009/1894 tested (771 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 54m, remaining: ~1h 40m) 1010/1894 tested (772 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 54m, remaining: ~1h 39m) 1012/1894 tested (774 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 54m, remaining: ~1h 39m) 1013/1894 tested (775 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 54m, remaining: ~1h 39m) 1015/1894 tested (777 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 55m, remaining: ~1h 39m) 1016/1894 tested (778 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 55m, remaining: ~1h 39m) 1018/1894 tested (780 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 55m, remaining: ~1h 39m) 1019/1894 tested (781 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 55m, remaining: ~1h 38m) 1021/1894 tested (783 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 55m, remaining: ~1h 38m) 1022/1894 tested (784 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 55m, remaining: ~1h 38m) 1024/1894 tested (786 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 56m, remaining: ~1h 38m) 1025/1894 tested (787 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 56m, remaining: ~1h 38m) 1027/1894 tested (789 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 56m, remaining: ~1h 38m) 1028/1894 tested (790 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 56m, remaining: ~1h 37m) 1030/1894 tested (792 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 56m, remaining: ~1h 37m) 1031/1894 tested (793 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 56m, remaining: ~1h 37m) 1033/1894 tested (795 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 57m, remaining: ~1h 37m) 1034/1894 tested (796 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 57m, remaining: ~1h 37m) 1036/1894 tested (798 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 57m, remaining: ~1h 36m) 1037/1894 tested (799 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 57m, remaining: ~1h 36m) 1038/1894 tested (800 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 57m, remaining: ~1h 36m) 1040/1894 tested (802 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 57m, remaining: ~1h 36m) 1041/1894 tested (803 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 58m, remaining: ~1h 36m) 1043/1894 tested (805 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 58m, remaining: ~1h 36m) 1044/1894 tested (806 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 58m, remaining: ~1h 35m) 1046/1894 tested (808 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 58m, remaining: ~1h 35m) 1047/1894 tested (809 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 58m, remaining: ~1h 35m) 1049/1894 tested (811 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 58m, remaining: ~1h 35m) 1050/1894 tested (812 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 59m, remaining: ~1h 35m) 1052/1894 tested (814 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 59m, remaining: ~1h 35m) 1053/1894 tested (815 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 59m, remaining: ~1h 34m) 1055/1894 tested (817 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 59m, remaining: ~1h 34m) 1056/1894 tested (818 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 59m, remaining: ~1h 34m) 1058/1894 tested (820 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 59m, remaining: ~1h 34m) 1059/1894 tested (821 survived, 73 timed out)
Mutation testing 56% (elapsed: ~2h 0m, remaining: ~1h 34m) 1061/1894 tested (823 survived, 73 timed out)
Mutation testing 56% (elapsed: ~2h 0m, remaining: ~1h 34m) 1062/1894 tested (824 survived, 73 timed out)
Mutation testing 56% (elapsed: ~2h 0m, remaining: ~1h 33m) 1064/1894 tested (826 survived, 73 timed out)
Mutation testing 56% (elapsed: ~2h 0m, remaining: ~1h 33m) 1065/1894 tested (827 survived, 73 timed out)
Mutation testing 56% (elapsed: ~2h 0m, remaining: ~1h 33m) 1067/1894 tested (829 survived, 73 timed out)
Mutation testing 56% (elapsed: ~2h 0m, remaining: ~1h 33m) 1068/1894 tested (830 survived, 73 timed out)
Mutation testing 56% (elapsed: ~2h 1m, remaining: ~1h 33m) 1070/1894 tested (832 survived, 73 timed out)
Mutation testing 56% (elapsed: ~2h 1m, remaining: ~1h 33m) 1071/1894 tested (833 survived, 73 timed out)
Mutation testing 56% (elapsed: ~2h 1m, remaining: ~1h 32m) 1073/1894 tested (835 survived, 73 timed out)
Mutation testing 56% (elapsed: ~2h 1m, remaining: ~1h 32m) 1074/1894 tested (836 survived, 73 timed out)
Mutation testing 56% (elapsed: ~2h 1m, remaining: ~1h 32m) 1075/1894 tested (837 survived, 73 timed out)
Mutation testing 56% (elapsed: ~2h 1m, remaining: ~1h 32m) 1077/1894 tested (839 survived, 73 timed out)
Mutation testing 56% (elapsed: ~2h 2m, remaining: ~1h 32m) 1078/1894 tested (840 survived, 73 timed out)
Mutation testing 57% (elapsed: ~2h 2m, remaining: ~1h 32m) 1080/1894 tested (842 survived, 73 timed out)
Mutation testing 57% (elapsed: ~2h 2m, remaining: ~1h 32m) 1081/1894 tested (843 survived, 73 timed out)
Mutation testing 57% (elapsed: ~2h 2m, remaining: ~1h 31m) 1083/1894 tested (845 survived, 73 timed out)
Mutation testing 57% (elapsed: ~2h 2m, remaining: ~1h 31m) 1084/1894 tested (846 survived, 73 timed out)
Mutation testing 57% (elapsed: ~2h 2m, remaining: ~1h 31m) 1086/1894 tested (848 survived, 73 timed out)
Mutation testing 57% (elapsed: ~2h 3m, remaining: ~1h 31m) 1087/1894 tested (849 survived, 73 timed out)
Mutation testing 57% (elapsed: ~2h 3m, remaining: ~1h 31m) 1089/1894 tested (851 survived, 73 timed out)
Mutation testing 57% (elapsed: ~2h 3m, remaining: ~1h 30m) 1090/1894 tested (852 survived, 73 timed out)
Mutation testing 57% (elapsed: ~2h 3m, remaining: ~1h 30m) 1092/1894 tested (854 survived, 73 timed out)
Mutation testing 57% (elapsed: ~2h 3m, remaining: ~1h 30m) 1093/1894 tested (855 survived, 73 timed out)
Mutation testing 57% (elapsed: ~2h 3m, remaining: ~1h 30m) 1095/1894 tested (857 survived, 73 timed out)
Mutation testing 57% (elapsed: ~2h 4m, remaining: ~1h 30m) 1096/1894 tested (858 survived, 73 timed out)
Mutation testing 57% (elapsed: ~2h 4m, remaining: ~1h 30m) 1098/1894 tested (860 survived, 73 timed out)
Mutation testing 58% (elapsed: ~2h 4m, remaining: ~1h 29m) 1099/1894 tested (861 survived, 73 timed out)
Mutation testing 58% (elapsed: ~2h 4m, remaining: ~1h 29m) 1101/1894 tested (863 survived, 73 timed out)
Mutation testing 58% (elapsed: ~2h 4m, remaining: ~1h 29m) 1102/1894 tested (864 survived, 73 timed out)
Mutation testing 58% (elapsed: ~2h 4m, remaining: ~1h 29m) 1104/1894 tested (866 survived, 73 timed out)
Mutation testing 58% (elapsed: ~2h 5m, remaining: ~1h 29m) 1105/1894 tested (867 survived, 73 timed out)
Mutation testing 58% (elapsed: ~2h 5m, remaining: ~1h 28m) 1107/1894 tested (869 survived, 73 timed out)
Mutation testing 58% (elapsed: ~2h 5m, remaining: ~1h 28m) 1108/1894 tested (870 survived, 73 timed out)
Mutation testing 58% (elapsed: ~2h 5m, remaining: ~1h 28m) 1109/1894 tested (871 survived, 73 timed out)
Mutation testing 58% (elapsed: ~2h 5m, remaining: ~1h 28m) 1111/1894 tested (873 survived, 73 timed out)
Mutation testing 58% (elapsed: ~2h 5m, remaining: ~1h 28m) 1112/1894 tested (874 survived, 73 timed out)
Mutation testing 58% (elapsed: ~2h 6m, remaining: ~1h 28m) 1114/1894 tested (876 survived, 73 timed out)
Mutation testing 58% (elapsed: ~2h 6m, remaining: ~1h 28m) 1115/1894 tested (877 survived, 73 timed out)
Mutation testing 58% (elapsed: ~2h 6m, remaining: ~1h 27m) 1117/1894 tested (879 survived, 73 timed out)
Mutation testing 59% (elapsed: ~2h 6m, remaining: ~1h 27m) 1118/1894 tested (880 survived, 73 timed out)
Mutation testing 59% (elapsed: ~2h 6m, remaining: ~1h 27m) 1120/1894 tested (882 survived, 73 timed out)
Mutation testing 59% (elapsed: ~2h 6m, remaining: ~1h 27m) 1121/1894 tested (883 survived, 73 timed out)
Mutation testing 59% (elapsed: ~2h 7m, remaining: ~1h 27m) 1123/1894 tested (885 survived, 73 timed out)
Mutation testing 59% (elapsed: ~2h 7m, remaining: ~1h 27m) 1124/1894 tested (886 survived, 73 timed out)
Mutation testing 59% (elapsed: ~2h 7m, remaining: ~1h 26m) 1126/1894 tested (888 survived, 73 timed out)
Mutation testing 59% (elapsed: ~2h 7m, remaining: ~1h 26m) 1127/1894 tested (889 survived, 73 timed out)
Mutation testing 59% (elapsed: ~2h 7m, remaining: ~1h 26m) 1129/1894 tested (891 survived, 73 timed out)
Mutation testing 59% (elapsed: ~2h 7m, remaining: ~1h 26m) 1130/1894 tested (892 survived, 73 timed out)
Mutation testing 59% (elapsed: ~2h 8m, remaining: ~1h 26m) 1132/1894 tested (894 survived, 73 timed out)
Mutation testing 59% (elapsed: ~2h 8m, remaining: ~1h 26m) 1133/1894 tested (895 survived, 73 timed out)
Mutation testing 59% (elapsed: ~2h 8m, remaining: ~1h 25m) 1135/1894 tested (897 survived, 73 timed out)
Mutation testing 59% (elapsed: ~2h 8m, remaining: ~1h 25m) 1136/1894 tested (898 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 8m, remaining: ~1h 25m) 1138/1894 tested (900 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 8m, remaining: ~1h 25m) 1139/1894 tested (901 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 9m, remaining: ~1h 25m) 1141/1894 tested (903 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 9m, remaining: ~1h 25m) 1142/1894 tested (904 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 9m, remaining: ~1h 24m) 1144/1894 tested (906 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 9m, remaining: ~1h 24m) 1145/1894 tested (907 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 9m, remaining: ~1h 24m) 1146/1894 tested (908 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 9m, remaining: ~1h 24m) 1148/1894 tested (910 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 10m, remaining: ~1h 24m) 1149/1894 tested (911 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 10m, remaining: ~1h 24m) 1151/1894 tested (913 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 10m, remaining: ~1h 23m) 1152/1894 tested (914 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 10m, remaining: ~1h 23m) 1154/1894 tested (916 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 10m, remaining: ~1h 23m) 1155/1894 tested (917 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 10m, remaining: ~1h 23m) 1157/1894 tested (919 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 11m, remaining: ~1h 23m) 1158/1894 tested (920 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 11m, remaining: ~1h 22m) 1160/1894 tested (922 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 11m, remaining: ~1h 22m) 1161/1894 tested (923 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 11m, remaining: ~1h 22m) 1163/1894 tested (925 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 11m, remaining: ~1h 22m) 1164/1894 tested (926 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 11m, remaining: ~1h 22m) 1166/1894 tested (928 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 12m, remaining: ~1h 22m) 1167/1894 tested (929 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 12m, remaining: ~1h 21m) 1169/1894 tested (931 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 12m, remaining: ~1h 21m) 1170/1894 tested (932 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 12m, remaining: ~1h 21m) 1172/1894 tested (934 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 12m, remaining: ~1h 21m) 1173/1894 tested (935 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 12m, remaining: ~1h 21m) 1175/1894 tested (937 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 13m, remaining: ~1h 21m) 1176/1894 tested (938 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 13m, remaining: ~1h 20m) 1178/1894 tested (940 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 13m, remaining: ~1h 20m) 1179/1894 tested (941 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 13m, remaining: ~1h 20m) 1181/1894 tested (943 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 13m, remaining: ~1h 20m) 1182/1894 tested (944 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 13m, remaining: ~1h 20m) 1183/1894 tested (945 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 14m, remaining: ~1h 20m) 1185/1894 tested (947 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 14m, remaining: ~1h 20m) 1186/1894 tested (948 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 14m, remaining: ~1h 19m) 1188/1894 tested (950 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 14m, remaining: ~1h 19m) 1189/1894 tested (951 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 14m, remaining: ~1h 19m) 1191/1894 tested (953 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 14m, remaining: ~1h 19m) 1192/1894 tested (954 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 15m, remaining: ~1h 19m) 1194/1894 tested (956 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 15m, remaining: ~1h 19m) 1195/1894 tested (957 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 15m, remaining: ~1h 18m) 1197/1894 tested (959 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 15m, remaining: ~1h 18m) 1198/1894 tested (960 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 15m, remaining: ~1h 18m) 1200/1894 tested (962 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 15m, remaining: ~1h 18m) 1201/1894 tested (963 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 16m, remaining: ~1h 18m) 1203/1894 tested (965 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 16m, remaining: ~1h 18m) 1204/1894 tested (966 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 16m, remaining: ~1h 17m) 1206/1894 tested (968 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 16m, remaining: ~1h 17m) 1207/1894 tested (969 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 16m, remaining: ~1h 17m) 1209/1894 tested (971 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 16m, remaining: ~1h 17m) 1210/1894 tested (972 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 17m, remaining: ~1h 17m) 1212/1894 tested (974 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 17m, remaining: ~1h 17m) 1213/1894 tested (975 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 17m, remaining: ~1h 16m) 1215/1894 tested (977 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 17m, remaining: ~1h 16m) 1216/1894 tested (978 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 17m, remaining: ~1h 16m) 1218/1894 tested (980 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 17m, remaining: ~1h 16m) 1219/1894 tested (981 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 18m, remaining: ~1h 16m) 1221/1894 tested (983 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 18m, remaining: ~1h 15m) 1222/1894 tested (984 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 18m, remaining: ~1h 15m) 1223/1894 tested (985 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 18m, remaining: ~1h 15m) 1225/1894 tested (987 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 18m, remaining: ~1h 15m) 1226/1894 tested (988 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 18m, remaining: ~1h 15m) 1228/1894 tested (990 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 19m, remaining: ~1h 15m) 1229/1894 tested (991 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 19m, remaining: ~1h 14m) 1231/1894 tested (993 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 19m, remaining: ~1h 14m) 1232/1894 tested (994 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 19m, remaining: ~1h 14m) 1234/1894 tested (996 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 19m, remaining: ~1h 14m) 1235/1894 tested (997 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 19m, remaining: ~1h 14m) 1237/1894 tested (999 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 20m, remaining: ~1h 14m) 1238/1894 tested (1000 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 20m, remaining: ~1h 13m) 1240/1894 tested (1002 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 20m, remaining: ~1h 13m) 1241/1894 tested (1003 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 20m, remaining: ~1h 13m) 1243/1894 tested (1005 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 20m, remaining: ~1h 13m) 1244/1894 tested (1006 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 20m, remaining: ~1h 13m) 1246/1894 tested (1008 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 21m, remaining: ~1h 13m) 1247/1894 tested (1009 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 21m, remaining: ~1h 12m) 1249/1894 tested (1011 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 21m, remaining: ~1h 12m) 1250/1894 tested (1012 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 21m, remaining: ~1h 12m) 1252/1894 tested (1014 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 21m, remaining: ~1h 12m) 1253/1894 tested (1015 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 21m, remaining: ~1h 12m) 1255/1894 tested (1017 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 22m, remaining: ~1h 12m) 1256/1894 tested (1018 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 22m, remaining: ~1h 12m) 1257/1894 tested (1019 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 22m, remaining: ~1h 11m) 1259/1894 tested (1021 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 22m, remaining: ~1h 11m) 1260/1894 tested (1022 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 22m, remaining: ~1h 11m) 1262/1894 tested (1024 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 22m, remaining: ~1h 11m) 1263/1894 tested (1025 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 23m, remaining: ~1h 11m) 1265/1894 tested (1027 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 23m, remaining: ~1h 11m) 1266/1894 tested (1028 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 23m, remaining: ~1h 10m) 1268/1894 tested (1030 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 23m, remaining: ~1h 10m) 1269/1894 tested (1031 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 23m, remaining: ~1h 10m) 1271/1894 tested (1033 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 23m, remaining: ~1h 10m) 1272/1894 tested (1034 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 24m, remaining: ~1h 10m) 1274/1894 tested (1036 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 24m, remaining: ~1h 9m) 1275/1894 tested (1037 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 24m, remaining: ~1h 9m) 1277/1894 tested (1039 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 24m, remaining: ~1h 9m) 1278/1894 tested (1040 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 24m, remaining: ~1h 9m) 1280/1894 tested (1042 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 24m, remaining: ~1h 9m) 1281/1894 tested (1043 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 25m, remaining: ~1h 9m) 1283/1894 tested (1045 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 25m, remaining: ~1h 8m) 1284/1894 tested (1046 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 25m, remaining: ~1h 8m) 1286/1894 tested (1048 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 25m, remaining: ~1h 8m) 1287/1894 tested (1049 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 25m, remaining: ~1h 8m) 1289/1894 tested (1051 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 25m, remaining: ~1h 8m) 1290/1894 tested (1052 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 26m, remaining: ~1h 8m) 1292/1894 tested (1054 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 26m, remaining: ~1h 7m) 1293/1894 tested (1055 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 26m, remaining: ~1h 7m) 1294/1894 tested (1056 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 26m, remaining: ~1h 7m) 1296/1894 tested (1058 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 26m, remaining: ~1h 7m) 1297/1894 tested (1059 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 26m, remaining: ~1h 7m) 1299/1894 tested (1061 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 27m, remaining: ~1h 7m) 1300/1894 tested (1062 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 27m, remaining: ~1h 6m) 1302/1894 tested (1064 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 27m, remaining: ~1h 6m) 1303/1894 tested (1065 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 27m, remaining: ~1h 6m) 1305/1894 tested (1067 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 27m, remaining: ~1h 6m) 1306/1894 tested (1068 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 27m, remaining: ~1h 6m) 1308/1894 tested (1070 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 28m, remaining: ~1h 6m) 1309/1894 tested (1071 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 28m, remaining: ~1h 5m) 1311/1894 tested (1073 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 28m, remaining: ~1h 5m) 1312/1894 tested (1074 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 28m, remaining: ~1h 5m) 1314/1894 tested (1076 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 28m, remaining: ~1h 5m) 1315/1894 tested (1077 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 28m, remaining: ~1h 5m) 1317/1894 tested (1079 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 29m, remaining: ~1h 5m) 1318/1894 tested (1080 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 29m, remaining: ~1h 4m) 1320/1894 tested (1082 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 29m, remaining: ~1h 4m) 1321/1894 tested (1083 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 29m, remaining: ~1h 4m) 1323/1894 tested (1085 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 29m, remaining: ~1h 4m) 1324/1894 tested (1086 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 29m, remaining: ~1h 4m) 1326/1894 tested (1088 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 30m, remaining: ~1h 4m) 1327/1894 tested (1089 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 30m, remaining: ~1h 3m) 1329/1894 tested (1091 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 30m, remaining: ~1h 3m) 1330/1894 tested (1092 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 30m, remaining: ~1h 3m) 1332/1894 tested (1094 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 30m, remaining: ~1h 3m) 1333/1894 tested (1095 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 30m, remaining: ~1h 3m) 1334/1894 tested (1096 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 31m, remaining: ~1h 3m) 1336/1894 tested (1098 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 31m, remaining: ~1h 2m) 1337/1894 tested (1099 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 31m, remaining: ~1h 2m) 1339/1894 tested (1101 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 31m, remaining: ~1h 2m) 1340/1894 tested (1102 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 31m, remaining: ~1h 2m) 1342/1894 tested (1104 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 31m, remaining: ~1h 2m) 1343/1894 tested (1105 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 32m, remaining: ~1h 2m) 1345/1894 tested (1107 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 32m, remaining: ~1h 1m) 1346/1894 tested (1108 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 32m, remaining: ~1h 1m) 1348/1894 tested (1110 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 32m, remaining: ~1h 1m) 1349/1894 tested (1111 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 32m, remaining: ~1h 1m) 1351/1894 tested (1113 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 32m, remaining: ~1h 1m) 1352/1894 tested (1114 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 33m, remaining: ~1h 1m) 1354/1894 tested (1116 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 33m, remaining: ~1h 0m) 1355/1894 tested (1117 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 33m, remaining: ~1h 0m) 1357/1894 tested (1119 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 33m, remaining: ~1h 0m) 1358/1894 tested (1120 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 33m, remaining: ~1h 0m) 1360/1894 tested (1122 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 33m, remaining: ~1h 0m) 1361/1894 tested (1123 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 34m, remaining: ~59m) 1363/1894 tested (1125 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 34m, remaining: ~59m) 1364/1894 tested (1126 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 34m, remaining: ~59m) 1366/1894 tested (1128 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 34m, remaining: ~59m) 1367/1894 tested (1129 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 34m, remaining: ~59m) 1369/1894 tested (1131 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 34m, remaining: ~59m) 1370/1894 tested (1132 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 35m, remaining: ~58m) 1372/1894 tested (1134 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 35m, remaining: ~58m) 1373/1894 tested (1135 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 35m, remaining: ~58m) 1374/1894 tested (1136 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 35m, remaining: ~58m) 1376/1894 tested (1138 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 35m, remaining: ~58m) 1377/1894 tested (1139 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 35m, remaining: ~58m) 1379/1894 tested (1141 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 36m, remaining: ~58m) 1380/1894 tested (1142 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 36m, remaining: ~57m) 1382/1894 tested (1144 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 36m, remaining: ~57m) 1383/1894 tested (1145 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 36m, remaining: ~57m) 1385/1894 tested (1147 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 36m, remaining: ~57m) 1386/1894 tested (1148 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 36m, remaining: ~57m) 1388/1894 tested (1150 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 37m, remaining: ~57m) 1389/1894 tested (1151 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 37m, remaining: ~56m) 1392/1894 tested (1153 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 37m, remaining: ~56m) 1395/1894 tested (1154 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 37m, remaining: ~56m) 1396/1894 tested (1155 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 37m, remaining: ~55m) 1398/1894 tested (1157 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 37m, remaining: ~55m) 1399/1894 tested (1158 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 38m, remaining: ~55m) 1401/1894 tested (1160 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 38m, remaining: ~55m) 1402/1894 tested (1161 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 38m, remaining: ~55m) 1404/1894 tested (1163 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 38m, remaining: ~55m) 1405/1894 tested (1164 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 38m, remaining: ~54m) 1407/1894 tested (1166 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 38m, remaining: ~54m) 1408/1894 tested (1167 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 39m, remaining: ~54m) 1410/1894 tested (1169 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 39m, remaining: ~54m) 1411/1894 tested (1170 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 39m, remaining: ~54m) 1413/1894 tested (1172 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 39m, remaining: ~54m) 1414/1894 tested (1173 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 39m, remaining: ~53m) 1416/1894 tested (1175 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 39m, remaining: ~53m) 1417/1894 tested (1176 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 40m, remaining: ~53m) 1418/1894 tested (1177 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 40m, remaining: ~53m) 1420/1894 tested (1179 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 40m, remaining: ~53m) 1421/1894 tested (1180 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 40m, remaining: ~53m) 1423/1894 tested (1182 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 40m, remaining: ~53m) 1424/1894 tested (1183 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 40m, remaining: ~52m) 1426/1894 tested (1185 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 41m, remaining: ~52m) 1427/1894 tested (1186 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 41m, remaining: ~52m) 1429/1894 tested (1188 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 41m, remaining: ~52m) 1430/1894 tested (1189 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 41m, remaining: ~52m) 1432/1894 tested (1191 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 41m, remaining: ~52m) 1433/1894 tested (1192 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 41m, remaining: ~51m) 1435/1894 tested (1194 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 42m, remaining: ~51m) 1436/1894 tested (1195 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 42m, remaining: ~51m) 1438/1894 tested (1197 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 42m, remaining: ~51m) 1439/1894 tested (1198 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 42m, remaining: ~51m) 1441/1894 tested (1200 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 42m, remaining: ~50m) 1442/1894 tested (1201 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 42m, remaining: ~50m) 1444/1894 tested (1203 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 43m, remaining: ~50m) 1445/1894 tested (1204 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 43m, remaining: ~50m) 1447/1894 tested (1206 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 43m, remaining: ~50m) 1448/1894 tested (1207 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 43m, remaining: ~50m) 1450/1894 tested (1209 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 43m, remaining: ~49m) 1451/1894 tested (1210 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 43m, remaining: ~49m) 1453/1894 tested (1212 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 44m, remaining: ~49m) 1454/1894 tested (1213 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 44m, remaining: ~49m) 1455/1894 tested (1214 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 44m, remaining: ~49m) 1457/1894 tested (1216 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 44m, remaining: ~49m) 1458/1894 tested (1217 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 44m, remaining: ~48m) 1460/1894 tested (1219 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 44m, remaining: ~48m) 1461/1894 tested (1220 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 45m, remaining: ~48m) 1463/1894 tested (1222 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 45m, remaining: ~48m) 1464/1894 tested (1223 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 45m, remaining: ~48m) 1466/1894 tested (1225 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 45m, remaining: ~48m) 1467/1894 tested (1226 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 45m, remaining: ~47m) 1469/1894 tested (1228 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 45m, remaining: ~47m) 1470/1894 tested (1229 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 46m, remaining: ~47m) 1472/1894 tested (1231 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 46m, remaining: ~47m) 1473/1894 tested (1232 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 46m, remaining: ~47m) 1475/1894 tested (1234 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 46m, remaining: ~47m) 1476/1894 tested (1235 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 46m, remaining: ~46m) 1478/1894 tested (1237 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 46m, remaining: ~46m) 1479/1894 tested (1238 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 47m, remaining: ~46m) 1481/1894 tested (1240 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 47m, remaining: ~46m) 1482/1894 tested (1241 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 47m, remaining: ~46m) 1484/1894 tested (1243 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 47m, remaining: ~46m) 1485/1894 tested (1244 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 47m, remaining: ~45m) 1487/1894 tested (1246 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 47m, remaining: ~45m) 1488/1894 tested (1247 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 48m, remaining: ~45m) 1490/1894 tested (1249 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 48m, remaining: ~45m) 1491/1894 tested (1250 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 48m, remaining: ~45m) 1493/1894 tested (1252 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 48m, remaining: ~45m) 1494/1894 tested (1253 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 48m, remaining: ~45m) 1495/1894 tested (1254 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 48m, remaining: ~44m) 1497/1894 tested (1256 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 49m, remaining: ~44m) 1498/1894 tested (1257 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 49m, remaining: ~44m) 1500/1894 tested (1259 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 49m, remaining: ~44m) 1501/1894 tested (1260 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 49m, remaining: ~44m) 1503/1894 tested (1262 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 49m, remaining: ~43m) 1504/1894 tested (1263 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 49m, remaining: ~43m) 1506/1894 tested (1265 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 50m, remaining: ~43m) 1507/1894 tested (1266 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 50m, remaining: ~43m) 1509/1894 tested (1268 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 50m, remaining: ~43m) 1510/1894 tested (1269 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 50m, remaining: ~43m) 1512/1894 tested (1271 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 50m, remaining: ~42m) 1513/1894 tested (1272 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 50m, remaining: ~42m) 1515/1894 tested (1274 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 51m, remaining: ~42m) 1516/1894 tested (1275 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 51m, remaining: ~42m) 1518/1894 tested (1277 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 51m, remaining: ~42m) 1519/1894 tested (1278 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 51m, remaining: ~42m) 1521/1894 tested (1280 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 51m, remaining: ~41m) 1522/1894 tested (1281 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 51m, remaining: ~41m) 1524/1894 tested (1283 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 52m, remaining: ~41m) 1525/1894 tested (1284 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 52m, remaining: ~41m) 1527/1894 tested (1286 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 52m, remaining: ~41m) 1528/1894 tested (1287 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 52m, remaining: ~41m) 1530/1894 tested (1289 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 52m, remaining: ~40m) 1531/1894 tested (1290 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 52m, remaining: ~40m) 1532/1894 tested (1291 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 53m, remaining: ~40m) 1534/1894 tested (1293 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 53m, remaining: ~40m) 1535/1894 tested (1294 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 53m, remaining: ~40m) 1537/1894 tested (1296 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 53m, remaining: ~40m) 1538/1894 tested (1297 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 53m, remaining: ~39m) 1540/1894 tested (1299 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 53m, remaining: ~39m) 1541/1894 tested (1300 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 54m, remaining: ~39m) 1543/1894 tested (1302 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 54m, remaining: ~39m) 1544/1894 tested (1303 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 54m, remaining: ~39m) 1546/1894 tested (1305 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 54m, remaining: ~39m) 1547/1894 tested (1306 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 54m, remaining: ~38m) 1549/1894 tested (1308 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 54m, remaining: ~38m) 1550/1894 tested (1309 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 55m, remaining: ~38m) 1552/1894 tested (1311 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 55m, remaining: ~38m) 1553/1894 tested (1312 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 55m, remaining: ~38m) 1555/1894 tested (1314 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 55m, remaining: ~38m) 1556/1894 tested (1315 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 55m, remaining: ~37m) 1558/1894 tested (1317 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 55m, remaining: ~37m) 1559/1894 tested (1318 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 56m, remaining: ~37m) 1560/1894 tested (1319 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 56m, remaining: ~37m) 1562/1894 tested (1321 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 56m, remaining: ~37m) 1563/1894 tested (1322 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 56m, remaining: ~37m) 1565/1894 tested (1324 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 56m, remaining: ~37m) 1566/1894 tested (1325 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 56m, remaining: ~36m) 1568/1894 tested (1327 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 57m, remaining: ~36m) 1569/1894 tested (1328 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 57m, remaining: ~36m) 1571/1894 tested (1330 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 57m, remaining: ~36m) 1572/1894 tested (1331 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 57m, remaining: ~36m) 1574/1894 tested (1333 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 57m, remaining: ~35m) 1575/1894 tested (1334 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 57m, remaining: ~35m) 1577/1894 tested (1336 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 58m, remaining: ~35m) 1578/1894 tested (1337 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 58m, remaining: ~35m) 1580/1894 tested (1339 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 58m, remaining: ~35m) 1581/1894 tested (1340 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 58m, remaining: ~35m) 1583/1894 tested (1342 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 58m, remaining: ~34m) 1584/1894 tested (1343 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 58m, remaining: ~34m) 1586/1894 tested (1345 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 59m, remaining: ~34m) 1587/1894 tested (1346 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 59m, remaining: ~34m) 1589/1894 tested (1348 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 59m, remaining: ~34m) 1590/1894 tested (1349 survived, 73 timed out)
Mutation testing 84% (elapsed: ~2h 59m, remaining: ~34m) 1592/1894 tested (1351 survived, 73 timed out)
Mutation testing 84% (elapsed: ~2h 59m, remaining: ~33m) 1593/1894 tested (1352 survived, 73 timed out)
Mutation testing 84% (elapsed: ~2h 59m, remaining: ~33m) 1595/1894 tested (1354 survived, 73 timed out)
Mutation testing 84% (elapsed: ~3h 0m, remaining: ~33m) 1596/1894 tested (1355 survived, 73 timed out)
Mutation testing 84% (elapsed: ~3h 0m, remaining: ~33m) 1597/1894 tested (1356 survived, 73 timed out)
Mutation testing 84% (elapsed: ~3h 0m, remaining: ~33m) 1599/1894 tested (1358 survived, 73 timed out)
Mutation testing 84% (elapsed: ~3h 0m, remaining: ~33m) 1600/1894 tested (1359 survived, 73 timed out)
Mutation testing 84% (elapsed: ~3h 0m, remaining: ~32m) 1602/1894 tested (1361 survived, 73 timed out)
Mutation testing 84% (elapsed: ~3h 0m, remaining: ~32m) 1603/1894 tested (1362 survived, 73 timed out)
Mutation testing 84% (elapsed: ~3h 1m, remaining: ~32m) 1605/1894 tested (1364 survived, 73 timed out)
Mutation testing 84% (elapsed: ~3h 1m, remaining: ~32m) 1606/1894 tested (1365 survived, 73 timed out)
Mutation testing 84% (elapsed: ~3h 1m, remaining: ~32m) 1608/1894 tested (1367 survived, 73 timed out)
Mutation testing 84% (elapsed: ~3h 1m, remaining: ~32m) 1609/1894 tested (1368 survived, 73 timed out)
Mutation testing 85% (elapsed: ~3h 1m, remaining: ~31m) 1611/1894 tested (1370 survived, 73 timed out)
Mutation testing 85% (elapsed: ~3h 1m, remaining: ~31m) 1612/1894 tested (1371 survived, 73 timed out)
Mutation testing 85% (elapsed: ~3h 2m, remaining: ~31m) 1614/1894 tested (1373 survived, 73 timed out)
Mutation testing 85% (elapsed: ~3h 2m, remaining: ~31m) 1615/1894 tested (1374 survived, 73 timed out)
Mutation testing 85% (elapsed: ~3h 2m, remaining: ~31m) 1617/1894 tested (1376 survived, 73 timed out)
Mutation testing 85% (elapsed: ~3h 2m, remaining: ~31m) 1618/1894 tested (1377 survived, 73 timed out)
Mutation testing 85% (elapsed: ~3h 2m, remaining: ~30m) 1620/1894 tested (1379 survived, 73 timed out)
Mutation testing 85% (elapsed: ~3h 2m, remaining: ~30m) 1621/1894 tested (1380 survived, 73 timed out)
Mutation testing 85% (elapsed: ~3h 3m, remaining: ~30m) 1623/1894 tested (1382 survived, 73 timed out)
Mutation testing 85% (elapsed: ~3h 3m, remaining: ~30m) 1624/1894 tested (1383 survived, 73 timed out)
Mutation testing 85% (elapsed: ~3h 3m, remaining: ~30m) 1626/1894 tested (1385 survived, 73 timed out)
Mutation testing 85% (elapsed: ~3h 3m, remaining: ~30m) 1627/1894 tested (1386 survived, 73 timed out)
Mutation testing 86% (elapsed: ~3h 3m, remaining: ~29m) 1629/1894 tested (1388 survived, 73 timed out)
Mutation testing 86% (elapsed: ~3h 3m, remaining: ~29m) 1630/1894 tested (1389 survived, 73 timed out)
Mutation testing 86% (elapsed: ~3h 4m, remaining: ~29m) 1632/1894 tested (1391 survived, 73 timed out)
Mutation testing 86% (elapsed: ~3h 4m, remaining: ~29m) 1633/1894 tested (1392 survived, 73 timed out)
Mutation testing 86% (elapsed: ~3h 4m, remaining: ~29m) 1635/1894 tested (1394 survived, 73 timed out)
Mutation testing 86% (elapsed: ~3h 4m, remaining: ~29m) 1636/1894 tested (1395 survived, 73 timed out)
Mutation testing 86% (elapsed: ~3h 4m, remaining: ~28m) 1637/1894 tested (1396 survived, 73 timed out)
Mutation testing 86% (elapsed: ~3h 4m, remaining: ~28m) 1639/1894 tested (1398 survived, 73 timed out)
Mutation testing 86% (elapsed: ~3h 5m, remaining: ~28m) 1640/1894 tested (1399 survived, 73 timed out)
Mutation testing 86% (elapsed: ~3h 5m, remaining: ~28m) 1642/1894 tested (1401 survived, 73 timed out)
Mutation testing 86% (elapsed: ~3h 5m, remaining: ~28m) 1643/1894 tested (1402 survived, 73 timed out)
Mutation testing 86% (elapsed: ~3h 5m, remaining: ~28m) 1645/1894 tested (1404 survived, 73 timed out)
Mutation testing 86% (elapsed: ~3h 5m, remaining: ~27m) 1646/1894 tested (1405 survived, 73 timed out)
Mutation testing 87% (elapsed: ~3h 5m, remaining: ~27m) 1648/1894 tested (1407 survived, 73 timed out)
Mutation testing 87% (elapsed: ~3h 6m, remaining: ~27m) 1649/1894 tested (1408 survived, 73 timed out)
Mutation testing 87% (elapsed: ~3h 6m, remaining: ~27m) 1651/1894 tested (1410 survived, 73 timed out)
Mutation testing 87% (elapsed: ~3h 6m, remaining: ~27m) 1652/1894 tested (1411 survived, 73 timed out)
Mutation testing 87% (elapsed: ~3h 6m, remaining: ~27m) 1654/1894 tested (1413 survived, 73 timed out)
Mutation testing 87% (elapsed: ~3h 6m, remaining: ~26m) 1655/1894 tested (1414 survived, 73 timed out)
Mutation testing 87% (elapsed: ~3h 6m, remaining: ~26m) 1657/1894 tested (1416 survived, 73 timed out)
Mutation testing 87% (elapsed: ~3h 7m, remaining: ~26m) 1658/1894 tested (1417 survived, 73 timed out)
Mutation testing 87% (elapsed: ~3h 7m, remaining: ~26m) 1660/1894 tested (1419 survived, 73 timed out)
Mutation testing 87% (elapsed: ~3h 7m, remaining: ~26m) 1661/1894 tested (1420 survived, 73 timed out)
Mutation testing 87% (elapsed: ~3h 7m, remaining: ~26m) 1663/1894 tested (1422 survived, 73 timed out)
Mutation testing 87% (elapsed: ~3h 7m, remaining: ~25m) 1664/1894 tested (1423 survived, 73 timed out)
Mutation testing 87% (elapsed: ~3h 7m, remaining: ~25m) 1666/1894 tested (1425 survived, 73 timed out)
Mutation testing 88% (elapsed: ~3h 8m, remaining: ~25m) 1667/1894 tested (1426 survived, 73 timed out)
Mutation testing 88% (elapsed: ~3h 8m, remaining: ~25m) 1669/1894 tested (1428 survived, 73 timed out)
Mutation testing 88% (elapsed: ~3h 8m, remaining: ~25m) 1670/1894 tested (1429 survived, 73 timed out)
Mutation testing 88% (elapsed: ~3h 8m, remaining: ~25m) 1671/1894 tested (1430 survived, 73 timed out)
Mutation testing 88% (elapsed: ~3h 8m, remaining: ~24m) 1673/1894 tested (1432 survived, 73 timed out)
Mutation testing 88% (elapsed: ~3h 8m, remaining: ~24m) 1674/1894 tested (1433 survived, 73 timed out)
Mutation testing 88% (elapsed: ~3h 9m, remaining: ~24m) 1676/1894 tested (1435 survived, 73 timed out)
Mutation testing 88% (elapsed: ~3h 9m, remaining: ~24m) 1677/1894 tested (1436 survived, 73 timed out)
Mutation testing 88% (elapsed: ~3h 9m, remaining: ~24m) 1679/1894 tested (1438 survived, 73 timed out)
Mutation testing 88% (elapsed: ~3h 9m, remaining: ~24m) 1680/1894 tested (1439 survived, 73 timed out)
Mutation testing 88% (elapsed: ~3h 9m, remaining: ~23m) 1682/1894 tested (1441 survived, 73 timed out)
Mutation testing 88% (elapsed: ~3h 9m, remaining: ~23m) 1683/1894 tested (1442 survived, 73 timed out)
Mutation testing 88% (elapsed: ~3h 10m, remaining: ~23m) 1685/1894 tested (1444 survived, 73 timed out)
Mutation testing 89% (elapsed: ~3h 10m, remaining: ~23m) 1686/1894 tested (1445 survived, 73 timed out)
Mutation testing 89% (elapsed: ~3h 10m, remaining: ~23m) 1688/1894 tested (1447 survived, 73 timed out)
Mutation testing 89% (elapsed: ~3h 10m, remaining: ~23m) 1689/1894 tested (1448 survived, 73 timed out)
Mutation testing 89% (elapsed: ~3h 10m, remaining: ~22m) 1691/1894 tested (1450 survived, 73 timed out)
Mutation testing 89% (elapsed: ~3h 10m, remaining: ~22m) 1692/1894 tested (1451 survived, 73 timed out)
Mutation testing 89% (elapsed: ~3h 11m, remaining: ~22m) 1694/1894 tested (1453 survived, 73 timed out)
Mutation testing 89% (elapsed: ~3h 11m, remaining: ~22m) 1695/1894 tested (1454 survived, 73 timed out)
Mutation testing 89% (elapsed: ~3h 11m, remaining: ~22m) 1697/1894 tested (1456 survived, 73 timed out)
Mutation testing 89% (elapsed: ~3h 11m, remaining: ~22m) 1698/1894 tested (1457 survived, 73 timed out)
Mutation testing 89% (elapsed: ~3h 11m, remaining: ~21m) 1700/1894 tested (1459 survived, 73 timed out)
Mutation testing 89% (elapsed: ~3h 11m, remaining: ~21m) 1701/1894 tested (1460 survived, 73 timed out)
Mutation testing 89% (elapsed: ~3h 12m, remaining: ~21m) 1703/1894 tested (1462 survived, 73 timed out)
Mutation testing 89% (elapsed: ~3h 12m, remaining: ~21m) 1704/1894 tested (1463 survived, 73 timed out)
Mutation testing 90% (elapsed: ~3h 12m, remaining: ~21m) 1706/1894 tested (1465 survived, 73 timed out)
Mutation testing 90% (elapsed: ~3h 12m, remaining: ~21m) 1707/1894 tested (1466 survived, 73 timed out)
Mutation testing 90% (elapsed: ~3h 12m, remaining: ~20m) 1708/1894 tested (1467 survived, 73 timed out)
Mutation testing 90% (elapsed: ~3h 12m, remaining: ~20m) 1710/1894 tested (1469 survived, 73 timed out)
Mutation testing 90% (elapsed: ~3h 13m, remaining: ~20m) 1711/1894 tested (1470 survived, 73 timed out)
Mutation testing 90% (elapsed: ~3h 13m, remaining: ~20m) 1713/1894 tested (1472 survived, 73 timed out)
Mutation testing 90% (elapsed: ~3h 13m, remaining: ~20m) 1714/1894 tested (1473 survived, 73 timed out)
Mutation testing 90% (elapsed: ~3h 13m, remaining: ~20m) 1716/1894 tested (1475 survived, 73 timed out)
Mutation testing 90% (elapsed: ~3h 13m, remaining: ~19m) 1717/1894 tested (1476 survived, 73 timed out)
Mutation testing 90% (elapsed: ~3h 13m, remaining: ~19m) 1719/1894 tested (1478 survived, 73 timed out)
Mutation testing 90% (elapsed: ~3h 14m, remaining: ~19m) 1720/1894 tested (1479 survived, 73 timed out)
Mutation testing 90% (elapsed: ~3h 14m, remaining: ~19m) 1722/1894 tested (1481 survived, 73 timed out)
Mutation testing 90% (elapsed: ~3h 14m, remaining: ~19m) 1723/1894 tested (1482 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 14m, remaining: ~19m) 1725/1894 tested (1484 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 14m, remaining: ~18m) 1726/1894 tested (1485 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 14m, remaining: ~18m) 1728/1894 tested (1487 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 15m, remaining: ~18m) 1729/1894 tested (1488 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 15m, remaining: ~18m) 1731/1894 tested (1490 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 15m, remaining: ~18m) 1732/1894 tested (1491 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 15m, remaining: ~18m) 1734/1894 tested (1493 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 15m, remaining: ~17m) 1735/1894 tested (1494 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 15m, remaining: ~17m) 1737/1894 tested (1496 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 16m, remaining: ~17m) 1738/1894 tested (1497 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 16m, remaining: ~17m) 1740/1894 tested (1499 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 16m, remaining: ~17m) 1741/1894 tested (1500 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 16m, remaining: ~17m) 1743/1894 tested (1502 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 16m, remaining: ~16m) 1744/1894 tested (1503 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 16m, remaining: ~16m) 1745/1894 tested (1504 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 17m, remaining: ~16m) 1747/1894 tested (1506 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 17m, remaining: ~16m) 1748/1894 tested (1507 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 17m, remaining: ~16m) 1750/1894 tested (1509 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 17m, remaining: ~16m) 1751/1894 tested (1510 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 17m, remaining: ~15m) 1753/1894 tested (1512 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 17m, remaining: ~15m) 1754/1894 tested (1513 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 18m, remaining: ~15m) 1756/1894 tested (1515 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 18m, remaining: ~15m) 1757/1894 tested (1516 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 18m, remaining: ~15m) 1759/1894 tested (1518 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 18m, remaining: ~15m) 1760/1894 tested (1519 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 18m, remaining: ~14m) 1762/1894 tested (1521 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 18m, remaining: ~14m) 1763/1894 tested (1522 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 19m, remaining: ~14m) 1765/1894 tested (1524 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 19m, remaining: ~14m) 1766/1894 tested (1525 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 19m, remaining: ~14m) 1768/1894 tested (1527 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 19m, remaining: ~14m) 1769/1894 tested (1528 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 19m, remaining: ~13m) 1771/1894 tested (1530 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 19m, remaining: ~13m) 1772/1894 tested (1531 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 20m, remaining: ~13m) 1774/1894 tested (1533 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 20m, remaining: ~13m) 1775/1894 tested (1534 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 20m, remaining: ~13m) 1776/1894 tested (1535 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 20m, remaining: ~13m) 1778/1894 tested (1537 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 20m, remaining: ~12m) 1779/1894 tested (1538 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 20m, remaining: ~12m) 1781/1894 tested (1540 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 21m, remaining: ~12m) 1782/1894 tested (1541 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 21m, remaining: ~12m) 1784/1894 tested (1543 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 21m, remaining: ~12m) 1785/1894 tested (1544 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 21m, remaining: ~12m) 1787/1894 tested (1546 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 21m, remaining: ~11m) 1788/1894 tested (1547 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 21m, remaining: ~11m) 1790/1894 tested (1549 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 22m, remaining: ~11m) 1791/1894 tested (1550 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 22m, remaining: ~11m) 1793/1894 tested (1552 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 22m, remaining: ~11m) 1794/1894 tested (1553 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 22m, remaining: ~11m) 1796/1894 tested (1555 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 22m, remaining: ~10m) 1797/1894 tested (1556 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 22m, remaining: ~10m) 1799/1894 tested (1558 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 23m, remaining: ~10m) 1800/1894 tested (1559 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 23m, remaining: ~10m) 1802/1894 tested (1561 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 23m, remaining: ~10m) 1803/1894 tested (1562 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 23m, remaining: ~10m) 1805/1894 tested (1564 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 23m, remaining: ~9m) 1806/1894 tested (1565 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 23m, remaining: ~9m) 1808/1894 tested (1567 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 24m, remaining: ~9m) 1809/1894 tested (1568 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 24m, remaining: ~9m) 1810/1894 tested (1569 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 24m, remaining: ~9m) 1812/1894 tested (1571 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 24m, remaining: ~9m) 1813/1894 tested (1572 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 24m, remaining: ~8m) 1815/1894 tested (1574 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 24m, remaining: ~8m) 1816/1894 tested (1575 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 25m, remaining: ~8m) 1818/1894 tested (1577 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 25m, remaining: ~8m) 1819/1894 tested (1578 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 25m, remaining: ~8m) 1821/1894 tested (1580 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 25m, remaining: ~8m) 1822/1894 tested (1581 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 25m, remaining: ~7m) 1824/1894 tested (1583 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 25m, remaining: ~7m) 1825/1894 tested (1584 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 26m, remaining: ~7m) 1827/1894 tested (1586 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 26m, remaining: ~7m) 1828/1894 tested (1587 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 26m, remaining: ~7m) 1830/1894 tested (1589 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 26m, remaining: ~7m) 1831/1894 tested (1590 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 26m, remaining: ~6m) 1833/1894 tested (1592 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 26m, remaining: ~6m) 1834/1894 tested (1593 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 27m, remaining: ~6m) 1836/1894 tested (1595 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 27m, remaining: ~6m) 1837/1894 tested (1596 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 27m, remaining: ~6m) 1839/1894 tested (1598 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 27m, remaining: ~6m) 1840/1894 tested (1599 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 27m, remaining: ~5m) 1842/1894 tested (1601 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 27m, remaining: ~5m) 1843/1894 tested (1602 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 28m, remaining: ~5m) 1845/1894 tested (1604 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 28m, remaining: ~5m) 1846/1894 tested (1605 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 28m, remaining: ~5m) 1847/1894 tested (1606 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 28m, remaining: ~5m) 1849/1894 tested (1608 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 28m, remaining: ~4m) 1850/1894 tested (1609 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 28m, remaining: ~4m) 1852/1894 tested (1611 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 29m, remaining: ~4m) 1853/1894 tested (1612 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 29m, remaining: ~4m) 1855/1894 tested (1614 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 29m, remaining: ~4m) 1856/1894 tested (1615 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 29m, remaining: ~4m) 1858/1894 tested (1617 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 29m, remaining: ~3m) 1859/1894 tested (1618 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 29m, remaining: ~3m) 1861/1894 tested (1620 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 30m, remaining: ~3m) 1862/1894 tested (1621 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 30m, remaining: ~3m) 1864/1894 tested (1623 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 30m, remaining: ~3m) 1865/1894 tested (1624 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 30m, remaining: ~3m) 1867/1894 tested (1626 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 30m, remaining: ~2m) 1868/1894 tested (1627 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 30m, remaining: ~2m) 1870/1894 tested (1629 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 31m, remaining: ~2m) 1872/1894 tested (1630 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 31m, remaining: ~2m) 1873/1894 tested (1631 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 31m, remaining: ~2m) 1875/1894 tested (1633 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 31m, remaining: ~2m) 1876/1894 tested (1634 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 31m, remaining: ~1m) 1878/1894 tested (1636 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 31m, remaining: ~1m) 1879/1894 tested (1637 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 32m, remaining: ~1m) 1881/1894 tested (1639 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 32m, remaining: ~1m) 1882/1894 tested (1640 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 32m, remaining: ~1m) 1884/1894 tested (1642 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 32m, remaining: ~1m) 1885/1894 tested (1643 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 32m, remaining: <1m) 1887/1894 tested (1645 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 32m, remaining: <1m) 1888/1894 tested (1646 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 33m, remaining: <1m) 1890/1894 tested (1648 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 33m, remaining: <1m) 1891/1894 tested (1649 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 33m, remaining: <1m) 1893/1894 tested (1651 survived, 73 timed out)

All tests
  ✓ All tests (killed 169)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof window === "function") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("sun");

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap(0);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap(head);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "hello"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           123("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           null("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("deferred", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(undefined, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(null, definition);

[Survived] PrecomputedMutator
q.js:42:16
-       } else if (typeof exports === "object" && typeof module === "object") {
+       } else if (typeof void 0) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && !define.amd) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd === 1) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && !/^define\.amd/.test(define)) {

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(definition());

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(function () {});

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(void 0);

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses !== undefined) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (!ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.ok()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.fail()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!0()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!NaN()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== true && typeof self !== false) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" || typeof self !== " undefined") {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (domain && domain.exit()) {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (domain === 'exit') {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.exit();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   noop();

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, 0);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.push()) {

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length % 2) {

[Survived] PrecomputedMutator
q.js:129:20
-               task = laterQueue.pop();
+               task = laterQueue.shift();

[Survived] PrecomputedMutator
q.js:130:13
-               runSingle(task);
+               noop(task);

[Survived] PrecomputedMutator
q.js:130:23
-               runSingle(task);
+               runSingle(function () {});

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (typeof window !== "undefined") {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (false) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (true) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (window.isNodeJS) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.simple();

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.complex();

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1000);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if ("hello") {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (0) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (1 / 0) {

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.remove();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.pop();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (!flushing || Math.random() < 0.5) {

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (!flushing && !Math.random() < 0.5) {

[Survived] PrecomputedMutator
q.js:197:30
-               process.nextTick(flush);
+               process.nextTick(flush.bind(null));

[Survived] PrecomputedMutator
q.js:200:16
-       } else if (typeof setImmediate === "function") {
+       } else if (typeof Promise === "function") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "object") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(requestTick.apply(window, [flush]));

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(document, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, null);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, undefined);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, "flush");

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(flush.bind(null));

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(flush.toString());

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "undefined") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "function") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "object") {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               1 + channel.port2.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(Infinity);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(FLUSH, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(requestTick, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout([], 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 2);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout("foo");

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(undefined);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(null);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setAnytime(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(function () {
+     throw "Error!";
+   }, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(function () {/* empty function */}, 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Math.random());

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (!!flushing) {

[Survived] PrecomputedMutator
q.js:263:30
-           return call.apply(f, arguments);
+           return call.apply(f, Object.create(arguments));

[Survived] PrecomputedMutator
q.js:263:30
-           return call.apply(f, arguments);
+           return call.apply(f, [...arguments]);

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length <= 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length >= 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length !== 1) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (0);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (1.1);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (-1);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index in self) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (this.index) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index > length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index <= length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (length - index) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; !(index >= length); index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; --index) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (this[index] === value) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (this[index] !== value) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(this[index] + basis);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + Math.sqrt(index));

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(null, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(undefined, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] + 1, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 2], index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], incrementedIndex);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], decrementedIndex);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index *= 2);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length - 1; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i % 2 === 0; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i -= 10) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i + 1] === value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] = value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               basis(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               null(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               undefined(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, self, index, value));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(self, index, value, thisp));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(value, index, thisp, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(function () {
+     return;
+   }, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, null, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, Infinity, index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, this.length - index - 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, Math.random() * this.length, self));

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {
+     key: value
+   }) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in Symbol('key')) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && typeof object[key] !== "undefined") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) || typeof object[key] === "undefined") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) !== typeof object[key] !== "undefined") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty([object])) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty([object.prototype])) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty([hasOwnProperty])) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (!object_hasOwnProperty(object, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty('', key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key += 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key = 0)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push("value");

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(Math.floor(Math.random() * 100));

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(null);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           Object.prototype(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           Function.prototype(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           Array.prototype(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception[0]) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(typeof exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (false) {

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = !promise; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = undefined; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = "Hello"; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p && 1; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p instanceof Object; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.sink) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.sink) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.sink.sink) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) && 1) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter_", {
+     value: p.stackCounter,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(undefined, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty([], "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty('foo', "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCount__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "stackCounter", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "stack", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.pop(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.shift(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.slice(p.stackCounter + 1));

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.pop(p.stackCounter));

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.splice(p.stackCounter + 1));

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.toString());

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.name);

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "<!-- Our friends at Hackbass #Testing Generator Consortium recommend avoiding whitespace in error messages. -->\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR.toUpperCase() + "\n");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatenatedStacks);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(stacks.join(""));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(stacks.reverse().join("\n").reverse());

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(promise[concatedStacks]);

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error.__stack__ = stack);

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error.stack = stack);

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error.stack, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(promise.stack, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(QReturnValue, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "error.stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "error.stacktrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: null,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: undefined,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:403:17
-       var lines = stackString.split("\n");
+       var lines = stackString.slice("\n");

[Survived] PrecomputedMutator
q.js:403:17
-       var lines = stackString.split("\n");
+       var lines = stackString.substring("\n");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = this.length; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = undefined; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i = 0) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i = Infinity) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (isInternalFrame(line)) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isNodeInternalFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!typeof isInternalFrame === "function"(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line > 5) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line <= 5) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line[0] > 5) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !lineNumber >= qEndingLine(line) && line) {

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line + 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line * 2);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line - 1);

[Survived] PrecomputedMutator
q.js:412:12
-       return desiredLines.join("\n");
+       return desiredLines.unshift("\n");

[Survived] PrecomputedMutator
q.js:412:12
-       return desiredLines.join("\n");
+       return desiredLines.slice("\n");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return ~stackLine.indexOf("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.contains("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine + "abc");

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.slice(1));

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.replace(":", ""));

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "Hello, world!"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], undefined(attempt1[2])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.match(/^at <external>/g));

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split("at")[1].trim());

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.substring(stackLine.indexOf("at")).trim());

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number("myfilename.js")];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine + "1");

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.substring(2));

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.toUpperCase());

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3 && attempt3[1] !== undefined) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3 && attempt3[1] === undefined) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3 && attempt3[1] instanceof Error) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "qqq"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "xxxx"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "#$%&"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[4])];

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":"));

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.substring(0, stackLine.lastIndexOf(":")));

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.replace(/^.*?:/, ""));

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber == null) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (!fileNameAndLineNumber.hasOwnProperty("fileName")) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber && !fileNameAndLineNumber.hasOwnProperty("fileName")) {

[Survived] PrecomputedMutator
q.js:466:21
-           var lines = e.stack.split("\n");
+           var lines = e.message.split("\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(" ");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("hello");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf(",") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("|") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[0]) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console === "undefined") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn === "function123") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.apply(this, arguments));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.call(this, arguments));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.bind(this, arguments));

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, "Hello, world!");

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (isPromise(value)) {

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (Object.prototype.toString.call(value) === '[object Promise]') {

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(null);

[Survived] PrecomputedMutator
q.js:559:33
-       var promise = object_create(Promise.prototype);
+       var promise = object_create(Object.create(Promise.prototype));

[Survived] PrecomputedMutator
q.js:563:13
-           if (messages) {
+           if (Array.isArray(messages)) {

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op !== "when" && operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[0]) { // progress operand

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push("hello");

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(1 + 1);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise + 1, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise * 2, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.then(function (value) {
+     return value + 1;
+   }), args);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages == false) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages === false) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length > 0) {

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue + 1(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue - 1(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue * 2(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(2);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(!resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise || 0);

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === resolvedPromise) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue != resolvedPromise) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue != resolvedPromise.promise) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (messages.length > 0) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (longStackSupport === true) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (!Q.longStackSupport || !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && hasStacks && false) {

[Survived] PrecomputedMutator
q.js:604:29
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.length(e.stack.indexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.slice(0, e.stack.indexOf("\n")).length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stackLength("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.type("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.message("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("Arbitrary String") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("Applying XOR operation to the stack trace") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("Using a different string concatenation method") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!Q.longStackSupport || !hasStacks) {

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(null, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(true, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(message, message);

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== true) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(become(value));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value + 1));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (progress) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (!progress) {

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress + 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress - 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(2 * progress);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (!PLACEHOLDER) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (~PLACEHOLDER) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (PLACEHOLDER + 0) {

[Survived] PrecomputedMutator
q.js:679:13
-               self.reject(error);
+               this.reject(error);

[Survived] PrecomputedMutator
q.js:679:13
-               self.reject(error);
+               deferred.reject(error);

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length >= 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.lenth % 2 === 0) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.fulfill(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(1);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(2);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve([]);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 2)));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 3)));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 1, 1)));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_map(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_filter(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_reduce(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 2), 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 1), 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 0, 1), 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, Array.prototype.slice.call(arguments, 2)));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, Array.prototype.slice.call(arguments, 3)));

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver != "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver != "function") {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = deferring();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = definitelyDeferred();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(null);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(undefined);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(Math.random());

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject(1), deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify(1), deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve(reject), deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify.bind(null));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify.apply(undefined));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify.call(null));

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.fulfill(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           promise.reject(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           Promise.reject(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(1);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject({
+     message: "Error"
+   });

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x * y).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(null);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(new Error());

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, that, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x < y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x > y) {

[Survived] PrecomputedMutator
q.js:766:9
-           for (var i = 0, len = answerPs.length; i < len; i++) {
-               Q(answerPs[i]).then(resolve, reject);
-           }
+           for (var i = 10, len = answerPs.length; i < len; i++) {
+     Q(answerPs[i]).then(resolve, reject);
+   }

[Survived] PrecomputedMutator
q.js:766:9
-           for (var i = 0, len = answerPs.length; i < len; i++) {
-               Q(answerPs[i]).then(resolve, reject);
-           }
+           for (var i = 0, len = answerPs.length + 100; i < len; i++) {
+     Q(answerPs[i]).then(resolve, reject);
+   }

[Survived] PrecomputedMutator
q.js:766:9
-           for (var i = 0, len = answerPs.length; i < len; i++) {
-               Q(answerPs[i]).then(resolve, reject);
-           }
+           for (var i = 0, len = answerPs.length * 2; i < len; i++) {
+     Q(answerPs[i]).then(resolve, reject);
+   }

[Survived] PrecomputedMutator
q.js:766:9
-           for (var i = 0, len = answerPs.length; i < len; i++) {
-               Q(answerPs[i]).then(resolve, reject);
-           }
+           for (var i = 0; i >= len; i--) {
+     Q(answerPs[i]).then(resolve, reject);
+   }

[Survived] PrecomputedMutator
q.js:766:9
-           for (var i = 0, len = answerPs.length; i < len; i++) {
-               Q(answerPs[i]).then(resolve, reject);
-           }
+           for (var i = len; i >= 0; i--) {
+     Q(answerPs[i]).then(resolve, reject);
+   }

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len + 1; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(_rejected, _rejected);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(_fulfilled, _rejected);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i++]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve(), reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(deferred.resolve(), reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(deferred.deferred.resolve(), reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, null);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return null(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return undefined(Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all());

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.race(undefined));

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve(undefined));

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (typeof inspect !== "function") {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (Promise.prototype.isPrototypeOf(inspect)) {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (descriptor[op] + 1) {

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(Q.race(promise), args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.fulfill, op, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "‌uncaught", [op]);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "‌fulfilled", [value]);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.then(function () {}), op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(Object.create(promise), op, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, 1 + args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args + 1);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args.length);

[Survived] PrecomputedMutator
q.js:813:22
-               result = reject(exception);
+               result = false(exception);

[Survived] PrecomputedMutator
q.js:813:22
-               result = reject(exception);
+               result = void 0(exception);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(reject(null));

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(reject(new Error("Some other error")));

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect()) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.call(promise)) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.bind(promise)) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "rejected" && inspected.reason !== void 0) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "rejected" && inspected.reason instanceof TypeError) {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "pending" && inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "settled") {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, Q.Promise);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(new Error(exception), self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(console.log(exception), self);

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(newValue) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:878:17
-               if (done) {
+               if (done == true) {

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (void 0) {

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed((value + 1).toString());

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value * 2 + 1);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value.toLowerCase());

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.reject(e)) {

[Survived] PrecomputedMutator
q.js:903:17
-                   Q.onerror(e);
+                   Q.onerror = Q.stacktrace(e);

[Survived] PrecomputedMutator
q.js:903:17
-                   Q.onerror(e);
+                   Q.onerror = Q.stacktrace.cancel(e);

[Survived] PrecomputedMutator
q.js:903:17
-                   Q.onerror(e);
+                   Q.onerror = Q.stacktrace.refresh(e);

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw == false) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw === null) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw !== false) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.reject(newValue);

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.resolve(newValue);

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               promise.reject(newValue);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(promise.inspect()).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(promise.resolve()).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Q(promise)).tap(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.nearer(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.when(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.inspect(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q(null));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q(undefined));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q.reject(new Error('different error')));

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return this(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.reject(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return promise.throw(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall("hello").thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value + 1).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(new Q.Promise(() => {
+     throw new Error('test');
+   }));

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(Q.Promise.resolve(value * 2));

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(Q.Promise.reject(new Error('test')));

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed.reverse());

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed.map(func));

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed.filter(func));

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(null).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(undefined).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q("foo").then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(function () {
+     throw new Error('error');
+   }, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function (error) {
+     throw error;
+   }, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function (error) {
+     return "ERROR";
+   }, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function (error) {
+     return Q.reject(error);
+   }, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function (value) {
+     return value;
+   });

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function () {
+     return Q(function () {
+       return;
+     });
+   });

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(new Error()).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve({});

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return undefined;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q('').thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(false).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(undefined).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject([]);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(Promise.reject(reason));

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isObject(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (typeof value === "Promise") {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (!isFulfilled(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isRejected(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise("null")) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(NaN)) {

[Survived] PrecomputedMutator
q.js:992:25
-           var inspected = value.inspect();
+           var inspected = value['inspect']();

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:1011:21
-       return isObject(object) && typeof object.then === "function";
+       return isObject(object && object.then) && typeof object.then === "function";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise || isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise && isFulfilled(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise && !isRejected(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object === null) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object === "string") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object === Promise.resolve()) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && object().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && object.value().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.isRejected().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return !this.isFulfilled().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.isPending().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.then()) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.isFulfilled()) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(undefined) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return none(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return null(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === 'rejected') && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.rejected) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.fulfilled) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return rejection.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return promise.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections > 1) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections >= 1) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections < 1) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections == false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections != false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections != true) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, -promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, null) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise + true) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, reason);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, new Error(reason));

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejectionTracker", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejected", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.stack, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.message, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", new Error(reason), promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   unhandledRejections.push(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   untrackRejection(promise);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(Q.getUnhandledReasons()[0]);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(untrackRejection());

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && typeof reason.stack === "undefined") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && typeof reason.stack !== "function") {

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.pop("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(Math.ceil(reason));

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(1 + reason);

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== true) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledReasons);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(reportedUnhandledRejections);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.concat(reportedUnhandledRejections));

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(Math.floor(Math.random() * unhandledRejections.length), promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at = -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at = 1) {

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, false);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, "abc");

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport > -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport >= 0) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport < reportedUnhandledRejections.length) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at] + 1, promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("myRejectionHandled", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("undefined", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit(null, unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons.shift(), promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[0]);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[0]);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(reportedUnhandledRejections.length - 1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport < reportedUnhandledRejections.length - 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(reportedUnhandledRejections.length - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(reportedUnhandledRejections[0], 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(reportedUnhandledRejections[atReport - 1], 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 1000);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.slice(at, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at | 1, 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, unhandledRejections.length - 2);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 100);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, NaN);

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledRejections = []();

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledReasons.length = 0();

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       reportedUnhandledRejections = []();

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(true);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(reason);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       untrackRejection(rejection, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(new Promise(() => {
+     throw reason;
+   }), reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, 42);

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name == null) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (!name) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return console.log(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return null(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return undefined(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply([], args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, 1 + args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, "abc");

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(null);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply("test");

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(this, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, []);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, null);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, {
+     args
+   });

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(null);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(Math.PI);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, promise);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, Q(args));

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, Object.keys(arguments));

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(undefined);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys([]);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, undefined);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, "deferred.notifyError");

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, null);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               reject(exception);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return this.field(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return this.field = value(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch("object", op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op === null, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op === undefined, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op != null && op != void 0, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[len(args) - 1]);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[len(args) - 1][0]);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return 5(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return undefined(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return null(object).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(undefined).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q([]).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(apply, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(call, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(run, rejected);

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.then().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.race().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.any().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply([array.length]);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply([array[0]]);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply([this.length]);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return rejected.apply(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.bind(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return undefined(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(this, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(42, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, value);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (null === StopIteration) {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (undefined === StopIteration) {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (isStopIteration !== StopIteration) {

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generator[verb + 1](arg);

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = null(arg);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg + 1);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg * 2);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg - 10);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return Q.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject("ERROR");

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(null);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(undefined);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (!result.done) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value === undefined) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value === 'rejected') {

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(endl);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.err, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(new Error("test"), callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, null, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, undefined, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, Promise.resolve(result.value), errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, errback.dispatch);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, Send(object, op, args));

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, Promise.resolve(object).then(op, args));

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg.value);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg[0]);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg + 1);

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isNotIteration(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.name !== "StopIteration") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (!isIteration(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration + 1(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration || true(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration && false(exception)) {

[Survived] PrecomputedMutator
q.js:1314:32
-                           return Q(exception.value);
+                           return undefined(exception.value);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(true);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(null);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, undefined, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, null, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, function () {}, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return result(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result[0], callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.slice(1), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, Q.reject, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, Q.defer().reject, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, Q.failed, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, undefined);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, null);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, reject);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(0);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({});

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(1, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, arguments[0]);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, this);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind("next", callback, errback));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind("throw", callback, Q.return));

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuex, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(breakx, "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "nextTick");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "prev");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "all");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuation));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(Q.sync(arg).throw);

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(error, "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind("error", "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(() => {
+     throw new Error();
+   }, "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "error");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "console.log");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "Return");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return reject();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return deferred.resolve();

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.Australian(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.Canadian(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.Discover(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(Math.random())());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(Math.PI)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(undefined)());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, any(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, some(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(undefined);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(null);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply({});

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return result[verb].apply(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return generator[verb].apply(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return makeGenerator[verb].apply(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(1, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply("string", args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.shift());

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.pop());

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, undefined);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch("op", [args]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(null, [op, args]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return object.dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return object[dispatch](op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return undefined(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return this.resolve(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(false).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + "imagineASuffix", args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op.toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(42, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, undefined);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, function () {
+     return "I'm a very confused placeholder";
+   });

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.someOtherMethod, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(someOtherDeferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(this.deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op * 2, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op - 1, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, "args");

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, 5);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("apply", [key, []]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return null(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return undefined(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return 5(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(void 0).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(object.value).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(object[0]).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("apply", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("throw", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", "myKey");

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", key.substring(1));

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", undefined);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set");

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch([]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch(Q);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", ["key"]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", {
+     key: value
+   });

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key + value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value * 2]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, Q(value)]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return 1 + 1(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(0).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(undefined).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("add", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("abc", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch(null, [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, null]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return Q.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("replace", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("newSet", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [null, key]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, "key"]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("void", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("null", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("typeof", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return undefined(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return "Hello, world!"(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q("").dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(42).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(undefined).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("+", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("_", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key + 1]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key - 1]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", ["key"]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("get", [value]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch(undefined, [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key + '_buggy']);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key - 1]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q({}).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("add", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("multiply", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.concat("Mutated")]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", ["Mutated name", args]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [person, array_slice(names, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.prototype.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(Q).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(dispatch).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(Q.send).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("put", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("set", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(...arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(...arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(...arguments, arguments.length - 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, "DUMMY"(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, "DUMMY".length(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, 0(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments.length, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(undefined, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("apply", [name, args]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("call", [name, args]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("get", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("send", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("squirrel", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(promises, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, promises[1]]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 2))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 3))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 4))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, null(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(1 + 1, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(x => x, 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1.0)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, true)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return q(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return this(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("undefined", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("null", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 1, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, "args"]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [this, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [globalThis, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [object, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch1("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch === isPromise("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("map", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, arguments]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.concat(arguments)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [this, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return promise(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return name(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return 5(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(null).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q({}).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(42).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, arguments]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, "hello world"]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, [3, 2, 1]]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(args.slice(1))]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(this.args)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, [](arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, null(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(args, 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([args], 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(Promise.resolve(args), 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, promises.length)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, arguments.length - 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, arguments.length + 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [undefined, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.reject("apply", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.Promise.dispatch("apply", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply2", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 1, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 0, -1)]);

[Survived] PrecomputedMutator
q.js:1527:44
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_splice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:44
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array.length(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(args)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments[0])]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(promise.args)]);

[Survived] PrecomputedMutator
q.js:1537:19
-       var promise = Q(object);
+       var promise = undefined(object);

[Survived] PrecomputedMutator
q.js:1537:19
-       var promise = Q(object);
+       var promise = null(object);

[Survived] PrecomputedMutator
q.js:1537:19
-       var promise = Q(object);
+       var promise = 0(object);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q({});

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(Q.defer());

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(void 0, args);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args, 1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_reverse(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_length(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_sort(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_filter(arguments, function (arg) {
+     return arg !== 1;
+   }), 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 1 + 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 1 / 0);

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               void 0(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               null(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               undefined(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(function () {
+     return arguments;
+   }())

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(function () {
+     return arguments();
+   }())

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_reverse(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_sort(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat([](arguments))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice("foo"))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(0))

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = array_reverse(arguments);

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = array.length - 1(arguments);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice([]);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(this);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               ["hello", "world"](array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1, 2))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_keys(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_split(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_push(arguments))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(array_slice(array_slice(arguments, 1), 1)))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [name]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.reject(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.defer(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.negate(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.key).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object[0]).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.property).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("valueOf", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("hasOwnProperty", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("prototype", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", {});

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", [1]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", null);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return method = deferred.resolve("keys", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return method = Q.when("keys", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return method = Q.apply("keys", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", void 0);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", undefined || []);

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   isPromise(promise) && (typeof snapshot === "undefined" || snapshot.state === "fulfilled")

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   !isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   isPromise(promise) && (snapshot = promise.inspect()).state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise + 1) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise - 1) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return 1;
+   })) &&

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise["state"]()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect << 1()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (--pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (!promises.length) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               undefined(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               null(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve([promises[0], promises[1]]);

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           Q.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index + 1,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index - 1,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: "foo",
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount <= 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return race(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(void 0);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(null);

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (!promises.includes(null)) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Promise.reject();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onRejected, onFulfilled, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onProgress, onFulfilled, onRejected));

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, _ => onFulfilled(), onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, null, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onAny);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               undefined(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               promise.reject(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(result + 1);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(result * 2);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(result.length);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.always(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject({
+     message: "Q can't get fulfillment value from any promise, all promises were rejected. Last error message: " + err.message
+   });

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject({
+     message: "Q can't get fulfillment value from any promise, all promises were rejected. Last error message: " + err
+   });

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject({
+     message: "Q can't get fulfillment value from any promise, all promises were rejected. Last error message: none"
+   });

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.inspect());

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(void 0);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Promise.reject());

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate("allRejected");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate("allSettled");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate("settled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(function resolve(promise) {
+     return promise;
+   }, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(function reject(error) {
+     return error;
+   }, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(function immediate(value) {
+     return value;
+   }, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "spread", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allFulfilled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allRejected");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "alwaysFulfilled");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(0), Q.reject);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises.shift(), Q.defer);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises.pop(), Q.delay);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = Q.map(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = promise.inspect(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(null, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(0, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(undefined, Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject("Testing mutation 1"));

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject("Testing mutation 2"));

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, undefined);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(undefined);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(null);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when({});

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return undefined(promise, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when("foo", noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(undefined, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, Q.resolve(), noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, Q.reject(), noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, Q.somethingElse(), noop);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return anyResolved(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return noneResolved(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(promises[0]);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(promises[promises.length - 1]);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.concat()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.filter(() => false)).allSettled();

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = Q.when(promise);

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = Promise.reject(promise);

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = Q.reject(promise);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(null);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(Math.random());

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return null();

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return undefined();

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.then();

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(null, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(0, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(undefined, regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, promise.state);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, promise.then(function () {
+     return "fulfilled";
+   }, function () {
+     return "rejected";
+   }, function () {
+     return "pending";
+   }));

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, rejected, void 0);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, void 0, resolved);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(null).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(undefined).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(Q.reject(object)).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(NaN, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(void 1, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, Q.rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, Promise.rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, deferred.rejected);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then("hello", 3, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(blue).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then("string", void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(true, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(false, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, NaN, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, progressed[0]);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, progressed, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then.foo(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(1, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(true, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(promise.then(function () {
+     throw new Error("intentional error");
+   }), void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, promise, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, undefined);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, function () {});

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return ["Q"](object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(NaN)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Promise.resolve(object))["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(object.then(function () {
+     throw Error("This is a bug");
+   }))["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](void 0);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](when(callback));

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = null(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = 1(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = "Q"(callback);

[Survived] PrecomputedMutator
q.js:1787:16
-           return callback.fcall().then(function () {
+           return callback.call().then(function () {

[Survived] PrecomputedMutator
q.js:1787:16
-           return callback.fcall().then(function () {
+           return callback.apply().then(function () {

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done([null, fulfilled, rejected]);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(Q.allSettled([fulfilled, rejected, progress]));

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return this(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return undefined(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q({}).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(undefined).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(trace.message, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(resolve, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, resolved, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, new Error(reason), progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, deferred.resolve(), progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, () => {});

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, rejected => {});

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(promise);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise, null);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(0, promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(undefined, promise);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, null);

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (Q.onerror()) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (undefined) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           Q(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(undefined, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, fulfilled, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, void 0, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, undefined, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, function () {}) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, Q) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.apply(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(null));

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(0, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, function () {});

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, function () {
+     throw new Error("Unhandled error");
+   });

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, function (error) {
+     throw error;
+   });

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(42).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q("Hello, world!").timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(false).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout("0", error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(Infinity, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(NaN, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, promise.reject(error));

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (!error || "object" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           undefined(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(promise);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           undefined && clearTimeout(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearTimeout >> 1(timeoutId);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           void 0(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(5);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           null(exception);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== void 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout > 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (!timeout) {

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(void 0).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay('10000');

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout + 1000);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout - 1000);

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = deferred.reject();

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = null();

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = undefined();

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(42);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return 1(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return "hello"(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(Q.reject('error')).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(0);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = undefined(args);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       varArgs.push(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       newArgs.push(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       [](deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.notify());

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(timeoutId + 100).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(ms - 50).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(Math.random() * 1000).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.throw);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(Q.error);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(1, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 1 + 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return this.denodeify(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return undefined(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return deferred.makeNodeResolver(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return "foo";
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(typeof args.pop() !== "undefined");

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(Math.random() < 1);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = void 0(arguments);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = Q.array_slice(arguments);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(args.concat());

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([].slice.call(args));

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([].concat(args));

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = resolve();

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = reject();

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.concat(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.splice(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push("Providing `undefined` as the first argument to any `then()` method becomes and remains an unresolved promise chain until it is joined by another unresolved chain or an already-resolved one.");

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.seleniumWebDriverSolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.promise.upperEdges());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.noeventWPflow());

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.nfapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       deferred.resolve(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(function () {}).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback === null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback === void 0) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback == null) {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_shift(arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_pop(arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_reverse(arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(array_slice(arguments), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(this, 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, math.random());

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, math.floor(math.random() * 100));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Object.keys(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           ""(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver().resolve);

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver().reject);

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver().notify);

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeRejector());

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           0(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           null(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           "hello"(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(undefined).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(Q.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(Array.prototype.slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice([...arguments].slice(1));

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(Object.create(null), args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(Function.prototype, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(42, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply({}, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 5));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 2, 1));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = None(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = object[object.length - 1](arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = null(arguments, 2);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).reverse());

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).shift());

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).splice(1, 0, "foo"));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice({}));

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.length = 0(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs[0] = 0(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.reject);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.promise);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeReject());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeCallback());

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(console.log);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply([]);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(this, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, 1);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           deferred(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           null(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(this).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.push(deferred.makeNodeResolver())).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.splice(0, 1, deferred.makeNodeResolver())).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(deferred.makeNodeResolver().call(null, nodeArgs)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(Deferred.resolve);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = "array_slice"(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(0, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 99);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, Math.random());

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(function () {});

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply({});

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(false, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(NaN, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, "new fake argument");

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, "hello world");

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost("name, args");

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(null);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return 1 + 1(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q + 1(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q - 1(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(~object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(object + 1).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(object + object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("differentMethod", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("name".toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, null);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, []);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice.length(args || []);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice[0](args || []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(arg1 || arg2);

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = {}();

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = undefined();

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver.bind(null));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(Q());

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch(" jack", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch(" get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch(" post").fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.post("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.get("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.set("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("head", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [[name], nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(nodeArgs);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(deferred);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = undefined(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = null(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = [](arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(0, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(array_slice(arguments, 2), 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, "foobar");

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, undefined);

[Survived] PrecomputedMutator
q.js:2020:20
-       var deferred = defer();
+       var deferred = reject();

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.concat(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(new Error());

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("pre", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("send", nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(null).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q({}).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(undefined).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("Pre", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [args, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, '']).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, '']).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject());

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve());

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(nodeArgs.length);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(Q(2));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = -1(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = undefined(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = "hello world"(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice("... args", 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice("foo", 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(42, 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 10);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, nodeArgs.length);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs = ['foo', 'bar'](deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeRejector());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeMapper());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolverWithArg());

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("resolve", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", ["foo", name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, null, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return {}(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q("replace me").nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (typeof nodeback === "function") {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback.constructor === Function) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(true, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(false, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(NaN, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, "any string");

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(1);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback("error");

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.reject();

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.resolve();

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("length");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("NAN");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise["get"]("tail");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.returns("tail");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise["then"]("tail");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail.error");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head.error");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("result.fail");

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.resolved(error);

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.then(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject("error")};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(Error("error"))};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ended.resolve(end);

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   12.78 |      169 |        73 |       1652 |        0 |        0 |
 q.js     |   12.93 |      169 |        73 |       1630 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         22 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m03:32:40 (3074) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m03:32:40 (3074) INFO MutationTestExecutor[39m Done in 213 minutes 36 seconds.

real	213m38.109s
user	38m5.748s
sys	6m40.579s
