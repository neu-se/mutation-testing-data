*** using precomputed mutations ***
[32m13:24:27 (2827) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m13:24:27 (2827) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m13:24:27 (2827) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llmorpheus/llmorpheus/spacl-core/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m13:24:27 (2827) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m13:24:27 (2827) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m13:24:28 (2827) INFO ProjectReader[39m Found 6 of 571 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 235 mutants from MUTATION_TESTING/template-full_gpt-4o-mini_0.0/mutants.json ***
failed to parse replacement spec.match(/^[a-zA-Z0-9_/:~.$+*-]+$/) === null: SyntaxError: Invalid regular expression: //^[a-zA-Z0-9_//: Unterminated character class
failed to parse replacement spec.match(/^[^a-zA-Z0-9_/:~.$+*-]*$/) === null: SyntaxError: Invalid regular expression: //^[^a-zA-Z0-9_//: Unterminated character class
failed to parse replacement spec.match(/^[a-zA-Z0-9_/:~.$+*-]*$/) !== null: SyntaxError: Invalid regular expression: //^[a-zA-Z0-9_//: Unterminated character class
Mutant 0 in matcher.ts: spec.match replaced with spec.includes
Mutant 1 in matcher.ts: spec.match replaced with spec.search
Mutant 2 in matcher.ts: spec.match replaced with spec.split
failed to parse replacement /^[a-zA-Z0-9_/:~.$+*-]{0,5}$/: SyntaxError: Invalid regular expression: //^[a-zA-Z0-9_//: Unterminated character class
failed to parse replacement /^[a-zA-Z0-9_/:~.$+*-]*[0-9]*$/: SyntaxError: Invalid regular expression: //^[a-zA-Z0-9_//: Unterminated character class
failed to parse replacement spec.match(/^[^/].*$/) === null: SyntaxError: Invalid regular expression: //^[^//: Unterminated character class
Mutant 3 in matcher.ts: spec.match(/^\//) === null replaced with spec.match(/^.*$/) === null
Mutant 4 in matcher.ts: spec.match(/^\//) === null replaced with spec.match(/^\/.*$/) === null
Mutant 5 in matcher.ts: /^\// replaced with /^\/[a-zA-Z0-9_]+$/
Mutant 6 in matcher.ts: spec.match(/\/\//) !== null replaced with spec.match(/\/\w+/) !== null
Mutant 7 in matcher.ts: spec.match(/\/\//) !== null replaced with spec.match(/\/{2,}/) !== null
failed to parse replacement /[^/]+/: SyntaxError: Invalid regular expression: //[^//: Unterminated character class
Mutant 8 in matcher.ts: /\/\// replaced with /\/\d+/
Mutant 9 in matcher.ts: /\/\// replaced with /\/\s*/
failed to parse replacement spec.match(version === '1' || version === '1.0' ? /[*+][^/]|[^/][*+]/ : /\*[^*/]|\+[^+/]|[^/*]\*|[^/+]\+/) !== null: SyntaxError: Invalid regular expression: //[*+][^//: Unterminated character class
failed to parse replacement spec.match(/[^/]:|:\/|:$/) !== null: SyntaxError: Invalid regular expression: //[^//: Unterminated character class
failed to parse replacement spec.match(/[^/]:|:\/|:$/) === null: SyntaxError: Invalid regular expression: //[^//: Unterminated character class
failed to parse replacement spec.match(/[^/]:|:\/|:$/) === null: SyntaxError: Invalid regular expression: //[^//: Unterminated character class
failed to parse replacement spec.includes(':') && spec.match(/[^/]/) !== null: SyntaxError: Invalid regular expression: //[^//: Unterminated character class
Mutant 10 in matcher.ts: spec.match(/[^/]:|:\/|:$/) !== null replaced with spec.match(/:.*:/) !== null
failed to parse replacement /[^/]+:|:\/|:$/: SyntaxError: Invalid regular expression: //[^//: Unterminated character class
failed to parse replacement /[^/]*:|:\/|:$/: SyntaxError: Invalid regular expression: //[^//: Unterminated character class
failed to parse replacement /[^/]:|:\/|:/: SyntaxError: Invalid regular expression: //[^//: Unterminated character class
Mutant 11 in matcher.ts: spec.match(/^.+\/$/) !== null replaced with spec.match(/^.*\/$/) !== null
Mutant 12 in matcher.ts: spec.match(/^.+\/$/) !== null replaced with spec.match(/^.+\/$/) === null
Mutant 13 in matcher.ts: spec.match(/^.+\/$/) !== null replaced with spec.match(/^.+$/) !== null
Mutant 14 in matcher.ts: /^.+\/$/ replaced with /^\/$/
Mutant 15 in matcher.ts: spec replaced with spec + 'extra'
Mutant 16 in matcher.ts: spec replaced with spec.replace(/:/g, '-')
Mutant 17 in matcher.ts: spec replaced with spec.toUpperCase()
Mutant 18 in matcher.ts: string.length > 1 && string.endsWith('/') replaced with string.length < 1 || string.startsWith('/')
Mutant 19 in matcher.ts: string.length > 1 && string.endsWith('/') replaced with string.length === 1 || string.endsWith(' ')
Mutant 20 in matcher.ts: string.length > 1 && string.endsWith('/') replaced with string.length > 0 && string.includes('/')
Mutant 21 in matcher.ts: string.endsWith replaced with string.length === 0
Mutant 22 in matcher.ts: '/' replaced with 'abc'
Mutant 23 in matcher.ts: '/' replaced with '/..'
Mutant 24 in matcher.ts: string replaced with string.substring(1)
Mutant 25 in matcher.ts: string replaced with string + '/'
Mutant 26 in matcher.ts: string replaced with string.toUpperCase()
Mutant 27 in matcher.ts: max > 0 || any replaced with max < 0 && !any
Mutant 28 in matcher.ts: max > 0 || any replaced with min === 0 && max === 0
Mutant 29 in matcher.ts: max > 0 || any replaced with max >= 1 || any
Mutant 30 in matcher.ts: final && opt && min < 1 replaced with min > 1
Mutant 31 in matcher.ts: final && opt && min < 1 replaced with final || opt || min < 1
Mutant 32 in matcher.ts: final && opt && min < 1 replaced with final && !opt && min < 0
Mutant 33 in matcher.ts: min > 0 replaced with min >= 0
Mutant 34 in matcher.ts: min > 0 replaced with max < 1
Mutant 35 in matcher.ts: min > 0 replaced with min === 0
Mutant 36 in matcher.ts: true replaced with false
Mutant 37 in matcher.ts: true replaced with min < 2 && max > 0
Mutant 38 in matcher.ts: true replaced with final && !opt && min < 1
Mutant 39 in matcher.ts: parts.reduce((acc, seg) => seg + acc, '$') replaced with parts.reduce((acc, seg) => acc + seg, '^')
Mutant 40 in matcher.ts: parts.reduce replaced with parts.join
Mutant 41 in matcher.ts: (acc, seg) => seg + acc replaced with (acc, seg) => acc + seg
Mutant 42 in matcher.ts: (acc, seg) => seg + acc replaced with (acc, seg) => seg.length + acc
Mutant 43 in matcher.ts: (acc, seg) => seg + acc replaced with (acc, seg) => acc + '/' + seg
failed to parse replacement '(?<=/)[^/]+': SyntaxError: Invalid regular expression: //)[^//: Unmatched ')'
Mutant 44 in matcher.ts: '$' replaced with '[^/]+'
Mutant 45 in matcher.ts: '$' replaced with '(?=/$)'
Mutant 46 in matcher.ts: for (const part of spec.split('/').slice(1).reverse()) {
  switch (part) {
    case '+':
      min++;
      max++;
      break;
    case '++':
      max++;
      break;
    case '*':
      min++;
      any = true;
      break;
    case '**':
      any = true;
      break;
    default:
      flatten();
      opt = false;
      if (part.match(/:.+/) !== null) {
        props.push(part.slice(1));
        parts.push('/([^/]+)');
      } else {
        parts.push(`/${part.replace(/([.$])/g, '\\$1')}`);
      }
  }
} replaced with for (const part of spec.split('/').slice(0)) {
  switch (part) {
    case '+':
      min++;
      max++;
      break;
    case '++':
      max++;
      break;
    case '*':
      min++;
      any = true;
      break;
    case '**':
      any = true;
      break;
    default:
      flatten();
      opt = false;
      if (part.match(/:.+/) !== null) {
        props.push(part.slice(1));
        parts.push('/([^/]+)');
      } else {
        parts.push(`/${part.replace(/([.$])/g, '\\$1')}`);
      }
  }
}
Mutant 47 in matcher.ts: for (const part of spec.split('/').slice(1).reverse()) {
  switch (part) {
    case '+':
      min++;
      max++;
      break;
    case '++':
      max++;
      break;
    case '*':
      min++;
      any = true;
      break;
    case '**':
      any = true;
      break;
    default:
      flatten();
      opt = false;
      if (part.match(/:.+/) !== null) {
        props.push(part.slice(1));
        parts.push('/([^/]+)');
      } else {
        parts.push(`/${part.replace(/([.$])/g, '\\$1')}`);
      }
  }
} replaced with for (const part of spec.split('/').slice(1).map(p => p.toUpperCase()).reverse()) {
  switch (part) {
    case '+':
      min++;
      max++;
      break;
    case '++':
      max++;
      break;
    case '*':
      min++;
      any = true;
      break;
    case '**':
      any = true;
      break;
    default:
      flatten();
      opt = false;
      if (part.match(/:.+/) !== null) {
        props.push(part.slice(1));
        parts.push('/([^/]+)');
      } else {
        parts.push(`/${part.replace(/([.$])/g, '\\$1')}`);
      }
  }
}
Mutant 48 in matcher.ts: for (const part of spec.split('/').slice(1).reverse()) {
  switch (part) {
    case '+':
      min++;
      max++;
      break;
    case '++':
      max++;
      break;
    case '*':
      min++;
      any = true;
      break;
    case '**':
      any = true;
      break;
    default:
      flatten();
      opt = false;
      if (part.match(/:.+/) !== null) {
        props.push(part.slice(1));
        parts.push('/([^/]+)');
      } else {
        parts.push(`/${part.replace(/([.$])/g, '\\$1')}`);
      }
  }
} replaced with for (const part of spec.split(',').reverse()) {
  switch (part) {
    case '+':
      min++;
      max++;
      break;
    case '++':
      max++;
      break;
    case '*':
      min++;
      any = true;
      break;
    case '**':
      any = true;
      break;
    default:
      flatten();
      opt = false;
      if (part.match(/:.+/) !== null) {
        props.push(part.slice(1));
        parts.push('/([^/]+)');
      } else {
        parts.push(`/${part.replace(/([.$])/g, '\\$1')}`);
      }
  }
}
Mutant 49 in matcher.ts: spec.split('/').slice(1).reverse() replaced with spec.split('/').slice(0).reverse()
Mutant 50 in matcher.ts: spec.split('/').slice(1).reverse() replaced with spec.split('/').slice(1).sort()
Mutant 51 in matcher.ts: spec.split('/').slice(1).reverse() replaced with spec.split('/').slice(1).map(part => part.toUpperCase())
Mutant 52 in matcher.ts: '/' replaced with ','
Mutant 53 in matcher.ts: '/' replaced with '/|'
Mutant 54 in matcher.ts: '/' replaced with '|'
Mutant 55 in matcher.ts: 1 replaced with 2
Mutant 56 in matcher.ts: 1 replaced with part.length
Mutant 57 in matcher.ts: part replaced with '*'
Mutant 58 in matcher.ts: part replaced with '+' + part
Mutant 59 in matcher.ts: flatten replaced with min = 2
Mutant 60 in matcher.ts: part.match(/:.+/) !== null replaced with part.match(/:.{0,1}/) !== null
Mutant 61 in matcher.ts: part.match(/:.+/) !== null replaced with part.includes(':') && part.length > 1
Mutant 62 in matcher.ts: part.match(/:.+/) !== null replaced with part.match(/:.+/) === null
Mutant 63 in matcher.ts: /:.+/ replaced with /:.*/
Mutant 64 in matcher.ts: /:.+/ replaced with /:.{0,5}/
Mutant 65 in matcher.ts: /:.+/ replaced with /:.{1,}/
Mutant 66 in matcher.ts: part.slice(1) replaced with part.toUpperCase()
Mutant 67 in matcher.ts: part.slice(1) replaced with part.slice(0, 1)
Mutant 68 in matcher.ts: part.slice(1) replaced with part.split('').reverse().join('')
Mutant 69 in matcher.ts: part.slice replaced with part.length
Mutant 70 in matcher.ts: 1 replaced with 1 + 1
Mutant 71 in matcher.ts: 1 replaced with part.length
failed to parse replacement '/([^/]*?)': SyntaxError: Invalid regular expression: //([^//: Unterminated character class
failed to parse replacement '/([^/]+|.*)': SyntaxError: Invalid regular expression: //([^//: Unterminated character class
failed to parse replacement `/${part.replace(/([.*])/g, '\\$1')}`: SyntaxError: Invalid regular expression: //${part.replace(//: Unterminated group
Mutant 72 in matcher.ts: `/${part.replace(/([.$])/g, '\\$1')}` replaced with `/${part}`
Mutant 73 in matcher.ts: `/${part.replace(/([.$])/g, '\\$1')}` replaced with `/${part.toUpperCase()}`
Mutant 74 in matcher.ts: part.replace(/([.$])/g, '\\$1') replaced with part.replace(/([*+])/g, '\\$1')
Mutant 75 in matcher.ts: part.replace(/([.$])/g, '\\$1') replaced with part.replace(/([a-zA-Z])/g, '\\$1')
Mutant 76 in matcher.ts: part.replace(/([.$])/g, '\\$1') replaced with part.replace(/([0-9])/g, '\\$1')
Mutant 77 in matcher.ts: /([.$])/g replaced with /([*])/g
Mutant 78 in matcher.ts: /([.$])/g replaced with /([a-z])/g
Mutant 79 in matcher.ts: /([.$])/g replaced with /([0-9])/g
Mutant 80 in matcher.ts: '\\$1' replaced with '\\$2'
Mutant 81 in matcher.ts: '\\$1' replaced with '\\$0'
Mutant 82 in matcher.ts: '\\$1' replaced with '\\$1$1'
Mutant 83 in matcher.ts: props.reverse replaced with props.length
Mutant 84 in policy.ts: this.rules.push replaced with this.rules = rules
Mutant 85 in policy.ts: this.rules replaced with this.rules.slice(0, 1)
Mutant 86 in policy.ts: this.rules replaced with this.rules.reverse()
Mutant 87 in policy.ts: this.rules replaced with this.rules.filter(rule => rule.isActive)
Mutant 88 in policy.ts: rule.query(path, verb, ctx) replaced with rule.query(path, verb)
Mutant 89 in policy.ts: rule.query(path, verb, ctx) replaced with rule.query(path, 'GET', ctx)
Mutant 90 in policy.ts: rule.query(path, verb, ctx) replaced with rule.query(path, verb, null)
Mutant 91 in policy.ts: rule.query replaced with rule.matches
Mutant 92 in policy.ts: rule.query replaced with !rule.query
Mutant 93 in policy.ts: path replaced with '/' + path
Mutant 94 in policy.ts: path replaced with path + 'extra'
Mutant 95 in policy.ts: path replaced with null
Mutant 96 in policy.ts: verb replaced with 'GET'
Mutant 97 in policy.ts: verb replaced with verb + 's'
Mutant 98 in policy.ts: verb replaced with null
Mutant 99 in policy.ts: ctx replaced with undefined
Mutant 100 in policy.ts: ctx replaced with true
Mutant 101 in policy.ts: ctx replaced with "invalid_context"
Mutant 102 in policy.ts: res === false replaced with res === true
Mutant 103 in policy.ts: res === false replaced with res != null
Mutant 104 in policy.ts: res === false replaced with res === undefined
Mutant 105 in policy.ts: res === true replaced with res === null
Mutant 106 in policy.ts: res === true replaced with res !== true
Mutant 107 in policy.ts: res === true replaced with res === undefined
Mutant 108 in policy.ts: this.rules replaced with this.rules.slice(1)
Mutant 109 in policy.ts: this.rules replaced with this.rules.concat(new Rule('dummy', 'deny'))
Mutant 110 in policy.ts: this.rules replaced with this.rules.filter(rule => rule.isActive)
Mutant 111 in policy.ts: rule.matches(path, ctx) replaced with rule.query(path, ctx)
Mutant 112 in policy.ts: rule.matches(path, ctx) replaced with !rule.matches(path, ctx)
Mutant 113 in policy.ts: rule.matches(path, ctx) replaced with rule.matches('differentPath', ctx)
Mutant 114 in policy.ts: rule.matches(path, ctx) replaced with rule.matches('unknownPath')
Mutant 115 in policy.ts: rule.matches(path, ctx) replaced with rule.matches(path + 'extra')
Mutant 116 in policy.ts: rule.matches(path, ctx) replaced with rule.matches(ctx)
Mutant 117 in policy.ts: path replaced with "some/other/path"
Mutant 118 in policy.ts: path replaced with path + "/extra"
Mutant 119 in policy.ts: path replaced with ctx?.userPath
Mutant 120 in policy.ts: ctx replaced with "invalid_context"
Mutant 121 in policy.ts: ctx replaced with undefined
Mutant 122 in policy.ts: ctx replaced with null
Mutant 123 in policy.ts: rule => rule.clone() replaced with rule => rule
Mutant 124 in policy.ts: rule => rule.clone() replaced with rule => null
Mutant 125 in policy.ts: rule => rule.clone() replaced with rule => ({
  ...rule,
  modified: true
})
Mutant 126 in policy.ts: rule.clone replaced with rule.query
Mutant 127 in policy.ts: rule.clone replaced with rule.matches
Mutant 128 in policymap.ts: policy => [policy.name, policy] replaced with policy => [policy.name, null]
Mutant 129 in policymap.ts: policy => [policy.name, policy] replaced with policy => [policy.id, policy]
Mutant 130 in policymap.ts: policy => [policy.name, policy] replaced with policy => [policy.name.toUpperCase(), policy]
Mutant 131 in policymap.ts: for (const policy of policies) {
  this.set(policy.name, policy);
} replaced with for (const policy of policies.slice(1)) {
  this.set(policy.name, policy);
}
Mutant 132 in policymap.ts: policies replaced with this.keys()
Mutant 133 in policymap.ts: policies replaced with policies.slice(0, 1)
Mutant 134 in policymap.ts: policies replaced with [...policies].reverse()
Mutant 135 in policymap.ts: this.set(policy.name, policy) replaced with this.set(policy.id, policy)
Mutant 136 in policymap.ts: this.set(policy.name, policy) replaced with this.set(policy.name.toUpperCase(), policy)
Mutant 137 in policymap.ts: this.set(policy.name, policy) replaced with this.set(policy.name, null)
Mutant 138 in policymap.ts: policy.name replaced with policy.id
Mutant 139 in policymap.ts: policy.name replaced with policy.name.toUpperCase()
Mutant 140 in policymap.ts: policy.name replaced with policy.name + '_policy'
Mutant 141 in policymap.ts: policy replaced with null
Mutant 142 in policymap.ts: policy replaced with undefined
Mutant 143 in policymap.ts: policy replaced with {
  name: policy.name
}
Mutant 144 in policymap.ts: name replaced with 'unknown'
Mutant 145 in policymap.ts: name replaced with name + '1'
Mutant 146 in policymap.ts: name replaced with name.toUpperCase()
Mutant 147 in policymap.ts: policy.query(path, verb, ctx) replaced with policy.query(path, verb)
Mutant 148 in policymap.ts: policy.query(path, verb, ctx) replaced with policy.query(path, 'GET', ctx)
Mutant 149 in policymap.ts: policy.query(path, verb, ctx) replaced with policy.query(name, path, verb, ctx)
Mutant 150 in policymap.ts: path replaced with '/' + path
Mutant 151 in policymap.ts: path replaced with path + '/*'
Mutant 152 in policymap.ts: path replaced with path.toUpperCase()
Mutant 153 in policymap.ts: verb replaced with 'GET'
Mutant 154 in policymap.ts: verb replaced with path
Mutant 155 in policymap.ts: verb replaced with null
Mutant 156 in policymap.ts: ctx replaced with undefined
Mutant 157 in policymap.ts: ctx replaced with true
Mutant 158 in policymap.ts: ctx replaced with path
Mutant 159 in policymap.ts: name replaced with 'unknownPolicy'
Mutant 160 in policymap.ts: name replaced with name + 'Extra'
Mutant 161 in policymap.ts: name replaced with name.toUpperCase()
Mutant 162 in policymap.ts: policy.matches(path, ctx) replaced with policy.matches(path + ctx)
Mutant 163 in policymap.ts: policy.matches(path, ctx) replaced with policy.matches(path.toUpperCase())
Mutant 164 in policymap.ts: policy.matches(path, ctx) replaced with policy.matches(ctx || path)
Mutant 165 in policymap.ts: path replaced with '/' + path
Mutant 166 in policymap.ts: path replaced with path + '/*'
Mutant 167 in policymap.ts: path replaced with path.toUpperCase()
Mutant 168 in policymap.ts: ctx replaced with null
Mutant 169 in policymap.ts: ctx replaced with undefined
Mutant 170 in policymap.ts: ctx replaced with true
Mutant 171 in rule.ts: verbs replaced with ['GET', 'POST']
Mutant 172 in rule.ts: verbs replaced with Object.keys(this.verbs)
Mutant 173 in rule.ts: verbs replaced with verbs.concat(['DELETE'])
Mutant 174 in rule.ts: !(verb in this.verbs) replaced with verb in this.verbs
Mutant 175 in rule.ts: !(verb in this.verbs) replaced with !(verb in this.verbs) && this.verbs[verb] === true
Mutant 176 in rule.ts: !(verb in this.verbs) replaced with this.verbs[verb] === false
Mutant 177 in rule.ts: verbs replaced with this.verbs[verb] = true
Mutant 178 in rule.ts: verbs replaced with this.verbs[verb] = undefined
Mutant 179 in rule.ts: this.matches(path, ctx) && verb in this.verbs replaced with this.matches(path, ctx) || verb in this.verbs
Mutant 180 in rule.ts: this.matches(path, ctx) && verb in this.verbs replaced with !this.matches(path, ctx) && verb in this.verbs
Mutant 181 in rule.ts: this.matches(path, ctx) && verb in this.verbs replaced with this.matches(path, ctx) && verb in this.verbs && this.verbs[verb] === true
Mutant 182 in rule.ts: this.matches(path, ctx) replaced with this.matches(path + ctx)
Mutant 183 in rule.ts: this.matches(path, ctx) replaced with this.matches(ctx)
Mutant 184 in rule.ts: this.matches(path, ctx) replaced with this.matches(path.length)
Mutant 185 in rule.ts: path replaced with '/' + path
Mutant 186 in rule.ts: path replaced with path + 'extra'
Mutant 187 in rule.ts: path replaced with ctx ? path : ''
Mutant 188 in rule.ts: ctx replaced with null
Mutant 189 in rule.ts: ctx replaced with undefined
Mutant 190 in rule.ts: ctx replaced with 'not-a-context'
Mutant 191 in rule.ts: this.regex replaced with this.regex.props.length === 0
Mutant 192 in rule.ts: this.regex replaced with this.regex.test(path)
Mutant 193 in rule.ts: this.regex replaced with path.includes(this.regex)
Mutant 194 in rule.ts: match === null replaced with match !== null
Mutant 195 in rule.ts: match === null replaced with count === 0
Mutant 196 in rule.ts: match === null replaced with match.length === 0
Mutant 197 in rule.ts: count > 0 replaced with count === 0
Mutant 198 in rule.ts: count > 0 replaced with count < 0
Mutant 199 in rule.ts: count > 0 replaced with count >= 1
Mutant 200 in rule.ts: ctx === undefined replaced with ctx !== null
Mutant 201 in rule.ts: ctx === undefined replaced with count === 0
Mutant 202 in rule.ts: ctx === undefined replaced with ctx !== undefined && ctx !== null
Mutant 203 in rule.ts: index < count replaced with index <= count
Mutant 204 in rule.ts: index < count replaced with index > count
Mutant 205 in rule.ts: index < count replaced with index < count - 1
Mutant 206 in rule.ts: index++ replaced with index += 2
Mutant 207 in rule.ts: index++ replaced with index--
Mutant 208 in rule.ts: index++ replaced with index = count
Mutant 209 in rule.ts: prop === undefined || match[index + 1] !== prop replaced with prop !== undefined && match[index + 1] === prop
Mutant 210 in rule.ts: prop === undefined || match[index + 1] !== prop replaced with prop === null || match[index + 1] === prop
Mutant 211 in rule.ts: prop === undefined || match[index + 1] !== prop replaced with prop === undefined && match[index + 1] === prop
Mutant 212 in rule.ts: for (const verb in this.verbs) {
  rule.verbs[verb] = this.verbs[verb];
} replaced with for (const verb in Object.keys(this.verbs)) {
  rule.verbs[verb] = this.verbs[verb];
}
Mutant 213 in rule.ts: this.verbs replaced with Object.keys(this.verbs)
Mutant 214 in rule.ts: this.verbs replaced with this.verbs[verb] = !this.verbs[verb]
Mutant 215 in rule.ts: this.verbs replaced with rule.verbs[verb] = true
[32m13:24:28 (2827) INFO Instrumenter[39m Instrumented 6 source file(s) with 216 mutant(s)
[32m13:24:28 (2827) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m13:24:29 (2827) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m13:24:29 (2827) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m13:24:34 (2827) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 5 seconds (net 5137 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~17m) 2/216 tested (0 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~17m) 4/216 tested (0 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~14m) 7/216 tested (1 survived, 0 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~15m) 9/216 tested (2 survived, 0 timed out)
Mutation testing 5% (elapsed: <1m, remaining: ~14m) 12/216 tested (2 survived, 0 timed out)
Mutation testing 6% (elapsed: ~1m, remaining: ~14m) 14/216 tested (2 survived, 0 timed out)
Mutation testing 7% (elapsed: ~1m, remaining: ~14m) 16/216 tested (2 survived, 0 timed out)
Mutation testing 8% (elapsed: ~1m, remaining: ~13m) 19/216 tested (2 survived, 0 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~13m) 21/216 tested (2 survived, 0 timed out)
Mutation testing 11% (elapsed: ~1m, remaining: ~13m) 24/216 tested (4 survived, 0 timed out)
Mutation testing 12% (elapsed: ~1m, remaining: ~13m) 26/216 tested (4 survived, 0 timed out)
Mutation testing 12% (elapsed: ~2m, remaining: ~13m) 28/216 tested (4 survived, 0 timed out)
Mutation testing 14% (elapsed: ~2m, remaining: ~12m) 31/216 tested (5 survived, 0 timed out)
Mutation testing 15% (elapsed: ~2m, remaining: ~12m) 33/216 tested (5 survived, 0 timed out)
Mutation testing 16% (elapsed: ~2m, remaining: ~12m) 36/216 tested (6 survived, 0 timed out)
Mutation testing 17% (elapsed: ~2m, remaining: ~12m) 38/216 tested (6 survived, 0 timed out)
Mutation testing 18% (elapsed: ~2m, remaining: ~12m) 40/216 tested (6 survived, 0 timed out)
Mutation testing 19% (elapsed: ~3m, remaining: ~12m) 43/216 tested (6 survived, 0 timed out)
Mutation testing 20% (elapsed: ~3m, remaining: ~12m) 45/216 tested (6 survived, 0 timed out)
Mutation testing 21% (elapsed: ~3m, remaining: ~11m) 47/216 tested (6 survived, 0 timed out)
Mutation testing 23% (elapsed: ~3m, remaining: ~11m) 50/216 tested (6 survived, 0 timed out)
Mutation testing 24% (elapsed: ~3m, remaining: ~11m) 52/216 tested (6 survived, 0 timed out)
Mutation testing 25% (elapsed: ~3m, remaining: ~11m) 55/216 tested (6 survived, 0 timed out)
Mutation testing 26% (elapsed: ~4m, remaining: ~11m) 57/216 tested (6 survived, 0 timed out)
Mutation testing 27% (elapsed: ~4m, remaining: ~11m) 59/216 tested (6 survived, 0 timed out)
Mutation testing 28% (elapsed: ~4m, remaining: ~10m) 62/216 tested (8 survived, 0 timed out)
Mutation testing 29% (elapsed: ~4m, remaining: ~10m) 64/216 tested (9 survived, 0 timed out)
Mutation testing 31% (elapsed: ~4m, remaining: ~10m) 67/216 tested (11 survived, 0 timed out)
Mutation testing 31% (elapsed: ~4m, remaining: ~10m) 69/216 tested (11 survived, 0 timed out)
Mutation testing 33% (elapsed: ~5m, remaining: ~10m) 72/216 tested (11 survived, 0 timed out)
Mutation testing 34% (elapsed: ~5m, remaining: ~9m) 74/216 tested (11 survived, 0 timed out)
Mutation testing 35% (elapsed: ~5m, remaining: ~9m) 76/216 tested (11 survived, 0 timed out)
Mutation testing 36% (elapsed: ~5m, remaining: ~9m) 79/216 tested (11 survived, 0 timed out)
Mutation testing 37% (elapsed: ~5m, remaining: ~9m) 81/216 tested (11 survived, 0 timed out)
Mutation testing 38% (elapsed: ~5m, remaining: ~9m) 84/216 tested (11 survived, 0 timed out)
Mutation testing 39% (elapsed: ~6m, remaining: ~9m) 86/216 tested (11 survived, 0 timed out)
Mutation testing 41% (elapsed: ~6m, remaining: ~8m) 89/216 tested (12 survived, 0 timed out)
Mutation testing 42% (elapsed: ~6m, remaining: ~8m) 91/216 tested (12 survived, 0 timed out)
Mutation testing 43% (elapsed: ~6m, remaining: ~8m) 93/216 tested (12 survived, 0 timed out)
Mutation testing 44% (elapsed: ~6m, remaining: ~8m) 96/216 tested (12 survived, 0 timed out)
Mutation testing 45% (elapsed: ~6m, remaining: ~8m) 98/216 tested (12 survived, 0 timed out)
Mutation testing 46% (elapsed: ~7m, remaining: ~7m) 101/216 tested (12 survived, 0 timed out)
Mutation testing 47% (elapsed: ~7m, remaining: ~7m) 103/216 tested (12 survived, 0 timed out)
Mutation testing 49% (elapsed: ~7m, remaining: ~7m) 106/216 tested (12 survived, 0 timed out)
Mutation testing 50% (elapsed: ~7m, remaining: ~7m) 108/216 tested (12 survived, 0 timed out)
Mutation testing 50% (elapsed: ~7m, remaining: ~7m) 110/216 tested (12 survived, 0 timed out)
Mutation testing 52% (elapsed: ~7m, remaining: ~7m) 113/216 tested (12 survived, 0 timed out)
Mutation testing 53% (elapsed: ~8m, remaining: ~7m) 115/216 tested (12 survived, 0 timed out)
Mutation testing 54% (elapsed: ~8m, remaining: ~6m) 118/216 tested (12 survived, 0 timed out)
Mutation testing 55% (elapsed: ~8m, remaining: ~6m) 120/216 tested (12 survived, 0 timed out)
Mutation testing 56% (elapsed: ~8m, remaining: ~6m) 123/216 tested (12 survived, 0 timed out)
Mutation testing 57% (elapsed: ~8m, remaining: ~6m) 125/216 tested (12 survived, 0 timed out)
Mutation testing 58% (elapsed: ~8m, remaining: ~6m) 127/216 tested (12 survived, 0 timed out)
Mutation testing 60% (elapsed: ~9m, remaining: ~5m) 130/216 tested (12 survived, 0 timed out)
Mutation testing 61% (elapsed: ~9m, remaining: ~5m) 132/216 tested (12 survived, 0 timed out)
Mutation testing 62% (elapsed: ~9m, remaining: ~5m) 135/216 tested (14 survived, 0 timed out)
Mutation testing 63% (elapsed: ~9m, remaining: ~5m) 137/216 tested (14 survived, 0 timed out)
Mutation testing 64% (elapsed: ~9m, remaining: ~5m) 140/216 tested (14 survived, 0 timed out)
Mutation testing 65% (elapsed: ~9m, remaining: ~5m) 142/216 tested (14 survived, 0 timed out)
Mutation testing 67% (elapsed: ~10m, remaining: ~4m) 145/216 tested (14 survived, 0 timed out)
Mutation testing 68% (elapsed: ~10m, remaining: ~4m) 147/216 tested (14 survived, 0 timed out)
Mutation testing 68% (elapsed: ~10m, remaining: ~4m) 149/216 tested (14 survived, 0 timed out)
Mutation testing 70% (elapsed: ~10m, remaining: ~4m) 152/216 tested (14 survived, 0 timed out)
Mutation testing 71% (elapsed: ~10m, remaining: ~4m) 154/216 tested (14 survived, 0 timed out)
Mutation testing 72% (elapsed: ~10m, remaining: ~4m) 157/216 tested (14 survived, 0 timed out)
Mutation testing 73% (elapsed: ~11m, remaining: ~3m) 159/216 tested (14 survived, 0 timed out)
Mutation testing 75% (elapsed: ~11m, remaining: ~3m) 162/216 tested (14 survived, 0 timed out)
Mutation testing 75% (elapsed: ~11m, remaining: ~3m) 164/216 tested (14 survived, 0 timed out)
Mutation testing 77% (elapsed: ~11m, remaining: ~3m) 167/216 tested (14 survived, 0 timed out)
Mutation testing 78% (elapsed: ~11m, remaining: ~3m) 169/216 tested (14 survived, 0 timed out)
Mutation testing 79% (elapsed: ~11m, remaining: ~3m) 171/216 tested (14 survived, 0 timed out)
Mutation testing 80% (elapsed: ~12m, remaining: ~2m) 174/216 tested (15 survived, 0 timed out)
Mutation testing 81% (elapsed: ~12m, remaining: ~2m) 176/216 tested (15 survived, 0 timed out)
Mutation testing 82% (elapsed: ~12m, remaining: ~2m) 179/216 tested (15 survived, 0 timed out)
Mutation testing 83% (elapsed: ~12m, remaining: ~2m) 181/216 tested (15 survived, 0 timed out)
Mutation testing 85% (elapsed: ~12m, remaining: ~2m) 184/216 tested (15 survived, 0 timed out)
Mutation testing 86% (elapsed: ~12m, remaining: ~2m) 186/216 tested (15 survived, 0 timed out)
Mutation testing 87% (elapsed: ~13m, remaining: ~1m) 188/216 tested (15 survived, 0 timed out)
Mutation testing 88% (elapsed: ~13m, remaining: ~1m) 191/216 tested (15 survived, 0 timed out)
Mutation testing 89% (elapsed: ~13m, remaining: ~1m) 193/216 tested (15 survived, 0 timed out)
Mutation testing 90% (elapsed: ~13m, remaining: ~1m) 196/216 tested (15 survived, 0 timed out)
Mutation testing 91% (elapsed: ~13m, remaining: ~1m) 198/216 tested (15 survived, 0 timed out)
Mutation testing 92% (elapsed: ~13m, remaining: ~1m) 200/216 tested (16 survived, 0 timed out)
Mutation testing 93% (elapsed: ~14m, remaining: <1m) 203/216 tested (16 survived, 0 timed out)
Mutation testing 94% (elapsed: ~14m, remaining: <1m) 205/216 tested (16 survived, 0 timed out)
Mutation testing 96% (elapsed: ~14m, remaining: <1m) 208/216 tested (17 survived, 0 timed out)
Mutation testing 97% (elapsed: ~14m, remaining: <1m) 210/216 tested (18 survived, 0 timed out)
Mutation testing 98% (elapsed: ~14m, remaining: <1m) 213/216 tested (18 survived, 0 timed out)
Mutation testing 99% (elapsed: ~14m, remaining: <1m) 215/216 tested (18 survived, 0 timed out)

All tests
  ✓ All tests (killed 198)

[Survived] PrecomputedMutator
src/matcher.ts:15:9
-       if (spec.match(/^\//) === null) {
+       if (spec.match(/^\/.*$/) === null) {

[Survived] PrecomputedMutator
src/matcher.ts:18:9
-       if (spec.match(/\/\//) !== null) {
+       if (spec.match(/\/{2,}/) !== null) {

[Survived] PrecomputedMutator
src/matcher.ts:39:46
-       if (string.length > 1 && string.endsWith('/')) {
+       if (string.length > 1 && string.endsWith('abc')) {

[Survived] PrecomputedMutator
src/matcher.ts:39:46
-       if (string.length > 1 && string.endsWith('/')) {
+       if (string.length > 1 && string.endsWith('/..')) {

[Survived] PrecomputedMutator
src/matcher.ts:64:9
-       if (max > 0 || any) {
+       if (max >= 1 || any) {

[Survived] PrecomputedMutator
src/matcher.ts:67:18
-         } else if (min > 0) {
+         } else if (min >= 0) {

[Survived] PrecomputedMutator
src/matcher.ts:111:13
-           if (part.match(/:.+/) !== null) {
+           if (part.match(/:.{0,1}/) !== null) {

[Survived] PrecomputedMutator
src/matcher.ts:111:13
-           if (part.match(/:.+/) !== null) {
+           if (part.includes(':') && part.length > 1) {

[Survived] PrecomputedMutator
src/matcher.ts:111:24
-           if (part.match(/:.+/) !== null) {
+           if (part.match(/:.*/) !== null) {

[Survived] PrecomputedMutator
src/matcher.ts:111:24
-           if (part.match(/:.+/) !== null) {
+           if (part.match(/:.{0,5}/) !== null) {

[Survived] PrecomputedMutator
src/matcher.ts:111:24
-           if (part.match(/:.+/) !== null) {
+           if (part.match(/:.{1,}/) !== null) {

[Survived] PrecomputedMutator
src/policy.ts:32:24
-       for (const rule of this.rules) {
+       for (const rule of this.rules.reverse()) {

[Survived] PrecomputedMutator
src/policymap.ts:12:26
-       for (const policy of policies) {
+       for (const policy of policies.slice(0, 1)) {

[Survived] PrecomputedMutator
src/policymap.ts:12:26
-       for (const policy of policies) {
+       for (const policy of [...policies].reverse()) {

[Survived] PrecomputedMutator
src/rule.ts:25:24
-       for (const verb of verbs) {
+       for (const verb of verbs.concat(['DELETE'])) {

[Survived] PrecomputedMutator
src/rule.ts:65:9
-       if (count > 0) {
+       if (count >= 1) {

[Survived] PrecomputedMutator
src/rule.ts:69:42
-         for (let index = 0; index < count; index++) {
+         for (let index = 0; index < count; index += 2) {

[Survived] PrecomputedMutator
src/rule.ts:69:42
-         for (let index = 0; index < count; index++) {
+         for (let index = 0; index < count; index = count) {

Ran 1.00 tests per mutant on average.
--------------|---------|----------|-----------|------------|----------|----------|
File          | % score | # killed | # timeout | # survived | # no cov | # errors |
--------------|---------|----------|-----------|------------|----------|----------|
All files     |   91.67 |      198 |         0 |         18 |        0 |        0 |
 matcher.ts   |   86.90 |       73 |         0 |         11 |        0 |        0 |
 policy.ts    |   97.73 |       43 |         0 |          1 |        0 |        0 |
 policymap.ts |   95.35 |       41 |         0 |          2 |        0 |        0 |
 rule.ts      |   91.11 |       41 |         0 |          4 |        0 |        0 |
--------------|---------|----------|-----------|------------|----------|----------|
[32m13:39:26 (2827) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llmorpheus/llmorpheus/spacl-core/reports/mutation/mutation.html
[32m13:39:26 (2827) INFO MutationTestExecutor[39m Done in 14 minutes 59 seconds.

real	15m0.138s
user	47m40.763s
sys	3m3.016s
