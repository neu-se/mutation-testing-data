*** using precomputed mutations ***
[32m13:55:26 (3157) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m13:55:26 (3157) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m13:55:26 (3157) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llmorpheus/llmorpheus/Complex.js/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m13:55:27 (3157) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m13:55:27 (3157) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m13:55:27 (3157) INFO ProjectReader[39m Found 1 of 1982 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 982 mutants from MUTATION_TESTING/template-full_gpt-4o-mini_0.0/mutants.json ***
Mutant 0 in complex.js: Math.abs replaced with Math.sqrt
Mutant 1 in complex.js: Math.abs replaced with Math.floor
Mutant 2 in complex.js: Math.abs replaced with -1 * x
Mutant 3 in complex.js: x replaced with x + 1
Mutant 4 in complex.js: x replaced with x * 2
Mutant 5 in complex.js: x replaced with Math.sin(x)
Mutant 6 in complex.js: Math.exp replaced with Math.log
Mutant 7 in complex.js: Math.exp replaced with Math.sin
Mutant 8 in complex.js: Math.exp replaced with Math.abs
Mutant 9 in complex.js: x replaced with x + 1
Mutant 10 in complex.js: x replaced with x * 2
Mutant 11 in complex.js: x replaced with Math.sin(x)
Mutant 12 in complex.js: Math.exp replaced with Math.log
Mutant 13 in complex.js: -x replaced with x
Mutant 14 in complex.js: -x replaced with -x + 1
Mutant 15 in complex.js: -x replaced with -x * 2
Mutant 16 in complex.js: Math.abs replaced with Math.sin
Mutant 17 in complex.js: x replaced with x + 1
Mutant 18 in complex.js: x replaced with x * 2
Mutant 19 in complex.js: x replaced with Math.abs(x)
Mutant 20 in complex.js: Math.exp replaced with Math.log
Mutant 21 in complex.js: Math.exp replaced with Math.abs
Mutant 22 in complex.js: Math.exp replaced with Math.sin
Mutant 23 in complex.js: x replaced with x + 1
Mutant 24 in complex.js: x replaced with -x
Mutant 25 in complex.js: x replaced with Math.abs(x)
Mutant 26 in complex.js: Math.exp replaced with Math.log
Mutant 27 in complex.js: Math.exp replaced with Math.abs
Mutant 28 in complex.js: Math.exp replaced with Math.sin
Mutant 29 in complex.js: -x replaced with x
Mutant 30 in complex.js: -x replaced with 0
Mutant 31 in complex.js: -x replaced with -x + 1
Mutant 32 in complex.js: -b > x || x > b replaced with x < -b || x < b
Mutant 33 in complex.js: -b > x || x > b replaced with -b <= x && x <= b
Mutant 34 in complex.js: -b > x || x > b replaced with x == b || x == -b
Mutant 35 in complex.js: Math.cos replaced with Math.sin
Mutant 36 in complex.js: x replaced with x + 1
Mutant 37 in complex.js: x replaced with x * 2
Mutant 38 in complex.js: x replaced with Math.sin(x)
Mutant 39 in complex.js: Math.abs replaced with Math.sqrt
Mutant 40 in complex.js: Math.abs replaced with Math.floor
Mutant 41 in complex.js: Math.abs replaced with x * x
Mutant 42 in complex.js: x replaced with y
Mutant 43 in complex.js: x replaced with x + 1
Mutant 44 in complex.js: x replaced with Math.abs(x) * 2
Mutant 45 in complex.js: Math.abs replaced with -1 * y
Mutant 46 in complex.js: y replaced with x
Mutant 47 in complex.js: y replaced with y + 1
Mutant 48 in complex.js: y replaced with b
Mutant 49 in complex.js: a < 3000 && b < 3000 replaced with a > 3000 || b > 3000
Mutant 50 in complex.js: a < 3000 && b < 3000 replaced with a <= 3000 && b <= 3000
Mutant 51 in complex.js: a < 3000 && b < 3000 replaced with a < 1000 && b < 1000
Mutant 52 in complex.js: a * a + b * b replaced with a * a - b * b
Mutant 53 in complex.js: a * a + b * b replaced with Math.pow(a, 3) + Math.pow(b, 3)
Mutant 54 in complex.js: a * a + b * b replaced with Math.abs(a) + Math.abs(b)
Mutant 55 in complex.js: a < b replaced with a > b
Mutant 56 in complex.js: a < b replaced with a === b
Mutant 57 in complex.js: a < b replaced with a <= b
Mutant 58 in complex.js: Math.sqrt replaced with a + b
Mutant 59 in complex.js: 1 + b * b replaced with 1 - b * b
Mutant 60 in complex.js: 1 + b * b replaced with 1 + a * a
Mutant 61 in complex.js: 'Invalid Param' replaced with 'Invalid Argument'
Mutant 62 in complex.js: 'Invalid Param' replaced with 'Error: Invalid Parameter'
Mutant 63 in complex.js: 'Invalid Param' replaced with 'Invalid Input'
Mutant 64 in complex.js: Math.abs replaced with Math.sqrt
Mutant 65 in complex.js: Math.abs replaced with -a
Mutant 66 in complex.js: a replaced with b
Mutant 67 in complex.js: a replaced with a + 1
Mutant 68 in complex.js: a replaced with Math.sqrt(a)
Mutant 69 in complex.js: Math.abs replaced with Math.sqrt
Mutant 70 in complex.js: Math.abs replaced with -b
Mutant 71 in complex.js: Math.abs replaced with b * b
Mutant 72 in complex.js: b replaced with a
Mutant 73 in complex.js: b replaced with b + 1
Mutant 74 in complex.js: b replaced with Math.sqrt(a)
Mutant 75 in complex.js: a === 0 replaced with a > 0
Mutant 76 in complex.js: a === 0 replaced with a !== 0
Mutant 77 in complex.js: a === 0 replaced with b === 0 && a === 0
Mutant 78 in complex.js: _b replaced with _a + _b
Mutant 79 in complex.js: _b replaced with Math.log(_a * _b)
Mutant 80 in complex.js: _b replaced with Math.log(_a) + Math.log(_b)
Mutant 81 in complex.js: b === 0 replaced with b !== 0
Mutant 82 in complex.js: b === 0 replaced with a < 0
Mutant 83 in complex.js: b === 0 replaced with a === b
Mutant 84 in complex.js: _a replaced with _b
Mutant 85 in complex.js: _a replaced with Math.sqrt(_b)
Mutant 86 in complex.js: _a replaced with Math.abs(a)
Mutant 87 in complex.js: _a < 3000 && _b < 3000 replaced with _a > 3000 || _b > 3000
Mutant 88 in complex.js: _a < 3000 && _b < 3000 replaced with _a === 3000 && _b === 3000
Mutant 89 in complex.js: _a < 3000 && _b < 3000 replaced with _a < 3000 || _b < 3000
Mutant 90 in complex.js: a * a + b * b replaced with a + b
Mutant 91 in complex.js: a * a + b * b replaced with Math.pow(a, 2) + Math.pow(b, 2)
Mutant 92 in complex.js: a * a + b * b replaced with Math.max(a, b) * Math.max(a, b)
Mutant 93 in complex.js: Math.log replaced with Math.exp
Mutant 94 in complex.js: Math.log replaced with Math.log1p
Mutant 95 in complex.js: Math.log replaced with Math.sqrt
Mutant 96 in complex.js: a * a + b * b replaced with a + b
Mutant 97 in complex.js: a * a + b * b replaced with Math.pow(a, 3) + Math.pow(b, 3)
Mutant 98 in complex.js: a * a + b * b replaced with a * a - b * b
Mutant 99 in complex.js: a === undefined || a === null replaced with a === 0
Mutant 100 in complex.js: a === undefined || a === null replaced with a !== undefined && a !== null
Mutant 101 in complex.js: a === undefined || a === null replaced with a == null
Mutant 102 in complex.js: b !== undefined replaced with b === null
Mutant 103 in complex.js: b !== undefined replaced with b == undefined
Mutant 104 in complex.js: b !== undefined replaced with b !== null
Mutant 105 in complex.js: typeof a replaced with typeof (a + 1)
Mutant 106 in complex.js: typeof a replaced with Object.prototype.toString.call(a)
Mutant 107 in complex.js: 'im' in a && 're' in a replaced with 'im' in a || 're' in a
Mutant 108 in complex.js: 'im' in a && 're' in a replaced with 'a.re !== undefined && a.im !== undefined'
Mutant 109 in complex.js: 'im' in a && 're' in a replaced with typeof a['re'] === 'number' && typeof a['im'] === 'number'
Mutant 110 in complex.js: 'abs' in a && 'arg' in a replaced with 're' in a && 'phi' in a
Mutant 111 in complex.js: 'abs' in a && 'arg' in a replaced with 'arg' in a && 'r' in a
Mutant 112 in complex.js: 'abs' in a && 'arg' in a replaced with 'abs' in a && 're' in a
Mutant 113 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with !Number.isFinite(a['abs']) || Number.isFinite(a['arg'])
Mutant 114 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with Number.isFinite(a['abs']) && !Number.isFinite(a['arg'])
Mutant 115 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with !Number.isFinite(a['abs']) && !Number.isFinite(a['arg'])
Mutant 116 in complex.js: Number.isFinite replaced with Number.isNaN
Mutant 117 in complex.js: Number.isFinite replaced with a['abs'] === undefined
Mutant 118 in complex.js: a['abs'] replaced with a['abs'] + 1
Mutant 119 in complex.js: a['abs'] replaced with a['abs'] * -1
Mutant 120 in complex.js: a['abs'] replaced with a['real']
Mutant 121 in complex.js: Number.isFinite replaced with Number.isInteger
Mutant 122 in complex.js: Number.isFinite replaced with a['arg'] === undefined
Mutant 123 in complex.js: a['arg'] replaced with a['re']
Mutant 124 in complex.js: a['arg'] replaced with a['phi']
Mutant 125 in complex.js: Math.cos replaced with Math.sin
Mutant 126 in complex.js: Math.cos replaced with Math.tan
Mutant 127 in complex.js: a['arg'] replaced with a['re']
Mutant 128 in complex.js: a['arg'] replaced with Math.PI / 2
Mutant 129 in complex.js: a['arg'] replaced with a['arg'] + 1
Mutant 130 in complex.js: Math.sin replaced with Math.cos
Mutant 131 in complex.js: Math.sin replaced with Math.tan
Mutant 132 in complex.js: a['arg'] replaced with a['re']
Mutant 133 in complex.js: a['arg'] replaced with Math.PI / 2
Mutant 134 in complex.js: a['arg'] replaced with a['arg'] + 1
Mutant 135 in complex.js: 'r' in a && 'phi' in a replaced with 'a' in a && 'theta' in a
Mutant 136 in complex.js: 'r' in a && 'phi' in a replaced with 'r' in a || 'phi' in a
Mutant 137 in complex.js: 'r' in a && 'phi' in a replaced with 'R' in a && 'phi' in a
Mutant 138 in complex.js: !Number.isFinite(a['r']) && Number.isFinite(a['phi']) replaced with !Number.isFinite(a['r']) || Number.isFinite(a['phi'])
Mutant 139 in complex.js: !Number.isFinite(a['r']) && Number.isFinite(a['phi']) replaced with Number.isNaN(a['r']) && !Number.isFinite(a['phi'])
Mutant 140 in complex.js: !Number.isFinite(a['r']) && Number.isFinite(a['phi']) replaced with !Number.isFinite(a['r']) || !Number.isFinite(a['phi'])
Mutant 141 in complex.js: Number.isFinite replaced with Number.isInteger
Mutant 142 in complex.js: Number.isFinite replaced with a['r'] === undefined
Mutant 143 in complex.js: a['r'] replaced with a['r'] + 1
Mutant 144 in complex.js: a['r'] replaced with a['r'] * 2
Mutant 145 in complex.js: a['r'] replaced with a['r'] - 1
Mutant 146 in complex.js: Number.isFinite replaced with a['phi'] === undefined
Mutant 147 in complex.js: a['phi'] replaced with a['theta']
Mutant 148 in complex.js: a['phi'] replaced with a['phi'] + 1
Mutant 149 in complex.js: Math.cos replaced with Math.sin
Mutant 150 in complex.js: Math.cos replaced with Math.tan
Mutant 151 in complex.js: a['phi'] replaced with a['r']
Mutant 152 in complex.js: a['phi'] replaced with a['phi'] + 1
Mutant 153 in complex.js: a['phi'] replaced with Math.PI / 2
Mutant 154 in complex.js: Math.sin replaced with Math.cos
Mutant 155 in complex.js: Math.sin replaced with Math.tan
Mutant 156 in complex.js: Math.sin replaced with Math.abs
Mutant 157 in complex.js: a['phi'] replaced with a['r']
Mutant 158 in complex.js: a['phi'] replaced with Math.PI
Mutant 159 in complex.js: a['phi'] replaced with a['arg'] + 1
Mutant 160 in complex.js: a.length === 2 replaced with a.length > 2
Mutant 161 in complex.js: a.length === 2 replaced with a.length === 1
Mutant 162 in complex.js: a.length === 2 replaced with a.length !== 2
Mutant 163 in complex.js: /\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g replaced with /\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|[a-zA-Z]/g
Mutant 164 in complex.js: /\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g replaced with /\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|[^\d\s]/g
Mutant 165 in complex.js: /\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g replaced with /\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|[0-9]/g
Mutant 166 in complex.js: tokens === null replaced with tokens.length === 0
Mutant 167 in complex.js: tokens === null replaced with tokens === undefined
Mutant 168 in complex.js: tokens === null replaced with tokens == null
Mutant 169 in complex.js: i < tokens.length replaced with i <= tokens.length
Mutant 170 in complex.js: i < tokens.length replaced with i < tokens.length - 1
Mutant 171 in complex.js: i < tokens.length replaced with i < 0
Mutant 172 in complex.js: c === ' ' || c === '\t' || c === '\n' replaced with c === ' ' || c === '\t' || c === '\r'
Mutant 173 in complex.js: c === ' ' || c === '\t' || c === '\n' replaced with c === ' ' || c === '\t' || c === 'x'
Mutant 174 in complex.js: c === ' ' || c === '\t' || c === '\n' replaced with c === ' ' || c === '\t' || c === '0'
Mutant 175 in complex.js: c === '+' replaced with c === '-1'
Mutant 176 in complex.js: c === '+' replaced with c === '*'
Mutant 177 in complex.js: c === '+' replaced with c !== '+'
Mutant 178 in complex.js: c === '-' replaced with c === '+'
Mutant 179 in complex.js: c === '-' replaced with c === '0'
Mutant 180 in complex.js: c === '-' replaced with c !== '-'
Mutant 181 in complex.js: c === 'i' || c === 'I' replaced with c === 'j' || c === 'J'
Mutant 182 in complex.js: c === 'i' || c === 'I' replaced with c === '1' || c === '2'
Mutant 183 in complex.js: c === 'i' || c === 'I' replaced with c !== 'i' && c !== 'I'
Mutant 184 in complex.js: plus + minus === 0 replaced with plus + minus > 0
Mutant 185 in complex.js: plus + minus === 0 replaced with plus + minus !== 0
Mutant 186 in complex.js: plus + minus === 0 replaced with plus - minus === 0
Mutant 187 in complex.js: tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) replaced with tokens[i + 1] === ' ' || isNaN(tokens[i + 1])
Mutant 188 in complex.js: tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) replaced with tokens[i + 1] === undefined
Mutant 189 in complex.js: tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) replaced with tokens[i + 1] === 'i' || tokens[i + 1] === 'I'
Mutant 190 in complex.js: isNaN replaced with isFinite
Mutant 191 in complex.js: isNaN replaced with this['re'] === 0
Mutant 192 in complex.js: tokens[i + 1] replaced with tokens[i - 1]
Mutant 193 in complex.js: tokens[i + 1] replaced with parseFloat(tokens[i + 1] + '0')
Mutant 194 in complex.js: tokens[i + 1] replaced with parseFloat(tokens[i + 1]) + 1
Mutant 195 in complex.js: parseFloat replaced with Math.round
Mutant 196 in complex.js: parseFloat replaced with parseInt
Mutant 197 in complex.js: parseFloat replaced with z['re'] + z['im']
Mutant 198 in complex.js: (minus % 2 ? '-' : '') + tokens[i + 1] replaced with Math.abs(tokens[i + 1])
Mutant 199 in complex.js: (minus % 2 ? '-' : '') + tokens[i + 1] replaced with parseFloat(tokens[i + 1]) * 2
Mutant 200 in complex.js: (minus % 2 ? '-' : '') + tokens[i + 1] replaced with parseFloat(tokens[i + 1]) + 1
Mutant 201 in complex.js: (minus % 2 ? '-' : '') + '1' replaced with (minus % 2 ? '-' : '') + '0'
Mutant 202 in complex.js: (minus % 2 ? '-' : '') + '1' replaced with (minus % 2 ? '-' : '') + '2'
Mutant 203 in complex.js: (minus % 2 ? '-' : '') + '1' replaced with '1'
Mutant 204 in complex.js: plus + minus === 0 || isNaN(c) replaced with plus + minus > 0
Mutant 205 in complex.js: plus + minus === 0 || isNaN(c) replaced with isNaN(c) && c !== '0'
Mutant 206 in complex.js: plus + minus === 0 || isNaN(c) replaced with c.length === 0
Mutant 207 in complex.js: isNaN replaced with c === '0'
Mutant 208 in complex.js: isNaN replaced with c === 'NaN'
Mutant 209 in complex.js: isNaN replaced with c === 'undefined'
Mutant 210 in complex.js: c replaced with c + 1
Mutant 211 in complex.js: c replaced with c * 2
Mutant 212 in complex.js: c replaced with c / 0
Mutant 213 in complex.js: tokens[i + 1] === 'i' || tokens[i + 1] === 'I' replaced with tokens[i + 1] === 'j' || tokens[i + 1] === 'J'
Mutant 214 in complex.js: tokens[i + 1] === 'i' || tokens[i + 1] === 'I' replaced with tokens[i + 1] === ' ' || tokens[i + 1] === '\t'
Mutant 215 in complex.js: tokens[i + 1] === 'i' || tokens[i + 1] === 'I' replaced with tokens[i + 1] === '0'
Mutant 216 in complex.js: parseFloat replaced with c * 2
Mutant 217 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '+' : '') + c
Mutant 218 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '-' : '') + c * 2
Mutant 219 in complex.js: (minus % 2 ? '-' : '') + c replaced with z['im'] + c
Mutant 220 in complex.js: parseFloat replaced with c * 2
Mutant 221 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '+' : '') + c
Mutant 222 in complex.js: (minus % 2 ? '-' : '') + c replaced with Math.abs(c)
Mutant 223 in complex.js: (minus % 2 ? '-' : '') + c replaced with -parseFloat(c)
Mutant 224 in complex.js: plus + minus > 0 replaced with plus + minus < 0
Mutant 225 in complex.js: plus + minus > 0 replaced with plus + minus === 0
Mutant 226 in complex.js: plus + minus > 0 replaced with plus + minus >= 0
Mutant 227 in complex.js: isNaN(z['re']) || isNaN(z['im']) replaced with z['re'] === 0 && z['im'] === 0
Mutant 228 in complex.js: isNaN(z['re']) || isNaN(z['im']) replaced with z['re'] < 0 || z['im'] < 0
Mutant 229 in complex.js: isNaN(z['re']) || isNaN(z['im']) replaced with z['re'] !== z['im']
Mutant 230 in complex.js: z['re'] replaced with z['re'] + 1
Mutant 231 in complex.js: z['re'] replaced with z['im'] + 1
Mutant 232 in complex.js: z['re'] replaced with z['re'] * 2
Mutant 233 in complex.js: isNaN replaced with z['im'] > 0
Mutant 234 in complex.js: z['im'] replaced with z['im'] + 1
Mutant 235 in complex.js: z['im'] replaced with z['im'] * 2
Mutant 236 in complex.js: !(this instanceof Complex) replaced with this instanceof Array
Mutant 237 in complex.js: !(this instanceof Complex) replaced with this === null
Mutant 238 in complex.js: !(this instanceof Complex) replaced with typeof this === 'string'
Mutant 239 in complex.js: parse(a, b) replaced with parse(a, 0)
Mutant 240 in complex.js: parse(a, b) replaced with parse(0, b)
Mutant 241 in complex.js: parse(a, b) replaced with parse(b, a)
Mutant 242 in complex.js: a replaced with b
Mutant 243 in complex.js: a replaced with a + 1
Mutant 244 in complex.js: a replaced with Math.abs(a)
Mutant 245 in complex.js: b replaced with a
Mutant 246 in complex.js: b replaced with null
Mutant 247 in complex.js: b replaced with undefined
Mutant 248 in complex.js: this['abs'] replaced with this['re'] + this['im']
Mutant 249 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() || z['isInfinite']()
Mutant 250 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with !this['isInfinite']() && !z['isInfinite']()
Mutant 251 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isZero']() && z['isZero']()
Mutant 252 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() && z['isInfinite']()
Mutant 253 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with !this['isInfinite']() && !z['isInfinite']()
Mutant 254 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isZero']() || z['isZero']()
Mutant 255 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() || z['isInfinite']()
Mutant 256 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isZero']() && z['isZero']()
Mutant 257 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() && !z['isInfinite']()
Mutant 258 in complex.js: z['isInfinite'] replaced with z['re'] === 0
Mutant 259 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isZero']() || z['isZero']()
Mutant 260 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() && z['isZero']()
Mutant 261 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with !this['isInfinite']() && !z['isInfinite']()
Mutant 262 in complex.js: this['isInfinite'] replaced with this['re'] === 0
Mutant 263 in complex.js: this['isInfinite']() && z['isZero']() || this['isZero']() && z['isInfinite']() replaced with this['isInfinite']() && z['isInfinite']()
Mutant 264 in complex.js: this['isInfinite']() && z['isZero']() || this['isZero']() && z['isInfinite']() replaced with this['isZero']() && z['isZero']()
Mutant 265 in complex.js: this['isInfinite']() && z['isZero']() || this['isZero']() && z['isInfinite']() replaced with this['isInfinite']() || z['isZero']()
Mutant 266 in complex.js: this['isInfinite'] replaced with this['re'] === Infinity
Mutant 267 in complex.js: z['isZero'] replaced with z['re'] === 0
Mutant 268 in complex.js: this['isZero'] replaced with this['re'] === 0
Mutant 269 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isZero']() && z['isZero']()
Mutant 270 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() && !z['isInfinite']()
Mutant 271 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with !this['isInfinite']() && !z['isInfinite']()
Mutant 272 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with z['im'] !== 0 || this['im'] !== 0
Mutant 273 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with z['im'] === 0 && this['re'] === 0
Mutant 274 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with z['im'] === 0 && this['im'] > 0
Mutant 275 in complex.js: this['isZero']() && z['isZero']() || this['isInfinite']() && z['isInfinite']() replaced with this['isZero']() || z['isZero']()
Mutant 276 in complex.js: this['isZero']() && z['isZero']() || this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() && !z['isInfinite']()
Mutant 277 in complex.js: this['isZero']() && z['isZero']() || this['isInfinite']() && z['isInfinite']() replaced with this['isZero']() && !z['isZero']()
Mutant 278 in complex.js: this['isZero'] replaced with this['re'] === 0 && this['im'] === 0
Mutant 279 in complex.js: z['isZero'] replaced with z['re'] === 0
Mutant 280 in complex.js: this['isInfinite'] replaced with this['re'] === 0
Mutant 281 in complex.js: this['isInfinite']() || z['isZero']() replaced with this['isInfinite']() && z['isZero']()
Mutant 282 in complex.js: this['isInfinite']() || z['isZero']() replaced with this['isZero']() && z['isInfinite']()
Mutant 283 in complex.js: this['isInfinite']() || z['isZero']() replaced with this['isInfinite']() && !z['isZero']()
Mutant 284 in complex.js: this['isInfinite'] replaced with this['re'] === 0
Mutant 285 in complex.js: z['isZero'] replaced with z['re'] === 0
Mutant 286 in complex.js: this['isZero']() || z['isInfinite']() replaced with this['isZero']() && z['isInfinite']()
Mutant 287 in complex.js: this['isZero']() || z['isInfinite']() replaced with !this['isZero']() && !z['isInfinite']()
Mutant 288 in complex.js: this['isZero']() || z['isInfinite']() replaced with this['isInfinite']() && z['isZero']()
Mutant 289 in complex.js: this['isZero'] replaced with this['re'] === 0
Mutant 290 in complex.js: 0 === d replaced with d > 0
Mutant 291 in complex.js: 0 === d replaced with d !== 0
Mutant 292 in complex.js: 0 === d replaced with c === 0
Mutant 293 in complex.js: Math.abs(c) < Math.abs(d) replaced with Math.abs(c) > Math.abs(d)
Mutant 294 in complex.js: Math.abs(c) < Math.abs(d) replaced with c === 0
Mutant 295 in complex.js: Math.abs(c) < Math.abs(d) replaced with c <= d
Mutant 296 in complex.js: c replaced with c + 1
Mutant 297 in complex.js: Math.abs replaced with Math.sqrt
Mutant 298 in complex.js: Math.abs replaced with -Math.abs
Mutant 299 in complex.js: d replaced with 1
Mutant 300 in complex.js: d replaced with this['re']
Mutant 301 in complex.js: z['isZero']() replaced with this['isZero']()
Mutant 302 in complex.js: z['isZero']() replaced with z['re'] === 0
Mutant 303 in complex.js: z['isZero']() replaced with !z['isZero']()
Mutant 304 in complex.js: z['isZero'] replaced with z['im'] === 0
Mutant 305 in complex.js: z['im'] === 0 replaced with z['im'] !== 0
Mutant 306 in complex.js: z['im'] === 0 replaced with z['re'] === 0
Mutant 307 in complex.js: z['im'] === 0 replaced with this['im'] === 0
Mutant 308 in complex.js: b === 0 && a > 0 replaced with b !== 0 && a > 0
Mutant 309 in complex.js: b === 0 && a > 0 replaced with b === 0 && a < 0
Mutant 310 in complex.js: b === 0 && a > 0 replaced with b === 0 || a > 0
Mutant 311 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(a + z['re'])
Mutant 312 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(Math.abs(a))
Mutant 313 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(z['im'])
Mutant 314 in complex.js: a replaced with b
Mutant 315 in complex.js: a replaced with Math.abs(a)
Mutant 316 in complex.js: a replaced with a + 1
Mutant 317 in complex.js: z['re'] replaced with z['re'] + 1
Mutant 318 in complex.js: z['re'] replaced with Math.abs(z['re'])
Mutant 319 in complex.js: z['re'] replaced with z['im']
Mutant 320 in complex.js: a === 0 replaced with a > 0
Mutant 321 in complex.js: a === 0 replaced with a !== 0
Mutant 322 in complex.js: a === 0 replaced with b === 0
Mutant 323 in complex.js: (z['re'] % 4 + 4) % 4 replaced with (z['re'] % 5 + 5) % 5
Mutant 324 in complex.js: (z['re'] % 4 + 4) % 4 replaced with (z['re'] + 1) % 4
Mutant 325 in complex.js: (z['re'] % 4 + 4) % 4 replaced with z['re'] * 2 % 4
Mutant 326 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b + z['re'])
Mutant 327 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b * z['re'] + 1)
Mutant 328 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b - z['re'])
Mutant 329 in complex.js: b replaced with b + 1
Mutant 330 in complex.js: b replaced with b * 2
Mutant 331 in complex.js: b replaced with b / 2
Mutant 332 in complex.js: z['re'] replaced with z['re'] + 1
Mutant 333 in complex.js: z['re'] replaced with Math.abs(z['re'])
Mutant 334 in complex.js: z['re'] replaced with 0
Mutant 335 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b + z['re'])
Mutant 336 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b * z['re'])
Mutant 337 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(Math.abs(b))
Mutant 338 in complex.js: b replaced with b + 1
Mutant 339 in complex.js: b replaced with b * 2
Mutant 340 in complex.js: b replaced with b / 2
Mutant 341 in complex.js: z['re'] replaced with z['im']
Mutant 342 in complex.js: z['re'] replaced with z['re'] + 1
Mutant 343 in complex.js: z['re'] replaced with Math.abs(z['re'])
Mutant 344 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b + z['re'])
Mutant 345 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(Math.pow(b, z['re'] + 1))
Mutant 346 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b * z['re'])
Mutant 347 in complex.js: b replaced with a
Mutant 348 in complex.js: b replaced with Math.abs(b)
Mutant 349 in complex.js: b replaced with b + 1
Mutant 350 in complex.js: z['re'] replaced with z['re'] + 1
Mutant 351 in complex.js: z['re'] replaced with z['im']
Mutant 352 in complex.js: z['re'] replaced with Math.abs(z['re'])
Mutant 353 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b + z['re'])
Mutant 354 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(z['im'] * z['im'])
Mutant 355 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(Math.abs(b))
Mutant 356 in complex.js: b replaced with b + 1
Mutant 357 in complex.js: b replaced with a
Mutant 358 in complex.js: b replaced with 0
Mutant 359 in complex.js: z['re'] replaced with z['im']
Mutant 360 in complex.js: z['re'] replaced with z['re'] + 1
Mutant 361 in complex.js: z['re'] replaced with Math.abs(z['re'])
Mutant 362 in complex.js: a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0 replaced with a !== 0 && b === 0 && z['re'] > 0 && z['im'] >= 0
Mutant 363 in complex.js: a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0 replaced with a === 0 && b === 0 && z['re'] >= 0 && z['im'] > 0
Mutant 364 in complex.js: a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0 replaced with a === 0 && b === 0 && z['re'] < 0 && z['im'] >= 0
Mutant 365 in complex.js: Math.atan2(b, a) replaced with Math.atan2(b, -a)
Mutant 366 in complex.js: Math.atan2(b, a) replaced with Math.atan2(a + b)
Mutant 367 in complex.js: Math.atan2(b, a) replaced with Math.atan2(0, b)
Mutant 368 in complex.js: Math.atan2 replaced with Math.atan
Mutant 369 in complex.js: b replaced with a
Mutant 370 in complex.js: b replaced with b + 1
Mutant 371 in complex.js: b replaced with 0
Mutant 372 in complex.js: a replaced with b
Mutant 373 in complex.js: a replaced with 0
Mutant 374 in complex.js: a replaced with Math.sqrt(a * a + b * b)
Mutant 375 in complex.js: logHypot(a, b) replaced with logHypot(a + b)
Mutant 376 in complex.js: logHypot(a, b) replaced with logHypot(Math.sqrt(a * a + b * b))
Mutant 377 in complex.js: logHypot(a, b) replaced with logHypot(z['re'] + z['im'])
Mutant 378 in complex.js: a replaced with b
Mutant 379 in complex.js: a replaced with a + 1
Mutant 380 in complex.js: a replaced with Math.abs(a)
Mutant 381 in complex.js: b replaced with a
Mutant 382 in complex.js: b replaced with 0
Mutant 383 in complex.js: b replaced with b + 1
Mutant 384 in complex.js: z['re'] * loh - z['im'] * arg replaced with z['re'] * loh + z['im'] * arg
Mutant 385 in complex.js: z['re'] * loh - z['im'] * arg replaced with z['im'] * loh - z['re'] * arg
Mutant 386 in complex.js: Math.cos replaced with Math.sin
Mutant 387 in complex.js: Math.cos replaced with Math.tan
Mutant 388 in complex.js: b replaced with z['re']
Mutant 389 in complex.js: b replaced with b + 1
Mutant 390 in complex.js: b replaced with Math.PI
Mutant 391 in complex.js: Math.sin replaced with Math.cos
Mutant 392 in complex.js: Math.sin replaced with Math.tan
Mutant 393 in complex.js: Math.sin replaced with b + 1
Mutant 394 in complex.js: b replaced with b + 1
Mutant 395 in complex.js: b replaced with b * 2
Mutant 396 in complex.js: b replaced with Math.PI
Mutant 397 in complex.js: this['abs'] replaced with this['re'] + this['im']
Mutant 398 in complex.js: a >= 0 replaced with a > 0
Mutant 399 in complex.js: a >= 0 replaced with a <= 0
Mutant 400 in complex.js: a >= 0 replaced with b === 0
Mutant 401 in complex.js: b === 0 replaced with b !== 0
Mutant 402 in complex.js: b === 0 replaced with a < 0
Mutant 403 in complex.js: b === 0 replaced with a === 0 && b === 0
Mutant 404 in complex.js: a replaced with -a
Mutant 405 in complex.js: a replaced with b
Mutant 406 in complex.js: a replaced with Math.abs(a)
Mutant 407 in complex.js: Math.sqrt replaced with Math.cbrt
Mutant 408 in complex.js: 2.0 * (r + a) replaced with 3.0 * (r + a)
Mutant 409 in complex.js: 2.0 * (r + a) replaced with 2.0 * (r - a)
Mutant 410 in complex.js: 2.0 * (r + a) replaced with r + b
Mutant 411 in complex.js: Math.abs replaced with b + 1
Mutant 412 in complex.js: b replaced with a
Mutant 413 in complex.js: b replaced with b + 1
Mutant 414 in complex.js: b replaced with b * 2
Mutant 415 in complex.js: Math.sqrt replaced with Math.cbrt
Mutant 416 in complex.js: 2 * (r - a) replaced with r + a
Mutant 417 in complex.js: 2 * (r - a) replaced with 3 * (r - a)
Mutant 418 in complex.js: 2 * (r - a) replaced with 2 * (r + a)
Mutant 419 in complex.js: a <= 0 replaced with a < 0
Mutant 420 in complex.js: a <= 0 replaced with a === 0
Mutant 421 in complex.js: a <= 0 replaced with b > 0
Mutant 422 in complex.js: 2.0 * (r - a) replaced with 2.0 * (r + a)
Mutant 423 in complex.js: 2.0 * (r - a) replaced with Math.sqrt(r)
Mutant 424 in complex.js: 2.0 * (r - a) replaced with 2.0 * (a - r)
Mutant 425 in complex.js: Math.abs replaced with b * 2
Mutant 426 in complex.js: b replaced with a
Mutant 427 in complex.js: b replaced with Math.abs(b) + 1
Mutant 428 in complex.js: b replaced with b * 2
Mutant 429 in complex.js: Math.sqrt replaced with Math.cbrt
Mutant 430 in complex.js: 2 * (r + a) replaced with 2 * (r - a)
Mutant 431 in complex.js: 2 * (r + a) replaced with Math.sqrt(r)
Mutant 432 in complex.js: 2 * (r + a) replaced with 2 * (r + b)
Mutant 433 in complex.js: Math.exp replaced with Math.log
Mutant 434 in complex.js: this['re'] replaced with this['im']
Mutant 435 in complex.js: this['re'] replaced with this['re'] + 1
Mutant 436 in complex.js: this['re'] replaced with Math.log(this['re'])
Mutant 437 in complex.js: this['im'] === 0 replaced with this['im'] !== 0
Mutant 438 in complex.js: this['im'] === 0 replaced with this['re'] < 0
Mutant 439 in complex.js: this['im'] === 0 replaced with this['re'] === 0 && this['im'] === 0
Mutant 440 in complex.js: Math.cos replaced with Math.sin
Mutant 441 in complex.js: Math.cos replaced with Math.tan
Mutant 442 in complex.js: Math.cos replaced with 1
Mutant 443 in complex.js: this['im'] replaced with 0
Mutant 444 in complex.js: this['im'] replaced with Math.PI
Mutant 445 in complex.js: this['im'] replaced with this['re']
Mutant 446 in complex.js: Math.sin replaced with Math.cos
Mutant 447 in complex.js: Math.sin replaced with Math.tan
Mutant 448 in complex.js: Math.sin replaced with this['re']
Mutant 449 in complex.js: this['im'] replaced with this['re']
Mutant 450 in complex.js: this['im'] replaced with Math.PI
Mutant 451 in complex.js: this['im'] replaced with 0
Mutant 452 in complex.js: a replaced with a + 1
Mutant 453 in complex.js: a replaced with b
Mutant 454 in complex.js: a replaced with Math.log(a + 1)
Mutant 455 in complex.js: Math.cos replaced with Math.sin
Mutant 456 in complex.js: Math.cos replaced with Math.tan
Mutant 457 in complex.js: Math.cos replaced with Math.cosh
Mutant 458 in complex.js: b replaced with b + 1
Mutant 459 in complex.js: b replaced with b * 2
Mutant 460 in complex.js: b replaced with Math.PI
Mutant 461 in complex.js: b replaced with a
Mutant 462 in complex.js: b replaced with b + 1
Mutant 463 in complex.js: b replaced with Math.abs(b)
Mutant 464 in complex.js: a replaced with a + 1
Mutant 465 in complex.js: a replaced with b
Mutant 466 in complex.js: a replaced with Math.log(a + b)
Mutant 467 in complex.js: Math.sin replaced with Math.cos
Mutant 468 in complex.js: b replaced with a
Mutant 469 in complex.js: b replaced with Math.cos(b)
Mutant 470 in complex.js: b replaced with 0
Mutant 471 in complex.js: b === 0 && a > 0 replaced with b !== 0 && a >= 0
Mutant 472 in complex.js: b === 0 && a > 0 replaced with b === 0 || a < 0
Mutant 473 in complex.js: b === 0 && a > 0 replaced with b === 0 && a === 0
Mutant 474 in complex.js: logHypot(a, b) replaced with logHypot(a + b)
Mutant 475 in complex.js: logHypot(a, b) replaced with logHypot(Math.abs(a))
Mutant 476 in complex.js: logHypot(a, b) replaced with logHypot(Math.sqrt(a * a + b * b))
Mutant 477 in complex.js: a replaced with b
Mutant 478 in complex.js: a replaced with Math.abs(a)
Mutant 479 in complex.js: a replaced with 0
Mutant 480 in complex.js: b replaced with a
Mutant 481 in complex.js: b replaced with Math.abs(b)
Mutant 482 in complex.js: b replaced with 0
Mutant 483 in complex.js: Math.atan2(b, a) replaced with Math.atan2(a + b)
Mutant 484 in complex.js: Math.atan2(b, a) replaced with Math.atan2(b - a)
Mutant 485 in complex.js: Math.atan2(b, a) replaced with Math.atan2(this['re'] * this['im'])
Mutant 486 in complex.js: b replaced with this['im'] + 1
Mutant 487 in complex.js: b replaced with Math.abs(b)
Mutant 488 in complex.js: b replaced with 0
Mutant 489 in complex.js: a replaced with b
Mutant 490 in complex.js: a replaced with 0
Mutant 491 in complex.js: a replaced with Math.PI
Mutant 492 in complex.js: hypot(this['re'], this['im']) replaced with hypot(this['re'] + this['im'])
Mutant 493 in complex.js: hypot(this['re'], this['im']) replaced with hypot(this['re'] * this['im'])
Mutant 494 in complex.js: hypot(this['re'], this['im']) replaced with hypot(Math.sqrt(this['re'] * this['re'] + this['im'] * this['im'] + 1))
Mutant 495 in complex.js: hypot replaced with this['re'] + this['im']
Mutant 496 in complex.js: this['re'] replaced with this['im']
Mutant 497 in complex.js: this['re'] replaced with this['re'] + 1
Mutant 498 in complex.js: this['re'] replaced with Math.abs(this['re'])
Mutant 499 in complex.js: this['im'] replaced with this['re']
Mutant 500 in complex.js: this['im'] replaced with 0
Mutant 501 in complex.js: this['im'] replaced with this['im'] * 2
Mutant 502 in complex.js: Math.atan2(this['im'], this['re']) replaced with Math.atan2(this['re'] + 1)
Mutant 503 in complex.js: Math.atan2(this['im'], this['re']) replaced with Math.atan2(Math.abs(this['im']))
Mutant 504 in complex.js: Math.atan2(this['im'], this['re']) replaced with Math.atan2(this['im'] * 2)
Mutant 505 in complex.js: Math.atan2 replaced with Math.PI / 2
Mutant 506 in complex.js: this['im'] replaced with this['re']
Mutant 507 in complex.js: this['im'] replaced with 0
Mutant 508 in complex.js: this['im'] replaced with Math.abs(this['im'])
Mutant 509 in complex.js: this['re'] replaced with this['im']
Mutant 510 in complex.js: this['re'] replaced with 0
Mutant 511 in complex.js: this['re'] replaced with Math.abs(this['re'])
Mutant 512 in complex.js: Math.sin replaced with Math.cos
Mutant 513 in complex.js: a replaced with b
Mutant 514 in complex.js: a replaced with Math.PI
Mutant 515 in complex.js: a replaced with a + 1
Mutant 516 in complex.js: cosh replaced with sinh
Mutant 517 in complex.js: b replaced with a
Mutant 518 in complex.js: b replaced with b + 1
Mutant 519 in complex.js: b replaced with b * 2
Mutant 520 in complex.js: Math.cos replaced with Math.sin
Mutant 521 in complex.js: a replaced with b
Mutant 522 in complex.js: a replaced with Math.cos(a + 1)
Mutant 523 in complex.js: a replaced with Math.cos(a) + 1
Mutant 524 in complex.js: b replaced with b + 1
Mutant 525 in complex.js: b replaced with b * 2
Mutant 526 in complex.js: b replaced with 0
Mutant 527 in complex.js: Math.cos replaced with Math.sin
Mutant 528 in complex.js: a replaced with b
Mutant 529 in complex.js: a replaced with Math.PI
Mutant 530 in complex.js: a replaced with -1 * a
Mutant 531 in complex.js: cosh replaced with Math.sin
Mutant 532 in complex.js: b replaced with a
Mutant 533 in complex.js: b replaced with b + 1
Mutant 534 in complex.js: b replaced with -1 * b
Mutant 535 in complex.js: Math.sin replaced with Math.cos
Mutant 536 in complex.js: a replaced with b
Mutant 537 in complex.js: a replaced with Math.sin(a + 1)
Mutant 538 in complex.js: a replaced with Math.sin(a) + 1
Mutant 539 in complex.js: sinh replaced with Math.sin
Mutant 540 in complex.js: sinh replaced with Math.tan
Mutant 541 in complex.js: b replaced with b + 1
Mutant 542 in complex.js: b replaced with b * 2
Mutant 543 in complex.js: b replaced with this['re']
Mutant 544 in complex.js: Math.cos replaced with Math.sin
Mutant 545 in complex.js: a replaced with b
Mutant 546 in complex.js: a replaced with a + 1
Mutant 547 in complex.js: a replaced with Math.sin(a)
Mutant 548 in complex.js: b replaced with a
Mutant 549 in complex.js: b replaced with b + 1
Mutant 550 in complex.js: b replaced with Math.sin(b)
Mutant 551 in complex.js: Math.sin replaced with Math.cos
Mutant 552 in complex.js: a replaced with b
Mutant 553 in complex.js: a replaced with Math.PI
Mutant 554 in complex.js: a replaced with -1 * a
Mutant 555 in complex.js: sinh replaced with b * b
Mutant 556 in complex.js: b replaced with a
Mutant 557 in complex.js: b replaced with b + 1
Mutant 558 in complex.js: b replaced with b * 2
Mutant 559 in complex.js: Math.cos replaced with Math.sin
Mutant 560 in complex.js: Math.cos replaced with Math.tan
Mutant 561 in complex.js: a replaced with b
Mutant 562 in complex.js: a replaced with Math.sin(a)
Mutant 563 in complex.js: a replaced with Math.cos(a) + 1
Mutant 564 in complex.js: cosh replaced with Math.sin
Mutant 565 in complex.js: cosh replaced with Math.tan
Mutant 566 in complex.js: cosh replaced with b + 1
Mutant 567 in complex.js: b replaced with b + 1
Mutant 568 in complex.js: b replaced with a
Mutant 569 in complex.js: b replaced with 0
Mutant 570 in complex.js: Math.sin replaced with Math.cos
Mutant 571 in complex.js: a replaced with b
Mutant 572 in complex.js: a replaced with Math.cos(a)
Mutant 573 in complex.js: a replaced with Math.sin(a + b)
Mutant 574 in complex.js: sinh replaced with b + 1
Mutant 575 in complex.js: b replaced with a
Mutant 576 in complex.js: b replaced with b + 1
Mutant 577 in complex.js: b replaced with b * 2
Mutant 578 in complex.js: cosh replaced with sinh
Mutant 579 in complex.js: cosh replaced with Math.sin
Mutant 580 in complex.js: 2 * b replaced with b + 1
Mutant 581 in complex.js: 2 * b replaced with 2 * a
Mutant 582 in complex.js: 2 * b replaced with Math.sin(b)
Mutant 583 in complex.js: Math.cos replaced with Math.sin
Mutant 584 in complex.js: Math.cos replaced with Math.tan
Mutant 585 in complex.js: 2 * a replaced with a + 1
Mutant 586 in complex.js: 2 * a replaced with 2 * b
Mutant 587 in complex.js: 2 * a replaced with Math.PI
Mutant 588 in complex.js: Math.cos replaced with Math.sin
Mutant 589 in complex.js: Math.cos replaced with Math.tan
Mutant 590 in complex.js: a replaced with b
Mutant 591 in complex.js: a replaced with Math.sin(a)
Mutant 592 in complex.js: a replaced with 0
Mutant 593 in complex.js: cosh replaced with Math.sinh
Mutant 594 in complex.js: cosh replaced with Math.cos
Mutant 595 in complex.js: cosh replaced with Math.tanh
Mutant 596 in complex.js: b replaced with b + 1
Mutant 597 in complex.js: b replaced with a
Mutant 598 in complex.js: b replaced with 0
Mutant 599 in complex.js: Math.sin replaced with Math.cos
Mutant 600 in complex.js: a replaced with b
Mutant 601 in complex.js: a replaced with Math.cos(a + 1)
Mutant 602 in complex.js: a replaced with Math.sin(a) + 1
Mutant 603 in complex.js: sinh replaced with Math.sin
Mutant 604 in complex.js: sinh replaced with Math.cos
Mutant 605 in complex.js: sinh replaced with Math.tan
Mutant 606 in complex.js: b replaced with b + 1
Mutant 607 in complex.js: b replaced with b * 2
Mutant 608 in complex.js: b replaced with a
Mutant 609 in complex.js: cosh replaced with sinh
Mutant 610 in complex.js: cosh replaced with Math.cos
Mutant 611 in complex.js: 2 * b replaced with b + 1
Mutant 612 in complex.js: 2 * b replaced with b * b
Mutant 613 in complex.js: 2 * b replaced with 2 * a
Mutant 614 in complex.js: Math.cos replaced with Math.sin
Mutant 615 in complex.js: Math.cos replaced with Math.tan
Mutant 616 in complex.js: 2 * a replaced with a + b
Mutant 617 in complex.js: 2 * a replaced with Math.sin(a)
Mutant 618 in complex.js: 2 * a replaced with 2 * b
Mutant 619 in complex.js: Math.sin replaced with Math.cos
Mutant 620 in complex.js: a replaced with b
Mutant 621 in complex.js: a replaced with Math.cos(a)
Mutant 622 in complex.js: a replaced with Math.sin(a + b)
Mutant 623 in complex.js: cosh replaced with Math.sinh
Mutant 624 in complex.js: cosh replaced with Math.cos
Mutant 625 in complex.js: cosh replaced with Math.tanh
Mutant 626 in complex.js: b replaced with b + 1
Mutant 627 in complex.js: b replaced with b * 2
Mutant 628 in complex.js: b replaced with this['re']
Mutant 629 in complex.js: Math.cos replaced with Math.sin
Mutant 630 in complex.js: a replaced with b
Mutant 631 in complex.js: a replaced with Math.cos(a + b)
Mutant 632 in complex.js: a replaced with Math.sin(a) + 1
Mutant 633 in complex.js: sinh replaced with cosh
Mutant 634 in complex.js: sinh replaced with Math.sin
Mutant 635 in complex.js: sinh replaced with Math.cos
Mutant 636 in complex.js: b replaced with b + 1
Mutant 637 in complex.js: b replaced with b * 2
Mutant 638 in complex.js: b replaced with b / 2
Mutant 639 in complex.js: a === 0 replaced with a !== 0
Mutant 640 in complex.js: a === 0 replaced with b > 0
Mutant 641 in complex.js: a === 0 replaced with a + b === 0
Mutant 642 in complex.js: b === 1 replaced with b === 0
Mutant 643 in complex.js: b === 1 replaced with b !== 1
Mutant 644 in complex.js: b === 1 replaced with a === 1
Mutant 645 in complex.js: b === -1 replaced with b === 0
Mutant 646 in complex.js: b === -1 replaced with b !== -1
Mutant 647 in complex.js: b === -1 replaced with b > -1
Mutant 648 in complex.js: b === 0 replaced with b !== 0
Mutant 649 in complex.js: b === 0 replaced with a === 1
Mutant 650 in complex.js: b === 0 replaced with a + b === 0
Mutant 651 in complex.js: Math.atan2(1, a) replaced with Math.atan2(1, b)
Mutant 652 in complex.js: Math.atan2(1, a) replaced with Math.atan2(0, 0)
Mutant 653 in complex.js: Math.atan2(1, a) replaced with Math.atan2(a, 1)
Mutant 654 in complex.js: Math.atan2 replaced with Math.atan
Mutant 655 in complex.js: Math.atan2 replaced with Math.atanh
Mutant 656 in complex.js: 1 replaced with b
Mutant 657 in complex.js: 1 replaced with -1
Mutant 658 in complex.js: 1 replaced with a + 1
Mutant 659 in complex.js: a replaced with b
Mutant 660 in complex.js: a replaced with a + 1
Mutant 661 in complex.js: a replaced with 0
Mutant 662 in complex.js: a === 0 && b === 0 replaced with a !== 0 || b !== 0
Mutant 663 in complex.js: a === 0 && b === 0 replaced with a === 1 && b === 1
Mutant 664 in complex.js: a === 0 && b === 0 replaced with a + b === 0
Mutant 665 in complex.js: a === 0 && b === 0 replaced with a !== 0 || b !== 0
Mutant 666 in complex.js: a === 0 && b === 0 replaced with a === 0 && b > 0
Mutant 667 in complex.js: a === 0 && b === 0 replaced with a === 1 && b === 1
Mutant 668 in complex.js: a replaced with b
Mutant 669 in complex.js: a replaced with a + 1
Mutant 670 in complex.js: a replaced with a * 2
Mutant 671 in complex.js: Math.cos replaced with Math.sin
Mutant 672 in complex.js: Math.cos replaced with b * b
Mutant 673 in complex.js: b replaced with b + 1
Mutant 674 in complex.js: b replaced with a
Mutant 675 in complex.js: b replaced with b * 2
Mutant 676 in complex.js: a replaced with b
Mutant 677 in complex.js: a replaced with a + 1
Mutant 678 in complex.js: a replaced with -2 * a
Mutant 679 in complex.js: Math.sin replaced with Math.cos
Mutant 680 in complex.js: b replaced with b + 1
Mutant 681 in complex.js: b replaced with b * 2
Mutant 682 in complex.js: b replaced with a
Mutant 683 in complex.js: a replaced with b
Mutant 684 in complex.js: a replaced with a + 1
Mutant 685 in complex.js: a replaced with a * a
Mutant 686 in complex.js: Math.cos replaced with Math.sin
Mutant 687 in complex.js: Math.cos replaced with Math.tan
Mutant 688 in complex.js: Math.cos replaced with b + 1
Mutant 689 in complex.js: b replaced with a
Mutant 690 in complex.js: b replaced with Math.sin(b)
Mutant 691 in complex.js: b replaced with 0
Mutant 692 in complex.js: a replaced with b
Mutant 693 in complex.js: a replaced with a + 1
Mutant 694 in complex.js: a replaced with 0
Mutant 695 in complex.js: Math.sin replaced with Math.cos
Mutant 696 in complex.js: Math.sin replaced with b + 1
Mutant 697 in complex.js: b replaced with b + 1
Mutant 698 in complex.js: b replaced with a
Mutant 699 in complex.js: b replaced with 0
Mutant 700 in complex.js: a replaced with b
Mutant 701 in complex.js: a replaced with a + 1
Mutant 702 in complex.js: a replaced with 0
Mutant 703 in complex.js: Math.cos replaced with Math.sin
Mutant 704 in complex.js: b replaced with a
Mutant 705 in complex.js: b replaced with b + 1
Mutant 706 in complex.js: b replaced with Math.sin(b)
Mutant 707 in complex.js: a replaced with b
Mutant 708 in complex.js: a replaced with a + 1
Mutant 709 in complex.js: a replaced with a * 2
Mutant 710 in complex.js: Math.sin replaced with Math.cos
Mutant 711 in complex.js: Math.sin replaced with b + 1
Mutant 712 in complex.js: b replaced with a
Mutant 713 in complex.js: b replaced with b + 1
Mutant 714 in complex.js: b replaced with -b
Mutant 715 in complex.js: a replaced with a + 1
Mutant 716 in complex.js: a replaced with b
Mutant 717 in complex.js: a replaced with Math.sin(b)
Mutant 718 in complex.js: Math.cos replaced with Math.sin
Mutant 719 in complex.js: b replaced with a
Mutant 720 in complex.js: b replaced with b + 1
Mutant 721 in complex.js: b replaced with Math.sin(b)
Mutant 722 in complex.js: a replaced with a + 1
Mutant 723 in complex.js: a replaced with b
Mutant 724 in complex.js: a replaced with 0
Mutant 725 in complex.js: Math.sin replaced with Math.cos
Mutant 726 in complex.js: Math.sin replaced with b / d + 1
Mutant 727 in complex.js: b replaced with b + 1
Mutant 728 in complex.js: b replaced with b * 2
Mutant 729 in complex.js: b replaced with -1 * b
Mutant 730 in complex.js: Math.cos replaced with Math.sin
Mutant 731 in complex.js: Math.cos replaced with Math.cosh
Mutant 732 in complex.js: Math.cos replaced with Math.tan
Mutant 733 in complex.js: 2 * b replaced with b + 1
Mutant 734 in complex.js: 2 * b replaced with 2 * (a + b)
Mutant 735 in complex.js: 2 * b replaced with Math.sin(b)
Mutant 736 in complex.js: 2 * a replaced with a + a
Mutant 737 in complex.js: 2 * a replaced with a * 3
Mutant 738 in complex.js: 2 * a replaced with b
Mutant 739 in complex.js: sinh replaced with cosh
Mutant 740 in complex.js: sinh replaced with a + 1
Mutant 741 in complex.js: a replaced with b
Mutant 742 in complex.js: a replaced with a + 1
Mutant 743 in complex.js: a replaced with 0
Mutant 744 in complex.js: Math.cos replaced with Math.sin
Mutant 745 in complex.js: Math.cos replaced with Math.tan
Mutant 746 in complex.js: Math.cos replaced with Math.cosh
Mutant 747 in complex.js: b replaced with b + 1
Mutant 748 in complex.js: b replaced with a
Mutant 749 in complex.js: b replaced with Math.sin(b + 1)
Mutant 750 in complex.js: a replaced with b
Mutant 751 in complex.js: a replaced with a + 1
Mutant 752 in complex.js: a replaced with 0
Mutant 753 in complex.js: Math.sin replaced with Math.cos
Mutant 754 in complex.js: Math.sin replaced with Math.tan
Mutant 755 in complex.js: Math.sin replaced with b + 1
Mutant 756 in complex.js: b replaced with b + 1
Mutant 757 in complex.js: b replaced with a
Mutant 758 in complex.js: b replaced with b * 2
Mutant 759 in complex.js: Math.cos replaced with Math.sin
Mutant 760 in complex.js: Math.cos replaced with Math.tan
Mutant 761 in complex.js: 2 * b replaced with b + 1
Mutant 762 in complex.js: 2 * b replaced with 2 * a
Mutant 763 in complex.js: 2 * b replaced with Math.sin(b)
Mutant 764 in complex.js: cosh replaced with sinh
Mutant 765 in complex.js: 2 * a replaced with a + 1
Mutant 766 in complex.js: 2 * a replaced with Math.abs(a)
Mutant 767 in complex.js: 2 * a replaced with 0
Mutant 768 in complex.js: a replaced with b
Mutant 769 in complex.js: a replaced with a + 1
Mutant 770 in complex.js: a replaced with -2 * a
Mutant 771 in complex.js: Math.cos replaced with Math.sin
Mutant 772 in complex.js: Math.cos replaced with Math.tan
Mutant 773 in complex.js: b replaced with a
Mutant 774 in complex.js: b replaced with b + 1
Mutant 775 in complex.js: b replaced with Math.sin(b)
Mutant 776 in complex.js: a replaced with b
Mutant 777 in complex.js: a replaced with a + 1
Mutant 778 in complex.js: a replaced with -2 * a
Mutant 779 in complex.js: Math.sin replaced with Math.cos
Mutant 780 in complex.js: b replaced with a
Mutant 781 in complex.js: b replaced with b + 1
Mutant 782 in complex.js: b replaced with Math.sin(b) * 2
Mutant 783 in complex.js: this['asin'] replaced with this['acos']
Mutant 784 in complex.js: this['asin'] replaced with this['re'] + this['im']
Mutant 785 in complex.js: this['asin'] replaced with this['asin'] + 1
Mutant 786 in complex.js: this['acos'] replaced with this['re'] + this['im']
Mutant 787 in complex.js: res['im'] <= 0 replaced with res['im'] > 0
Mutant 788 in complex.js: res['im'] <= 0 replaced with res['re'] === 0
Mutant 789 in complex.js: res['im'] <= 0 replaced with res['im'] != 0
Mutant 790 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(x['re'] + x['im'])
Mutant 791 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(x['re'] * x['im'])
Mutant 792 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(x['re'] - x['im'])
Mutant 793 in complex.js: logHypot replaced with x['im'] * 2
Mutant 794 in complex.js: x['re'] replaced with x['im']
Mutant 795 in complex.js: x['re'] replaced with x['re'] + 1
Mutant 796 in complex.js: x['re'] replaced with x['re'] * 2
Mutant 797 in complex.js: x['im'] replaced with x['re'] + 1
Mutant 798 in complex.js: x['im'] replaced with Math.sin(x['im'])
Mutant 799 in complex.js: x['im'] replaced with 0
Mutant 800 in complex.js: Math.atan2(x['im'], temp) replaced with Math.atan2(Math.atan2(x['im'], x['re']) / 2)
Mutant 801 in complex.js: Math.atan2(x['im'], temp) replaced with Math.atan2(x['re'] / 2)
Mutant 802 in complex.js: Math.atan2(x['im'], temp) replaced with Math.atan2(0)
Mutant 803 in complex.js: Math.atan2 replaced with Math.atan
Mutant 804 in complex.js: Math.atan2 replaced with Math.atanh
Mutant 805 in complex.js: Math.atan2 replaced with Math.sin
Mutant 806 in complex.js: x['im'] replaced with x['re']
Mutant 807 in complex.js: x['im'] replaced with temp + 1
Mutant 808 in complex.js: x['im'] replaced with 0
Mutant 809 in complex.js: temp replaced with x['re']
Mutant 810 in complex.js: temp replaced with Math.PI
Mutant 811 in complex.js: temp replaced with 0
Mutant 812 in complex.js: noIM replaced with b > 0
Mutant 813 in complex.js: noIM replaced with a < 1
Mutant 814 in complex.js: noIM replaced with b !== 0
Mutant 815 in complex.js: a === 0 && b === 0 replaced with a !== 0 || b !== 0
Mutant 816 in complex.js: a === 0 && b === 0 replaced with a > 0 && b < 0
Mutant 817 in complex.js: a === 0 && b === 0 replaced with a === 1 && b === 1
Mutant 818 in complex.js: b === 0 replaced with b !== 0
Mutant 819 in complex.js: b === 0 replaced with a < 0
Mutant 820 in complex.js: b === 0 replaced with a === 1
Mutant 821 in complex.js: Math.log replaced with Math.exp
Mutant 822 in complex.js: Math.log replaced with Math.log1p
Mutant 823 in complex.js: a + Math.sqrt(a * a + 1) replaced with a - Math.sqrt(a * a + 1)
Mutant 824 in complex.js: a + Math.sqrt(a * a + 1) replaced with a + Math.sqrt(a * a - 1)
Mutant 825 in complex.js: a + Math.sqrt(a * a + 1) replaced with b + Math.sqrt(b * b + 1)
Mutant 826 in complex.js: this['isZero']() replaced with this['isInfinite']()
Mutant 827 in complex.js: this['isZero']() replaced with this['re'] === 0 && this['im'] !== 0
Mutant 828 in complex.js: this['isZero']() replaced with this['re'] < 0
Mutant 829 in complex.js: this['isZero']() replaced with this['re'] === 0 && this['im'] === 0
Mutant 830 in complex.js: this['isZero']() replaced with this['re'] !== 0 || this['im'] !== 0
Mutant 831 in complex.js: this['isZero']() replaced with this['isInfinite']()
Mutant 832 in complex.js: this['isInfinite']() replaced with this['isZero']()
Mutant 833 in complex.js: this['isInfinite']() replaced with this['re'] === 0
Mutant 834 in complex.js: this['isInfinite']() replaced with this['im'] > 0
Mutant 835 in complex.js: this['isInfinite'] replaced with this['re'] > 0
Mutant 836 in complex.js: this['isInfinite'] replaced with this['im'] < 0
Mutant 837 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(2, places || 1)
Mutant 838 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(Math.E, places || 0)
Mutant 839 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(Math.abs(places), 0)
Mutant 840 in complex.js: Math.pow replaced with Math.sqrt
Mutant 841 in complex.js: Math.pow replaced with Math.floor
Mutant 842 in complex.js: Math.pow replaced with Math.abs
Mutant 843 in complex.js: 10 replaced with 5
Mutant 844 in complex.js: 10 replaced with Math.E
Mutant 845 in complex.js: 10 replaced with this['re'] + this['im']
Mutant 846 in complex.js: Math.ceil replaced with Math.floor
Mutant 847 in complex.js: Math.ceil replaced with Math.round
Mutant 848 in complex.js: Math.ceil replaced with this['re'] * places + 1
Mutant 849 in complex.js: this['re'] * places replaced with this['im'] * places
Mutant 850 in complex.js: this['re'] * places replaced with this['re'] / places
Mutant 851 in complex.js: this['re'] * places replaced with Math.floor(this['re'] * places)
Mutant 852 in complex.js: this['im'] * places replaced with this['im'] + places
Mutant 853 in complex.js: this['im'] * places replaced with this['im'] * (places + 1)
Mutant 854 in complex.js: this['im'] * places replaced with this['re'] * places
Mutant 855 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(2, places || 0)
Mutant 856 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(Math.abs(this['re']), places || 0)
Mutant 857 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(Math.random() * 10, places || 0)
Mutant 858 in complex.js: Math.pow replaced with places + 1
Mutant 859 in complex.js: 10 replaced with 5
Mutant 860 in complex.js: 10 replaced with Math.E
Mutant 861 in complex.js: 10 replaced with this['re']
Mutant 862 in complex.js: places || 0 replaced with places + 1
Mutant 863 in complex.js: places || 0 replaced with places * 2
Mutant 864 in complex.js: places || 0 replaced with places && 0
Mutant 865 in complex.js: Math.floor replaced with Math.ceil
Mutant 866 in complex.js: Math.floor replaced with Math.round
Mutant 867 in complex.js: Math.floor replaced with this['re'] + 1
Mutant 868 in complex.js: this['re'] * places replaced with this['re'] / places
Mutant 869 in complex.js: this['re'] * places replaced with this['re'] + places
Mutant 870 in complex.js: this['re'] * places replaced with this['im'] * places
Mutant 871 in complex.js: Math.floor replaced with Math.ceil
Mutant 872 in complex.js: Math.floor replaced with Math.round
Mutant 873 in complex.js: Math.floor replaced with this['re'] * places
Mutant 874 in complex.js: this['im'] * places replaced with this['re'] * places
Mutant 875 in complex.js: this['im'] * places replaced with this['im'] + places
Mutant 876 in complex.js: this['im'] * places replaced with this['im'] / places
Mutant 877 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(5, places || 1)
Mutant 878 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(Math.pow(2, places || 0))
Mutant 879 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(Math.abs(places || 0))
Mutant 880 in complex.js: Math.pow replaced with Math.sqrt
Mutant 881 in complex.js: Math.pow replaced with Math.abs
Mutant 882 in complex.js: Math.pow replaced with Math.floor
Mutant 883 in complex.js: 10 replaced with 5
Mutant 884 in complex.js: 10 replaced with Math.E
Mutant 885 in complex.js: 10 replaced with places + 1
Mutant 886 in complex.js: places || 0 replaced with places + 1
Mutant 887 in complex.js: places || 0 replaced with places && 1
Mutant 888 in complex.js: places || 0 replaced with Math.floor(places || 0)
Mutant 889 in complex.js: Math.round replaced with Math.floor
Mutant 890 in complex.js: Math.round replaced with this['re'] * places
Mutant 891 in complex.js: this['re'] * places replaced with this['re'] / places
Mutant 892 in complex.js: this['re'] * places replaced with this['im'] * places
Mutant 893 in complex.js: this['re'] * places replaced with Math.floor(this['re'] * places)
Mutant 894 in complex.js: Math.round replaced with Math.floor
Mutant 895 in complex.js: Math.round replaced with this['im'] * places
Mutant 896 in complex.js: this['im'] * places replaced with this['im'] + places
Mutant 897 in complex.js: this['im'] * places replaced with this['im'] * -places
Mutant 898 in complex.js: this['im'] * places replaced with this['re'] * places
Mutant 899 in complex.js: z['re'] - this['re'] replaced with z['re'] + this['re']
Mutant 900 in complex.js: z['re'] - this['re'] replaced with z['re'] - (this['re'] + 1)
Mutant 901 in complex.js: z['re'] - this['re'] replaced with this['im'] - z['im']
Mutant 902 in complex.js: z['im'] - this['im'] replaced with z['im'] + this['im']
Mutant 903 in complex.js: z['im'] - this['im'] replaced with z['im'] * this['im']
Mutant 904 in complex.js: z['im'] - this['im'] replaced with z['re'] - this['im']
Mutant 905 in complex.js: this['isNaN']() replaced with this['isZero']()
Mutant 906 in complex.js: this['isNaN']() replaced with this['isFinite']() && this['isNaN']()
Mutant 907 in complex.js: this['isNaN']() replaced with this['re'] === 0 && this['im'] === 0
Mutant 908 in complex.js: this['isInfinite']() replaced with this['isFinite']() && this['isNaN']()
Mutant 909 in complex.js: this['isInfinite']() replaced with this['isFinite']() || this['isNaN']()
Mutant 910 in complex.js: this['isInfinite']() replaced with this['re'] === Infinity || this['im'] === Infinity
Mutant 911 in complex.js: Math.abs(a) < Complex['EPSILON'] replaced with Math.abs(a) > Complex['EPSILON']
Mutant 912 in complex.js: Math.abs(a) < Complex['EPSILON'] replaced with a !== 0
Mutant 913 in complex.js: Math.abs(a) < Complex['EPSILON'] replaced with Math.abs(this['re']) < Complex['EPSILON']
Mutant 914 in complex.js: Math.abs replaced with this['re'] * -1
Mutant 915 in complex.js: a replaced with this['re'] + 1
Mutant 916 in complex.js: a replaced with Math.abs(this['re'] - 1)
Mutant 917 in complex.js: a replaced with this['im']
Mutant 918 in complex.js: Math.abs(b) < Complex['EPSILON'] replaced with Math.abs(b) > Complex['EPSILON']
Mutant 919 in complex.js: Math.abs(b) < Complex['EPSILON'] replaced with b === Complex['EPSILON']
Mutant 920 in complex.js: Math.abs(b) < Complex['EPSILON'] replaced with b < 0
Mutant 921 in complex.js: Math.abs replaced with -1 * b
Mutant 922 in complex.js: b replaced with this['re']
Mutant 923 in complex.js: b replaced with Math.abs(this['im']) + 1
Mutant 924 in complex.js: b === 0 replaced with b !== 0
Mutant 925 in complex.js: b === 0 replaced with a === 1
Mutant 926 in complex.js: b === 0 replaced with this['im'] > 0
Mutant 927 in complex.js: a !== 0 replaced with a === 0
Mutant 928 in complex.js: a !== 0 replaced with b !== 0
Mutant 929 in complex.js: a !== 0 replaced with Math.abs(a) > Complex['EPSILON']
Mutant 930 in complex.js: b < 0 replaced with b > 0
Mutant 931 in complex.js: b < 0 replaced with a < 0
Mutant 932 in complex.js: b < 0 replaced with b === 1
Mutant 933 in complex.js: b < 0 replaced with b > 0
Mutant 934 in complex.js: b < 0 replaced with b === 1
Mutant 935 in complex.js: b < 0 replaced with a < 0
Mutant 936 in complex.js: 1 !== b replaced with b > 1
Mutant 937 in complex.js: 1 !== b replaced with b === 0
Mutant 938 in complex.js: 1 !== b replaced with b !== this['im']
Mutant 939 in complex.js: this['im'] === 0 replaced with this['im'] !== 0
Mutant 940 in complex.js: this['im'] === 0 replaced with this['re'] === 1
Mutant 941 in complex.js: this['im'] === 0 replaced with this['re'] + this['im'] === 0
Mutant 942 in complex.js: isNaN replaced with this['re'] === 0 && this['im'] === 0
Mutant 943 in complex.js: isNaN replaced with this['re'] < 0 || this['im'] < 0
Mutant 944 in complex.js: this['re'] replaced with this['im']
Mutant 945 in complex.js: this['re'] replaced with this['re'] + 1
Mutant 946 in complex.js: this['re'] replaced with undefined
Mutant 947 in complex.js: isNaN replaced with this['re'] === this['im']
Mutant 948 in complex.js: isNaN replaced with this['im'] === 0
Mutant 949 in complex.js: this['im'] replaced with this['re']
Mutant 950 in complex.js: this['im'] replaced with this['im'] + 1
Mutant 951 in complex.js: this['im'] replaced with this['im'] * 2
Mutant 952 in complex.js: isFinite replaced with this['re'] === Infinity
Mutant 953 in complex.js: isFinite replaced with this['re'] !== null
Mutant 954 in complex.js: this['re'] replaced with this['re'] + 1
Mutant 955 in complex.js: this['re'] replaced with this['re'] * 0
Mutant 956 in complex.js: this['re'] replaced with this['im']
Mutant 957 in complex.js: isFinite replaced with this['re'] === Infinity
Mutant 958 in complex.js: isFinite replaced with this['im'] !== 0
Mutant 959 in complex.js: this['im'] replaced with this['re'] + 1
Mutant 960 in complex.js: this['im'] replaced with this['im'] + 1
Mutant 961 in complex.js: this['im'] replaced with this['im'] * 0
Mutant 962 in complex.js: this['isNaN'] replaced with this['re'] === 0 && this['im'] === 0
Mutant 963 in complex.js: this['isFinite'] replaced with this['re'] === Infinity
Mutant 964 in complex.js: typeof define === 'function' && define['amd'] replaced with typeof define === 'string' && define['amd']
Mutant 965 in complex.js: typeof define === 'function' && define['amd'] replaced with typeof define === 'function' && define['commonjs']
Mutant 966 in complex.js: typeof define === 'function' && define['amd'] replaced with typeof define === 'function' && !define['amd']
Mutant 967 in complex.js: typeof exports === 'object' replaced with typeof exports === 'function'
Mutant 968 in complex.js: typeof exports === 'object' replaced with typeof module === 'undefined'
Mutant 969 in complex.js: typeof exports === 'object' replaced with typeof define === 'object'
Mutant 970 in complex.js: Object.defineProperty(Complex, "__esModule", {
  'value': true
}) replaced with Object.defineProperty(Complex, "__esModule", {
  'value': false
})
Mutant 971 in complex.js: Object.defineProperty(Complex, "__esModule", {
  'value': true
}) replaced with Object.defineProperty(Complex, "__esModule", {
  'value': undefined
})
Mutant 972 in complex.js: Object.defineProperty(Complex, "__esModule", {
  'value': true
}) replaced with Object.defineProperty(Complex, "__esModule", {
  'value': 1
})
Mutant 973 in complex.js: Complex replaced with Math
Mutant 974 in complex.js: Complex replaced with Complex['Complex']
Mutant 975 in complex.js: Complex replaced with Complex['NaN']
Mutant 976 in complex.js: "__esModule" replaced with "__isModule"
Mutant 977 in complex.js: "__esModule" replaced with "__esModule" + "extra"
Mutant 978 in complex.js: "__esModule" replaced with "__esModule" === false
Mutant 979 in complex.js: {
  'value': true
} replaced with {
  'value': false
}
Mutant 980 in complex.js: {
  'value': true
} replaced with {
  'value': undefined
}
Mutant 981 in complex.js: {
  'value': true
} replaced with {
  'value': this['re']
}
[32m13:55:27 (3157) INFO Instrumenter[39m Instrumented 1 source file(s) with 982 mutant(s)
[32m13:55:27 (3157) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m13:55:28 (3157) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m13:55:28 (3157) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m13:55:28 (3157) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 302 ms, overhead 1 ms).
Mutation testing 3% (elapsed: <1m, remaining: ~4m) 32/982 tested (32 survived, 0 timed out)
Mutation testing 6% (elapsed: <1m, remaining: ~4m) 64/982 tested (40 survived, 0 timed out)
Mutation testing 9% (elapsed: <1m, remaining: ~4m) 96/982 tested (44 survived, 0 timed out)
Mutation testing 13% (elapsed: <1m, remaining: ~4m) 128/982 tested (50 survived, 0 timed out)
Mutation testing 16% (elapsed: <1m, remaining: ~4m) 160/982 tested (58 survived, 0 timed out)
Mutation testing 19% (elapsed: ~1m, remaining: ~4m) 192/982 tested (65 survived, 0 timed out)
Mutation testing 22% (elapsed: ~1m, remaining: ~3m) 224/982 tested (73 survived, 0 timed out)
Mutation testing 26% (elapsed: ~1m, remaining: ~3m) 256/982 tested (86 survived, 0 timed out)
Mutation testing 29% (elapsed: ~1m, remaining: ~3m) 289/982 tested (92 survived, 0 timed out)
Mutation testing 32% (elapsed: ~1m, remaining: ~3m) 322/982 tested (95 survived, 0 timed out)
Mutation testing 36% (elapsed: ~1m, remaining: ~3m) 354/982 tested (104 survived, 0 timed out)
Mutation testing 39% (elapsed: ~2m, remaining: ~3m) 387/982 tested (109 survived, 0 timed out)
Mutation testing 42% (elapsed: ~2m, remaining: ~2m) 419/982 tested (112 survived, 0 timed out)
Mutation testing 46% (elapsed: ~2m, remaining: ~2m) 452/982 tested (115 survived, 0 timed out)
Mutation testing 49% (elapsed: ~2m, remaining: ~2m) 484/982 tested (121 survived, 0 timed out)
Mutation testing 52% (elapsed: ~2m, remaining: ~2m) 515/982 tested (122 survived, 0 timed out)
Mutation testing 55% (elapsed: ~2m, remaining: ~2m) 547/982 tested (124 survived, 0 timed out)
Mutation testing 59% (elapsed: ~3m, remaining: ~2m) 580/982 tested (126 survived, 0 timed out)
Mutation testing 62% (elapsed: ~3m, remaining: ~1m) 613/982 tested (159 survived, 0 timed out)
Mutation testing 65% (elapsed: ~3m, remaining: ~1m) 646/982 tested (190 survived, 0 timed out)
Mutation testing 69% (elapsed: ~3m, remaining: ~1m) 678/982 tested (212 survived, 0 timed out)
Mutation testing 72% (elapsed: ~3m, remaining: ~1m) 711/982 tested (213 survived, 0 timed out)
Mutation testing 75% (elapsed: ~3m, remaining: ~1m) 743/982 tested (226 survived, 0 timed out)
Mutation testing 79% (elapsed: ~4m, remaining: ~1m) 776/982 tested (259 survived, 0 timed out)
Mutation testing 82% (elapsed: ~4m, remaining: <1m) 809/982 tested (292 survived, 0 timed out)
Mutation testing 85% (elapsed: ~4m, remaining: <1m) 842/982 tested (318 survived, 0 timed out)
Mutation testing 89% (elapsed: ~4m, remaining: <1m) 875/982 tested (351 survived, 0 timed out)
Mutation testing 92% (elapsed: ~4m, remaining: <1m) 908/982 tested (362 survived, 0 timed out)
Mutation testing 95% (elapsed: ~4m, remaining: <1m) 939/982 tested (364 survived, 0 timed out)
Mutation testing 99% (elapsed: ~5m, remaining: <1m) 973/982 tested (379 survived, 0 timed out)

All tests
  ✓ All tests (killed 597)

[Survived] PrecomputedMutator
complex.js:41:12
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.sqrt(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:12
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.floor(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:12
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return -1 * x(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:21
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x + 1) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:21
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x * 2) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:21
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(Math.sin(x)) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:42
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.log(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:42
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.sin(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:42
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.abs(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:51
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x + 1) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:51
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x * 2) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:51
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(Math.sin(x)) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:56
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.log(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:65
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:65
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x + 1)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:65
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x * 2)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:12
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.sin(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:21
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x + 1) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:21
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x * 2) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:21
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(Math.abs(x)) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:38
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.log(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:38
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.abs(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:38
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.sin(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:47
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x + 1) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:47
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(-x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:47
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(Math.abs(x)) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:52
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.log(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:52
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.abs(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:52
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.sin(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:61
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:61
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(0)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:61
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x + 1)) * 0.5;

[Survived] PrecomputedMutator
complex.js:96:9
-       if (a < 3000 && b < 3000) {
+       if (a <= 3000 && b <= 3000) {

[Survived] PrecomputedMutator
complex.js:96:9
-       if (a < 3000 && b < 3000) {
+       if (a < 1000 && b < 1000) {

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a > b) {

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a === b) {

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a <= b) {

[Survived] PrecomputedMutator
complex.js:106:16
-       return a * Math.sqrt(1 + b * b);
+       return a * a + b(1 + b * b);

[Survived] PrecomputedMutator
complex.js:106:26
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sqrt(1 - b * b);

[Survived] PrecomputedMutator
complex.js:106:26
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sqrt(1 + a * a);

[Survived] PrecomputedMutator
complex.js:126:23
-         return Math.log(_b);
+         return Math.log(_a + _b);

[Survived] PrecomputedMutator
complex.js:130:23
-         return Math.log(_a);
+         return Math.log(Math.abs(a));

[Survived] PrecomputedMutator
complex.js:134:23
-         return Math.log(a * a + b * b) * 0.5;
+         return Math.log(Math.pow(a, 2) + Math.pow(b, 2)) * 0.5;

[Survived] PrecomputedMutator
complex.js:172:18
-       return 0.5 * Math.log(a * a + b * b) + Math.LN2;
+       return 0.5 * Math.log1p(a * a + b * b) + Math.LN2;

[Survived] PrecomputedMutator
complex.js:179:9
-       if (a === undefined || a === null) {
+       if (a == null) {

[Survived] PrecomputedMutator
complex.js:190:15
-             if ('im' in a && 're' in a) {
+             if ('im' in a || 're' in a) {

[Survived] PrecomputedMutator
complex.js:190:15
-             if ('im' in a && 're' in a) {
+             if (typeof a['re'] === 'number' && typeof a['im'] === 'number') {

[Survived] PrecomputedMutator
complex.js:194:34
-               if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {
+               if (!Number.isFinite(a['abs'] + 1) && Number.isFinite(a['arg'])) {

[Survived] PrecomputedMutator
complex.js:194:34
-               if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {
+               if (!Number.isFinite(a['abs'] * -1) && Number.isFinite(a['arg'])) {

[Survived] PrecomputedMutator
complex.js:194:47
-               if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {
+               if (!Number.isFinite(a['abs']) && Number.isInteger(a['arg'])) {

[Survived] PrecomputedMutator
complex.js:199:22
-             } else if ('r' in a && 'phi' in a) {
+             } else if ('r' in a || 'phi' in a) {

[Survived] PrecomputedMutator
complex.js:200:18
-               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
+               if (!Number.isInteger(a['r']) && Number.isFinite(a['phi'])) {

[Survived] PrecomputedMutator
complex.js:200:34
-               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
+               if (!Number.isFinite(a['r'] + 1) && Number.isFinite(a['phi'])) {

[Survived] PrecomputedMutator
complex.js:200:34
-               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
+               if (!Number.isFinite(a['r'] * 2) && Number.isFinite(a['phi'])) {

[Survived] PrecomputedMutator
complex.js:200:34
-               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
+               if (!Number.isFinite(a['r'] - 1) && Number.isFinite(a['phi'])) {

[Survived] PrecomputedMutator
complex.js:200:61
-               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
+               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'] + 1)) {

[Survived] PrecomputedMutator
complex.js:203:41
-               z['re'] = a['r'] * Math.cos(a['phi']);
+               z['re'] = a['r'] * Math.cos(a['r']);

[Survived] PrecomputedMutator
complex.js:204:41
-               z['im'] = a['r'] * Math.sin(a['phi']);
+               z['im'] = a['r'] * Math.sin(a['r']);

[Survived] PrecomputedMutator
complex.js:218:32
-             var tokens = a.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g);
+             var tokens = a.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|[^\d\s]/g);

[Survived] PrecomputedMutator
complex.js:222:15
-             if (tokens === null) {
+             if (tokens.length === 0) {

[Survived] PrecomputedMutator
complex.js:222:15
-             if (tokens === null) {
+             if (tokens === undefined) {

[Survived] PrecomputedMutator
complex.js:222:15
-             if (tokens === null) {
+             if (tokens == null) {

[Survived] PrecomputedMutator
complex.js:230:17
-               if (c === ' ' || c === '\t' || c === '\n') {
+               if (c === ' ' || c === '\t' || c === '\r') {

[Survived] PrecomputedMutator
complex.js:230:17
-               if (c === ' ' || c === '\t' || c === '\n') {
+               if (c === ' ' || c === '\t' || c === 'x') {

[Survived] PrecomputedMutator
complex.js:238:19
-                 if (plus + minus === 0) {
+                 if (plus - minus === 0) {

[Survived] PrecomputedMutator
complex.js:242:51
-                 if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
+                 if (tokens[i + 1] !== ' ' && !isNaN(parseFloat(tokens[i + 1] + '0'))) {

[Survived] PrecomputedMutator
complex.js:242:51
-                 if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
+                 if (tokens[i + 1] !== ' ' && !isNaN(parseFloat(tokens[i + 1]) + 1)) {

[Survived] PrecomputedMutator
complex.js:243:28
-                   z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
+                   z['im'] += Math.round((minus % 2 ? '-' : '') + tokens[i + 1]);

[Survived] PrecomputedMutator
complex.js:243:28
-                   z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
+                   z['im'] += parseInt((minus % 2 ? '-' : '') + tokens[i + 1]);

[Survived] PrecomputedMutator
complex.js:252:19
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (isNaN(c) && c !== '0') {

[Survived] PrecomputedMutator
complex.js:252:19
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (c.length === 0) {

[Survived] PrecomputedMutator
complex.js:252:47
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (plus + minus === 0 || isNaN(c + 1)) {

[Survived] PrecomputedMutator
complex.js:252:47
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (plus + minus === 0 || isNaN(c * 2)) {

[Survived] PrecomputedMutator
complex.js:267:15
-             if (plus + minus > 0) {
+             if (plus + minus < 0) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (z['re'] === 0 && z['im'] === 0) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (z['re'] < 0 || z['im'] < 0) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (z['re'] !== z['im']) {

[Survived] PrecomputedMutator
complex.js:281:15
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re'] + 1) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:15
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['im'] + 1) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:15
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re'] * 2) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:33
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re']) || isNaN(z['im'] + 1)) {

[Survived] PrecomputedMutator
complex.js:281:33
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re']) || isNaN(z['im'] * 2)) {

[Survived] PrecomputedMutator
complex.js:334:11
-         if (this['isInfinite']() && z['isInfinite']()) {
+         if (this['isInfinite']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:339:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() && z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:339:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isZero']() || z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:358:11
-         if (this['isInfinite']() && z['isInfinite']()) {
+         if (this['isInfinite']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:363:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isZero']() || z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:363:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() && z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:387:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() && !z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:416:11
-         if (this['isInfinite']() || z['isZero']()) {
+         if (this['isInfinite']() && z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (this['isZero']() && z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (this['isInfinite']() && z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:474:11
-         if (z['im'] === 0) {
+         if (this['im'] === 0) {

[Survived] PrecomputedMutator
complex.js:478:39
-             return new Complex(Math.pow(a, z['re']), 0);
+             return new Complex(Math.pow(Math.abs(a), z['re']), 0);

[Survived] PrecomputedMutator
complex.js:478:42
-             return new Complex(Math.pow(a, z['re']), 0);
+             return new Complex(Math.pow(a, Math.abs(z['re'])), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['re'] + 1), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, Math.abs(z['re'])), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, 0), 0);

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, z['im']));

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, z['re'] + 1));

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, Math.abs(z['re'])));

[Survived] PrecomputedMutator
complex.js:488:44
-                 return new Complex(-Math.pow(b, z['re']), 0);
+                 return new Complex(-Math.pow(Math.abs(b), z['re']), 0);

[Survived] PrecomputedMutator
complex.js:488:47
-                 return new Complex(-Math.pow(b, z['re']), 0);
+                 return new Complex(-Math.pow(b, z['re'] + 1), 0);

[Survived] PrecomputedMutator
complex.js:488:47
-                 return new Complex(-Math.pow(b, z['re']), 0);
+                 return new Complex(-Math.pow(b, Math.abs(z['re'])), 0);

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['im']));

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['re'] + 1));

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, Math.abs(z['re'])));

[Survived] PrecomputedMutator
complex.js:514:11
-         if (a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0) {
+         if (a === 0 && b === 0 && z['re'] >= 0 && z['im'] > 0) {

[Survived] PrecomputedMutator
complex.js:519:26
-         var loh = logHypot(a, b);
+         var loh = logHypot(Math.abs(a), b);

[Survived] PrecomputedMutator
complex.js:543:13
-           if (b === 0) {
+           if (a < 0) {

[Survived] PrecomputedMutator
complex.js:543:13
-           if (b === 0) {
+           if (a === 0 && b === 0) {

[Survived] PrecomputedMutator
complex.js:544:40
-             return new Complex(Math.sqrt(a), 0);
+             return new Complex(Math.sqrt(Math.abs(a)), 0);

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (this['im'] !== 0) {

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (this['re'] < 0) {

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (this['re'] === 0 && this['im'] === 0) {

[Survived] PrecomputedMutator
complex.js:598:45
-           Math.expm1(a) * Math.cos(b) + cosm1(b),
+           Math.expm1(a) * Math.cos(b) + cosm1(Math.abs(b)),

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (b !== 0 && a >= 0) {

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (b === 0 || a < 0) {

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (b === 0 && a === 0) {

[Survived] PrecomputedMutator
complex.js:617:18
-           logHypot(a, b),
+           logHypot(Math.abs(a), b),

[Survived] PrecomputedMutator
complex.js:617:21
-           logHypot(a, b),
+           logHypot(a, Math.abs(b)),

[Survived] PrecomputedMutator
complex.js:628:20
-         return hypot(this['re'], this['im']);
+         return hypot(Math.abs(this['re']), this['im']);

[Survived] PrecomputedMutator
complex.js:673:18
-           Math.cos(a) * cosh(b),
+           Math.cos(-1 * a) * cosh(b),

[Survived] PrecomputedMutator
complex.js:673:28
-           Math.cos(a) * cosh(b),
+           Math.cos(a) * cosh(-1 * b),

[Survived] PrecomputedMutator
complex.js:727:21
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * sinh(2 * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:21
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * Math.sin(2 * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(b + 1) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * a) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(Math.sin(b)) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:41
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.sin(2 * a);

[Survived] PrecomputedMutator
complex.js:727:41
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.tan(2 * a);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(a + 1);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * b);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(Math.PI);

[Survived] PrecomputedMutator
complex.js:730:9
-           Math.cos(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:9
-           Math.cos(a) * cosh(b) / d,
+           Math.tan(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:18
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:18
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(Math.sin(a)) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:18
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(0) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:23
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * Math.sinh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:23
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:730:23
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * Math.tanh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(b + 1) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(a) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(0) / d,

[Survived] PrecomputedMutator
complex.js:731:9
-           Math.sin(a) * sinh(b) / d);
+           Math.cos(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:18
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(b) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:18
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(Math.cos(a + 1)) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:18
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(Math.sin(a) + 1) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:23
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:731:23
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * Math.cos(b) / d);

[Survived] PrecomputedMutator
complex.js:731:23
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * Math.tan(b) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(b + 1) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(b * 2) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(a) / d);

[Survived] PrecomputedMutator
complex.js:745:21
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * sinh(2 * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:21
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * Math.cos(2 * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:26
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(b + 1) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:26
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(b * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:26
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * a) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:41
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.sin(2 * a);

[Survived] PrecomputedMutator
complex.js:745:41
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.tan(2 * a);

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(a + b);

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(Math.sin(a));

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * b);

[Survived] PrecomputedMutator
complex.js:748:9
-           Math.sin(a) * cosh(b) / d,
+           Math.cos(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:18
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:18
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(Math.cos(a)) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:18
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(Math.sin(a + b)) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:23
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * Math.sinh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:23
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:748:23
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * Math.tanh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:28
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b + 1) / d,

[Survived] PrecomputedMutator
complex.js:748:28
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b * 2) / d,

[Survived] PrecomputedMutator
complex.js:748:28
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * cosh(this['re']) / d,

[Survived] PrecomputedMutator
complex.js:749:10
-           -Math.cos(a) * sinh(b) / d);
+           -Math.sin(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:19
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(b) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:19
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(Math.cos(a + b)) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:19
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(Math.sin(a) + 1) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:24
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * cosh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:24
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:749:24
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * Math.cos(b) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(b + 1) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(b * 2) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(b / 2) / d);

[Survived] PrecomputedMutator
complex.js:810:11
-         if (a === 0) {
+         if (a + b === 0) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (b === 0) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (b !== 1) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (a === 1) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b === 0) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b !== -1) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b > -1) {

[Survived] PrecomputedMutator
complex.js:842:11
-         if (b === 0) {
+         if (b !== 0) {

[Survived] PrecomputedMutator
complex.js:842:11
-         if (b === 0) {
+         if (a === 1) {

[Survived] PrecomputedMutator
complex.js:842:11
-         if (b === 0) {
+         if (a + b === 0) {

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, b), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(0, 0), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(a, 1), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan(1, a), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atanh(1, a), 0);

[Survived] PrecomputedMutator
complex.js:843:39
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(b, a), 0);

[Survived] PrecomputedMutator
complex.js:843:39
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(-1, a), 0);

[Survived] PrecomputedMutator
complex.js:843:39
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(a + 1, a), 0);

[Survived] PrecomputedMutator
complex.js:843:42
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, b), 0);

[Survived] PrecomputedMutator
complex.js:843:42
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, a + 1), 0);

[Survived] PrecomputedMutator
complex.js:843:42
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, 0), 0);

[Survived] PrecomputedMutator
complex.js:868:11
-         if (a === 0 && b === 0) {
+         if (a !== 0 || b !== 0) {

[Survived] PrecomputedMutator
complex.js:868:11
-         if (a === 0 && b === 0) {
+         if (a === 1 && b === 1) {

[Survived] PrecomputedMutator
complex.js:868:11
-         if (a === 0 && b === 0) {
+         if (a + b === 0) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (a !== 0 || b !== 0) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (a === 0 && b > 0) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (a === 1 && b === 1) {

[Survived] PrecomputedMutator
complex.js:938:14
-           cosh(a) * Math.cos(b),
+           cosh(a * a) * Math.cos(b),

[Survived] PrecomputedMutator
complex.js:989:15
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.sin(2 * b) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:15
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cosh(2 * b) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:15
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.tan(2 * b) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(b + 1) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * (a + b)) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(Math.sin(b)) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(a + a);

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(a * 3);

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(b);

[Survived] PrecomputedMutator
complex.js:992:14
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * cosh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:14
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * a + 1(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(b) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a + 1) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(0) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:24
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.sin(b) / d,

[Survived] PrecomputedMutator
complex.js:992:24
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.tan(b) / d,

[Survived] PrecomputedMutator
complex.js:992:24
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:992:33
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cos(b + 1) / d,

[Survived] PrecomputedMutator
complex.js:992:33
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cos(a) / d,

[Survived] PrecomputedMutator
complex.js:992:33
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cos(Math.sin(b + 1)) / d,

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(b) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a + 1) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(0) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.cos(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.tan(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * b + 1(b) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(b + 1) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(a) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(b * 2) / d);

[Survived] PrecomputedMutator
complex.js:1007:15
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.sin(2 * b) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:15
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.tan(2 * b) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:24
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(b + 1) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:24
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * a) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:24
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(Math.sin(b)) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:33
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + sinh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:38
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + cosh(a + 1);

[Survived] PrecomputedMutator
complex.js:1007:38
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + cosh(Math.abs(a));

[Survived] PrecomputedMutator
complex.js:1007:38
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + cosh(0);

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(b) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a + 1) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(-2 * a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:23
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.sin(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:23
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.tan(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:32
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.cos(a) / d,

[Survived] PrecomputedMutator
complex.js:1010:32
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.cos(b + 1) / d,

[Survived] PrecomputedMutator
complex.js:1010:32
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.cos(Math.sin(b)) / d,

[Survived] PrecomputedMutator
complex.js:1011:19
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(b) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:19
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a + 1) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:19
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(-2 * a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:24
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.cos(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(a) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(b + 1) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(Math.sin(b) * 2) / d);

[Survived] PrecomputedMutator
complex.js:1026:17
-         var res = this['asin']();
+         var res = this['acos']();

[Survived] PrecomputedMutator
complex.js:1026:17
-         var res = this['asin']();
+         var res = this['re'] + this['im']();

[Survived] PrecomputedMutator
complex.js:1026:17
-         var res = this['asin']();
+         var res = this['asin'] + 1();

[Survived] PrecomputedMutator
complex.js:1046:17
-         var res = this['acos']();
+         var res = this['re'] + this['im']();

[Survived] PrecomputedMutator
complex.js:1047:11
-         if (res['im'] <= 0) {
+         if (res['im'] > 0) {

[Survived] PrecomputedMutator
complex.js:1047:11
-         if (res['im'] <= 0) {
+         if (res['re'] === 0) {

[Survived] PrecomputedMutator
complex.js:1047:11
-         if (res['im'] <= 0) {
+         if (res['im'] != 0) {

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] + x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] * x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] - x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = x['im'] * 2(x['re'], x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:26
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['im'], x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:26
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] + 1, x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:26
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] * 2, x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], x['re'] + 1) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], Math.sin(x['im'])) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], 0) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(Math.atan2(x['im'], x['re']) / 2) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['re'] / 2) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(0) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan(x['im'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atanh(x['im'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.sin(x['im'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:28
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['re'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:28
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(temp + 1, temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:28
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(0, temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], x['re']) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], Math.PI) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], 0) / 2;

[Survived] PrecomputedMutator
complex.js:1087:11
-         if (noIM) {
+         if (b > 0) {

[Survived] PrecomputedMutator
complex.js:1087:11
-         if (noIM) {
+         if (a < 1) {

[Survived] PrecomputedMutator
complex.js:1087:11
-         if (noIM) {
+         if (b !== 0) {

[Survived] PrecomputedMutator
complex.js:1105:11
-         if (a === 0 && b === 0) {
+         if (a !== 0 || b !== 0) {

[Survived] PrecomputedMutator
complex.js:1105:11
-         if (a === 0 && b === 0) {
+         if (a > 0 && b < 0) {

[Survived] PrecomputedMutator
complex.js:1105:11
-         if (a === 0 && b === 0) {
+         if (a === 1 && b === 1) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (b !== 0) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (a < 0) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (a === 1) {

[Survived] PrecomputedMutator
complex.js:1135:15
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.exp(a + Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:15
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log1p(a + Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a - Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(a * a - 1))

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(b + Math.sqrt(b * b + 1))

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['re'] === 0 && this['im'] !== 0) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['re'] < 0) {

[Survived] PrecomputedMutator
complex.js:1183:11
-         if (this['isZero']()) {
+         if (this['re'] === 0 && this['im'] === 0) {

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(2, places || 1);

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Math.E, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Math.abs(places), 0);

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.sqrt(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.floor(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.abs(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(5, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Math.E, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(this['re'] + this['im'], places || 0);

[Survived] PrecomputedMutator
complex.js:1229:9
-           Math.ceil(this['re'] * places) / places,
+           Math.floor(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:9
-           Math.ceil(this['re'] * places) / places,
+           Math.round(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:9
-           Math.ceil(this['re'] * places) / places,
+           this['re'] * places + 1(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(this['im'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(this['re'] / places) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(Math.floor(this['re'] * places)) / places,

[Survived] PrecomputedMutator
complex.js:1230:19
-           Math.ceil(this['im'] * places) / places);
+           Math.ceil(this['im'] + places) / places);

[Survived] PrecomputedMutator
complex.js:1230:19
-           Math.ceil(this['im'] * places) / places);
+           Math.ceil(this['im'] * (places + 1)) / places);

[Survived] PrecomputedMutator
complex.js:1230:19
-           Math.ceil(this['im'] * places) / places);
+           Math.ceil(this['re'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(2, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Math.abs(this['re']), places || 0);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Math.random() * 10, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = places + 1(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(5, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Math.E, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(this['re'], places || 0);

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places + 1);

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places * 2);

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places && 0);

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           Math.ceil(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           Math.round(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           this['re'] + 1(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(this['re'] / places) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(this['re'] + places) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(this['im'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1244:9
-           Math.floor(this['im'] * places) / places);
+           Math.ceil(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:9
-           Math.floor(this['im'] * places) / places);
+           Math.round(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:9
-           Math.floor(this['im'] * places) / places);
+           this['re'] * places(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:20
-           Math.floor(this['im'] * places) / places);
+           Math.floor(this['re'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:20
-           Math.floor(this['im'] * places) / places);
+           Math.floor(this['im'] + places) / places);

[Survived] PrecomputedMutator
complex.js:1244:20
-           Math.floor(this['im'] * places) / places);
+           Math.floor(this['im'] / places) / places);

[Survived] PrecomputedMutator
complex.js:1254:16
-         places = Math.pow(10, places || 0);
+         places = Math.abs(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1254:16
-         places = Math.pow(10, places || 0);
+         places = Math.floor(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1254:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places + 1);

[Survived] PrecomputedMutator
complex.js:1254:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places && 1);

[Survived] PrecomputedMutator
complex.js:1254:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, Math.floor(places || 0));

[Survived] PrecomputedMutator
complex.js:1257:9
-           Math.round(this['re'] * places) / places,
+           Math.floor(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1257:20
-           Math.round(this['re'] * places) / places,
+           Math.round(Math.floor(this['re'] * places)) / places,

[Survived] PrecomputedMutator
complex.js:1258:9
-           Math.round(this['im'] * places) / places);
+           Math.floor(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1272:23
-         return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&
+         return Math.abs(this['im'] - z['im']) <= Complex['EPSILON'] &&

[Survived] PrecomputedMutator
complex.js:1305:11
-         if (Math.abs(a) < Complex['EPSILON']) {
+         if (Math.abs(this['re']) < Complex['EPSILON']) {

[Survived] PrecomputedMutator
complex.js:1318:11
-         if (a !== 0) {
+         if (Math.abs(a) > Complex['EPSILON']) {

[Survived] PrecomputedMutator
complex.js:1368:20
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['im']) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:20
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re'] + 1) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(this['re']);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(this['im'] + 1);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(this['im'] * 2);

[Survived] PrecomputedMutator
complex.js:1388:23
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(this['re'] + 1) && isFinite(this['im']);

[Survived] PrecomputedMutator
complex.js:1388:23
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(this['re'] * 0) && isFinite(this['im']);

[Survived] PrecomputedMutator
complex.js:1388:47
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(this['re']) && isFinite(this['im'] + 1);

[Survived] PrecomputedMutator
complex.js:1388:47
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(this['re']) && isFinite(this['im'] * 0);

[Survived] PrecomputedMutator
complex.js:1411:7
-     if (typeof define === 'function' && define['amd']) {
+     if (typeof define === 'string' && define['amd']) {

[Survived] PrecomputedMutator
complex.js:1411:7
-     if (typeof define === 'function' && define['amd']) {
+     if (typeof define === 'function' && define['commonjs']) {

[Survived] PrecomputedMutator
complex.js:1411:7
-     if (typeof define === 'function' && define['amd']) {
+     if (typeof define === 'function' && !define['amd']) {

[Survived] PrecomputedMutator
complex.js:1416:5
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': false
+   });

[Survived] PrecomputedMutator
complex.js:1416:5
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': undefined
+   });

[Survived] PrecomputedMutator
complex.js:1416:5
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': 1
+   });

[Survived] PrecomputedMutator
complex.js:1416:27
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Math, "__esModule", { 'value': true });

[Survived] PrecomputedMutator
complex.js:1416:36
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__isModule", { 'value': true });

[Survived] PrecomputedMutator
complex.js:1416:36
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule" + "extra", { 'value': true });

[Survived] PrecomputedMutator
complex.js:1416:36
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule" === false, { 'value': true });

[Survived] PrecomputedMutator
complex.js:1416:50
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': false
+   });

[Survived] PrecomputedMutator
complex.js:1416:50
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': undefined
+   });

Ran 1.00 tests per mutant on average.
------------|---------|----------|-----------|------------|----------|----------|
File        | % score | # killed | # timeout | # survived | # no cov | # errors |
------------|---------|----------|-----------|------------|----------|----------|
All files   |   60.79 |      597 |         0 |        385 |        0 |        0 |
 complex.js |   60.79 |      597 |         0 |        385 |        0 |        0 |
------------|---------|----------|-----------|------------|----------|----------|
[32m14:00:31 (3157) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llmorpheus/llmorpheus/Complex.js/reports/mutation/mutation.html
[32m14:00:31 (3157) INFO MutationTestExecutor[39m Done in 5 minutes 5 seconds.

real	5m6.228s
user	5m16.533s
sys	0m58.058s
