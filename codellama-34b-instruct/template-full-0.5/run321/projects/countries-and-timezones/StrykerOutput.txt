*** using precomputed mutations ***
[32m15:25:53 (2469) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m15:25:53 (2469) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m15:25:53 (2469) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/countries-and-timezones/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m15:25:53 (2469) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m15:25:53 (2469) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m15:25:53 (2469) INFO ProjectReader[39m Found 3 of 481 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 221 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.5/mutants.json ***
Mutant 0 in build-country.js: !name replaced with name === null
Mutant 1 in build-country.js: !name replaced with name.length === 0
Mutant 2 in build-country.js: !name replaced with name.toLowerCase() === 'null'
Mutant 3 in build-country.js: data replaced with null
Mutant 4 in build-country.js: data replaced with undefined
Mutant 5 in build-country.js: data replaced with {}
Mutant 6 in build-country.js: !timezonesMap replaced with timezonesMap === undefined
Mutant 7 in build-country.js: !timezonesMap replaced with timezonesMap !== Object.prototype
Mutant 8 in build-country.js: data replaced with data.timezones[a] || {}
Mutant 9 in build-country.js: data replaced with data.timezones[a] || data.timezones[c]
Mutant 10 in build-country.js: data.timezones replaced with data.timezones.filter(tz => tz.r !== undefined)
Mutant 11 in build-country.js: data.timezones replaced with data.timezones.filter(tz => tz.c !== undefined)
Mutant 12 in build-country.js: data.timezones replaced with data.timezones.filter(tz => tz.a !== undefined)
Mutant 13 in build-country.js: !countries replaced with countries.length === 0
Mutant 14 in build-country.js: !countries replaced with countries.some(country => country === 'USA')
Mutant 15 in build-country.js: !countries replaced with countries.every(country => country !== 'USA')
Mutant 16 in build-country.js: !result[country] replaced with result[country]
Mutant 17 in build-country.js: !result[country] replaced with result.hasOwnProperty(country)
Mutant 18 in build-country.js: !result[country] replaced with Object.prototype.hasOwnProperty.call(result, country)
Mutant 19 in build-country.js: Object.assign(result, {
  [country]: {
    current: [],
    all: []
  }
}) replaced with Object.assign(result, {
  [country]: {
    current: [id],
    all: []
  }
})
Mutant 20 in build-country.js: Object.assign(result, {
  [country]: {
    current: [],
    all: []
  }
}) replaced with Object.assign(result, {
  [country]: {
    current: [],
    all: [id]
  }
})
Mutant 21 in build-country.js: result replaced with null
Mutant 22 in build-country.js: result replaced with {}
Mutant 23 in build-country.js: result replaced with undefined
Mutant 24 in build-country.js: {
  [country]: {
    current: [],
    all: []
  }
} replaced with {
  [country]: {
    current: [id],
    all: []
  }
}
Mutant 25 in build-country.js: {
  [country]: {
    current: [],
    all: []
  }
} replaced with {
  [country]: {
    current: [],
    all: [id]
  }
}
Mutant 26 in build-country.js: {
  [country]: {
    current: [],
    all: []
  }
} replaced with {
  [country]: {
    current: [id],
    all: [id]
  }
}
Mutant 27 in build-country.js: tz.r === undefined replaced with tz.r !== undefined
Mutant 28 in build-country.js: tz.r === undefined replaced with tz.r == null
Mutant 29 in build-country.js: tz.r === undefined replaced with tz.r === null
Mutant 30 in build-country.js: result[country].current.push replaced with result[country].current.unshift
Mutant 31 in build-country.js: result[country].current.push replaced with result[country].all.unshift
Mutant 32 in build-country.js: id replaced with id + 1
Mutant 33 in build-country.js: id replaced with "id"
Mutant 34 in build-country.js: id replaced with undefined
Mutant 35 in build-country.js: id replaced with tz.r
Mutant 36 in build-country.js: id replaced with tz.a
Mutant 37 in build-country.js: id replaced with tz.c[0]
Mutant 38 in build-timezone.js: !timezone replaced with !timezone.length
Mutant 39 in build-timezone.js: !timezone replaced with timezone.length === 0
Mutant 40 in build-timezone.js: Number.isInteger replaced with !Number.isInteger
Mutant 41 in build-timezone.js: Number.isInteger replaced with Number.isNaN
Mutant 42 in build-timezone.js: Number.isInteger replaced with Number.isFinite
Mutant 43 in build-timezone.js: tz.d replaced with tz.d + 1
Mutant 44 in build-timezone.js: tz.d replaced with tz.d * 2
Mutant 45 in build-timezone.js: tz.d replaced with tz.d - 1
Mutant 46 in build-timezone.js: utcOffset replaced with utcOffset + 1
Mutant 47 in build-timezone.js: utcOffset replaced with dstOffset - 1
Mutant 48 in build-timezone.js: utcOffset replaced with data.timezones[name].u
Mutant 49 in build-timezone.js: dstOffset replaced with dstOffset + 1
Mutant 50 in build-timezone.js: dstOffset replaced with dstOffset * 2
Mutant 51 in build-timezone.js: dstOffset replaced with dstOffset / 2
Mutant 52 in build-timezone.js: timezone.r replaced with timezone.r && timezone.r.length > 0
Mutant 53 in build-timezone.js: timezone.r replaced with timezone.r !== undefined
Mutant 54 in build-timezone.js: Math.floor replaced with Math.ceil
Mutant 55 in build-timezone.js: Math.floor replaced with Math.abs
Mutant 56 in build-timezone.js: offset / 60 replaced with offset % 60
Mutant 57 in build-timezone.js: offset / 60 replaced with offset + 60
Mutant 58 in build-timezone.js: offset / 60 replaced with offset - 60
Mutant 59 in build-timezone.js: hours replaced with Math.floor(offset / 61)
Mutant 60 in build-timezone.js: hours replaced with Math.ceil(offset / 60)
Mutant 61 in build-timezone.js: hours replaced with Math.round(offset / 60)
Mutant 62 in build-timezone.js: min replaced with Math.floor(offset)
Mutant 63 in build-timezone.js: min replaced with offset % 60
Mutant 64 in build-timezone.js: min replaced with Math.ceil(offset / 60)
Mutant 65 in build-timezone.js: Math.abs replaced with -Math.abs
Mutant 66 in build-timezone.js: Math.abs replaced with offset % 60
Mutant 67 in build-timezone.js: input replaced with input + 1
Mutant 68 in build-timezone.js: input replaced with input - 1
Mutant 69 in build-timezone.js: input replaced with input * 2
Mutant 70 in index.js: data.timezones replaced with data.timezones.length
Mutant 71 in index.js: data.timezones replaced with data.timezones[0]
Mutant 72 in index.js: data.timezones replaced with data.timezones.slice(1)
Mutant 73 in index.js: data.countries replaced with data.timezones
Mutant 74 in index.js: data.countries replaced with data.timezones.length
Mutant 75 in index.js: data.countries replaced with Object.keys(data.timezones).length
Mutant 76 in index.js: Object.assign(prev, {
  [id]: getCountry(id, options)
}) replaced with Object.assign(prev, {
  [id]: getTimezone(id)
})
Mutant 77 in index.js: Object.assign(prev, {
  [id]: getCountry(id, options)
}) replaced with Object.assign(prev, {
  [id]: getCountry(id + 1, options)
})
Mutant 78 in index.js: Object.assign(prev, {
  [id]: getCountry(id, options)
}) replaced with Object.assign(prev, {
  [id]: getCountry(id, {
    deprecated: true
  })
})
Mutant 79 in index.js: prev replaced with prev + 1
Mutant 80 in index.js: prev replaced with prev + 2
Mutant 81 in index.js: prev replaced with prev - 1
Mutant 82 in index.js: {
  [id]: getCountry(id, options)
} replaced with {
  [id]: getTimezone(id)
}
Mutant 83 in index.js: {
  [id]: getCountry(id, options)
} replaced with {
  [id]: buildCountry(data, id)
}
Mutant 84 in index.js: {
  [id]: getCountry(id, options)
} replaced with {
  [id]: data.countries[id]
}
Mutant 85 in index.js: getCountry(id, options) replaced with getCountry(id, options, null)
Mutant 86 in index.js: getCountry(id, options) replaced with getCountry(id, options, undefined)
Mutant 87 in index.js: getCountry(id, options) replaced with getCountry(id, options, NaN)
Mutant 88 in index.js: getCountry replaced with getCountryForTimezone
Mutant 89 in index.js: getCountry replaced with getTimezonesForCountry
Mutant 90 in index.js: id replaced with "foo"
Mutant 91 in index.js: options replaced with options || {}
Mutant 92 in index.js: options replaced with options && options.deprecated
Mutant 93 in index.js: options replaced with options.deprecated || {}
Mutant 94 in index.js: totalTimezones !== memoizedTimezones replaced with totalTimezones > memoizedTimezones
Mutant 95 in index.js: totalTimezones !== memoizedTimezones replaced with totalTimezones < memoizedTimezones
Mutant 96 in index.js: totalTimezones !== memoizedTimezones replaced with totalTimezones === memoizedTimezones
Mutant 97 in index.js: data.timezones replaced with data.countries
Mutant 98 in index.js: data.timezones replaced with data.timezones.length
Mutant 99 in index.js: data.timezones replaced with null
Mutant 100 in index.js: getTimezone replaced with getTimezone(name)
Mutant 101 in index.js: getTimezone replaced with getTimezone(name, {
  deprecated: true
})
Mutant 102 in index.js: getTimezone replaced with getTimezone(name, {
  allTimezones: true
})
Mutant 103 in index.js: deliverTimezones(timezones, options) replaced with deliverTimezones(timezones, options, country)
Mutant 104 in index.js: deliverTimezones(timezones, options) replaced with deliverTimezones(timezones, options, getTimezone)
Mutant 105 in index.js: timezones replaced with timezones.length
Mutant 106 in index.js: timezones replaced with timezones[0]
Mutant 107 in index.js: timezones replaced with timezones.filter(tz => tz.deprecated)
Mutant 108 in index.js: options replaced with options.deprecated
Mutant 109 in index.js: options replaced with options.deprecated = true
Mutant 110 in index.js: options replaced with options.deprecated ? options.deprecated : options
Mutant 111 in index.js: !countries[id] replaced with countries[id]
Mutant 112 in index.js: !countries[id] replaced with countries[id] === undefined
Mutant 113 in index.js: memoizeCountry replaced with memoizeTimezone
Mutant 114 in index.js: memoizeCountry replaced with buildCountry
Mutant 115 in index.js: memoizeCountry replaced with getCountry
Mutant 116 in index.js: buildCountry(data, id) replaced with buildCountry(data, id + 1)
Mutant 117 in index.js: buildCountry(data, id) replaced with buildCountry(data, id - 1)
Mutant 118 in index.js: buildCountry(data, id) replaced with buildCountry(data, id * 2)
Mutant 119 in index.js: buildCountry(data, id) replaced with buildCountry(data, id / 2)
Mutant 120 in index.js: data replaced with data.timezones
Mutant 121 in index.js: data replaced with data.countries
Mutant 122 in index.js: data replaced with data.timezones.length
Mutant 123 in index.js: id replaced with "id"
Mutant 124 in index.js: deliverCountry(countries[id], options) replaced with deliverCountry(countries[id].timezones, options)
Mutant 125 in index.js: deliverCountry(countries[id], options) replaced with deliverCountry(countries[id].timezones[id], options)
Mutant 126 in index.js: options replaced with options = null
Mutant 127 in index.js: options replaced with options.country = 'USA'
Mutant 128 in index.js: options replaced with options.timezone = 'UTC'
Mutant 129 in index.js: !country replaced with country && country.id
Mutant 130 in index.js: !country replaced with !country || country.id
Mutant 131 in index.js: !country replaced with country ? country.id : null
Mutant 132 in index.js: !timezones[name] replaced with timezones[name] === undefined
Mutant 133 in index.js: !timezones[name] replaced with timezones[name] === null
Mutant 134 in index.js: !timezones[name] replaced with timezones[name] === false
Mutant 135 in index.js: memoizeTimezone replaced with null
Mutant 136 in index.js: buildTimezone(data, name) replaced with buildTimezone(data, 'invalid-name')
Mutant 137 in index.js: buildTimezone(data, name) replaced with buildTimezone(data, name + 'invalid')
Mutant 138 in index.js: buildTimezone(data, name) replaced with buildTimezone(data, name.toLowerCase())
Mutant 139 in index.js: data replaced with undefined
Mutant 140 in index.js: data replaced with null
Mutant 141 in index.js: data replaced with {}
Mutant 142 in index.js: name replaced with "INVALID"
Mutant 143 in index.js: name replaced with "UTC"
Mutant 144 in index.js: name replaced with "America/New_York"
Mutant 145 in index.js: !timezone replaced with timezone == null
Mutant 146 in index.js: !timezone replaced with timezone.length === 0
Mutant 147 in index.js: !timezone replaced with !timezone.isValid()
Mutant 148 in index.js: timezone replaced with timezones.length
Mutant 149 in index.js: timezone replaced with timezones.name
Mutant 150 in index.js: timezone replaced with timezones[0]
Mutant 151 in index.js: tzName replaced with "random string"
Mutant 152 in index.js: tzName replaced with tzName + "random string"
Mutant 153 in index.js: tzName replaced with getTimezone(tzName).name
Mutant 154 in index.js: values.map replaced with values.forEach
Mutant 155 in index.js: values.map replaced with values.filter
Mutant 156 in index.js: values.map replaced with values.reduce
Mutant 157 in index.js: c => getCountry(c, options) replaced with c => getCountry(c, {
  deprecated: true
})
Mutant 158 in index.js: c => getCountry(c, options) replaced with c => getCountry(c, {
  allTimezones: true
})
Mutant 159 in index.js: c => getCountry(c, options) replaced with c => getTimezone(c)
Mutant 160 in index.js: getCountry(c, options) replaced with getCountry(c[0], options)
Mutant 161 in index.js: getCountry(c, options) replaced with getCountry(c[1], options)
Mutant 162 in index.js: getCountry(c, options) replaced with getCountry(c.length, options)
Mutant 163 in index.js: getCountry replaced with getCountriesForTimezone
Mutant 164 in index.js: getCountry replaced with getTimezonesForCountry
Mutant 165 in index.js: c replaced with c.deprecated
Mutant 166 in index.js: c replaced with c.timezones[0]
Mutant 167 in index.js: c replaced with c.timezones.length
Mutant 168 in index.js: options replaced with options.deprecated
Mutant 169 in index.js: options replaced with options.deprecated = true
Mutant 170 in index.js: options replaced with options.deprecated = !options.deprecated
Mutant 171 in index.js: getCountriesForTimezone(tzName, options) replaced with getCountriesForTimezone(tzName, {
  deprecated: true
})
Mutant 172 in index.js: getCountriesForTimezone(tzName, options) replaced with getCountriesForTimezone(tzName, {
  allTimezones: false
})
Mutant 173 in index.js: getCountriesForTimezone(tzName, options) replaced with getCountriesForTimezone(tzName, {
  allTimezones: true
})
Mutant 174 in index.js: getCountriesForTimezone replaced with getTimezonesForCountry
Mutant 175 in index.js: getCountriesForTimezone replaced with getCountryForTimezone
Mutant 176 in index.js: getCountriesForTimezone replaced with getAllCountries
Mutant 177 in index.js: tzName replaced with tzName.toLowerCase()
Mutant 178 in index.js: tzName replaced with tzName.substring(1)
Mutant 179 in index.js: tzName replaced with tzName.split(' ')[0]
Mutant 180 in index.js: options replaced with options.deprecated = true
Mutant 181 in index.js: options replaced with options.deprecated = false
Mutant 182 in index.js: options replaced with options.deprecated = !options.deprecated
Mutant 183 in index.js: getCountry(countryId, options) replaced with getCountry(countryId + 1, options)
Mutant 184 in index.js: getCountry(countryId, options) replaced with getCountry(countryId * 2, options)
Mutant 185 in index.js: getCountry(countryId, options) replaced with getCountry(countryId - 1, options)
Mutant 186 in index.js: getCountry replaced with getTimezone
Mutant 187 in index.js: getCountry replaced with getCountryForTimezone
Mutant 188 in index.js: getCountry replaced with getTimezonesForCountry
Mutant 189 in index.js: countryId replaced with "random_string"
Mutant 190 in index.js: countryId replaced with undefined
Mutant 191 in index.js: countryId replaced with null
Mutant 192 in index.js: options replaced with options || {}
Mutant 193 in index.js: options replaced with options && options.deprecated
Mutant 194 in index.js: options replaced with options.deprecated || false
Mutant 195 in index.js: !country replaced with country == undefined
Mutant 196 in index.js: !country replaced with country === null
Mutant 197 in index.js: !country replaced with !country.timezones
Mutant 198 in index.js: values.map replaced with values.forEach
Mutant 199 in index.js: getTimezone replaced with getTimezone(name)
Mutant 200 in index.js: getTimezone replaced with getTimezone(id)
Mutant 201 in index.js: getTimezone replaced with getCountry(id)
Mutant 202 in index.js: deprecated === true replaced with deprecated !== true
Mutant 203 in index.js: deprecated === true replaced with !deprecated
Mutant 204 in index.js: deprecated === true replaced with deprecated == false
Mutant 205 in index.js: tzs replaced with tzs.length
Mutant 206 in index.js: tzs replaced with Object.keys(tzs)
Mutant 207 in index.js: tzs replaced with tzs.map(tz => tz.name)
Mutant 208 in index.js: !tzs[key].deprecated replaced with tzs[key].deprecated
Mutant 209 in index.js: Object.assign(prev, {
  [key]: tzs[key]
}) replaced with Object.assign(prev, {
  [key]: tzs[key] + 1
})
Mutant 210 in index.js: Object.assign(prev, {
  [key]: tzs[key]
}) replaced with Object.assign(prev, {
  [key]: tzs[key] - 1
})
Mutant 211 in index.js: Object.assign(prev, {
  [key]: tzs[key]
}) replaced with Object.assign(prev, {
  [key]: tzs[key] * 2
})
Mutant 212 in index.js: prev replaced with prev + tzs[key]
Mutant 213 in index.js: prev replaced with prev[key] = tzs[key]
Mutant 214 in index.js: prev replaced with prev[key] = {
  ...tzs[key]
}
Mutant 215 in index.js: {
  [key]: tzs[key]
} replaced with {
  [key]: tzs[key] + 1
}
Mutant 216 in index.js: {
  [key]: tzs[key]
} replaced with {
  [key]: tzs[key] * 2
}
Mutant 217 in index.js: {
  [key]: tzs[key]
} replaced with {
  [key]: tzs[key] - 1
}
Mutant 218 in index.js: !country replaced with !countries[countryId]
Mutant 219 in index.js: !country replaced with countryId === null
Mutant 220 in index.js: !country replaced with Object.prototype.hasOwnProperty.call(countries, countryId)
[32m15:25:54 (2469) INFO Instrumenter[39m Instrumented 3 source file(s) with 221 mutant(s)
[32m15:25:54 (2469) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m15:25:55 (2469) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m15:25:55 (2469) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m15:25:57 (2469) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 2 seconds (net 2572 ms, overhead 1 ms).
Mutation testing 2% (elapsed: <1m, remaining: ~5m) 6/221 tested (0 survived, 0 timed out)
Mutation testing 5% (elapsed: <1m, remaining: ~5m) 12/221 tested (2 survived, 0 timed out)
Mutation testing 8% (elapsed: <1m, remaining: ~5m) 19/221 tested (2 survived, 0 timed out)
Mutation testing 11% (elapsed: <1m, remaining: ~5m) 26/221 tested (2 survived, 0 timed out)
Mutation testing 14% (elapsed: <1m, remaining: ~4m) 33/221 tested (3 survived, 0 timed out)
Mutation testing 18% (elapsed: ~1m, remaining: ~4m) 40/221 tested (3 survived, 0 timed out)
Mutation testing 20% (elapsed: ~1m, remaining: ~4m) 46/221 tested (7 survived, 0 timed out)
Mutation testing 23% (elapsed: ~1m, remaining: ~4m) 53/221 tested (7 survived, 0 timed out)
Mutation testing 27% (elapsed: ~1m, remaining: ~4m) 60/221 tested (9 survived, 0 timed out)
Mutation testing 30% (elapsed: ~1m, remaining: ~3m) 67/221 tested (12 survived, 0 timed out)
Mutation testing 33% (elapsed: ~1m, remaining: ~3m) 74/221 tested (12 survived, 0 timed out)
Mutation testing 37% (elapsed: ~2m, remaining: ~3m) 82/221 tested (12 survived, 0 timed out)
Mutation testing 40% (elapsed: ~2m, remaining: ~3m) 89/221 tested (15 survived, 0 timed out)
Mutation testing 43% (elapsed: ~2m, remaining: ~3m) 96/221 tested (17 survived, 0 timed out)
Mutation testing 46% (elapsed: ~2m, remaining: ~2m) 103/221 tested (17 survived, 0 timed out)
Mutation testing 49% (elapsed: ~2m, remaining: ~2m) 110/221 tested (18 survived, 0 timed out)
Mutation testing 52% (elapsed: ~2m, remaining: ~2m) 115/221 tested (19 survived, 0 timed out)
Mutation testing 53% (elapsed: ~3m, remaining: ~2m) 119/221 tested (19 survived, 1 timed out)
Mutation testing 57% (elapsed: ~3m, remaining: ~2m) 127/221 tested (19 survived, 1 timed out)
Mutation testing 60% (elapsed: ~3m, remaining: ~2m) 134/221 tested (20 survived, 1 timed out)
Mutation testing 64% (elapsed: ~3m, remaining: ~1m) 142/221 tested (20 survived, 1 timed out)
Mutation testing 67% (elapsed: ~3m, remaining: ~1m) 149/221 tested (21 survived, 1 timed out)
Mutation testing 70% (elapsed: ~3m, remaining: ~1m) 155/221 tested (21 survived, 1 timed out)
Mutation testing 73% (elapsed: ~4m, remaining: ~1m) 162/221 tested (21 survived, 1 timed out)
Mutation testing 76% (elapsed: ~4m, remaining: ~1m) 169/221 tested (21 survived, 1 timed out)
Mutation testing 79% (elapsed: ~4m, remaining: ~1m) 175/221 tested (22 survived, 1 timed out)
Mutation testing 81% (elapsed: ~4m, remaining: <1m) 181/221 tested (23 survived, 1 timed out)
Mutation testing 85% (elapsed: ~4m, remaining: <1m) 188/221 tested (25 survived, 1 timed out)
Mutation testing 87% (elapsed: ~4m, remaining: <1m) 194/221 tested (26 survived, 1 timed out)
Mutation testing 90% (elapsed: ~5m, remaining: <1m) 201/221 tested (28 survived, 1 timed out)
Mutation testing 94% (elapsed: ~5m, remaining: <1m) 208/221 tested (28 survived, 1 timed out)
Mutation testing 97% (elapsed: ~5m, remaining: <1m) 215/221 tested (29 survived, 1 timed out)

All tests
  ✓ All tests (killed 191)

[Survived] PrecomputedMutator
src/build-country.js:18:7
-     if (!timezonesMap) timezonesMap = buildTimezonesMap(data);
+     if (timezonesMap === undefined) timezonesMap = buildTimezonesMap(data);

[Survived] PrecomputedMutator
src/build-country.js:18:7
-     if (!timezonesMap) timezonesMap = buildTimezonesMap(data);
+     if (timezonesMap !== Object.prototype) timezonesMap = buildTimezonesMap(data);

[Survived] PrecomputedMutator
src/build-country.js:33:11
-         if (tz.r === undefined) result[country].current.push(id);
+         if (tz.r == null) result[country].current.push(id);

[Survived] PrecomputedMutator
src/build-timezone.js:14:21
-     const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;
+     const dstOffset = Number.isFinite(tz.d) ? tz.d : utcOffset;

[Survived] PrecomputedMutator
src/build-timezone.js:14:38
-     const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;
+     const dstOffset = Number.isInteger(tz.d + 1) ? tz.d : utcOffset;

[Survived] PrecomputedMutator
src/build-timezone.js:14:38
-     const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;
+     const dstOffset = Number.isInteger(tz.d * 2) ? tz.d : utcOffset;

[Survived] PrecomputedMutator
src/build-timezone.js:14:38
-     const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;
+     const dstOffset = Number.isInteger(tz.d - 1) ? tz.d : utcOffset;

[Survived] PrecomputedMutator
src/build-timezone.js:25:7
-     if (timezone.r) result.deprecated = true;
+     if (timezone.r !== undefined) result.deprecated = true;

[Survived] PrecomputedMutator
src/build-timezone.js:30:17
-     const hours = Math.floor(offset / 60);
+     const hours = Math.ceil(offset / 60);

[Survived] PrecomputedMutator
src/build-timezone.js:34:30
-     return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;
+     return `${sign}${getNumStr(Math.ceil(offset / 60))}:${getNumStr(min)}`;

[Survived] PrecomputedMutator
src/build-timezone.js:34:30
-     return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;
+     return `${sign}${getNumStr(Math.round(offset / 60))}:${getNumStr(min)}`;

[Survived] PrecomputedMutator
src/build-timezone.js:34:50
-     return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;
+     return `${sign}${getNumStr(hours)}:${getNumStr(offset % 60)}`;

[Survived] PrecomputedMutator
src/index.js:12:40
-       return Object.assign(prev, { [id]: getCountry(id, options) });
+       return Object.assign(prev, { [id]: getCountry(id, options, null) });

[Survived] PrecomputedMutator
src/index.js:12:40
-       return Object.assign(prev, { [id]: getCountry(id, options) });
+       return Object.assign(prev, { [id]: getCountry(id, options, undefined) });

[Survived] PrecomputedMutator
src/index.js:12:40
-       return Object.assign(prev, { [id]: getCountry(id, options) });
+       return Object.assign(prev, { [id]: getCountry(id, options, NaN) });

[Survived] PrecomputedMutator
src/index.js:12:55
-       return Object.assign(prev, { [id]: getCountry(id, options) });
+       return Object.assign(prev, { [id]: getCountry(id, options || {}) });

[Survived] PrecomputedMutator
src/index.js:17:7
-     if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);
+     if (totalTimezones > memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);

[Survived] PrecomputedMutator
src/index.js:18:10
-     return deliverTimezones(timezones, options);
+     return deliverTimezones(timezones, options, getTimezone);

[Survived] PrecomputedMutator
src/index.js:22:7
-     if (!countries[id]) memoizeCountry(buildCountry(data, id));
+     if (countries[id] === undefined) memoizeCountry(buildCountry(data, id));

[Survived] PrecomputedMutator
src/index.js:32:7
-     if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));
+     if (timezones[name] === undefined) memoizeTimezone(buildTimezone(data, name));

[Survived] PrecomputedMutator
src/index.js:37:7
-     if (!timezone) return;
+     if (timezone == null) return;

[Survived] PrecomputedMutator
src/index.js:45:42
-     return values.map((c) => getCountry(c, options));
+     return values.map((c) => getCountry(c, options.deprecated = !options.deprecated));

[Survived] PrecomputedMutator
src/index.js:49:42
-     const [main] = getCountriesForTimezone(tzName, options);
+     const [main] = getCountriesForTimezone(tzName.split(' ')[0], options);

[Survived] PrecomputedMutator
src/index.js:49:50
-     const [main] = getCountriesForTimezone(tzName, options);
+     const [main] = getCountriesForTimezone(tzName, options.deprecated = false);

[Survived] PrecomputedMutator
src/index.js:49:50
-     const [main] = getCountriesForTimezone(tzName, options);
+     const [main] = getCountriesForTimezone(tzName, options.deprecated = !options.deprecated);

[Survived] PrecomputedMutator
src/index.js:54:41
-     const country = getCountry(countryId, options);
+     const country = getCountry(countryId, options || {});

[Survived] PrecomputedMutator
src/index.js:55:7
-     if (!country) return null;
+     if (country == undefined) return null;

[Survived] PrecomputedMutator
src/index.js:55:7
-     if (!country) return null;
+     if (country === null) return null;

[Survived] PrecomputedMutator
src/index.js:64:45
-       if (!tzs[key].deprecated) Object.assign(prev, { [key]: tzs[key] });
+       if (!tzs[key].deprecated) Object.assign(prev[key] = {
+     ...tzs[key]
+   }, { [key]: tzs[key] });

Ran 1.00 tests per mutant on average.
-------------------|---------|----------|-----------|------------|----------|----------|
File               | % score | # killed | # timeout | # survived | # no cov | # errors |
-------------------|---------|----------|-----------|------------|----------|----------|
All files          |   86.88 |      191 |         1 |         29 |        0 |        0 |
 build-country.js  |   92.11 |       35 |         0 |          3 |        0 |        0 |
 build-timezone.js |   71.88 |       23 |         0 |          9 |        0 |        0 |
 index.js          |   88.74 |      133 |         1 |         17 |        0 |        0 |
-------------------|---------|----------|-----------|------------|----------|----------|
[32m15:31:24 (2469) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/countries-and-timezones/reports/mutation/mutation.html
[32m15:31:24 (2469) INFO MutationTestExecutor[39m Done in 5 minutes 31 seconds.

real	5m33.071s
user	5m52.129s
sys	0m51.546s
