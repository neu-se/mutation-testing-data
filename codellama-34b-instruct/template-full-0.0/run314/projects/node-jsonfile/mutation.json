{"files":{"index.js":{"language":"javascript","mutants":[{"id":"3","mutatorName":"PrecomputedMutator","replacement":"universalify.fromCallback(fs.readFile)(file, options.encoding)","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      1) \"before each\" hook for \"should throw an exception\"\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      2) \"before each\" hook for \"should include the filename in the error\"\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  27 passing (113ms)\n\n  2 failing\n\n\n  1) + readFileSync()\n       \"before each\" hook for \"should throw an exception\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync'\n  \n\n\n  2) + readFile()\n       \"before each\" hook for \"should include the filename in the error\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n  \n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":73,"line":19},"start":{"column":20,"line":19}}},{"id":"4","mutatorName":"PrecomputedMutator","replacement":"universalify.fromCallback(fs.readFile)(file, options.encoding || 'utf8')","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    1) should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      2) should properly parse\n\n\n  + readFile()\n\n    3) should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      4) \"before each\" hook for \"should include the filename in the error\"\n\n    > when invalid JSON and throws set to false\n\n      5) \"before each\" hook for \"should return null and no error\"\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      6) \"after each\" hook for \"should return an error\"\n\n\n\n  + writeFileSync()\n\n    7) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      8) should replace JSON\n\n    > when spaces passed as an option\n\n      9) should write file with spaces\n\n      10) should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      11) should not have a the EOL symbol at the end of file\n\n      12) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    13) should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  22 passing (2s)\n\n  13 failing\n\n\n\n  1) + readFileSync()\n       should read and parse JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile3.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:28:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  2) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     Error: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.readFileSync (node:fs:446:35)\n      at Object.readFileSync (index.js:92:314)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFile()\n       should read and parse JSON:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n  4) + readFile()\n       > when invalid JSON\n         \"before each\" hook for \"should include the filename in the error\":\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file.test.js:59:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  5) + readFile()\n       > when invalid JSON and throws set to false\n         \"before each\" hook for \"should return null and no error\":\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile4-invalid.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file.test.js:88:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  6) + readFile()\n       \"after each\" hook for \"should return an error\":\n     Error: ENOTEMPTY: directory not empty, rmdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n      at Object.rmdirSync (node:fs:1202:11)\n      at rmkidsSync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:364:25)\n      at rmdirSync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:342:7)\n      at Function.rimrafSync [as sync] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:312:9)\n      at Context.<anonymous> (test/read-file.test.js:21:12)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  7) + writeFileSync()\n       should serialize the JSON and write it to file:\n     Error: EINVAL: invalid argument, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile4.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.writeFileSync (node:fs:2440:35)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:29:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n  8) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.writeFileSync (node:fs:2440:35)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:51:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  9) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n     Error: EINVAL: invalid argument, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.writeFileSync (node:fs:2440:35)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:63:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  10) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.writeFileSync (node:fs:2440:35)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:71:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  11) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile2.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.writeFileSync (node:fs:2440:35)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:101:10)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  12) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile2.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.writeFileSync (node:fs:2440:35)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:112:10)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  13) + writeFile()\n       should serialize and write JSON:\n     Uncaught AssertionError [ERR_ASSERTION]: ifError got unwanted exception: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile/somefile2.json'\n      at ReadFileContext.callback (test/write-file.test.js:32:16)\n      at FSReqCallback.readFileAfterOpen [as oncomplete] (node:fs:299:13)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":73,"line":19},"start":{"column":20,"line":19}}},{"id":"1","mutatorName":"PrecomputedMutator","replacement":"options.encoding === 'utf8'","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    1) should read and parse JSON\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      2) should not throw an error\n\n      3) \"before each\" hook for \"should resolve the promise\"\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    4) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      5) should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      6) should use EOL override\n\n    > when passing encoding string as options\n\n      7) should not error\n\n    > when EOF option is set to a falsey value\n\n      8) should not have a the EOL symbol at the end of file\n\n      9) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    10) should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  33 passing (4s)\n\n  10 failing\n\n\n\n  1) + readFileSync()\n       should read and parse JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile3.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:28:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  2) + readFile()\n       > when passing encoding string as option\n         should not throw an error:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n  3) + readFile()\n       > when passing encoding string as option\n         \"before each\" hook for \"should resolve the promise\":\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file.test.js:219:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + writeFileSync()\n       should serialize the JSON and write it to file:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile4.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.writeFileSync (node:fs:2440:35)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:29:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  5) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.writeFileSync (node:fs:2440:35)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:51:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  6) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.writeFileSync (node:fs:2440:35)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:71:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  7) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile6.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:81:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  8) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile2.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.writeFileSync (node:fs:2440:35)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:101:10)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  9) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile2.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.writeFileSync (node:fs:2440:35)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:112:10)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  10) + writeFile()\n       should serialize and write JSON:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/write-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":34,"line":11},"start":{"column":7,"line":11}}},{"id":"0","mutatorName":"PrecomputedMutator","replacement":"options !== 'string'","status":"Timeout","location":{"end":{"column":34,"line":11},"start":{"column":7,"line":11}}},{"id":"2","mutatorName":"PrecomputedMutator","replacement":"options.encoding !== 'utf8'","status":"Timeout","location":{"end":{"column":34,"line":11},"start":{"column":7,"line":11}}},{"id":"6","mutatorName":"PrecomputedMutator","replacement":"universalify.fromPromise","status":"Timeout","location":{"end":{"column":45,"line":19},"start":{"column":20,"line":19}}},{"id":"5","mutatorName":"PrecomputedMutator","replacement":"universalify.fromCallback(fs.readFile)(file, options.encoding || 'utf8', options.flag || 'r')","status":"Timeout","location":{"end":{"column":73,"line":19},"start":{"column":20,"line":19}}},{"id":"10","mutatorName":"PrecomputedMutator","replacement":"file.toString()","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      2) should return null\n\n    > when invalid JSON and throws set to true\n\n      3) should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  40 passing (45ms)\n\n  3 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:42:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:58:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  3) + readFileSync()\n       > when invalid JSON and throws set to true\n         should throw an exception:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:73:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":63,"line":19},"start":{"column":59,"line":19}}},{"id":"13","mutatorName":"PrecomputedMutator","replacement":"null","status":"Survived","testsCompleted":1,"location":{"end":{"column":72,"line":19},"start":{"column":65,"line":19}}},{"id":"7","mutatorName":"PrecomputedMutator","replacement":"fs.readFileSync","status":"Timeout","location":{"end":{"column":57,"line":19},"start":{"column":46,"line":19}}},{"id":"15","mutatorName":"PrecomputedMutator","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      1) \"after each\" hook for \"should include the filename in the error\"\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      2) \"before each\" hook for \"should transform the JSON\"\n\n    > when passing encoding string as option\n\n      3) \"before each\" hook for \"should not throw an error\"\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      4) \"before each\" hook for \"should resolve the promise with parsed JSON\"\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  31 passing (45ms)\n\n  4 failing\n\n\n\n  1) + readFileSync()\n       \"after each\" hook for \"should include the filename in the error\":\n     Error: ENOTEMPTY: directory not empty, rmdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync'\n      at Object.rmdirSync (node:fs:1202:11)\n      at rmkidsSync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:364:25)\n      at rmdirSync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:342:7)\n      at Function.rimrafSync [as sync] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:312:9)\n      at Context.<anonymous> (test/read-file-sync.test.js:21:12)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFile()\n       > when JSON reviver is set\n         \"before each\" hook for \"should transform the JSON\":\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file.test.js:182:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFile()\n       > when passing encoding string as option\n         \"before each\" hook for \"should not throw an error\":\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file.test.js:219:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + readFile()\n       \"before each\" hook for \"should resolve the promise with parsed JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n  \n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":72,"line":19},"start":{"column":65,"line":19}}},{"id":"8","mutatorName":"PrecomputedMutator","replacement":"fs.readFile.bind(null, file)","status":"Timeout","location":{"end":{"column":57,"line":19},"start":{"column":46,"line":19}}},{"id":"14","mutatorName":"PrecomputedMutator","replacement":"undefined","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    1) should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    2) should read and parse JSON\n\n    3) should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      4) \"before each\" hook for \"should reject the promise with filename in error\"\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      5) should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  38 passing (2s)\n  5 failing\n\n\n\n  1) + readFileSync()\n       should read and parse JSON:\n     Error: EINVAL: invalid argument, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile3.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:28:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  2) + readFile()\n       should read and parse JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file.test.js:28:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n  3) + readFile()\n       should resolve a promise with parsed JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file.test.js:40:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  4) + readFile()\n       > when invalid JSON\n         \"before each\" hook for \"should reject the promise with filename in error\":\n     Error: EINVAL: invalid argument, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file.test.js:59:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  5) + readFile()\n       > when invalid JSON and throws set to false\n         should resolve the promise with null as data:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":72,"line":19},"start":{"column":65,"line":19}}},{"id":"19","mutatorName":"PrecomputedMutator","replacement":"JSON.parse(data, options ? options.reviver : undefined)","status":"Survived","testsCompleted":1,"location":{"end":{"column":61,"line":25},"start":{"column":11,"line":25}}},{"id":"20","mutatorName":"PrecomputedMutator","replacement":"JSON.parse(data, options ? options.reviver : {})","status":"Survived","testsCompleted":1,"location":{"end":{"column":61,"line":25},"start":{"column":11,"line":25}}},{"id":"21","mutatorName":"PrecomputedMutator","replacement":"JSON.parse(data, options ? options.reviver : 'null')","status":"Survived","testsCompleted":1,"location":{"end":{"column":61,"line":25},"start":{"column":11,"line":25}}},{"id":"9","mutatorName":"PrecomputedMutator","replacement":"fs.readFile.bind(null, file, options)","status":"Timeout","location":{"end":{"column":57,"line":19},"start":{"column":46,"line":19}}},{"id":"23","mutatorName":"PrecomputedMutator","replacement":"data.toString()","status":"Survived","testsCompleted":1,"location":{"end":{"column":26,"line":25},"start":{"column":22,"line":25}}},{"id":"12","mutatorName":"PrecomputedMutator","replacement":"file.path","status":"Timeout","location":{"end":{"column":63,"line":19},"start":{"column":59,"line":19}}},{"id":"11","mutatorName":"PrecomputedMutator","replacement":"file.name","status":"Timeout","location":{"end":{"column":63,"line":19},"start":{"column":59,"line":19}}},{"id":"25","mutatorName":"PrecomputedMutator","replacement":"options ? options.reviver : undefined","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    1) should read and parse JSON\n\n    > when invalid JSON\n\n      2) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      3) should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    4) \"before each\" hook for \"should read and parse JSON\"\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  26 passing (34ms)\n\n  4 failing\n\n\n\n  1) + readFileSync()\n       should read and parse JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile3.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:28:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  2) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:42:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:58:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + readFile()\n       \"before each\" hook for \"should read and parse JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n  \n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":60,"line":25},"start":{"column":28,"line":25}}},{"id":"16","mutatorName":"PrecomputedMutator","replacement":"data.toUpperCase()","status":"Timeout","location":{"end":{"column":23,"line":21},"start":{"column":19,"line":21}}},{"id":"17","mutatorName":"PrecomputedMutator","replacement":"data.split('')","status":"Timeout","location":{"end":{"column":23,"line":21},"start":{"column":19,"line":21}}},{"id":"28","mutatorName":"PrecomputedMutator","replacement":"shouldThrow === true","status":"Survived","testsCompleted":1,"location":{"end":{"column":20,"line":27},"start":{"column":9,"line":27}}},{"id":"30","mutatorName":"PrecomputedMutator","replacement":"universalify.fromStream","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\nTypeError: universalify.fromStream is not a function\n    at Object.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/index.js:82:116)\n    at Module._compile (node:internal/modules/cjs/loader:1562:14)\n    at Object..js (node:internal/modules/cjs/loader:1699:10)\n    at Module.load (node:internal/modules/cjs/loader:1313:32)\n    at Function._load (node:internal/modules/cjs/loader:1123:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:217:24)\n    at Module.require (node:internal/modules/cjs/loader:1335:12)\n    at require (node:internal/modules/helpers:136:16)\n    at Object.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file-sync.test.js:7:12)\n    at Module._compile (node:internal/modules/cjs/loader:1562:14)\n    at Object..js (node:internal/modules/cjs/loader:1699:10)\n    at Module.load (node:internal/modules/cjs/loader:1313:32)\n    at Function._load (node:internal/modules/cjs/loader:1123:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:217:24)\n    at Module.require (node:internal/modules/cjs/loader:1335:12)\n    at require (node:internal/modules/helpers:136:16)\n    at exports.requireOrImport (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/esm-utils.js:42:12)\n    at exports.loadFilesAsync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/esm-utils.js:55:34)\n    at Mocha.loadFilesAsync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/mocha.js:473:19)\n    at singleRun (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/cli/run-helpers.js:125:15)\n    at exports.runMocha (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/cli/run-helpers.js:190:10)\n    at exports.handler (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/cli/run.js:362:11)\n    at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/yargs/build/index.cjs:443:71\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":42,"line":38},"start":{"column":18,"line":38}}},{"id":"31","mutatorName":"PrecomputedMutator","replacement":"universalify.fromSync","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\nTypeError: universalify.fromSync is not a function\n    at Object.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/index.js:82:56)\n    at Module._compile (node:internal/modules/cjs/loader:1562:14)\n    at Object..js (node:internal/modules/cjs/loader:1699:10)\n    at Module.load (node:internal/modules/cjs/loader:1313:32)\n    at Function._load (node:internal/modules/cjs/loader:1123:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:217:24)\n    at Module.require (node:internal/modules/cjs/loader:1335:12)\n    at require (node:internal/modules/helpers:136:16)\n    at Object.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file-sync.test.js:7:12)\n    at Module._compile (node:internal/modules/cjs/loader:1562:14)\n    at Object..js (node:internal/modules/cjs/loader:1699:10)\n    at Module.load (node:internal/modules/cjs/loader:1313:32)\n    at Function._load (node:internal/modules/cjs/loader:1123:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:217:24)\n    at Module.require (node:internal/modules/cjs/loader:1335:12)\n    at require (node:internal/modules/helpers:136:16)\n    at exports.requireOrImport (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/esm-utils.js:42:12)\n    at exports.loadFilesAsync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/esm-utils.js:55:34)\n    at Mocha.loadFilesAsync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/mocha.js:473:19)\n    at singleRun (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/cli/run-helpers.js:125:15)\n    at exports.runMocha (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/cli/run-helpers.js:190:10)\n    at exports.handler (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/cli/run.js:362:11)\n    at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/yargs/build/index.cjs:443:71\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":42,"line":38},"start":{"column":18,"line":38}}},{"id":"26","mutatorName":"PrecomputedMutator","replacement":"options ? options.reviver : {}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      1) should transform the JSON\n\n    > when passing encoding string as option\n\n      2) should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    3) should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  40 passing (2s)\n\n  3 failing\n\n\n  1) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:114:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json'\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at Object.readFileSync (node:fs:442:20)\n      at Object.readFileSync (index.js:92:314)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFile()\n       should read and parse JSON:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":60,"line":25},"start":{"column":28,"line":25}}},{"id":"18","mutatorName":"PrecomputedMutator","replacement":"data.replace('a', 'b')","status":"Timeout","location":{"end":{"column":23,"line":21},"start":{"column":19,"line":21}}},{"id":"33","mutatorName":"PrecomputedMutator","replacement":"readFileSync","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    1) should read and parse JSON\n\n    2) should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      3) should include the filename in the error\n\n      4) should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      5) should return null and no error\n\n      6) should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      7) should return an error\n\n      8) should reject the promise\n\n    > when JSON reviver is set\n\n      9) should transform the JSON\n\n      10) should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      11) should not throw an error\n\n      12) should resolve the promise\n\n    > w/ BOM\n\n      13) should properly parse\n\n      14) should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  29 passing (114ms)\n\n  14 failing\n\n\n  1) + readFile()\n       should read and parse JSON:\n     TypeError: fn.apply(...).then is not a function\n      at Object.readFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:21:28)\n      at Context.<anonymous> (test/read-file.test.js:30:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n  2) + readFile()\n       should resolve a promise with parsed JSON:\n     TypeError: jf.readFile(...).then is not a function\n      at Context.<anonymous> (test/read-file.test.js:43:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n  3) + readFile()\n       > when invalid JSON\n         should include the filename in the error:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json: Expected property name or '}' in JSON at position 1 (line 1 column 2)\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Object.readFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:21:10)\n      at Context.<anonymous> (test/read-file.test.js:64:10)\n      at Context.<anonymous> (test/read-file.test.js:60:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + readFile()\n       > when invalid JSON\n         should reject the promise with filename in error:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json: Expected property name or '}' in JSON at position 1 (line 1 column 2)\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Object.readFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:18:45)\n      at Context.<anonymous> (test/read-file.test.js:72:10)\n      at Context.<anonymous> (test/read-file.test.js:60:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  5) + readFile()\n       > when invalid JSON and throws set to false\n         should return null and no error:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile4-invalid.json: Expected property name or '}' in JSON at position 1 (line 1 column 2)\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Object.readFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:21:10)\n      at Context.<anonymous> (test/read-file.test.js:95:10)\n      at Context.<anonymous> (test/read-file.test.js:89:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  6) + readFile()\n       > when invalid JSON and throws set to false\n         should resolve the promise with null as data:\n     TypeError: Cannot read properties of null (reading 'then')\n      at Context.<anonymous> (test/read-file.test.js:116:9)\n      at Context.<anonymous> (test/read-file.test.js:89:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  7) + readFile()\n       > when invalid JSON and throws set to true\n         should return an error:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile4-invalid.json: Expected property name or '}' in JSON at position 1 (line 1 column 2)\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Object.readFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:21:10)\n      at Context.<anonymous> (test/read-file.test.js:140:10)\n      at Context.<anonymous> (test/read-file.test.js:135:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  8) + readFile()\n       > when invalid JSON and throws set to true\n         should reject the promise:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile4-invalid.json: Expected property name or '}' in JSON at position 1 (line 1 column 2)\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Object.readFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:18:45)\n      at Context.<anonymous> (test/read-file.test.js:160:10)\n      at Context.<anonymous> (test/read-file.test.js:135:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  9) + readFile()\n       > when JSON reviver is set\n         should transform the JSON:\n     TypeError: fn.apply(...).then is not a function\n      at Object.readFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:21:28)\n      at Context.<anonymous> (test/read-file.test.js:187:10)\n      at Context.<anonymous> (test/read-file.test.js:183:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  10) + readFile()\n       > when JSON reviver is set\n         should resolve the promise with transformed JSON:\n     TypeError: jf.readFile(...).then is not a function\n      at Context.<anonymous> (test/read-file.test.js:198:10)\n      at Context.<anonymous> (test/read-file.test.js:183:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  11) + readFile()\n       > when passing encoding string as option\n         should not throw an error:\n     TypeError: fn.apply(...).then is not a function\n      at Object.readFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:21:28)\n      at Context.<anonymous> (test/read-file.test.js:224:10)\n      at Context.<anonymous> (test/read-file.test.js:220:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  12) + readFile()\n       > when passing encoding string as option\n         should resolve the promise:\n     TypeError: jf.readFile(...).then is not a function\n      at Context.<anonymous> (test/read-file.test.js:233:10)\n      at Context.<anonymous> (test/read-file.test.js:220:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  13) + readFile()\n       > w/ BOM\n         should properly parse:\n     TypeError: fn.apply(...).then is not a function\n      at Object.readFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:21:28)\n      at Context.<anonymous> (test/read-file.test.js:255:10)\n      at Context.<anonymous> (test/read-file.test.js:251:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  14) + readFile()\n       > w/ BOM\n         should resolve the promise with parsed JSON:\n     TypeError: jf.readFile(...).then is not a function\n      at Context.<anonymous> (test/read-file.test.js:264:10)\n      at Context.<anonymous> (test/read-file.test.js:251:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":52,"line":38},"start":{"column":43,"line":38}}},{"id":"34","mutatorName":"PrecomputedMutator","replacement":"writeFileSync","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    1) should read and parse JSON\n\n    2) should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      3) should include the filename in the error\n\n      4) should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      5) should return null and no error\n\n      6) should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      7) should return an error\n\n      8) should reject the promise\n\n    > when JSON reviver is set\n\n      9) should transform the JSON\n\n      10) should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      11) should not throw an error\n\n      12) should resolve the promise\n\n    > w/ BOM\n\n      13) should properly parse\n\n      14) should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  29 passing (45ms)\n\n  14 failing\n\n\n\n  1) + readFile()\n       should read and parse JSON:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Object.writeFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:21:10)\n      at Context.<anonymous> (test/read-file.test.js:30:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  2) + readFile()\n       should resolve a promise with parsed JSON:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Object.writeFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:18:45)\n      at Context.<anonymous> (test/read-file.test.js:42:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  3) + readFile()\n       > when invalid JSON\n         should include the filename in the error:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Object.writeFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:21:10)\n      at Context.<anonymous> (test/read-file.test.js:64:10)\n      at Context.<anonymous> (test/read-file.test.js:60:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  4) + readFile()\n       > when invalid JSON\n         should reject the promise with filename in error:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Object.writeFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:18:45)\n      at Context.<anonymous> (test/read-file.test.js:72:10)\n      at Context.<anonymous> (test/read-file.test.js:60:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  5) + readFile()\n       > when invalid JSON and throws set to false\n         should return null and no error:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Object.writeFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:21:10)\n      at Context.<anonymous> (test/read-file.test.js:95:10)\n      at Context.<anonymous> (test/read-file.test.js:89:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  6) + readFile()\n       > when invalid JSON and throws set to false\n         should resolve the promise with null as data:\n     TypeError: Cannot read properties of undefined (reading 'then')\n      at Context.<anonymous> (test/read-file.test.js:116:9)\n      at Context.<anonymous> (test/read-file.test.js:89:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  7) + readFile()\n       > when invalid JSON and throws set to true\n         should return an error:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Object.writeFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:21:10)\n      at Context.<anonymous> (test/read-file.test.js:140:10)\n      at Context.<anonymous> (test/read-file.test.js:135:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  8) + readFile()\n       > when invalid JSON and throws set to true\n         should reject the promise:\n     TypeError: Cannot read properties of undefined (reading 'catch')\n      at Context.<anonymous> (test/read-file.test.js:161:9)\n      at Context.<anonymous> (test/read-file.test.js:135:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  9) + readFile()\n       > when JSON reviver is set\n         should transform the JSON:\n     TypeError: Cannot read properties of undefined (reading 'then')\n      at Object.writeFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:21:27)\n      at Context.<anonymous> (test/read-file.test.js:187:10)\n      at Context.<anonymous> (test/read-file.test.js:183:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  10) + readFile()\n       > when JSON reviver is set\n         should resolve the promise with transformed JSON:\n     TypeError: Cannot read properties of undefined (reading 'then')\n      at Context.<anonymous> (test/read-file.test.js:198:9)\n      at Context.<anonymous> (test/read-file.test.js:183:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  11) + readFile()\n       > when passing encoding string as option\n         should not throw an error:\n     TypeError: Cannot read properties of undefined (reading 'then')\n      at Object.writeFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:21:27)\n      at Context.<anonymous> (test/read-file.test.js:224:10)\n      at Context.<anonymous> (test/read-file.test.js:220:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  12) + readFile()\n       > when passing encoding string as option\n         should resolve the promise:\n     TypeError: Cannot read properties of undefined (reading 'then')\n      at Context.<anonymous> (test/read-file.test.js:233:9)\n      at Context.<anonymous> (test/read-file.test.js:220:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  13) + readFile()\n       > w/ BOM\n         should properly parse:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Object.writeFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:21:10)\n      at Context.<anonymous> (test/read-file.test.js:255:10)\n      at Context.<anonymous> (test/read-file.test.js:251:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  14) + readFile()\n       > w/ BOM\n         should resolve the promise with parsed JSON:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Object.writeFileSync [as readFile] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/universalify/index.js:18:45)\n      at Context.<anonymous> (test/read-file.test.js:263:10)\n      at Context.<anonymous> (test/read-file.test.js:251:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":52,"line":38},"start":{"column":43,"line":38}}},{"id":"35","mutatorName":"PrecomputedMutator","replacement":"typeof options !== 'string'","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      1) should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      2) should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      3) should transform the JSON\n\n    > when passing encoding string as option\n\n      4) should not throw an error\n\n    > w/ BOM\n\n      5) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  38 passing (47ms)\n\n  5 failing\n\n\n  1) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     TypeError [ERR_INVALID_ARG_VALUE]: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json: The argument '[object Object]' is invalid encoding. Received 'encoding'\n      at assertEncoding (node:internal/fs/utils:157:11)\n      at getOptions (node:internal/fs/utils:334:5)\n      at Object.readFileSync (node:fs:436:13)\n      at Object.readFileSync (index.js:92:314)\n      at Context.<anonymous> (test/read-file-sync.test.js:64:22)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFileSync()\n       > when json file is missing and throws set to false\n         should return null:\n     TypeError [ERR_INVALID_ARG_VALUE]: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json: The argument '[object Object]' is invalid encoding. Received 'encoding'\n      at assertEncoding (node:internal/fs/utils:157:11)\n      at getOptions (node:internal/fs/utils:334:5)\n      at Object.readFileSync (node:fs:436:13)\n      at Object.readFileSync (index.js:92:314)\n      at Context.<anonymous> (test/read-file-sync.test.js:85:22)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     TypeError [ERR_INVALID_ARG_VALUE]: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: The argument '[object Object]' is invalid encoding. Received 'encoding'\n      at assertEncoding (node:internal/fs/utils:157:11)\n      at getOptions (node:internal/fs/utils:334:5)\n      at Object.readFileSync (node:fs:436:13)\n      at Object.readFileSync (index.js:92:314)\n      at Context.<anonymous> (test/read-file-sync.test.js:115:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: Cannot use 'in' operator to search for 'throws' in utf8\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at Object.readFileSync (index.js:90:32)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  5) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     TypeError [ERR_INVALID_ARG_VALUE]: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: The argument '[object Object]' is invalid encoding. Received 'encoding'\n      at assertEncoding (node:internal/fs/utils:157:11)\n      at getOptions (node:internal/fs/utils:334:5)\n      at Object.readFileSync (node:fs:436:13)\n      at Object.readFileSync (index.js:92:314)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":34,"line":41},"start":{"column":7,"line":41}}},{"id":"36","mutatorName":"PrecomputedMutator","replacement":"options.encoding","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      1) should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  42 passing (90ms)\n  1 failing\n\n\n  1) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: Cannot use 'in' operator to search for 'throws' in utf8\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at Object.readFileSync (index.js:90:32)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":34,"line":41},"start":{"column":7,"line":41}}},{"id":"37","mutatorName":"PrecomputedMutator","replacement":"options.encoding === 'utf8'","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      1) should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  42 passing (50ms)\n\n  1 failing\n\n\n\n  1) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: Cannot use 'in' operator to search for 'throws' in utf8\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at Object.readFileSync (index.js:90:32)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":34,"line":41},"start":{"column":7,"line":41}}},{"id":"22","mutatorName":"PrecomputedMutator","replacement":"data + 1","status":"Timeout","location":{"end":{"column":26,"line":25},"start":{"column":22,"line":25}}},{"id":"38","mutatorName":"PrecomputedMutator","replacement":"fs.readFileSync(file, options.encoding)","status":"Survived","testsCompleted":1,"location":{"end":{"column":49,"line":50},"start":{"column":19,"line":50}}},{"id":"39","mutatorName":"PrecomputedMutator","replacement":"fs.readFileSync(file, options.throws)","status":"Survived","testsCompleted":1,"location":{"end":{"column":49,"line":50},"start":{"column":19,"line":50}}},{"id":"40","mutatorName":"PrecomputedMutator","replacement":"fs.readFileSync(file, options.reviver)","status":"Survived","testsCompleted":1,"location":{"end":{"column":49,"line":50},"start":{"column":19,"line":50}}},{"id":"41","mutatorName":"PrecomputedMutator","replacement":"fs.readFile","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      1) should transform the JSON\n\n    > when passing encoding string as option\n\n      2) should not throw an error\n\n    > w/ BOM\n\n      3) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n      ✓ should resolve the promise\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n    > when spaces, EOL are passed as options\n      ✓ should use EOL override\n      ✓ should use EOL override, resolve the promise\n    > when passing encoding string as options\n      ✓ should not error\n      ✓ should not error, resolve the promise\n    > when EOF option is set to a falsey value\n      ✓ should not have a the EOL symbol at the end of file\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n    > when callback isn't passed & can't serialize\n      ✓ should not write an empty file, should reject the promise\n\n\n  40 passing (59ms)\n  3 failing\n\n  1) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     TypeError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: Cannot read properties of undefined (reading 'replace')\n      at stripBom (utils.js:65:236)\n      at Object.readFileSync (index.js:93:15)\n      at Context.<anonymous> (test/read-file-sync.test.js:115:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  2) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: Cannot read properties of undefined (reading 'replace')\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at stripBom (utils.js:65:236)\n      at Object.readFileSync (index.js:93:15)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  3) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     TypeError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: Cannot read properties of undefined (reading 'replace')\n      at stripBom (utils.js:65:236)\n      at Object.readFileSync (index.js:93:15)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":34,"line":50},"start":{"column":19,"line":50}}},{"id":"24","mutatorName":"PrecomputedMutator","replacement":"data.length","status":"Timeout","location":{"end":{"column":26,"line":25},"start":{"column":22,"line":25}}},{"id":"42","mutatorName":"PrecomputedMutator","replacement":"file + '.json'","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      1) should transform the JSON\n\n    > when passing encoding string as option\n\n      2) should not throw an error\n\n    > w/ BOM\n\n      3) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  40 passing (184ms)\n\n  3 failing\n\n\n\n  1) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     Error: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.readFileSync (node:fs:446:35)\n      at Object.readFileSync (index.js:92:314)\n      at Context.<anonymous> (test/read-file-sync.test.js:115:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json.json'\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at Object.readFileSync (node:fs:442:20)\n      at Object.readFileSync (index.js:92:314)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     Error: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.readFileSync (node:fs:446:35)\n      at Object.readFileSync (index.js:92:314)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":39,"line":50},"start":{"column":35,"line":50}}},{"id":"27","mutatorName":"PrecomputedMutator","replacement":"!shouldThrow","status":"Timeout","location":{"end":{"column":20,"line":27},"start":{"column":9,"line":27}}},{"id":"43","mutatorName":"PrecomputedMutator","replacement":"file.replace('.json', '')","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      1) should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      2) should transform the JSON\n\n    > when passing encoding string as option\n\n      3) \"before each\" hook for \"should not throw an error\"\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  39 passing (140ms)\n\n  3 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:58:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  2) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:114:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  3) + readFileSync()\n       \"before each\" hook for \"should not throw an error\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync'\n  \n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":39,"line":50},"start":{"column":35,"line":50}}},{"id":"46","mutatorName":"PrecomputedMutator","replacement":"options.throws","status":"Survived","testsCompleted":1,"location":{"end":{"column":48,"line":50},"start":{"column":41,"line":50}}},{"id":"29","mutatorName":"PrecomputedMutator","replacement":"universalify.fromCallback","status":"Timeout","location":{"end":{"column":42,"line":38},"start":{"column":18,"line":38}}},{"id":"47","mutatorName":"PrecomputedMutator","replacement":"options.reviver","status":"Survived","testsCompleted":1,"location":{"end":{"column":48,"line":50},"start":{"column":41,"line":50}}},{"id":"48","mutatorName":"PrecomputedMutator","replacement":"content.slice(1)","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      1) should transform the JSON\n\n    > when passing encoding string as option\n\n      2) should not throw an error\n\n    > w/ BOM\n\n      3) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  40 passing (121ms)\n\n  3 failing\n\n\n\n  1) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: Unexpected non-whitespace character after JSON at position 6 (line 1 column 7)\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Context.<anonymous> (test/read-file-sync.test.js:115:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: Unexpected non-whitespace character after JSON at position 6 (line 1 column 7)\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: Unexpected token '�', \"��{\"name\":\"JP\"}\" is not valid JSON\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":31,"line":51},"start":{"column":24,"line":51}}},{"id":"32","mutatorName":"PrecomputedMutator","replacement":"_writeFile","status":"Timeout","location":{"end":{"column":52,"line":38},"start":{"column":43,"line":38}}},{"id":"49","mutatorName":"PrecomputedMutator","replacement":"content.toUpperCase()","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    1) \"before each\" hook for \"should read and parse JSON\"\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n  34 passing (191ms)\n  1 failing\n\n\n  1) + readFileSync()\n       \"before each\" hook for \"should read and parse JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync'\n  \n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":31,"line":51},"start":{"column":24,"line":51}}},{"id":"45","mutatorName":"PrecomputedMutator","replacement":"options.encoding","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    1) \"before each\" hook for \"should read and parse JSON\"\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      2) should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      3) \"before each\" hook for \"should not throw an error\"\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  29 passing (2s)\n\n  3 failing\n\n\n\n  1) + readFileSync()\n       \"before each\" hook for \"should read and parse JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync'\n  \n\n\n  2) + readFile()\n       > when invalid JSON and throws set to false\n         should resolve the promise with null as data:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n  3) + readFile()\n       \"before each\" hook for \"should not throw an error\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n  \n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":48,"line":50},"start":{"column":41,"line":50}}},{"id":"51","mutatorName":"PrecomputedMutator","replacement":"JSON.parse(content, options.reviver, options.encoding)","status":"Survived","testsCompleted":1,"location":{"end":{"column":48,"line":52},"start":{"column":12,"line":52}}},{"id":"52","mutatorName":"PrecomputedMutator","replacement":"JSON.parse(content, options.reviver, options.encoding, options.flag)","status":"Survived","testsCompleted":1,"location":{"end":{"column":48,"line":52},"start":{"column":12,"line":52}}},{"id":"53","mutatorName":"PrecomputedMutator","replacement":"JSON.parse(content, options.reviver, options.encoding, options.flag, options.mode)","status":"Survived","testsCompleted":1,"location":{"end":{"column":48,"line":52},"start":{"column":12,"line":52}}},{"id":"54","mutatorName":"PrecomputedMutator","replacement":"content + \"bug\"","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      1) should transform the JSON\n\n    > when passing encoding string as option\n\n      2) should not throw an error\n\n    > w/ BOM\n\n      3) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  40 passing (244ms)\n\n  3 failing\n\n\n\n  1) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: Unexpected non-whitespace character after JSON at position 51 (line 1 column 52)\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Context.<anonymous> (test/read-file-sync.test.js:115:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: Unexpected non-whitespace character after JSON at position 13 (line 1 column 14)\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: Unexpected non-whitespace character after JSON at position 13 (line 1 column 14)\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":30,"line":52},"start":{"column":23,"line":52}}},{"id":"55","mutatorName":"PrecomputedMutator","replacement":"content.toUpperCase()","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      1) should transform the JSON\n\n    > when passing encoding string as option\n\n      2) should not throw an error\n\n    > w/ BOM\n\n      3) should properly parse\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n  40 passing (280ms)\n  3 failing\n\n\n  1) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\nundefined !== 'jp'\n\n      at Context.<anonymous> (test/read-file-sync.test.js:116:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\nundefined !== 'jp'\n\n      at Context.<anonymous> (test/read-file-sync.test.js:137:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFileSync()\n       > w/ BOM\n         should properly parse:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n  {\n+   name: 'JP'\n-   NAME: 'JP'\n  }\n\n      + expected - actual\n\n       {\n      -  \"name\": \"JP\"\n      +  \"NAME\": \"JP\"\n       }\n      \n      at Context.<anonymous> (test/read-file-sync.test.js:147:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":30,"line":52},"start":{"column":23,"line":52}}},{"id":"56","mutatorName":"PrecomputedMutator","replacement":"content.split(\"\")","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      1) should transform the JSON\n\n    > when passing encoding string as option\n\n      2) should not throw an error\n\n    > w/ BOM\n\n      3) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n  40 passing (164ms)\n  3 failing\n\n  1) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: Expected property name or '}' in JSON at position 1 (line 1 column 2)\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Context.<anonymous> (test/read-file-sync.test.js:115:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  2) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: Expected property name or '}' in JSON at position 1 (line 1 column 2)\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  3) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: Expected property name or '}' in JSON at position 1 (line 1 column 2)\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":30,"line":52},"start":{"column":23,"line":52}}},{"id":"57","mutatorName":"PrecomputedMutator","replacement":"options.reviver = null","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      1) should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      2) \"before each\" hook for \"should properly parse\"\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      3) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  39 passing (254ms)\n\n  3 failing\n\n\n  1) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n\n      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:\n\n  assert(data.day instanceof Date)\n\n      + expected - actual\n\n      -false\n      +true\n      \n      at Context.<anonymous> (test/read-file-sync.test.js:117:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  2) + readFile()\n       \"before each\" hook for \"should properly parse\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n  \n\n  3) + writeFile()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     Uncaught SyntaxError: \"undefined\" is not valid JSON\n      at JSON.parse (<anonymous>)\n      at ReadFileContext.callback (test/write-file.test.js:235:29)\n      at FSReqCallback.readFileAfterOpen [as oncomplete] (node:fs:299:13)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":47,"line":52},"start":{"column":32,"line":52}}},{"id":"44","mutatorName":"PrecomputedMutator","replacement":"file.toUpperCase()","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      1) should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      2) should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n  + readFile()\n\n    3) should read and parse JSON\n\n    4) should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      5) \"before each\" hook for \"should include the filename in the error\"\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    6) should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      7) \"before each\" hook for \"should not error, resolve the promise\"\n\n\n\n\n\n  32 passing (4s)\n  7 failing\n\n  1) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:58:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  2) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:114:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  3) + readFile()\n       should read and parse JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file.test.js:28:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n  4) + readFile()\n       should resolve a promise with parsed JSON:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n  5) + readFile()\n       > when invalid JSON\n         \"before each\" hook for \"should include the filename in the error\":\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file.test.js:59:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  6) + writeFile()\n       should serialize and write JSON:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/write-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n  7) + writeFile()\n       \"before each\" hook for \"should not error, resolve the promise\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile'\n  \n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":39,"line":50},"start":{"column":35,"line":50}}},{"id":"59","mutatorName":"PrecomputedMutator","replacement":"options.reviver = function (key, value) {\n  return value + 1;\n}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      1) should transform the JSON\n\n    > when passing encoding string as option\n\n      2) should not throw an error\n\n    > w/ BOM\n\n      3) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  40 passing (201ms)\n\n  3 failing\n\n\n\n  1) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\nundefined !== 'jp'\n\n      at Context.<anonymous> (test/read-file-sync.test.js:116:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\nundefined !== 'jp'\n\n      at Context.<anonymous> (test/read-file-sync.test.js:137:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  3) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ {\n+   name: 'JP'\n+ }\n- '[object Object]1'\n\n      at Context.<anonymous> (test/read-file-sync.test.js:147:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":47,"line":52},"start":{"column":32,"line":52}}},{"id":"60","mutatorName":"PrecomputedMutator","replacement":"!shouldThrow","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      2) should return null\n\n    > when invalid JSON and throws set to true\n\n      3) should throw an exception\n\n    > when json file is missing and throws set to false\n\n      4) should return null\n\n    > when json file is missing and throws set to true\n\n      5) should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  38 passing (208ms)\n\n  5 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:44:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:60:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFileSync()\n       > when invalid JSON and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:75:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + readFileSync()\n       > when json file is missing and throws set to false\n         should return null:\n     Error: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.readFileSync (node:fs:446:35)\n      at Object.readFileSync (index.js:92:314)\n      at Context.<anonymous> (test/read-file-sync.test.js:85:22)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  5) + readFileSync()\n       > when json file is missing and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:94:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":20,"line":54},"start":{"column":9,"line":54}}},{"id":"61","mutatorName":"PrecomputedMutator","replacement":"shouldThrow === false","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      2) should return null\n\n    > when invalid JSON and throws set to true\n\n      3) should throw an exception\n\n    > when json file is missing and throws set to false\n\n      4) should return null\n\n    > when json file is missing and throws set to true\n\n      5) should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  38 passing (135ms)\n\n  5 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:44:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:60:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFileSync()\n       > when invalid JSON and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:75:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + readFileSync()\n       > when json file is missing and throws set to false\n         should return null:\n     Error: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.readFileSync (node:fs:446:35)\n      at Object.readFileSync (index.js:92:314)\n      at Context.<anonymous> (test/read-file-sync.test.js:85:22)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  5) + readFileSync()\n       > when json file is missing and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:94:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":20,"line":54},"start":{"column":9,"line":54}}},{"id":"62","mutatorName":"PrecomputedMutator","replacement":"shouldThrow !== true","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      2) should return null\n\n    > when invalid JSON and throws set to true\n\n      3) should throw an exception\n\n    > when json file is missing and throws set to false\n\n      4) should return null\n\n    > when json file is missing and throws set to true\n\n      5) should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  38 passing (165ms)\n\n  5 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:44:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:60:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFileSync()\n       > when invalid JSON and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:75:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + readFileSync()\n       > when json file is missing and throws set to false\n         should return null:\n     Error: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.readFileSync (node:fs:446:35)\n      at Object.readFileSync (index.js:92:314)\n      at Context.<anonymous> (test/read-file-sync.test.js:85:22)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  5) + readFileSync()\n       > when json file is missing and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:94:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":20,"line":54},"start":{"column":9,"line":54}}},{"id":"50","mutatorName":"PrecomputedMutator","replacement":"content.split('')","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      1) should transform the JSON\n\n    > when passing encoding string as option\n\n      2) should not throw an error\n\n    > w/ BOM\n\n      3) should properly parse\n\n\n\n  + readFile()\n\n    4) should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    5) should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  38 passing (4s)\n\n  5 failing\n\n\n\n  1) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     TypeError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: content.split is not a function\n      at Object.readFileSync (index.js:93:57)\n      at Context.<anonymous> (test/read-file-sync.test.js:115:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: content.replace is not a function\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at stripBom (utils.js:65:236)\n      at Object.readFileSync (index.js:93:15)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     TypeError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: content.split is not a function\n      at Object.readFileSync (index.js:93:57)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + readFile()\n       should read and parse JSON:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n  5) + writeFile()\n       should write JSON, resolve promise:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/write-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":31,"line":51},"start":{"column":24,"line":51}}},{"id":"58","mutatorName":"PrecomputedMutator","replacement":"options.reviver = function (key, value) {\n  return value;\n}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      1) should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON (47ms)\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    2) should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  41 passing (2s)\n\n  2 failing\n\n\n\n  1) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n\n      AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:\n\n  assert(data.day instanceof Date)\n\n      + expected - actual\n\n      -false\n      +true\n      \n      at Context.<anonymous> (test/read-file-sync.test.js:117:7)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + writeFile()\n       should write JSON, resolve promise:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/write-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":47,"line":52},"start":{"column":32,"line":52}}},{"id":"63","mutatorName":"PrecomputedMutator","replacement":"stringify(obj, options.encoding)","status":"Timeout","location":{"end":{"column":38,"line":66},"start":{"column":15,"line":66}}},{"id":"64","mutatorName":"PrecomputedMutator","replacement":"stringify(obj, options.throws)","status":"Timeout","location":{"end":{"column":38,"line":66},"start":{"column":15,"line":66}}},{"id":"65","mutatorName":"PrecomputedMutator","replacement":"stringify(obj, options.reviver)","status":"Timeout","location":{"end":{"column":38,"line":66},"start":{"column":15,"line":66}}},{"id":"66","mutatorName":"PrecomputedMutator","replacement":"null","status":"Timeout","location":{"end":{"column":28,"line":66},"start":{"column":25,"line":66}}},{"id":"67","mutatorName":"PrecomputedMutator","replacement":"undefined","status":"Timeout","location":{"end":{"column":28,"line":66},"start":{"column":25,"line":66}}},{"id":"72","mutatorName":"PrecomputedMutator","replacement":"universalify.fromCallback(fs.writeFile)(file, str, options.encoding)","status":"Survived","testsCompleted":1,"location":{"end":{"column":68,"line":68},"start":{"column":9,"line":68}}},{"id":"68","mutatorName":"PrecomputedMutator","replacement":"{}","status":"Timeout","location":{"end":{"column":28,"line":66},"start":{"column":25,"line":66}}},{"id":"73","mutatorName":"PrecomputedMutator","replacement":"universalify.fromCallback(fs.writeFile)(file, str, options.throws)","status":"Survived","testsCompleted":1,"location":{"end":{"column":68,"line":68},"start":{"column":9,"line":68}}},{"id":"69","mutatorName":"PrecomputedMutator","replacement":"options.encoding","status":"Timeout","location":{"end":{"column":37,"line":66},"start":{"column":30,"line":66}}},{"id":"76","mutatorName":"PrecomputedMutator","replacement":"fs.writeFile.bind(fs)","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      1) \"before each\" hook for \"should return null\"\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      2) \"before each\" hook for \"should not throw an error\"\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  32 passing (52ms)\n\n  2 failing\n\n\n\n  1) + readFileSync()\n       \"before each\" hook for \"should return null\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync'\n  \n\n\n  2) + readFile()\n       \"before each\" hook for \"should not throw an error\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n  \n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":47,"line":68},"start":{"column":35,"line":68}}},{"id":"79","mutatorName":"PrecomputedMutator","replacement":"file.toUpperCase()","status":"Survived","testsCompleted":1,"location":{"end":{"column":53,"line":68},"start":{"column":49,"line":68}}},{"id":"77","mutatorName":"PrecomputedMutator","replacement":"fs.writeFile.bind(null)","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      2) should transform the JSON\n\n    > when passing encoding string as option\n\n      3) \"before each\" hook for \"should not throw an error\"\n\n\n\n  + readFile()\n\n    4) should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    5) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  37 passing (2s)\n  5 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     Error: EINVAL: invalid argument, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:42:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  2) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:114:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFileSync()\n       \"before each\" hook for \"should not throw an error\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync'\n  \n\n\n  4) + readFile()\n       should read and parse JSON:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n  5) + writeFileSync()\n       should serialize the JSON and write it to file:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile4.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.writeFileSync (node:fs:2440:35)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:29:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":47,"line":68},"start":{"column":35,"line":68}}},{"id":"70","mutatorName":"PrecomputedMutator","replacement":"options.throws","status":"Timeout","location":{"end":{"column":37,"line":66},"start":{"column":30,"line":66}}},{"id":"71","mutatorName":"PrecomputedMutator","replacement":"options.reviver","status":"Timeout","location":{"end":{"column":37,"line":66},"start":{"column":30,"line":66}}},{"id":"74","mutatorName":"PrecomputedMutator","replacement":"universalify.fromPromise","status":"Timeout","location":{"end":{"column":34,"line":68},"start":{"column":9,"line":68}}},{"id":"84","mutatorName":"PrecomputedMutator","replacement":"null","status":"Survived","testsCompleted":1,"location":{"end":{"column":67,"line":68},"start":{"column":60,"line":68}}},{"id":"75","mutatorName":"PrecomputedMutator","replacement":"fs.writeFileSync","status":"Timeout","location":{"end":{"column":47,"line":68},"start":{"column":35,"line":68}}},{"id":"78","mutatorName":"PrecomputedMutator","replacement":"file + '.json'","status":"Timeout","location":{"end":{"column":53,"line":68},"start":{"column":49,"line":68}}},{"id":"85","mutatorName":"PrecomputedMutator","replacement":"undefined","status":"Survived","testsCompleted":1,"location":{"end":{"column":67,"line":68},"start":{"column":60,"line":68}}},{"id":"86","mutatorName":"PrecomputedMutator","replacement":"{}","status":"Survived","testsCompleted":1,"location":{"end":{"column":67,"line":68},"start":{"column":60,"line":68}}},{"id":"88","mutatorName":"PrecomputedMutator","replacement":"_writeFileSync","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\nReferenceError: _writeFileSync is not defined\n    at Object.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/index.js:113:199)\n    at Module._compile (node:internal/modules/cjs/loader:1562:14)\n    at Object..js (node:internal/modules/cjs/loader:1699:10)\n    at Module.load (node:internal/modules/cjs/loader:1313:32)\n    at Function._load (node:internal/modules/cjs/loader:1123:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:217:24)\n    at Module.require (node:internal/modules/cjs/loader:1335:12)\n    at require (node:internal/modules/helpers:136:16)\n    at Object.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file-sync.test.js:7:12)\n    at Module._compile (node:internal/modules/cjs/loader:1562:14)\n    at Object..js (node:internal/modules/cjs/loader:1699:10)\n    at Module.load (node:internal/modules/cjs/loader:1313:32)\n    at Function._load (node:internal/modules/cjs/loader:1123:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:217:24)\n    at Module.require (node:internal/modules/cjs/loader:1335:12)\n    at require (node:internal/modules/helpers:136:16)\n    at exports.requireOrImport (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/esm-utils.js:42:12)\n    at exports.loadFilesAsync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/esm-utils.js:55:34)\n    at Mocha.loadFilesAsync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/mocha.js:473:19)\n    at singleRun (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/cli/run-helpers.js:125:15)\n    at exports.runMocha (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/cli/run-helpers.js:190:10)\n    at exports.handler (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/cli/run.js:362:11)\n    at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/yargs/build/index.cjs:443:71\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":54,"line":71},"start":{"column":44,"line":71}}},{"id":"89","mutatorName":"PrecomputedMutator","replacement":"_writeFileAsync","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\nReferenceError: _writeFileAsync is not defined\n    at Object.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/index.js:113:156)\n    at Module._compile (node:internal/modules/cjs/loader:1562:14)\n    at Object..js (node:internal/modules/cjs/loader:1699:10)\n    at Module.load (node:internal/modules/cjs/loader:1313:32)\n    at Function._load (node:internal/modules/cjs/loader:1123:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:217:24)\n    at Module.require (node:internal/modules/cjs/loader:1335:12)\n    at require (node:internal/modules/helpers:136:16)\n    at Object.<anonymous> (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file-sync.test.js:7:12)\n    at Module._compile (node:internal/modules/cjs/loader:1562:14)\n    at Object..js (node:internal/modules/cjs/loader:1699:10)\n    at Module.load (node:internal/modules/cjs/loader:1313:32)\n    at Function._load (node:internal/modules/cjs/loader:1123:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:217:24)\n    at Module.require (node:internal/modules/cjs/loader:1335:12)\n    at require (node:internal/modules/helpers:136:16)\n    at exports.requireOrImport (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/esm-utils.js:42:12)\n    at exports.loadFilesAsync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/esm-utils.js:55:34)\n    at Mocha.loadFilesAsync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/mocha.js:473:19)\n    at singleRun (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/cli/run-helpers.js:125:15)\n    at exports.runMocha (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/cli/run-helpers.js:190:10)\n    at exports.handler (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/mocha/lib/cli/run.js:362:11)\n    at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/yargs/build/index.cjs:443:71\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":54,"line":71},"start":{"column":44,"line":71}}},{"id":"90","mutatorName":"PrecomputedMutator","replacement":"stringify(obj, options.encoding)","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      1) should replace JSON\n\n    > when spaces passed as an option\n\n      2) should write file with spaces\n\n      3) should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      4) should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n    > when JSON replacer is set\n      ✓ should replace JSON\n      ✓ should replace JSON, resolve promise\n    > when spaces passed as an option\n      ✓ should write file with spaces\n      ✓ should write file with spaces, resolve the promise\n    > when spaces, EOL are passed as options\n      ✓ should use EOL override\n      ✓ should use EOL override, resolve the promise\n    > when passing encoding string as options\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n  39 passing (51ms)\n  4 failing\n\n  1) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n'object' !== 'string'\n\n      + expected - actual\n\n      -object\n      +string\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:54:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  2) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\"name\":\"JP\"}\\n'\n- '{\\n        \"name\": \"JP\"\\n}\\n'\n\n      + expected - actual\n\n      -{\"name\":\"JP\"}\n      +{\n      +        \"name\": \"JP\"\n      +}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:65:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\"name\":\"JP\"}\\n'\n- '{***  \"name\": \"JP\"***}***'\n\n      + expected - actual\n\n      -{\"name\":\"JP\"}\n      +{***  \"name\": \"JP\"***}***\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:73:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  4) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n'\\n' !== '}'\n\n      + expected - actual\n\n      -\n      +}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:104:14)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":38,"line":76},"start":{"column":15,"line":76}}},{"id":"80","mutatorName":"PrecomputedMutator","replacement":"file.split('.')[0]","status":"Timeout","location":{"end":{"column":53,"line":68},"start":{"column":49,"line":68}}},{"id":"91","mutatorName":"PrecomputedMutator","replacement":"stringify(obj, options.throws)","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      1) should replace JSON\n\n    > when spaces passed as an option\n\n      2) should write file with spaces\n\n      3) should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      4) should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  39 passing (82ms)\n\n  4 failing\n\n\n  1) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n'object' !== 'string'\n\n      + expected - actual\n\n      -object\n      +string\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:54:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\"name\":\"JP\"}\\n'\n- '{\\n        \"name\": \"JP\"\\n}\\n'\n\n      + expected - actual\n\n      -{\"name\":\"JP\"}\n      +{\n      +        \"name\": \"JP\"\n      +}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:65:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\"name\":\"JP\"}\\n'\n- '{***  \"name\": \"JP\"***}***'\n\n      + expected - actual\n\n      -{\"name\":\"JP\"}\n      +{***  \"name\": \"JP\"***}***\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:73:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n'\\n' !== '}'\n\n      + expected - actual\n\n      -\n      +}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:104:14)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":38,"line":76},"start":{"column":15,"line":76}}},{"id":"93","mutatorName":"PrecomputedMutator","replacement":"null","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    1) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      2) should replace JSON\n\n    > when spaces passed as an option\n\n      3) should write file with spaces\n\n      4) should use EOL override\n\n    > when passing encoding string as options\n\n      5) should not error\n\n    > when EOF option is set to a falsey value\n\n      6) should not have a the EOL symbol at the end of file\n\n      7) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    8) should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n      ✓ should write file with spaces, resolve the promise\n    > when spaces, EOL are passed as options\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  35 passing (159ms)\n  8 failing\n\n\n\n  1) + writeFileSync()\n       should serialize the JSON and write it to file:\n     TypeError: Cannot read properties of null (reading 'name')\n      at Context.<anonymous> (test/write-file-sync.test.js:33:29)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  2) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     TypeError: Cannot read properties of null (reading 'name')\n      at Context.<anonymous> (test/write-file-sync.test.js:53:31)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'null\\n'\n- '{\\n        \"name\": \"JP\"\\n}\\n'\n\n      + expected - actual\n\n      -null\n      +{\n      +        \"name\": \"JP\"\n      +}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:65:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  4) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'null***'\n- '{***  \"name\": \"JP\"***}***'\n\n      + expected - actual\n\n      -null***\n      +{***  \"name\": \"JP\"***}***\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:73:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  5) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'null\\n'\n- '{\"name\":\"jp\"}\\n'\n\n      + expected - actual\n\n      -null\n      +{\"name\":\"jp\"}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:83:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  6) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n'l' !== '}'\n\n      + expected - actual\n\n      -l\n      +}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:104:14)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n  7) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     TypeError: Cannot read properties of null (reading 'name')\n      at Context.<anonymous> (test/write-file-sync.test.js:116:31)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n  8) + writeFile()\n       should serialize and write JSON:\n     Uncaught AssertionError [ERR_ASSERTION]: ifError got unwanted exception: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile/somefile2.json'\n      at ReadFileContext.callback (test/write-file.test.js:32:16)\n      at FSReqCallback.readFileAfterOpen [as oncomplete] (node:fs:299:13)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":28,"line":76},"start":{"column":25,"line":76}}},{"id":"81","mutatorName":"PrecomputedMutator","replacement":"str + 'bug'","status":"Timeout","location":{"end":{"column":58,"line":68},"start":{"column":55,"line":68}}},{"id":"94","mutatorName":"PrecomputedMutator","replacement":"undefined","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    1) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      2) should replace JSON\n\n    > when spaces passed as an option\n\n      3) should write file with spaces\n\n      4) should use EOL override\n\n    > when passing encoding string as options\n\n      5) should not error\n\n    > when EOF option is set to a falsey value\n\n      6) should not have a the EOL symbol at the end of file\n\n      7) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  36 passing (572ms)\n  7 failing\n\n\n  1) + writeFileSync()\n       should serialize the JSON and write it to file:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Context.<anonymous> (test/write-file-sync.test.js:29:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  2) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Context.<anonymous> (test/write-file-sync.test.js:51:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Context.<anonymous> (test/write-file-sync.test.js:63:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Context.<anonymous> (test/write-file-sync.test.js:71:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  5) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Context.<anonymous> (test/write-file-sync.test.js:81:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  6) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Context.<anonymous> (test/write-file-sync.test.js:101:10)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n  7) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     TypeError: Cannot read properties of undefined (reading 'replace')\n      at stringify (utils.js:60:269)\n      at Object.writeFileSync (index.js:116:226)\n      at Context.<anonymous> (test/write-file-sync.test.js:112:10)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":28,"line":76},"start":{"column":25,"line":76}}},{"id":"82","mutatorName":"PrecomputedMutator","replacement":"str.toUpperCase()","status":"Timeout","location":{"end":{"column":58,"line":68},"start":{"column":55,"line":68}}},{"id":"83","mutatorName":"PrecomputedMutator","replacement":"str.split('')","status":"Timeout","location":{"end":{"column":58,"line":68},"start":{"column":55,"line":68}}},{"id":"92","mutatorName":"PrecomputedMutator","replacement":"stringify(obj, options.reviver)","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    1) \"before each\" hook for \"should read and parse JSON\"\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      2) \"before each\" hook for \"should return an error\"\n\n      3) \"after each\" hook for \"should return an error\"\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      4) should replace JSON\n\n    > when spaces passed as an option\n\n      5) should write file with spaces\n\n      6) should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      7) should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      8) should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  21 passing (2s)\n  8 failing\n\n  1) + readFileSync()\n       \"before each\" hook for \"should read and parse JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync'\n  \n\n  2) + readFile()\n       \"before each\" hook for \"should return an error\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n  \n\n  3) + readFile()\n       \"after each\" hook for \"should return an error\":\n     Error: ENOTEMPTY: directory not empty, rmdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n      at Object.rmdirSync (node:fs:1202:11)\n      at rmkidsSync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:364:25)\n      at rmdirSync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:342:7)\n      at Function.rimrafSync [as sync] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:312:9)\n      at Context.<anonymous> (test/read-file.test.js:21:12)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  4) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n'object' !== 'string'\n\n      + expected - actual\n\n      -object\n      +string\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:54:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  5) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\"name\":\"JP\"}\\n'\n- '{\\n        \"name\": \"JP\"\\n}\\n'\n\n      + expected - actual\n\n      -{\"name\":\"JP\"}\n      +{\n      +        \"name\": \"JP\"\n      +}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:65:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  6) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\"name\":\"JP\"}\\n'\n- '{***  \"name\": \"JP\"***}***'\n\n      + expected - actual\n\n      -{\"name\":\"JP\"}\n      +{***  \"name\": \"JP\"***}***\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:73:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  7) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n'\\n' !== '}'\n\n      + expected - actual\n\n      -\n      +}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:104:14)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n  8) + writeFile()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/write-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":38,"line":76},"start":{"column":15,"line":76}}},{"id":"95","mutatorName":"PrecomputedMutator","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    1) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      2) should replace JSON\n\n    > when spaces passed as an option\n\n      3) should write file with spaces\n\n      4) should use EOL override\n\n    > when passing encoding string as options\n\n      5) should not error\n\n    > when EOF option is set to a falsey value\n\n      6) should not have a the EOL symbol at the end of file\n\n      7) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  36 passing (272ms)\n\n  7 failing\n\n\n\n  1) + writeFileSync()\n       should serialize the JSON and write it to file:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\nundefined !== 'JP'\n\n      at Context.<anonymous> (test/write-file-sync.test.js:33:12)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n  2) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\nundefined !== 'jp'\n\n      at Context.<anonymous> (test/write-file-sync.test.js:53:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{}\\n'\n- '{\\n        \"name\": \"JP\"\\n}\\n'\n\n      + expected - actual\n\n      -{}\n      +{\n      +        \"name\": \"JP\"\n      +}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:65:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{}***'\n- '{***  \"name\": \"JP\"***}***'\n\n      + expected - actual\n\n      -{}***\n      +{***  \"name\": \"JP\"***}***\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:73:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  5) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{}\\n'\n- '{\"name\":\"jp\"}\\n'\n\n      + expected - actual\n\n      -{}\n      +{\"name\":\"jp\"}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:83:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  6) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\nundefined !== 'jp'\n\n      at Context.<anonymous> (test/write-file-sync.test.js:105:14)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n  7) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\nundefined !== 'jp'\n\n      at Context.<anonymous> (test/write-file-sync.test.js:116:14)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":28,"line":76},"start":{"column":25,"line":76}}},{"id":"87","mutatorName":"PrecomputedMutator","replacement":"universalify.fromCallback","status":"Timeout","location":{"end":{"column":43,"line":71},"start":{"column":19,"line":71}}},{"id":"97","mutatorName":"PrecomputedMutator","replacement":"undefined","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n    > when passing encoding string as option\n      ✓ should not throw an error\n    > w/ BOM\n      ✓ should properly parse\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n    > when invalid JSON and throws set to false\n      ✓ should return null and no error\n      ✓ should resolve the promise with null as data\n    > when invalid JSON and throws set to true\n      ✓ should return an error\n      ✓ should reject the promise\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      1) should replace JSON\n\n    > when spaces passed as an option\n      2) should write file with spaces\n      3) should use EOL override\n    > when passing encoding string as options\n      ✓ should not error\n    > when EOF option is set to a falsey value\n      4) should not have a the EOL symbol at the end of file\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n  + writeFile()\n    ✓ should serialize and write JSON\n    ✓ should write JSON, resolve promise\n    > when JSON replacer is set\n      ✓ should replace JSON\n      ✓ should replace JSON, resolve promise\n    > when spaces passed as an option\n      ✓ should write file with spaces\n      ✓ should write file with spaces, resolve the promise\n    > when spaces, EOL are passed as options\n      ✓ should use EOL override\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  39 passing (282ms)\n\n  4 failing\n\n\n  1) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n'object' !== 'string'\n\n      + expected - actual\n\n      -object\n      +string\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:54:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\"name\":\"JP\"}\\n'\n- '{\\n        \"name\": \"JP\"\\n}\\n'\n\n      + expected - actual\n\n      -{\"name\":\"JP\"}\n      +{\n      +        \"name\": \"JP\"\n      +}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:65:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\"name\":\"JP\"}\\n'\n- '{***  \"name\": \"JP\"***}***'\n\n      + expected - actual\n\n      -{\"name\":\"JP\"}\n      +{***  \"name\": \"JP\"***}***\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:73:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n'\\n' !== '}'\n\n      + expected - actual\n\n      -\n      +}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:104:14)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":37,"line":76},"start":{"column":30,"line":76}}},{"id":"98","mutatorName":"PrecomputedMutator","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n  + readFileSync()\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n      ✓ should properly parse\n\n  + readFile()\n    ✓ should read and parse JSON\n    ✓ should resolve a promise with parsed JSON\n    > when invalid JSON\n      ✓ should include the filename in the error\n      ✓ should reject the promise with filename in error\n    > when invalid JSON and throws set to false\n      ✓ should return null and no error\n      ✓ should resolve the promise with null as data\n    > when invalid JSON and throws set to true\n      ✓ should return an error\n      ✓ should reject the promise\n    > when JSON reviver is set\n      ✓ should transform the JSON\n      ✓ should resolve the promise with transformed JSON\n    > when passing encoding string as option\n      ✓ should not throw an error\n      ✓ should resolve the promise\n    > w/ BOM\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      1) should replace JSON\n\n    > when spaces passed as an option\n\n      2) should write file with spaces\n\n      3) should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      4) should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  39 passing (160ms)\n  4 failing\n\n\n  1) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n'object' !== 'string'\n\n      + expected - actual\n\n      -object\n      +string\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:54:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\"name\":\"JP\"}\\n'\n- '{\\n        \"name\": \"JP\"\\n}\\n'\n\n      + expected - actual\n\n      -{\"name\":\"JP\"}\n      +{\n      +        \"name\": \"JP\"\n      +}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:65:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\"name\":\"JP\"}\\n'\n- '{***  \"name\": \"JP\"***}***'\n\n      + expected - actual\n\n      -{\"name\":\"JP\"}\n      +{***  \"name\": \"JP\"***}***\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:73:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n'\\n' !== '}'\n\n      + expected - actual\n\n      -\n      +}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:104:14)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":37,"line":76},"start":{"column":30,"line":76}}},{"id":"99","mutatorName":"PrecomputedMutator","replacement":"fs.writeFileSync(file, str, options.encoding)","status":"Survived","testsCompleted":1,"location":{"end":{"column":46,"line":78},"start":{"column":10,"line":78}}},{"id":"100","mutatorName":"PrecomputedMutator","replacement":"fs.writeFileSync(file, str, options.throws)","status":"Survived","testsCompleted":1,"location":{"end":{"column":46,"line":78},"start":{"column":10,"line":78}}},{"id":"101","mutatorName":"PrecomputedMutator","replacement":"fs.writeFileSync(file, str, options.reviver)","status":"Survived","testsCompleted":1,"location":{"end":{"column":46,"line":78},"start":{"column":10,"line":78}}},{"id":"102","mutatorName":"PrecomputedMutator","replacement":"fs.writeFile","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    1) should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      2) should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    3) \"before each\" hook for \"should read and parse JSON\"\n\n\n  + writeFileSync()\n\n    4) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      5) should replace JSON\n\n    > when spaces passed as an option\n\n      6) should write file with spaces\n\n      7) should use EOL override\n\n    > when passing encoding string as options\n\n      8) should not error\n\n    > when EOF option is set to a falsey value\n\n      9) should not have a the EOL symbol at the end of file\n\n      10) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    11) \"before each\" hook for \"should serialize and write JSON\"\n\n\n\n\n\n  7 passing (78ms)\n\n  11 failing\n\n\n\n  1) + readFileSync()\n       should read and parse JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile3.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:28:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  2) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:114:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFile()\n       \"before each\" hook for \"should read and parse JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n  \n\n\n  4) + writeFileSync()\n       should serialize the JSON and write it to file:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile4.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:31:21)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  5) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.readFileSync (node:fs:446:35)\n      at Context.<anonymous> (test/write-file-sync.test.js:52:34)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  6) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:64:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  7) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:72:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  8) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile6.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:82:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  9) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile2.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:102:26)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  10) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile2.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:113:26)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  11) + writeFile()\n       \"before each\" hook for \"should serialize and write JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile'\n  \n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":26,"line":78},"start":{"column":10,"line":78}}},{"id":"104","mutatorName":"PrecomputedMutator","replacement":"file.toUpperCase()","status":"Survived","testsCompleted":1,"location":{"end":{"column":31,"line":78},"start":{"column":27,"line":78}}},{"id":"105","mutatorName":"PrecomputedMutator","replacement":"file.split('.')[0]","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    1) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      2) should replace JSON\n\n    > when spaces passed as an option\n\n      3) should write file with spaces\n\n      4) should use EOL override\n\n    > when passing encoding string as options\n\n      5) should not error\n\n    > when EOF option is set to a falsey value\n\n      6) should not have a the EOL symbol at the end of file\n\n      7) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  36 passing (165ms)\n  7 failing\n\n\n\n  1) + writeFileSync()\n       should serialize the JSON and write it to file:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile4.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:31:21)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  2) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.readFileSync (node:fs:446:35)\n      at Context.<anonymous> (test/write-file-sync.test.js:52:34)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:64:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:72:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  5) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile6.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:82:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  6) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile2.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:102:26)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n  7) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile2.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:113:26)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":31,"line":78},"start":{"column":27,"line":78}}},{"id":"106","mutatorName":"PrecomputedMutator","replacement":"null","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    1) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      2) should replace JSON\n\n    > when spaces passed as an option\n\n      3) should write file with spaces\n\n      4) should use EOL override\n\n    > when passing encoding string as options\n\n      5) should not error\n\n    > when EOF option is set to a falsey value\n\n      6) should not have a the EOL symbol at the end of file\n\n      7) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n  36 passing (172ms)\n  7 failing\n\n  1) + writeFileSync()\n       should serialize the JSON and write it to file:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received null\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:29:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n  2) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received null\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:51:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received null\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:63:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  4) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received null\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:71:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  5) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received null\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:81:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  6) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received null\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:101:10)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n  7) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received null\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:112:10)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":36,"line":78},"start":{"column":33,"line":78}}},{"id":"107","mutatorName":"PrecomputedMutator","replacement":"undefined","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    1) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      2) should replace JSON\n\n    > when spaces passed as an option\n\n      3) should write file with spaces\n\n      4) should use EOL override\n\n    > when passing encoding string as options\n\n      5) should not error\n\n    > when EOF option is set to a falsey value\n\n      6) should not have a the EOL symbol at the end of file\n\n      7) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  36 passing (157ms)\n\n  7 failing\n\n\n\n  1) + writeFileSync()\n       should serialize the JSON and write it to file:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:29:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  2) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:51:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:63:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:71:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  5) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:81:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  6) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:101:10)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  7) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:112:10)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":36,"line":78},"start":{"column":33,"line":78}}},{"id":"109","mutatorName":"PrecomputedMutator","replacement":"null","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    1) \"before each\" hook for \"should read and parse JSON\"\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n      2) \"after each\" hook for \"should resolve the promise with null as data\"\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  26 passing (88ms)\n\n  2 failing\n\n\n\n  1) + readFileSync()\n       \"before each\" hook for \"should read and parse JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync'\n  \n\n\n  2) + readFile()\n       \"after each\" hook for \"should resolve the promise with null as data\":\n     Error: ENOTEMPTY: directory not empty, rmdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n      at Object.rmdirSync (node:fs:1202:11)\n      at rmkidsSync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:364:25)\n      at rmdirSync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:342:7)\n      at Function.rimrafSync [as sync] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:312:9)\n      at Context.<anonymous> (test/read-file.test.js:21:12)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":45,"line":78},"start":{"column":38,"line":78}}},{"id":"110","mutatorName":"PrecomputedMutator","replacement":"undefined","status":"Survived","testsCompleted":1,"location":{"end":{"column":45,"line":78},"start":{"column":38,"line":78}}},{"id":"111","mutatorName":"PrecomputedMutator","replacement":"{}","status":"Survived","testsCompleted":1,"location":{"end":{"column":45,"line":78},"start":{"column":38,"line":78}}},{"id":"96","mutatorName":"PrecomputedMutator","replacement":"null","status":"Timeout","location":{"end":{"column":37,"line":76},"start":{"column":30,"line":76}}},{"id":"103","mutatorName":"PrecomputedMutator","replacement":"file + '.json'","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      1) should return null\n\n    > when invalid JSON and throws set to true\n\n      2) \"before each\" hook for \"should throw an exception\"\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      3) should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      4) \"before each\" hook for \"should return an error\"\n\n\n\n  + writeFileSync()\n\n    5) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      6) should replace JSON\n\n    > when spaces passed as an option\n\n      7) should write file with spaces\n\n      8) should use EOL override\n\n    > when passing encoding string as options\n\n      9) should not error\n\n    > when EOF option is set to a falsey value\n\n      10) should not have a the EOL symbol at the end of file\n\n      11) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  20 passing (2s)\n\n  11 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:58:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFileSync()\n       \"before each\" hook for \"should throw an exception\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync'\n  \n\n\n  3) + readFile()\n       > when invalid JSON and throws set to false\n         should resolve the promise with null as data:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n  4) + readFile()\n       \"before each\" hook for \"should return an error\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n  \n\n\n  5) + writeFileSync()\n       should serialize the JSON and write it to file:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile4.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:31:21)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  6) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.readFileSync (node:fs:446:35)\n      at Context.<anonymous> (test/write-file-sync.test.js:52:34)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  7) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:64:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  8) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:72:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  9) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile6.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:82:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  10) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile2.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:102:26)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  11) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile2.json'\n      at Object.readFileSync (node:fs:442:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:113:26)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":31,"line":78},"start":{"column":27,"line":78}}},{"id":"108","mutatorName":"PrecomputedMutator","replacement":"0","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n  + readFile()\n\n    1) should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    2) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      3) should replace JSON\n\n    > when spaces passed as an option\n\n      4) should write file with spaces\n\n      5) should use EOL override\n\n    > when passing encoding string as options\n\n      6) should not error\n\n    > when EOF option is set to a falsey value\n\n      7) should not have a the EOL symbol at the end of file\n\n      8) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    9) should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  34 passing (2s)\n\n  9 failing\n\n\n\n  1) + readFile()\n       should read and parse JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file.test.js:28:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  2) + writeFileSync()\n       should serialize the JSON and write it to file:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received type number (0)\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:29:8)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  3) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received type number (0)\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:51:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received type number (0)\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:63:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  5) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received type number (0)\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:71:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  6) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received type number (0)\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:81:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  7) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received type number (0)\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:101:10)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  8) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     TypeError [ERR_INVALID_ARG_TYPE]: The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received type number (0)\n      at Object.writeFileSync (node:fs:2435:5)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:112:10)\n      at FSReqCallback.oncomplete (node:fs:188:23)\n\n\n  9) + writeFile()\n       should serialize and write JSON:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/write-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":36,"line":78},"start":{"column":33,"line":78}}}],"source":"let _fs\ntry {\n  _fs = require('graceful-fs')\n} catch (_) {\n  _fs = require('fs')\n}\nconst universalify = require('universalify')\nconst { stringify, stripBom } = require('./utils')\n\nasync function _readFile (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  let data = await universalify.fromCallback(fs.readFile)(file, options)\n\n  data = stripBom(data)\n\n  let obj\n  try {\n    obj = JSON.parse(data, options ? options.reviver : null)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n\n  return obj\n}\n\nconst readFile = universalify.fromPromise(_readFile)\n\nfunction readFileSync (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  try {\n    let content = fs.readFileSync(file, options)\n    content = stripBom(content)\n    return JSON.parse(content, options.reviver)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n}\n\nasync function _writeFile (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n\n  await universalify.fromCallback(fs.writeFile)(file, str, options)\n}\n\nconst writeFile = universalify.fromPromise(_writeFile)\n\nfunction writeFileSync (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options)\n}\n\nconst jsonfile = {\n  readFile,\n  readFileSync,\n  writeFile,\n  writeFileSync\n}\n\nmodule.exports = jsonfile\n"},"utils.js":{"language":"javascript","mutants":[{"id":"113","mutatorName":"PrecomputedMutator","replacement":"JSON.stringify(obj, replacer, spaces * 2)","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      1) \"before each\" hook for \"should resolve the promise with null as data\"\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      2) should write file with spaces\n\n      3) should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    4) \"after each\" hook for \"should serialize and write JSON\"\n\n\n\n\n\n  28 passing (67ms)\n\n  4 failing\n\n\n\n  1) + readFile()\n       > when invalid JSON and throws set to false\n         \"before each\" hook for \"should resolve the promise with null as data\":\n     Error: EINVAL: invalid argument, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile4-invalid.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file.test.js:88:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\\n          \"name\": \"JP\"\\n}\\n'\n- '{\\n        \"name\": \"JP\"\\n}\\n'\n              ^\n\n      + expected - actual\n\n       {\n      -          \"name\": \"JP\"\n      +        \"name\": \"JP\"\n       }\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:65:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{***    \"name\": \"JP\"***}***'\n- '{***  \"name\": \"JP\"***}***'\n         ^\n\n      + expected - actual\n\n      -{***    \"name\": \"JP\"***}***\n      +{***  \"name\": \"JP\"***}***\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:73:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  4) + writeFile()\n       \"after each\" hook for \"should serialize and write JSON\":\n     Error: ENOTEMPTY: directory not empty, rmdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile'\n      at Object.rmdirSync (node:fs:1202:11)\n      at rmkidsSync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:364:25)\n      at rmdirSync (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:342:7)\n      at Function.rimrafSync [as sync] (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/node_modules/rimraf/rimraf.js:312:9)\n      at Context.<anonymous> (test/write-file.test.js:21:12)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":52,"line":3},"start":{"column":15,"line":3}}},{"id":"112","mutatorName":"PrecomputedMutator","replacement":"JSON.stringify(obj, replacer, spaces + 1)","status":"Timeout","location":{"end":{"column":52,"line":3},"start":{"column":15,"line":3}}},{"id":"114","mutatorName":"PrecomputedMutator","replacement":"JSON.stringify(obj, replacer, spaces - 1)","status":"Timeout","location":{"end":{"column":52,"line":3},"start":{"column":15,"line":3}}},{"id":"115","mutatorName":"PrecomputedMutator","replacement":"obj + {}","status":"Timeout","location":{"end":{"column":33,"line":3},"start":{"column":30,"line":3}}},{"id":"116","mutatorName":"PrecomputedMutator","replacement":"obj.toString()","status":"Timeout","location":{"end":{"column":33,"line":3},"start":{"column":30,"line":3}}},{"id":"118","mutatorName":"PrecomputedMutator","replacement":"replacer = null","status":"Timeout","location":{"end":{"column":43,"line":3},"start":{"column":35,"line":3}}},{"id":"117","mutatorName":"PrecomputedMutator","replacement":"obj.hasOwnProperty('key')","status":"Timeout","location":{"end":{"column":33,"line":3},"start":{"column":30,"line":3}}},{"id":"119","mutatorName":"PrecomputedMutator","replacement":"replacer = function (key, value) {\n  return value.toUpperCase();\n}","status":"Timeout","location":{"end":{"column":43,"line":3},"start":{"column":35,"line":3}}},{"id":"120","mutatorName":"PrecomputedMutator","replacement":"replacer = function (key, value) {\n  return value.toLowerCase();\n}","status":"Timeout","location":{"end":{"column":43,"line":3},"start":{"column":35,"line":3}}},{"id":"127","mutatorName":"PrecomputedMutator","replacement":"str.replaceAll","status":"Survived","testsCompleted":1,"location":{"end":{"column":21,"line":5},"start":{"column":10,"line":5}}},{"id":"121","mutatorName":"PrecomputedMutator","replacement":"spaces + 1","status":"Timeout","location":{"end":{"column":51,"line":3},"start":{"column":45,"line":3}}},{"id":"124","mutatorName":"PrecomputedMutator","replacement":"str.replace(/\\r/g, EOL)","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    1) \"before each\" hook for \"should read and parse JSON\"\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      2) should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      3) should use EOL override\n\n      4) should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  31 passing (4s)\n  4 failing\n\n\n  1) + readFileSync()\n       \"before each\" hook for \"should read and parse JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync'\n  \n\n\n  2) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\\n  \"name\": \"JP\"\\n}***'\n- '{***  \"name\": \"JP\"***}***'\n\n      + expected - actual\n\n      -{\n      -  \"name\": \"JP\"\n      -}***\n      +{***  \"name\": \"JP\"***}***\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:73:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  3) + writeFile()\n       > when spaces, EOL are passed as options\n         should use EOL override:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/write-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n  4) + writeFile()\n       > when spaces, EOL are passed as options\n         should use EOL override, resolve the promise:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/write-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":33,"line":5},"start":{"column":10,"line":5}}},{"id":"122","mutatorName":"PrecomputedMutator","replacement":"spaces * 2","status":"Timeout","location":{"end":{"column":51,"line":3},"start":{"column":45,"line":3}}},{"id":"123","mutatorName":"PrecomputedMutator","replacement":"spaces - 1","status":"Timeout","location":{"end":{"column":51,"line":3},"start":{"column":45,"line":3}}},{"id":"129","mutatorName":"PrecomputedMutator","replacement":"/\\r?\\n/g","status":"Survived","testsCompleted":1,"location":{"end":{"column":27,"line":5},"start":{"column":22,"line":5}}},{"id":"125","mutatorName":"PrecomputedMutator","replacement":"str.replace(/\\n/g, '')","status":"Timeout","location":{"end":{"column":33,"line":5},"start":{"column":10,"line":5}}},{"id":"131","mutatorName":"PrecomputedMutator","replacement":"\" \"","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    1) \"before each\" hook for \"should read and parse JSON\"\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      2) should write file with spaces\n\n      3) should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    4) \"before each\" hook for \"should write JSON, resolve promise\"\n\n\n\n\n\n  15 passing (37ms)\n  4 failing\n\n\n  1) + readFile()\n       \"before each\" hook for \"should read and parse JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n  \n\n\n  2) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{         \"name\": \"JP\" }\\n'\n- '{\\n        \"name\": \"JP\"\\n}\\n'\n\n      + expected - actual\n\n      -{         \"name\": \"JP\" }\n      +{\n      +        \"name\": \"JP\"\n      +}\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:65:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     Error: EINVAL: invalid argument, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.openSync (node:fs:562:18)\n      at Object.writeFileSync (node:fs:2440:35)\n      at Object.writeFileSync (index.js:118:335)\n      at Context.<anonymous> (test/write-file-sync.test.js:71:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  4) + writeFile()\n       \"before each\" hook for \"should write JSON, resolve promise\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile'\n  \n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":32,"line":5},"start":{"column":29,"line":5}}},{"id":"134","mutatorName":"PrecomputedMutator","replacement":"Buffer.isBuffer(content) && content.length > 0","status":"Survived","testsCompleted":1,"location":{"end":{"column":31,"line":10},"start":{"column":7,"line":10}}},{"id":"126","mutatorName":"PrecomputedMutator","replacement":"str.replace(/\\n/g, ' ')","status":"Timeout","location":{"end":{"column":33,"line":5},"start":{"column":10,"line":5}}},{"id":"136","mutatorName":"PrecomputedMutator","replacement":"content.toString('utf8') !== content","status":"Survived","testsCompleted":1,"location":{"end":{"column":31,"line":10},"start":{"column":7,"line":10}}},{"id":"138","mutatorName":"PrecomputedMutator","replacement":"content.slice(1)","status":"Survived","testsCompleted":1,"location":{"end":{"column":30,"line":10},"start":{"column":23,"line":10}}},{"id":"130","mutatorName":"PrecomputedMutator","replacement":"/[\\r\\n]+/g","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      1) \"before each\" hook for \"should replace JSON\"\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      2) should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  36 passing (2s)\n\n  2 failing\n\n\n\n  1) + writeFileSync()\n       \"before each\" hook for \"should replace JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync'\n  \n\n\n  2) + writeFile()\n       > when JSON replacer is set\n         should replace JSON, resolve promise:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/write-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":27,"line":5},"start":{"column":22,"line":5}}},{"id":"128","mutatorName":"PrecomputedMutator","replacement":"/\\r/g","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      1) should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      2) should use EOL override\n\n      3) should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  40 passing (4s)\n  3 failing\n\n\n\n  1) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '{\\n  \"name\": \"JP\"\\n}***'\n- '{***  \"name\": \"JP\"***}***'\n\n      + expected - actual\n\n      -{\n      -  \"name\": \"JP\"\n      -}***\n      +{***  \"name\": \"JP\"***}***\n      \n      at Context.<anonymous> (test/write-file-sync.test.js:73:14)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + writeFile()\n       > when spaces, EOL are passed as options\n         should use EOL override:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/write-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n  3) + writeFile()\n       > when spaces, EOL are passed as options\n         should use EOL override, resolve the promise:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/write-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":27,"line":5},"start":{"column":22,"line":5}}},{"id":"132","mutatorName":"PrecomputedMutator","replacement":"\"\\\\n\"","status":"Timeout","location":{"end":{"column":32,"line":5},"start":{"column":29,"line":5}}},{"id":"133","mutatorName":"PrecomputedMutator","replacement":"\"\\\\r\\\\n\"","status":"Timeout","location":{"end":{"column":32,"line":5},"start":{"column":29,"line":5}}},{"id":"135","mutatorName":"PrecomputedMutator","replacement":"!Buffer.isBuffer(content)","status":"Timeout","location":{"end":{"column":31,"line":10},"start":{"column":7,"line":10}}},{"id":"144","mutatorName":"PrecomputedMutator","replacement":"content.replace(/^\\uFEFF/g, '')","status":"Survived","testsCompleted":1,"location":{"end":{"column":40,"line":11},"start":{"column":10,"line":11}}},{"id":"137","mutatorName":"PrecomputedMutator","replacement":"content.length === 0","status":"Timeout","location":{"end":{"column":22,"line":10},"start":{"column":7,"line":10}}},{"id":"145","mutatorName":"PrecomputedMutator","replacement":"content.replace(/^\\uFEFF/i, '')","status":"Survived","testsCompleted":1,"location":{"end":{"column":40,"line":11},"start":{"column":10,"line":11}}},{"id":"146","mutatorName":"PrecomputedMutator","replacement":"content.replace(/^\\uFEFF/gm, '')","status":"Survived","testsCompleted":1,"location":{"end":{"column":40,"line":11},"start":{"column":10,"line":11}}},{"id":"148","mutatorName":"PrecomputedMutator","replacement":"/^\\uFEFF/g","status":"Survived","testsCompleted":1,"location":{"end":{"column":35,"line":11},"start":{"column":26,"line":11}}},{"id":"139","mutatorName":"PrecomputedMutator","replacement":"content.substring(1)","status":"Timeout","location":{"end":{"column":30,"line":10},"start":{"column":23,"line":10}}},{"id":"149","mutatorName":"PrecomputedMutator","replacement":"/^\\uFEFF/i","status":"Survived","testsCompleted":1,"location":{"end":{"column":35,"line":11},"start":{"column":26,"line":11}}},{"id":"140","mutatorName":"PrecomputedMutator","replacement":"content.substr(1)","status":"Timeout","location":{"end":{"column":30,"line":10},"start":{"column":23,"line":10}}},{"id":"150","mutatorName":"PrecomputedMutator","replacement":"' '","status":"Survived","testsCompleted":1,"location":{"end":{"column":39,"line":11},"start":{"column":37,"line":11}}},{"id":"152","mutatorName":"PrecomputedMutator","replacement":"undefined","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      1) should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      2) should properly parse\n\n\n\n  + readFile()\n\n    3) \"before each\" hook for \"should read and parse JSON\"\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  27 passing (33ms)\n\n  3 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:58:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: Unexpected token 'u', \"undefined{\"... is not valid JSON\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  3) + readFile()\n       \"before each\" hook for \"should read and parse JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n  \n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":39,"line":11},"start":{"column":37,"line":11}}},{"id":"141","mutatorName":"PrecomputedMutator","replacement":"'utf16'","status":"Timeout","location":{"end":{"column":66,"line":10},"start":{"column":60,"line":10}}},{"id":"142","mutatorName":"PrecomputedMutator","replacement":"'ascii'","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      1) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      2) should properly parse\n\n      3) should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  40 passing (4s)\n\n  3 failing\n\n\n\n  1) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: Unexpected token 'o', \"o;?{\"name\":\"JP\"}\" is not valid JSON\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFile()\n       > w/ BOM\n         should properly parse:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n  3) + readFile()\n       > w/ BOM\n         should resolve the promise with parsed JSON:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":66,"line":10},"start":{"column":60,"line":10}}},{"id":"147","mutatorName":"PrecomputedMutator","replacement":"/^\\u0000/","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      1) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      2) should properly parse\n\n      3) should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n    > when EOF option is set to a falsey value\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  40 passing (4s)\n\n  3 failing\n\n\n\n  1) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: Unexpected token '﻿', \"﻿{\"name\":\"JP\"}\" is not valid JSON\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:94:339)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFile()\n       > w/ BOM\n         should properly parse:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n  3) + readFile()\n       > w/ BOM\n         should resolve the promise with parsed JSON:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":35,"line":11},"start":{"column":26,"line":11}}},{"id":"143","mutatorName":"PrecomputedMutator","replacement":"'base64'","status":"Timeout","location":{"end":{"column":66,"line":10},"start":{"column":60,"line":10}}},{"id":"151","mutatorName":"PrecomputedMutator","replacement":"null","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      1) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      2) should properly parse\n\n      3) should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  40 passing (4s)\n\n  3 failing\n\n\n\n  1) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json'\n      at Object.writeFileSync (node:fs:2426:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:145:10)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n  2) + readFile()\n       > w/ BOM\n         should properly parse:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n  3) + readFile()\n       > w/ BOM\n         should resolve the promise with parsed JSON:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox2492642/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:594:17)\n      at process.processTimers (node:internal/timers:529:7)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":39,"line":11},"start":{"column":37,"line":11}}}],"source":"function stringify (obj, { EOL = '\\n', finalEOL = true, replacer = null, spaces } = {}) {\n  const EOF = finalEOL ? EOL : ''\n  const str = JSON.stringify(obj, replacer, spaces)\n\n  return str.replace(/\\n/g, EOL) + EOF\n}\n\nfunction stripBom (content) {\n  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n  if (Buffer.isBuffer(content)) content = content.toString('utf8')\n  return content.replace(/^\\uFEFF/, '')\n}\n\nmodule.exports = { stringify, stripBom }\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null},"testFiles":{"":{"tests":[{"id":"0","name":"All tests"}]}},"projectRoot":"/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile","config":{"usePrecomputed":true,"mutate":["index.js","utils.js"],"reporters":["json","html","progress"],"allowConsoleColors":true,"checkers":[],"checkerNodeArgs":[],"commandRunner":{"command":"npm test"},"coverageAnalysis":"perTest","clearTextReporter":{"allowColor":true,"allowEmojis":false,"logTests":true,"maxTestsToLog":3,"reportTests":true,"reportMutants":true,"reportScoreTable":true},"dashboard":{"baseUrl":"https://dashboard.stryker-mutator.io/api/reports","reportType":"full"},"dryRunOnly":false,"eventReporter":{"baseDir":"reports/mutation/events"},"ignorePatterns":[],"ignoreStatic":false,"incremental":false,"incrementalFile":"reports/stryker-incremental.json","force":false,"fileLogLevel":"off","inPlace":false,"logLevel":"info","maxConcurrentTestRunners":9007199254740991,"maxTestRunnerReuse":0,"mutator":{"plugins":null,"excludedMutations":[]},"plugins":["@stryker-mutator/*"],"appendPlugins":[],"htmlReporter":{"fileName":"reports/mutation/mutation.html"},"jsonReporter":{"fileName":"reports/mutation/mutation.json"},"disableTypeChecks":true,"symlinkNodeModules":true,"tempDirName":".stryker-tmp","cleanTempDir":true,"testRunner":"command","testRunnerNodeArgs":[],"thresholds":{"high":80,"low":60,"break":null},"timeoutFactor":1.5,"timeoutMS":5000,"dryRunTimeoutMinutes":5,"tsconfigFile":"tsconfig.json","warnings":true,"disableBail":false,"allowEmpty":false,"ignorers":[],"cucumber":{},"jest":{"projectType":"custom","enableFindRelatedTests":true},"mochaOptions":{},"tap":{"testFiles":["{**/@(test|tests|__test__|__tests__)/**,**/*.@(test|tests|spec)}.@(cjs|mjs|js|jsx|ts|tsx|mts|cts)"],"nodeArgs":["-r","{{hookFile}}","{{testFile}}"],"forceBail":true},"vitest":{}},"framework":{"name":"StrykerJS","version":"8.2.5","branding":{"homepageUrl":"https://stryker-mutator.io","imageUrl":"data:image/svg+xml;utf8,%3Csvg viewBox='0 0 1458 1458' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-linejoin='round' stroke-miterlimit='2'%3E%3Cpath fill='none' d='M0 0h1458v1458H0z'/%3E%3CclipPath id='a'%3E%3Cpath d='M0 0h1458v1458H0z'/%3E%3C/clipPath%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M1458 729c0 402.655-326.345 729-729 729S0 1131.655 0 729C0 326.445 326.345 0 729 0s729 326.345 729 729' fill='%23e74c3c' fill-rule='nonzero'/%3E%3Cpath d='M778.349 1456.15L576.6 1254.401l233-105 85-78.668v-64.332l-257-257-44-187-50-208 251.806-82.793L1076.6 389.401l380.14 379.15c-19.681 367.728-311.914 663.049-678.391 687.599z' fill-opacity='.3'/%3E%3Cpath d='M753.4 329.503c41.79 0 74.579 7.83 97.925 25.444 23.571 18.015 41.69 43.956 55.167 77.097l11.662 28.679 165.733-58.183-14.137-32.13c-26.688-60.655-64.896-108.61-114.191-144.011-49.329-35.423-117.458-54.302-204.859-54.302-50.78 0-95.646 7.376-134.767 21.542-40.093 14.671-74.09 34.79-102.239 60.259-28.84 26.207-50.646 57.06-65.496 92.701-14.718 35.052-22.101 72.538-22.101 112.401 0 72.536 20.667 133.294 61.165 182.704 38.624 47.255 98.346 88.037 179.861 121.291 42.257 17.475 78.715 33.125 109.227 46.994 27.193 12.361 49.294 26.124 66.157 41.751 15.309 14.186 26.497 30.584 33.63 49.258 7.721 20.214 11.16 45.69 11.16 76.402 0 28.021-4.251 51.787-13.591 71.219-8.832 18.374-20.171 33.178-34.523 44.219-14.787 11.374-31.193 19.591-49.393 24.466-19.68 5.359-39.14 7.993-58.69 7.993-29.359 0-54.387-3.407-75.182-10.747-20.112-7.013-37.144-16.144-51.259-27.486-13.618-11.009-24.971-23.766-33.744-38.279-9.64-15.8-17.272-31.924-23.032-48.408l-10.965-31.376-161.669 60.585 10.734 30.124c10.191 28.601 24.197 56.228 42.059 82.748 18.208 27.144 41.322 51.369 69.525 72.745 27.695 21.075 60.904 38.218 99.481 51.041 37.777 12.664 82.004 19.159 132.552 19.159 49.998 0 95.818-8.321 137.611-24.622 42.228-16.471 78.436-38.992 108.835-67.291 30.719-28.597 54.631-62.103 71.834-100.642 17.263-38.56 25.923-79.392 25.923-122.248 0-54.339-8.368-100.37-24.208-138.32-16.29-38.759-38.252-71.661-65.948-98.797-26.965-26.418-58.269-48.835-93.858-67.175-33.655-17.241-69.196-33.11-106.593-47.533-35.934-13.429-65.822-26.601-89.948-39.525-22.153-11.868-40.009-24.21-53.547-37.309-11.429-11.13-19.83-23.678-24.718-37.664-5.413-15.49-7.98-33.423-7.98-53.577 0-40.883 11.293-71.522 37.086-90.539 28.443-20.825 64.985-30.658 109.311-30.658z' fill='%23f1c40f' fill-rule='nonzero'/%3E%3Cpath d='M720 0h18v113h-18zM1458 738v-18h-113v18h113zM720 1345h18v113h-18zM113 738v-18H0v18h113z'/%3E%3C/g%3E%3C/svg%3E"},"dependencies":{"@stryker-mutator/mocha-runner":"8.2.5","@stryker-mutator/karma-runner":"8.2.5","@stryker-mutator/jasmine-runner":"8.2.5","@stryker-mutator/jest-runner":"8.2.5","mocha":"8.4.0","jasmine-core":"5.6.0","typescript":"4.9.5"}}}