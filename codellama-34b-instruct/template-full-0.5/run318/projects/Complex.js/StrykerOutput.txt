*** using precomputed mutations ***
[32m11:05:22 (2710) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m11:05:22 (2710) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m11:05:23 (2710) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/Complex.js/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m11:05:23 (2710) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m11:05:23 (2710) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m11:05:23 (2710) INFO ProjectReader[39m Found 1 of 1982 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1191 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.5/mutants.json ***
Mutant 0 in complex.js: x replaced with x + 1
Mutant 1 in complex.js: x replaced with x - 1
Mutant 2 in complex.js: x replaced with x * 2
Mutant 3 in complex.js: Math.exp replaced with 1
Mutant 4 in complex.js: Math.exp replaced with -1
Mutant 5 in complex.js: x replaced with x * x
Mutant 6 in complex.js: x replaced with x / x
Mutant 7 in complex.js: x replaced with x + x
Mutant 8 in complex.js: Math.exp replaced with Math.sin
Mutant 9 in complex.js: Math.exp replaced with Math.cos
Mutant 10 in complex.js: Math.exp replaced with Math.tan
Mutant 11 in complex.js: -x replaced with 2 * x
Mutant 12 in complex.js: -x replaced with x / 2
Mutant 13 in complex.js: Math.abs replaced with Math.sin
Mutant 14 in complex.js: Math.abs replaced with Math.cos
Mutant 15 in complex.js: Math.abs replaced with Math.tan
Mutant 16 in complex.js: x replaced with x + 1
Mutant 17 in complex.js: x replaced with x * 2
Mutant 18 in complex.js: x replaced with x / 2
Mutant 19 in complex.js: Math.exp replaced with Math.sin
Mutant 20 in complex.js: Math.exp replaced with Math.tan
Mutant 21 in complex.js: Math.exp replaced with Math.acos
Mutant 22 in complex.js: x replaced with x * Math.random()
Mutant 23 in complex.js: x replaced with x + 1
Mutant 24 in complex.js: x replaced with x - 1
Mutant 25 in complex.js: Math.exp replaced with Math.sinh
Mutant 26 in complex.js: Math.exp replaced with Math.tanh
Mutant 27 in complex.js: Math.exp replaced with Math.asinh
Mutant 28 in complex.js: -x replaced with -1
Mutant 29 in complex.js: -x replaced with 1 + x
Mutant 30 in complex.js: -x replaced with x * x
Mutant 31 in complex.js: -b > x || x > b replaced with -b < x || x > b
Mutant 32 in complex.js: -b > x || x > b replaced with -b > x && x > b
Mutant 33 in complex.js: -b > x || x > b replaced with -b > x || x < b
Mutant 34 in complex.js: Math.cos replaced with Math.sin
Mutant 35 in complex.js: Math.cos replaced with Math.tan
Mutant 36 in complex.js: Math.cos replaced with Math.acos
Mutant 37 in complex.js: x replaced with x + 1
Mutant 38 in complex.js: x replaced with x * 2
Mutant 39 in complex.js: x replaced with x / 2
Mutant 40 in complex.js: Math.abs replaced with Math.sqrt
Mutant 41 in complex.js: Math.abs replaced with Math.floor
Mutant 42 in complex.js: Math.abs replaced with Math.ceil
Mutant 43 in complex.js: x replaced with y
Mutant 44 in complex.js: x replaced with x + 1
Mutant 45 in complex.js: x replaced with x * 2
Mutant 46 in complex.js: Math.abs replaced with a * b
Mutant 47 in complex.js: Math.abs replaced with -a * b
Mutant 48 in complex.js: Math.abs replaced with a + b
Mutant 49 in complex.js: y replaced with x
Mutant 50 in complex.js: y replaced with x + y
Mutant 51 in complex.js: y replaced with x * y
Mutant 52 in complex.js: a < 3000 && b < 3000 replaced with a < 3000 || b < 3000
Mutant 53 in complex.js: a < 3000 && b < 3000 replaced with a < 3000 && b > 3000
Mutant 54 in complex.js: Math.sqrt replaced with Math.log
Mutant 55 in complex.js: Math.sqrt replaced with Math.exp
Mutant 56 in complex.js: Math.sqrt replaced with Math.sin
Mutant 57 in complex.js: a * a + b * b replaced with a * b
Mutant 58 in complex.js: a * a + b * b replaced with a * a - b * b
Mutant 59 in complex.js: a * a + b * b replaced with a + b
Mutant 60 in complex.js: a < b replaced with a > b
Mutant 61 in complex.js: a < b replaced with a == b
Mutant 62 in complex.js: a < b replaced with a + b
Mutant 63 in complex.js: Math.sqrt replaced with Math.exp
Mutant 64 in complex.js: Math.sqrt replaced with Math.log
Mutant 65 in complex.js: Math.sqrt replaced with Math.sin
Mutant 66 in complex.js: 1 + b * b replaced with 1 - b * b
Mutant 67 in complex.js: 1 + b * b replaced with b * b - 1
Mutant 68 in complex.js: 1 + b * b replaced with b * b + 2
Mutant 69 in complex.js: SyntaxError replaced with 'Invalid Param'
Mutant 70 in complex.js: SyntaxError replaced with 'Invalid Param' + 1
Mutant 71 in complex.js: SyntaxError replaced with 'Invalid Param' + 1 + 1
Mutant 72 in complex.js: 'Invalid Param' replaced with 'Invalid Param' + 1
Mutant 73 in complex.js: 'Invalid Param' replaced with 'Invalid Param' * 2
Mutant 74 in complex.js: 'Invalid Param' replaced with 'Invalid Param' + '1'
Mutant 75 in complex.js: Math.abs replaced with Math.log
Mutant 76 in complex.js: Math.abs replaced with Math.sqrt
Mutant 77 in complex.js: Math.abs replaced with Math.random
Mutant 78 in complex.js: a replaced with a + 1
Mutant 79 in complex.js: a replaced with b
Mutant 80 in complex.js: a replaced with a * 2
Mutant 81 in complex.js: Math.abs replaced with Math.sin
Mutant 82 in complex.js: Math.abs replaced with Math.cos
Mutant 83 in complex.js: Math.abs replaced with Math.tan
Mutant 84 in complex.js: b replaced with a
Mutant 85 in complex.js: b replaced with b + 1
Mutant 86 in complex.js: b replaced with a + b
Mutant 87 in complex.js: a === 0 replaced with a !== 0
Mutant 88 in complex.js: a === 0 replaced with a > 0
Mutant 89 in complex.js: a === 0 replaced with a === 1
Mutant 90 in complex.js: Math.log replaced with Math.tan
Mutant 91 in complex.js: Math.log replaced with Math.sin
Mutant 92 in complex.js: Math.log replaced with Math.cos
Mutant 93 in complex.js: _b replaced with _a
Mutant 94 in complex.js: _b replaced with _a + _b
Mutant 95 in complex.js: _b replaced with _a - _b
Mutant 96 in complex.js: b === 0 replaced with b > 0
Mutant 97 in complex.js: b === 0 replaced with b !== 0
Mutant 98 in complex.js: b === 0 replaced with b < 0
Mutant 99 in complex.js: _a replaced with _b
Mutant 100 in complex.js: _a replaced with a
Mutant 101 in complex.js: _a < 3000 && _b < 3000 replaced with _a < 3000 && _b > 3000
Mutant 102 in complex.js: _a < 3000 && _b < 3000 replaced with _a > 3000 && _b < 3000
Mutant 103 in complex.js: Math.log replaced with Math.log10
Mutant 104 in complex.js: Math.log replaced with Math.log2
Mutant 105 in complex.js: Math.log replaced with Math.log1p
Mutant 106 in complex.js: a * a + b * b replaced with a + b
Mutant 107 in complex.js: a * a + b * b replaced with a - b
Mutant 108 in complex.js: a * a + b * b replaced with b - a
Mutant 109 in complex.js: Math.log replaced with Math.log10
Mutant 110 in complex.js: Math.log replaced with Math.log2
Mutant 111 in complex.js: Math.log replaced with Math.sqrt
Mutant 112 in complex.js: a * a + b * b replaced with a + b * b
Mutant 113 in complex.js: a * a + b * b replaced with a * b + b
Mutant 114 in complex.js: a * a + b * b replaced with a * b - b
Mutant 115 in complex.js: a === undefined || a === null replaced with a === undefined || b === null
Mutant 116 in complex.js: a === undefined || a === null replaced with a === null || b === undefined
Mutant 117 in complex.js: a === undefined || a === null replaced with a !== undefined || b !== null
Mutant 118 in complex.js: b !== undefined replaced with b !== null
Mutant 119 in complex.js: b !== undefined replaced with b !== undefined || b !== null
Mutant 120 in complex.js: b !== undefined replaced with b !== 0
Mutant 121 in complex.js: typeof a replaced with a === 'number'
Mutant 122 in complex.js: typeof a replaced with a === 'object'
Mutant 123 in complex.js: typeof a replaced with a === 'string'
Mutant 124 in complex.js: 'im' in a && 're' in a replaced with a.hasOwnProperty('im') && a.hasOwnProperty('re')
Mutant 125 in complex.js: 'im' in a && 're' in a replaced with Object.prototype.hasOwnProperty.call(a, 'im') && Object.prototype.hasOwnProperty.call(a, 're')
Mutant 126 in complex.js: 'abs' in a && 'arg' in a replaced with 'abs' in a && 'arg' in b
Mutant 127 in complex.js: 'abs' in a && 'arg' in a replaced with 'abs' in b && 'arg' in a
Mutant 128 in complex.js: 'abs' in a && 'arg' in a replaced with 'abs' in a || 'arg' in b
Mutant 129 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with a['abs'] < 0 && a['arg'] > 0
Mutant 130 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with a['abs'] <= 0 && a['arg'] >= 0
Mutant 131 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with a['abs'] > 0 && a['arg'] < 0
Mutant 132 in complex.js: a['abs'] replaced with a['abs'] + 1
Mutant 133 in complex.js: a['abs'] replaced with a['abs'] * 2
Mutant 134 in complex.js: Number.isFinite replaced with a['arg'] !== 0
Mutant 135 in complex.js: a['arg'] replaced with a + b
Mutant 136 in complex.js: Math.cos replaced with Math.sin
Mutant 137 in complex.js: Math.cos replaced with Math.tan
Mutant 138 in complex.js: Math.cos replaced with Math.acos
Mutant 139 in complex.js: a['arg'] replaced with a['arg'] + 1
Mutant 140 in complex.js: a['arg'] replaced with a['arg'] - 1
Mutant 141 in complex.js: a['arg'] replaced with a['arg'] * 2
Mutant 142 in complex.js: Math.sin replaced with Math.cos
Mutant 143 in complex.js: Math.sin replaced with Math.tan
Mutant 144 in complex.js: Math.sin replaced with Math.acos
Mutant 145 in complex.js: a['arg'] replaced with a['phi']
Mutant 146 in complex.js: a['arg'] replaced with a['re']
Mutant 147 in complex.js: a['arg'] replaced with a['im']
Mutant 148 in complex.js: 'r' in a && 'phi' in a replaced with 'r' in a && 'phi' in b
Mutant 149 in complex.js: 'r' in a && 'phi' in a replaced with 'r' in a || 'phi' in a
Mutant 150 in complex.js: 'r' in a && 'phi' in a replaced with 'r' in a && 'phi' in a && a.r * a.phi > 0
Mutant 151 in complex.js: !Number.isFinite(a['r']) && Number.isFinite(a['phi']) replaced with a['r'] !== 0 && Number.isFinite(a['phi'])
Mutant 152 in complex.js: !Number.isFinite(a['r']) && Number.isFinite(a['phi']) replaced with !Number.isFinite(a['r']) || !Number.isFinite(a['phi'])
Mutant 153 in complex.js: !Number.isFinite(a['r']) && Number.isFinite(a['phi']) replaced with Number.isNaN(a['r']) && Number.isFinite(a['phi'])
Mutant 154 in complex.js: Number.isFinite replaced with a + b
Mutant 155 in complex.js: a['r'] replaced with a['abs']
Mutant 156 in complex.js: a['r'] replaced with a['re']
Mutant 157 in complex.js: Number.isFinite replaced with Number.isSafeInteger
Mutant 158 in complex.js: a['phi'] replaced with a['arg']
Mutant 159 in complex.js: a['phi'] replaced with a['phi'] + 1
Mutant 160 in complex.js: a['phi'] replaced with a['phi'] * 2
Mutant 161 in complex.js: Math.cos replaced with Math.sin
Mutant 162 in complex.js: Math.cos replaced with Math.tan
Mutant 163 in complex.js: Math.cos replaced with Math.atan
Mutant 164 in complex.js: a['phi'] replaced with a['arg']
Mutant 165 in complex.js: a['phi'] replaced with a['abs']
Mutant 166 in complex.js: a['phi'] replaced with a['re']
Mutant 167 in complex.js: Math.sin replaced with Math.cos
Mutant 168 in complex.js: Math.sin replaced with Math.tan
Mutant 169 in complex.js: Math.sin replaced with Math.asin
Mutant 170 in complex.js: a['phi'] replaced with a['arg']
Mutant 171 in complex.js: a['phi'] replaced with a['re']
Mutant 172 in complex.js: a['phi'] replaced with Math.PI
Mutant 173 in complex.js: a.length === 2 replaced with a.length < 2
Mutant 174 in complex.js: a.length === 2 replaced with a.length > 2
Mutant 175 in complex.js: a.length === 2 replaced with a.length % 2 === 0
Mutant 176 in complex.js: a.match replaced with a.split
Mutant 177 in complex.js: a.match replaced with a.replace
Mutant 178 in complex.js: a.match replaced with a.search
Mutant 179 in complex.js: /\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g replaced with /[a-zA-Z]+/g
Mutant 180 in complex.js: /\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g replaced with /[0-9]+/g
Mutant 181 in complex.js: /\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g replaced with /[a-zA-Z0-9]+/g
Mutant 182 in complex.js: for (var i = 0; i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}

// Still something on the stack replaced with for (var i = 1; i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}
Mutant 183 in complex.js: for (var i = 0; i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}

// Still something on the stack replaced with for (var i = tokens.length - 1; i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}
Mutant 184 in complex.js: for (var i = 0; i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}

// Still something on the stack replaced with for (var i = Math.floor(tokens.length / 2); i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}
Mutant 185 in complex.js: i < tokens.length replaced with i <= tokens.length
Mutant 186 in complex.js: i < tokens.length replaced with i > tokens.length
Mutant 187 in complex.js: i < tokens.length replaced with i != tokens.length
Mutant 188 in complex.js: i++ replaced with i = i + 1
Mutant 189 in complex.js: i++ replaced with i += 1
Mutant 190 in complex.js: i++ replaced with i++ + 1
Mutant 191 in complex.js: c === ' ' || c === '\t' || c === '\n' replaced with c === 'a'
Mutant 192 in complex.js: c === ' ' || c === '\t' || c === '\n' replaced with c === 'b'
Mutant 193 in complex.js: c === ' ' || c === '\t' || c === '\n' replaced with c === 'c'
Mutant 194 in complex.js: c === '+' replaced with c === '-'
Mutant 195 in complex.js: c === '+' replaced with c === '*'
Mutant 196 in complex.js: c === '+' replaced with c === '/'
Mutant 197 in complex.js: c === '-' replaced with c === '+'
Mutant 198 in complex.js: c === '-' replaced with c === ' '
Mutant 199 in complex.js: c === '-' replaced with c === 'i'
Mutant 200 in complex.js: c === 'i' || c === 'I' replaced with c == 'i' || c == 'I'
Mutant 201 in complex.js: c === 'i' || c === 'I' replaced with c === 'i' || c === 'I' || c === 'j' || c === 'J'
Mutant 202 in complex.js: plus + minus === 0 replaced with plus + minus <= 0
Mutant 203 in complex.js: plus + minus === 0 replaced with plus + minus < 0
Mutant 204 in complex.js: tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) replaced with tokens[i + 1] !== ' ' && tokens[i + 1] !== 'i'
Mutant 205 in complex.js: tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) replaced with tokens[i + 1] !== ' ' && tokens[i + 1] !== 'I'
Mutant 206 in complex.js: isNaN replaced with !isNaN
Mutant 207 in complex.js: isNaN replaced with isFinite
Mutant 208 in complex.js: isNaN replaced with Number.isNaN
Mutant 209 in complex.js: tokens[i + 1] replaced with tokens[i + 2]
Mutant 210 in complex.js: tokens[i + 1] replaced with tokens[i - 1]
Mutant 211 in complex.js: tokens[i + 1] replaced with tokens[i + 1] * 2
Mutant 212 in complex.js: parseFloat replaced with a * b
Mutant 213 in complex.js: parseFloat replaced with z['im']
Mutant 214 in complex.js: (minus % 2 ? '-' : '') + tokens[i + 1] replaced with (minus % 2 ? '-' : '') + '0'
Mutant 215 in complex.js: (minus % 2 ? '-' : '') + tokens[i + 1] replaced with (minus % 2 ? '-' : '') + (tokens[i + 1] || '0')
Mutant 216 in complex.js: (minus % 2 ? '-' : '') + tokens[i + 1] replaced with (minus % 2 ? '-' : '') + ('0' + tokens[i + 1])
Mutant 217 in complex.js: (minus % 2 ? '-' : '') + '1' replaced with (minus % 2 ? '-' : '') + '2'
Mutant 218 in complex.js: (minus % 2 ? '-' : '') + '1' replaced with (minus % 2 ? '-' : '') + 'a'
Mutant 219 in complex.js: (minus % 2 ? '-' : '') + '1' replaced with (minus % 2 ? '-' : '') + 'z'
Mutant 220 in complex.js: plus + minus === 0 || isNaN(c) replaced with plus + minus === 1 || isNaN(c)
Mutant 221 in complex.js: plus + minus === 0 || isNaN(c) replaced with plus + minus === 0 && !isNaN(c)
Mutant 222 in complex.js: plus + minus === 0 || isNaN(c) replaced with plus + minus === 1 && isNaN(c)
Mutant 223 in complex.js: isNaN replaced with isFinite
Mutant 224 in complex.js: isNaN replaced with Number.isNaN
Mutant 225 in complex.js: c replaced with c + 1
Mutant 226 in complex.js: c replaced with c * 0
Mutant 227 in complex.js: c replaced with c - 1
Mutant 228 in complex.js: tokens[i + 1] === 'i' || tokens[i + 1] === 'I' replaced with tokens[i + 1] === 'j' || tokens[i + 1] === 'J'
Mutant 229 in complex.js: tokens[i + 1] === 'i' || tokens[i + 1] === 'I' replaced with tokens[i + 1] === 'e' || tokens[i + 1] === 'E'
Mutant 230 in complex.js: tokens[i + 1] === 'i' || tokens[i + 1] === 'I' replaced with tokens[i + 1] === '+' || tokens[i + 1] === '-'
Mutant 231 in complex.js: parseFloat replaced with tokens[i + 1].length
Mutant 232 in complex.js: parseFloat replaced with tokens[i + 1] * 2
Mutant 233 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '+' : '') + c
Mutant 234 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '-' : '') + c * 2
Mutant 235 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '-' : '') + b
Mutant 236 in complex.js: parseFloat replaced with parseInt
Mutant 237 in complex.js: parseFloat replaced with Number
Mutant 238 in complex.js: parseFloat replaced with Math.floor
Mutant 239 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '+' : '') + c
Mutant 240 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '*' : '') + c
Mutant 241 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '/' : '') + c
Mutant 242 in complex.js: plus + minus > 0 replaced with plus > 0
Mutant 243 in complex.js: plus + minus > 0 replaced with minus > 0
Mutant 244 in complex.js: plus + minus > 0 replaced with plus - minus > 0
Mutant 245 in complex.js: isNaN(z['re']) || isNaN(z['im']) replaced with !isNaN(z['re']) && !isNaN(z['im'])
Mutant 246 in complex.js: isNaN(z['re']) || isNaN(z['im']) replaced with z['re'] === Infinity || z['im'] === Infinity
Mutant 247 in complex.js: isNaN(z['re']) || isNaN(z['im']) replaced with z['re'] === 0 && z['im'] === 0
Mutant 248 in complex.js: isNaN replaced with isFinite
Mutant 249 in complex.js: isNaN replaced with !isFinite
Mutant 250 in complex.js: z['re'] replaced with z['re'] + z['im']
Mutant 251 in complex.js: z['re'] replaced with z['re'] * z['im']
Mutant 252 in complex.js: isNaN replaced with isFinite
Mutant 253 in complex.js: isNaN replaced with Number.isNaN
Mutant 254 in complex.js: z['im'] replaced with z['im'] + 1
Mutant 255 in complex.js: z['im'] replaced with z['re'] * 2
Mutant 256 in complex.js: !(this instanceof Complex) replaced with this == Complex
Mutant 257 in complex.js: !(this instanceof Complex) replaced with this.constructor == Complex
Mutant 258 in complex.js: !(this instanceof Complex) replaced with this instanceof Complex
Mutant 259 in complex.js: parse(a, b) replaced with parse(a + b)
Mutant 260 in complex.js: parse(a, b) replaced with parse(a * b)
Mutant 261 in complex.js: parse(a, b) replaced with parse(a / b)
Mutant 262 in complex.js: parse replaced with a + b
Mutant 263 in complex.js: a replaced with a + 1
Mutant 264 in complex.js: a replaced with a * 2
Mutant 265 in complex.js: a replaced with a - 1
Mutant 266 in complex.js: b replaced with a
Mutant 267 in complex.js: b replaced with a + b
Mutant 268 in complex.js: b replaced with a * b
Mutant 269 in complex.js: this['abs'] replaced with this['re']
Mutant 270 in complex.js: this['abs'] replaced with this['im']
Mutant 271 in complex.js: this['abs'] replaced with this['re'] + this['im']
Mutant 272 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() || z['isInfinite']()
Mutant 273 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() && !z['isInfinite']()
Mutant 274 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with !this['isInfinite']() && z['isInfinite']()
Mutant 275 in complex.js: this['isInfinite'] replaced with this['isNaN']
Mutant 276 in complex.js: this['isInfinite'] replaced with z['isZero']
Mutant 277 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 278 in complex.js: z['isInfinite'] replaced with z['re'] === Infinity
Mutant 279 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() && z['isInfinite']()
Mutant 280 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() || z['isZero']()
Mutant 281 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() && z['isZero']()
Mutant 282 in complex.js: this['isInfinite'] replaced with !this['isInfinite']
Mutant 283 in complex.js: this['isInfinite'] replaced with this['isZero']
Mutant 284 in complex.js: this['isInfinite'] replaced with this['im'] === 0
Mutant 285 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() || z['isInfinite']()
Mutant 286 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() && !z['isInfinite']()
Mutant 287 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with !this['isInfinite']() && z['isInfinite']()
Mutant 288 in complex.js: this['isInfinite'] replaced with this['isFinite']
Mutant 289 in complex.js: this['isInfinite'] replaced with this['isNaN']
Mutant 290 in complex.js: z['isInfinite'] replaced with z['isFinite']
Mutant 291 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 292 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() && z['isInfinite']()
Mutant 293 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with !this['isInfinite']() && !z['isInfinite']()
Mutant 294 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with !this['isInfinite']() || !z['isInfinite']()
Mutant 295 in complex.js: this['isInfinite'] replaced with this['isFinite']
Mutant 296 in complex.js: this['isInfinite'] replaced with this['isNaN']
Mutant 297 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 298 in complex.js: z['isInfinite'] replaced with z['isZero']
Mutant 299 in complex.js: z['isInfinite'] replaced with z['im'] === 0
Mutant 300 in complex.js: this['isInfinite']() && z['isZero']() || this['isZero']() && z['isInfinite']() replaced with (this['isInfinite']() || z['isZero']()) && (this['isZero']() || z['isInfinite']())
Mutant 301 in complex.js: this['isInfinite'] replaced with !this['isInfinite']
Mutant 302 in complex.js: this['isInfinite'] replaced with this['isNaN']
Mutant 303 in complex.js: this['isInfinite'] replaced with this['isInfinite'] && z['isInfinite']
Mutant 304 in complex.js: z['isZero'] replaced with z['isNaN']
Mutant 305 in complex.js: z['isZero'] replaced with !z['isZero']
Mutant 306 in complex.js: this['isZero'] replaced with this['isNaN']
Mutant 307 in complex.js: this['isZero'] replaced with this['isZero'] && z['isInfinite']
Mutant 308 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 309 in complex.js: z['isInfinite'] replaced with z['isFinite']
Mutant 310 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() && z['isInfinite']()
Mutant 311 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() && !z['isInfinite']()
Mutant 312 in complex.js: this['isInfinite'] replaced with this['isInfinite'] && z['isInfinite']
Mutant 313 in complex.js: this['isInfinite'] replaced with !this['isInfinite'] && z['isInfinite']
Mutant 314 in complex.js: this['isInfinite'] replaced with this['isInfinite'] || z['isInfinite']
Mutant 315 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 316 in complex.js: z['isInfinite'] replaced with z['isZero']
Mutant 317 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with z['im'] === 0 && this['re'] === 0
Mutant 318 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with z['im'] === 0 || this['re'] === 0
Mutant 319 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with z['im'] === 0 && this['im'] === 0 && this['re'] === 0
Mutant 320 in complex.js: this['isZero']() && z['isZero']() || this['isInfinite']() && z['isInfinite']() replaced with this['isZero'](z) && z['isZero'](z) || this['isInfinite'](z) && z['isInfinite'](z)
Mutant 321 in complex.js: this['isZero']() && z['isZero']() || this['isInfinite']() && z['isInfinite']() replaced with this['isZero'](a) && z['isZero'](a) || this['isInfinite'](a) && z['isInfinite'](a)
Mutant 322 in complex.js: this['isZero'] replaced with this['isNaN']
Mutant 323 in complex.js: this['isZero'] replaced with this['isZero'] && z['isZero']
Mutant 324 in complex.js: z['isZero'] replaced with z['re'] === 0
Mutant 325 in complex.js: z['isZero'] replaced with z['im'] === 0
Mutant 326 in complex.js: this['isInfinite'] replaced with this['isNaN']
Mutant 327 in complex.js: this['isInfinite'] replaced with z['re'] === 0
Mutant 328 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 329 in complex.js: z['isInfinite'] replaced with Complex['NAN']
Mutant 330 in complex.js: this['isInfinite']() || z['isZero']() replaced with this['isInfinite']() && z['isZero']()
Mutant 331 in complex.js: this['isInfinite']() || z['isZero']() replaced with this['isZero']() || z['isInfinite']()
Mutant 332 in complex.js: z['isZero'] replaced with z['isNaN']
Mutant 333 in complex.js: z['isZero'] replaced with z['re'] === 0
Mutant 334 in complex.js: z['isZero'] replaced with z['im'] === 0
Mutant 335 in complex.js: this['isZero']() || z['isInfinite']() replaced with this['isZero']() && z['isInfinite']()
Mutant 336 in complex.js: this['isZero']() || z['isInfinite']() replaced with this['isZero']() || z['isNaN']()
Mutant 337 in complex.js: this['isZero']() || z['isInfinite']() replaced with z['isZero']() && this['isInfinite']()
Mutant 338 in complex.js: this['isZero'] replaced with this['isNaN']
Mutant 339 in complex.js: this['isZero'] replaced with this['im'] === 0
Mutant 340 in complex.js: z['isInfinite'] replaced with z['isFinite']
Mutant 341 in complex.js: 0 === d replaced with d !== 0
Mutant 342 in complex.js: 0 === d replaced with d > 0
Mutant 343 in complex.js: 0 === d replaced with d <= 0
Mutant 344 in complex.js: Math.abs(c) < Math.abs(d) replaced with c < d
Mutant 345 in complex.js: Math.abs(c) < Math.abs(d) replaced with a > b
Mutant 346 in complex.js: Math.abs(c) < Math.abs(d) replaced with a + b < c + d
Mutant 347 in complex.js: c replaced with b - a
Mutant 348 in complex.js: c replaced with c * 2
Mutant 349 in complex.js: Math.abs replaced with Math.abs + 1
Mutant 350 in complex.js: Math.abs replaced with Math.abs - 1
Mutant 351 in complex.js: Math.abs replaced with Math.abs * 2
Mutant 352 in complex.js: d replaced with 0
Mutant 353 in complex.js: d replaced with -1
Mutant 354 in complex.js: d replaced with Math.abs(c)
Mutant 355 in complex.js: z['isZero']() replaced with z['isInfinite']()
Mutant 356 in complex.js: z['isZero']() replaced with z['im'] > 0
Mutant 357 in complex.js: z['isZero']() replaced with z['re'] - z['im']
Mutant 358 in complex.js: z['isZero'] replaced with z['isZero'] = true
Mutant 359 in complex.js: z['isZero'] replaced with z['isZero'] = false
Mutant 360 in complex.js: z['im'] === 0 replaced with z['im'] !== 0
Mutant 361 in complex.js: z['im'] === 0 replaced with z['im'] > 0
Mutant 362 in complex.js: z['im'] === 0 replaced with z['im'] < 0
Mutant 363 in complex.js: b === 0 && a > 0 replaced with a > b
Mutant 364 in complex.js: b === 0 && a > 0 replaced with a === b
Mutant 365 in complex.js: b === 0 && a > 0 replaced with a + b === 0
Mutant 366 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(a + z['re'])
Mutant 367 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(a * z['re'])
Mutant 368 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(a - z['re'])
Mutant 369 in complex.js: Math.pow replaced with Math.sqrt
Mutant 370 in complex.js: Math.pow replaced with Math.log
Mutant 371 in complex.js: Math.pow replaced with Math.sin
Mutant 372 in complex.js: a replaced with a + 1
Mutant 373 in complex.js: a replaced with a - 1
Mutant 374 in complex.js: a replaced with a * 2
Mutant 375 in complex.js: z['re'] replaced with z['im']
Mutant 376 in complex.js: z['re'] replaced with z['abs']()
Mutant 377 in complex.js: z['re'] replaced with z['arg']()
Mutant 378 in complex.js: a === 0 replaced with a !== 0
Mutant 379 in complex.js: a === 0 replaced with a + 1 === 0
Mutant 380 in complex.js: a === 0 replaced with a * b === 0
Mutant 381 in complex.js: (z['re'] % 4 + 4) % 4 replaced with (z['re'] % 2 + 2) % 2
Mutant 382 in complex.js: (z['re'] % 4 + 4) % 4 replaced with (z['re'] % 3 + 3) % 3
Mutant 383 in complex.js: (z['re'] % 4 + 4) % 4 replaced with (z['re'] % 2 + 1) % 2
Mutant 384 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(a, z['re'])
Mutant 385 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, z['im'])
Mutant 386 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(a, z['im'])
Mutant 387 in complex.js: Math.pow replaced with Math.sin
Mutant 388 in complex.js: Math.pow replaced with Math.abs
Mutant 389 in complex.js: Math.pow replaced with Math.log
Mutant 390 in complex.js: b replaced with a
Mutant 391 in complex.js: b replaced with c
Mutant 392 in complex.js: b replaced with this.b
Mutant 393 in complex.js: z['re'] replaced with z['im']
Mutant 394 in complex.js: z['re'] replaced with z['re'] * z['im']
Mutant 395 in complex.js: z['re'] replaced with z['re'] + z['im']
Mutant 396 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(a, z['re'])
Mutant 397 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, z['im'])
Mutant 398 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(a + b, z['re'])
Mutant 399 in complex.js: Math.pow replaced with b ** z['re']
Mutant 400 in complex.js: b replaced with a
Mutant 401 in complex.js: b replaced with c
Mutant 402 in complex.js: b replaced with d
Mutant 403 in complex.js: z['re'] replaced with z['im']
Mutant 404 in complex.js: z['re'] replaced with z['re'] + 1
Mutant 405 in complex.js: z['re'] replaced with z['im'] + 1
Mutant 406 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(a, z['re'])
Mutant 407 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, z['im'])
Mutant 408 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(a, z['im'])
Mutant 409 in complex.js: Math.pow replaced with Math.sqrt
Mutant 410 in complex.js: Math.pow replaced with Math.abs
Mutant 411 in complex.js: Math.pow replaced with Math.log
Mutant 412 in complex.js: b replaced with a
Mutant 413 in complex.js: b replaced with c
Mutant 414 in complex.js: b replaced with z.re
Mutant 415 in complex.js: z['re'] replaced with z['im']
Mutant 416 in complex.js: z['re'] replaced with z['re'] + 1
Mutant 417 in complex.js: z['re'] replaced with z['re'] * z['im']
Mutant 418 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b * z['re'])
Mutant 419 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(a * z['re'])
Mutant 420 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(a * b)
Mutant 421 in complex.js: Math.pow replaced with Math.sin
Mutant 422 in complex.js: Math.pow replaced with Math.abs
Mutant 423 in complex.js: Math.pow replaced with Math.sqrt
Mutant 424 in complex.js: b replaced with b + 1
Mutant 425 in complex.js: b replaced with a + 1
Mutant 426 in complex.js: b replaced with a - 1
Mutant 427 in complex.js: z['re'] replaced with z['im']
Mutant 428 in complex.js: z['re'] replaced with z['re'] + 1
Mutant 429 in complex.js: z['re'] replaced with z['re'] - z['im']
Mutant 430 in complex.js: a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0 replaced with a === 0 && b === 0 && z['re'] > 0 && z['im'] < 0
Mutant 431 in complex.js: a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0 replaced with a === 0 && b === 0 && z['re'] < 0 && z['im'] >= 0
Mutant 432 in complex.js: a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0 replaced with a === 0 && b === 0 && z['re'] < 0 && z['im'] < 0
Mutant 433 in complex.js: Math.atan2(b, a) replaced with Math.atan2(a - b)
Mutant 434 in complex.js: Math.atan2(b, a) replaced with Math.atan2(Math.abs(b))
Mutant 435 in complex.js: Math.atan2(b, a) replaced with Math.atan2(b * Math.PI)
Mutant 436 in complex.js: Math.atan2 replaced with Math.acos
Mutant 437 in complex.js: Math.atan2 replaced with Math.sin
Mutant 438 in complex.js: Math.atan2 replaced with Math.cos
Mutant 439 in complex.js: b replaced with b * 2
Mutant 440 in complex.js: b replaced with a + b
Mutant 441 in complex.js: b replaced with b - a
Mutant 442 in complex.js: a replaced with b
Mutant 443 in complex.js: a replaced with a + b
Mutant 444 in complex.js: a replaced with a - b
Mutant 445 in complex.js: logHypot(a, b) replaced with logHypot(a + b)
Mutant 446 in complex.js: logHypot(a, b) replaced with logHypot(a * b)
Mutant 447 in complex.js: logHypot(a, b) replaced with logHypot(a / b)
Mutant 448 in complex.js: logHypot replaced with logHypot + 1
Mutant 449 in complex.js: logHypot replaced with logHypot - 1
Mutant 450 in complex.js: a replaced with a * Math.random()
Mutant 451 in complex.js: a replaced with a + Math.PI
Mutant 452 in complex.js: a replaced with a - Math.E
Mutant 453 in complex.js: b replaced with a
Mutant 454 in complex.js: b replaced with a + b
Mutant 455 in complex.js: b replaced with a * b
Mutant 456 in complex.js: Math.exp replaced with Math.sqrt
Mutant 457 in complex.js: Math.exp replaced with Math.sin
Mutant 458 in complex.js: Math.exp replaced with Math.cos
Mutant 459 in complex.js: z['re'] * loh - z['im'] * arg replaced with z['re'] * loh + z['im'] * arg
Mutant 460 in complex.js: z['re'] * loh - z['im'] * arg replaced with z['re'] * loh - z['im'] * arg + 1
Mutant 461 in complex.js: z['re'] * loh - z['im'] * arg replaced with z['re'] * loh - z['im'] * arg * 2
Mutant 462 in complex.js: Math.cos replaced with Math.sin
Mutant 463 in complex.js: Math.cos replaced with Math.tan
Mutant 464 in complex.js: Math.cos replaced with Math.acos
Mutant 465 in complex.js: b replaced with a
Mutant 466 in complex.js: b replaced with b + 1
Mutant 467 in complex.js: b replaced with a * b
Mutant 468 in complex.js: Math.sin replaced with Math.cos
Mutant 469 in complex.js: Math.sin replaced with Math.tan
Mutant 470 in complex.js: Math.sin replaced with Math.asin
Mutant 471 in complex.js: b replaced with a
Mutant 472 in complex.js: b replaced with b + 1
Mutant 473 in complex.js: b replaced with a * b
Mutant 474 in complex.js: this['abs'] replaced with this['re']
Mutant 475 in complex.js: this['abs'] replaced with this['im']
Mutant 476 in complex.js: this['abs'] replaced with this['abs'] + 1
Mutant 477 in complex.js: a >= 0 replaced with a > 0
Mutant 478 in complex.js: a >= 0 replaced with a != 0
Mutant 479 in complex.js: a >= 0 replaced with a <= 0
Mutant 480 in complex.js: Math.sqrt replaced with Math.cbrt
Mutant 481 in complex.js: Math.sqrt replaced with Math.log
Mutant 482 in complex.js: Math.sqrt replaced with Math.random
Mutant 483 in complex.js: a replaced with a + 1
Mutant 484 in complex.js: a replaced with b * 2
Mutant 485 in complex.js: a replaced with a - b
Mutant 486 in complex.js: Math.sqrt replaced with Math.cbrt
Mutant 487 in complex.js: Math.sqrt replaced with Math.log
Mutant 488 in complex.js: Math.sqrt replaced with Math.exp
Mutant 489 in complex.js: 2.0 * (r + a) replaced with 2.0 * (r - a)
Mutant 490 in complex.js: 2.0 * (r + a) replaced with 2.0 * (r + b)
Mutant 491 in complex.js: 2.0 * (r + a) replaced with 2.0 * (r + a + b)
Mutant 492 in complex.js: Math.abs replaced with Math.acos
Mutant 493 in complex.js: Math.abs replaced with Math.cos
Mutant 494 in complex.js: Math.abs replaced with Math.sin
Mutant 495 in complex.js: b replaced with a
Mutant 496 in complex.js: b replaced with b + 1
Mutant 497 in complex.js: b replaced with b * 2
Mutant 498 in complex.js: Math.sqrt replaced with Math.floor
Mutant 499 in complex.js: Math.sqrt replaced with Math.ceil
Mutant 500 in complex.js: Math.sqrt replaced with Math.random
Mutant 501 in complex.js: 2 * (r - a) replaced with 2 * (r + a)
Mutant 502 in complex.js: 2 * (r - a) replaced with 2 * (r - b)
Mutant 503 in complex.js: 2 * (r - a) replaced with 2 * (r * a)
Mutant 504 in complex.js: a <= 0 replaced with a < 0
Mutant 505 in complex.js: a <= 0 replaced with a != 0
Mutant 506 in complex.js: a <= 0 replaced with a === 0
Mutant 507 in complex.js: Math.sqrt replaced with Math.ceil
Mutant 508 in complex.js: Math.sqrt replaced with Math.random
Mutant 509 in complex.js: Math.sqrt replaced with Math.PI
Mutant 510 in complex.js: 2.0 * (r - a) replaced with 2.0 * (r + a)
Mutant 511 in complex.js: 2.0 * (r - a) replaced with 1.0 * (r - a)
Mutant 512 in complex.js: 2.0 * (r - a) replaced with 2.0 * (r - b)
Mutant 513 in complex.js: Math.abs replaced with Math.cos
Mutant 514 in complex.js: Math.abs replaced with -Math.abs
Mutant 515 in complex.js: Math.abs replaced with Math.sin
Mutant 516 in complex.js: b replaced with -b
Mutant 517 in complex.js: b replaced with b + 1
Mutant 518 in complex.js: b replaced with Math.cos(b)
Mutant 519 in complex.js: Math.sqrt replaced with Math.cbrt
Mutant 520 in complex.js: Math.sqrt replaced with Math.log
Mutant 521 in complex.js: Math.sqrt replaced with Math.sin
Mutant 522 in complex.js: 2 * (r + a) replaced with 2 * (r - a)
Mutant 523 in complex.js: 2 * (r + a) replaced with 2 * (r + b)
Mutant 524 in complex.js: 2 * (r + a) replaced with 2 * (a + b)
Mutant 525 in complex.js: Math.exp replaced with Math.sqrt
Mutant 526 in complex.js: Math.exp replaced with Math.log
Mutant 527 in complex.js: Math.exp replaced with Math.sin
Mutant 528 in complex.js: this['re'] replaced with this['im']
Mutant 529 in complex.js: this['re'] replaced with -this['re']
Mutant 530 in complex.js: this['re'] replaced with this['re'] + this['im']
Mutant 531 in complex.js: this['im'] === 0 replaced with this['im'] !== 0
Mutant 532 in complex.js: this['im'] === 0 replaced with this['im'] > 0
Mutant 533 in complex.js: this['im'] === 0 replaced with this['im'] < 0
Mutant 534 in complex.js: Math.cos replaced with Math.sin
Mutant 535 in complex.js: Math.cos replaced with Math.tan
Mutant 536 in complex.js: Math.cos replaced with Math.acos
Mutant 537 in complex.js: this['im'] replaced with this['re']
Mutant 538 in complex.js: this['im'] replaced with this['im'] + 1
Mutant 539 in complex.js: this['im'] replaced with -this['im']
Mutant 540 in complex.js: Math.sin replaced with Math.cos
Mutant 541 in complex.js: Math.sin replaced with Math.tan
Mutant 542 in complex.js: Math.sin replaced with Math.asin
Mutant 543 in complex.js: this['im'] replaced with this['re']
Mutant 544 in complex.js: this['im'] replaced with Math.cos(a)
Mutant 545 in complex.js: this['im'] replaced with Math.sin(b)
Mutant 546 in complex.js: Math.expm1 replaced with Math.exp
Mutant 547 in complex.js: Math.expm1 replaced with Math.sin
Mutant 548 in complex.js: Math.expm1 replaced with Math.cos
Mutant 549 in complex.js: a replaced with a + 1
Mutant 550 in complex.js: a replaced with a - 1
Mutant 551 in complex.js: a replaced with a * 2
Mutant 552 in complex.js: Math.cos replaced with Math.sin
Mutant 553 in complex.js: Math.cos replaced with Math.tan
Mutant 554 in complex.js: Math.cos replaced with Math.acos
Mutant 555 in complex.js: b replaced with a
Mutant 556 in complex.js: b replaced with b + 1
Mutant 557 in complex.js: b replaced with Math.PI
Mutant 558 in complex.js: b replaced with a
Mutant 559 in complex.js: b replaced with 2 * b
Mutant 560 in complex.js: b replaced with b + 1
Mutant 561 in complex.js: Math.exp replaced with Math.sqrt
Mutant 562 in complex.js: Math.exp replaced with Math.sin
Mutant 563 in complex.js: Math.exp replaced with Math.log
Mutant 564 in complex.js: a replaced with a + 1
Mutant 565 in complex.js: a replaced with b
Mutant 566 in complex.js: a replaced with c
Mutant 567 in complex.js: Math.sin replaced with Math.cos
Mutant 568 in complex.js: Math.sin replaced with Math.tan
Mutant 569 in complex.js: Math.sin replaced with Math.PI
Mutant 570 in complex.js: b replaced with -b
Mutant 571 in complex.js: b replaced with b * 2
Mutant 572 in complex.js: b replaced with b + 1
Mutant 573 in complex.js: b === 0 && a > 0 replaced with a > 0
Mutant 574 in complex.js: b === 0 && a > 0 replaced with b === 0 && a < 0
Mutant 575 in complex.js: b === 0 && a > 0 replaced with a === 0 && b < 0
Mutant 576 in complex.js: logHypot(a, b) replaced with logHypot(a + b)
Mutant 577 in complex.js: logHypot(a, b) replaced with logHypot(a * b)
Mutant 578 in complex.js: logHypot(a, b) replaced with logHypot(a - b)
Mutant 579 in complex.js: a replaced with a + 1
Mutant 580 in complex.js: a replaced with b
Mutant 581 in complex.js: a replaced with a * 2
Mutant 582 in complex.js: b replaced with a
Mutant 583 in complex.js: b replaced with Math.PI
Mutant 584 in complex.js: b replaced with Math.random()
Mutant 585 in complex.js: Math.atan2(b, a) replaced with Math.atan2(a, b)
Mutant 586 in complex.js: Math.atan2(b, a) replaced with Math.atan2(a + b)
Mutant 587 in complex.js: Math.atan2(b, a) replaced with Math.atan2(a - b)
Mutant 588 in complex.js: Math.atan2 replaced with Math.tan
Mutant 589 in complex.js: Math.atan2 replaced with Math.sin
Mutant 590 in complex.js: Math.atan2 replaced with Math.cos
Mutant 591 in complex.js: b replaced with a
Mutant 592 in complex.js: b replaced with b + 1
Mutant 593 in complex.js: b replaced with 2 * b
Mutant 594 in complex.js: a replaced with a + 1
Mutant 595 in complex.js: a replaced with a * 2
Mutant 596 in complex.js: a replaced with a - 1
Mutant 597 in complex.js: hypot(this['re'], this['im']) replaced with hypot(this['im'], this['re'])
Mutant 598 in complex.js: hypot(this['re'], this['im']) replaced with hypot(this['re'] + this['im'])
Mutant 599 in complex.js: hypot(this['re'], this['im']) replaced with hypot(this['re'] * this['im'])
Mutant 600 in complex.js: this['re'] replaced with this['im']
Mutant 601 in complex.js: this['re'] replaced with this['abs']
Mutant 602 in complex.js: this['re'] replaced with this['re'] + this['im']
Mutant 603 in complex.js: this['im'] replaced with this['re']
Mutant 604 in complex.js: this['im'] replaced with this['im'] + 1
Mutant 605 in complex.js: this['im'] replaced with this['im'] * 2
Mutant 606 in complex.js: Math.atan2(this['im'], this['re']) replaced with Math.atan2(this['re'], this['im'])
Mutant 607 in complex.js: Math.atan2(this['im'], this['re']) replaced with Math.atan2(-this['im'], this['re'])
Mutant 608 in complex.js: Math.atan2(this['im'], this['re']) replaced with Math.atan2(this['im'] + 1, this['re'])
Mutant 609 in complex.js: this['im'] replaced with this['re']
Mutant 610 in complex.js: this['im'] replaced with -this['im']
Mutant 611 in complex.js: this['im'] replaced with this['im'] + 1
Mutant 612 in complex.js: this['re'] replaced with this['im']
Mutant 613 in complex.js: this['re'] replaced with this['re'] + 1
Mutant 614 in complex.js: this['re'] replaced with this['im'] - this['re']
Mutant 615 in complex.js: Math.sin replaced with Math.cos
Mutant 616 in complex.js: Math.sin replaced with Math.tan
Mutant 617 in complex.js: Math.sin replaced with Math.log
Mutant 618 in complex.js: a replaced with a + Math.PI
Mutant 619 in complex.js: a replaced with a * 2
Mutant 620 in complex.js: a replaced with a - Math.PI
Mutant 621 in complex.js: cosh replaced with -cosh
Mutant 622 in complex.js: cosh replaced with 2 * cosh
Mutant 623 in complex.js: cosh replaced with Math.sin
Mutant 624 in complex.js: b replaced with b + 1
Mutant 625 in complex.js: b replaced with b * 2
Mutant 626 in complex.js: b replaced with b / 2
Mutant 627 in complex.js: Math.cos replaced with Math.sin
Mutant 628 in complex.js: Math.cos replaced with Math.tan
Mutant 629 in complex.js: Math.cos replaced with Math.acos
Mutant 630 in complex.js: a replaced with -a
Mutant 631 in complex.js: a replaced with a + 1
Mutant 632 in complex.js: a replaced with Math.PI
Mutant 633 in complex.js: sinh replaced with sin
Mutant 634 in complex.js: sinh replaced with cos
Mutant 635 in complex.js: sinh replaced with tan
Mutant 636 in complex.js: b replaced with -b
Mutant 637 in complex.js: b replaced with b * b
Mutant 638 in complex.js: b replaced with b + 1
Mutant 639 in complex.js: Math.cos replaced with Math.sin
Mutant 640 in complex.js: Math.cos replaced with Math.tan
Mutant 641 in complex.js: Math.cos replaced with Math.acos
Mutant 642 in complex.js: a replaced with b
Mutant 643 in complex.js: a replaced with a + 1
Mutant 644 in complex.js: a replaced with Math.PI
Mutant 645 in complex.js: cosh replaced with Math.sinh
Mutant 646 in complex.js: cosh replaced with Math.tanh
Mutant 647 in complex.js: cosh replaced with Math.acosh
Mutant 648 in complex.js: b replaced with -b
Mutant 649 in complex.js: b replaced with b + 1
Mutant 650 in complex.js: b replaced with Math.sin(b)
Mutant 651 in complex.js: Math.sin replaced with -Math.sin
Mutant 652 in complex.js: Math.sin replaced with Math.cos
Mutant 653 in complex.js: Math.sin replaced with Math.tan
Mutant 654 in complex.js: a replaced with -a
Mutant 655 in complex.js: a replaced with a + 1
Mutant 656 in complex.js: a replaced with a * 2
Mutant 657 in complex.js: sinh replaced with -sinh
Mutant 658 in complex.js: b replaced with -b
Mutant 659 in complex.js: b replaced with b + 1
Mutant 660 in complex.js: b replaced with b * 2
Mutant 661 in complex.js: Math.cos replaced with Math.sin
Mutant 662 in complex.js: Math.cos replaced with Math.tan
Mutant 663 in complex.js: Math.cos replaced with Math.acos
Mutant 664 in complex.js: a replaced with a + 1
Mutant 665 in complex.js: a replaced with a - 1
Mutant 666 in complex.js: a replaced with a * 2
Mutant 667 in complex.js: cosh replaced with Math.sinh
Mutant 668 in complex.js: cosh replaced with Math.cosh
Mutant 669 in complex.js: cosh replaced with Math.tanh
Mutant 670 in complex.js: b replaced with b * b
Mutant 671 in complex.js: b replaced with b + 1
Mutant 672 in complex.js: b replaced with b - 1
Mutant 673 in complex.js: Math.sin replaced with Math.cos
Mutant 674 in complex.js: Math.sin replaced with Math.tan
Mutant 675 in complex.js: Math.sin replaced with Math.asin
Mutant 676 in complex.js: a replaced with b
Mutant 677 in complex.js: a replaced with a + b
Mutant 678 in complex.js: a replaced with a * b
Mutant 679 in complex.js: sinh replaced with -sinh
Mutant 680 in complex.js: sinh replaced with cosh
Mutant 681 in complex.js: sinh replaced with Math.sinh
Mutant 682 in complex.js: b replaced with b + 1
Mutant 683 in complex.js: b replaced with b * 2
Mutant 684 in complex.js: b replaced with b - 1
Mutant 685 in complex.js: Math.cos replaced with Math.sin
Mutant 686 in complex.js: Math.cos replaced with Math.tan
Mutant 687 in complex.js: Math.cos replaced with Math.acos
Mutant 688 in complex.js: a replaced with a + 1
Mutant 689 in complex.js: a replaced with -a
Mutant 690 in complex.js: a replaced with b
Mutant 691 in complex.js: cosh replaced with Math.sinh
Mutant 692 in complex.js: cosh replaced with Math.tanh
Mutant 693 in complex.js: cosh replaced with Math.acosh
Mutant 694 in complex.js: b replaced with b + 1
Mutant 695 in complex.js: b replaced with b * 2
Mutant 696 in complex.js: b replaced with b - 1
Mutant 697 in complex.js: Math.sin replaced with Math.cos
Mutant 698 in complex.js: Math.sin replaced with Math.tan
Mutant 699 in complex.js: Math.sin replaced with Math.cot
Mutant 700 in complex.js: a replaced with a + 1
Mutant 701 in complex.js: a replaced with b
Mutant 702 in complex.js: a replaced with a * b
Mutant 703 in complex.js: sinh replaced with cosh
Mutant 704 in complex.js: sinh replaced with tanh
Mutant 705 in complex.js: sinh replaced with 1 / sinh
Mutant 706 in complex.js: b replaced with b + 1
Mutant 707 in complex.js: b replaced with -b
Mutant 708 in complex.js: b replaced with b * 2
Mutant 709 in complex.js: cosh replaced with sinh
Mutant 710 in complex.js: cosh replaced with Math.sinh
Mutant 711 in complex.js: 2 * b replaced with 2 * a
Mutant 712 in complex.js: 2 * b replaced with b * b
Mutant 713 in complex.js: 2 * b replaced with a + b
Mutant 714 in complex.js: Math.cos replaced with Math.sin
Mutant 715 in complex.js: Math.cos replaced with Math.tan
Mutant 716 in complex.js: Math.cos replaced with Math.PI
Mutant 717 in complex.js: 2 * a replaced with 2 * b
Mutant 718 in complex.js: 2 * a replaced with a + b
Mutant 719 in complex.js: 2 * a replaced with a - b
Mutant 720 in complex.js: Math.cos replaced with Math.sin
Mutant 721 in complex.js: Math.cos replaced with Math.tan
Mutant 722 in complex.js: Math.cos replaced with Math.acos
Mutant 723 in complex.js: a replaced with a + 1
Mutant 724 in complex.js: a replaced with b
Mutant 725 in complex.js: a replaced with a * b
Mutant 726 in complex.js: cosh replaced with cos
Mutant 727 in complex.js: cosh replaced with sin
Mutant 728 in complex.js: cosh replaced with tan
Mutant 729 in complex.js: b replaced with a
Mutant 730 in complex.js: b replaced with b + 1
Mutant 731 in complex.js: b replaced with b * 2
Mutant 732 in complex.js: Math.sin replaced with Math.tan
Mutant 733 in complex.js: Math.sin replaced with Math.cos
Mutant 734 in complex.js: Math.sin replaced with Math.atan
Mutant 735 in complex.js: a replaced with -a
Mutant 736 in complex.js: a replaced with a + 1
Mutant 737 in complex.js: a replaced with a * 2
Mutant 738 in complex.js: sinh replaced with cosh
Mutant 739 in complex.js: sinh replaced with 1 - sinh
Mutant 740 in complex.js: sinh replaced with Math.sinh
Mutant 741 in complex.js: b replaced with -b
Mutant 742 in complex.js: b replaced with 2 * b
Mutant 743 in complex.js: b replaced with b + 1
Mutant 744 in complex.js: cosh replaced with sinh
Mutant 745 in complex.js: cosh replaced with tanh
Mutant 746 in complex.js: 2 * b replaced with 2 * a
Mutant 747 in complex.js: 2 * b replaced with 2 * (b - a)
Mutant 748 in complex.js: 2 * b replaced with 2 * (b + a)
Mutant 749 in complex.js: Math.cos replaced with Math.sin
Mutant 750 in complex.js: Math.cos replaced with Math.tan
Mutant 751 in complex.js: Math.cos replaced with Math.asin
Mutant 752 in complex.js: 2 * a replaced with 2 * b
Mutant 753 in complex.js: 2 * a replaced with a + b
Mutant 754 in complex.js: 2 * a replaced with b - a
Mutant 755 in complex.js: Math.sin replaced with Math.cos
Mutant 756 in complex.js: Math.sin replaced with Math.tan
Mutant 757 in complex.js: Math.sin replaced with Math.atan
Mutant 758 in complex.js: a replaced with a + 1
Mutant 759 in complex.js: a replaced with b - 1
Mutant 760 in complex.js: a replaced with a * b
Mutant 761 in complex.js: cosh replaced with sinh
Mutant 762 in complex.js: cosh replaced with tanh
Mutant 763 in complex.js: cosh replaced with coth
Mutant 764 in complex.js: b replaced with a
Mutant 765 in complex.js: b replaced with b + 1
Mutant 766 in complex.js: b replaced with b * 2
Mutant 767 in complex.js: Math.cos replaced with Math.sin
Mutant 768 in complex.js: Math.cos replaced with Math.tan
Mutant 769 in complex.js: Math.cos replaced with Math.acos
Mutant 770 in complex.js: a replaced with b
Mutant 771 in complex.js: a replaced with a + 1
Mutant 772 in complex.js: a replaced with a * 2
Mutant 773 in complex.js: sinh replaced with cos
Mutant 774 in complex.js: sinh replaced with tan
Mutant 775 in complex.js: sinh replaced with acos
Mutant 776 in complex.js: b replaced with b + 1
Mutant 777 in complex.js: b replaced with b * 2
Mutant 778 in complex.js: b replaced with b - 1
Mutant 779 in complex.js: a === 0 replaced with a !== 0
Mutant 780 in complex.js: a === 0 replaced with b === 0
Mutant 781 in complex.js: a === 0 replaced with Math.abs(a) < 1e-6
Mutant 782 in complex.js: b === 1 replaced with b !== 1
Mutant 783 in complex.js: b === 1 replaced with b === 0
Mutant 784 in complex.js: b === 1 replaced with b > 1
Mutant 785 in complex.js: b === -1 replaced with b === 0
Mutant 786 in complex.js: b === -1 replaced with b !== -1
Mutant 787 in complex.js: b === -1 replaced with b < -1
Mutant 788 in complex.js: b === 0 replaced with b !== 0
Mutant 789 in complex.js: b === 0 replaced with a === 0
Mutant 790 in complex.js: b === 0 replaced with a + b === 0
Mutant 791 in complex.js: Math.atan2(1, a) replaced with Math.atan2(0)
Mutant 792 in complex.js: Math.atan2(1, a) replaced with Math.atan2(-1)
Mutant 793 in complex.js: Math.atan2(1, a) replaced with Math.atan2(a + 1)
Mutant 794 in complex.js: 1 replaced with 0
Mutant 795 in complex.js: 1 replaced with 2
Mutant 796 in complex.js: 1 replaced with null
Mutant 797 in complex.js: a replaced with b
Mutant 798 in complex.js: a replaced with a + 1
Mutant 799 in complex.js: a replaced with a - 1
Mutant 800 in complex.js: a === 0 && b === 0 replaced with a === 0 && b === 1
Mutant 801 in complex.js: a === 0 && b === 0 replaced with a === 0 && b === -1
Mutant 802 in complex.js: a === 0 && b === 0 replaced with a === 0 && b === 0.5
Mutant 803 in complex.js: a === 0 && b === 0 replaced with a != 0 && b != 0
Mutant 804 in complex.js: a === 0 && b === 0 replaced with a === 0 || b === 0
Mutant 805 in complex.js: a === 0 && b === 0 replaced with a === 0 && b === 1
Mutant 806 in complex.js: a replaced with a + 1
Mutant 807 in complex.js: a replaced with a * b
Mutant 808 in complex.js: a replaced with a - b
Mutant 809 in complex.js: Math.cos replaced with Math.sin
Mutant 810 in complex.js: Math.cos replaced with Math.tan
Mutant 811 in complex.js: Math.cos replaced with Math.sqrt
Mutant 812 in complex.js: b replaced with a
Mutant 813 in complex.js: b replaced with a + b
Mutant 814 in complex.js: b replaced with a * b
Mutant 815 in complex.js: cosh replaced with -sinh
Mutant 816 in complex.js: cosh replaced with cos
Mutant 817 in complex.js: cosh replaced with Math.sin
Mutant 818 in complex.js: a replaced with a + b
Mutant 819 in complex.js: a replaced with a - b
Mutant 820 in complex.js: a replaced with a * b
Mutant 821 in complex.js: Math.sin replaced with Math.cos
Mutant 822 in complex.js: Math.sin replaced with Math.tan
Mutant 823 in complex.js: b replaced with -b
Mutant 824 in complex.js: b replaced with b + 1
Mutant 825 in complex.js: b replaced with b * 2
Mutant 826 in complex.js: cosh replaced with sinh
Mutant 827 in complex.js: cosh replaced with tanh
Mutant 828 in complex.js: cosh replaced with -cosh
Mutant 829 in complex.js: a replaced with a * b
Mutant 830 in complex.js: a replaced with a + b
Mutant 831 in complex.js: a replaced with a - b
Mutant 832 in complex.js: Math.cos replaced with Math.sin
Mutant 833 in complex.js: Math.cos replaced with Math.tan
Mutant 834 in complex.js: Math.cos replaced with Math.acos
Mutant 835 in complex.js: b replaced with a
Mutant 836 in complex.js: b replaced with b + 1
Mutant 837 in complex.js: b replaced with Math.PI
Mutant 838 in complex.js: sinh replaced with cosh
Mutant 839 in complex.js: sinh replaced with tanh
Mutant 840 in complex.js: sinh replaced with coth
Mutant 841 in complex.js: a replaced with a + b
Mutant 842 in complex.js: a replaced with a - b
Mutant 843 in complex.js: a replaced with a * b
Mutant 844 in complex.js: Math.sin replaced with Math.cos
Mutant 845 in complex.js: Math.sin replaced with Math.tan
Mutant 846 in complex.js: Math.sin replaced with Math.asin
Mutant 847 in complex.js: b replaced with b + 1
Mutant 848 in complex.js: b replaced with b * 2
Mutant 849 in complex.js: b replaced with c
Mutant 850 in complex.js: cosh replaced with Math.sinh
Mutant 851 in complex.js: cosh replaced with Math.tanh
Mutant 852 in complex.js: cosh replaced with Math.coth
Mutant 853 in complex.js: a replaced with a + 1
Mutant 854 in complex.js: a replaced with a * 2
Mutant 855 in complex.js: a replaced with a / 2
Mutant 856 in complex.js: Math.cos replaced with Math.sin
Mutant 857 in complex.js: Math.cos replaced with Math.sqrt
Mutant 858 in complex.js: b replaced with b + 1
Mutant 859 in complex.js: b replaced with b * 2
Mutant 860 in complex.js: b replaced with b - 1
Mutant 861 in complex.js: sinh replaced with cosh
Mutant 862 in complex.js: sinh replaced with tanh
Mutant 863 in complex.js: sinh replaced with asinh
Mutant 864 in complex.js: a replaced with a + 1
Mutant 865 in complex.js: a replaced with a * 2
Mutant 866 in complex.js: a replaced with a / 2
Mutant 867 in complex.js: Math.sin replaced with Math.cos
Mutant 868 in complex.js: Math.sin replaced with Math.tan
Mutant 869 in complex.js: Math.sin replaced with Math.csc
Mutant 870 in complex.js: b replaced with -b
Mutant 871 in complex.js: b replaced with b + 1
Mutant 872 in complex.js: b replaced with b * 2
Mutant 873 in complex.js: cosh replaced with sinh
Mutant 874 in complex.js: cosh replaced with tanh
Mutant 875 in complex.js: cosh replaced with coth
Mutant 876 in complex.js: a replaced with a * 2
Mutant 877 in complex.js: a replaced with a + 1
Mutant 878 in complex.js: a replaced with a - 1
Mutant 879 in complex.js: Math.cos replaced with Math.sin
Mutant 880 in complex.js: Math.cos replaced with Math.tan
Mutant 881 in complex.js: Math.cos replaced with Math.acos
Mutant 882 in complex.js: b replaced with a
Mutant 883 in complex.js: b replaced with b + 1
Mutant 884 in complex.js: b replaced with a * b
Mutant 885 in complex.js: a replaced with -a
Mutant 886 in complex.js: a replaced with b
Mutant 887 in complex.js: a replaced with a + b
Mutant 888 in complex.js: Math.sin replaced with Math.cos
Mutant 889 in complex.js: Math.sin replaced with Math.tan
Mutant 890 in complex.js: Math.sin replaced with Math.acos
Mutant 891 in complex.js: b replaced with a
Mutant 892 in complex.js: b replaced with b * 2
Mutant 893 in complex.js: b replaced with a + b
Mutant 894 in complex.js: Math.cos replaced with Math.sin
Mutant 895 in complex.js: Math.cos replaced with Math.tan
Mutant 896 in complex.js: Math.cos replaced with Math.csc
Mutant 897 in complex.js: 2 * b replaced with 2 * a
Mutant 898 in complex.js: 2 * b replaced with 2 * (a + b)
Mutant 899 in complex.js: 2 * b replaced with 2 * (a - b)
Mutant 900 in complex.js: cosh replaced with sinh
Mutant 901 in complex.js: cosh replaced with tanh
Mutant 902 in complex.js: cosh replaced with coth
Mutant 903 in complex.js: 2 * a replaced with 2 * b
Mutant 904 in complex.js: 2 * a replaced with a + b
Mutant 905 in complex.js: 2 * a replaced with a - b
Mutant 906 in complex.js: sinh replaced with cosh
Mutant 907 in complex.js: sinh replaced with tanh
Mutant 908 in complex.js: sinh replaced with coth
Mutant 909 in complex.js: a replaced with -a
Mutant 910 in complex.js: a replaced with a + 1
Mutant 911 in complex.js: a replaced with a * 2
Mutant 912 in complex.js: Math.cos replaced with Math.sin
Mutant 913 in complex.js: Math.cos replaced with Math.tan
Mutant 914 in complex.js: Math.cos replaced with Math.acos
Mutant 915 in complex.js: b replaced with b + 1
Mutant 916 in complex.js: b replaced with b * 2
Mutant 917 in complex.js: b replaced with b / 2
Mutant 918 in complex.js: cosh replaced with sinh
Mutant 919 in complex.js: cosh replaced with tanh
Mutant 920 in complex.js: cosh replaced with acosh
Mutant 921 in complex.js: a replaced with b
Mutant 922 in complex.js: a replaced with -a
Mutant 923 in complex.js: a replaced with a + b
Mutant 924 in complex.js: Math.sin replaced with Math.cos
Mutant 925 in complex.js: Math.sin replaced with Math.tan
Mutant 926 in complex.js: Math.sin replaced with Math.abs
Mutant 927 in complex.js: b replaced with a
Mutant 928 in complex.js: b replaced with b + 1
Mutant 929 in complex.js: b replaced with b * 2
Mutant 930 in complex.js: Math.cos replaced with Math.sin
Mutant 931 in complex.js: Math.cos replaced with Math.tan
Mutant 932 in complex.js: Math.cos replaced with Math.csc
Mutant 933 in complex.js: 2 * b replaced with 2 * a
Mutant 934 in complex.js: 2 * b replaced with 2 * (a + b)
Mutant 935 in complex.js: 2 * b replaced with 2 * (a - b)
Mutant 936 in complex.js: cosh replaced with sinh
Mutant 937 in complex.js: cosh replaced with acosh
Mutant 938 in complex.js: cosh replaced with tanh
Mutant 939 in complex.js: 2 * a replaced with 2 * b
Mutant 940 in complex.js: 2 * a replaced with a + b
Mutant 941 in complex.js: 2 * a replaced with a - b
Mutant 942 in complex.js: cosh replaced with sinh
Mutant 943 in complex.js: cosh replaced with tanh
Mutant 944 in complex.js: cosh replaced with acosh
Mutant 945 in complex.js: a replaced with a + 1
Mutant 946 in complex.js: a replaced with a - 1
Mutant 947 in complex.js: a replaced with a * 2
Mutant 948 in complex.js: Math.cos replaced with Math.sin
Mutant 949 in complex.js: Math.cos replaced with Math.tan
Mutant 950 in complex.js: Math.cos replaced with Math.acos
Mutant 951 in complex.js: b replaced with -b
Mutant 952 in complex.js: b replaced with b + 1
Mutant 953 in complex.js: b replaced with b * 2
Mutant 954 in complex.js: sinh replaced with cosh
Mutant 955 in complex.js: sinh replaced with tanh
Mutant 956 in complex.js: sinh replaced with coth
Mutant 957 in complex.js: a replaced with a * 0
Mutant 958 in complex.js: a replaced with a + 1
Mutant 959 in complex.js: a replaced with a - 1
Mutant 960 in complex.js: Math.sin replaced with -Math.sin
Mutant 961 in complex.js: Math.sin replaced with Math.cos
Mutant 962 in complex.js: Math.sin replaced with Math.tan
Mutant 963 in complex.js: b replaced with -b
Mutant 964 in complex.js: b replaced with a - b
Mutant 965 in complex.js: b replaced with a + b
Mutant 966 in complex.js: this['acos'] replaced with this['acosh']
Mutant 967 in complex.js: this['acos'] replaced with this['asin']
Mutant 968 in complex.js: this['acos'] replaced with this['atan']
Mutant 969 in complex.js: res['im'] <= 0 replaced with res['im'] < 0
Mutant 970 in complex.js: res['im'] <= 0 replaced with res['im'] > 0
Mutant 971 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(x['im'], x['re'])
Mutant 972 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(x['re'] + x['im'])
Mutant 973 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(x['re'] * x['im'])
Mutant 974 in complex.js: x['re'] replaced with x['im']
Mutant 975 in complex.js: x['re'] replaced with x['re'] + x['im']
Mutant 976 in complex.js: x['re'] replaced with x['re'] * x['im']
Mutant 977 in complex.js: x['im'] replaced with x['re']
Mutant 978 in complex.js: x['im'] replaced with x['im'] + 1
Mutant 979 in complex.js: x['im'] replaced with x['im'] * 2
Mutant 980 in complex.js: Math.atan2(x['im'], temp) replaced with Math.atan2(x['re'], temp)
Mutant 981 in complex.js: Math.atan2(x['im'], temp) replaced with Math.atan2(x['re'] + x['im'], temp)
Mutant 982 in complex.js: Math.atan2 replaced with Math.atan
Mutant 983 in complex.js: Math.atan2 replaced with Math.sin
Mutant 984 in complex.js: Math.atan2 replaced with Math.cos
Mutant 985 in complex.js: x['im'] replaced with -x['im']
Mutant 986 in complex.js: x['im'] replaced with x['re']
Mutant 987 in complex.js: x['im'] replaced with x['im'] + 1
Mutant 988 in complex.js: temp replaced with -temp
Mutant 989 in complex.js: temp replaced with temp + 1
Mutant 990 in complex.js: temp replaced with temp * 2
Mutant 991 in complex.js: a === 0 && b === 0 replaced with a === 1 && b === 0
Mutant 992 in complex.js: a === 0 && b === 0 replaced with a + b === 0
Mutant 993 in complex.js: b === 0 replaced with b !== 0
Mutant 994 in complex.js: b === 0 replaced with a === 0
Mutant 995 in complex.js: b === 0 replaced with a + b === 0
Mutant 996 in complex.js: Math.log replaced with Math.sqrt
Mutant 997 in complex.js: Math.log replaced with Math.abs
Mutant 998 in complex.js: Math.log replaced with Math.exp
Mutant 999 in complex.js: a + Math.sqrt(a * a + 1) replaced with a - Math.sqrt(a * a + 1)
Mutant 1000 in complex.js: a + Math.sqrt(a * a + 1) replaced with a * Math.sqrt(a * a + 1)
Mutant 1001 in complex.js: a + Math.sqrt(a * a + 1) replaced with Math.sqrt(a * a + 1) / a
Mutant 1002 in complex.js: Math.sqrt replaced with Math.abs
Mutant 1003 in complex.js: Math.sqrt replaced with Math.random
Mutant 1004 in complex.js: Math.sqrt replaced with Math.PI
Mutant 1005 in complex.js: a * a + 1 replaced with a * a - 1
Mutant 1006 in complex.js: a * a + 1 replaced with a * b + 1
Mutant 1007 in complex.js: a * a + 1 replaced with a + 1 / b
Mutant 1008 in complex.js: this['isZero']() replaced with this['isInfinite']()
Mutant 1009 in complex.js: this['isZero']() replaced with this['re'] === 0
Mutant 1010 in complex.js: this['isZero']() replaced with this['im'] === 0
Mutant 1011 in complex.js: this['isZero'] replaced with this['isNegative']
Mutant 1012 in complex.js: this['isZero'] replaced with !this['isZero']
Mutant 1013 in complex.js: this['isZero']() replaced with this['isInfinite']()
Mutant 1014 in complex.js: this['isZero']() replaced with this['re'] === Infinity
Mutant 1015 in complex.js: this['isZero']() replaced with this['im'] === Infinity
Mutant 1016 in complex.js: this['isZero'] replaced with this['re'] === 0 && this['im'] === 0
Mutant 1017 in complex.js: this['isZero'] replaced with this['re'] === Infinity && this['im'] === Infinity
Mutant 1018 in complex.js: this['isInfinite']() replaced with !this['isInfinite']()
Mutant 1019 in complex.js: this['isInfinite']() replaced with this['isFinite']()
Mutant 1020 in complex.js: this['isInfinite']() replaced with this['isNaN']()
Mutant 1021 in complex.js: this['isInfinite'] replaced with this['im'] === 0
Mutant 1022 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(11, places || 1)
Mutant 1023 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places || 1)
Mutant 1024 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places + 1 || 0)
Mutant 1025 in complex.js: Math.pow replaced with Math.sqrt
Mutant 1026 in complex.js: Math.pow replaced with Math.abs
Mutant 1027 in complex.js: Math.pow replaced with Math.random
Mutant 1028 in complex.js: 10 replaced with 0
Mutant 1029 in complex.js: 10 replaced with 2
Mutant 1030 in complex.js: 10 replaced with -1
Mutant 1031 in complex.js: places || 0 replaced with places && 0
Mutant 1032 in complex.js: places || 0 replaced with places ^ 0
Mutant 1033 in complex.js: places || 0 replaced with places ? 0 : 1
Mutant 1034 in complex.js: Math.ceil replaced with Math.floor
Mutant 1035 in complex.js: Math.ceil replaced with Math.round
Mutant 1036 in complex.js: Math.ceil replaced with Math.abs
Mutant 1037 in complex.js: this['re'] * places replaced with this['im'] * places
Mutant 1038 in complex.js: this['re'] * places replaced with this['re'] + places
Mutant 1039 in complex.js: this['re'] * places replaced with this['im'] + places
Mutant 1040 in complex.js: Math.ceil replaced with Math.floor
Mutant 1041 in complex.js: Math.ceil replaced with Math.abs
Mutant 1042 in complex.js: Math.ceil replaced with Math.sqrt
Mutant 1043 in complex.js: this['im'] * places replaced with this['re'] * places
Mutant 1044 in complex.js: this['im'] * places replaced with b * places + 1
Mutant 1045 in complex.js: this['im'] * places replaced with Math.random() * places
Mutant 1046 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places || 1)
Mutant 1047 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places || -1)
Mutant 1048 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places || Infinity)
Mutant 1049 in complex.js: Math.pow replaced with 10
Mutant 1050 in complex.js: Math.pow replaced with 9
Mutant 1051 in complex.js: 10 replaced with 0
Mutant 1052 in complex.js: 10 replaced with -1
Mutant 1053 in complex.js: 10 replaced with Infinity
Mutant 1054 in complex.js: places || 0 replaced with places && 0
Mutant 1055 in complex.js: places || 0 replaced with places ? 0 : 1
Mutant 1056 in complex.js: places || 0 replaced with places || 1
Mutant 1057 in complex.js: Math.floor replaced with Math.ceil
Mutant 1058 in complex.js: Math.floor replaced with Math.round
Mutant 1059 in complex.js: Math.floor replaced with Math.trunc
Mutant 1060 in complex.js: this['re'] * places replaced with this['im'] * places
Mutant 1061 in complex.js: this['re'] * places replaced with this['re'] / places
Mutant 1062 in complex.js: this['re'] * places replaced with this['im'] / places
Mutant 1063 in complex.js: Math.floor replaced with Math.round
Mutant 1064 in complex.js: Math.floor replaced with Math.ceil
Mutant 1065 in complex.js: Math.floor replaced with Math.abs
Mutant 1066 in complex.js: this['im'] * places replaced with this['im'] * places + 1
Mutant 1067 in complex.js: this['im'] * places replaced with this['im'] * places * 2
Mutant 1068 in complex.js: this['im'] * places replaced with this['im'] * places - 1
Mutant 1069 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places || 1)
Mutant 1070 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places || 0.1)
Mutant 1071 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places || NaN)
Mutant 1072 in complex.js: Math.pow replaced with Math.sqrt
Mutant 1073 in complex.js: Math.pow replaced with this.re
Mutant 1074 in complex.js: Math.pow replaced with Complex.EPSILON
Mutant 1075 in complex.js: 10 replaced with 11
Mutant 1076 in complex.js: 10 replaced with 9
Mutant 1077 in complex.js: 10 replaced with 2
Mutant 1078 in complex.js: places || 0 replaced with places || 1
Mutant 1079 in complex.js: places || 0 replaced with places || -1
Mutant 1080 in complex.js: places || 0 replaced with places || Infinity
Mutant 1081 in complex.js: Math.round replaced with Math.floor
Mutant 1082 in complex.js: Math.round replaced with Math.ceil
Mutant 1083 in complex.js: Math.round replaced with Math.trunc
Mutant 1084 in complex.js: this['re'] * places replaced with this['re'] * places + 1
Mutant 1085 in complex.js: this['re'] * places replaced with this['im'] * places
Mutant 1086 in complex.js: this['re'] * places replaced with this['re'] * places * 2
Mutant 1087 in complex.js: Math.round replaced with Math.floor
Mutant 1088 in complex.js: Math.round replaced with Math.ceil
Mutant 1089 in complex.js: Math.round replaced with Math.trunc
Mutant 1090 in complex.js: this['im'] * places replaced with this['re'] * places
Mutant 1091 in complex.js: this['im'] * places replaced with this['im'] / places
Mutant 1092 in complex.js: this['im'] * places replaced with this['re'] + this['im'] * places
Mutant 1093 in complex.js: Math.abs replaced with Math.floor
Mutant 1094 in complex.js: Math.abs replaced with Math.sqrt
Mutant 1095 in complex.js: Math.abs replaced with Math.random
Mutant 1096 in complex.js: z['re'] - this['re'] replaced with z['re'] - this['im']
Mutant 1097 in complex.js: z['re'] - this['re'] replaced with z['re'] * this['im']
Mutant 1098 in complex.js: z['re'] - this['re'] replaced with z['re'] / this['im']
Mutant 1099 in complex.js: Math.abs replaced with Math.sin
Mutant 1100 in complex.js: Math.abs replaced with Math.max
Mutant 1101 in complex.js: Math.abs replaced with Math.random
Mutant 1102 in complex.js: z['im'] - this['im'] replaced with z['im'] + this['im']
Mutant 1103 in complex.js: z['im'] - this['im'] replaced with z['im'] * this['im']
Mutant 1104 in complex.js: z['im'] - this['im'] replaced with z['im'] / this['im']
Mutant 1105 in complex.js: this['isNaN']() replaced with !this['isNaN']()
Mutant 1106 in complex.js: this['isNaN']() replaced with this['isFinite']()
Mutant 1107 in complex.js: this['isNaN']() replaced with this['im'] !== 0
Mutant 1108 in complex.js: this['isNaN'] replaced with this['isInfinite']
Mutant 1109 in complex.js: this['isNaN'] replaced with this['isZero']
Mutant 1110 in complex.js: this['isInfinite']() replaced with this['isNaN']()
Mutant 1111 in complex.js: this['isInfinite']() replaced with this['im'] !== 0
Mutant 1112 in complex.js: this['isInfinite']() replaced with this['re'] === 0
Mutant 1113 in complex.js: this['isInfinite'] replaced with this['re'] === Infinity
Mutant 1114 in complex.js: Math.abs(a) < Complex['EPSILON'] replaced with Math.abs(b) < Complex['EPSILON']
Mutant 1115 in complex.js: Math.abs(a) < Complex['EPSILON'] replaced with Math.abs(a + b) < Complex['EPSILON']
Mutant 1116 in complex.js: Math.abs(a) < Complex['EPSILON'] replaced with Math.abs(a - b) < Complex['EPSILON']
Mutant 1117 in complex.js: Math.abs replaced with Math.sqrt
Mutant 1118 in complex.js: Math.abs replaced with -Math.abs
Mutant 1119 in complex.js: a replaced with a + 1
Mutant 1120 in complex.js: a replaced with a * 2
Mutant 1121 in complex.js: a replaced with a - 1
Mutant 1122 in complex.js: Math.abs(b) < Complex['EPSILON'] replaced with b < Complex['EPSILON']
Mutant 1123 in complex.js: Math.abs(b) < Complex['EPSILON'] replaced with Math.abs(b) < Complex['EPSILON'] * Math.abs(a)
Mutant 1124 in complex.js: Math.abs(b) < Complex['EPSILON'] replaced with Math.abs(b) < Complex['EPSILON'] * Math.abs(a) && a !== 0
Mutant 1125 in complex.js: Math.abs replaced with Math.sqrt
Mutant 1126 in complex.js: Math.abs replaced with b * b
Mutant 1127 in complex.js: b replaced with b + 1
Mutant 1128 in complex.js: b replaced with c
Mutant 1129 in complex.js: b replaced with this.b
Mutant 1130 in complex.js: b === 0 replaced with b != 0
Mutant 1131 in complex.js: b === 0 replaced with a === 0
Mutant 1132 in complex.js: b === 0 replaced with a !== b
Mutant 1133 in complex.js: a !== 0 replaced with a != 0
Mutant 1134 in complex.js: a !== 0 replaced with a + 1
Mutant 1135 in complex.js: a !== 0 replaced with a - 1
Mutant 1136 in complex.js: b < 0 replaced with b > 0
Mutant 1137 in complex.js: b < 0 replaced with b != 0
Mutant 1138 in complex.js: b < 0 replaced with true
Mutant 1139 in complex.js: b < 0 replaced with b > 0
Mutant 1140 in complex.js: b < 0 replaced with b !== 0
Mutant 1141 in complex.js: b < 0 replaced with this['im'] < 0
Mutant 1142 in complex.js: 1 !== b replaced with 1 == b
Mutant 1143 in complex.js: 1 !== b replaced with b != 1
Mutant 1144 in complex.js: 1 !== b replaced with b === 1
Mutant 1145 in complex.js: this['im'] === 0 replaced with this['im'] !== 0
Mutant 1146 in complex.js: this['im'] === 0 replaced with this['re'] === 0
Mutant 1147 in complex.js: this['im'] === 0 replaced with this['im'] + this['re'] === 0
Mutant 1148 in complex.js: isNaN replaced with isFinite
Mutant 1149 in complex.js: isNaN replaced with isInfinity
Mutant 1150 in complex.js: this['re'] replaced with this['im']
Mutant 1151 in complex.js: this['re'] replaced with this['re'] + this['im']
Mutant 1152 in complex.js: this['re'] replaced with -this['re']
Mutant 1153 in complex.js: isNaN replaced with !isNaN
Mutant 1154 in complex.js: isNaN replaced with isFinite
Mutant 1155 in complex.js: isNaN replaced with isInfinite
Mutant 1156 in complex.js: this['im'] replaced with this['re']
Mutant 1157 in complex.js: this['im'] replaced with -this['im']
Mutant 1158 in complex.js: this['im'] replaced with this['im'] + 1
Mutant 1159 in complex.js: isFinite replaced with isNaN
Mutant 1160 in complex.js: isFinite replaced with !isFinite
Mutant 1161 in complex.js: isFinite replaced with isInfinite
Mutant 1162 in complex.js: this['re'] replaced with this['im']
Mutant 1163 in complex.js: this['re'] replaced with this['re'] * 2
Mutant 1164 in complex.js: this['re'] replaced with this['im'] * 2
Mutant 1165 in complex.js: isFinite replaced with isNaN
Mutant 1166 in complex.js: isFinite replaced with !isFinite
Mutant 1167 in complex.js: this['im'] replaced with this['re']
Mutant 1168 in complex.js: this['im'] replaced with this['im'] + 1
Mutant 1169 in complex.js: this['im'] replaced with this['im'] * 2
Mutant 1170 in complex.js: this['isNaN'] replaced with this['isInfinite']
Mutant 1171 in complex.js: this['isNaN'] replaced with this['im']
Mutant 1172 in complex.js: this['isNaN'] replaced with Complex['EPSILON']
Mutant 1173 in complex.js: this['isFinite'] replaced with this['isInfinite']
Mutant 1174 in complex.js: this['isFinite'] replaced with this['im'] === 0
Mutant 1175 in complex.js: this['isFinite'] replaced with this['re'] === 0
Mutant 1176 in complex.js: typeof define === 'function' && define['amd'] replaced with typeof define === 'function' && define['amd'] === true
Mutant 1177 in complex.js: typeof define === 'function' && define['amd'] replaced with typeof define !== 'function' || define['amd'] === false
Mutant 1178 in complex.js: typeof define === 'function' && define['amd'] replaced with define['amd'] !== 'function' || define['amd'] === false
Mutant 1179 in complex.js: typeof exports === 'object' replaced with typeof module === 'object'
Mutant 1180 in complex.js: typeof exports === 'object' replaced with typeof exports === 'function'
Mutant 1181 in complex.js: typeof exports === 'object' replaced with typeof define === 'undefined'
Mutant 1182 in complex.js: Object.defineProperty(Complex, "__esModule", {
  'value': true
}) replaced with Object.defineProperty(Complex, "__esModule", {
  'value': false
})
Mutant 1183 in complex.js: Object.defineProperty(Complex, "__esModule", {
  'value': true
}) replaced with Object.defineProperty(Complex, "__esModule", {
  'value': null
})
Mutant 1184 in complex.js: Object.defineProperty(Complex, "__esModule", {
  'value': true
}) replaced with Object.defineProperty(Complex, "__esModule", {
  'value': undefined
})
Mutant 1185 in complex.js: "__esModule" replaced with "__proto__"
Mutant 1186 in complex.js: "__esModule" replaced with "prototype"
Mutant 1187 in complex.js: "__esModule" replaced with "__module__"
Mutant 1188 in complex.js: {
  'value': true
} replaced with {
  'value': false
}
Mutant 1189 in complex.js: {
  'value': true
} replaced with {
  'value': null
}
Mutant 1190 in complex.js: {
  'value': true
} replaced with {
  'value': undefined
}
[32m11:05:24 (2710) INFO Instrumenter[39m Instrumented 1 source file(s) with 1191 mutant(s)
[32m11:05:24 (2710) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m11:05:25 (2710) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m11:05:25 (2710) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m11:05:26 (2710) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 496 ms, overhead 1 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~9m) 20/1191 tested (20 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~9m) 40/1191 tested (31 survived, 0 timed out)
Mutation testing 5% (elapsed: <1m, remaining: ~9m) 60/1191 tested (32 survived, 0 timed out)
Mutation testing 6% (elapsed: <1m, remaining: ~9m) 80/1191 tested (41 survived, 0 timed out)
Mutation testing 8% (elapsed: <1m, remaining: ~9m) 100/1191 tested (43 survived, 0 timed out)
Mutation testing 10% (elapsed: ~1m, remaining: ~8m) 120/1191 tested (44 survived, 0 timed out)
Mutation testing 11% (elapsed: ~1m, remaining: ~8m) 141/1191 tested (48 survived, 0 timed out)
Mutation testing 13% (elapsed: ~1m, remaining: ~8m) 161/1191 tested (52 survived, 0 timed out)
Mutation testing 15% (elapsed: ~1m, remaining: ~8m) 181/1191 tested (53 survived, 0 timed out)
Mutation testing 16% (elapsed: ~1m, remaining: ~8m) 201/1191 tested (58 survived, 0 timed out)
Mutation testing 18% (elapsed: ~1m, remaining: ~8m) 221/1191 tested (65 survived, 0 timed out)
Mutation testing 20% (elapsed: ~2m, remaining: ~7m) 241/1191 tested (72 survived, 0 timed out)
Mutation testing 21% (elapsed: ~2m, remaining: ~7m) 262/1191 tested (85 survived, 0 timed out)
Mutation testing 23% (elapsed: ~2m, remaining: ~7m) 282/1191 tested (89 survived, 0 timed out)
Mutation testing 25% (elapsed: ~2m, remaining: ~7m) 302/1191 tested (95 survived, 0 timed out)
Mutation testing 27% (elapsed: ~2m, remaining: ~7m) 323/1191 tested (104 survived, 0 timed out)
Mutation testing 28% (elapsed: ~2m, remaining: ~7m) 343/1191 tested (110 survived, 0 timed out)
Mutation testing 30% (elapsed: ~3m, remaining: ~6m) 363/1191 tested (111 survived, 0 timed out)
Mutation testing 32% (elapsed: ~3m, remaining: ~6m) 383/1191 tested (114 survived, 0 timed out)
Mutation testing 33% (elapsed: ~3m, remaining: ~6m) 404/1191 tested (123 survived, 0 timed out)
Mutation testing 35% (elapsed: ~3m, remaining: ~6m) 424/1191 tested (130 survived, 0 timed out)
Mutation testing 37% (elapsed: ~3m, remaining: ~6m) 444/1191 tested (134 survived, 0 timed out)
Mutation testing 38% (elapsed: ~3m, remaining: ~6m) 464/1191 tested (134 survived, 0 timed out)
Mutation testing 40% (elapsed: ~4m, remaining: ~5m) 484/1191 tested (134 survived, 0 timed out)
Mutation testing 42% (elapsed: ~4m, remaining: ~5m) 504/1191 tested (135 survived, 0 timed out)
Mutation testing 44% (elapsed: ~4m, remaining: ~5m) 525/1191 tested (136 survived, 0 timed out)
Mutation testing 45% (elapsed: ~4m, remaining: ~5m) 545/1191 tested (140 survived, 0 timed out)
Mutation testing 47% (elapsed: ~4m, remaining: ~5m) 565/1191 tested (140 survived, 0 timed out)
Mutation testing 49% (elapsed: ~4m, remaining: ~5m) 585/1191 tested (143 survived, 0 timed out)
Mutation testing 50% (elapsed: ~5m, remaining: ~4m) 605/1191 tested (144 survived, 0 timed out)
Mutation testing 52% (elapsed: ~5m, remaining: ~4m) 625/1191 tested (144 survived, 0 timed out)
Mutation testing 54% (elapsed: ~5m, remaining: ~4m) 645/1191 tested (145 survived, 0 timed out)
Mutation testing 55% (elapsed: ~5m, remaining: ~4m) 665/1191 tested (146 survived, 0 timed out)
Mutation testing 57% (elapsed: ~5m, remaining: ~4m) 686/1191 tested (148 survived, 0 timed out)
Mutation testing 59% (elapsed: ~5m, remaining: ~4m) 706/1191 tested (149 survived, 0 timed out)
Mutation testing 60% (elapsed: ~6m, remaining: ~3m) 726/1191 tested (166 survived, 0 timed out)
Mutation testing 62% (elapsed: ~6m, remaining: ~3m) 747/1191 tested (187 survived, 0 timed out)
Mutation testing 64% (elapsed: ~6m, remaining: ~3m) 767/1191 tested (207 survived, 0 timed out)
Mutation testing 66% (elapsed: ~6m, remaining: ~3m) 788/1191 tested (227 survived, 0 timed out)
Mutation testing 67% (elapsed: ~6m, remaining: ~3m) 808/1191 tested (245 survived, 0 timed out)
Mutation testing 69% (elapsed: ~6m, remaining: ~2m) 828/1191 tested (246 survived, 0 timed out)
Mutation testing 71% (elapsed: ~7m, remaining: ~2m) 849/1191 tested (246 survived, 0 timed out)
Mutation testing 72% (elapsed: ~7m, remaining: ~2m) 869/1191 tested (246 survived, 0 timed out)
Mutation testing 74% (elapsed: ~7m, remaining: ~2m) 889/1191 tested (246 survived, 0 timed out)
Mutation testing 76% (elapsed: ~7m, remaining: ~2m) 910/1191 tested (262 survived, 0 timed out)
Mutation testing 78% (elapsed: ~7m, remaining: ~2m) 930/1191 tested (282 survived, 0 timed out)
Mutation testing 79% (elapsed: ~7m, remaining: ~1m) 951/1191 tested (303 survived, 0 timed out)
Mutation testing 81% (elapsed: ~8m, remaining: ~1m) 971/1191 tested (323 survived, 0 timed out)
Mutation testing 83% (elapsed: ~8m, remaining: ~1m) 992/1191 tested (344 survived, 0 timed out)
Mutation testing 84% (elapsed: ~8m, remaining: ~1m) 1012/1191 tested (364 survived, 0 timed out)
Mutation testing 86% (elapsed: ~8m, remaining: ~1m) 1033/1191 tested (376 survived, 0 timed out)
Mutation testing 88% (elapsed: ~8m, remaining: ~1m) 1053/1191 tested (396 survived, 0 timed out)
Mutation testing 90% (elapsed: ~8m, remaining: <1m) 1074/1191 tested (415 survived, 0 timed out)
Mutation testing 91% (elapsed: ~9m, remaining: <1m) 1094/1191 tested (426 survived, 0 timed out)
Mutation testing 93% (elapsed: ~9m, remaining: <1m) 1114/1191 tested (427 survived, 0 timed out)
Mutation testing 95% (elapsed: ~9m, remaining: <1m) 1134/1191 tested (430 survived, 0 timed out)
Mutation testing 96% (elapsed: ~9m, remaining: <1m) 1154/1191 tested (435 survived, 0 timed out)
Mutation testing 98% (elapsed: ~9m, remaining: <1m) 1175/1191 tested (441 survived, 0 timed out)

All tests
  ✓ All tests (killed 739)

[Survived] PrecomputedMutator
complex.js:41:21
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x + 1) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:21
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x - 1) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:21
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x * 2) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:42
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (1(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:42
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (-1(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:51
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x * x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:51
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x / x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:51
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x + x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:56
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.sin(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:56
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.cos(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:56
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.tan(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:65
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(2 * x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:65
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(x / 2)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:12
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.sin(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:12
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.cos(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:12
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.tan(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:21
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x + 1) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:21
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x * 2) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:21
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x / 2) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:38
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.sin(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:38
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.tan(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:38
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.acos(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:47
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x * Math.random()) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:47
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x + 1) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:47
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x - 1) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:52
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.sinh(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:52
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.tanh(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:52
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.asinh(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:61
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-1)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:61
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(1 + x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:61
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(x * x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:96:9
-       if (a < 3000 && b < 3000) {
+       if (a < 3000 || b < 3000) {

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a > b) {

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a == b) {

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a + b) {

[Survived] PrecomputedMutator
complex.js:106:16
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.exp(1 + b * b);

[Survived] PrecomputedMutator
complex.js:106:16
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.log(1 + b * b);

[Survived] PrecomputedMutator
complex.js:106:16
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sin(1 + b * b);

[Survived] PrecomputedMutator
complex.js:106:26
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sqrt(1 - b * b);

[Survived] PrecomputedMutator
complex.js:106:26
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sqrt(b * b - 1);

[Survived] PrecomputedMutator
complex.js:106:26
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sqrt(b * b + 2);

[Survived] PrecomputedMutator
complex.js:123:23
-       var _b = Math.abs(b);
+       var _b = Math.abs(a + b);

[Survived] PrecomputedMutator
complex.js:126:23
-         return Math.log(_b);
+         return Math.log(_a + _b);

[Survived] PrecomputedMutator
complex.js:172:27
-       return 0.5 * Math.log(a * a + b * b) + Math.LN2;
+       return 0.5 * Math.log(a + b * b) + Math.LN2;

[Survived] PrecomputedMutator
complex.js:190:15
-             if ('im' in a && 're' in a) {
+             if (a.hasOwnProperty('im') && a.hasOwnProperty('re')) {

[Survived] PrecomputedMutator
complex.js:190:15
-             if ('im' in a && 're' in a) {
+             if (Object.prototype.hasOwnProperty.call(a, 'im') && Object.prototype.hasOwnProperty.call(a, 're')) {

[Survived] PrecomputedMutator
complex.js:194:34
-               if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {
+               if (!Number.isFinite(a['abs'] + 1) && Number.isFinite(a['arg'])) {

[Survived] PrecomputedMutator
complex.js:194:34
-               if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {
+               if (!Number.isFinite(a['abs'] * 2) && Number.isFinite(a['arg'])) {

[Survived] PrecomputedMutator
complex.js:199:22
-             } else if ('r' in a && 'phi' in a) {
+             } else if ('r' in a || 'phi' in a) {

[Survived] PrecomputedMutator
complex.js:200:45
-               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
+               if (!Number.isFinite(a['r']) && Number.isSafeInteger(a['phi'])) {

[Survived] PrecomputedMutator
complex.js:200:61
-               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
+               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'] + 1)) {

[Survived] PrecomputedMutator
complex.js:200:61
-               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
+               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'] * 2)) {

[Survived] PrecomputedMutator
complex.js:205:22
-             } else if (a.length === 2) { // Quick array check
+             } else if (a.length % 2 === 0) { // Quick array check

[Survived] PrecomputedMutator
complex.js:226:27
-             for (var i = 0; i < tokens.length; i++) {
+             for (var i = 0; i != tokens.length; i++) {

[Survived] PrecomputedMutator
complex.js:226:46
-             for (var i = 0; i < tokens.length; i++) {
+             for (var i = 0; i < tokens.length; i = i + 1) {

[Survived] PrecomputedMutator
complex.js:226:46
-             for (var i = 0; i < tokens.length; i++) {
+             for (var i = 0; i < tokens.length; i += 1) {

[Survived] PrecomputedMutator
complex.js:226:46
-             for (var i = 0; i < tokens.length; i++) {
+             for (var i = 0; i < tokens.length; i++ + 1) {

[Survived] PrecomputedMutator
complex.js:236:24
-               } else if (c === 'i' || c === 'I') {
+               } else if (c == 'i' || c == 'I') {

[Survived] PrecomputedMutator
complex.js:236:24
-               } else if (c === 'i' || c === 'I') {
+               } else if (c === 'i' || c === 'I' || c === 'j' || c === 'J') {

[Survived] PrecomputedMutator
complex.js:238:19
-                 if (plus + minus === 0) {
+                 if (plus + minus <= 0) {

[Survived] PrecomputedMutator
complex.js:238:19
-                 if (plus + minus === 0) {
+                 if (plus + minus < 0) {

[Survived] PrecomputedMutator
complex.js:242:51
-                 if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
+                 if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 2])) {

[Survived] PrecomputedMutator
complex.js:242:51
-                 if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
+                 if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1] * 2)) {

[Survived] PrecomputedMutator
complex.js:243:39
-                   z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
+                   z['im'] += parseFloat((minus % 2 ? '-' : '') + (tokens[i + 1] || '0'));

[Survived] PrecomputedMutator
complex.js:243:39
-                   z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
+                   z['im'] += parseFloat((minus % 2 ? '-' : '') + ('0' + tokens[i + 1]));

[Survived] PrecomputedMutator
complex.js:252:19
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (plus + minus === 0 && !isNaN(c)) {

[Survived] PrecomputedMutator
complex.js:252:19
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (plus + minus === 1 && isNaN(c)) {

[Survived] PrecomputedMutator
complex.js:252:41
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (plus + minus === 0 || Number.isNaN(c)) {

[Survived] PrecomputedMutator
complex.js:252:47
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (plus + minus === 0 || isNaN(c + 1)) {

[Survived] PrecomputedMutator
complex.js:252:47
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (plus + minus === 0 || isNaN(c * 0)) {

[Survived] PrecomputedMutator
complex.js:252:47
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (plus + minus === 0 || isNaN(c - 1)) {

[Survived] PrecomputedMutator
complex.js:260:28
-                   z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
+                   z['re'] += Number((minus % 2 ? '-' : '') + c);

[Survived] PrecomputedMutator
complex.js:267:15
-             if (plus + minus > 0) {
+             if (plus > 0) {

[Survived] PrecomputedMutator
complex.js:267:15
-             if (plus + minus > 0) {
+             if (minus > 0) {

[Survived] PrecomputedMutator
complex.js:267:15
-             if (plus + minus > 0) {
+             if (plus - minus > 0) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (!isNaN(z['re']) && !isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (z['re'] === Infinity || z['im'] === Infinity) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (z['re'] === 0 && z['im'] === 0) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isFinite(z['re']) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:15
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re'] + z['im']) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:15
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re'] * z['im']) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:27
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re']) || isFinite(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:27
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re']) || Number.isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:33
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re']) || isNaN(z['im'] + 1)) {

[Survived] PrecomputedMutator
complex.js:281:33
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re']) || isNaN(z['re'] * 2)) {

[Survived] PrecomputedMutator
complex.js:334:11
-         if (this['isInfinite']() && z['isInfinite']()) {
+         if (this['isInfinite']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:339:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() && z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:339:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() || z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:339:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() && z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:339:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isZero']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:358:11
-         if (this['isInfinite']() && z['isInfinite']()) {
+         if (this['isInfinite']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:363:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() && z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:363:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isNaN']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:363:35
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() || z['isNaN']()) {

[Survived] PrecomputedMutator
complex.js:363:35
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() || z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:382:55
-         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
+         if ((this['isInfinite']() && z['isZero']()) || (this['isNaN']() && z['isInfinite']())) {

[Survived] PrecomputedMutator
complex.js:382:75
-         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
+         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isNaN']())) {

[Survived] PrecomputedMutator
complex.js:382:75
-         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
+         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isFinite']())) {

[Survived] PrecomputedMutator
complex.js:387:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() && !z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:387:35
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() || z['isNaN']()) {

[Survived] PrecomputedMutator
complex.js:387:35
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() || z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:392:11
-         if (z['im'] === 0 && this['im'] === 0) {
+         if (z['im'] === 0 && this['im'] === 0 && this['re'] === 0) {

[Survived] PrecomputedMutator
complex.js:411:11
-         if ((this['isZero']() && z['isZero']()) || (this['isInfinite']() && z['isInfinite']())) {
+         if (this['isZero'](z) && z['isZero'](z) || this['isInfinite'](z) && z['isInfinite'](z)) {

[Survived] PrecomputedMutator
complex.js:411:11
-         if ((this['isZero']() && z['isZero']()) || (this['isInfinite']() && z['isInfinite']())) {
+         if (this['isZero'](a) && z['isZero'](a) || this['isInfinite'](a) && z['isInfinite'](a)) {

[Survived] PrecomputedMutator
complex.js:416:11
-         if (this['isInfinite']() || z['isZero']()) {
+         if (this['isInfinite']() && z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:416:35
-         if (this['isInfinite']() || z['isZero']()) {
+         if (this['isInfinite']() || z['isNaN']()) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (this['isZero']() && z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (this['isZero']() || z['isNaN']()) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (z['isZero']() && this['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (this['isNaN']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:469:11
-         if (z['isZero']()) {
+         if (z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:476:13
-           if (b === 0 && a > 0) {
+           if (a > b) {

[Survived] PrecomputedMutator
complex.js:478:42
-             return new Complex(Math.pow(a, z['re']), 0);
+             return new Complex(Math.pow(a, z['abs']()), 0);

[Survived] PrecomputedMutator
complex.js:480:20
-           } else if (a === 0) { // If base is fully imaginary
+           } else if (a + 1 === 0) { // If base is fully imaginary

[Survived] PrecomputedMutator
complex.js:484:34
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['im']), 0);

[Survived] PrecomputedMutator
complex.js:484:34
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(a, z['im']), 0);

[Survived] PrecomputedMutator
complex.js:484:34
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.abs(b, z['re']), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['im']), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['re'] * z['im']), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['re'] + z['im']), 0);

[Survived] PrecomputedMutator
complex.js:486:37
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, z['im']));

[Survived] PrecomputedMutator
complex.js:486:37
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(a + b, z['re']));

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, z['im']));

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, z['re'] + 1));

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, z['im'] + 1));

[Survived] PrecomputedMutator
complex.js:488:35
-                 return new Complex(-Math.pow(b, z['re']), 0);
+                 return new Complex(-Math.sqrt(b, z['re']), 0);

[Survived] PrecomputedMutator
complex.js:488:35
-                 return new Complex(-Math.pow(b, z['re']), 0);
+                 return new Complex(-Math.abs(b, z['re']), 0);

[Survived] PrecomputedMutator
complex.js:488:47
-                 return new Complex(-Math.pow(b, z['re']), 0);
+                 return new Complex(-Math.pow(b, z['re'] + 1), 0);

[Survived] PrecomputedMutator
complex.js:490:38
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.abs(b, z['re']));

[Survived] PrecomputedMutator
complex.js:490:38
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.sqrt(b, z['re']));

[Survived] PrecomputedMutator
complex.js:490:47
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(a + 1, z['re']));

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['im']));

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['re'] + 1));

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['re'] - z['im']));

[Survived] PrecomputedMutator
complex.js:544:40
-             return new Complex(Math.sqrt(a), 0);
+             return new Complex(Math.sqrt(a - b), 0);

[Survived] PrecomputedMutator
complex.js:555:23
-           im = Math.abs(b) / Math.sqrt(2 * (r + a));
+           im = Math.abs(-b) / Math.sqrt(2 * (r + a));

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (this['im'] !== 0) {

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (this['im'] > 0) {

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (this['im'] < 0) {

[Survived] PrecomputedMutator
complex.js:574:24
-           tmp * Math.cos(this['im']),
+           tmp * Math.cos(-this['im']),

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (a > 0) {

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (b === 0 && a < 0) {

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (a === 0 && b < 0) {

[Survived] PrecomputedMutator
complex.js:628:14
-         return hypot(this['re'], this['im']);
+         return hypot(this['im'], this['re']);

[Survived] PrecomputedMutator
complex.js:656:18
-           Math.cos(a) * sinh(b));
+           Math.cos(-a) * sinh(b));

[Survived] PrecomputedMutator
complex.js:673:28
-           Math.cos(a) * cosh(b),
+           Math.cos(a) * cosh(-b),

[Survived] PrecomputedMutator
complex.js:691:29
-         var d = Math.cos(a) + cosh(b);
+         var d = Math.cos(a) + Math.cosh(b);

[Survived] PrecomputedMutator
complex.js:695:9
-           sinh(b) / d);
+           Math.sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:709:24
-         var d = Math.cos(a) - cosh(b);
+         var d = Math.cos(-a) - cosh(b);

[Survived] PrecomputedMutator
complex.js:727:21
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * sinh(2 * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:21
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * Math.sinh(2 * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * a) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(b * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(a + b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:41
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.sin(2 * a);

[Survived] PrecomputedMutator
complex.js:727:41
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.tan(2 * a);

[Survived] PrecomputedMutator
complex.js:727:41
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.PI(2 * a);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * b);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(a + b);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(a - b);

[Survived] PrecomputedMutator
complex.js:730:9
-           Math.cos(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:9
-           Math.cos(a) * cosh(b) / d,
+           Math.tan(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:9
-           Math.cos(a) * cosh(b) / d,
+           Math.acos(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:18
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a + 1) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:18
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:18
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a * b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:23
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cos(b) / d,

[Survived] PrecomputedMutator
complex.js:730:23
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * sin(b) / d,

[Survived] PrecomputedMutator
complex.js:730:23
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * tan(b) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(a) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(b + 1) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(b * 2) / d,

[Survived] PrecomputedMutator
complex.js:731:9
-           Math.sin(a) * sinh(b) / d);
+           Math.tan(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:9
-           Math.sin(a) * sinh(b) / d);
+           Math.cos(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:9
-           Math.sin(a) * sinh(b) / d);
+           Math.atan(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:18
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(-a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:18
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a + 1) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:18
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a * 2) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:23
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * cosh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:23
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * 1 - sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:23
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * Math.sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(-b) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(2 * b) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(b + 1) / d);

[Survived] PrecomputedMutator
complex.js:745:21
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * sinh(2 * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:21
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * tanh(2 * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:26
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * a) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:26
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * (b - a)) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:26
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * (b + a)) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:41
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.sin(2 * a);

[Survived] PrecomputedMutator
complex.js:745:41
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.tan(2 * a);

[Survived] PrecomputedMutator
complex.js:745:41
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.asin(2 * a);

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * b);

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(a + b);

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(b - a);

[Survived] PrecomputedMutator
complex.js:748:9
-           Math.sin(a) * cosh(b) / d,
+           Math.cos(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:9
-           Math.sin(a) * cosh(b) / d,
+           Math.tan(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:9
-           Math.sin(a) * cosh(b) / d,
+           Math.atan(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:18
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a + 1) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:18
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(b - 1) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:18
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a * b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:23
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * sinh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:23
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * tanh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:23
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * coth(b) / d,

[Survived] PrecomputedMutator
complex.js:748:28
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * cosh(a) / d,

[Survived] PrecomputedMutator
complex.js:748:28
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b + 1) / d,

[Survived] PrecomputedMutator
complex.js:748:28
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b * 2) / d,

[Survived] PrecomputedMutator
complex.js:749:10
-           -Math.cos(a) * sinh(b) / d);
+           -Math.sin(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:10
-           -Math.cos(a) * sinh(b) / d);
+           -Math.tan(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:10
-           -Math.cos(a) * sinh(b) / d);
+           -Math.acos(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:19
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(b) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:19
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a + 1) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:19
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a * 2) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:24
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * cos(b) / d);

[Survived] PrecomputedMutator
complex.js:749:24
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * tan(b) / d);

[Survived] PrecomputedMutator
complex.js:749:24
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * acos(b) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(b + 1) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(b * 2) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(b - 1) / d);

[Survived] PrecomputedMutator
complex.js:810:11
-         if (a === 0) {
+         if (b === 0) {

[Survived] PrecomputedMutator
complex.js:810:11
-         if (a === 0) {
+         if (Math.abs(a) < 1e-6) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (b !== 1) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (b === 0) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (b > 1) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b === 0) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b !== -1) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b < -1) {

[Survived] PrecomputedMutator
complex.js:842:11
-         if (b === 0) {
+         if (b !== 0) {

[Survived] PrecomputedMutator
complex.js:842:11
-         if (b === 0) {
+         if (a === 0) {

[Survived] PrecomputedMutator
complex.js:842:11
-         if (b === 0) {
+         if (a + b === 0) {

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(0), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(-1), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(a + 1), 0);

[Survived] PrecomputedMutator
complex.js:843:39
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(0, a), 0);

[Survived] PrecomputedMutator
complex.js:843:39
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(2, a), 0);

[Survived] PrecomputedMutator
complex.js:843:39
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(null, a), 0);

[Survived] PrecomputedMutator
complex.js:843:42
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, b), 0);

[Survived] PrecomputedMutator
complex.js:843:42
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, a + 1), 0);

[Survived] PrecomputedMutator
complex.js:843:42
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, a - 1), 0);

[Survived] PrecomputedMutator
complex.js:868:11
-         if (a === 0 && b === 0) {
+         if (a === 0 && b === 1) {

[Survived] PrecomputedMutator
complex.js:868:11
-         if (a === 0 && b === 0) {
+         if (a === 0 && b === -1) {

[Survived] PrecomputedMutator
complex.js:868:11
-         if (a === 0 && b === 0) {
+         if (a === 0 && b === 0.5) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (a != 0 && b != 0) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (a === 0 || b === 0) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (a === 0 && b === 1) {

[Survived] PrecomputedMutator
complex.js:921:28
-           sinh(a) * Math.cos(b),
+           sinh(a) * Math.cos(a * b),

[Survived] PrecomputedMutator
complex.js:989:15
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.sin(2 * b) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:15
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.tan(2 * b) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:15
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.csc(2 * b) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * a) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * (a + b)) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * (a - b)) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:33
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - sinh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:33
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - tanh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:33
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - coth(2 * a);

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(2 * b);

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(a + b);

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(a - b);

[Survived] PrecomputedMutator
complex.js:992:14
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * cosh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:14
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * tanh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:14
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * coth(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(-a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a + 1) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a * 2) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:24
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.sin(b) / d,

[Survived] PrecomputedMutator
complex.js:992:24
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.tan(b) / d,

[Survived] PrecomputedMutator
complex.js:992:24
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.acos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:33
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cos(b + 1) / d,

[Survived] PrecomputedMutator
complex.js:992:33
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cos(b * 2) / d,

[Survived] PrecomputedMutator
complex.js:992:33
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cos(b / 2) / d,

[Survived] PrecomputedMutator
complex.js:993:13
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * sinh(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:13
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * tanh(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:13
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * acosh(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(b) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(-a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a + b) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.cos(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.tan(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.abs(b) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(a) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(b + 1) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(b * 2) / d);

[Survived] PrecomputedMutator
complex.js:1007:15
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.sin(2 * b) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:15
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.tan(2 * b) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:15
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.csc(2 * b) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:24
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * a) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:24
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * (a + b)) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:24
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * (a - b)) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:33
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + sinh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:33
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + acosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:33
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + tanh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:38
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + cosh(2 * b);

[Survived] PrecomputedMutator
complex.js:1007:38
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + cosh(a + b);

[Survived] PrecomputedMutator
complex.js:1007:38
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + cosh(a - b);

[Survived] PrecomputedMutator
complex.js:1010:13
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * sinh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:13
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * tanh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:13
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * acosh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a + 1) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a - 1) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a * 2) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:23
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.sin(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:23
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.tan(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:23
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.acos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:32
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.cos(-b) / d,

[Survived] PrecomputedMutator
complex.js:1010:32
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.cos(b + 1) / d,

[Survived] PrecomputedMutator
complex.js:1010:32
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.cos(b * 2) / d,

[Survived] PrecomputedMutator
complex.js:1011:14
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * cosh(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:14
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * tanh(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:14
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * coth(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:19
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a * 0) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:19
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a + 1) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:19
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a - 1) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:24
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * -Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:24
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.cos(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:24
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.tan(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(-b) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(a - b) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(a + b) / d);

[Survived] PrecomputedMutator
complex.js:1046:17
-         var res = this['acos']();
+         var res = this['acosh']();

[Survived] PrecomputedMutator
complex.js:1046:17
-         var res = this['acos']();
+         var res = this['asin']();

[Survived] PrecomputedMutator
complex.js:1046:17
-         var res = this['acos']();
+         var res = this['atan']();

[Survived] PrecomputedMutator
complex.js:1047:11
-         if (res['im'] <= 0) {
+         if (res['im'] < 0) {

[Survived] PrecomputedMutator
complex.js:1047:11
-         if (res['im'] <= 0) {
+         if (res['im'] > 0) {

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['im'], x['re']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] + x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] * x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:26
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['im'], x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:26
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] + x['im'], x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:26
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] * x['im'], x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], x['re']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], x['im'] + 1) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], x['im'] * 2) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['re'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['re'] + x['im'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan(x['im'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.sin(x['im'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.cos(x['im'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:28
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(-x['im'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:28
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['re'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:28
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'] + 1, temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], -temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], temp + 1) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], temp * 2) / 2;

[Survived] PrecomputedMutator
complex.js:1105:11
-         if (a === 0 && b === 0) {
+         if (a === 1 && b === 0) {

[Survived] PrecomputedMutator
complex.js:1105:11
-         if (a === 0 && b === 0) {
+         if (a + b === 0) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (b !== 0) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (a === 0) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (a + b === 0) {

[Survived] PrecomputedMutator
complex.js:1135:15
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.sqrt(a + Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:15
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.abs(a + Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:15
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.exp(a + Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a - Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a * Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(Math.sqrt(a * a + 1) / a)

[Survived] PrecomputedMutator
complex.js:1135:28
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.abs(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:28
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.random(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:28
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.PI(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:38
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(a * a - 1))

[Survived] PrecomputedMutator
complex.js:1135:38
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(a * b + 1))

[Survived] PrecomputedMutator
complex.js:1135:38
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(a + 1 / b))

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['re'] === 0) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['im'] === 0) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['isNegative']()) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (!this['isZero']()) {

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(11, places || 1);

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || 1);

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places + 1 || 0);

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.sqrt(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.abs(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.random(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(0, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(2, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(-1, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places && 0);

[Survived] PrecomputedMutator
complex.js:1226:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places ^ 0);

[Survived] PrecomputedMutator
complex.js:1226:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places ? 0 : 1);

[Survived] PrecomputedMutator
complex.js:1229:9
-           Math.ceil(this['re'] * places) / places,
+           Math.floor(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:9
-           Math.ceil(this['re'] * places) / places,
+           Math.round(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:9
-           Math.ceil(this['re'] * places) / places,
+           Math.abs(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(this['im'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(this['re'] + places) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(this['im'] + places) / places,

[Survived] PrecomputedMutator
complex.js:1230:9
-           Math.ceil(this['im'] * places) / places);
+           Math.floor(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:9
-           Math.ceil(this['im'] * places) / places);
+           Math.abs(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:9
-           Math.ceil(this['im'] * places) / places);
+           Math.sqrt(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:19
-           Math.ceil(this['im'] * places) / places);
+           Math.ceil(this['re'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:19
-           Math.ceil(this['im'] * places) / places);
+           Math.ceil(b * places + 1) / places);

[Survived] PrecomputedMutator
complex.js:1230:19
-           Math.ceil(this['im'] * places) / places);
+           Math.ceil(Math.random() * places) / places);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || 1);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || -1);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || Infinity);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = 10(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = 9(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(0, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(-1, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Infinity, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places && 0);

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places ? 0 : 1);

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || 1);

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           Math.ceil(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           Math.round(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           Math.trunc(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(this['im'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(this['re'] / places) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(this['im'] / places) / places,

[Survived] PrecomputedMutator
complex.js:1244:9
-           Math.floor(this['im'] * places) / places);
+           Math.round(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:9
-           Math.floor(this['im'] * places) / places);
+           Math.ceil(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:9
-           Math.floor(this['im'] * places) / places);
+           Math.abs(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:20
-           Math.floor(this['im'] * places) / places);
+           Math.floor(this['im'] * places + 1) / places);

[Survived] PrecomputedMutator
complex.js:1244:20
-           Math.floor(this['im'] * places) / places);
+           Math.floor(this['im'] * places * 2) / places);

[Survived] PrecomputedMutator
complex.js:1244:20
-           Math.floor(this['im'] * places) / places);
+           Math.floor(this['im'] * places - 1) / places);

[Survived] PrecomputedMutator
complex.js:1254:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || 1);

[Survived] PrecomputedMutator
complex.js:1254:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || 0.1);

[Survived] PrecomputedMutator
complex.js:1254:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || NaN);

[Survived] PrecomputedMutator
complex.js:1254:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(2, places || 0);

[Survived] PrecomputedMutator
complex.js:1254:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || 1);

[Survived] PrecomputedMutator
complex.js:1254:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || -1);

[Survived] PrecomputedMutator
complex.js:1254:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || Infinity);

[Survived] PrecomputedMutator
complex.js:1257:9
-           Math.round(this['re'] * places) / places,
+           Math.floor(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1257:9
-           Math.round(this['re'] * places) / places,
+           Math.ceil(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1257:9
-           Math.round(this['re'] * places) / places,
+           Math.trunc(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1258:9
-           Math.round(this['im'] * places) / places);
+           Math.floor(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1258:9
-           Math.round(this['im'] * places) / places);
+           Math.ceil(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1258:9
-           Math.round(this['im'] * places) / places);
+           Math.trunc(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1272:14
-         return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&
+         return Math.floor(z['re'] - this['re']) <= Complex['EPSILON'] &&

[Survived] PrecomputedMutator
complex.js:1273:9
-           Math.abs(z['im'] - this['im']) <= Complex['EPSILON'];
+           Math.max(z['im'] - this['im']) <= Complex['EPSILON'];

[Survived] PrecomputedMutator
complex.js:1309:11
-         if (Math.abs(b) < Complex['EPSILON']) {
+         if (Math.abs(b) < Complex['EPSILON'] * Math.abs(a)) {

[Survived] PrecomputedMutator
complex.js:1309:11
-         if (Math.abs(b) < Complex['EPSILON']) {
+         if (Math.abs(b) < Complex['EPSILON'] * Math.abs(a) && a !== 0) {

[Survived] PrecomputedMutator
complex.js:1318:11
-         if (a !== 0) {
+         if (a != 0) {

[Survived] PrecomputedMutator
complex.js:1328:18
-         } else if (b < 0) {
+         } else if (this['im'] < 0) {

[Survived] PrecomputedMutator
complex.js:1333:11
-         if (1 !== b) { // b is the absolute imaginary part
+         if (b != 1) { // b is the absolute imaginary part

[Survived] PrecomputedMutator
complex.js:1368:20
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['im']) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:20
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re'] + this['im']) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:20
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(-this['re']) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(this['re']);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(-this['im']);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(this['im'] + 1);

[Survived] PrecomputedMutator
complex.js:1388:23
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(this['re'] * 2) && isFinite(this['im']);

[Survived] PrecomputedMutator
complex.js:1388:47
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(this['re']) && isFinite(this['im'] + 1);

[Survived] PrecomputedMutator
complex.js:1388:47
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(this['re']) && isFinite(this['im'] * 2);

[Survived] PrecomputedMutator
complex.js:1411:7
-     if (typeof define === 'function' && define['amd']) {
+     if (typeof define === 'function' && define['amd'] === true) {

[Survived] PrecomputedMutator
complex.js:1415:14
-     } else if (typeof exports === 'object') {
+     } else if (typeof module === 'object') {

[Survived] PrecomputedMutator
complex.js:1415:14
-     } else if (typeof exports === 'object') {
+     } else if (typeof define === 'undefined') {

[Survived] PrecomputedMutator
complex.js:1416:5
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': false
+   });

[Survived] PrecomputedMutator
complex.js:1416:5
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': null
+   });

[Survived] PrecomputedMutator
complex.js:1416:5
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': undefined
+   });

[Survived] PrecomputedMutator
complex.js:1416:36
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__proto__", { 'value': true });

[Survived] PrecomputedMutator
complex.js:1416:36
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__module__", { 'value': true });

[Survived] PrecomputedMutator
complex.js:1416:50
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': false
+   });

[Survived] PrecomputedMutator
complex.js:1416:50
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': null
+   });

[Survived] PrecomputedMutator
complex.js:1416:50
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': undefined
+   });

Ran 1.00 tests per mutant on average.
------------|---------|----------|-----------|------------|----------|----------|
File        | % score | # killed | # timeout | # survived | # no cov | # errors |
------------|---------|----------|-----------|------------|----------|----------|
All files   |   62.05 |      739 |         0 |        452 |        0 |        0 |
 complex.js |   62.05 |      739 |         0 |        452 |        0 |        0 |
------------|---------|----------|-----------|------------|----------|----------|
[32m11:15:13 (2710) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/Complex.js/reports/mutation/mutation.html
[32m11:15:13 (2710) INFO MutationTestExecutor[39m Done in 9 minutes 50 seconds.

real	9m52.065s
user	10m4.138s
sys	1m43.459s
