*** using precomputed mutations ***
[32m22:53:54 (2555) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m22:53:54 (2555) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m22:53:54 (2555) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m22:53:55 (2555) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m22:53:55 (2555) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m22:53:55 (2555) INFO ProjectReader[39m Found 1 of 632 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 305 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
failed to parse replacement Object.prototype.toString.call(obj).slice("Object.prototype" <PLACEHOLDER>): SyntaxError: Unexpected token (1:74)
Mutant 0 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(2, 5)
Mutant 1 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice("slice()")
Mutant 2 in index.js: obj replaced with null
Mutant 3 in index.js: obj replaced with 0
Mutant 4 in index.js: obj replaced with "test"
Mutant 5 in index.js: 8 replaced with "1"
Mutant 6 in index.js: 8 replaced with "1000"
Mutant 7 in index.js: 8 replaced with "-1"
Mutant 8 in index.js: -1 replaced with -2
Mutant 9 in index.js: -1 replaced with -3
Mutant 10 in index.js: -1 replaced with -4
Mutant 11 in index.js: rules.unshift replaced with rules.add
Mutant 12 in index.js: rules.unshift replaced with rules.push
Mutant 13 in index.js: rules.unshift replaced with rules.splice
Mutant 14 in index.js: [match, result] replaced with [result, match]
Mutant 15 in index.js: [match, result] replaced with [result, null]
Mutant 16 in index.js: [match, result] replaced with [match, result + 1]
Mutant 17 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 2) + 'ies';
})
Mutant 18 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 3) + 'ies';
})
Mutant 19 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 4) + 'ies';
})
Mutant 20 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|qui$/i
Mutant 21 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|qw$/i
Mutant 22 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|qupi$/i
Mutant 23 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'es';
}
Mutant 24 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'ys';
}
Mutant 25 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 's';
}
Mutant 26 in index.js: w.substr(0, w.length - 1) replaced with w.substr(w.length)
Mutant 27 in index.js: w.substr(0, w.length - 1) replaced with w.substr(w.length + 1)
Mutant 28 in index.js: w.substr(0, w.length - 1) replaced with w.substr(w.length - 2)
Mutant 29 in index.js: w.substr replaced with w.slice
Mutant 30 in index.js: w.substr replaced with w.substring
Mutant 31 in index.js: w.substr replaced with w.replace
Mutant 32 in index.js: 0 replaced with -1
Mutant 33 in index.js: w.length - 1 replaced with w.length + 1
Mutant 34 in index.js: w.length - 1 replaced with w.length / 2
Mutant 35 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$/i, function (w) {
  return w + 'es';
})
Mutant 36 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|cs$/i, function (w) {
  return w + 'es';
})
Mutant 37 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|sh$/i, function (w) {
  return w + 'es';
})
Mutant 38 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|s$[\w_,.]/i
Mutant 39 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|s$/m
Mutant 40 in index.js: /x$|ch$|s$/i replaced with /x$|ch$/i
Mutant 41 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nucleuses|syllabi|focuss|funguss|cactuss/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
})
Mutant 42 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /.*/i
Mutant 43 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /[^aeiouy]/i
Mutant 44 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /[a-zA-Z]/i
Mutant 45 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.toLowerCase().substr(0, w.length - 2) + 'i';
}
Mutant 46 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'ie';
}
Mutant 47 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'es';
}
Mutant 48 in index.js: w.substr(0, w.length - 2) replaced with w.substr(0, w.length - 1)
Mutant 49 in index.js: w.substr(0, w.length - 2) replaced with w.substr(0, w.length + 4)
Mutant 50 in index.js: w.substr(0, w.length - 2) replaced with w.substr(1, w.length - 2)
Mutant 51 in index.js: w.substr replaced with w.slice
Mutant 52 in index.js: 0 replaced with -2
Mutant 53 in index.js: 0 replaced with -0
Mutant 54 in index.js: 0 replaced with -1
Mutant 55 in index.js: w.length - 2 replaced with w.length - 1
Mutant 56 in index.js: w.length - 2 replaced with w.length - 3
Mutant 57 in index.js: w.length - 2 replaced with w.length - "us".length
Mutant 58 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/g, function (w) {
  return w.substr(0, w.length - 2) + 'es';
})
Mutant 59 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crises/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
})
Mutant 60 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/theses|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
})
Mutant 61 in index.js: /thesis|crisis/i replaced with /thesis|crisis|apex/i
Mutant 62 in index.js: /thesis|crisis/i replaced with /crisis|thesis/i
Mutant 63 in index.js: /thesis|crisis/i replaced with /crisis|thesis|apex/i
Mutant 64 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 3) + 'es';
}
Mutant 65 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'es' + 's';
}
Mutant 66 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 's';
}
Mutant 67 in index.js: w.substr(0, w.length - 2) replaced with w.substr(1, w.length - 1)
Mutant 68 in index.js: w.substr(0, w.length - 2) replaced with w.substr(-1, w.length - 2)
Mutant 69 in index.js: w.substr replaced with w.substring
Mutant 70 in index.js: w.substr replaced with w.slice
Mutant 71 in index.js: w.substr replaced with w.replace
Mutant 72 in index.js: 0 replaced with 1
Mutant 73 in index.js: w.length - 2 replaced with w.length - 1
Mutant 74 in index.js: w.length - 2 replaced with w.length + 1
Mutant 75 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 3) + 'ices';
})
Mutant 76 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'exes';
})
Mutant 77 in index.js: /appendix|index/i replaced with /appendix|numero/i
Mutant 78 in index.js: /appendix|index/i replaced with /([^aeiouy]y$|quy$)/i
Mutant 79 in index.js: /appendix|index/i replaced with /(^|[^aeiouy])y$/i
Mutant 80 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'is';
}
Mutant 81 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'sis';
}
Mutant 82 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'i';
}
Mutant 83 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length + 1)
Mutant 84 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length * 2)
Mutant 85 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 3)
Mutant 86 in index.js: w.substr replaced with w.slice
Mutant 87 in index.js: 0 replaced with rules.length - 1
Mutant 88 in index.js: 0 replaced with rules.length + 1
Mutant 89 in index.js: w.length - 2 replaced with w.length - 1
Mutant 90 in index.js: w.length - 2 replaced with w.length - String(w).length
Mutant 91 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[aeiouy]o$/i, function (w) {
  return w + 'e';
})
Mutant 92 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[aeiouy]o$/i, function (w) {
  return w + 'ies';
})
Mutant 93 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[aeiouy]o$/i, function (w) {
  return w.substr(0, w.length - 1) + 'oes';
})
Mutant 94 in index.js: /[aeiouy]o$/i replaced with /[^aeiou]o$/i
Mutant 95 in index.js: /[aeiouy]o$/i replaced with /\doe$/i
Mutant 96 in index.js: /[aeiouy]o$/i replaced with /[aeiouy]e$/i
Mutant 97 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'es';
}
Mutant 98 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'x';
}
Mutant 99 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w;
}
Mutant 100 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiou]$/i, function (w) {
  return w + 'es';
})
Mutant 101 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[aeiou]o$/i, function (w) {
  return w + 'es';
})
Mutant 102 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[aeiou]o[^s]$/i, function (w) {
  return w + 'es';
})
Mutant 103 in index.js: addRule replaced with /[^aeiouy]o$|quy$/i
Mutant 104 in index.js: addRule replaced with /[^aeiouy]y$|quy$/i
Mutant 105 in index.js: addRule replaced with /[^aeiouy]x$|quy$/i
Mutant 106 in index.js: /[^aeiouy]o$/i replaced with /[^aeiouy]ar $/i
Mutant 107 in index.js: /[^aeiouy]o$/i replaced with /[^aeiouy]o{3,}$/i
Mutant 108 in index.js: w === 'dwarf' || w === 'roof' replaced with w === 'dwrf' || w === 'roof'
Mutant 109 in index.js: w.replace(regex, 'ves') replaced with w.replace(regex.replace('ves', 'zes'))
Mutant 110 in index.js: w.replace(regex, 'ves') replaced with w.replace(regex.replace(/ves$/, 'zes'))
Mutant 111 in index.js: regex replaced with w.replaceAll(regex, 'ves')
Mutant 112 in index.js: regex replaced with w.replace(regex, 'ves')
Mutant 113 in index.js: regex replaced with w.replace(new RegExp('^' + regex.source + '$', 'i'), 'ves')
Mutant 114 in index.js: 'ves' replaced with 'xes'
Mutant 115 in index.js: 'ves' replaced with 'shes'
Mutant 116 in index.js: 'criterion' replaced with 'criteria'
Mutant 117 in index.js: 'criterion' replaced with 1
Mutant 118 in index.js: 'criteria' replaced with 'criterion'
Mutant 119 in index.js: 'bacterium' replaced with 'bacteria'
Mutant 120 in index.js: 'bacterium' replaced with '("bacterium", "bacteria")'
Mutant 121 in index.js: 'bacterium' replaced with 'bacterium.join("")'
Mutant 122 in index.js: 'bacteria' replaced with 'bacterium'
Mutant 123 in index.js: 'bacteria' replaced with null
Mutant 124 in index.js: 'bacteria' replaced with ''
Mutant 125 in index.js: addRule('memo', 'memos') replaced with addRule('memo', 'memories')
Mutant 126 in index.js: addRule('memo', 'memos') replaced with addRule('memo', 'memoes')
Mutant 127 in index.js: addRule('memo', 'memos') replaced with addRule('memo', 'memo')
Mutant 128 in index.js: 'memo' replaced with 'memoer'
Mutant 129 in index.js: 'memo' replaced with 'memos'
Mutant 130 in index.js: 'memo' replaced with 'memo\`'
Mutant 131 in index.js: 'memos' replaced with this.memos
Mutant 132 in index.js: 'memos' replaced with this.memos[0]
Mutant 133 in index.js: addRule('cello', 'cellos') replaced with addRule('cello', 'crows')
Mutant 134 in index.js: addRule('cello', 'cellos') replaced with addRule('cello', function (w) {
  return w + 'xes';
})
Mutant 135 in index.js: addRule('cello', 'cellos') replaced with addRule('cello', 'havana')
Mutant 136 in index.js: 'cello' replaced with 'cell'
Mutant 137 in index.js: 'cello' replaced with 'cello' + 's'
Mutant 138 in index.js: 'cello' replaced with 'cello' + 'foo'
Mutant 139 in index.js: 'cellos' replaced with 'cello'
Mutant 140 in index.js: 'cellos' replaced with 'celli'
Mutant 141 in index.js: 'cellos' replaced with 'celloes'
Mutant 142 in index.js: addRule('die', 'dice') replaced with addRule('dye', 'dye')
Mutant 143 in index.js: addRule('die', 'dice') replaced with addRule('die', 'dye')
Mutant 144 in index.js: 'die' replaced with addRule(/^(dice)$/i, function (w) {
  return w.replace(/^dice$/, 'dices');
})
Mutant 145 in index.js: 'die' replaced with addRule(/^(die)$/i, function (w) {
  return w.replace(/^die$/, 'dy');
})
Mutant 146 in index.js: 'die' replaced with addRule(/^(noun)$/i, function (w) {
  return w.replace(/^noun$/, 'nomina');
})
Mutant 147 in index.js: 'dice' replaced with 'die'
Mutant 148 in index.js: 'dice' replaced with 'diez'
Mutant 149 in index.js: 'dice' replaced with 'diex'
Mutant 150 in index.js: addRule('goose', 'geese') replaced with addRule('goose', 'ges')
Mutant 151 in index.js: addRule('goose', 'geese') replaced with addRule('geese', 'geese')
Mutant 152 in index.js: 'goose' replaced with 'goat'
Mutant 153 in index.js: 'goose' replaced with 'ginx'
Mutant 154 in index.js: 'goose' replaced with 'geese'.substr(1)
Mutant 155 in index.js: 'geese' replaced with 'gooses'
Mutant 156 in index.js: 'geese' replaced with 'gos'
Mutant 157 in index.js: 'geese' replaced with 'joose'
Mutant 158 in index.js: addRule('mouse', 'mice') replaced with addRule('mouse', 'mouses')
Mutant 159 in index.js: addRule('mouse', 'mice') replaced with addRule('mous', 'mouse')
Mutant 160 in index.js: addRule('mouse', 'mice') replaced with addRule('mice', 'mouse')
Mutant 161 in index.js: 'mouse' replaced with 'mouse|s'
Mutant 162 in index.js: 'mouse' replaced with 'mice'
Mutant 163 in index.js: 'mouse' replaced with 'dog'
Mutant 164 in index.js: 'mice' replaced with 'mous'
Mutant 165 in index.js: 'mice' replaced with 'dog'
Mutant 166 in index.js: 'mice' replaced with 'geese'
Mutant 167 in index.js: addRule('person', 'people') replaced with addRule('person', 'dogs')
Mutant 168 in index.js: addRule('person', 'people') replaced with addRule('pider', 'people')
Mutant 169 in index.js: addRule('person', 'people') replaced with addRule('person', 'sand')
Mutant 170 in index.js: 'person' replaced with 'people'
Mutant 171 in index.js: 'person' replaced with 'persons'
Mutant 172 in index.js: 'person' replaced with 'peoples'
Mutant 173 in index.js: addRule('chilli', 'chillies') replaced with addRule('chili', 'chillis')
Mutant 174 in index.js: addRule('chilli', 'chillies') replaced with addRule('chilly', 'chillies')
Mutant 175 in index.js: addRule('chilli', 'chillies') replaced with addRule('chill', 'chills')
Mutant 176 in index.js: 'chilli' replaced with 'chillies'
Mutant 177 in index.js: 'chilli' replaced with 'chill'
Mutant 178 in index.js: 'chillies' replaced with 'chilis'
Mutant 179 in index.js: 'chillies' replaced with 'chihilies'
Mutant 180 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^wo/i, function (w) {
  return w.replace(/o/, 'u');
})
Mutant 181 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^man$/i, function (w) {
  return w + 's';
})
Mutant 182 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^wo?man$/i, function (w) {
  return w.replace(/n/, 'd');
})
Mutant 183 in index.js: /^(?:wo)?man$/i replaced with /^(?:wo)?woman$/i
Mutant 184 in index.js: /^(?:wo)?man$/i replaced with /^(?:wo)?man$/g
Mutant 185 in index.js: /^(?:wo)?man$/i replaced with /^(?:wo)?bear$/i
Mutant 186 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/b/, 'e');
}
Mutant 187 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/(\w)(\w)/, '$2$1');
}
Mutant 188 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/([a-zA-Z])/, '$1$1');
}
Mutant 189 in index.js: w.replace(/a/, 'e') replaced with w.replace(w.replace(/e/, 'i'))
Mutant 190 in index.js: w.replace(/a/, 'e') replaced with w.replace(regex.replace(/a/, 'i'))
Mutant 191 in index.js: w.replace(/a/, 'e') replaced with w.replace(w.replace(regex, 'ies'))
Mutant 192 in index.js: /a/ replaced with /z/
Mutant 193 in index.js: /a/ replaced with /(b|f|p|v)/
Mutant 194 in index.js: /a/ replaced with /[bcdfghjklmnpqrstvwxz]+/
Mutant 195 in index.js: 'e' replaced with 'ae'
Mutant 196 in index.js: 'e' replaced with 'e' + 'a'
Mutant 197 in index.js: 'e' replaced with 'i'
Mutant 198 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/g)
Mutant 199 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)es\b/i)
Mutant 200 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)s\b/i)
Mutant 201 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 'es';
}
Mutant 202 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'es';
}
Mutant 203 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 'ses';
}
Mutant 204 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'))
Mutant 205 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')es\\b', 'i'))
Mutant 206 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b'))
Mutant 207 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with /\\b(?:wl|tl|th|rt|tt|tt|tt)s\\b/i
Mutant 208 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with /\\b(?:wl|tl|th|rt|tt|tt|tt)\\b/i
Mutant 209 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with /\\b(?:wl|tl|th|rt|tt|tt|tt)s/i
Mutant 210 in index.js: tools.concat replaced with clothes + games + illnesses + misc
Mutant 211 in index.js: tools.concat replaced with shoes + toys + diseases + gimmicks
not replacing tools.concat with clothes + games + illnesses + misc
not replacing tools.concat with clothes + games + illnesses + misc
not replacing tools.concat with shoes + toys + diseases + gimmicks
not replacing tools.concat with shoes + toys + diseases + gimmicks
Mutant 212 in index.js: clothes replaced with trouseres
Mutant 213 in index.js: clothes replaced with pantiees
Mutant 214 in index.js: clothes replaced with clothesir
Mutant 215 in index.js: games replaced with 1
Mutant 216 in index.js: illnesses replaced with illnesses.concat('new illness')
Mutant 217 in index.js: illnesses replaced with ['new illness']
Mutant 218 in index.js: misc replaced with misc.push('dice')
Mutant 219 in index.js: misc replaced with misc = ['dice']
Mutant 220 in index.js: misc replaced with misc.concat(['dice'])
Mutant 221 in index.js: '|' replaced with '|12345'
Mutant 222 in index.js: '|' replaced with ''
Mutant 223 in index.js: '|' replaced with null
Mutant 224 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 1);
}
Mutant 225 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 2);
}
Mutant 226 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.replace("y", "ies");
}
Mutant 227 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/xs$/i, function (w) {
  return w;
})
Mutant 228 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/cs$/i, function (w) {
  return w;
})
Mutant 229 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/s$/i, function (w) {
  return w;
})
Mutant 230 in index.js: addRule replaced with /ices$/i
Mutant 231 in index.js: addRule replaced with /i$|ces$/i
Mutant 232 in index.js: /ics$/i replaced with /ies$/i
Mutant 233 in index.js: /ics$/i replaced with /iks$/i
Mutant 234 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 235 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.split('s').join('');
}
Mutant 236 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.replace(/ics$/, 'ic');
}
Mutant 237 in index.js: addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w + 's';
})
Mutant 238 in index.js: addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
})
Mutant 239 in index.js: /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i replaced with /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i.test(word)
Mutant 240 in index.js: /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i replaced with /(?!\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b)\b/i.test(word)
Mutant 241 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 's';
}
Mutant 242 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.slice(0, -1);
}
Mutant 243 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.replace(/s$/, '');
}
Mutant 244 in index.js: num !== 1 || num === undefined replaced with num === 1
Mutant 245 in index.js: num !== 1 || num === undefined replaced with num > 1
Mutant 246 in index.js: num !== 1 || num === undefined replaced with !num || num === 0
Mutant 247 in index.js: i < rules.length replaced with i = rules.length
Mutant 248 in index.js: i < rules.length replaced with i = rules.length - 1
Mutant 249 in index.js: i < rules.length replaced with i = rules.length + 1
Mutant 250 in index.js: i++ replaced with i--
Mutant 251 in index.js: i++ replaced with i += 2
Mutant 252 in index.js: i++ replaced with i = rules.length
Mutant 253 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with rule[0].test(word)
Mutant 254 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with type(rule[0]) !== 'RegExp'
Mutant 255 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with typeof rule[0] !== 'regexp'
Mutant 256 in index.js: rule[0] replaced with rule[1]
Mutant 257 in index.js: rule[0] replaced with rules
Mutant 258 in index.js: rule[0] replaced with plural
Mutant 259 in index.js: rule[0].test replaced with rule[1]
Mutant 260 in index.js: rule[0].test replaced with i
Mutant 261 in index.js: word replaced with null
Mutant 262 in index.js: word replaced with math.sqrt(num)
Mutant 263 in index.js: type replaced with rule[1] !== 'Function'
Mutant 264 in index.js: rule[1] replaced with rule[2]
Mutant 265 in index.js: rule[1] replaced with rule[(2, 3)]
Mutant 266 in index.js: rule[1] replaced with rule[0]
Mutant 267 in index.js: rule[1](word, rule[0]) replaced with rule[1](w => w)
Mutant 268 in index.js: rule[1](word, rule[0]) replaced with rule[1](undefined)
Mutant 269 in index.js: rule[1](word, rule[0]) replaced with rule[1](null)
Mutant 270 in index.js: word replaced with 1 + word
Mutant 271 in index.js: word replaced with word.toUpperCase()
Mutant 272 in index.js: word replaced with word.split('').reverse().join('')
Mutant 273 in index.js: rule[0] replaced with null
Mutant 274 in index.js: rule[0] replaced with undefined
Mutant 275 in index.js: rule[0] replaced with true
Mutant 276 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with rule[0] instanceof String && rule[0] === word
Mutant 277 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with rule[0].constructor === String && rule[0] === word
Mutant 278 in index.js: rule[0] replaced with rule[0][0]
Mutant 279 in index.js: rule[0] replaced with rule[0].length
Mutant 280 in index.js: rule[0] replaced with rule[0].toLowerCase()
Mutant 281 in index.js: type replaced with type + "foo"
Mutant 282 in index.js: rule[1] replaced with rule[0]
Mutant 283 in index.js: rule[1] replaced with Object.prototype.toString
Mutant 284 in index.js: rule[1] replaced with NaN
Mutant 285 in index.js: rule[1] replaced with rule[2]
Mutant 286 in index.js: rule[1] replaced with rule[0]
Mutant 287 in index.js: rule[1] replaced with 'hello world'
Mutant 288 in index.js: word replaced with w.substr(w.length - 1, 1)
Mutant 289 in index.js: word replaced with w.substr(0, 1)
Mutant 290 in index.js: word replaced with w.substr(1, 1)
Mutant 291 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = null
Mutant 292 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = "not a function"
Mutant 293 in index.js: plural(this, num) replaced with plural(this.length)
Mutant 294 in index.js: plural(this, num) replaced with plural(num.length)
Mutant 295 in index.js: plural(this, num) replaced with plural(word.length)
Mutant 296 in index.js: plural replaced with pluralf
Mutant 297 in index.js: plural replaced with plural * 2
Mutant 298 in index.js: this replaced with that
Mutant 299 in index.js: this replaced with null
Mutant 300 in index.js: this replaced with undefined
Mutant 301 in index.js: num replaced with num + 1
Mutant 302 in index.js: num replaced with num - 1
Mutant 303 in index.js: num replaced with num * 2
[32m22:53:55 (2555) INFO Instrumenter[39m Instrumented 1 source file(s) with 304 mutant(s)
[32m22:53:55 (2555) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m22:53:56 (2555) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m22:53:56 (2555) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m22:53:57 (2555) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 488 ms, overhead 1 ms).
Mutation testing 6% (elapsed: <1m, remaining: ~2m) 20/304 tested (0 survived, 0 timed out)
Mutation testing 13% (elapsed: <1m, remaining: ~2m) 40/304 tested (5 survived, 0 timed out)
Mutation testing 19% (elapsed: <1m, remaining: ~2m) 60/304 tested (10 survived, 0 timed out)
Mutation testing 26% (elapsed: <1m, remaining: ~1m) 80/304 tested (15 survived, 0 timed out)
Mutation testing 32% (elapsed: <1m, remaining: ~1m) 100/304 tested (19 survived, 0 timed out)
Mutation testing 39% (elapsed: ~1m, remaining: ~1m) 121/304 tested (22 survived, 0 timed out)
Mutation testing 46% (elapsed: ~1m, remaining: ~1m) 141/304 tested (34 survived, 0 timed out)
Mutation testing 52% (elapsed: ~1m, remaining: ~1m) 161/304 tested (35 survived, 0 timed out)
Mutation testing 59% (elapsed: ~1m, remaining: ~1m) 181/304 tested (35 survived, 0 timed out)
Mutation testing 66% (elapsed: ~1m, remaining: <1m) 202/304 tested (35 survived, 0 timed out)
Mutation testing 73% (elapsed: ~1m, remaining: <1m) 222/304 tested (37 survived, 0 timed out)
Mutation testing 79% (elapsed: ~2m, remaining: <1m) 243/304 tested (39 survived, 0 timed out)
Mutation testing 82% (elapsed: ~2m, remaining: <1m) 252/304 tested (41 survived, 1 timed out)
Mutation testing 89% (elapsed: ~2m, remaining: <1m) 273/304 tested (41 survived, 1 timed out)
Mutation testing 96% (elapsed: ~2m, remaining: <1m) 293/304 tested (52 survived, 1 timed out)

All tests
  ✓ All tests (killed 245)

[Survived] PrecomputedMutator
index.js:16:50
-   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })
+   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.slice(0, w.length - 1) + 'ies' })

[Survived] PrecomputedMutator
index.js:16:50
-   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })
+   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substring(0, w.length - 1) + 'ies' })

[Survived] PrecomputedMutator
index.js:19:1
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$/i, function (w) {
+     return w + 'es';
+   })

[Survived] PrecomputedMutator
index.js:19:9
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$|s$[\w_,.]/i, function(w) { return w + 'es' })

[Survived] PrecomputedMutator
index.js:19:9
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$|s$/m, function(w) { return w + 'es' })

[Survived] PrecomputedMutator
index.js:19:9
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$/i, function(w) { return w + 'es' })

[Survived] PrecomputedMutator
index.js:22:50
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
+     return w.toLowerCase().substr(0, w.length - 2) + 'i';
+   });

[Survived] PrecomputedMutator
index.js:22:71
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.slice(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:80
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(-0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:83
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - "us".length) + 'i' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis|apex/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/crisis|thesis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/crisis|thesis|apex/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:48
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.substring(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:48
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.slice(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:24:49
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.slice(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiou]o$/i, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/\doe$/i, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[aeiouy]e$/i, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:33:7
-     if (w === 'dwarf' || w === 'roof') {
+     if (w === 'dwrf' || w === 'roof') {

[Survived] PrecomputedMutator
index.js:40:9
-   addRule('bacterium', 'bacteria')
+   addRule('bacteria', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:9
-   addRule('bacterium', 'bacteria')
+   addRule('("bacterium", "bacteria")', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:9
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium.join("")', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacterium')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', null)

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', '')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cello', 'crows')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cello', function (w) {
+     return w + 'xes';
+   })

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cello', 'havana')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cell', 'cellos')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cello' + 's', 'cellos')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cello' + 'foo', 'cellos')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'cello')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'celli')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'celloes')

[Survived] PrecomputedMutator
index.js:63:60
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses.concat('new illness'), misc).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:71
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc.concat(['dice'])).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:104
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
+     return w.replace("y", "ies");
+   })

[Survived] PrecomputedMutator
index.js:67:1
-   addRule(/ics$/i, function(w) { return w })
+   addRule(/cs$/i, function (w) {
+     return w;
+   })

[Survived] PrecomputedMutator
index.js:70:110
-   addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function(w) { return w })
+   addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
+     return w.replace(/s$/, '');
+   })

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (!num || num === 0) {

[Survived] PrecomputedMutator
index.js:83:11
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (rule[0].constructor === String && rule[0] === word) {

[Survived] PrecomputedMutator
index.js:83:16
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (type(rule[0][0]) === 'String' && rule[0] === word) {

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[0]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(NaN) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[2](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[0](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? 'hello world'(word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](w.substr(w.length - 1, 1)) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](w.substr(0, 1)) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](w.substr(1, 1)) : rule[1]

[Survived] PrecomputedMutator
index.js:103:7
-     if (String.prototype.plural === undefined) {
+     if (String.prototype.plural = "not a function") {

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(this.length)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(null, num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(undefined, num)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num + 1)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num - 1)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num * 2)

Ran 1.00 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   80.92 |      245 |         1 |         58 |        0 |        0 |
 index.js |   80.92 |      245 |         1 |         58 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m22:56:32 (2555) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/reports/mutation/mutation.html
[32m22:56:32 (2555) INFO MutationTestExecutor[39m Done in 2 minutes 37 seconds.

real	2m39.027s
user	2m40.369s
sys	0m27.812s
