*** using precomputed mutations ***
[32m14:13:27 (2974) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m14:13:27 (2974) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m14:13:27 (2974) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/delta/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m14:13:28 (2974) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m14:13:28 (2974) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m14:13:28 (2974) INFO ProjectReader[39m Found 4 of 1895 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 660 mutants from MUTATION_TESTING/template-full_mixtral-8x7b-instruct_0.0/mutants.json ***
Mutant 0 in AttributeMap.ts: typeof a !== 'object' replaced with Object.keys(a).length === 0
Mutant 1 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 2 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a !== 'function'
Mutant 3 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 4 in AttributeMap.ts: typeof b !== 'object' replaced with Array.isArray(b)
Mutant 5 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'undefined'
Mutant 6 in AttributeMap.ts: cloneDeep replaced with {}
Mutant 7 in AttributeMap.ts: b replaced with a
Mutant 8 in AttributeMap.ts: b replaced with {}
Mutant 9 in AttributeMap.ts: b replaced with Object.assign({}, a, b)
Mutant 10 in AttributeMap.ts: !keepNull replaced with attributes[key] !== null
Mutant 11 in AttributeMap.ts: !keepNull replaced with !Array.isArray(attributes[key])
Mutant 12 in AttributeMap.ts: !keepNull replaced with keepNull === false
Mutant 13 in AttributeMap.ts: attributes replaced with a
Mutant 14 in AttributeMap.ts: attributes[key] != null replaced with attributes[key] === undefined
Mutant 15 in AttributeMap.ts: attributes[key] != null replaced with key in attributes
Mutant 16 in AttributeMap.ts: a replaced with Object.keys(a)
Mutant 17 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a[key] !== null && b[key] === undefined
Mutant 18 in AttributeMap.ts: attributes replaced with Object.keys(a).length > 0 ? attributes : undefined
Mutant 19 in AttributeMap.ts: attributes replaced with attributes || undefined
Mutant 20 in AttributeMap.ts: attributes replaced with Object.assign({}, attributes)
Mutant 21 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 22 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a !== 'string'
Mutant 23 in AttributeMap.ts: typeof a !== 'object' replaced with a === undefined
Mutant 24 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 25 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'undefined'
Mutant 26 in AttributeMap.ts: typeof b !== 'object' replaced with Array.isArray(b)
Mutant 27 in AttributeMap.ts: a replaced with Object.keys(a)
Mutant 28 in AttributeMap.ts: a replaced with Object.keys(Object.assign({}, a, b))
Mutant 29 in AttributeMap.ts: a replaced with Object.keys(JSON.parse(JSON.stringify({
  ...a,
  ...b
})))
Mutant 30 in AttributeMap.ts: b replaced with b || {}
Mutant 31 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with a[key] !== b[key]
Mutant 32 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with typeof a[key] !== 'undefined' && a[key] !== b[key]
Mutant 33 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with a[key] !== null && a[key] !== b[key]
Mutant 34 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(a[key] || b[key])
Mutant 35 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(b[key] || a[key])
Mutant 36 in AttributeMap.ts: isEqual replaced with a[key] === b[key]
Mutant 37 in AttributeMap.ts: a[key] replaced with a['key']
Mutant 38 in AttributeMap.ts: b[key] replaced with b['key']
Mutant 39 in AttributeMap.ts: attributes replaced with Object.keys(JSON.parse(JSON.stringify(attributes))).length
Mutant 40 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] !== attr[key] && base[key] !== undefined
Mutant 41 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] !== attr[key] || attr[key] !== undefined
Mutant 42 in AttributeMap.ts: attr replaced with Object.keys(a)
Mutant 43 in AttributeMap.ts: attr replaced with {}
Mutant 44 in AttributeMap.ts: attr replaced with Object.keys(b)
Mutant 45 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] !== undefined && base[key] === undefined
Mutant 46 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 47 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a !== 'undefined'
Mutant 48 in AttributeMap.ts: typeof a !== 'object' replaced with Array.isArray(a)
Mutant 49 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 50 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'undefined'
Mutant 51 in AttributeMap.ts: typeof b !== 'object' replaced with b === undefined || typeof b !== 'object'
Mutant 52 in AttributeMap.ts: !priority replaced with true
Mutant 53 in AttributeMap.ts: !priority replaced with a[key] === b[key]
Mutant 54 in AttributeMap.ts: !priority replaced with Math.random() < 0.5
Mutant 55 in AttributeMap.ts: b replaced with b.hasOwnProperty(key) ? b[key] : undefined
Mutant 56 in AttributeMap.ts: a[key] === undefined replaced with a[key] == undefined
Mutant 57 in AttributeMap.ts: attributes replaced with Object.assign({}, b)
Mutant 58 in Delta.ts: String.fromCharCode replaced with 'N'
Mutant 59 in Delta.ts: String.fromCharCode replaced with 0x00
Mutant 60 in Delta.ts: String.fromCharCode replaced with String.fromCodePoint
Mutant 61 in Delta.ts: 0 replaced with 1
Mutant 62 in Delta.ts: 0 replaced with String.fromCharCode(Math.floor(Math.random() * 256))
Mutant 63 in Delta.ts: 0 replaced with String.fromCharCode(0x7F)
Mutant 64 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'object' && a !== undefined
Mutant 65 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'object' || a === true
Mutant 66 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'function'
Mutant 67 in Delta.ts: typeof b !== 'object' || b === null replaced with b === undefined
Mutant 68 in Delta.ts: typeof b !== 'object' || b === null replaced with b instanceof Object || b === null
Mutant 69 in Delta.ts: a replaced with Object.keys(a)[0]
Mutant 70 in Delta.ts: a replaced with 'nonexistent_embed_type'
Mutant 71 in Delta.ts: a replaced with null
Mutant 72 in Delta.ts: b replaced with 'b' + Object.keys(b)[0]
Mutant 73 in Delta.ts: b replaced with null
Mutant 74 in Delta.ts: b replaced with Math.random()
Mutant 75 in Delta.ts: b replaced with Object.keys(b)[1]
Mutant 76 in Delta.ts: b replaced with {}
Mutant 77 in Delta.ts: b replaced with JSON.parse(JSON.stringify(b))
Mutant 78 in Delta.ts: !handler replaced with typeof handler === 'undefined'
Mutant 79 in Delta.ts: !handler replaced with handler === null
Mutant 80 in Delta.ts: Array.isArray(ops) replaced with ops instanceof Array
Mutant 81 in Delta.ts: ops replaced with ops.slice()
Mutant 82 in Delta.ts: ops replaced with Object.assign([], ops)
Mutant 83 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops !== undefined && Array.isArray(ops.ops)
Mutant 84 in Delta.ts: Array.isArray replaced with this.ops.length > index
Mutant 85 in Delta.ts: ops.ops replaced with ops.length
Mutant 86 in Delta.ts: ops.ops replaced with ops[0]
Mutant 87 in Delta.ts: ops.ops replaced with ops.concat()
Mutant 88 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with arg instanceof String && arg.length === 0
Mutant 89 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with typeof arg === 'object' && Array.isArray(arg) && arg.length === 0
Mutant 90 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with typeof arg === 'number' && arg === 0
Mutant 91 in Delta.ts: attributes replaced with Object.keys(attributes).length > 0 ? attributes : undefined
Mutant 92 in Delta.ts: attributes replaced with attributes || {}
Mutant 93 in Delta.ts: attributes replaced with attributes['key']
Mutant 94 in Delta.ts: length <= 0 replaced with true
Mutant 95 in Delta.ts: length <= 0 replaced with length > 100
Mutant 96 in Delta.ts: typeof length === 'number' && length <= 0 replaced with typeof length !== 'number'
Mutant 97 in Delta.ts: typeof length === 'number' && length <= 0 replaced with length > 0
Mutant 98 in Delta.ts: typeof length === 'number' && length <= 0 replaced with length > -1
Mutant 99 in Delta.ts: newOp replaced with {}
Mutant 100 in Delta.ts: newOp replaced with null
Mutant 101 in Delta.ts: newOp replaced with this.ops[index - 1]
Mutant 102 in Delta.ts: cloneDeep replaced with {}
Mutant 103 in Delta.ts: cloneDeep replaced with null
Mutant 104 in Delta.ts: newOp replaced with {}
Mutant 105 in Delta.ts: newOp replaced with null
Mutant 106 in Delta.ts: typeof lastOp === 'object' replaced with lastOp !== null
Mutant 107 in Delta.ts: typeof lastOp === 'object' replaced with lastOp.constructor.name === 'Object'
Mutant 108 in Delta.ts: typeof lastOp === 'object' replaced with Array.isArray(lastOp)
Mutant 109 in Delta.ts: typeof lastOp !== 'object' replaced with lastOp === null
Mutant 110 in Delta.ts: typeof lastOp !== 'object' replaced with typeof lastOp !== 'undefined'
Mutant 111 in Delta.ts: typeof lastOp !== 'object' replaced with Array.isArray(lastOp)
Mutant 112 in Delta.ts: this.ops.unshift replaced with this.ops.shift
Mutant 113 in Delta.ts: this.ops.unshift replaced with this.ops.pop
Mutant 114 in Delta.ts: newOp replaced with null
Mutant 115 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with newOp.attributes === lastOp.attributes
Mutant 116 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with JSON.stringify(newOp.attributes) === JSON.stringify(lastOp.attributes)
Mutant 117 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(lastOp.attributes, newOp.attributes)
Mutant 118 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(null)
Mutant 119 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual({})
Mutant 120 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(lastOp.attributes)
Mutant 121 in Delta.ts: isEqual replaced with nextOp.insert && lastOp.insert
Mutant 122 in Delta.ts: newOp.attributes replaced with newOp.attributes || {}
Mutant 123 in Delta.ts: newOp.attributes replaced with newOp['attributes']
Mutant 124 in Delta.ts: lastOp.attributes replaced with null
Mutant 125 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with newOp.insert !== undefined && lastOp.insert !== undefined
Mutant 126 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with typeof newOp.insert === 'number' && typeof lastOp.insert === 'number'
Mutant 127 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes !== undefined
Mutant 128 in Delta.ts: typeof newOp.attributes === 'object' replaced with typeof newOp.attributes === 'string'
Mutant 129 in Delta.ts: typeof newOp.attributes === 'object' replaced with Array.isArray(newOp.attributes)
Mutant 130 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'string' && typeof lastOp.retain === 'number'
Mutant 131 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'number' && typeof lastOp.retain === 'boolean'
Mutant 132 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'number' && 'retain' in lastOp
Mutant 133 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes !== undefined
Mutant 134 in Delta.ts: typeof newOp.attributes === 'object' replaced with typeof newOp.attributes !== 'undefined'
Mutant 135 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.hasOwnProperty('attributes')
Mutant 136 in Delta.ts: index === this.ops.length replaced with index >= this.ops.length
Mutant 137 in Delta.ts: index === this.ops.length replaced with index > this.ops.length
Mutant 138 in Delta.ts: this.ops.push replaced with this.ops.unshift
Mutant 139 in Delta.ts: this.ops.push replaced with this.ops.splice
Mutant 140 in Delta.ts: newOp replaced with {}
Mutant 141 in Delta.ts: newOp replaced with this.ops[index - 1]
Mutant 142 in Delta.ts: newOp replaced with null
Mutant 143 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, '0', newOp)
Mutant 144 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, -1, newOp)
Mutant 145 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, 1, newOp)
Mutant 146 in Delta.ts: this.ops.splice replaced with this.ops.concat
Mutant 147 in Delta.ts: index replaced with this.ops.length
Mutant 148 in Delta.ts: index replaced with -1
Mutant 149 in Delta.ts: index replaced with Math.random() * this.ops.length
Mutant 150 in Delta.ts: 0 replaced with this.ops.length
Mutant 151 in Delta.ts: 0 replaced with -1
Mutant 152 in Delta.ts: newOp replaced with {}
Mutant 153 in Delta.ts: newOp replaced with lastOp
Mutant 154 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp && typeof lastOp.retain === 'string'
Mutant 155 in Delta.ts: this.ops.pop replaced with this.ops.length--
Mutant 156 in Delta.ts: predicate replaced with () => true
Mutant 157 in Delta.ts: predicate replaced with (op, index) => predicate(index, op)
Mutant 158 in Delta.ts: this.ops.map replaced with this.ops.filter
Mutant 159 in Delta.ts: this.ops.map replaced with this.ops.reduce
Mutant 160 in Delta.ts: this.ops.map replaced with this.ops.forEach
Mutant 161 in Delta.ts: predicate replaced with index % 2 === 0
Mutant 162 in Delta.ts: op replaced with op || {}
Mutant 163 in Delta.ts: target.push replaced with target.pop
Mutant 164 in Delta.ts: op replaced with {}
Mutant 165 in Delta.ts: op replaced with null
Mutant 166 in Delta.ts: this.ops.reduce(predicate, initialValue) replaced with this.ops.reduce((predicate, initialValue) => initialValue)
Mutant 167 in Delta.ts: predicate replaced with (accum, curr, index) => accum + curr
Mutant 168 in Delta.ts: initialValue replaced with 0
Mutant 169 in Delta.ts: initialValue replaced with null
Mutant 170 in Delta.ts: elem.insert replaced with 1 * elem.insert
Mutant 171 in Delta.ts: elem.insert replaced with elem['insert']
Mutant 172 in Delta.ts: Op.length replaced with this.length
Mutant 173 in Delta.ts: elem replaced with 1 * elem
Mutant 174 in Delta.ts: elem replaced with null
Mutant 175 in Delta.ts: elem replaced with Math.random()
Mutant 176 in Delta.ts: elem.delete replaced with 0
Mutant 177 in Delta.ts: elem.delete replaced with 1
Mutant 178 in Delta.ts: Op.length replaced with this.ops.length
Mutant 179 in Delta.ts: Op.length replaced with 0
Mutant 180 in Delta.ts: elem replaced with this.ops[index - 1]
Mutant 181 in Delta.ts: elem replaced with null
Mutant 182 in Delta.ts: elem replaced with {
  insert: 0
}
Mutant 183 in Delta.ts: index < end && iter.hasNext() replaced with index < Infinity && iter.hasNext()
Mutant 184 in Delta.ts: index < end && iter.hasNext() replaced with index < end && iter.peek() !== undefined
Mutant 185 in Delta.ts: index < start replaced with index > start
Mutant 186 in Delta.ts: index < start replaced with index === start
Mutant 187 in Delta.ts: index < start replaced with index >= start
Mutant 188 in Delta.ts: iter.next replaced with thisIter.next
Mutant 189 in Delta.ts: start - index replaced with start + index
Mutant 190 in Delta.ts: start - index replaced with Math.abs(start - index)
Mutant 191 in Delta.ts: iter.next replaced with iter.skip
Mutant 192 in Delta.ts: iter.next replaced with iter.peek
Mutant 193 in Delta.ts: end - index replaced with 0
Mutant 194 in Delta.ts: end - index replaced with this.ops.length
Mutant 195 in Delta.ts: end - index replaced with index
Mutant 196 in Delta.ts: nextOp replaced with null
Mutant 197 in Delta.ts: Op.length replaced with this.length
Mutant 198 in Delta.ts: nextOp replaced with null
Mutant 199 in Delta.ts: nextOp replaced with Math.random()
Mutant 200 in Delta.ts: nextOp replaced with thisIter.peek()
Mutant 201 in Delta.ts: otherIter.peek replaced with otherIter.next
Mutant 202 in Delta.ts: firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null replaced with firstOther?.retain !== undefined && firstOther.attributes === null
Mutant 203 in Delta.ts: thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft replaced with thisIter.peekType() === 'insert' && firstLeft <= thisIter.peekLength()
Mutant 204 in Delta.ts: thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft replaced with thisIter.peekType() === 'insert' && firstLeft < thisIter.peekLength()
Mutant 205 in Delta.ts: thisIter.peekType replaced with 1
Mutant 206 in Delta.ts: thisIter.peekLength replaced with 0
Mutant 207 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 208 in Delta.ts: ops.push replaced with ops.unshift
Mutant 209 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 210 in Delta.ts: thisIter.next() replaced with thisIter.next(1)
Mutant 211 in Delta.ts: thisIter.next() replaced with thisIter.next(Math.floor(Math.random() * thisIter.peekLength()))
Mutant 212 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with firstOther.retain >= firstLeft
Mutant 213 in Delta.ts: otherIter.next replaced with thisIter.next
Mutant 214 in Delta.ts: firstOther.retain - firstLeft replaced with 0
Mutant 215 in Delta.ts: firstOther.retain - firstLeft replaced with firstOther.retain + firstLeft
Mutant 216 in Delta.ts: firstOther.retain - firstLeft replaced with Math.random()
Mutant 217 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.peek() !== null || otherIter.peek() !== null
Mutant 218 in Delta.ts: thisIter.hasNext replaced with thisIter.peekType === 'insert'
Mutant 219 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekLength() > 0
Mutant 220 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peek() !== null
Mutant 221 in Delta.ts: otherIter.peekType replaced with 'retain'
Mutant 222 in Delta.ts: otherIter.next() replaced with otherIter.peek()
Mutant 223 in Delta.ts: otherIter.next() replaced with otherIter.next(0)
Mutant 224 in Delta.ts: otherIter.next() replaced with otherIter.next(-1)
Mutant 225 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekType() === 'insert'
Mutant 226 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekType() === 'retain'
Mutant 227 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekLength() === 0
Mutant 228 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 229 in Delta.ts: thisIter.next() replaced with thisIter.next(0)
Mutant 230 in Delta.ts: thisIter.next() replaced with thisIter.next(-1)
Mutant 231 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() + otherIter.peekLength())
Mutant 232 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(Math.max(thisIter.peekLength(), otherIter.peekLength()))
Mutant 233 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() * otherIter.peekLength())
Mutant 234 in Delta.ts: Math.min replaced with Infinity
Mutant 235 in Delta.ts: Math.min replaced with 0
Mutant 236 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() - 1
Mutant 237 in Delta.ts: thisIter.peekLength() replaced with Infinity
Mutant 238 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() * 2
Mutant 239 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 240 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 241 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 242 in Delta.ts: otherIter.peekLength() replaced with Infinity
Mutant 243 in Delta.ts: length replaced with thisIter.peekLength() * 2
Mutant 244 in Delta.ts: length replaced with 0
Mutant 245 in Delta.ts: length replaced with Math.random()
Mutant 246 in Delta.ts: otherIter.next replaced with otherIter['next']
Mutant 247 in Delta.ts: length replaced with 0
Mutant 248 in Delta.ts: length replaced with Infinity
Mutant 249 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 250 in Delta.ts: otherOp.retain replaced with otherOp.retain || 0
Mutant 251 in Delta.ts: otherOp.retain replaced with thisIter.peekLength()
Mutant 252 in Delta.ts: typeof thisOp.retain === 'number' replaced with thisOp.retain !== null
Mutant 253 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof thisOp.retain === 'string'
Mutant 254 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof thisOp.retain === 'symbol'
Mutant 255 in Delta.ts: typeof otherOp.retain === 'number' replaced with otherOp.retain !== null
Mutant 256 in Delta.ts: typeof otherOp.retain === 'number' replaced with typeof otherOp.retain !== 'undefined'
Mutant 257 in Delta.ts: typeof otherOp.retain === 'number' replaced with 'retain' in otherOp
Mutant 258 in Delta.ts: thisOp.retain == null replaced with thisOp.retain === undefined
Mutant 259 in Delta.ts: thisOp.retain == null replaced with Object.keys(thisOp).includes('retain')
Mutant 260 in Delta.ts: thisOp.retain == null replaced with typeof thisOp.retain !== 'undefined'
Mutant 261 in Delta.ts: Delta.getHandler replaced with null
Mutant 262 in Delta.ts: embedType replaced with 'insert'
Mutant 263 in Delta.ts: embedType replaced with Math.random() * 2 | 0
Mutant 264 in Delta.ts: attributes replaced with Object.assign({}, attributes)
Mutant 265 in Delta.ts: delta.push replaced with delta.unshift
Mutant 266 in Delta.ts: delta.push replaced with delta.splice
Mutant 267 in Delta.ts: delta.push replaced with delta.pop
Mutant 268 in Delta.ts: newOp replaced with Object.assign({}, newOp)
Mutant 269 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with thisIter.hasNext() && isEqual(delta.ops[delta.ops.length - 2], newOp)
Mutant 270 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with otherIter.peekType() === 'insert' && isEqual(delta.ops[delta.ops.length - 1], newOp)
Mutant 271 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], otherIter.peek())
Mutant 272 in Delta.ts: otherIter.hasNext replaced with false
Mutant 273 in Delta.ts: otherIter.hasNext replaced with 0
Mutant 274 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[0], newOp)
Mutant 275 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(newOp, delta.ops[delta.ops.length - 1])
Mutant 276 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[Math.floor(Math.random() * delta.ops.length)], newOp)
Mutant 277 in Delta.ts: isEqual replaced with delta.ops[delta.ops.length - 1] !== newOp
Mutant 278 in Delta.ts: delta.ops[delta.ops.length - 1] replaced with delta.ops[0]
Mutant 279 in Delta.ts: newOp replaced with {}
Mutant 280 in Delta.ts: newOp replaced with null
Mutant 281 in Delta.ts: newOp replaced with thisIter.next()
Mutant 282 in Delta.ts: delta.concat replaced with this.concat
Mutant 283 in Delta.ts: delta.concat replaced with Array.prototype.concat
Mutant 284 in Delta.ts: delta.concat replaced with Math.concat
not replacing delta.concat with this.concat
not replacing delta.concat with this.concat
not replacing delta.concat with Array.prototype.concat
not replacing delta.concat with Array.prototype.concat
not replacing delta.concat with Math.concat
not replacing delta.concat with Math.concat
Mutant 285 in Delta.ts: rest replaced with new Delta(thisIter.rest())
Mutant 286 in Delta.ts: rest replaced with iter.rest()
Mutant 287 in Delta.ts: typeof otherOp.delete === 'number' && (typeof thisOp.retain === 'number' || typeof thisOp.retain === 'object' && thisOp.retain !== null) replaced with typeof thisOp.retain !== 'undefined'
Mutant 288 in Delta.ts: typeof otherOp.delete === 'number' && (typeof thisOp.retain === 'number' || typeof thisOp.retain === 'object' && thisOp.retain !== null) replaced with thisOp.retain !== null
Mutant 289 in Delta.ts: delta.push replaced with delta.pop
Mutant 290 in Delta.ts: delta.push replaced with ops.push
Mutant 291 in Delta.ts: otherOp replaced with null
Mutant 292 in Delta.ts: otherOp replaced with {}
Mutant 293 in Delta.ts: otherOp replaced with iter.next()
Mutant 294 in Delta.ts: this.ops.slice replaced with this.ops.splice
Mutant 295 in Delta.ts: this.ops.slice replaced with this.ops.concat
Mutant 296 in Delta.ts: this.ops.slice replaced with this.ops.filter
Mutant 297 in Delta.ts: other.ops.length > 0 replaced with other.ops.length >= 1
Mutant 298 in Delta.ts: other.ops.length > 0 replaced with other.ops.length !== 0
Mutant 299 in Delta.ts: other.ops.length > 0 replaced with Array.isArray(other.ops) && other.ops.length > 0
Mutant 300 in Delta.ts: other.ops[0] replaced with other.ops.slice(1)[0]
Mutant 301 in Delta.ts: other.ops.slice(1) replaced with other.ops.reverse()
Mutant 302 in Delta.ts: other.ops.slice replaced with other.ops.concat
Mutant 303 in Delta.ts: 1 replaced with other.ops.length - 1
Mutant 304 in Delta.ts: 1 replaced with other.ops.slice(0)
Mutant 305 in Delta.ts: 1 replaced with other.ops.slice(1)
Mutant 306 in Delta.ts: this.ops === other.ops replaced with this.ops.length === other.ops.length
Mutant 307 in Delta.ts: this.ops === other.ops replaced with this.ops[0] === other.ops[0]
Mutant 308 in Delta.ts: this.ops === other.ops replaced with JSON.stringify(this.ops) === JSON.stringify(other.ops)
Mutant 309 in Delta.ts: op.insert != null replaced with op.insert !== undefined
Mutant 310 in Delta.ts: op.insert != null replaced with op.hasOwnProperty('insert')
Mutant 311 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(['string1', 'string2', cursor])
Mutant 312 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(strings.slice())
Mutant 313 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff([strings[1], strings[0], cursor])
Mutant 314 in Delta.ts: diff replaced with 'string'
Mutant 315 in Delta.ts: strings[0] replaced with ''.concat(strings[0])
Mutant 316 in Delta.ts: strings[1] replaced with []
Mutant 317 in Delta.ts: strings[1] replaced with strings[2]
Mutant 318 in Delta.ts: strings[1] replaced with 'hardcoded string'
Mutant 319 in Delta.ts: cursor replaced with null
Mutant 320 in Delta.ts: length > 0 replaced with length >= 1
Mutant 321 in Delta.ts: length > 0 replaced with length > -1
Mutant 322 in Delta.ts: length > 0 replaced with true
Mutant 323 in Delta.ts: component[0] replaced with diff.EQUAL
Mutant 324 in Delta.ts: component[0] replaced with diff.INSERT
Mutant 325 in Delta.ts: component[0] replaced with diff.DELETE
Mutant 326 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(otherIter.peekLength() + length)
Mutant 327 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(Math.max(otherIter.peekLength(), length))
Mutant 328 in Delta.ts: Math.min replaced with Infinity
Mutant 329 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 330 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 331 in Delta.ts: otherIter.peekLength() replaced with Math.max(thisIter.peekLength(), otherIter.peekLength())
Mutant 332 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 333 in Delta.ts: length replaced with 0
Mutant 334 in Delta.ts: length replaced with Infinity
Mutant 335 in Delta.ts: otherIter.next(opLength) replaced with otherIter.next(opLength - 1)
Mutant 336 in Delta.ts: opLength replaced with thisIter.peekLength()
Mutant 337 in Delta.ts: opLength replaced with Math.max(opLength - 1, 0)
Mutant 338 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(1)
Mutant 339 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(thisIter.peekLength() * 2)
Mutant 340 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(Math.max(length, thisIter.peekLength()))
Mutant 341 in Delta.ts: Math.min replaced with 1000
Mutant 342 in Delta.ts: length replaced with thisIter.peekLength() * 2
Mutant 343 in Delta.ts: length replaced with 0
Mutant 344 in Delta.ts: length replaced with thisIter.peekLength() + 1
Mutant 345 in Delta.ts: thisIter.peekLength() replaced with thisIter.peek().length
Mutant 346 in Delta.ts: thisIter.peekLength() replaced with thisIter.length()
Mutant 347 in Delta.ts: thisIter.peekLength() replaced with 10
Mutant 348 in Delta.ts: opLength replaced with 0
Mutant 349 in Delta.ts: opLength replaced with thisIter.peekLength()
Mutant 350 in Delta.ts: opLength replaced with Math.random()
Mutant 351 in Delta.ts: opLength replaced with 0
Mutant 352 in Delta.ts: opLength replaced with thisOp.length
Mutant 353 in Delta.ts: opLength replaced with Math.random()
Mutant 354 in Delta.ts: otherIter.peekLength replaced with thisOp.insert.length
Mutant 355 in Delta.ts: opLength replaced with thisOp.insert.length
Mutant 356 in Delta.ts: opLength replaced with Math.max(opLength, 1)
Mutant 357 in Delta.ts: opLength replaced with otherIter.peekLength()
Mutant 358 in Delta.ts: opLength replaced with thisIter.peekLength()
Mutant 359 in Delta.ts: opLength replaced with 0
Mutant 360 in Delta.ts: opLength replaced with thisIter.peek().length
Mutant 361 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with thisOp.insert === otherOp.insert
Mutant 362 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with thisOp.insert == otherOp.insert
Mutant 363 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with Object.is(thisOp.insert, otherOp.insert)
Mutant 364 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(thisOp.insert || otherOp.insert)
Mutant 365 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(null)
Mutant 366 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(thisOp.insert ?? otherOp.insert)
Mutant 367 in Delta.ts: isEqual replaced with thisOp.insert.length === otherOp.insert.length
Mutant 368 in Delta.ts: isEqual replaced with true
Mutant 369 in Delta.ts: thisOp.insert replaced with thisOp.insert || ''
Mutant 370 in Delta.ts: thisOp.insert replaced with thisOp['insert']
Mutant 371 in Delta.ts: otherOp.insert replaced with otherOp.insert || ''
Mutant 372 in Delta.ts: otherOp.insert replaced with otherOp.insert ?? '<REPLACEMENT_VALUE>'
Mutant 373 in Delta.ts: otherOp.insert replaced with otherOp.hasOwnProperty('insert') ? otherOp.insert : '<REPLACEMENT_VALUE>'
Mutant 374 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(Object.assign({}, thisOp.attributes, otherOp.attributes))
Mutant 375 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff([...thisOp.attributes, ...otherOp.attributes])
Mutant 376 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(thisOp.attributes.concat(otherOp.attributes))
Mutant 377 in Delta.ts: AttributeMap.diff replaced with null
Mutant 378 in Delta.ts: AttributeMap.diff replaced with {}
Mutant 379 in Delta.ts: thisOp.attributes replaced with null
Mutant 380 in Delta.ts: otherOp.attributes replaced with null
Mutant 381 in Delta.ts: otherOp.attributes replaced with otherOp.insert
Mutant 382 in Delta.ts: otherOp replaced with null
Mutant 383 in Delta.ts: opLength replaced with 0
Mutant 384 in Delta.ts: opLength replaced with thisIter.peekLength()
Mutant 385 in Delta.ts: opLength replaced with Math.random()
Mutant 386 in Delta.ts: iter.hasNext() replaced with iter.peek() !== null
Mutant 387 in Delta.ts: iter.hasNext() replaced with iter.peekLength() > 0
Mutant 388 in Delta.ts: iter.peekType() !== 'insert' replaced with iter.peekType() === 'insert'
Mutant 389 in Delta.ts: iter.peekType() !== 'insert' replaced with true
Mutant 390 in Delta.ts: Op.length replaced with thisOp.length
Mutant 391 in Delta.ts: thisOp replaced with thisOp.insert
Mutant 392 in Delta.ts: thisOp replaced with null
Mutant 393 in Delta.ts: iter.peekLength replaced with 0
Mutant 394 in Delta.ts: iter.peekLength replaced with thisIter.peekLength || 0
Mutant 395 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf('', start)
Mutant 396 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf(newline, thisIter.peekLength())
Mutant 397 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf('', 0)
Mutant 398 in Delta.ts: thisOp.insert.indexOf replaced with ''.indexOf
Mutant 399 in Delta.ts: newline replaced with '\r\n'
Mutant 400 in Delta.ts: newline replaced with ''
Mutant 401 in Delta.ts: newline replaced with '\\n'
Mutant 402 in Delta.ts: start replaced with thisOp.insert.indexOf(newline, Infinity)
Mutant 403 in Delta.ts: start replaced with thisOp.insert.indexOf(newline, -1)
Mutant 404 in Delta.ts: start replaced with thisOp.insert.indexOf('not-a-newline', 0)
Mutant 405 in Delta.ts: index < 0 replaced with index > this.length()
Mutant 406 in Delta.ts: index < 0 replaced with index >= this.length()
Mutant 407 in Delta.ts: iter.next() replaced with iter.next(1)
Mutant 408 in Delta.ts: iter.next() replaced with iter.previous()
Mutant 409 in Delta.ts: iter.next() replaced with iter.ops[0]
Mutant 410 in Delta.ts: iter.next replaced with thisIter.next
Mutant 411 in Delta.ts: index > 0 replaced with index >= 0
Mutant 412 in Delta.ts: index > 0 replaced with index > -1
Mutant 413 in Delta.ts: index > 0 replaced with index >= -1
Mutant 414 in Delta.ts: iter.next(index) replaced with iter.next(index + 1)
Mutant 415 in Delta.ts: iter.next(index) replaced with iter.previous()
Mutant 416 in Delta.ts: iter.next(index) replaced with iter.skip(index)
Mutant 417 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) === false replaced with predicate(line, {}, i) === false
Mutant 418 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) replaced with predicate(new Delta(), {}, i)
Mutant 419 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) replaced with predicate(line, iter.next(1), i)
Mutant 420 in Delta.ts: line replaced with []
Mutant 421 in Delta.ts: line replaced with '<div></div>'
Mutant 422 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(1).attributes || {
  foo: 'bar'
}
Mutant 423 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(2).attributes || {}
Mutant 424 in Delta.ts: i replaced with i + 1
Mutant 425 in Delta.ts: i replaced with 0
Mutant 426 in Delta.ts: i replaced with this.length()
Mutant 427 in Delta.ts: line.length() > 0 replaced with line.length > 0
Mutant 428 in Delta.ts: line.length() > 0 replaced with line.length > 1
Mutant 429 in Delta.ts: line.length replaced with line.length - 1
Mutant 430 in Delta.ts: predicate(line, {}, i) replaced with predicate([line, otherIter.next(1).attributes || {}, i])
Mutant 431 in Delta.ts: predicate(line, {}, i) replaced with predicate([line, attributes, i + 1])
Mutant 432 in Delta.ts: predicate(line, {}, i) replaced with predicate([line, thisIter.next(1).attributes || {}, i])
Mutant 433 in Delta.ts: line replaced with new Delta()
Mutant 434 in Delta.ts: {} replaced with {
  insert: '\n'
}
Mutant 435 in Delta.ts: {} replaced with {
  insert: '',
  attributes: {
    bold: true
  }
}
Mutant 436 in Delta.ts: {} replaced with {
  insert: ' ',
  attributes: {
    italic: true
  }
}
Mutant 437 in Delta.ts: i replaced with i + 1
Mutant 438 in Delta.ts: i replaced with 0
Mutant 439 in Delta.ts: i replaced with 'placeholder'
Mutant 440 in Delta.ts: op.insert replaced with op.insert || ''
Mutant 441 in Delta.ts: inverted.delete replaced with inverted.retain
Mutant 442 in Delta.ts: inverted.delete replaced with inverted.push
Mutant 443 in Delta.ts: Op.length(op) replaced with this.ops.length
Mutant 444 in Delta.ts: Op.length replaced with thisOp.length
Mutant 445 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && op.attributes === undefined
Mutant 446 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with op.retain !== null && op.retain.constructor === Number
Mutant 447 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && Object.keys(op.attributes).length === 0
Mutant 448 in Delta.ts: op.retain replaced with op.retain || 0
Mutant 449 in Delta.ts: op.retain replaced with op.insert.length
Mutant 450 in Delta.ts: op.retain replaced with thisOp.retain
Mutant 451 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex + length, baseIndex)
Mutant 452 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex + 1, baseIndex + length - 1)
Mutant 453 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex - 1, baseIndex + length)
Mutant 454 in Delta.ts: baseIndex replaced with thisIter.current().attributes.start
Mutant 455 in Delta.ts: baseIndex replaced with 0
Mutant 456 in Delta.ts: baseIndex replaced with Math.max(baseIndex - length, 0)
Mutant 457 in Delta.ts: baseIndex + length replaced with baseIndex + length - 1
Mutant 458 in Delta.ts: op.delete replaced with false
Mutant 459 in Delta.ts: op.delete replaced with 0
Mutant 460 in Delta.ts: op.delete replaced with thisOp.insert
Mutant 461 in Delta.ts: inverted.push replaced with inverted.ops.push
Mutant 462 in Delta.ts: baseOp replaced with {}
Mutant 463 in Delta.ts: baseOp replaced with null
Mutant 464 in Delta.ts: baseOp replaced with Math.random()
Mutant 465 in Delta.ts: op.retain && op.attributes replaced with op.retain && op.attributes || {}
Mutant 466 in Delta.ts: op.retain && op.attributes replaced with op.retain !== undefined && op.attributes
Mutant 467 in Delta.ts: op.retain && op.attributes replaced with op.attributes || op.retain
Mutant 468 in Delta.ts: Op.length replaced with 0
Mutant 469 in Delta.ts: baseOp replaced with Object.assign({}, baseOp)
Mutant 470 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(null)
Mutant 471 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes || {})
Mutant 472 in Delta.ts: AttributeMap.invert replaced with {}
Mutant 473 in Delta.ts: AttributeMap.invert replaced with baseOp.attributes
Mutant 474 in Delta.ts: op.attributes replaced with null
Mutant 475 in Delta.ts: op.attributes replaced with {}
Mutant 476 in Delta.ts: op.attributes replaced with ['notAnAttribute']
Mutant 477 in Delta.ts: baseOp.attributes replaced with null
Mutant 478 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== undefined
Mutant 479 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'number'
Mutant 480 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain && typeof op.retain === 'object'
Mutant 481 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIndex + length)
Mutant 482 in Delta.ts: base.slice replaced with []
Mutant 483 in Delta.ts: base.slice replaced with base.ops.slice
Mutant 484 in Delta.ts: baseIndex replaced with thisIter.peekLength()
Mutant 485 in Delta.ts: baseIndex replaced with 0
Mutant 486 in Delta.ts: baseIndex replaced with thisIter.peekType() === 'insert' ? thisIter.peekLength() : 0
Mutant 487 in Delta.ts: baseIndex + 1 replaced with baseIter.peekLength()
Mutant 488 in Delta.ts: Delta.getHandler replaced with delta.getHandler
Mutant 489 in Delta.ts: Delta.getHandler replaced with Delta.prototype.getHandler
Mutant 490 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(null)
Mutant 491 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert([opData, baseOpData])
Mutant 492 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(opData, null)
Mutant 493 in Delta.ts: opData replaced with null
Mutant 494 in Delta.ts: opData replaced with []
Mutant 495 in Delta.ts: opData replaced with Math.random()
Mutant 496 in Delta.ts: baseOpData replaced with null
Mutant 497 in Delta.ts: baseOpData replaced with baseOpData.slice(0, baseOpData.length / 2)
Mutant 498 in Delta.ts: baseOpData replaced with thisOp.attributes
Mutant 499 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(null)
Mutant 500 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert({})
Mutant 501 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(thisOp.attributes)
Mutant 502 in Delta.ts: op.attributes replaced with null
Mutant 503 in Delta.ts: baseOp.attributes replaced with null
Mutant 504 in Delta.ts: baseOp.attributes replaced with {}
Mutant 505 in Delta.ts: baseOp.attributes replaced with thisOp.attributes
Mutant 506 in Delta.ts: typeof arg === 'number' replaced with arg instanceof Number
Mutant 507 in Delta.ts: typeof arg === 'number' replaced with typeof arg === 'object' && arg !== null
Mutant 508 in Delta.ts: typeof arg === 'number' replaced with Array.isArray(arg)
Mutant 509 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(0, priority)
Mutant 510 in Delta.ts: arg replaced with 0
Mutant 511 in Delta.ts: arg replaced with thisIter.peek()
Mutant 512 in Delta.ts: priority replaced with false
Mutant 513 in Delta.ts: priority replaced with thisIter.peekType()
Mutant 514 in Delta.ts: priority replaced with Math.random()
Mutant 515 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.peek() !== null
Mutant 516 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with otherIter.peek() !== undefined
Mutant 517 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.peekLength() > 0 || otherIter.peekLength() > 0
Mutant 518 in Delta.ts: thisIter.hasNext replaced with thisIter.current !== null
Mutant 519 in Delta.ts: thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert') replaced with thisIter.peekType() === 'insert' && (priority || otherIter.peek() !== null)
Mutant 520 in Delta.ts: thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert') replaced with thisIter.peekType() === 'insert' && (priority || otherIter.peek().type !== 'insert')
Mutant 521 in Delta.ts: delta.retain replaced with delta.push
Mutant 522 in Delta.ts: delta.retain replaced with delta.length = 0
Mutant 523 in Delta.ts: Op.length(thisIter.next()) replaced with 1
Mutant 524 in Delta.ts: Op.length(thisIter.next()) replaced with thisIter.peekLength()
Mutant 525 in Delta.ts: Op.length(thisIter.next()) replaced with Math.random() * Number.MAX_SAFE_INTEGER
Mutant 526 in Delta.ts: Op.length replaced with 0
Mutant 527 in Delta.ts: Op.length replaced with Infinity
Mutant 528 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 529 in Delta.ts: thisIter.next() replaced with thisIter.next(0)
Mutant 530 in Delta.ts: thisIter.next() replaced with thisIter.previous()
Mutant 531 in Delta.ts: thisIter.next replaced with thisIter['next']
Mutant 532 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() !== 'insert'
Mutant 533 in Delta.ts: otherIter.peekType() === 'insert' replaced with thisIter.peekType() === 'insert'
Mutant 534 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.current() !== null
Mutant 535 in Delta.ts: otherIter.next() replaced with null
Mutant 536 in Delta.ts: otherIter.next() replaced with otherIter.peek()
Mutant 537 in Delta.ts: otherIter.next() replaced with {
  type: 'insert',
  insert: 'placeholder'
}
Mutant 538 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() + otherIter.peekLength())
Mutant 539 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(Math.max(thisIter.peekLength(), otherIter.peekLength()))
Mutant 540 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() * otherIter.peekLength())
Mutant 541 in Delta.ts: Math.min replaced with Math.max
Mutant 542 in Delta.ts: Math.min replaced with index - offset
Mutant 543 in Delta.ts: thisIter.peekLength() replaced with thisIter.next().length
Mutant 544 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 545 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 546 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 547 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekType() === 'insert' ? Infinity : 0
Mutant 548 in Delta.ts: otherIter.peekLength replaced with otherIter.length
Mutant 549 in Delta.ts: length replaced with 0
Mutant 550 in Delta.ts: length replaced with thisOp.length
Mutant 551 in Delta.ts: length replaced with thisOp.retain.length
Mutant 552 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 553 in Delta.ts: length replaced with 0
Mutant 554 in Delta.ts: length replaced with Infinity
Mutant 555 in Delta.ts: thisOp.delete replaced with thisOp.insert
Mutant 556 in Delta.ts: otherOp.delete replaced with otherOp.retain
Mutant 557 in Delta.ts: otherOp replaced with null
Mutant 558 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with thisData && otherData
Mutant 559 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with Object.keys(thisData).length > 0 && Object.keys(otherData).length > 0
Mutant 560 in Delta.ts: thisData replaced with thisData || {}
Mutant 561 in Delta.ts: thisData replaced with thisData['nonexistent_property']
Mutant 562 in Delta.ts: thisData replaced with thisData.slice(0, 1)
Mutant 563 in Delta.ts: otherData replaced with null
Mutant 564 in Delta.ts: otherData replaced with otherData[embedType]
Mutant 565 in Delta.ts: otherData replaced with {}
Mutant 566 in Delta.ts: Delta.getHandler replaced with null
Mutant 567 in Delta.ts: embedType replaced with 'nonexistentType'
Mutant 568 in Delta.ts: handler replaced with null
Mutant 569 in Delta.ts: handler replaced with {}
Mutant 570 in Delta.ts: handler replaced with thisData[embedType], otherData[embedType], !priority
Mutant 571 in Delta.ts: thisIter.hasNext() && offset <= index replaced with thisIter.peekLength() > 0 && offset < index
Mutant 572 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 573 in Delta.ts: thisIter.peekType replaced with 'insert'
Mutant 574 in Delta.ts: nextType === 'delete' replaced with nextType === 'insert'
Mutant 575 in Delta.ts: nextType === 'delete' replaced with nextType !== 'insert'
Mutant 576 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(1)
Mutant 577 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(thisIter.peekLength())
Mutant 578 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(Math.random() * thisIter.peekLength())
Mutant 579 in Delta.ts: Math.min replaced with 1
Mutant 580 in Delta.ts: Math.min replaced with Math.max
Mutant 581 in Delta.ts: length replaced with 0
Mutant 582 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 583 in Delta.ts: length replaced with length * 2
Mutant 584 in Delta.ts: index - offset replaced with index + offset
Mutant 585 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType === 'insert' && (offset <= index || !priority)
Mutant 586 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType === 'insert' && (offset + 1 < index || !priority)
Mutant 587 in Delta.ts: typeof module === 'object' replaced with typeof global === 'object'
Mutant 588 in Delta.ts: typeof module === 'object' replaced with false
Mutant 589 in Delta.ts: typeof module === 'object' replaced with module && typeof module === 'object'
Mutant 590 in Op.ts: typeof op.retain === 'number' replaced with op.retain === undefined
Mutant 591 in Op.ts: typeof op.retain === 'number' replaced with typeof op.retain === 'undefined'
Mutant 592 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== undefined
Mutant 593 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'string'
Mutant 594 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.hasOwnProperty('retain')
Mutant 595 in OpIterator.ts: this.peekLength replaced with this.index < this.ops.length
Mutant 596 in OpIterator.ts: this.peekLength replaced with 0
Mutant 597 in OpIterator.ts: !length replaced with this.index > this.ops.length
Mutant 598 in OpIterator.ts: !length replaced with typeof length === 'undefined'
Mutant 599 in OpIterator.ts: !length replaced with length !== null
Mutant 600 in OpIterator.ts: nextOp replaced with this.ops[this.index - 1]
Mutant 601 in OpIterator.ts: nextOp replaced with null
Mutant 602 in OpIterator.ts: nextOp replaced with this.ops[this.index + 1]
Mutant 603 in OpIterator.ts: Op.length replaced with 0
Mutant 604 in OpIterator.ts: Op.length replaced with this.ops.length
Mutant 605 in OpIterator.ts: nextOp replaced with this.ops[this.index - 1]
Mutant 606 in OpIterator.ts: nextOp replaced with Math.max(0, this.peekLength() - this.offset)
Mutant 607 in OpIterator.ts: nextOp replaced with this.ops[this.index + 1]
Mutant 608 in OpIterator.ts: length >= opLength - offset replaced with length > opLength - offset
Mutant 609 in OpIterator.ts: length >= opLength - offset replaced with length > 0
Mutant 610 in OpIterator.ts: length >= opLength - offset replaced with this.offset > opLength - length
Mutant 611 in OpIterator.ts: nextOp.attributes replaced with nextOp['attributes']
Mutant 612 in OpIterator.ts: nextOp.attributes replaced with nextOp.hasOwnProperty('attributes')
Mutant 613 in OpIterator.ts: nextOp.attributes replaced with Reflect.get(nextOp, 'attributes')
Mutant 614 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with nextOp.retain !== undefined
Mutant 615 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with typeof nextOp.retain === 'string'
Mutant 616 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with nextOp.hasOwnProperty('retain')
Mutant 617 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with typeof nextOp.retain === 'function'
Mutant 618 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with nextOp.hasOwnProperty('retain')
Mutant 619 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with nextOp.retain !== undefined
Mutant 620 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with nextOp.insert !== null
Mutant 621 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with nextOp.hasOwnProperty('insert')
Mutant 622 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with Array.isArray(nextOp.insert)
Mutant 623 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(nextOp.insert.length)
Mutant 624 in OpIterator.ts: nextOp.insert.substr replaced with nextOp.insert.slice
Mutant 625 in OpIterator.ts: nextOp.insert.substr replaced with nextOp.insert.toUpperCase
Mutant 626 in OpIterator.ts: offset replaced with op.length - offset
Mutant 627 in OpIterator.ts: offset replaced with 1
Mutant 628 in OpIterator.ts: offset replaced with nextOp.length
Mutant 629 in OpIterator.ts: length replaced with nextOp.insert.length - offset
Mutant 630 in OpIterator.ts: length replaced with nextOp.insert.substr(offset, 1)
Mutant 631 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index - 1]
Mutant 632 in OpIterator.ts: this.ops[this.index] replaced with this.ops.slice(this.index, 1)[0]
Mutant 633 in OpIterator.ts: Op.length replaced with this.ops.length
Mutant 634 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index - 1]
Mutant 635 in OpIterator.ts: op replaced with this.ops[this.index + 1]
Mutant 636 in OpIterator.ts: op replaced with this.ops[Math.floor(Math.random() * this.ops.length)]
Mutant 637 in OpIterator.ts: op replaced with this.ops[this.index].type
Mutant 638 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'string'
Mutant 639 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'object' && op.retain !== null && op.retain.length > 0
Mutant 640 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.replace === 'number'
Mutant 641 in OpIterator.ts: !this.hasNext() replaced with this.index >= this.ops.length
Mutant 642 in OpIterator.ts: !this.hasNext() replaced with this.offset === Op.length(this.ops[this.index])
Mutant 643 in OpIterator.ts: !this.hasNext() replaced with this.peekType() === 'retain'
Mutant 644 in OpIterator.ts: this.hasNext replaced with this.index < this.ops.length
Mutant 645 in OpIterator.ts: this.hasNext replaced with this.ops.length > 0
Mutant 646 in OpIterator.ts: this.offset === 0 replaced with this.offset > 0
Mutant 647 in OpIterator.ts: this.offset === 0 replaced with this.index.offset
Mutant 648 in OpIterator.ts: this.ops.slice replaced with this.ops.splice
Mutant 649 in OpIterator.ts: this.index replaced with this.index + 1
Mutant 650 in OpIterator.ts: this.index replaced with 0
Mutant 651 in OpIterator.ts: this.index replaced with this.ops.length
Mutant 652 in OpIterator.ts: this.ops.slice replaced with this.ops.splice
Mutant 653 in OpIterator.ts: this.index replaced with index + 1
Mutant 654 in OpIterator.ts: this.index replaced with -1
Mutant 655 in OpIterator.ts: this.index replaced with this.ops.length
Mutant 656 in OpIterator.ts: [next].concat replaced with [next].slice
Mutant 657 in OpIterator.ts: rest replaced with this.ops.slice(this.index + 1)
Mutant 658 in OpIterator.ts: rest replaced with this.ops.slice(0, this.index)
Mutant 659 in OpIterator.ts: rest replaced with this.ops.filter(op => op !== this.ops[this.index])
[32m14:13:29 (2974) INFO Instrumenter[39m Instrumented 4 source file(s) with 660 mutant(s)
[32m14:13:29 (2974) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m14:13:30 (2974) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m14:13:30 (2974) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m14:13:35 (2974) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 4 seconds (net 4827 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~54m) 2/660 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~54m) 4/660 tested (3 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~54m) 6/660 tested (4 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~54m) 8/660 tested (4 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~54m) 10/660 tested (5 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~54m) 12/660 tested (5 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~50m) 15/660 tested (6 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~50m) 17/660 tested (6 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~50m) 19/660 tested (7 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~50m) 21/660 tested (9 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~50m) 23/660 tested (10 survived, 0 timed out)
Mutation testing 3% (elapsed: ~2m, remaining: ~50m) 25/660 tested (12 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~48m) 28/660 tested (13 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~49m) 30/660 tested (13 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~49m) 32/660 tested (14 survived, 0 timed out)
Mutation testing 5% (elapsed: ~2m, remaining: ~49m) 34/660 tested (14 survived, 0 timed out)
Mutation testing 5% (elapsed: ~2m, remaining: ~49m) 36/660 tested (14 survived, 0 timed out)
Mutation testing 5% (elapsed: ~3m, remaining: ~49m) 38/660 tested (14 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~47m) 41/660 tested (14 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~47m) 43/660 tested (14 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~47m) 45/660 tested (14 survived, 0 timed out)
Mutation testing 7% (elapsed: ~3m, remaining: ~47m) 47/660 tested (15 survived, 0 timed out)
Mutation testing 7% (elapsed: ~3m, remaining: ~47m) 49/660 tested (15 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~47m) 51/660 tested (15 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~46m) 54/660 tested (16 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~46m) 56/660 tested (16 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~46m) 58/660 tested (17 survived, 0 timed out)
Mutation testing 9% (elapsed: ~4m, remaining: ~46m) 60/660 tested (17 survived, 0 timed out)
Mutation testing 9% (elapsed: ~4m, remaining: ~45m) 63/660 tested (20 survived, 0 timed out)
Mutation testing 9% (elapsed: ~5m, remaining: ~45m) 65/660 tested (22 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~45m) 67/660 tested (23 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~45m) 69/660 tested (23 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~45m) 71/660 tested (23 survived, 0 timed out)
Mutation testing 11% (elapsed: ~5m, remaining: ~44m) 74/660 tested (23 survived, 0 timed out)
Mutation testing 11% (elapsed: ~5m, remaining: ~44m) 76/660 tested (23 survived, 0 timed out)
Mutation testing 11% (elapsed: ~6m, remaining: ~44m) 78/660 tested (24 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~44m) 80/660 tested (25 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~44m) 82/660 tested (26 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~44m) 84/660 tested (27 survived, 0 timed out)
Mutation testing 13% (elapsed: ~6m, remaining: ~43m) 87/660 tested (27 survived, 0 timed out)
Mutation testing 13% (elapsed: ~6m, remaining: ~43m) 89/660 tested (27 survived, 0 timed out)
Mutation testing 13% (elapsed: ~7m, remaining: ~43m) 91/660 tested (27 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~43m) 93/660 tested (28 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~43m) 95/660 tested (28 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~43m) 97/660 tested (28 survived, 0 timed out)
Mutation testing 15% (elapsed: ~7m, remaining: ~43m) 99/660 tested (28 survived, 0 timed out)
Mutation testing 15% (elapsed: ~7m, remaining: ~42m) 102/660 tested (28 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~42m) 104/660 tested (28 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~42m) 106/660 tested (28 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~42m) 108/660 tested (28 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~42m) 110/660 tested (28 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~42m) 112/660 tested (28 survived, 0 timed out)
Mutation testing 17% (elapsed: ~8m, remaining: ~41m) 115/660 tested (28 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~41m) 117/660 tested (29 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~41m) 119/660 tested (30 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~41m) 121/660 tested (30 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~41m) 123/660 tested (30 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~41m) 125/660 tested (31 survived, 0 timed out)
Mutation testing 19% (elapsed: ~9m, remaining: ~40m) 128/660 tested (32 survived, 0 timed out)
Mutation testing 19% (elapsed: ~10m, remaining: ~40m) 130/660 tested (32 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~40m) 132/660 tested (32 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~40m) 134/660 tested (34 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~40m) 136/660 tested (36 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~40m) 138/660 tested (38 survived, 0 timed out)
Mutation testing 21% (elapsed: ~10m, remaining: ~39m) 141/660 tested (38 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~39m) 143/660 tested (38 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~39m) 145/660 tested (40 survived, 0 timed out)
Mutation testing 22% (elapsed: ~11m, remaining: ~39m) 147/660 tested (40 survived, 0 timed out)
Mutation testing 22% (elapsed: ~11m, remaining: ~39m) 149/660 tested (41 survived, 0 timed out)
Mutation testing 22% (elapsed: ~11m, remaining: ~39m) 151/660 tested (41 survived, 0 timed out)
Mutation testing 23% (elapsed: ~11m, remaining: ~39m) 153/660 tested (42 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~39m) 155/660 tested (42 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~38m) 158/660 tested (42 survived, 0 timed out)
Mutation testing 24% (elapsed: ~12m, remaining: ~38m) 160/660 tested (42 survived, 0 timed out)
Mutation testing 24% (elapsed: ~12m, remaining: ~38m) 162/660 tested (42 survived, 0 timed out)
Mutation testing 24% (elapsed: ~12m, remaining: ~38m) 164/660 tested (43 survived, 0 timed out)
Mutation testing 25% (elapsed: ~12m, remaining: ~38m) 166/660 tested (43 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~38m) 168/660 tested (43 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~37m) 171/660 tested (45 survived, 0 timed out)
Mutation testing 26% (elapsed: ~13m, remaining: ~37m) 173/660 tested (46 survived, 0 timed out)
Mutation testing 26% (elapsed: ~13m, remaining: ~37m) 175/660 tested (46 survived, 0 timed out)
Mutation testing 26% (elapsed: ~13m, remaining: ~37m) 177/660 tested (46 survived, 0 timed out)
Mutation testing 27% (elapsed: ~13m, remaining: ~37m) 179/660 tested (46 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~37m) 181/660 tested (46 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~36m) 183/660 tested (46 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~37m) 184/660 tested (46 survived, 1 timed out)
Mutation testing 28% (elapsed: ~14m, remaining: ~37m) 185/660 tested (47 survived, 1 timed out)
Mutation testing 28% (elapsed: ~14m, remaining: ~37m) 187/660 tested (47 survived, 2 timed out)
Mutation testing 28% (elapsed: ~14m, remaining: ~37m) 187/660 tested (47 survived, 2 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~37m) 189/660 tested (47 survived, 3 timed out)
Mutation testing 29% (elapsed: ~15m, remaining: ~36m) 192/660 tested (48 survived, 3 timed out)
Mutation testing 29% (elapsed: ~15m, remaining: ~37m) 192/660 tested (48 survived, 3 timed out)
Mutation testing 29% (elapsed: ~15m, remaining: ~37m) 194/660 tested (48 survived, 4 timed out)
Mutation testing 29% (elapsed: ~15m, remaining: ~37m) 196/660 tested (48 survived, 4 timed out)
Mutation testing 30% (elapsed: ~15m, remaining: ~36m) 199/660 tested (48 survived, 4 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~36m) 201/660 tested (48 survived, 4 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~36m) 203/660 tested (49 survived, 4 timed out)
Mutation testing 31% (elapsed: ~16m, remaining: ~36m) 205/660 tested (49 survived, 4 timed out)
Mutation testing 31% (elapsed: ~16m, remaining: ~36m) 207/660 tested (49 survived, 4 timed out)
Mutation testing 31% (elapsed: ~16m, remaining: ~35m) 209/660 tested (49 survived, 4 timed out)
Mutation testing 32% (elapsed: ~16m, remaining: ~35m) 212/660 tested (49 survived, 4 timed out)
Mutation testing 32% (elapsed: ~17m, remaining: ~35m) 214/660 tested (49 survived, 4 timed out)
Mutation testing 32% (elapsed: ~17m, remaining: ~35m) 216/660 tested (49 survived, 4 timed out)
Mutation testing 33% (elapsed: ~17m, remaining: ~35m) 218/660 tested (50 survived, 4 timed out)
Mutation testing 33% (elapsed: ~17m, remaining: ~35m) 219/660 tested (50 survived, 4 timed out)
Mutation testing 33% (elapsed: ~17m, remaining: ~35m) 220/660 tested (50 survived, 5 timed out)
Mutation testing 33% (elapsed: ~17m, remaining: ~35m) 221/660 tested (50 survived, 6 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~35m) 222/660 tested (50 survived, 6 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~35m) 224/660 tested (51 survived, 7 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~35m) 224/660 tested (51 survived, 7 timed out)
Mutation testing 34% (elapsed: ~18m, remaining: ~35m) 226/660 tested (51 survived, 8 timed out)
Mutation testing 34% (elapsed: ~18m, remaining: ~35m) 227/660 tested (51 survived, 9 timed out)
Mutation testing 34% (elapsed: ~18m, remaining: ~35m) 228/660 tested (51 survived, 9 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~35m) 230/660 tested (52 survived, 10 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~35m) 230/660 tested (52 survived, 10 timed out)
Mutation testing 35% (elapsed: ~19m, remaining: ~35m) 232/660 tested (52 survived, 11 timed out)
Mutation testing 35% (elapsed: ~19m, remaining: ~35m) 235/660 tested (52 survived, 11 timed out)
Mutation testing 35% (elapsed: ~19m, remaining: ~35m) 237/660 tested (52 survived, 11 timed out)
Mutation testing 36% (elapsed: ~19m, remaining: ~34m) 239/660 tested (52 survived, 11 timed out)
Mutation testing 36% (elapsed: ~20m, remaining: ~34m) 241/660 tested (52 survived, 11 timed out)
Mutation testing 36% (elapsed: ~20m, remaining: ~34m) 243/660 tested (52 survived, 11 timed out)
Mutation testing 37% (elapsed: ~20m, remaining: ~34m) 245/660 tested (52 survived, 11 timed out)
Mutation testing 37% (elapsed: ~20m, remaining: ~34m) 247/660 tested (53 survived, 11 timed out)
Mutation testing 37% (elapsed: ~20m, remaining: ~33m) 250/660 tested (53 survived, 11 timed out)
Mutation testing 38% (elapsed: ~20m, remaining: ~33m) 252/660 tested (54 survived, 11 timed out)
Mutation testing 38% (elapsed: ~21m, remaining: ~33m) 254/660 tested (54 survived, 11 timed out)
Mutation testing 38% (elapsed: ~21m, remaining: ~33m) 256/660 tested (54 survived, 11 timed out)
Mutation testing 39% (elapsed: ~21m, remaining: ~33m) 258/660 tested (54 survived, 11 timed out)
Mutation testing 39% (elapsed: ~21m, remaining: ~33m) 260/660 tested (55 survived, 11 timed out)
Mutation testing 39% (elapsed: ~21m, remaining: ~32m) 263/660 tested (55 survived, 11 timed out)
Mutation testing 40% (elapsed: ~21m, remaining: ~32m) 265/660 tested (55 survived, 11 timed out)
Mutation testing 40% (elapsed: ~22m, remaining: ~32m) 267/660 tested (55 survived, 11 timed out)
Mutation testing 40% (elapsed: ~22m, remaining: ~32m) 269/660 tested (56 survived, 11 timed out)
Mutation testing 41% (elapsed: ~22m, remaining: ~32m) 271/660 tested (57 survived, 11 timed out)
Mutation testing 41% (elapsed: ~22m, remaining: ~31m) 273/660 tested (58 survived, 11 timed out)
Mutation testing 41% (elapsed: ~22m, remaining: ~31m) 275/660 tested (59 survived, 11 timed out)
Mutation testing 42% (elapsed: ~22m, remaining: ~31m) 278/660 tested (61 survived, 11 timed out)
Mutation testing 42% (elapsed: ~23m, remaining: ~31m) 280/660 tested (63 survived, 11 timed out)
Mutation testing 42% (elapsed: ~23m, remaining: ~31m) 282/660 tested (64 survived, 11 timed out)
Mutation testing 43% (elapsed: ~23m, remaining: ~30m) 284/660 tested (64 survived, 11 timed out)
Mutation testing 43% (elapsed: ~23m, remaining: ~30m) 286/660 tested (65 survived, 11 timed out)
Mutation testing 43% (elapsed: ~23m, remaining: ~30m) 288/660 tested (66 survived, 11 timed out)
Mutation testing 44% (elapsed: ~23m, remaining: ~30m) 291/660 tested (66 survived, 11 timed out)
Mutation testing 44% (elapsed: ~24m, remaining: ~30m) 293/660 tested (66 survived, 11 timed out)
Mutation testing 44% (elapsed: ~24m, remaining: ~29m) 295/660 tested (66 survived, 11 timed out)
Mutation testing 45% (elapsed: ~24m, remaining: ~29m) 297/660 tested (67 survived, 11 timed out)
Mutation testing 45% (elapsed: ~24m, remaining: ~29m) 299/660 tested (69 survived, 11 timed out)
Mutation testing 45% (elapsed: ~24m, remaining: ~29m) 301/660 tested (70 survived, 11 timed out)
Mutation testing 45% (elapsed: ~24m, remaining: ~29m) 303/660 tested (70 survived, 11 timed out)
Mutation testing 46% (elapsed: ~25m, remaining: ~29m) 305/660 tested (70 survived, 11 timed out)
Mutation testing 46% (elapsed: ~25m, remaining: ~28m) 308/660 tested (71 survived, 11 timed out)
Mutation testing 46% (elapsed: ~25m, remaining: ~28m) 310/660 tested (73 survived, 11 timed out)
Mutation testing 47% (elapsed: ~25m, remaining: ~28m) 312/660 tested (74 survived, 11 timed out)
Mutation testing 47% (elapsed: ~25m, remaining: ~28m) 314/660 tested (74 survived, 11 timed out)
Mutation testing 47% (elapsed: ~25m, remaining: ~28m) 316/660 tested (75 survived, 11 timed out)
Mutation testing 48% (elapsed: ~26m, remaining: ~27m) 318/660 tested (75 survived, 11 timed out)
Mutation testing 48% (elapsed: ~26m, remaining: ~27m) 321/660 tested (77 survived, 11 timed out)
Mutation testing 48% (elapsed: ~26m, remaining: ~27m) 321/660 tested (77 survived, 11 timed out)
Mutation testing 48% (elapsed: ~26m, remaining: ~27m) 322/660 tested (77 survived, 12 timed out)
Mutation testing 49% (elapsed: ~26m, remaining: ~27m) 324/660 tested (77 survived, 13 timed out)
Mutation testing 49% (elapsed: ~26m, remaining: ~27m) 326/660 tested (77 survived, 13 timed out)
Mutation testing 49% (elapsed: ~27m, remaining: ~27m) 328/660 tested (79 survived, 13 timed out)
Mutation testing 50% (elapsed: ~27m, remaining: ~27m) 330/660 tested (80 survived, 13 timed out)
Mutation testing 50% (elapsed: ~27m, remaining: ~27m) 331/660 tested (80 survived, 14 timed out)
Mutation testing 50% (elapsed: ~27m, remaining: ~27m) 333/660 tested (82 survived, 14 timed out)
Mutation testing 50% (elapsed: ~27m, remaining: ~27m) 333/660 tested (82 survived, 14 timed out)
Mutation testing 50% (elapsed: ~27m, remaining: ~27m) 335/660 tested (83 survived, 15 timed out)
Mutation testing 51% (elapsed: ~28m, remaining: ~26m) 338/660 tested (83 survived, 15 timed out)
Mutation testing 51% (elapsed: ~28m, remaining: ~26m) 340/660 tested (84 survived, 15 timed out)
Mutation testing 51% (elapsed: ~28m, remaining: ~26m) 342/660 tested (84 survived, 15 timed out)
Mutation testing 51% (elapsed: ~28m, remaining: ~26m) 343/660 tested (84 survived, 15 timed out)
Mutation testing 52% (elapsed: ~28m, remaining: ~26m) 344/660 tested (84 survived, 16 timed out)
Mutation testing 52% (elapsed: ~28m, remaining: ~26m) 347/660 tested (84 survived, 16 timed out)
Mutation testing 52% (elapsed: ~29m, remaining: ~25m) 349/660 tested (85 survived, 16 timed out)
Mutation testing 53% (elapsed: ~29m, remaining: ~25m) 351/660 tested (85 survived, 16 timed out)
Mutation testing 53% (elapsed: ~29m, remaining: ~25m) 353/660 tested (85 survived, 16 timed out)
Mutation testing 53% (elapsed: ~29m, remaining: ~25m) 355/660 tested (85 survived, 16 timed out)
Mutation testing 54% (elapsed: ~29m, remaining: ~25m) 357/660 tested (86 survived, 16 timed out)
Mutation testing 54% (elapsed: ~29m, remaining: ~25m) 359/660 tested (87 survived, 16 timed out)
Mutation testing 54% (elapsed: ~30m, remaining: ~24m) 362/660 tested (87 survived, 16 timed out)
Mutation testing 55% (elapsed: ~30m, remaining: ~24m) 364/660 tested (87 survived, 16 timed out)
Mutation testing 55% (elapsed: ~30m, remaining: ~24m) 366/660 tested (87 survived, 16 timed out)
Mutation testing 55% (elapsed: ~30m, remaining: ~24m) 368/660 tested (87 survived, 16 timed out)
Mutation testing 56% (elapsed: ~30m, remaining: ~24m) 370/660 tested (88 survived, 16 timed out)
Mutation testing 56% (elapsed: ~30m, remaining: ~23m) 372/660 tested (90 survived, 16 timed out)
Mutation testing 56% (elapsed: ~31m, remaining: ~23m) 375/660 tested (92 survived, 16 timed out)
Mutation testing 57% (elapsed: ~31m, remaining: ~23m) 377/660 tested (92 survived, 16 timed out)
Mutation testing 57% (elapsed: ~31m, remaining: ~23m) 379/660 tested (92 survived, 16 timed out)
Mutation testing 57% (elapsed: ~31m, remaining: ~23m) 381/660 tested (92 survived, 16 timed out)
Mutation testing 58% (elapsed: ~31m, remaining: ~22m) 383/660 tested (92 survived, 16 timed out)
Mutation testing 58% (elapsed: ~31m, remaining: ~22m) 385/660 tested (92 survived, 16 timed out)
Mutation testing 58% (elapsed: ~32m, remaining: ~22m) 388/660 tested (92 survived, 16 timed out)
Mutation testing 59% (elapsed: ~32m, remaining: ~22m) 390/660 tested (92 survived, 16 timed out)
Mutation testing 59% (elapsed: ~32m, remaining: ~22m) 392/660 tested (92 survived, 16 timed out)
Mutation testing 59% (elapsed: ~32m, remaining: ~21m) 394/660 tested (92 survived, 16 timed out)
Mutation testing 60% (elapsed: ~32m, remaining: ~21m) 396/660 tested (92 survived, 16 timed out)
Mutation testing 60% (elapsed: ~32m, remaining: ~21m) 398/660 tested (92 survived, 16 timed out)
Mutation testing 60% (elapsed: ~33m, remaining: ~21m) 400/660 tested (92 survived, 16 timed out)
Mutation testing 61% (elapsed: ~33m, remaining: ~21m) 403/660 tested (92 survived, 16 timed out)
Mutation testing 61% (elapsed: ~33m, remaining: ~20m) 405/660 tested (92 survived, 16 timed out)
Mutation testing 61% (elapsed: ~33m, remaining: ~20m) 407/660 tested (92 survived, 16 timed out)
Mutation testing 61% (elapsed: ~33m, remaining: ~20m) 409/660 tested (93 survived, 16 timed out)
Mutation testing 62% (elapsed: ~33m, remaining: ~20m) 410/660 tested (93 survived, 17 timed out)
Mutation testing 62% (elapsed: ~34m, remaining: ~20m) 412/660 tested (93 survived, 17 timed out)
Mutation testing 62% (elapsed: ~34m, remaining: ~20m) 414/660 tested (93 survived, 17 timed out)
Mutation testing 63% (elapsed: ~34m, remaining: ~20m) 416/660 tested (93 survived, 17 timed out)
Mutation testing 63% (elapsed: ~34m, remaining: ~20m) 417/660 tested (93 survived, 17 timed out)
Mutation testing 63% (elapsed: ~34m, remaining: ~20m) 418/660 tested (93 survived, 18 timed out)
Mutation testing 63% (elapsed: ~34m, remaining: ~20m) 419/660 tested (93 survived, 19 timed out)
Mutation testing 63% (elapsed: ~35m, remaining: ~19m) 421/660 tested (93 survived, 19 timed out)
Mutation testing 64% (elapsed: ~35m, remaining: ~19m) 424/660 tested (93 survived, 19 timed out)
Mutation testing 64% (elapsed: ~35m, remaining: ~19m) 426/660 tested (93 survived, 19 timed out)
Mutation testing 64% (elapsed: ~35m, remaining: ~19m) 428/660 tested (93 survived, 19 timed out)
Mutation testing 65% (elapsed: ~35m, remaining: ~19m) 430/660 tested (93 survived, 19 timed out)
Mutation testing 65% (elapsed: ~35m, remaining: ~18m) 432/660 tested (93 survived, 19 timed out)
Mutation testing 65% (elapsed: ~36m, remaining: ~18m) 434/660 tested (93 survived, 19 timed out)
Mutation testing 66% (elapsed: ~36m, remaining: ~18m) 437/660 tested (93 survived, 19 timed out)
Mutation testing 66% (elapsed: ~36m, remaining: ~18m) 439/660 tested (93 survived, 19 timed out)
Mutation testing 66% (elapsed: ~36m, remaining: ~18m) 441/660 tested (94 survived, 19 timed out)
Mutation testing 67% (elapsed: ~36m, remaining: ~17m) 443/660 tested (94 survived, 19 timed out)
Mutation testing 67% (elapsed: ~36m, remaining: ~17m) 445/660 tested (94 survived, 19 timed out)
Mutation testing 67% (elapsed: ~37m, remaining: ~17m) 447/660 tested (95 survived, 19 timed out)
Mutation testing 68% (elapsed: ~37m, remaining: ~17m) 450/660 tested (96 survived, 19 timed out)
Mutation testing 68% (elapsed: ~37m, remaining: ~17m) 452/660 tested (96 survived, 19 timed out)
Mutation testing 68% (elapsed: ~37m, remaining: ~17m) 454/660 tested (96 survived, 19 timed out)
Mutation testing 69% (elapsed: ~37m, remaining: ~16m) 456/660 tested (96 survived, 19 timed out)
Mutation testing 69% (elapsed: ~37m, remaining: ~16m) 458/660 tested (96 survived, 19 timed out)
Mutation testing 69% (elapsed: ~38m, remaining: ~16m) 460/660 tested (96 survived, 19 timed out)
Mutation testing 70% (elapsed: ~38m, remaining: ~16m) 462/660 tested (96 survived, 19 timed out)
Mutation testing 70% (elapsed: ~38m, remaining: ~16m) 465/660 tested (96 survived, 19 timed out)
Mutation testing 70% (elapsed: ~38m, remaining: ~15m) 467/660 tested (98 survived, 19 timed out)
Mutation testing 71% (elapsed: ~38m, remaining: ~15m) 469/660 tested (99 survived, 19 timed out)
Mutation testing 71% (elapsed: ~38m, remaining: ~15m) 471/660 tested (100 survived, 19 timed out)
Mutation testing 71% (elapsed: ~39m, remaining: ~15m) 473/660 tested (100 survived, 19 timed out)
Mutation testing 71% (elapsed: ~39m, remaining: ~15m) 475/660 tested (100 survived, 19 timed out)
Mutation testing 72% (elapsed: ~39m, remaining: ~14m) 478/660 tested (100 survived, 19 timed out)
Mutation testing 72% (elapsed: ~39m, remaining: ~14m) 480/660 tested (101 survived, 19 timed out)
Mutation testing 73% (elapsed: ~39m, remaining: ~14m) 482/660 tested (102 survived, 19 timed out)
Mutation testing 73% (elapsed: ~39m, remaining: ~14m) 484/660 tested (102 survived, 19 timed out)
Mutation testing 73% (elapsed: ~40m, remaining: ~14m) 486/660 tested (102 survived, 19 timed out)
Mutation testing 73% (elapsed: ~40m, remaining: ~14m) 488/660 tested (102 survived, 19 timed out)
Mutation testing 74% (elapsed: ~40m, remaining: ~13m) 490/660 tested (102 survived, 19 timed out)
Mutation testing 74% (elapsed: ~40m, remaining: ~13m) 493/660 tested (102 survived, 19 timed out)
Mutation testing 75% (elapsed: ~40m, remaining: ~13m) 495/660 tested (102 survived, 19 timed out)
Mutation testing 75% (elapsed: ~40m, remaining: ~13m) 497/660 tested (102 survived, 19 timed out)
Mutation testing 75% (elapsed: ~41m, remaining: ~13m) 499/660 tested (102 survived, 19 timed out)
Mutation testing 75% (elapsed: ~41m, remaining: ~13m) 501/660 tested (102 survived, 19 timed out)
Mutation testing 76% (elapsed: ~41m, remaining: ~12m) 503/660 tested (102 survived, 19 timed out)
Mutation testing 76% (elapsed: ~41m, remaining: ~12m) 506/660 tested (102 survived, 19 timed out)
Mutation testing 76% (elapsed: ~41m, remaining: ~12m) 508/660 tested (102 survived, 19 timed out)
Mutation testing 77% (elapsed: ~41m, remaining: ~12m) 510/660 tested (102 survived, 19 timed out)
Mutation testing 77% (elapsed: ~42m, remaining: ~12m) 512/660 tested (102 survived, 19 timed out)
Mutation testing 77% (elapsed: ~42m, remaining: ~11m) 514/660 tested (102 survived, 19 timed out)
Mutation testing 78% (elapsed: ~42m, remaining: ~11m) 515/660 tested (102 survived, 19 timed out)
Mutation testing 78% (elapsed: ~42m, remaining: ~11m) 517/660 tested (103 survived, 20 timed out)
Mutation testing 78% (elapsed: ~42m, remaining: ~11m) 517/660 tested (103 survived, 20 timed out)
Mutation testing 78% (elapsed: ~42m, remaining: ~11m) 520/660 tested (103 survived, 21 timed out)
Mutation testing 79% (elapsed: ~43m, remaining: ~11m) 522/660 tested (103 survived, 21 timed out)
Mutation testing 79% (elapsed: ~43m, remaining: ~11m) 523/660 tested (103 survived, 21 timed out)
Mutation testing 79% (elapsed: ~43m, remaining: ~11m) 524/660 tested (103 survived, 22 timed out)
Mutation testing 79% (elapsed: ~43m, remaining: ~11m) 525/660 tested (103 survived, 23 timed out)
Mutation testing 79% (elapsed: ~43m, remaining: ~11m) 525/660 tested (103 survived, 23 timed out)
Mutation testing 79% (elapsed: ~43m, remaining: ~11m) 527/660 tested (103 survived, 24 timed out)
Mutation testing 80% (elapsed: ~44m, remaining: ~11m) 528/660 tested (103 survived, 24 timed out)
Mutation testing 80% (elapsed: ~44m, remaining: ~10m) 530/660 tested (104 survived, 25 timed out)
Mutation testing 80% (elapsed: ~44m, remaining: ~10m) 532/660 tested (105 survived, 25 timed out)
Mutation testing 80% (elapsed: ~44m, remaining: ~10m) 533/660 tested (105 survived, 26 timed out)
Mutation testing 81% (elapsed: ~44m, remaining: ~10m) 535/660 tested (105 survived, 26 timed out)
Mutation testing 81% (elapsed: ~44m, remaining: ~10m) 536/660 tested (105 survived, 26 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 537/660 tested (105 survived, 27 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 538/660 tested (105 survived, 28 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 540/660 tested (105 survived, 28 timed out)
Mutation testing 82% (elapsed: ~45m, remaining: ~9m) 542/660 tested (105 survived, 28 timed out)
Mutation testing 82% (elapsed: ~45m, remaining: ~9m) 544/660 tested (105 survived, 28 timed out)
Mutation testing 82% (elapsed: ~45m, remaining: ~9m) 546/660 tested (105 survived, 28 timed out)
Mutation testing 83% (elapsed: ~46m, remaining: ~9m) 548/660 tested (105 survived, 28 timed out)
Mutation testing 83% (elapsed: ~46m, remaining: ~9m) 551/660 tested (105 survived, 28 timed out)
Mutation testing 83% (elapsed: ~46m, remaining: ~8m) 553/660 tested (105 survived, 28 timed out)
Mutation testing 84% (elapsed: ~46m, remaining: ~8m) 555/660 tested (105 survived, 28 timed out)
Mutation testing 84% (elapsed: ~46m, remaining: ~8m) 557/660 tested (105 survived, 28 timed out)
Mutation testing 84% (elapsed: ~46m, remaining: ~8m) 559/660 tested (105 survived, 28 timed out)
Mutation testing 85% (elapsed: ~47m, remaining: ~8m) 561/660 tested (107 survived, 28 timed out)
Mutation testing 85% (elapsed: ~47m, remaining: ~8m) 564/660 tested (107 survived, 28 timed out)
Mutation testing 85% (elapsed: ~47m, remaining: ~7m) 566/660 tested (107 survived, 28 timed out)
Mutation testing 86% (elapsed: ~47m, remaining: ~7m) 568/660 tested (107 survived, 28 timed out)
Mutation testing 86% (elapsed: ~47m, remaining: ~7m) 570/660 tested (108 survived, 28 timed out)
Mutation testing 86% (elapsed: ~47m, remaining: ~7m) 572/660 tested (108 survived, 28 timed out)
Mutation testing 86% (elapsed: ~48m, remaining: ~7m) 574/660 tested (108 survived, 28 timed out)
Mutation testing 87% (elapsed: ~48m, remaining: ~6m) 577/660 tested (108 survived, 28 timed out)
Mutation testing 87% (elapsed: ~48m, remaining: ~6m) 579/660 tested (108 survived, 28 timed out)
Mutation testing 88% (elapsed: ~48m, remaining: ~6m) 581/660 tested (108 survived, 28 timed out)
Mutation testing 88% (elapsed: ~48m, remaining: ~6m) 583/660 tested (108 survived, 28 timed out)
Mutation testing 88% (elapsed: ~48m, remaining: ~6m) 585/660 tested (108 survived, 28 timed out)
Mutation testing 88% (elapsed: ~49m, remaining: ~6m) 587/660 tested (109 survived, 28 timed out)
Mutation testing 89% (elapsed: ~49m, remaining: ~5m) 590/660 tested (112 survived, 28 timed out)
Mutation testing 89% (elapsed: ~49m, remaining: ~5m) 590/660 tested (112 survived, 28 timed out)
Mutation testing 89% (elapsed: ~49m, remaining: ~5m) 591/660 tested (112 survived, 29 timed out)
Mutation testing 89% (elapsed: ~49m, remaining: ~5m) 593/660 tested (113 survived, 30 timed out)
Mutation testing 90% (elapsed: ~49m, remaining: ~5m) 595/660 tested (115 survived, 30 timed out)
Mutation testing 90% (elapsed: ~50m, remaining: ~5m) 597/660 tested (115 survived, 30 timed out)
Mutation testing 90% (elapsed: ~50m, remaining: ~5m) 598/660 tested (115 survived, 31 timed out)
Mutation testing 90% (elapsed: ~50m, remaining: ~5m) 600/660 tested (116 survived, 31 timed out)
Mutation testing 90% (elapsed: ~50m, remaining: ~5m) 600/660 tested (116 survived, 31 timed out)
Mutation testing 91% (elapsed: ~50m, remaining: ~4m) 601/660 tested (116 survived, 32 timed out)
Mutation testing 91% (elapsed: ~50m, remaining: ~4m) 602/660 tested (116 survived, 33 timed out)
Mutation testing 91% (elapsed: ~51m, remaining: ~4m) 603/660 tested (116 survived, 34 timed out)
Mutation testing 91% (elapsed: ~51m, remaining: ~4m) 606/660 tested (116 survived, 34 timed out)
Mutation testing 92% (elapsed: ~51m, remaining: ~4m) 608/660 tested (116 survived, 34 timed out)
Mutation testing 92% (elapsed: ~51m, remaining: ~4m) 610/660 tested (116 survived, 34 timed out)
Mutation testing 92% (elapsed: ~51m, remaining: ~4m) 612/660 tested (117 survived, 34 timed out)
Mutation testing 93% (elapsed: ~51m, remaining: ~3m) 614/660 tested (119 survived, 34 timed out)
Mutation testing 93% (elapsed: ~52m, remaining: ~3m) 616/660 tested (119 survived, 34 timed out)
Mutation testing 93% (elapsed: ~52m, remaining: ~3m) 618/660 tested (119 survived, 34 timed out)
Mutation testing 93% (elapsed: ~52m, remaining: ~3m) 620/660 tested (121 survived, 34 timed out)
Mutation testing 94% (elapsed: ~52m, remaining: ~3m) 623/660 tested (121 survived, 34 timed out)
Mutation testing 94% (elapsed: ~52m, remaining: ~2m) 625/660 tested (121 survived, 34 timed out)
Mutation testing 95% (elapsed: ~52m, remaining: ~2m) 627/660 tested (121 survived, 34 timed out)
Mutation testing 95% (elapsed: ~53m, remaining: ~2m) 629/660 tested (121 survived, 34 timed out)
Mutation testing 95% (elapsed: ~53m, remaining: ~2m) 631/660 tested (121 survived, 34 timed out)
Mutation testing 95% (elapsed: ~53m, remaining: ~2m) 633/660 tested (121 survived, 34 timed out)
Mutation testing 96% (elapsed: ~53m, remaining: ~2m) 635/660 tested (121 survived, 34 timed out)
Mutation testing 96% (elapsed: ~53m, remaining: ~1m) 638/660 tested (121 survived, 34 timed out)
Mutation testing 96% (elapsed: ~53m, remaining: ~1m) 640/660 tested (121 survived, 34 timed out)
Mutation testing 97% (elapsed: ~54m, remaining: ~1m) 642/660 tested (122 survived, 34 timed out)
Mutation testing 97% (elapsed: ~54m, remaining: ~1m) 644/660 tested (122 survived, 34 timed out)
Mutation testing 97% (elapsed: ~54m, remaining: ~1m) 646/660 tested (122 survived, 34 timed out)
Mutation testing 98% (elapsed: ~54m, remaining: ~1m) 648/660 tested (123 survived, 34 timed out)
Mutation testing 98% (elapsed: ~54m, remaining: <1m) 650/660 tested (123 survived, 34 timed out)
Mutation testing 98% (elapsed: ~54m, remaining: <1m) 653/660 tested (123 survived, 34 timed out)
Mutation testing 99% (elapsed: ~55m, remaining: <1m) 655/660 tested (124 survived, 34 timed out)
Mutation testing 99% (elapsed: ~55m, remaining: <1m) 657/660 tested (124 survived, 34 timed out)
Mutation testing 99% (elapsed: ~55m, remaining: <1m) 659/660 tested (125 survived, 34 timed out)

All tests
  ✓ All tests (killed 500)

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (Object.keys(a).length === 0) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (a === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (b === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (Array.isArray(b)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:20:32
-       let attributes = cloneDeep(b);
+       let attributes = cloneDeep(Object.assign({}, a, b));

[Survived] PrecomputedMutator
src/AttributeMap.ts:21:9
-       if (!keepNull) {
+       if (keepNull === false) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:30:11
-         if (a[key] !== undefined && b[key] === undefined) {
+         if (a[key] !== null && b[key] === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:34:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(attributes || undefined).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/AttributeMap.ts:34:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(Object.assign({}, attributes)).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/AttributeMap.ts:41:9
-       if (typeof a !== 'object') {
+       if (a === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:41:9
-       if (typeof a !== 'object') {
+       if (a === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (b === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (Array.isArray(b)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:48:27
-         .concat(Object.keys(b))
+         .concat(Object.keys(b || {}))

[Survived] PrecomputedMutator
src/AttributeMap.ts:70:11
-         if (attr[key] !== base[key] && base[key] === undefined) {
+         if (attr[key] !== undefined && base[key] === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:85:9
-       if (typeof b !== 'object') {
+       if (b === undefined || typeof b !== 'object') {

[Survived] PrecomputedMutator
src/AttributeMap.ts:97:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(Object.assign({}, b)).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/Delta.ts:8:24
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCodePoint(0); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(1); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(String.fromCharCode(Math.floor(Math.random() * 256))); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(String.fromCharCode(0x7F)); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:20:7
-     if (typeof a !== 'object' || a === null) {
+     if (typeof a !== 'object' && a !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:20:7
-     if (typeof a !== 'object' || a === null) {
+     if (typeof a !== 'object' || a === true) {

[Survived] PrecomputedMutator
src/Delta.ts:29:63
-         `embed types not matched: ${embedType} != ${Object.keys(b)[0]}`,
+         `embed types not matched: ${embedType} != ${Object.keys(JSON.parse(JSON.stringify(b)))[0]}`,

[Survived] PrecomputedMutator
src/Delta.ts:51:9
-       if (!handler) {
+       if (typeof handler === 'undefined') {

[Survived] PrecomputedMutator
src/Delta.ts:60:9
-       if (Array.isArray(ops)) {
+       if (ops instanceof Array) {

[Survived] PrecomputedMutator
src/Delta.ts:62:16
-       } else if (ops != null && Array.isArray(ops.ops)) {
+       } else if (ops !== undefined && Array.isArray(ops.ops)) {

[Survived] PrecomputedMutator
src/Delta.ts:81:19
-         Object.keys(attributes).length > 0
+         Object.keys(attributes || {}).length > 0

[Survived] PrecomputedMutator
src/Delta.ts:135:11
-         if (isEqual(newOp.attributes, lastOp.attributes)) {
+         if (JSON.stringify(newOp.attributes) === JSON.stringify(lastOp.attributes)) {

[Survived] PrecomputedMutator
src/Delta.ts:135:11
-         if (isEqual(newOp.attributes, lastOp.attributes)) {
+         if (isEqual(lastOp.attributes, newOp.attributes)) {

[Survived] PrecomputedMutator
src/Delta.ts:135:19
-         if (isEqual(newOp.attributes, lastOp.attributes)) {
+         if (isEqual(newOp['attributes'], lastOp.attributes)) {

[Survived] PrecomputedMutator
src/Delta.ts:141:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.attributes !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:146:11
-             typeof newOp.retain === 'number' &&
-             typeof lastOp.retain === 'number'
+             typeof newOp.retain === 'number' && 'retain' in lastOp

[Survived] PrecomputedMutator
src/Delta.ts:150:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.attributes !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:150:15
-             if (typeof newOp.attributes === 'object') {
+             if (typeof newOp.attributes !== 'undefined') {

[Survived] PrecomputedMutator
src/Delta.ts:150:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.hasOwnProperty('attributes')) {

[Survived] PrecomputedMutator
src/Delta.ts:157:9
-       if (index === this.ops.length) {
+       if (index >= this.ops.length) {

[Survived] PrecomputedMutator
src/Delta.ts:157:9
-       if (index === this.ops.length) {
+       if (index > this.ops.length) {

[Survived] PrecomputedMutator
src/Delta.ts:160:7
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, '0', newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:7
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, -1, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:23
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(-1, 0, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:30
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, -1, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:189:32
-         const target = predicate(op) ? passed : failed;
+         const target = predicate(op || {}) ? passed : failed;

[Survived] PrecomputedMutator
src/Delta.ts:199:39
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, 0);

[Survived] PrecomputedMutator
src/Delta.ts:199:39
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, null);

[Survived] PrecomputedMutator
src/Delta.ts:204:11
-         if (elem.insert) {
+         if (elem['insert']) {

[Survived] PrecomputedMutator
src/Delta.ts:223:12
-       while (index < end && iter.hasNext()) {
+       while (index < end && iter.peek() !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:226:28
-           nextOp = iter.next(start - index);
+           nextOp = iter.next(Math.abs(start - index));

[Survived] PrecomputedMutator
src/Delta.ts:242:7
-         firstOther != null &&
-         typeof firstOther.retain === 'number' &&
-         firstOther.attributes == null
+         firstOther?.retain !== undefined && firstOther.attributes === null

[Survived] PrecomputedMutator
src/Delta.ts:259:12
-       while (thisIter.hasNext() || otherIter.hasNext()) {
+       while (thisIter.peek() !== null || otherIter.peek() !== null) {

[Survived] PrecomputedMutator
src/Delta.ts:261:20
-           delta.push(otherIter.next());
+           delta.push(otherIter.next(0));

[Survived] PrecomputedMutator
src/Delta.ts:263:20
-           delta.push(thisIter.next());
+           delta.push(thisIter.next(0));

[Survived] PrecomputedMutator
src/Delta.ts:267:25
-           const otherOp = otherIter.next(length);
+           const otherOp = otherIter['next'](length);

[Survived] PrecomputedMutator
src/Delta.ts:268:13
-           if (otherOp.retain) {
+           if (otherOp.retain || 0) {

[Survived] PrecomputedMutator
src/Delta.ts:275:19
-                 if (thisOp.retain == null) {
+                 if (thisOp.retain === undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:305:22
-             delta.push(newOp);
+             delta.push(Object.assign({}, newOp));

[Survived] PrecomputedMutator
src/Delta.ts:309:13
-               !otherIter.hasNext() &&
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               thisIter.hasNext() && isEqual(delta.ops[delta.ops.length - 2], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:309:13
-               !otherIter.hasNext() &&
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], otherIter.peek())

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(newOp, delta.ops[delta.ops.length - 1])

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[Math.floor(Math.random() * delta.ops.length)], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:21
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:54
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 1], {})

[Survived] PrecomputedMutator
src/Delta.ts:310:54
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 1], null)

[Survived] PrecomputedMutator
src/Delta.ts:313:33
-               return delta.concat(rest).chop();
+               return delta.concat(new Delta(thisIter.rest())).chop();

[Survived] PrecomputedMutator
src/Delta.ts:319:11
-             typeof otherOp.delete === 'number' &&
-             (typeof thisOp.retain === 'number' ||
-               (typeof thisOp.retain === 'object' && thisOp.retain !== null))
+             typeof thisOp.retain !== 'undefined'

[Survived] PrecomputedMutator
src/Delta.ts:331:29
-       const delta = new Delta(this.ops.slice());
+       const delta = new Delta(this.ops.concat());

[Survived] PrecomputedMutator
src/Delta.ts:332:9
-       if (other.ops.length > 0) {
+       if (other.ops.length >= 1) {

[Survived] PrecomputedMutator
src/Delta.ts:332:9
-       if (other.ops.length > 0) {
+       if (other.ops.length !== 0) {

[Survived] PrecomputedMutator
src/Delta.ts:332:9
-       if (other.ops.length > 0) {
+       if (Array.isArray(other.ops) && other.ops.length > 0) {

[Survived] PrecomputedMutator
src/Delta.ts:340:9
-       if (this.ops === other.ops) {
+       if (this.ops[0] === other.ops[0]) {

[Survived] PrecomputedMutator
src/Delta.ts:340:9
-       if (this.ops === other.ops) {
+       if (JSON.stringify(this.ops) === JSON.stringify(other.ops)) {

[Survived] PrecomputedMutator
src/Delta.ts:346:15
-             if (op.insert != null) {
+             if (op.insert !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:346:15
-             if (op.insert != null) {
+             if (op.hasOwnProperty('insert')) {

[Survived] PrecomputedMutator
src/Delta.ts:355:29
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(''.concat(strings[0]), strings[1], cursor);

[Survived] PrecomputedMutator
src/Delta.ts:355:53
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], null);

[Survived] PrecomputedMutator
src/Delta.ts:360:14
-         while (length > 0) {
+         while (length >= 1) {

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength() + length);

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(Math.max(otherIter.peekLength(), length));

[Survived] PrecomputedMutator
src/Delta.ts:364:33
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(thisIter.peekLength(), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:33
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(Math.max(thisIter.peekLength(), otherIter.peekLength()), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), thisIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), Infinity);

[Survived] PrecomputedMutator
src/Delta.ts:368:24
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(1);

[Survived] PrecomputedMutator
src/Delta.ts:368:41
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, 10);

[Survived] PrecomputedMutator
src/Delta.ts:378:42
-               const thisOp = thisIter.next(opLength);
+               const thisOp = thisIter.next(Math.max(opLength, 1));

[Survived] PrecomputedMutator
src/Delta.ts:378:42
-               const thisOp = thisIter.next(opLength);
+               const thisOp = thisIter.next(otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:380:25
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert || '', otherOp.insert)) {

[Survived] PrecomputedMutator
src/Delta.ts:380:25
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp['insert'], otherOp.insert)) {

[Survived] PrecomputedMutator
src/Delta.ts:380:40
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert, otherOp.insert || '')) {

[Survived] PrecomputedMutator
src/Delta.ts:380:40
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert, otherOp.insert ?? '<REPLACEMENT_VALUE>')) {

[Survived] PrecomputedMutator
src/Delta.ts:380:40
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert, otherOp.hasOwnProperty('insert') ? otherOp.insert : '<REPLACEMENT_VALUE>')) {

[Survived] PrecomputedMutator
src/Delta.ts:418:19
-           line.push(iter.next());
+           line.push(iter.next(1));

[Survived] PrecomputedMutator
src/Delta.ts:437:11
-         if (op.insert) {
+         if (op.insert || '') {

[Survived] PrecomputedMutator
src/Delta.ts:439:18
-         } else if (typeof op.retain === 'number' && op.attributes == null) {
+         } else if (typeof op.retain === 'number' && op.attributes === undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:440:25
-           inverted.retain(op.retain);
+           inverted.retain(op.retain || 0);

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.retain && op.attributes || {}) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.retain !== undefined && op.attributes) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.attributes || op.retain) {

[Survived] PrecomputedMutator
src/Delta.ts:450:25
-                 Op.length(baseOp),
+                 Op.length(Object.assign({}, baseOp)),

[Survived] PrecomputedMutator
src/Delta.ts:456:18
-         } else if (typeof op.retain === 'object' && op.retain !== null) {
+         } else if (op.retain !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:456:18
-         } else if (typeof op.retain === 'object' && op.retain !== null) {
+         } else if (op.retain && typeof op.retain === 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:486:12
-       while (thisIter.hasNext() || otherIter.hasNext()) {
+       while (otherIter.peek() !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:491:32
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter.next(0)));

[Survived] PrecomputedMutator
src/Delta.ts:491:32
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter['next']()));

[Survived] PrecomputedMutator
src/Delta.ts:511:13
-               typeof thisData === 'object' &&
-               thisData !== null &&
-               typeof otherData === 'object' &&
-               otherData !== null
+               Object.keys(thisData).length > 0 && Object.keys(otherData).length > 0

[Survived] PrecomputedMutator
src/Delta.ts:516:43
-               const embedType = Object.keys(thisData)[0];
+               const embedType = Object.keys(thisData || {})[0];

[Survived] PrecomputedMutator
src/Delta.ts:519:19
-                 if (handler) {
+                 if ({}) {

[Survived] PrecomputedMutator
src/Delta.ts:557:18
-         } else if (nextType === 'insert' && (offset < index || !priority)) {
+         } else if (nextType === 'insert' && (offset + 1 < index || !priority)) {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (typeof global === 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (false) {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (module && typeof module === 'object') {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (op.retain !== undefined) {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (typeof op.retain === 'string') {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (op.hasOwnProperty('retain')) {

[Survived] PrecomputedMutator
src/OpIterator.ts:19:9
-       if (!length) {
+       if (typeof length === 'undefined') {

[Survived] PrecomputedMutator
src/OpIterator.ts:37:13
-           if (nextOp.attributes) {
+           if (nextOp['attributes']) {

[Survived] PrecomputedMutator
src/OpIterator.ts:37:13
-           if (nextOp.attributes) {
+           if (nextOp.hasOwnProperty('attributes')) {

[Survived] PrecomputedMutator
src/OpIterator.ts:37:13
-           if (nextOp.attributes) {
+           if (Reflect.get(nextOp, 'attributes')) {

[Survived] PrecomputedMutator
src/OpIterator.ts:43:11
-             typeof nextOp.retain === 'object' &&
-             nextOp.retain !== null
+             nextOp.hasOwnProperty('retain')

[Survived] PrecomputedMutator
src/OpIterator.ts:43:11
-             typeof nextOp.retain === 'object' &&
-             nextOp.retain !== null
+             nextOp.retain !== undefined

[Survived] PrecomputedMutator
src/OpIterator.ts:92:9
-       if (!this.hasNext()) {
+       if (this.index >= this.ops.length) {

[Survived] PrecomputedMutator
src/OpIterator.ts:94:16
-       } else if (this.offset === 0) {
+       } else if (this.index.offset) {

[Survived] PrecomputedMutator
src/OpIterator.ts:100:35
-         const rest = this.ops.slice(this.index);
+         const rest = this.ops.slice(index + 1);

[Survived] PrecomputedMutator
src/OpIterator.ts:103:28
-         return [next].concat(rest);
+         return [next].concat(this.ops.slice(this.index + 1));

[Survived] PrecomputedMutator
src/OpIterator.ts:103:28
-         return [next].concat(rest);
+         return [next].concat(this.ops.filter(op => op !== this.ops[this.index]));

Ran 0.95 tests per mutant on average.
-----------------|---------|----------|-----------|------------|----------|----------|
File             | % score | # killed | # timeout | # survived | # no cov | # errors |
-----------------|---------|----------|-----------|------------|----------|----------|
All files        |   80.91 |      500 |        34 |        126 |        0 |        0 |
 AttributeMap.ts |   70.69 |       41 |         0 |         17 |        0 |        0 |
 Delta.ts        |   82.14 |      409 |        28 |         95 |        0 |        0 |
 Op.ts           |   40.00 |        0 |         2 |          3 |        0 |        0 |
 OpIterator.ts   |   83.08 |       50 |         4 |         11 |        0 |        0 |
-----------------|---------|----------|-----------|------------|----------|----------|
[32m15:08:58 (2974) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/delta/reports/mutation/mutation.html
[32m15:08:58 (2974) INFO MutationTestExecutor[39m Done in 55 minutes 30 seconds.

real	55m32.021s
user	79m38.169s
sys	3m19.106s
