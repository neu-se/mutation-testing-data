*** using precomputed mutations ***
[32m21:22:34 (2646) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m21:22:34 (2646) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m21:22:34 (2646) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m21:22:34 (2646) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m21:22:34 (2646) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m21:22:35 (2646) INFO ProjectReader[39m Found 1 of 632 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 299 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(Object.prototype.toString.call(obj))
Mutant 1 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(obj.constructor.name)
Mutant 2 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(obj instanceof Number ? "number" : "object")
Mutant 3 in index.js: obj replaced with null
Mutant 4 in index.js: obj replaced with undefined
Mutant 5 in index.js: obj replaced with []
Mutant 6 in index.js: 8 replaced with 0
Mutant 7 in index.js: 8 replaced with 1
Mutant 8 in index.js: 8 replaced with -1
Mutant 9 in index.js: -1 replaced with -2
Mutant 10 in index.js: -1 replaced with -10
Mutant 11 in index.js: [match, result] replaced with result, match
Mutant 12 in index.js: [match, result] replaced with function () {
  return [match, result];
}()
Mutant 13 in index.js: [match, result] replaced with [result, match][0]
Mutant 14 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiou]y$|quy$/g, function (w) {
  return w.substr(0, w.length - 1) + 'i';
})
Mutant 15 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'is';
})
Mutant 16 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|[quyz]+$/i
Mutant 17 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|quy$|[quyz]+$/i
Mutant 18 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|quy$|[quyz]+$|^.{3}$/i
Mutant 19 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w + 'y';
}
Mutant 20 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.toUpperCase() + 'IES';
}
Mutant 21 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.slice(0, -2) + 'ies';
}
Mutant 22 in index.js: w.substr(0, w.length - 1) replaced with w.substr(w.length - 2)
Mutant 23 in index.js: w.substr(0, w.length - 1) replaced with w.substr(w.length + 1)
Mutant 24 in index.js: w.substr(0, w.length - 1) replaced with w.substr(0)
Mutant 25 in index.js: 0 replaced with -1
Mutant 26 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|sh$/i, function (w) {
  return w + 'es';
})
Mutant 27 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|(s(h)?)$/i, function (w) {
  return w + 'es';
})
Mutant 28 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|ssh$/i, function (w) {
  return w + 'es';
})
Mutant 29 in index.js: addRule replaced with /x$|ch$|s$/g
Mutant 30 in index.js: addRule replaced with /x$|ch$|s$/i
Mutant 31 in index.js: addRule replaced with /x$|ch$|s$/m
Mutant 32 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|/i
Mutant 33 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|s$/g
Mutant 34 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|(s)$/gi
Mutant 35 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 's';
}
Mutant 36 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 'es' + 1;
}
Mutant 37 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w[0] + 'es';
}
Mutant 38 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 3) + 'i';
})
Mutant 39 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(1, w.length - 2) + 'i';
})
Mutant 40 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /nucleus|syllabus|focus|fungus|cactus|foo/i
Mutant 41 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /nucleus|syllabus|focus|fungus|cactus|bar/i
Mutant 42 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /nucleus|syllabus|focus|fungus|cactus|qux/i
Mutant 43 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'es';
}
Mutant 44 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'us';
}
Mutant 45 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + w.substr(w.length - 2, 2);
}
Mutant 46 in index.js: w.substr(0, w.length - 2) replaced with w.substr(1, w.length - 1)
Mutant 47 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 3, w.length - 1)
Mutant 48 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 2, w.length - 1)
Mutant 49 in index.js: w.substr replaced with w.substring
Mutant 50 in index.js: 0 replaced with ''
Mutant 51 in index.js: w.length - 2 replaced with w.length - 1
Mutant 52 in index.js: w.length - 2 replaced with w.length + 1
Mutant 53 in index.js: w.length - 2 replaced with w.length >= 2
Mutant 54 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 3) + 'es';
})
Mutant 55 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 5) + 'es';
})
Mutant 56 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/XXXX|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
})
Mutant 57 in index.js: /thesis|crisis/i replaced with /thesis|crisis/gi
Mutant 58 in index.js: /thesis|crisis/i replaced with /thesis|criteria/i
Mutant 59 in index.js: /thesis|crisis/i replaced with /crisis|thesis/i
Mutant 60 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'es';
}
Mutant 61 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(1, w.length - 1) + 'es';
}
Mutant 62 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(w.length - 2, 2) + 'es';
}
Mutant 63 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1, w.length - 2)
Mutant 64 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 2, w.length - 3)
Mutant 65 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1, w.slice(-1))
Mutant 66 in index.js: 0 replaced with 4
Mutant 67 in index.js: w.length - 2 replaced with w.length + 1
Mutant 68 in index.js: w.length - 2 replaced with w.substring(0, w.length - 1)
Mutant 69 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/auspices|ices/i, function (w) {
  return w + 'es';
})
Mutant 70 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'isces';
})
Mutant 71 in index.js: /appendix|index/i replaced with /append|ix/i
Mutant 72 in index.js: /appendix|index/i replaced with /append|ix/gi
Mutant 73 in index.js: /appendix|index/i replaced with /append/gi
Mutant 74 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'ies';
}
Mutant 75 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'ys';
}
Mutant 76 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'es';
}
Mutant 77 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1, w.length - 2)
Mutant 78 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 2, w.length - 1)
Mutant 79 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1)
Mutant 80 in index.js: w.substr replaced with w.substring
Mutant 81 in index.js: w.substr replaced with w.slice
Mutant 82 in index.js: 0 replaced with 1
Mutant 83 in index.js: 0 replaced with -1
Mutant 84 in index.js: w.length - 2 replaced with w.length - 3
Mutant 85 in index.js: w.length - 2 replaced with w.length - 1
Mutant 86 in index.js: w.length - 2 replaced with w.length + 1
Mutant 87 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[aeiouy]o$/i, function (w) {
  return w + 'es';
})
Mutant 88 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'os';
})
Mutant 89 in index.js: /[aeiouy]o$/i replaced with /[^aeiou]o$/i
Mutant 90 in index.js: /[aeiouy]o$/i replaced with /[aeiou]y$/i
Mutant 91 in index.js: /[aeiouy]o$/i replaced with /[aeiou]?$/i
Mutant 92 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]ies$/i)
Mutant 93 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]oes$/i)
Mutant 94 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]e$/i)
Mutant 95 in index.js: /[^aeiouy]o$/i replaced with /[^aeiouy]ode$/i
Mutant 96 in index.js: /[^aeiouy]o$/i replaced with /[^aeiouy]o{2}$/i
Mutant 97 in index.js: /[^aeiouy]o$/i replaced with /[^aeiouy]o{1,3}$/i
Mutant 98 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w.replace(/es$/, 'is');
}
Mutant 99 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w.replace(/s$/, '');
}
Mutant 100 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w.replace(/s$/, 'X');
}
Mutant 101 in index.js: w === 'dwarf' || w === 'roof' replaced with w.endsWith('oof')
Mutant 102 in index.js: w === 'dwarf' || w === 'roof' replaced with w.toLowerCase() === 'dwarf' || w.toLowerCase() === 'roof'
Mutant 103 in index.js: w === 'dwarf' || w === 'roof' replaced with !/dwarf|roof/.test(w)
Mutant 104 in index.js: w.replace(regex, 'ves') replaced with w.replace(regex, 'ies')
Mutant 105 in index.js: w.replace(regex, 'ves') replaced with w.replace(regex, 's')
Mutant 106 in index.js: 'ves' replaced with 'otherword'
Mutant 107 in index.js: 'ves' replaced with 'es' + 'otherword'
Mutant 108 in index.js: 'ves' replaced with ''
Mutant 109 in index.js: 'criterion' replaced with 'criterions'
Mutant 110 in index.js: 'criterion' replaced with 'criteria'
Mutant 111 in index.js: 'criteria' replaced with 'criterion'
Mutant 112 in index.js: 'criteria' replaced with 'criterion' + 's'
Mutant 113 in index.js: 'criteria' replaced with 'criterion' + 'es'
Mutant 114 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', 'bacterias')
Mutant 115 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacteriums', 'bacteria')
Mutant 116 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacteria', 'bacteriums')
Mutant 117 in index.js: 'bacterium' replaced with 'bacteria'
Mutant 118 in index.js: 'bacterium' replaced with 'bacterium' + 's'
Mutant 119 in index.js: 'bacterium' replaced with 'bacterium'[0] + 'ea'
Mutant 120 in index.js: 'bacteria' replaced with 'bacterium'
Mutant 121 in index.js: 'bacteria' replaced with 'bacteriuma'
Mutant 122 in index.js: 'bacteria' replaced with 'bacteriaa'
Mutant 123 in index.js: addRule('memo', 'memos') replaced with addRule('memo', 'metallic')
Mutant 124 in index.js: addRule('memo', 'memos') replaced with addRule('memo', 'dance')
Mutant 125 in index.js: addRule('memo', 'memos') replaced with addRule('memo', '')
Mutant 126 in index.js: 'memo' replaced with 'memos'
Mutant 127 in index.js: 'memo' replaced with 'memoirs'
Mutant 128 in index.js: 'memo' replaced with 'Memories'
Mutant 129 in index.js: 'memos' replaced with 'mimos'
Mutant 130 in index.js: 'memos' replaced with 'memoes'
Mutant 131 in index.js: addRule('cello', 'cellos') replaced with addRule('celo', 'cello')
Mutant 132 in index.js: addRule('cello', 'cellos') replaced with addRule('cello', 'violino')
Mutant 133 in index.js: addRule('cello', 'cellos') replaced with addRule('youtube', 'youtubes')
Mutant 134 in index.js: 'cello' replaced with 'cele'
Mutant 135 in index.js: 'cello' replaced with 'cell'
Mutant 136 in index.js: 'cellos' replaced with 'c'
Mutant 137 in index.js: 'cellos' replaced with 'celloes'
Mutant 138 in index.js: addRule('die', 'dice') replaced with addRule('die', 'dice', 1)
Mutant 139 in index.js: addRule('die', 'dice') replaced with addRule('die', 'dice', function () {})
Mutant 140 in index.js: addRule('die', 'dice') replaced with addRule('die', 'dice', function (word, num) {
  return word + 's';
})
Mutant 141 in index.js: 'die' replaced with "die" + "s"
Mutant 142 in index.js: 'die' replaced with "die".slice(0, -1) + "ies"
Mutant 143 in index.js: 'die' replaced with "die".split("").reverse().join("")
Mutant 144 in index.js: addRule('goose', 'geese') replaced with addRule(addRule('clam', 'cls'))
Mutant 145 in index.js: addRule('goose', 'geese') replaced with addRule(addRule('goose', 'gooses'))
Mutant 146 in index.js: 'goose' replaced with 'geese'
Mutant 147 in index.js: 'goose' replaced with 'gooses'
Mutant 148 in index.js: 'goose' replaced with 'geesz'
Mutant 149 in index.js: 'geese' replaced with 'geesee'
Mutant 150 in index.js: 'geese' replaced with 'geesev'
Mutant 151 in index.js: addRule('mouse', 'mice') replaced with addRule('mouses', 'mice')
Mutant 152 in index.js: addRule('mouse', 'mice') replaced with addRule('eles', 'elves')
Mutant 153 in index.js: addRule('mouse', 'mice') replaced with addRule('houses', 'čouses')
Mutant 154 in index.js: 'mouse' replaced with 'mousehole'
Mutant 155 in index.js: 'mouse' replaced with 'mouse egg'
Mutant 156 in index.js: 'mouse' replaced with '"mouse"'
Mutant 157 in index.js: 'mice' replaced with 'monkeys'
Mutant 158 in index.js: 'mice' replaced with 'mouses'
Mutant 159 in index.js: 'mice' replaced with 'mouse'
Mutant 160 in index.js: addRule('person', 'people') replaced with addRule('whole', 'wholes')
Mutant 161 in index.js: addRule('person', 'people') replaced with addRule('people', 'people')
Mutant 162 in index.js: addRule('person', 'people') replaced with addRule('person', 'peoples')
Mutant 163 in index.js: 'person' replaced with 'human'
Mutant 164 in index.js: 'person' replaced with 'insect'
Mutant 165 in index.js: 'person' replaced with 'sadness'
Mutant 166 in index.js: 'people' replaced with 'persons'
Mutant 167 in index.js: 'people' replaced with 'human beings'
Mutant 168 in index.js: 'people' replaced with 'employees'
Mutant 169 in index.js: addRule replaced with 'chillies'
Mutant 170 in index.js: addRule replaced with 'chili'
Mutant 171 in index.js: addRule replaced with 'chilly'
Mutant 172 in index.js: 'chilli' replaced with 'chillis'
Mutant 173 in index.js: 'chilli' replaced with 'chillies'
Mutant 174 in index.js: 'chilli' replaced with 'chilliw'
Mutant 175 in index.js: 'chillies' replaced with 'chili'
Mutant 176 in index.js: 'chillies' replaced with 'chillis'
Mutant 177 in index.js: 'chillies' replaced with 'chili\n'
Mutant 178 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^wo(wo|man)$/i, function (w) {
  return w.replace(/a/, 'e');
})
Mutant 179 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^wo(wo|man)$/i, function (w) {
  return w.replace(/w/, 'e');
})
Mutant 180 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^wo(wo|man)$/i, function (w) {
  return w.replace(/wo/, 'ee');
})
Mutant 181 in index.js: /^(?:wo)?man$/i replaced with /^(?:wo)?cat$/i
Mutant 182 in index.js: /^(?:wo)?man$/i replaced with /^(?:wo)?(man\.|cat)$/i
Mutant 183 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/b/, 'e');
}
Mutant 184 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/^a/, 'e');
}
Mutant 185 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/a/, function () {
    return 'e';
  });
}
Mutant 186 in index.js: /a/ replaced with /a/ig
Mutant 187 in index.js: /a/ replaced with /[ab]/
Mutant 188 in index.js: 'e' replaced with []
Mutant 189 in index.js: 'e' replaced with {}
Mutant 190 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:giraffe|human|rat|alligator|skunk)\b/i, function (w) {
  return w;
})
Mutant 191 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:pizza|cake|chocolate|ice cream|sushi)\b/i, function (w) {
  return w;
})
Mutant 192 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:car|truck|bus|train|boat)\b/i, function (w) {
  return w;
})
Mutant 193 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /bison|cow|deer|fowl|halibut|mooose|sheep/i
Mutant 194 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /bison|cod|deer|fowl|halibut|moose/i
Mutant 195 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /bison|sheep|deer|fowl|halibut|moose/i
Mutant 196 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return "error";
}
Mutant 197 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return Math.random();
}
Mutant 198 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 199 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(/^\b(?:goose|hippo)\b/i)
Mutant 200 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(/^\b(?:snake|magic)s\b/i)
Mutant 201 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(/^\b(ghost|christmas)\b/i)
Mutant 202 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with /\\b(?:nose'es|zoom'es|awk'es|stomp'es|wombat'es|knee'es|sheep'ies|chicken'ies|shrimp'ies|slip'ies|mole'ies|dwarf'ies|dice'ies)\\b/i
Mutant 203 in index.js: tools.concat(clothes, games, illnesses, misc).join replaced with clothes.join | games.join | illnesses.join | misc.join
Mutant 204 in index.js: tools.concat(clothes, games, illnesses, misc).join replaced with {
  clothes,
  games,
  illnesses,
  misc
}.join
Mutant 205 in index.js: tools.concat(clothes, games, illnesses, misc).join replaced with clothes | games | illnesses | misc.join
Mutant 206 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(games, illnesses, misc, tools)
Mutant 207 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes, games, illnesses, ['shoes', 'pants'])
Mutant 208 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat([1, 2, 3], games, illnesses, misc)
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(games, illnesses, misc, tools)
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes, games, illnesses, ['shoes', 'pants'])
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat([1, 2, 3], games, illnesses, misc)
Mutant 209 in index.js: clothes replaced with Tools.concat(games)
Mutant 210 in index.js: clothes replaced with pluralize(functions)
Mutant 211 in index.js: games replaced with wheels
Mutant 212 in index.js: games replaced with dogs
Mutant 213 in index.js: games replaced with plots
Mutant 214 in index.js: illnesses replaced with pests
Mutant 215 in index.js: illnesses replaced with generalities
Mutant 216 in index.js: misc replaced with clothes.concat(games, illnesses, misc)
Mutant 217 in index.js: misc replaced with tools.concat(games, illnesses, misc)
Mutant 218 in index.js: misc replaced with [].concat(games, illnesses, misc)
Mutant 219 in index.js: '|' replaced with '|<'
Mutant 220 in index.js: '|' replaced with '|>+'
Mutant 221 in index.js: '|' replaced with '|>-'
Mutant 222 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/i)
Mutant 223 in index.js: addRule replaced with /neg$/i
Mutant 224 in index.js: addRule replaced with /m$/i
Mutant 225 in index.js: addRule replaced with /nds$/i
Mutant 226 in index.js: /ics$/i replaced with /ics$|rics$/i
Mutant 227 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 's';
}
Mutant 228 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.length;
}
Mutant 229 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 's' + 's';
}
Mutant 230 in index.js: addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w;
}) replaced with addRule(/(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w.replace(/e$/, '');
})
Mutant 231 in index.js: addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)/i, function (w) {
  return w + 's';
})
Mutant 232 in index.js: /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i replaced with variable
Mutant 233 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 's';
}
Mutant 234 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return type(w);
}
Mutant 235 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w * 2;
}
Mutant 236 in index.js: num !== 1 || num === undefined replaced with num !== 1 || num === false
Mutant 237 in index.js: num !== 1 || num === undefined replaced with num !== 1 || num !== 1
Mutant 238 in index.js: num !== 1 || num === undefined replaced with num !== 1 || NaN
Mutant 239 in index.js: i < rules.length replaced with i <= rules.length
Mutant 240 in index.js: i < rules.length replaced with i < rules.length - 1
Mutant 241 in index.js: i < rules.length replaced with i >= 0 && i < rules.length
Mutant 242 in index.js: i++ replaced with i--
Mutant 243 in index.js: i++ replaced with i += 2
Mutant 244 in index.js: i++ replaced with i = 0
Mutant 245 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with type(rule[0]) !== 'RegExp' || !rule[0].test(word)
Mutant 246 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with typeof rule[0] !== 'function' || !rule[0](word)
Mutant 247 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with type(rule[0]) === 'string' && rule[0] === word
Mutant 248 in index.js: rule[0] replaced with rule[1]
Mutant 249 in index.js: rule[0] replaced with rule[2]
Mutant 250 in index.js: rule[0] replaced with rules[i][0]
Mutant 251 in index.js: rule[0].test replaced with rule[0].exec
Mutant 252 in index.js: rule[0].test replaced with rule[1].split
Mutant 253 in index.js: rule[0].test replaced with rule[0].search
Mutant 254 in index.js: word replaced with word.replace(/(\w+)$/, '$1es')
Mutant 255 in index.js: word replaced with word + 's' + word
Mutant 256 in index.js: word replaced with word.replace(/([^s])$/, '$1s')
Mutant 257 in index.js: type replaced with type + 1
Mutant 258 in index.js: rule[1] replaced with rule[2]
Mutant 259 in index.js: rule[1] replaced with rule[0]
Mutant 260 in index.js: rule[1] replaced with rule[(1, 1)]
Mutant 261 in index.js: rule[1] replaced with rule[0]
Mutant 262 in index.js: rule[1] replaced with rule[i]
Mutant 263 in index.js: rule[1] replaced with rule[i] = rule[0]
Mutant 264 in index.js: word replaced with word + 's'
Mutant 265 in index.js: word replaced with word.substr(0, word.length - 1)
Mutant 266 in index.js: word replaced with word.substr(1, word.length - 1)
Mutant 267 in index.js: rule[0] replaced with 42
Mutant 268 in index.js: rule[0] replaced with null
Mutant 269 in index.js: rule[0] replaced with function () {
  return Math.random();
}
Mutant 270 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with type(rule[0]) === 'String' && rule[0] !== word
Mutant 271 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with type(rule[0]) === 'String' && rule[0] === word.toLowerCase()
Mutant 272 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with type(rule[0]) === 'RegExp' && rule[0].test(word)
Mutant 273 in index.js: rule[0] replaced with rule[1]
Mutant 274 in index.js: rule[0] replaced with rule.length
Mutant 275 in index.js: type replaced with "undefined"
Mutant 276 in index.js: type replaced with "null"
Mutant 277 in index.js: type replaced with "typeof"
Mutant 278 in index.js: rule[1] replaced with rule[0]
Mutant 279 in index.js: rule[1] replaced with ''
Mutant 280 in index.js: rule[1] replaced with null
Mutant 281 in index.js: rule[1] replaced with rule[0]
Mutant 282 in index.js: rule[1] replaced with 42
Mutant 283 in index.js: rule[1] replaced with rule[2]
Mutant 284 in index.js: word replaced with word + 'es'
Mutant 285 in index.js: word replaced with word + 's'
Mutant 286 in index.js: word replaced with word.substr(1) + 'es'
Mutant 287 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural === undefined && null
Mutant 288 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural !== undefined || null
Mutant 289 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural === undefined && null === undefined
Mutant 290 in index.js: plural(this, num) replaced with plural(true)
Mutant 291 in index.js: plural(this, num) replaced with plural(`num - 1`)
Mutant 292 in index.js: plural(this, num) replaced with plural(`num + 1`)
Mutant 293 in index.js: this replaced with null
Mutant 294 in index.js: this replaced with undefined
Mutant 295 in index.js: this replaced with {}
Mutant 296 in index.js: num replaced with `num * num`
Mutant 297 in index.js: num replaced with `num + 1`
Mutant 298 in index.js: num replaced with `Math.random()`
[32m21:22:35 (2646) INFO Instrumenter[39m Instrumented 1 source file(s) with 299 mutant(s)
[32m21:22:35 (2646) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m21:22:36 (2646) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m21:22:36 (2646) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m21:22:36 (2646) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 494 ms, overhead 1 ms).
Mutation testing 6% (elapsed: <1m, remaining: ~2m) 20/299 tested (1 survived, 0 timed out)
Mutation testing 13% (elapsed: <1m, remaining: ~2m) 40/299 tested (4 survived, 0 timed out)
Mutation testing 19% (elapsed: <1m, remaining: ~2m) 59/299 tested (9 survived, 0 timed out)
Mutation testing 26% (elapsed: <1m, remaining: ~1m) 79/299 tested (10 survived, 0 timed out)
Mutation testing 33% (elapsed: <1m, remaining: ~1m) 99/299 tested (15 survived, 0 timed out)
Mutation testing 40% (elapsed: ~1m, remaining: ~1m) 120/299 tested (22 survived, 0 timed out)
Mutation testing 46% (elapsed: ~1m, remaining: ~1m) 140/299 tested (34 survived, 0 timed out)
Mutation testing 53% (elapsed: ~1m, remaining: ~1m) 160/299 tested (35 survived, 0 timed out)
Mutation testing 60% (elapsed: ~1m, remaining: <1m) 180/299 tested (35 survived, 0 timed out)
Mutation testing 66% (elapsed: ~1m, remaining: <1m) 200/299 tested (38 survived, 0 timed out)
Mutation testing 73% (elapsed: ~1m, remaining: <1m) 221/299 tested (41 survived, 0 timed out)
Mutation testing 80% (elapsed: ~2m, remaining: <1m) 242/299 tested (46 survived, 0 timed out)
Mutation testing 83% (elapsed: ~2m, remaining: <1m) 251/299 tested (47 survived, 1 timed out)
Mutation testing 90% (elapsed: ~2m, remaining: <1m) 271/299 tested (49 survived, 1 timed out)
Mutation testing 97% (elapsed: ~2m, remaining: <1m) 292/299 tested (62 survived, 1 timed out)

All tests
  ✓ All tests (killed 229)

[Survived] PrecomputedMutator
index.js:10:17
-     rules.unshift([match, result])
+     rules.unshift(function () {
+     return [match, result];
+   }())

[Survived] PrecomputedMutator
index.js:19:1
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$|sh$/i, function (w) {
+     return w + 'es';
+   })

[Survived] PrecomputedMutator
index.js:19:1
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$|(s(h)?)$/i, function (w) {
+     return w + 'es';
+   })

[Survived] PrecomputedMutator
index.js:19:1
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$|ssh$/i, function (w) {
+     return w + 'es';
+   })

[Survived] PrecomputedMutator
index.js:22:9
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus|foo/i, function(w) { return w.substr(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:9
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus|bar/i, function(w) { return w.substr(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:9
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus|qux/i, function(w) { return w.substr(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:71
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substring(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:80
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr('', w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/crisis|thesis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:24:49
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.substring(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:49
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.slice(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:27:1
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiouy]o$/i, function (w) {
+     return w + 'os';
+   });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiou]o$/i, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:28:9
-   addRule(/[^aeiouy]o$/i, function(w) { return w + 'es' });
+   addRule(/[^aeiouy]o{1,3}$/i, function(w) { return w + 'es' });

[Survived] PrecomputedMutator
index.js:33:7
-     if (w === 'dwarf' || w === 'roof') {
+     if (w.toLowerCase() === 'dwarf' || w.toLowerCase() === 'roof') {

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacterias')

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacteriums', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacteria', 'bacteriums')

[Survived] PrecomputedMutator
index.js:40:9
-   addRule('bacterium', 'bacteria')
+   addRule('bacteria', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:9
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium' + 's', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:9
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium'[0] + 'ea', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacterium')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacteriuma')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacteriaa')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('celo', 'cello')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cello', 'violino')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('youtube', 'youtubes')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cele', 'cellos')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cell', 'cellos')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'c')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'celloes')

[Survived] PrecomputedMutator
index.js:43:1
-   addRule('die', 'dice')
+   addRule('die', 'dice', 1)

[Survived] PrecomputedMutator
index.js:43:1
-   addRule('die', 'dice')
+   addRule('die', 'dice', function () {})

[Survived] PrecomputedMutator
index.js:43:1
-   addRule('die', 'dice')
+   addRule('die', 'dice', function (word, num) {
+     return word + 's';
+   })

[Survived] PrecomputedMutator
index.js:49:26
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function (w) {
+     return w.replace(/a/, function () {
+       return 'e';
+     });
+   })

[Survived] PrecomputedMutator
index.js:49:57
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/ig, 'e') })

[Survived] PrecomputedMutator
index.js:49:57
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/[ab]/, 'e') })

[Survived] PrecomputedMutator
index.js:63:71
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, clothes.concat(games, illnesses, misc)).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:71
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, tools.concat(games, illnesses, misc)).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:71
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, [].concat(games, illnesses, misc)).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:67:9
-   addRule(/ics$/i, function(w) { return w })
+   addRule(/ics$|rics$/i, function(w) { return w })

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num !== 1 || num === false) {

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num !== 1 || num !== 1) {

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num !== 1 || NaN) {

[Survived] PrecomputedMutator
index.js:77:17
-       for (i = 0; i < rules.length; i++) {
+       for (i = 0; i >= 0 && i < rules.length; i++) {

[Survived] PrecomputedMutator
index.js:80:16
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (type(rules[i][0]) === 'RegExp' && rule[0].test(word)) {

[Survived] PrecomputedMutator
index.js:80:41
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (type(rule[0]) === 'RegExp' && rule[0].exec(word)) {

[Survived] PrecomputedMutator
index.js:81:21
-           return type(rule[1]) === 'Function' ? rule[1](word, rule[0]) : rule[1]
+           return type(rule[(1, 1)]) === 'Function' ? rule[1](word, rule[0]) : rule[1]

[Survived] PrecomputedMutator
index.js:83:11
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (type(rule[0]) === 'String' && rule[0] === word.toLowerCase()) {

[Survived] PrecomputedMutator
index.js:83:16
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (type(rule[1]) === 'String' && rule[0] === word) {

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[0]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type('') === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(null) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[0](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? 42(word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[2](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word + 'es') : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word + 's') : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word.substr(1) + 'es') : rule[1]

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(true)

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(`num - 1`)

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(`num + 1`)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(null, num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(undefined, num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural({}, num)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, `num * num`)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, `num + 1`)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, `Math.random()`)

Ran 1.00 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   76.92 |      229 |         1 |         69 |        0 |        0 |
 index.js |   76.92 |      229 |         1 |         69 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m21:25:10 (2646) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/reports/mutation/mutation.html
[32m21:25:10 (2646) INFO MutationTestExecutor[39m Done in 2 minutes 36 seconds.

real	2m37.433s
user	2m39.206s
sys	0m27.473s
