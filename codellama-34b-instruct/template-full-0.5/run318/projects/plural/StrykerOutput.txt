*** using precomputed mutations ***
[32m10:40:19 (2574) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m10:40:19 (2574) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m10:40:19 (2574) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m10:40:19 (2574) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m10:40:19 (2574) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m10:40:19 (2574) INFO ProjectReader[39m Found 1 of 632 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 289 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.5/mutants.json ***
Mutant 0 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(8, -2)
Mutant 1 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(8, -3)
Mutant 2 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(8, 1)
Mutant 3 in index.js: obj replaced with obj.toString()
Mutant 4 in index.js: obj replaced with obj.valueOf()
Mutant 5 in index.js: obj replaced with obj.toLocaleString()
Mutant 6 in index.js: 8 replaced with 6
Mutant 7 in index.js: 8 replaced with 7
Mutant 8 in index.js: 8 replaced with 9
Mutant 9 in index.js: -1 replaced with -2
Mutant 10 in index.js: -1 replaced with 1
Mutant 11 in index.js: -1 replaced with 0
Mutant 12 in index.js: rules.unshift replaced with rules.push
Mutant 13 in index.js: rules.unshift replaced with rules.shift
Mutant 14 in index.js: [match, result] replaced with [match, result.toLowerCase()]
Mutant 15 in index.js: [match, result] replaced with [match, result + "s"]
Mutant 16 in index.js: [match, result] replaced with [match, result.substr(1)]
Mutant 17 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiou]y$|quy$/gi, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
})
Mutant 18 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|quy$/
Mutant 19 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|quy$/g
Mutant 20 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|quy$/m
Mutant 21 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'es';
}
Mutant 22 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 's';
}
Mutant 23 in index.js: w.substr(0, w.length - 1) replaced with w.substr(0, w.length - 2)
Mutant 24 in index.js: w.substr(0, w.length - 1) replaced with w.substr(1, w.length - 1)
Mutant 25 in index.js: w.substr(0, w.length - 1) replaced with w.substr(w.length - 2, w.length - 1)
Mutant 26 in index.js: w.substr replaced with w.substring
Mutant 27 in index.js: w.substr replaced with w.slice
Mutant 28 in index.js: 0 replaced with w.length - 2
Mutant 29 in index.js: 0 replaced with w.length - 3
Mutant 30 in index.js: w.length - 1 replaced with w.length - 2
Mutant 31 in index.js: w.length - 1 replaced with w.length + 1
Mutant 32 in index.js: w.length - 1 replaced with w.length * 2
Mutant 33 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|s$/i, function (w) {
  return w + 's';
})
Mutant 34 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|s$/i, function (w) {
  return w;
})
Mutant 35 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es' + 's';
})
Mutant 36 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|s$/g
Mutant 37 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|s$/m
Mutant 38 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 's';
}
Mutant 39 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}
Mutant 40 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 's';
}
Mutant 41 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 1) + 'i';
})
Mutant 42 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'ii';
})
Mutant 43 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /nucleus|syllabus|focus|fungus|cactus/g
Mutant 44 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'us';
}
Mutant 45 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'es';
}
Mutant 46 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 's';
}
Mutant 47 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 2, 0)
Mutant 48 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length, w.length - 2)
Mutant 49 in index.js: w.substr replaced with w.substring
Mutant 50 in index.js: 0 replaced with -1
Mutant 51 in index.js: 0 replaced with Math.random()
Mutant 52 in index.js: w.length - 2 replaced with w.length + 1
Mutant 53 in index.js: w.length - 2 replaced with w.length * 2
Mutant 54 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'is';
})
Mutant 55 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
})
Mutant 56 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'ies';
})
Mutant 57 in index.js: /thesis|crisis/i replaced with /thesis|crises/i
Mutant 58 in index.js: /thesis|crisis/i replaced with /thesis|cris|is/i
Mutant 59 in index.js: /thesis|crisis/i replaced with /thesis|cris|s/i
Mutant 60 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 3) + 'es';
}
Mutant 61 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 's';
}
Mutant 62 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 's';
}
Mutant 63 in index.js: w.substr(0, w.length - 2) replaced with w.substr(1, w.length - 1)
Mutant 64 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length, w.length - 1)
Mutant 65 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1, w.length - 2)
Mutant 66 in index.js: w.substr replaced with w.substring
Mutant 67 in index.js: 0 replaced with -1
Mutant 68 in index.js: 0 replaced with null
Mutant 69 in index.js: w.length - 2 replaced with w.length + 1
Mutant 70 in index.js: w.length - 2 replaced with w.length * 2
Mutant 71 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 1) + 'ices';
})
Mutant 72 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
})
Mutant 73 in index.js: /appendix|index/i replaced with /appendix|index|corpus/i
Mutant 74 in index.js: /appendix|index/i replaced with /appendix|index|corpus|[^x]/i
Mutant 75 in index.js: /appendix|index/i replaced with /appendix|index|corpus|[^x]|[^i]/i
Mutant 76 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'ys';
}
Mutant 77 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'es';
}
Mutant 78 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 's';
}
Mutant 79 in index.js: w.substr(0, w.length - 2) replaced with w.substr(0, w.length + 1)
Mutant 80 in index.js: w.substr(0, w.length - 2) replaced with w.substr(0, w.length)
Mutant 81 in index.js: w.substr replaced with w.substring
Mutant 82 in index.js: w.substr replaced with w.slice
Mutant 83 in index.js: 0 replaced with -1
Mutant 84 in index.js: 0 replaced with word.length - 2
Mutant 85 in index.js: w.length - 2 replaced with w.length - 3
Mutant 86 in index.js: w.length - 2 replaced with w.length - 4
Mutant 87 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
})
Mutant 88 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[aeiouy]o$/i, function (w) {
  return w.replace(/o$/, 'os');
})
Mutant 89 in index.js: /[aeiouy]o$/i replaced with /[aeiouy]o$/
Mutant 90 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 's' + 's';
}
Mutant 91 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'es';
}
Mutant 92 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 's';
}
Mutant 93 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 's';
})
Mutant 94 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'ies';
})
Mutant 95 in index.js: /[^aeiouy]o$/i replaced with /[^aeiouy]o$/
Mutant 96 in index.js: /[^aeiouy]o$/i replaced with /[^aeiouy]o$/g
Mutant 97 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 's';
}
Mutant 98 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 'ies';
}
Mutant 99 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 's' + w;
}
Mutant 100 in index.js: w === 'dwarf' || w === 'roof' replaced with w !== 'dwarf' && w !== 'roof'
Mutant 101 in index.js: w === 'dwarf' || w === 'roof' replaced with w === 'dwarf' || w === 'roof' || w === 'shoe'
Mutant 102 in index.js: w.replace(regex, 'ves') replaced with w.replace(regex, 's')
Mutant 103 in index.js: w.replace(regex, 'ves') replaced with w.replace(regex, 'es')
Mutant 104 in index.js: regex replaced with w.replace(regex, 'ves')
Mutant 105 in index.js: 'ves' replaced with 's'
Mutant 106 in index.js: 'ves' replaced with 'es'
Mutant 107 in index.js: 'ves' replaced with 'es' + 's'
Mutant 108 in index.js: addRule('criterion', 'criteria') replaced with addRule('criterion', 'criterions')
Mutant 109 in index.js: addRule('criterion', 'criteria') replaced with addRule('criterion', 'criterion')
Mutant 110 in index.js: 'criterion' replaced with 'criterion' + 's'
Mutant 111 in index.js: 'criterion' replaced with plural('criterion')
Mutant 112 in index.js: 'criteria' replaced with 'criterions'
Mutant 113 in index.js: 'criteria' replaced with 'criterion'
Mutant 114 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', 'bacterias')
Mutant 115 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacteria', 'bacteria')
Mutant 116 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', 'bacterium')
Mutant 117 in index.js: 'bacterium' replaced with 'bacteria'
Mutant 118 in index.js: 'bacterium' replaced with 'bacteria' + 's'
Mutant 119 in index.js: 'bacteria' replaced with 'bacterium'
Mutant 120 in index.js: 'bacteria' replaced with 'bacterium' + 's'
Mutant 121 in index.js: addRule('memo', 'memos') replaced with addRule('memo', 'memos', 'memos')
Mutant 122 in index.js: addRule('memo', 'memos') replaced with addRule('memo', 'memos', 'memoes')
Mutant 123 in index.js: 'memo' replaced with 'memo' + 's'
Mutant 124 in index.js: 'memo' replaced with 'memo' + 'es'
Mutant 125 in index.js: 'memo' replaced with 'memo' + 's' + 's'
Mutant 126 in index.js: 'memos' replaced with 'memo'
Mutant 127 in index.js: 'memos' replaced with 'memories'
Mutant 128 in index.js: 'memos' replaced with 'memoes'
Mutant 129 in index.js: addRule('cello', 'cellos') replaced with addRule('cellos', 'cello')
Mutant 130 in index.js: addRule('cello', 'cellos') replaced with addRule('cellos', 'cellos')
Mutant 131 in index.js: 'cello' replaced with 'cellos'
Mutant 132 in index.js: 'cello' replaced with 'violin'
Mutant 133 in index.js: 'cellos' replaced with 'cell'
Mutant 134 in index.js: 'cellos' replaced with 'cello'
Mutant 135 in index.js: addRule('die', 'dice') replaced with addRule('die', 'die')
Mutant 136 in index.js: addRule('die', 'dice') replaced with addRule('die', 'dies')
Mutant 137 in index.js: addRule('die', 'dice') replaced with addRule('die', function (w) {
  return w + 's';
})
Mutant 138 in index.js: 'die' replaced with 'dice'
Mutant 139 in index.js: 'die' replaced with 'dies'
Mutant 140 in index.js: 'dice' replaced with 'die'
Mutant 141 in index.js: 'dice' replaced with 'dies'
Mutant 142 in index.js: addRule('goose', 'geese') replaced with addRule('goose', 'goose')
Mutant 143 in index.js: addRule('goose', 'geese') replaced with addRule('goose', 'gooses')
Mutant 144 in index.js: 'goose' replaced with 'goat'
Mutant 145 in index.js: 'goose' replaced with 'geese'
Mutant 146 in index.js: 'goose' replaced with 'gooses'
Mutant 147 in index.js: 'geese' replaced with 'goose'
Mutant 148 in index.js: 'geese' replaced with 'gooses'
Mutant 149 in index.js: addRule('mouse', 'mice') replaced with addRule('mice', 'mice')
Mutant 150 in index.js: addRule('mouse', 'mice') replaced with addRule('mouse', 'mouses')
Mutant 151 in index.js: addRule('mouse', 'mice') replaced with addRule('cat', 'cat')
Mutant 152 in index.js: 'mouse' replaced with 'mice'
Mutant 153 in index.js: 'mouse' replaced with 'mouses'
Mutant 154 in index.js: 'mouse' replaced with 'mous'
Mutant 155 in index.js: 'mice' replaced with 'mouse'
Mutant 156 in index.js: 'mice' replaced with 'mouses'
Mutant 157 in index.js: 'mice' replaced with 'mous'
Mutant 158 in index.js: addRule('person', 'people') replaced with addRule('person', 'peepz')
Mutant 159 in index.js: addRule('person', 'people') replaced with addRule('person', 'peeps')
Mutant 160 in index.js: 'person' replaced with 'people'
Mutant 161 in index.js: 'person' replaced with 'persons'
Mutant 162 in index.js: 'person' replaced with 'individuals'
Mutant 163 in index.js: 'people' replaced with 'persons'
Mutant 164 in index.js: 'people' replaced with 'humans'
Mutant 165 in index.js: 'people' replaced with 'individuals'
Mutant 166 in index.js: addRule('chilli', 'chillies') replaced with addRule('chilli', 'chillis')
Mutant 167 in index.js: 'chilli' replaced with 'chillis'
Mutant 168 in index.js: 'chilli' replaced with 'chillies'
Mutant 169 in index.js: 'chilli' replaced with 'chill'
Mutant 170 in index.js: 'chillies' replaced with 'chilli'
Mutant 171 in index.js: 'chillies' replaced with 'chillis'
Mutant 172 in index.js: 'chillies' replaced with 'chill'
Mutant 173 in index.js: /^(?:wo)?man$/i replaced with /^(?:wo)?woman$/i
Mutant 174 in index.js: /^(?:wo)?man$/i replaced with /^(?:wo)?man$/
Mutant 175 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/a/g, 'e');
}
Mutant 176 in index.js: w.replace(/a/, 'e') replaced with w.replace(/b/, 'e')
Mutant 177 in index.js: w.replace(/a/, 'e') replaced with w.replace(/a/, 'f')
Mutant 178 in index.js: w.replace(/a/, 'e') replaced with w.replace(/a/, 'a')
Mutant 179 in index.js: /a/ replaced with /b/
Mutant 180 in index.js: /a/ replaced with /a+/
Mutant 181 in index.js: /a/ replaced with /a?/
Mutant 182 in index.js: 'e' replaced with 'a'
Mutant 183 in index.js: 'e' replaced with 'o'
Mutant 184 in index.js: 'e' replaced with 'i'
Mutant 185 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/[aeiouy]o$/i)
Mutant 186 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/)
Mutant 187 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i)
Mutant 188 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/
Mutant 189 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/g
Mutant 190 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/gi
Mutant 191 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 's';
}
Mutant 192 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 1);
}
Mutant 193 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.replace(/s$/, '');
}
Mutant 194 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w.slice(0, -1);
})
Mutant 195 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w.toUpperCase();
})
Mutant 196 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')\\b', 'i')
Mutant 197 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')\\b', 'g')
Mutant 198 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes.concat(games, illnesses, misc))
Mutant 199 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes + games + illnesses + misc)
Mutant 200 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes.concat(games, illnesses, misc).join())
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes.concat(games, illnesses, misc))
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes + games + illnesses + misc)
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes.concat(games, illnesses, misc).join())
Mutant 201 in index.js: games replaced with games.concat(illnesses)
Mutant 202 in index.js: games replaced with games.slice(0, -1)
Mutant 203 in index.js: games replaced with games.filter(function (word) {
  return word.length > 5;
})
Mutant 204 in index.js: illnesses replaced with illnesses.concat(["new illness"])
Mutant 205 in index.js: illnesses replaced with illnesses.slice(0, -1)
Mutant 206 in index.js: illnesses replaced with illnesses.filter(function (illness) {
  return illness !== "rabie";
})
Mutant 207 in index.js: misc replaced with misc.concat(illnesses)
Mutant 208 in index.js: misc replaced with misc.filter(function (word) {
  return word.length > 5;
})
Mutant 209 in index.js: misc replaced with misc.map(function (word) {
  return word.toUpperCase();
})
Mutant 210 in index.js: '|' replaced with '&'
Mutant 211 in index.js: '|' replaced with '^'
Mutant 212 in index.js: '|' replaced with '$'
Mutant 213 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 214 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(1);
}
Mutant 215 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.replace(/s$/, '');
}
Mutant 216 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/g, function (w) {
  return w.replace(/ics$/, "ices");
})
Mutant 217 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/i, function (w) {
  return w.replace(/ics$/, "ices");
})
Mutant 218 in index.js: /ics$/i replaced with /ics$/
Mutant 219 in index.js: /ics$/i replaced with /ics$/g
Mutant 220 in index.js: /ics$/i replaced with /ics$/m
Mutant 221 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 'es';
}
Mutant 222 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 's';
}
Mutant 223 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'es';
}
Mutant 224 in index.js: addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/gi, function (w) {
  return w;
})
Mutant 225 in index.js: addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w.toLowerCase();
})
Mutant 226 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 227 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.charAt(0).toUpperCase() + w.slice(1);
}
Mutant 228 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.split('').reverse().join('');
}
Mutant 229 in index.js: num !== 1 || num === undefined replaced with num !== 1
Mutant 230 in index.js: num !== 1 || num === undefined replaced with num === undefined
Mutant 231 in index.js: i < rules.length replaced with i <= rules.length
Mutant 232 in index.js: i < rules.length replaced with i >= rules.length
Mutant 233 in index.js: i < rules.length replaced with i = rules.length + 1
Mutant 234 in index.js: i++ replaced with i = i + 2
Mutant 235 in index.js: i++ replaced with i = -1
Mutant 236 in index.js: i++ replaced with i = rules.length - 1
Mutant 237 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with rule[0].exec(word)
Mutant 238 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with rule[0].match(word)
Mutant 239 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with word.match(rule[0])
Mutant 240 in index.js: type replaced with Object.prototype.toString
Mutant 241 in index.js: rule[0] replaced with rule[1]
Mutant 242 in index.js: rule[0] replaced with rule[2]
Mutant 243 in index.js: rule[0] replaced with rule[3]
Mutant 244 in index.js: word replaced with word + 's'
Mutant 245 in index.js: word replaced with word + 'es'
Mutant 246 in index.js: word replaced with word + (num === 1 ? '' : 's')
Mutant 247 in index.js: type replaced with typeof Object
Mutant 248 in index.js: rule[1] replaced with rule[0]
Mutant 249 in index.js: rule[1] replaced with rule[1](word)
Mutant 250 in index.js: rule[1] replaced with rule[1](word, rule[0])
Mutant 251 in index.js: rule[1](word, rule[0]) replaced with rule[1](word, rule[1])
Mutant 252 in index.js: rule[1](word, rule[0]) replaced with rule[1](word, rule[2])
Mutant 253 in index.js: rule[1](word, rule[0]) replaced with rule[1](word, rule[3])
Mutant 254 in index.js: rule[1] replaced with rule[2]
Mutant 255 in index.js: rule[1] replaced with rule[0]
Mutant 256 in index.js: rule[1] replaced with rule[1] + 's'
Mutant 257 in index.js: word replaced with word + 's'
Mutant 258 in index.js: word replaced with word.slice(0, -1)
Mutant 259 in index.js: word replaced with word + 'es'
Mutant 260 in index.js: rule[0] replaced with rule[1]
Mutant 261 in index.js: rule[0] replaced with rule.test(word)
Mutant 262 in index.js: rule[0] replaced with word.match(rule[0])
Mutant 263 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with type(rule[0]) === 'String' && rule[0] !== word
Mutant 264 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with type(rule[0]) === 'String' && rule[0].length === word.length
Mutant 265 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with type(rule[0]) === 'String' && rule[0].toLowerCase() === word.toLowerCase()
Mutant 266 in index.js: type replaced with typeof type
Mutant 267 in index.js: rule[0] replaced with rule[1]
Mutant 268 in index.js: rule[0] replaced with rule[2]
Mutant 269 in index.js: rule[0] replaced with rule[Math.floor(Math.random() * rules.length)]
Mutant 270 in index.js: type replaced with Object.prototype.type
Mutant 271 in index.js: rule[1] replaced with rule[0]
Mutant 272 in index.js: rule[1] replaced with rule[1][0]
Mutant 273 in index.js: rule[1] replaced with rule[1].slice(1)
Mutant 274 in index.js: word replaced with word + 's'
Mutant 275 in index.js: word replaced with word.slice(0, -1) + 'ies'
Mutant 276 in index.js: word replaced with word.replace(/y$/, 'ies')
Mutant 277 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = function () {
  return this;
}
Mutant 278 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = function () {
  return this.toUpperCase();
}
Mutant 279 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = function () {
  return this.split('').reverse().join('');
}
Mutant 280 in index.js: plural(this, num) replaced with plural(this.length)
Mutant 281 in index.js: plural(this, num) replaced with plural(num + 1)
Mutant 282 in index.js: plural(this, num) replaced with plural(this.substring(1))
Mutant 283 in index.js: this replaced with null
Mutant 284 in index.js: this replaced with undefined
Mutant 285 in index.js: this replaced with {}
Mutant 286 in index.js: num replaced with num + 1
Mutant 287 in index.js: num replaced with num * 2
Mutant 288 in index.js: num replaced with num - 1
[32m10:40:20 (2574) INFO Instrumenter[39m Instrumented 1 source file(s) with 289 mutant(s)
[32m10:40:20 (2574) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m10:40:21 (2574) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m10:40:21 (2574) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m10:40:21 (2574) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 487 ms, overhead 1 ms).
Mutation testing 6% (elapsed: <1m, remaining: ~2m) 20/289 tested (1 survived, 0 timed out)
Mutation testing 13% (elapsed: <1m, remaining: ~2m) 40/289 tested (4 survived, 0 timed out)
Mutation testing 20% (elapsed: <1m, remaining: ~1m) 60/289 tested (7 survived, 0 timed out)
Mutation testing 27% (elapsed: <1m, remaining: ~1m) 80/289 tested (10 survived, 0 timed out)
Mutation testing 34% (elapsed: <1m, remaining: ~1m) 100/289 tested (17 survived, 0 timed out)
Mutation testing 41% (elapsed: ~1m, remaining: ~1m) 121/289 tested (25 survived, 0 timed out)
Mutation testing 48% (elapsed: ~1m, remaining: ~1m) 141/289 tested (33 survived, 0 timed out)
Mutation testing 55% (elapsed: ~1m, remaining: ~1m) 161/289 tested (33 survived, 0 timed out)
Mutation testing 62% (elapsed: ~1m, remaining: <1m) 181/289 tested (36 survived, 0 timed out)
Mutation testing 69% (elapsed: ~1m, remaining: <1m) 201/289 tested (39 survived, 0 timed out)
Mutation testing 76% (elapsed: ~1m, remaining: <1m) 222/289 tested (45 survived, 0 timed out)
Mutation testing 81% (elapsed: ~2m, remaining: <1m) 236/289 tested (48 survived, 0 timed out)
Mutation testing 87% (elapsed: ~2m, remaining: <1m) 252/289 tested (49 survived, 1 timed out)
Mutation testing 94% (elapsed: ~2m, remaining: <1m) 272/289 tested (52 survived, 1 timed out)

All tests
  ✓ All tests (killed 219)

[Survived] PrecomputedMutator
index.js:6:41
-     return Object.prototype.toString.call(obj).slice(8, -1)
+     return Object.prototype.toString.call(obj.valueOf()).slice(8, -1)

[Survived] PrecomputedMutator
index.js:16:50
-   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })
+   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substring(0, w.length - 1) + 'ies' })

[Survived] PrecomputedMutator
index.js:16:50
-   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })
+   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.slice(0, w.length - 1) + 'ies' })

[Survived] PrecomputedMutator
index.js:19:9
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$|s$/m, function(w) { return w + 'es' })

[Survived] PrecomputedMutator
index.js:22:71
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substring(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:80
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(Math.random(), w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|cris|is/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:48
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.substring(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:57
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.substr(null, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:24:9
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index|corpus/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:49
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.substring(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:49
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.slice(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:27:1
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiouy]o$/i, function (w) {
+     return w + 'es';
+   });

[Survived] PrecomputedMutator
index.js:27:1
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[aeiouy]o$/i, function (w) {
+     return w.replace(/o$/, 'os');
+   });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[aeiouy]o$/, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:28:9
-   addRule(/[^aeiouy]o$/i, function(w) { return w + 'es' });
+   addRule(/[^aeiouy]o$/, function(w) { return w + 'es' });

[Survived] PrecomputedMutator
index.js:28:9
-   addRule(/[^aeiouy]o$/i, function(w) { return w + 'es' });
+   addRule(/[^aeiouy]o$/g, function(w) { return w + 'es' });

[Survived] PrecomputedMutator
index.js:33:7
-     if (w === 'dwarf' || w === 'roof') {
+     if (w === 'dwarf' || w === 'roof' || w === 'shoe') {

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacterias')

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacteria', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacterium')

[Survived] PrecomputedMutator
index.js:40:9
-   addRule('bacterium', 'bacteria')
+   addRule('bacteria', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:9
-   addRule('bacterium', 'bacteria')
+   addRule('bacteria' + 's', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacterium')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacterium' + 's')

[Survived] PrecomputedMutator
index.js:41:1
-   addRule('memo', 'memos')
+   addRule('memo', 'memos', 'memos')

[Survived] PrecomputedMutator
index.js:41:1
-   addRule('memo', 'memos')
+   addRule('memo', 'memos', 'memoes')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cellos', 'cello')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cellos', 'cellos')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cellos', 'cellos')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('violin', 'cellos')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'cell')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'cello')

[Survived] PrecomputedMutator
index.js:49:9
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/, function(w) { return w.replace(/a/, 'e') })

[Survived] PrecomputedMutator
index.js:49:26
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function (w) {
+     return w.replace(/a/g, 'e');
+   })

[Survived] PrecomputedMutator
index.js:49:57
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a+/, 'e') })

[Survived] PrecomputedMutator
index.js:52:9
-   addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function(w) { return w })
+   addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/, function(w) { return w })

[Survived] PrecomputedMutator
index.js:52:61
-   addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function(w) { return w })
+   addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
+     return w.replace(/s$/, '');
+   })

[Survived] PrecomputedMutator
index.js:63:31
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes.concat(games, illnesses, misc)).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:53
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games.concat(illnesses), illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:60
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses.concat(["new illness"]), misc).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:71
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc.concat(illnesses)).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:71
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc.map(function (word) {
+     return word.toUpperCase();
+   })).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:67:9
-   addRule(/ics$/i, function(w) { return w })
+   addRule(/ics$/, function(w) { return w })

[Survived] PrecomputedMutator
index.js:67:9
-   addRule(/ics$/i, function(w) { return w })
+   addRule(/ics$/m, function(w) { return w })

[Survived] PrecomputedMutator
index.js:70:1
-   addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function(w) { return w })
+   addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
+     return w.toLowerCase();
+   })

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num !== 1) {

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num === undefined) {

[Survived] PrecomputedMutator
index.js:80:11
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (word.match(rule[0])) {

[Survived] PrecomputedMutator
index.js:83:11
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (type(rule[0]) === 'String' && rule[0].toLowerCase() === word.toLowerCase()) {

[Survived] PrecomputedMutator
index.js:83:16
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (type(rule[1]) === 'String' && rule[0] === word) {

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[0]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1][0]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1].slice(1)) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word + 's') : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word.slice(0, -1) + 'ies') : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word.replace(/y$/, 'ies')) : rule[1]

[Survived] PrecomputedMutator
index.js:103:7
-     if (String.prototype.plural === undefined) {
+     if (String.prototype.plural = function () {
+     return this;
+   }) {

[Survived] PrecomputedMutator
index.js:103:7
-     if (String.prototype.plural === undefined) {
+     if (String.prototype.plural = function () {
+     return this.toUpperCase();
+   }) {

[Survived] PrecomputedMutator
index.js:103:7
-     if (String.prototype.plural === undefined) {
+     if (String.prototype.plural = function () {
+     return this.split('').reverse().join('');
+   }) {

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(this.length)

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(num + 1)

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(this.substring(1))

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(null, num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(undefined, num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural({}, num)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num + 1)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num * 2)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num - 1)

Ran 1.00 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   76.12 |      219 |         1 |         69 |        0 |        0 |
 index.js |   76.12 |      219 |         1 |         69 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m10:42:49 (2574) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/reports/mutation/mutation.html
[32m10:42:49 (2574) INFO MutationTestExecutor[39m Done in 2 minutes 30 seconds.

real	2m32.033s
user	2m32.159s
sys	0m27.317s
