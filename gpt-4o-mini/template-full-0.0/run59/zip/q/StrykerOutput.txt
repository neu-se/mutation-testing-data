*** using precomputed mutations ***
[32m14:36:09 (3408) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m14:36:09 (3408) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m14:36:09 (3408) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llmorpheus/llmorpheus/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m14:36:09 (3408) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m14:36:09 (3408) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m14:36:09 (3408) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1786 mutants from MUTATION_TESTING/template-full_gpt-4o-mini_0.0/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "object"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with bootstrap === undefined
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("callback", definition)
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", null)
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", "definition")
Mutant 6 in q.js: "promise" replaced with "callback"
Mutant 7 in q.js: "promise" replaced with "undefined"
Mutant 8 in q.js: "promise" replaced with "null"
Mutant 9 in q.js: definition replaced with null
Mutant 10 in q.js: definition replaced with undefined
Mutant 11 in q.js: definition replaced with "invalid"
Mutant 12 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "string"
Mutant 13 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "function" && typeof module === "object"
Mutant 14 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "undefined"
Mutant 15 in q.js: definition replaced with null
Mutant 16 in q.js: definition replaced with undefined
Mutant 17 in q.js: typeof define === "function" && define.amd replaced with typeof define === "object" && define.amd
Mutant 18 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && !define.amd
Mutant 19 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.commonjs
Mutant 20 in q.js: definition replaced with "promise"
Mutant 21 in q.js: definition replaced with definition.bind(null)
Mutant 22 in q.js: definition replaced with definition.call(this)
Mutant 23 in q.js: typeof ses !== "undefined" replaced with typeof ses === "object"
Mutant 24 in q.js: typeof ses !== "undefined" replaced with ses === null
Mutant 25 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined" || ses === null
Mutant 26 in q.js: !ses.ok() replaced with !ses.isValid()
Mutant 27 in q.js: !ses.ok() replaced with ses.ok() === false
Mutant 28 in q.js: !ses.ok() replaced with ses.ok() && false
Mutant 29 in q.js: ses.ok replaced with ses.ok !== true
Mutant 30 in q.js: ses.ok replaced with ses.isReady
Mutant 31 in q.js: ses.ok replaced with ses.ok === false
Mutant 32 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window === "undefined" && typeof self === "undefined"
Mutant 33 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof document !== "undefined"
Mutant 34 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof global !== "undefined"
Mutant 35 in q.js: definition replaced with null
Mutant 36 in q.js: definition replaced with undefined
Mutant 37 in q.js: captureLine replaced with captureLine + 1
Mutant 38 in q.js: captureLine replaced with captureLine * 2
Mutant 39 in q.js: captureLine replaced with undefined
Mutant 40 in q.js: head.next replaced with head === null
Mutant 41 in q.js: head.next replaced with head.next !== null
Mutant 42 in q.js: head.next replaced with head.task !== void 0
Mutant 43 in q.js: domain replaced with null
Mutant 44 in q.js: domain replaced with undefined
Mutant 45 in q.js: domain replaced with true
Mutant 46 in q.js: domain.enter replaced with domain.exit
Mutant 47 in q.js: runSingle(task, domain) replaced with runSingle(null, domain)
Mutant 48 in q.js: runSingle(task, domain) replaced with runSingle(task, null)
Mutant 49 in q.js: runSingle(task, domain) replaced with runSingle(task, task)
Mutant 50 in q.js: task replaced with undefined
Mutant 51 in q.js: task replaced with null
Mutant 52 in q.js: task replaced with function () {
  throw new Error("Task failed");
}
Mutant 53 in q.js: domain replaced with null
Mutant 54 in q.js: domain replaced with undefined
Mutant 55 in q.js: domain replaced with ""
Mutant 56 in q.js: laterQueue.length replaced with laterQueue.length + 1
Mutant 57 in q.js: laterQueue.length replaced with laterQueue.length - 1
Mutant 58 in q.js: laterQueue.length replaced with laterQueue.length * 2
Mutant 59 in q.js: laterQueue.pop replaced with laterQueue.length
Mutant 60 in q.js: laterQueue.pop replaced with laterQueue[0]
Mutant 61 in q.js: task replaced with null
Mutant 62 in q.js: task replaced with undefined
Mutant 63 in q.js: task replaced with task + 1
Mutant 64 in q.js: isNodeJS replaced with !isNodeJS
Mutant 65 in q.js: isNodeJS replaced with true
Mutant 66 in q.js: domain replaced with !domain
Mutant 67 in q.js: domain replaced with domain === null
Mutant 68 in q.js: domain replaced with domain !== undefined
Mutant 69 in q.js: domain.exit replaced with domain.enter
Mutant 70 in q.js: domain.exit replaced with void 0
Mutant 71 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1000)
Mutant 72 in q.js: setTimeout replaced with setInterval
Mutant 73 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 74 in q.js: setTimeout replaced with clearTimeout
Mutant 75 in q.js: 0 replaced with 1
Mutant 76 in q.js: 0 replaced with -1
Mutant 77 in q.js: 0 replaced with null
Mutant 78 in q.js: domain replaced with !domain
Mutant 79 in q.js: domain replaced with null
Mutant 80 in q.js: domain replaced with undefined
Mutant 81 in q.js: domain replaced with !domain
Mutant 82 in q.js: domain replaced with domain === null
Mutant 83 in q.js: domain replaced with domain !== undefined
Mutant 84 in q.js: domain.exit replaced with domain.enter
Mutant 85 in q.js: domain.exit replaced with domain = null
Mutant 86 in q.js: domain.exit replaced with head.domain = void 0
Mutant 87 in q.js: !flushing replaced with flushing
Mutant 88 in q.js: !flushing replaced with !head.next
Mutant 89 in q.js: !flushing replaced with true
Mutant 90 in q.js: typeof window !== "undefined" replaced with typeof document === "undefined"
Mutant 91 in q.js: typeof window !== "undefined" replaced with typeof window === "object"
Mutant 92 in q.js: typeof window !== "undefined" replaced with typeof global !== "undefined"
Mutant 93 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(document, flush)
Mutant 94 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(window, runSingle)
Mutant 95 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null, flush)
Mutant 96 in q.js: window replaced with null
Mutant 97 in q.js: window replaced with document
Mutant 98 in q.js: window replaced with undefined
Mutant 99 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "undefined"
Mutant 100 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "object"
Mutant 101 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "function" && false
Mutant 102 in q.js: 0 replaced with 1
Mutant 103 in q.js: 0 replaced with null
Mutant 104 in q.js: 0 replaced with undefined
Mutant 105 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1000)
Mutant 106 in q.js: setTimeout replaced with setInterval
Mutant 107 in q.js: 0 replaced with 1
Mutant 108 in q.js: 0 replaced with -1
Mutant 109 in q.js: 0 replaced with Math.random() * 1000
Mutant 110 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1000)
Mutant 111 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 112 in q.js: setTimeout replaced with clearTimeout
Mutant 113 in q.js: setTimeout replaced with setInterval
Mutant 114 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 115 in q.js: 0 replaced with 1
Mutant 116 in q.js: 0 replaced with -1
Mutant 117 in q.js: 0 replaced with null
Mutant 118 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 119 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 120 in q.js: task replaced with null
Mutant 121 in q.js: task replaced with undefined
Mutant 122 in q.js: task replaced with task + 1
Mutant 123 in q.js: !flushing replaced with flushing
Mutant 124 in q.js: !flushing replaced with !flushing && true
Mutant 125 in q.js: !flushing replaced with flushing === false
Mutant 126 in q.js: call.apply(f, arguments) replaced with call.apply(f, [])
Mutant 127 in q.js: call.apply(f, arguments) replaced with call.apply(f.call(this, 1, 2))
Mutant 128 in q.js: call.apply(f, arguments) replaced with call.apply(f.bind(this, 'test'))
Mutant 129 in q.js: call.apply replaced with call.call
Mutant 130 in q.js: call.apply replaced with call.bind
Mutant 131 in q.js: f replaced with this
Mutant 132 in q.js: f replaced with f.call(null)
Mutant 133 in q.js: f replaced with f.bind(window)
Mutant 134 in q.js: arguments replaced with []
Mutant 135 in q.js: arguments replaced with null
Mutant 136 in q.js: arguments replaced with this
Mutant 137 in q.js: uncurryThis replaced with Array.prototype.slice.call
Mutant 138 in q.js: uncurryThis replaced with Array.prototype.splice
Mutant 139 in q.js: uncurryThis replaced with Array.prototype.concat
Mutant 140 in q.js: Array.prototype.slice replaced with Array.prototype.splice
Mutant 141 in q.js: Array.prototype.slice replaced with Array.prototype.concat
Mutant 142 in q.js: Array.prototype.slice replaced with Array.prototype.push
Mutant 143 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 144 in q.js: arguments.length === 1 replaced with arguments.length !== 1
Mutant 145 in q.js: arguments.length === 1 replaced with arguments.length === 0
Mutant 146 in q.js: index in this replaced with index >= length
Mutant 147 in q.js: index in this replaced with this[index] === undefined
Mutant 148 in q.js: index in this replaced with index in arguments
Mutant 149 in q.js: ++index >= length replaced with index >= length - 1
Mutant 150 in q.js: ++index >= length replaced with index < length + 1
Mutant 151 in q.js: 1 replaced with index < length
Mutant 152 in q.js: 1 replaced with index <= length
Mutant 153 in q.js: 1 replaced with index >= length
Mutant 154 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index <= length; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 155 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index < length + 1; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 156 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index <= length - 1; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 157 in q.js: index < length replaced with index <= length
Mutant 158 in q.js: index < length replaced with index < length + 1
Mutant 159 in q.js: index < length replaced with index > length
Mutant 160 in q.js: index++ replaced with index += 2
Mutant 161 in q.js: index++ replaced with index--
Mutant 162 in q.js: index++ replaced with index = length
Mutant 163 in q.js: index in this replaced with index >= this.length
Mutant 164 in q.js: index in this replaced with this[index] === undefined
Mutant 165 in q.js: index in this replaced with index in arguments
Mutant 166 in q.js: callback(basis, this[index], index) replaced with callback(basis + this[index] + index)
Mutant 167 in q.js: callback(basis, this[index], index) replaced with callback(this[index] * 2)
Mutant 168 in q.js: callback(basis, this[index], index) replaced with callback(undefined)
Mutant 169 in q.js: callback replaced with basis + this[index]
Mutant 170 in q.js: callback replaced with this[index] * 2
Mutant 171 in q.js: callback replaced with this[index] - 1
Mutant 172 in q.js: basis replaced with this[index]
Mutant 173 in q.js: basis replaced with null
Mutant 174 in q.js: basis replaced with basis + 1
Mutant 175 in q.js: this[index] replaced with this[index + 1]
Mutant 176 in q.js: this[index] replaced with this[index] + 1
Mutant 177 in q.js: this[index] replaced with this[index] * 2
Mutant 178 in q.js: index replaced with length
Mutant 179 in q.js: index replaced with index + 1
Mutant 180 in q.js: index replaced with this[index] + 1
Mutant 181 in q.js: i < this.length replaced with i <= this.length
Mutant 182 in q.js: i < this.length replaced with i < this.length + 1
Mutant 183 in q.js: i < this.length replaced with i < this.length - 1
Mutant 184 in q.js: i++ replaced with i += 2
Mutant 185 in q.js: i++ replaced with i--
Mutant 186 in q.js: i++ replaced with i = this.length
Mutant 187 in q.js: this[i] === value replaced with this[i] != value
Mutant 188 in q.js: this[i] === value replaced with this[i] === undefined
Mutant 189 in q.js: this[i] === value replaced with this[i] === null
Mutant 190 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(self, value, index + 1)
Mutant 191 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value * 2, index)
Mutant 192 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(self, value, index - 1)
Mutant 193 in q.js: callback.call replaced with undefined
Mutant 194 in q.js: callback.call replaced with thisp
Mutant 195 in q.js: callback.call replaced with self[index]
Mutant 196 in q.js: thisp replaced with undefined
Mutant 197 in q.js: thisp replaced with null
Mutant 198 in q.js: thisp replaced with self
Mutant 199 in q.js: value replaced with undefined
Mutant 200 in q.js: value replaced with this[index] + 1
Mutant 201 in q.js: value replaced with self[index]
Mutant 202 in q.js: index replaced with 0
Mutant 203 in q.js: index replaced with self.length
Mutant 204 in q.js: index replaced with undefined
Mutant 205 in q.js: self replaced with undefined
Mutant 206 in q.js: self replaced with this
Mutant 207 in q.js: self replaced with value
Mutant 208 in q.js: uncurryThis replaced with Object.prototype.hasOwnProperty.call
Mutant 209 in q.js: uncurryThis replaced with Object.prototype.propertyIsEnumerable
Mutant 210 in q.js: uncurryThis replaced with Object.prototype.toString
Mutant 211 in q.js: object replaced with null
Mutant 212 in q.js: object replaced with this
Mutant 213 in q.js: object replaced with Object.prototype
Mutant 214 in q.js: object_hasOwnProperty(object, key) replaced with !object_hasOwnProperty(object, key)
Mutant 215 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && key !== 'someKey'
Mutant 216 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) || key in object
Mutant 217 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object[key])
Mutant 218 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object[keys])
Mutant 219 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object["key"])
Mutant 220 in q.js: object_hasOwnProperty replaced with object[key] !== undefined
Mutant 221 in q.js: object replaced with this
Mutant 222 in q.js: object replaced with null
Mutant 223 in q.js: object replaced with undefined
Mutant 224 in q.js: key replaced with "key"
Mutant 225 in q.js: key replaced with undefined
Mutant 226 in q.js: key replaced with null
Mutant 227 in q.js: key replaced with "undefined"
Mutant 228 in q.js: key replaced with this[key]
Mutant 229 in q.js: key replaced with key + 1
Mutant 230 in q.js: Object replaced with Array
Mutant 231 in q.js: Object replaced with null
Mutant 232 in q.js: Object replaced with typeof value === 'object'
Mutant 233 in q.js: value replaced with value === null
Mutant 234 in q.js: value replaced with typeof value === 'string'
Mutant 235 in q.js: value replaced with Array.isArray(value)
Mutant 236 in q.js: object_toString replaced with typeof exception
Mutant 237 in q.js: exception replaced with "StopIteration"
Mutant 238 in q.js: exception replaced with this
Mutant 239 in q.js: exception replaced with undefined
Mutant 240 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue === "undefined"
Mutant 241 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue === "object"
Mutant 242 in q.js: typeof ReturnValue !== "undefined" replaced with ReturnValue !== null
Mutant 243 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with !hasStacks || !promise.stack || typeof error !== "object" || error === null || !error.stack
Mutant 244 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && typeof error === "string" && error !== null && error.stack
Mutant 245 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && typeof error === "object" && error !== undefined && error.stack
Mutant 246 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p = p && p.source;) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 247 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p = p.value;) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 248 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p = p.source || {};) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 249 in q.js: !!p replaced with p = null
Mutant 250 in q.js: !!p replaced with p = undefined
Mutant 251 in q.js: !!p replaced with p = {}
Mutant 252 in q.js: p = p.source replaced with p = p.next
Mutant 253 in q.js: p = p.source replaced with p = null
Mutant 254 in q.js: p = p.source replaced with p = p.parent
Mutant 255 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ && error.__minimumStackCounter__ < p.stackCounter
Mutant 256 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)
Mutant 257 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (error.__minimumStackCounter__ === undefined || error.__minimumStackCounter__ < p.stackCounter)
Mutant 258 in q.js: error replaced with promise
Mutant 259 in q.js: error replaced with error.stack
Mutant 260 in q.js: error replaced with null
Mutant 261 in q.js: "__minimumStackCounter__" replaced with "stackCounter"
Mutant 262 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__"
Mutant 263 in q.js: "__minimumStackCounter__" replaced with "__minimumStackDepth__"
Mutant 264 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 265 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 266 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: undefined,
  configurable: true
}
Mutant 267 in q.js: p.stack replaced with p.source
Mutant 268 in q.js: p.stack replaced with p.stackCounter
Mutant 269 in q.js: p.stack replaced with "Error stack not available"
Mutant 270 in q.js: stacks.unshift replaced with stacks.push
Mutant 271 in q.js: error.stack replaced with error.message
Mutant 272 in q.js: error.stack replaced with promise.message
Mutant 273 in q.js: error.stack replaced with error.stack + " Additional Info"
Mutant 274 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "; " + STACK_JUMP_SEPARATOR + "; "
Mutant 275 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + "Error occurred" + "\n"
Mutant 276 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\r\n" + STACK_JUMP_SEPARATOR + "\r\n"
Mutant 277 in q.js: concatedStacks replaced with stacks.length
Mutant 278 in q.js: concatedStacks replaced with stacks.join(", ")
Mutant 279 in q.js: concatedStacks replaced with stacks.reverse().join("\n" + STACK_JUMP_SEPARATOR + "\n")
Mutant 280 in q.js: error replaced with promise
Mutant 281 in q.js: error replaced with null
Mutant 282 in q.js: error replaced with "Error stack trace unavailable"
Mutant 283 in q.js: "stack" replaced with "error.stack"
Mutant 284 in q.js: "stack" replaced with "undefined"
Mutant 285 in q.js: "stack" replaced with "promise.stack"
Mutant 286 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: null,
  configurable: false
}
Mutant 287 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: "Error occurred",
  configurable: true
}
Mutant 288 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: promise.stack,
  configurable: true
}
Mutant 289 in q.js: "\n" replaced with ";"
Mutant 290 in q.js: "\n" replaced with ","
Mutant 291 in q.js: "\n" replaced with " "
Mutant 292 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 293 in q.js: i < lines.length replaced with i <= lines.length
Mutant 294 in q.js: i < lines.length replaced with i < 10
Mutant 295 in q.js: i < lines.length replaced with i > lines.length
Mutant 296 in q.js: ++i replaced with i += 2
Mutant 297 in q.js: ++i replaced with i = i + 1
Mutant 298 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with isInternalFrame(line) || isNodeFrame(line) || !line
Mutant 299 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with isInternalFrame(line) && line
Mutant 300 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && isNodeFrame(line) && line
Mutant 301 in q.js: isInternalFrame replaced with line.length === 0
Mutant 302 in q.js: line replaced with true
Mutant 303 in q.js: line replaced with false
Mutant 304 in q.js: line replaced with lineNumber > qEndingLine
Mutant 305 in q.js: line replaced with "node_modules"
Mutant 306 in q.js: line replaced with stackLine.includes("node.js")
Mutant 307 in q.js: "\n" replaced with ";"
Mutant 308 in q.js: "\n" replaced with " | "
Mutant 309 in q.js: "\n" replaced with "---"
Mutant 310 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 311 in q.js: stackLine.indexOf replaced with stackLine.lastIndexOf
Mutant 312 in q.js: "(module.js:" replaced with "(node):"
Mutant 313 in q.js: "(node.js:" replaced with "(module.js)"
Mutant 314 in q.js: stackLine replaced with "error"
Mutant 315 in q.js: stackLine replaced with stackLine + " (additional info)"
Mutant 316 in q.js: stackLine replaced with undefined
Mutant 317 in q.js: attempt1 replaced with !attempt1
Mutant 318 in q.js: attempt1 replaced with attempt1 === null
Mutant 319 in q.js: attempt1 replaced with attempt1.length === 0
Mutant 320 in q.js: Number replaced with String
Mutant 321 in q.js: Number replaced with attempt1[2] * 1
Mutant 322 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 323 in q.js: attempt1[2] replaced with 0
Mutant 324 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 325 in q.js: stackLine replaced with stackLine.toString()
Mutant 326 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 327 in q.js: stackLine replaced with stackLine.replace(":", ";")
Mutant 328 in q.js: Number replaced with attempt2[2] * 1
Mutant 329 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 330 in q.js: attempt2[2] replaced with 0
Mutant 331 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 332 in q.js: stackLine replaced with "at filename:lineNumber"
Mutant 333 in q.js: stackLine replaced with stackLine.toUpperCase()
Mutant 334 in q.js: stackLine replaced with "@filename:lineNumber:columnNumber"
Mutant 335 in q.js: Number replaced with attempt3[2] * 2
Mutant 336 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 337 in q.js: attempt3[2] replaced with 0
Mutant 338 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 339 in q.js: stackLine replaced with "invalid stack line"
Mutant 340 in q.js: stackLine replaced with stackLine + " extra text"
Mutant 341 in q.js: stackLine replaced with null
Mutant 342 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 343 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 344 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === undefined
Mutant 345 in q.js: !hasStacks replaced with hasStacks
Mutant 346 in q.js: !hasStacks replaced with true
Mutant 347 in q.js: !hasStacks replaced with false
Mutant 348 in q.js: "\n" replaced with ";"
Mutant 349 in q.js: "\n" replaced with "\r\n"
Mutant 350 in q.js: "\n" replaced with " "
Mutant 351 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 352 in q.js: lines[0].indexOf replaced with lines[0].length
Mutant 353 in q.js: "@" replaced with "@!"
Mutant 354 in q.js: "@" replaced with "~"
Mutant 355 in q.js: "@" replaced with "@filename"
Mutant 356 in q.js: firstLine replaced with lines[0]
Mutant 357 in q.js: firstLine replaced with lines[3]
Mutant 358 in q.js: firstLine replaced with lines[1] + " extra text"
Mutant 359 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 360 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber !== undefined
Mutant 361 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 362 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console === "undefined" || typeof console.warn !== "function"
Mutant 363 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console === "object" && typeof console.log === "function"
Mutant 364 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console !== "undefined" && typeof console.warn === "string"
Mutant 365 in q.js: callback.apply(callback, arguments) replaced with callback.apply(null)
Mutant 366 in q.js: callback.apply(callback, arguments) replaced with callback.apply(undefined)
Mutant 367 in q.js: callback.apply(callback, arguments) replaced with callback.apply(arguments[0])
Mutant 368 in q.js: callback replaced with null
Mutant 369 in q.js: callback replaced with undefined
Mutant 370 in q.js: callback replaced with function () {
  return "error";
}
Mutant 371 in q.js: arguments replaced with []
Mutant 372 in q.js: arguments replaced with null
Mutant 373 in q.js: arguments replaced with arguments[0]
Mutant 374 in q.js: value instanceof Promise replaced with value instanceof Object
Mutant 375 in q.js: value instanceof Promise replaced with typeof value === "function"
Mutant 376 in q.js: value instanceof Promise replaced with value === null
Mutant 377 in q.js: isPromiseAlike(value) replaced with typeof value === "object"
Mutant 378 in q.js: isPromiseAlike(value) replaced with value instanceof Array
Mutant 379 in q.js: isPromiseAlike(value) replaced with value === null
Mutant 380 in q.js: isPromiseAlike replaced with typeof value === "string"
Mutant 381 in q.js: isPromiseAlike replaced with value instanceof Object
Mutant 382 in q.js: value replaced with undefined
Mutant 383 in q.js: value replaced with "string"
Mutant 384 in q.js: value replaced with null
Mutant 385 in q.js: value replaced with undefined
Mutant 386 in q.js: value replaced with "string"
Mutant 387 in q.js: value replaced with null
Mutant 388 in q.js: value replaced with undefined
Mutant 389 in q.js: value replaced with "not a promise"
Mutant 390 in q.js: object_create replaced with Array.prototype
Mutant 391 in q.js: object_create replaced with null
Mutant 392 in q.js: object_create replaced with Array.prototype
Mutant 393 in q.js: object_create replaced with null
Mutant 394 in q.js: Promise.prototype replaced with Object.create(null)
Mutant 395 in q.js: Promise.prototype replaced with Promise
Mutant 396 in q.js: Promise.prototype replaced with Promise.prototype.constructor
Mutant 397 in q.js: arguments replaced with Array.prototype.slice.call(arguments, 1)
Mutant 398 in q.js: arguments replaced with arguments[0]
Mutant 399 in q.js: arguments replaced with null
Mutant 400 in q.js: messages replaced with messages.length === 0
Mutant 401 in q.js: messages replaced with !messages
Mutant 402 in q.js: messages replaced with args.length > 1
Mutant 403 in q.js: args replaced with args[0]
Mutant 404 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[0]
Mutant 405 in q.js: op === "when" && operands[1] replaced with op !== "when" && operands[1]
Mutant 406 in q.js: op === "when" && operands[1] replaced with op === "then" && operands[1]
Mutant 407 in q.js: progressListeners.push replaced with progressListeners.unshift
Mutant 408 in q.js: operands[1] replaced with operands[0]
Mutant 409 in q.js: operands[1] replaced with null
Mutant 410 in q.js: operands[1] replaced with operands[1] + 1
Mutant 411 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(args, resolvedPromise)
Mutant 412 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(null, args)
Mutant 413 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise, null)
Mutant 414 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 415 in q.js: args replaced with args.slice(1)
Mutant 416 in q.js: args replaced with args.concat([null])
Mutant 417 in q.js: args replaced with args[0] + 1
Mutant 418 in q.js: messages replaced with !messages
Mutant 419 in q.js: messages replaced with messages.length === 0
Mutant 420 in q.js: messages replaced with resolvedPromise === null
Mutant 421 in q.js: nearer replaced with null
Mutant 422 in q.js: nearer replaced with undefined
Mutant 423 in q.js: resolvedPromise replaced with null
Mutant 424 in q.js: resolvedPromise replaced with undefined
Mutant 425 in q.js: resolvedPromise replaced with "not a promise"
Mutant 426 in q.js: isPromise(nearerValue) replaced with typeof nearerValue === "object"
Mutant 427 in q.js: isPromise(nearerValue) replaced with nearerValue instanceof Array
Mutant 428 in q.js: isPromise(nearerValue) replaced with nearerValue === null
Mutant 429 in q.js: isPromise replaced with nearerValue == null
Mutant 430 in q.js: nearerValue replaced with undefined
Mutant 431 in q.js: nearerValue replaced with "error"
Mutant 432 in q.js: !resolvedPromise replaced with resolvedPromise
Mutant 433 in q.js: !resolvedPromise replaced with !messages
Mutant 434 in q.js: !resolvedPromise replaced with resolvedPromise === undefined
Mutant 435 in q.js: resolvedPromise.inspect replaced with {
  state: "fulfilled",
  value: resolvedPromise.value
}
Mutant 436 in q.js: resolvedPromise.inspect replaced with {
  state: "rejected",
  reason: resolvedPromise.reason
}
Mutant 437 in q.js: resolvedPromise.inspect replaced with {
  state: "pending",
  progress: progressListeners.length
}
Mutant 438 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 439 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 440 in q.js: Q.longStackSupport && hasStacks replaced with false
Mutant 441 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.length - 1
Mutant 442 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("at ") + 1
Mutant 443 in q.js: e.stack.indexOf("\n") + 1 replaced with 0
Mutant 444 in q.js: "\n" replaced with ""
Mutant 445 in q.js: "\n" replaced with " "
Mutant 446 in q.js: "\n" replaced with "Error"
Mutant 447 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 448 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 449 in q.js: Q.longStackSupport && hasStacks replaced with false
Mutant 450 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, reason)
Mutant 451 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(messages[0])
Mutant 452 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, null)
Mutant 453 in q.js: newPromise replaced with resolvedPromise
Mutant 454 in q.js: newPromise replaced with null
Mutant 455 in q.js: newPromise replaced with messages
Mutant 456 in q.js: message replaced with message.concat("extra")
Mutant 457 in q.js: message replaced with message[0]
Mutant 458 in q.js: message replaced with undefined
Mutant 459 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 460 in q.js: resolvedPromise replaced with resolvedPromise === null
Mutant 461 in q.js: resolvedPromise replaced with typeof resolvedPromise === "undefined"
Mutant 462 in q.js: Q(value) replaced with Q.reject(value)
Mutant 463 in q.js: Q(value) replaced with Q(undefined)
Mutant 464 in q.js: Q(value) replaced with Q(null)
Mutant 465 in q.js: Q replaced with "resolved"
Mutant 466 in q.js: value replaced with "error"
Mutant 467 in q.js: resolvedPromise replaced with typeof resolvedPromise === "undefined"
Mutant 468 in q.js: resolvedPromise replaced with resolvedPromise === null
Mutant 469 in q.js: resolvedPromise replaced with resolvedPromise !== undefined && resolvedPromise !== null
Mutant 470 in q.js: value replaced with null
Mutant 471 in q.js: value replaced with undefined
Mutant 472 in q.js: value replaced with "error"
Mutant 473 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 474 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 475 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 476 in q.js: reason replaced with reason + " error"
Mutant 477 in q.js: reason replaced with null
Mutant 478 in q.js: reason replaced with undefined
Mutant 479 in q.js: resolvedPromise replaced with resolvedPromise === null
Mutant 480 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 481 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 482 in q.js: error replaced with !error
Mutant 483 in q.js: error replaced with error === null
Mutant 484 in q.js: error replaced with typeof error === "string"
Mutant 485 in q.js: arguments.length > 2 replaced with arguments.length < 2
Mutant 486 in q.js: arguments.length > 2 replaced with arguments.length === 0
Mutant 487 in q.js: arguments.length > 2 replaced with arguments.length !== 2
Mutant 488 in q.js: array_slice(arguments, 1) replaced with arguments[0]
Mutant 489 in q.js: array_slice(arguments, 1) replaced with null
Mutant 490 in q.js: array_slice(arguments, 1) replaced with arguments.length > 1 ? arguments[1] : undefined
Mutant 491 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 492 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[1] + 1)
Mutant 493 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[2])
Mutant 494 in q.js: array_slice replaced with arguments.length > 1 ? arguments[1] : null
Mutant 495 in q.js: array_slice replaced with arguments[arguments.length - 1]
Mutant 496 in q.js: 1 replaced with arguments.length - 1
Mutant 497 in q.js: value replaced with null
Mutant 498 in q.js: value replaced with undefined
Mutant 499 in q.js: value replaced with "error"
Mutant 500 in q.js: typeof resolver !== "function" replaced with resolver === null
Mutant 501 in q.js: typeof resolver !== "function" replaced with typeof resolver === "object"
Mutant 502 in q.js: typeof resolver !== "function" replaced with resolver instanceof Promise
Mutant 503 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve, deferred.resolve, deferred.notify)
Mutant 504 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.notify, deferred.resolve)
Mutant 505 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.notify, deferred.resolve, deferred.reject)
Mutant 506 in q.js: deferred.resolve replaced with deferred.reject
Mutant 507 in q.js: deferred.resolve replaced with deferred.notify
Mutant 508 in q.js: deferred.resolve replaced with undefined
Mutant 509 in q.js: deferred.reject replaced with deferred.resolve
Mutant 510 in q.js: deferred.reject replaced with deferred.notify
Mutant 511 in q.js: deferred.reject replaced with undefined
Mutant 512 in q.js: deferred.notify replaced with deferred.resolve
Mutant 513 in q.js: deferred.notify replaced with deferred.reject
Mutant 514 in q.js: deferred.notify replaced with deferred.notifyAll
Mutant 515 in q.js: reason replaced with "An error occurred"
Mutant 516 in q.js: reason replaced with null
Mutant 517 in q.js: reason replaced with undefined
Mutant 518 in q.js: Q replaced with Promise.resolve
Mutant 519 in q.js: Q replaced with Q.reject
Mutant 520 in q.js: Q replaced with Q.all
Mutant 521 in q.js: x replaced with y
Mutant 522 in q.js: x replaced with undefined
Mutant 523 in q.js: x replaced with x + 1
Mutant 524 in q.js: y replaced with x
Mutant 525 in q.js: y replaced with null
Mutant 526 in q.js: y replaced with undefined
Mutant 527 in q.js: [this, that] replaced with [x, y]
Mutant 528 in q.js: [this, that] replaced with [that, this]
Mutant 529 in q.js: [this, that] replaced with [null, null]
Mutant 530 in q.js: x === y replaced with x != y
Mutant 531 in q.js: x === y replaced with x === null
Mutant 532 in q.js: x === y replaced with x === undefined
Mutant 533 in q.js: // Switch to this once we can assume at least ES5
// answerPs.forEach(function (answerP) {
//     Q(answerP).then(resolve, reject);
// });
// Use this in the meantime
for (var i = 0, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
} replaced with for (var i = 1, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
}
Mutant 534 in q.js: // Switch to this once we can assume at least ES5
// answerPs.forEach(function (answerP) {
//     Q(answerP).then(resolve, reject);
// });
// Use this in the meantime
for (var i = 0, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
} replaced with for (var i = 0, len = answerPs.length + 1; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
}
Mutant 535 in q.js: // Switch to this once we can assume at least ES5
// answerPs.forEach(function (answerP) {
//     Q(answerP).then(resolve, reject);
// });
// Use this in the meantime
for (var i = 0, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
} replaced with for (var i = 0, len = answerPs.length - 1; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
}
Mutant 536 in q.js: i < len replaced with i <= len
Mutant 537 in q.js: i < len replaced with i != len
Mutant 538 in q.js: i < len replaced with i < 0
Mutant 539 in q.js: i++ replaced with i += 2
Mutant 540 in q.js: i++ replaced with i--
Mutant 541 in q.js: i++ replaced with len = 0
Mutant 542 in q.js: answerPs[i] replaced with answerPs[i] + 1
Mutant 543 in q.js: answerPs[i] replaced with null
Mutant 544 in q.js: answerPs[i] replaced with answerPs[i].catch(function () {
  return "error";
})
Mutant 545 in q.js: reject replaced with resolve
Mutant 546 in q.js: reject replaced with reject(new Error("Promise rejected"))
Mutant 547 in q.js: reject replaced with console.log("Promise settled")
Mutant 548 in q.js: this.then replaced with this.catch
Mutant 549 in q.js: this.then replaced with this.resolve
Mutant 550 in q.js: this.then replaced with this.valueOf
Mutant 551 in q.js: fallback === void 0 replaced with fallback === null
Mutant 552 in q.js: fallback === void 0 replaced with fallback !== void 0
Mutant 553 in q.js: fallback === void 0 replaced with typeof fallback === "undefined"
Mutant 554 in q.js: inspect === void 0 replaced with inspect !== null
Mutant 555 in q.js: inspect === void 0 replaced with inspect === true
Mutant 556 in q.js: inspect === void 0 replaced with inspect = function () {
  return {
    state: "fulfilled"
  };
}
Mutant 557 in q.js: object_create replaced with null
Mutant 558 in q.js: Promise.prototype replaced with Promise.prototype.constructor
Mutant 559 in q.js: Promise.prototype replaced with Object.create(null)
Mutant 560 in q.js: descriptor[op] replaced with descriptor[op] + 1
Mutant 561 in q.js: descriptor[op] replaced with descriptor[op].call(promise, args[0])
Mutant 562 in q.js: descriptor[op] replaced with descriptor[op].apply(null, args)
Mutant 563 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(args)
Mutant 564 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(null)
Mutant 565 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(undefined)
Mutant 566 in q.js: descriptor[op].apply replaced with descriptor[op].call
Mutant 567 in q.js: promise replaced with null
Mutant 568 in q.js: promise replaced with this
Mutant 569 in q.js: promise replaced with undefined
Mutant 570 in q.js: args replaced with [null]
Mutant 571 in q.js: args replaced with args[0]
Mutant 572 in q.js: args replaced with undefined
Mutant 573 in q.js: fallback.call(promise, op, args) replaced with fallback.call(this, op, args)
Mutant 574 in q.js: fallback.call(promise, op, args) replaced with fallback.call(null, op, args)
Mutant 575 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise, "nonExistentOp", args)
Mutant 576 in q.js: promise replaced with null
Mutant 577 in q.js: promise replaced with this
Mutant 578 in q.js: promise replaced with undefined
Mutant 579 in q.js: op replaced with "unknownOperation"
Mutant 580 in q.js: op replaced with null
Mutant 581 in q.js: op replaced with args[0]
Mutant 582 in q.js: args replaced with undefined
Mutant 583 in q.js: args replaced with null
Mutant 584 in q.js: args replaced with "unexpected"
Mutant 585 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 586 in q.js: inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 587 in q.js: inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 588 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 589 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 590 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "pending" && inspected.value !== undefined
Mutant 591 in q.js: value replaced with null
Mutant 592 in q.js: value replaced with undefined
Mutant 593 in q.js: value replaced with Promise.reject(new Error("Error"))
Mutant 594 in q.js: exception replaced with null
Mutant 595 in q.js: exception replaced with "Error occurred"
Mutant 596 in q.js: exception replaced with value
Mutant 597 in q.js: typeof rejected === "function" replaced with typeof rejected === "undefined"
Mutant 598 in q.js: typeof rejected === "function" replaced with rejected === null
Mutant 599 in q.js: typeof rejected === "function" replaced with typeof rejected !== "function"
Mutant 600 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(self, exception)
Mutant 601 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(null)
Mutant 602 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(undefined, exception)
Mutant 603 in q.js: exception replaced with undefined
Mutant 604 in q.js: exception replaced with "Error occurred"
Mutant 605 in q.js: exception replaced with new Error("Custom error")
Mutant 606 in q.js: self replaced with undefined
Mutant 607 in q.js: self replaced with this
Mutant 608 in q.js: self replaced with null
Mutant 609 in q.js: exception replaced with null
Mutant 610 in q.js: exception replaced with "Error occurred"
Mutant 611 in q.js: exception replaced with undefined
Mutant 612 in q.js: newException replaced with "An error occurred"
Mutant 613 in q.js: newException replaced with null
Mutant 614 in q.js: newException replaced with newException.message
Mutant 615 in q.js: exception replaced with "An error occurred"
Mutant 616 in q.js: exception replaced with null
Mutant 617 in q.js: exception replaced with new Error("Default rejection")
Mutant 618 in q.js: progressed replaced with undefined
Mutant 619 in q.js: progressed replaced with value + 1
Mutant 620 in q.js: value replaced with undefined
Mutant 621 in q.js: value replaced with value + 1
Mutant 622 in q.js: value replaced with null
Mutant 623 in q.js: done replaced with !done
Mutant 624 in q.js: done replaced with done === false
Mutant 625 in q.js: done replaced with done === true
Mutant 626 in q.js: _fulfilled replaced with undefined
Mutant 627 in q.js: value replaced with undefined
Mutant 628 in q.js: value replaced with null
Mutant 629 in q.js: value replaced with "error"
Mutant 630 in q.js: done replaced with !done
Mutant 631 in q.js: done replaced with true
Mutant 632 in q.js: done replaced with exception
Mutant 633 in q.js: exception replaced with new Error("An error occurred")
Mutant 634 in q.js: exception replaced with undefined
Mutant 635 in q.js: exception replaced with "Some string"
Mutant 636 in q.js: _progressed replaced with value + 1
Mutant 637 in q.js: _progressed replaced with null
Mutant 638 in q.js: value replaced with value + 1
Mutant 639 in q.js: value replaced with undefined
Mutant 640 in q.js: !threw replaced with threw
Mutant 641 in q.js: !threw replaced with true
Mutant 642 in q.js: !threw replaced with !newValue
Mutant 643 in q.js: newValue replaced with newValue + 1
Mutant 644 in q.js: newValue replaced with undefined
Mutant 645 in q.js: newValue replaced with newValue * 2
Mutant 646 in q.js: Q replaced with Promise
Mutant 647 in q.js: Q replaced with Q.reject
Mutant 648 in q.js: Q replaced with Q.resolve
Mutant 649 in q.js: callback replaced with callback(null)
Mutant 650 in q.js: callback replaced with callback(value + 1)
Mutant 651 in q.js: callback replaced with callback.fcall(value).then(function () {
  return "error";
})
Mutant 652 in q.js: Q replaced with null
Mutant 653 in q.js: Q replaced with undefined
Mutant 654 in q.js: callback replaced with null
Mutant 655 in q.js: callback replaced with function () {
  return "error";
}
Mutant 656 in q.js: callback replaced with undefined
Mutant 657 in q.js: value replaced with undefined
Mutant 658 in q.js: value replaced with null
Mutant 659 in q.js: value replaced with Promise.reject(new Error("Error"))
Mutant 660 in q.js: value replaced with undefined
Mutant 661 in q.js: value replaced with Promise.reject(new Error("Error"))
Mutant 662 in q.js: value replaced with value + 1
Mutant 663 in q.js: value replaced with null
Mutant 664 in q.js: value replaced with undefined
Mutant 665 in q.js: value replaced with Promise.reject(new Error("Rejected"))
Mutant 666 in q.js: fulfilled replaced with rejected
Mutant 667 in q.js: fulfilled replaced with undefined
Mutant 668 in q.js: fulfilled replaced with fulfilled(value)
Mutant 669 in q.js: rejected replaced with function () {
  return null;
}
Mutant 670 in q.js: progressed replaced with null
Mutant 671 in q.js: progressed replaced with undefined
Mutant 672 in q.js: progressed replaced with "notAFunction"
Mutant 673 in q.js: function () {
  return value;
} replaced with function () {
  return undefined;
}
Mutant 674 in q.js: function () {
  return value;
} replaced with function () {
  return value + 1;
}
Mutant 675 in q.js: function () {
  return value;
} replaced with function () {
  throw new Error("Intentional Error");
}
Mutant 676 in q.js: promise replaced with null
Mutant 677 in q.js: promise replaced with undefined
Mutant 678 in q.js: promise replaced with "string"
Mutant 679 in q.js: value replaced with null
Mutant 680 in q.js: value replaced with undefined
Mutant 681 in q.js: value replaced with "error"
Mutant 682 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 683 in q.js: function () {
  throw reason;
} replaced with function () {
  console.log(reason);
}
Mutant 684 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error("Custom error message");
}
Mutant 685 in q.js: promise replaced with null
Mutant 686 in q.js: promise replaced with undefined
Mutant 687 in q.js: promise replaced with "not a promise"
Mutant 688 in q.js: reason replaced with undefined
Mutant 689 in q.js: reason replaced with "Error"
Mutant 690 in q.js: reason replaced with null
Mutant 691 in q.js: isPromise(value) replaced with !isPromise(value)
Mutant 692 in q.js: isPromise(value) replaced with value instanceof Object
Mutant 693 in q.js: isPromise(value) replaced with value === null
Mutant 694 in q.js: isPromise replaced with typeof value === "object"
Mutant 695 in q.js: value replaced with undefined
Mutant 696 in q.js: value replaced with "not a promise"
Mutant 697 in q.js: value.inspect replaced with value.inspect.state
Mutant 698 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "pending"
Mutant 699 in q.js: inspected.state === "fulfilled" replaced with inspected.value !== undefined
Mutant 700 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 701 in q.js: isObject replaced with typeof object === "string"
Mutant 702 in q.js: isObject replaced with object instanceof Array
Mutant 703 in q.js: isObject replaced with object === null
Mutant 704 in q.js: object replaced with object === null
Mutant 705 in q.js: object replaced with typeof object === "undefined"
Mutant 706 in q.js: object replaced with object instanceof Array
Mutant 707 in q.js: isPromise replaced with object instanceof Object
Mutant 708 in q.js: isPromise replaced with object === null
Mutant 709 in q.js: object replaced with "string"
Mutant 710 in q.js: object replaced with null
Mutant 711 in q.js: object replaced with undefined
Mutant 712 in q.js: object.inspect replaced with object.state
not replacing object.inspect with object.state
Mutant 713 in q.js: this.inspect replaced with this.state
not replacing this.inspect with this.state
Mutant 714 in q.js: isPromise replaced with object instanceof Object
Mutant 715 in q.js: isPromise replaced with object === null
Mutant 716 in q.js: object replaced with null
Mutant 717 in q.js: object replaced with undefined
Mutant 718 in q.js: object replaced with "fulfilled"
Mutant 719 in q.js: object.inspect replaced with object.state === "fulfilled"
not replacing object.inspect with object.state === "fulfilled"
Mutant 720 in q.js: this.inspect replaced with this.inspect.state
not replacing this.inspect with this.inspect.state
Mutant 721 in q.js: isPromise replaced with typeof object === "object"
Mutant 722 in q.js: isPromise replaced with object instanceof Array
Mutant 723 in q.js: object replaced with "rejected"
Mutant 724 in q.js: object replaced with object.inspect().state
Mutant 725 in q.js: object replaced with object instanceof Object
Mutant 726 in q.js: object.inspect replaced with object.state
not replacing object.inspect with object.state
Mutant 727 in q.js: this.inspect replaced with this.inspect.state
not replacing this.inspect with this.inspect.state
Mutant 728 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 729 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections && false
Mutant 730 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === true
Mutant 731 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 732 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== true
Mutant 733 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections && false
Mutant 734 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with array_indexOf(unhandledRejections, promise) === -1
Mutant 735 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.length === 0
Mutant 736 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with array_indexOf(unhandledRejections, promise) > 0
Mutant 737 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length, promise)
Mutant 738 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections[0], promise)
Mutant 739 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons, promise)
Mutant 740 in q.js: unhandledRejections replaced with unhandledReasons
Mutant 741 in q.js: promise replaced with null
Mutant 742 in q.js: promise replaced with undefined
Mutant 743 in q.js: promise replaced with promise.constructor
Mutant 744 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledError", reason, promise)
Mutant 745 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("rejectionHandled", promise, reason)
Mutant 746 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", promise, reason)
Mutant 747 in q.js: "unhandledRejection" replaced with "handledRejection"
Mutant 748 in q.js: "unhandledRejection" replaced with "unhandledError"
Mutant 749 in q.js: "unhandledRejection" replaced with "unhandledRejectionHandled"
Mutant 750 in q.js: reason replaced with "unknown reason"
Mutant 751 in q.js: reason replaced with undefined
Mutant 752 in q.js: reason replaced with reason + " (additional context)"
Mutant 753 in q.js: promise replaced with undefined
Mutant 754 in q.js: promise replaced with null
Mutant 755 in q.js: promise replaced with this
Mutant 756 in q.js: promise replaced with null
Mutant 757 in q.js: promise replaced with undefined
Mutant 758 in q.js: promise replaced with "string"
Mutant 759 in q.js: reason && typeof reason.stack !== "undefined" replaced with !reason || typeof reason.stack === "undefined"
Mutant 760 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && typeof reason.message !== "undefined"
Mutant 761 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack === null
Mutant 762 in q.js: reason.stack replaced with reason.message
Mutant 763 in q.js: reason.stack replaced with "Error occurred: " + reason
Mutant 764 in q.js: reason.stack replaced with undefined
Mutant 765 in q.js: "(no stack) " + reason replaced with "stack not available: " + reason
Mutant 766 in q.js: "(no stack) " + reason replaced with "error: " + reason.toString()
Mutant 767 in q.js: "(no stack) " + reason replaced with "unknown error"
Mutant 768 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 769 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections && false
Mutant 770 in q.js: !trackUnhandledRejections replaced with true
Mutant 771 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length, promise)
Mutant 772 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons, promise)
Mutant 773 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections[0], promise)
Mutant 774 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 775 in q.js: unhandledRejections replaced with unhandledReasons
Mutant 776 in q.js: unhandledRejections replaced with unhandledRejections.length
Mutant 777 in q.js: unhandledRejections replaced with unhandledRejections[0]
Mutant 778 in q.js: promise replaced with null
Mutant 779 in q.js: promise replaced with undefined
Mutant 780 in q.js: promise replaced with promise + "extra"
Mutant 781 in q.js: at !== -1 replaced with at === -1
Mutant 782 in q.js: at !== -1 replaced with at > 0
Mutant 783 in q.js: at !== -1 replaced with at == null
Mutant 784 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(array_indexOf(unhandledRejections, promise))
Mutant 785 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.length, promise)
Mutant 786 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(unhandledReasons[0], promise)
Mutant 787 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 788 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 789 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.length
Mutant 790 in q.js: reportedUnhandledRejections replaced with unhandledReasons
Mutant 791 in q.js: promise replaced with null
Mutant 792 in q.js: promise replaced with undefined
Mutant 793 in q.js: promise replaced with this
Mutant 794 in q.js: atReport !== -1 replaced with atReport === -1
Mutant 795 in q.js: atReport !== -1 replaced with atReport === 0
Mutant 796 in q.js: atReport !== -1 replaced with atReport > 0
Mutant 797 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at + 1], promise)
Mutant 798 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", "An error occurred", promise)
Mutant 799 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], null)
Mutant 800 in q.js: "rejectionHandled" replaced with "unhandledRejection"
Mutant 801 in q.js: "rejectionHandled" replaced with "error"
Mutant 802 in q.js: unhandledReasons[at] replaced with unhandledReasons.length
Mutant 803 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 804 in q.js: unhandledReasons[at] replaced with unhandledReasons[0]
Mutant 805 in q.js: promise replaced with unhandledReasons[at]
Mutant 806 in q.js: promise replaced with null
Mutant 807 in q.js: promise replaced with undefined
Mutant 808 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport + 1)
Mutant 809 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport - 1)
Mutant 810 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(0)
Mutant 811 in q.js: reportedUnhandledRejections.splice replaced with reportedUnhandledRejections[at] = null
Mutant 812 in q.js: atReport replaced with atReport + 1
Mutant 813 in q.js: atReport replaced with 0
Mutant 814 in q.js: 1 replaced with 0
Mutant 815 in q.js: 1 replaced with atReport + 1
Mutant 816 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at + 1)
Mutant 817 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at)
Mutant 818 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(0)
Mutant 819 in q.js: at replaced with at + 1
Mutant 820 in q.js: at replaced with 0
Mutant 821 in q.js: at replaced with at - 1
Mutant 822 in q.js: 1 replaced with 0
Mutant 823 in q.js: 1 replaced with at + 1
Mutant 824 in q.js: 1 replaced with unhandledRejections.length - 1
Mutant 825 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 0)
Mutant 826 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at + 1)
Mutant 827 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(0)
Mutant 828 in q.js: at replaced with at + 1
Mutant 829 in q.js: at replaced with 0
Mutant 830 in q.js: at replaced with at - 1
Mutant 831 in q.js: 1 replaced with at + 1
Mutant 832 in q.js: 1 replaced with 0
Mutant 833 in q.js: 1 replaced with unhandledReasons.length
Mutant 834 in q.js: rejected replaced with true
Mutant 835 in q.js: rejected replaced with false
Mutant 836 in q.js: rejected replaced with this.state === "fulfilled"
Mutant 837 in q.js: this replaced with undefined
Mutant 838 in q.js: this replaced with promise
Mutant 839 in q.js: this replaced with null
Mutant 840 in q.js: rejected replaced with undefined
Mutant 841 in q.js: rejected replaced with true
Mutant 842 in q.js: rejected replaced with this
Mutant 843 in q.js: reason replaced with undefined
Mutant 844 in q.js: reason replaced with "Error occurred"
Mutant 845 in q.js: reason replaced with this.reason
Mutant 846 in q.js: trackRejection(rejection, reason) replaced with trackRejection(promise, reason)
Mutant 847 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, null)
Mutant 848 in q.js: trackRejection(rejection, reason) replaced with trackRejection(undefined, reason)
Mutant 849 in q.js: rejection replaced with undefined
Mutant 850 in q.js: rejection replaced with null
Mutant 851 in q.js: rejection replaced with promise
Mutant 852 in q.js: reason replaced with undefined
Mutant 853 in q.js: reason replaced with null
Mutant 854 in q.js: reason replaced with "Custom error message"
Mutant 855 in q.js: name === null || name === void 0 replaced with name === ""
Mutant 856 in q.js: name === null || name === void 0 replaced with name !== null && name !== void 0
Mutant 857 in q.js: name === null || name === void 0 replaced with name === false
Mutant 858 in q.js: value.apply(void 0, args) replaced with value.apply(this)
Mutant 859 in q.js: value.apply(void 0, args) replaced with value.apply(null)
Mutant 860 in q.js: value.apply(void 0, args) replaced with value.apply(undefined)
Mutant 861 in q.js: void 0 replaced with null
Mutant 862 in q.js: void 0 replaced with this
Mutant 863 in q.js: void 0 replaced with undefined
Mutant 864 in q.js: args replaced with []
Mutant 865 in q.js: args replaced with null
Mutant 866 in q.js: args replaced with [1, 2, 3]
Mutant 867 in q.js: value[name].apply(value, args) replaced with value[name].apply(args[0])
Mutant 868 in q.js: value[name].apply(value, args) replaced with value[name].apply(this)
Mutant 869 in q.js: value[name].apply(value, args) replaced with value[name].apply(null)
Mutant 870 in q.js: value[name].apply replaced with value[name].call
Mutant 871 in q.js: value replaced with this
Mutant 872 in q.js: value replaced with null
Mutant 873 in q.js: value replaced with value.name
Mutant 874 in q.js: args replaced with [args[0]]
Mutant 875 in q.js: args replaced with args.length
Mutant 876 in q.js: args replaced with null
Mutant 877 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, null)
Mutant 878 in q.js: value.apply(thisp, args) replaced with value.apply(undefined, args)
Mutant 879 in q.js: value.apply(thisp, args) replaced with value.apply(args[0], args)
Mutant 880 in q.js: thisp replaced with null
Mutant 881 in q.js: thisp replaced with undefined
Mutant 882 in q.js: thisp replaced with value
Mutant 883 in q.js: args replaced with args[0]
Mutant 884 in q.js: args replaced with null
Mutant 885 in q.js: args replaced with undefined
Mutant 886 in q.js: object_keys replaced with value.length
Mutant 887 in q.js: value replaced with null
Mutant 888 in q.js: value replaced with value.length
Mutant 889 in q.js: value replaced with object_keys(value)
Mutant 890 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve, deferred.resolve, deferred.notify)
Mutant 891 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.notify, deferred.reject, deferred.resolve)
Mutant 892 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.reject, deferred.notify, deferred.resolve)
Mutant 893 in q.js: promise.then replaced with promise.catch
Mutant 894 in q.js: promise.then replaced with promise.finally
Mutant 895 in q.js: promise.then replaced with promise.all
Mutant 896 in q.js: deferred.resolve replaced with deferred.notify
Mutant 897 in q.js: deferred.resolve replaced with deferred.reject
Mutant 898 in q.js: deferred.reject replaced with deferred.resolve
Mutant 899 in q.js: deferred.reject replaced with deferred.notify
Mutant 900 in q.js: deferred.reject replaced with deferred.reject("An error occurred")
Mutant 901 in q.js: deferred.notify replaced with deferred.resolve
Mutant 902 in q.js: deferred.notify replaced with deferred.reject
Mutant 903 in q.js: deferred.notify replaced with deferred.notify.bind(deferred, 'progress')
Mutant 904 in q.js: deferred.reject replaced with deferred.resolve
Mutant 905 in q.js: deferred.reject replaced with deferred.notify
Mutant 906 in q.js: exception replaced with undefined
Mutant 907 in q.js: exception replaced with "Error occurred"
Mutant 908 in q.js: exception replaced with null
Mutant 909 in q.js: dispatch(object, op, args) replaced with dispatch(object + op + args)
Mutant 910 in q.js: dispatch(object, op, args) replaced with dispatch(object.op(args))
Mutant 911 in q.js: dispatch(object, op, args) replaced with dispatch(dispatch(object, args))
Mutant 912 in q.js: object replaced with null
Mutant 913 in q.js: object replaced with undefined
Mutant 914 in q.js: object replaced with "string"
Mutant 915 in q.js: op replaced with op + 1
Mutant 916 in q.js: op replaced with op * 2
Mutant 917 in q.js: op replaced with null
Mutant 918 in q.js: args replaced with undefined
Mutant 919 in q.js: args replaced with null
Mutant 920 in q.js: args replaced with []
Mutant 921 in q.js: object replaced with null
Mutant 922 in q.js: object replaced with undefined
Mutant 923 in q.js: object replaced with "error"
Mutant 924 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 925 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled.bind(null, "unexpected"), rejected)
Mutant 926 in q.js: value replaced with undefined
Mutant 927 in q.js: value replaced with Promise.reject(new Error("Promise rejected"))
Mutant 928 in q.js: fulfilled replaced with null
Mutant 929 in q.js: fulfilled replaced with undefined
Mutant 930 in q.js: fulfilled replaced with function () {
  throw new Error("Fulfillment error");
}
Mutant 931 in q.js: rejected replaced with null
Mutant 932 in q.js: rejected replaced with undefined
Mutant 933 in q.js: rejected replaced with function () {
  throw new Error("Custom Error");
}
Mutant 934 in q.js: this.all replaced with this.any
Mutant 935 in q.js: this.all replaced with this.allSettled
Mutant 936 in q.js: this.all replaced with this.resolve
not replacing this.all with this.any
not replacing this.all with this.any
not replacing this.all with this.allSettled
not replacing this.all with this.allSettled
not replacing this.all with this.resolve
not replacing this.all with this.resolve
Mutant 937 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(this)
Mutant 938 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 939 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(array[0])
Mutant 940 in q.js: void 0 replaced with null
Mutant 941 in q.js: void 0 replaced with undefined
Mutant 942 in q.js: void 0 replaced with ""
Mutant 943 in q.js: array replaced with [0]
Mutant 944 in q.js: array replaced with array.slice(0, 1)
Mutant 945 in q.js: array replaced with array.concat([1])
Mutant 946 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 947 in q.js: typeof StopIteration === "undefined" replaced with typeof generator === "function"
Mutant 948 in q.js: typeof StopIteration === "undefined" replaced with false
Mutant 949 in q.js: arg replaced with undefined
Mutant 950 in q.js: arg replaced with null
Mutant 951 in q.js: arg replaced with "unexpected value"
Mutant 952 in q.js: exception replaced with null
Mutant 953 in q.js: exception replaced with "Error occurred"
Mutant 954 in q.js: exception replaced with new Error("Custom error")
Mutant 955 in q.js: result.done replaced with result.value
Mutant 956 in q.js: result.done replaced with result.done === false
Mutant 957 in q.js: result.done replaced with result.done !== true
Mutant 958 in q.js: result.value replaced with result.value + 1
Mutant 959 in q.js: result.value replaced with undefined
Mutant 960 in q.js: result.value replaced with result.done
Mutant 961 in q.js: when(result.value, callback, errback) replaced with when(result.value + 1, callback, errback)
Mutant 962 in q.js: result.value replaced with result.done
Mutant 963 in q.js: result.value replaced with result.value + 1
Mutant 964 in q.js: result.value replaced with undefined
Mutant 965 in q.js: errback replaced with callback
Mutant 966 in q.js: errback replaced with Q.reject(new Error("An error occurred"))
Mutant 967 in q.js: errback replaced with undefined
Mutant 968 in q.js: arg replaced with null
Mutant 969 in q.js: arg replaced with undefined
Mutant 970 in q.js: arg replaced with "unexpected value"
Mutant 971 in q.js: isStopIteration(exception) replaced with exception instanceof Error
Mutant 972 in q.js: isStopIteration(exception) replaced with exception === null
Mutant 973 in q.js: isStopIteration(exception) replaced with typeof exception === "string"
Mutant 974 in q.js: exception replaced with arg
Mutant 975 in q.js: exception replaced with true
Mutant 976 in q.js: exception replaced with false
Mutant 977 in q.js: exception.value replaced with undefined
Mutant 978 in q.js: exception.value replaced with "Error occurred"
Mutant 979 in q.js: exception.value replaced with exception.message
Mutant 980 in q.js: when(result, callback, errback) replaced with when(result.value, callback, errback)
Mutant 981 in q.js: when(result, callback, errback) replaced with when(result.done, callback, errback)
Mutant 982 in q.js: when(result, callback, errback) replaced with when(callback, errback, result)
Mutant 983 in q.js: result replaced with result.value
Mutant 984 in q.js: callback replaced with Q.reject(result.value)
Mutant 985 in q.js: callback replaced with Q(result.value)
Mutant 986 in q.js: callback replaced with Q.all(result)
Mutant 987 in q.js: errback replaced with callback
Mutant 988 in q.js: errback replaced with null
Mutant 989 in q.js: errback replaced with undefined
Mutant 990 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null, arguments)
Mutant 991 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(this, [])
Mutant 992 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(undefined, arguments)
Mutant 993 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 994 in q.js: this replaced with null
Mutant 995 in q.js: this replaced with window
Mutant 996 in q.js: this replaced with arguments[0]
Mutant 997 in q.js: arguments replaced with []
Mutant 998 in q.js: arguments replaced with null
Mutant 999 in q.js: arguments replaced with this
Mutant 1000 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "throw")
Mutant 1001 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(callback.bind(null))
Mutant 1002 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind(continuer, "next"))
Mutant 1003 in q.js: continuer.bind replaced with continuer.call
Mutant 1004 in q.js: continuer.bind replaced with continuer.apply
Mutant 1005 in q.js: continuer replaced with callback.bind(null)
Mutant 1006 in q.js: continuer replaced with continuer.bind(continuer, "next", "extraArg")
Mutant 1007 in q.js: continuer replaced with callback.bind(continuer, "throw")
Mutant 1008 in q.js: "next" replaced with "throw"
Mutant 1009 in q.js: "next" replaced with "send"
Mutant 1010 in q.js: "next" replaced with "nextTick"
Mutant 1011 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "next")
Mutant 1012 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "return")
Mutant 1013 in q.js: continuer.bind replaced with continuer.call
Mutant 1014 in q.js: continuer replaced with "next"
Mutant 1015 in q.js: continuer replaced with undefined
Mutant 1016 in q.js: continuer replaced with "throwError"
Mutant 1017 in q.js: "throw" replaced with "return"
Mutant 1018 in q.js: "throw" replaced with "next"
Mutant 1019 in q.js: "throw" replaced with undefined
Mutant 1020 in q.js: makeGenerator replaced with makeGenerator.bind(this)
Mutant 1021 in q.js: makeGenerator replaced with makeGenerator.call(null)
Mutant 1022 in q.js: makeGenerator replaced with makeGenerator.apply(this, [1, 2, 3])
Mutant 1023 in q.js: all replaced with any
Mutant 1024 in q.js: all replaced with arguments[0]
Mutant 1025 in q.js: all replaced with this
Mutant 1026 in q.js: arguments replaced with self
Mutant 1027 in q.js: arguments replaced with [1, 2, 3]
Mutant 1028 in q.js: arguments replaced with null
Mutant 1029 in q.js: callback.apply(self, args) replaced with callback.apply(self, this)
Mutant 1030 in q.js: callback.apply(self, args) replaced with callback.apply(args, self)
Mutant 1031 in q.js: callback.apply(self, args) replaced with callback.apply(null, args)
Mutant 1032 in q.js: self replaced with args[0]
Mutant 1033 in q.js: self replaced with null
Mutant 1034 in q.js: self replaced with undefined
Mutant 1035 in q.js: args replaced with self
Mutant 1036 in q.js: args replaced with args[0]
Mutant 1037 in q.js: args replaced with null
Mutant 1038 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(args, op)
Mutant 1039 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, [args])
Mutant 1040 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, null)
Mutant 1041 in q.js: object replaced with undefined
Mutant 1042 in q.js: object replaced with "string"
Mutant 1043 in q.js: op replaced with args[0]
Mutant 1044 in q.js: op replaced with "invalidOperation"
Mutant 1045 in q.js: op replaced with null
Mutant 1046 in q.js: args replaced with null
Mutant 1047 in q.js: args replaced with undefined
Mutant 1048 in q.js: args replaced with []
Mutant 1049 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject(op, args))
Mutant 1050 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve(op))
Mutant 1051 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve(null, args))
Mutant 1052 in q.js: self.promiseDispatch replaced with self.promiseResolve
Mutant 1053 in q.js: self.promiseDispatch replaced with self.promiseReject
Mutant 1054 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1055 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1056 in q.js: deferred.resolve replaced with deferred.resolve("unexpected value")
Mutant 1057 in q.js: op replaced with "invalidOperation"
Mutant 1058 in q.js: op replaced with args[0]
Mutant 1059 in q.js: op replaced with null
Mutant 1060 in q.js: args replaced with null
Mutant 1061 in q.js: args replaced with undefined
Mutant 1062 in q.js: args replaced with []
Mutant 1063 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("get", [key, "extra"])
Mutant 1064 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("fetch", [key])
Mutant 1065 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("get", [undefined])
Mutant 1066 in q.js: object replaced with null
Mutant 1067 in q.js: object replaced with "invalidObject"
Mutant 1068 in q.js: "get" replaced with "set"
Mutant 1069 in q.js: "get" replaced with "invoke"
Mutant 1070 in q.js: [key] replaced with [key, "unexpected"]
Mutant 1071 in q.js: [key] replaced with [null]
Mutant 1072 in q.js: [key] replaced with [key + "extra"]
Mutant 1073 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("get", [key, "extraArg"])
Mutant 1074 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("fetch", [key])
Mutant 1075 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("get", [undefined])
Mutant 1076 in q.js: this.dispatch replaced with this.get
Mutant 1077 in q.js: "get" replaced with "set"
Mutant 1078 in q.js: "get" replaced with "invoke"
Mutant 1079 in q.js: [key] replaced with [key, value]
Mutant 1080 in q.js: [key] replaced with [key + '1']
Mutant 1081 in q.js: [key] replaced with [key * 2]
Mutant 1082 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key])
Mutant 1083 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("update", [key, value])
Mutant 1084 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, key])
Mutant 1085 in q.js: object replaced with null
Mutant 1086 in q.js: object replaced with undefined
Mutant 1087 in q.js: object replaced with "string"
Mutant 1088 in q.js: "set" replaced with "update"
Mutant 1089 in q.js: "set" replaced with "setValue"
Mutant 1090 in q.js: "set" replaced with "assign"
Mutant 1091 in q.js: [key, value] replaced with [key]
Mutant 1092 in q.js: [key, value] replaced with [value, key]
Mutant 1093 in q.js: [key, value] replaced with [key, null]
Mutant 1094 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key])
Mutant 1095 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("update", [key, value])
Mutant 1096 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value, key])
Mutant 1097 in q.js: this.dispatch replaced with this.get
Mutant 1098 in q.js: "set" replaced with "get"
Mutant 1099 in q.js: "set" replaced with "setValue"
Mutant 1100 in q.js: "set" replaced with "update"
Mutant 1101 in q.js: [key, value] replaced with [key]
Mutant 1102 in q.js: [key, value] replaced with [value, key]
Mutant 1103 in q.js: [key, value] replaced with [key, null]
Mutant 1104 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("remove", [key])
Mutant 1105 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1106 in q.js: object replaced with null
Mutant 1107 in q.js: object replaced with "string"
Mutant 1108 in q.js: "delete" replaced with "remove"
Mutant 1109 in q.js: "delete" replaced with "set"
Mutant 1110 in q.js: "delete" replaced with "get"
Mutant 1111 in q.js: [key] replaced with [key, value]
Mutant 1112 in q.js: [key] replaced with [key, null]
Mutant 1113 in q.js: [key] replaced with [undefined]
Mutant 1114 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("remove", [key])
Mutant 1115 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, undefined])
Mutant 1116 in q.js: this.dispatch replaced with this.resolve
Mutant 1117 in q.js: this.dispatch replaced with this.then
Mutant 1118 in q.js: "delete" replaced with "remove"
Mutant 1119 in q.js: "delete" replaced with "undefined"
Mutant 1120 in q.js: "delete" replaced with "set"
Mutant 1121 in q.js: [key] replaced with [key, value]
Mutant 1122 in q.js: [key] replaced with key + "1"
Mutant 1123 in q.js: [key] replaced with undefined
Mutant 1124 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, null])
Mutant 1125 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("invoke", [name, args])
Mutant 1126 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [args, name])
Mutant 1127 in q.js: object replaced with undefined
Mutant 1128 in q.js: object replaced with "string"
Mutant 1129 in q.js: "post" replaced with "get"
Mutant 1130 in q.js: "post" replaced with "apply"
Mutant 1131 in q.js: "post" replaced with "set"
Mutant 1132 in q.js: [name, args] replaced with [name, null]
Mutant 1133 in q.js: [name, args] replaced with [args, name]
Mutant 1134 in q.js: [name, args] replaced with [name, [args]]
Mutant 1135 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, null])
Mutant 1136 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("get", [name, args])
Mutant 1137 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [args, name])
Mutant 1138 in q.js: "post" replaced with "get"
Mutant 1139 in q.js: "post" replaced with "apply"
Mutant 1140 in q.js: "post" replaced with "undefined"
Mutant 1141 in q.js: [name, args] replaced with [name, null]
Mutant 1142 in q.js: [name, args] replaced with [args, name]
Mutant 1143 in q.js: [name, args] replaced with [name, [1, 2, 3]]
Mutant 1144 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 0)])
Mutant 1145 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("get", [name, array_slice(arguments, 1)])
Mutant 1146 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, args])
Mutant 1147 in q.js: Q replaced with Promise.resolve
Mutant 1148 in q.js: object replaced with null
Mutant 1149 in q.js: object replaced with undefined
Mutant 1150 in q.js: object replaced with "string"
Mutant 1151 in q.js: "post" replaced with "get"
Mutant 1152 in q.js: "post" replaced with "set"
Mutant 1153 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 0)]
Mutant 1154 in q.js: [name, array_slice(arguments, 2)] replaced with [name, []]
Mutant 1155 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1156 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments.length)
Mutant 1157 in q.js: array_slice(arguments, 2) replaced with array_slice([])
Mutant 1158 in q.js: array_slice replaced with arguments.length
Mutant 1159 in q.js: array_slice replaced with arguments[0]
Mutant 1160 in q.js: arguments replaced with arguments[0]
Mutant 1161 in q.js: arguments replaced with null
Mutant 1162 in q.js: 2 replaced with 2 + 1
Mutant 1163 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, arguments[1]])
Mutant 1164 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, null])
Mutant 1165 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 0)])
Mutant 1166 in q.js: "post" replaced with "get"
Mutant 1167 in q.js: "post" replaced with "set"
Mutant 1168 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 0)]
Mutant 1169 in q.js: [name, array_slice(arguments, 1)] replaced with [name, []]
Mutant 1170 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 1).reverse()]
Mutant 1171 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length - 1)
Mutant 1172 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[1])
Mutant 1173 in q.js: array_slice replaced with arguments[0]
Mutant 1174 in q.js: array_slice replaced with arguments.length
Mutant 1175 in q.js: arguments replaced with arguments[0]
Mutant 1176 in q.js: 1 replaced with arguments.length
Mutant 1177 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [null, args])
Mutant 1178 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [undefined, args])
Mutant 1179 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, []])
Mutant 1180 in q.js: Q replaced with Promise
Mutant 1181 in q.js: object replaced with "string"
Mutant 1182 in q.js: "apply" replaced with "call"
Mutant 1183 in q.js: "apply" replaced with "execute"
Mutant 1184 in q.js: "apply" replaced with "applyWithContext"
Mutant 1185 in q.js: [void 0, args] replaced with [null, args]
Mutant 1186 in q.js: [void 0, args] replaced with [args, void 0]
Mutant 1187 in q.js: [void 0, args] replaced with [void 0, []]
Mutant 1188 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [null, args])
Mutant 1189 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [void 0, []])
Mutant 1190 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [undefined, args])
Mutant 1191 in q.js: "apply" replaced with "call"
Mutant 1192 in q.js: "apply" replaced with "applyWithContext"
Mutant 1193 in q.js: "apply" replaced with "execute"
Mutant 1194 in q.js: [void 0, args] replaced with [null, args]
Mutant 1195 in q.js: [void 0, args] replaced with [undefined, args]
Mutant 1196 in q.js: [void 0, args] replaced with [args, args]
Mutant 1197 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [null, array_slice(arguments, 1)])
Mutant 1198 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)])
Mutant 1199 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, []])
Mutant 1200 in q.js: object replaced with undefined
Mutant 1201 in q.js: object replaced with "string"
Mutant 1202 in q.js: "apply" replaced with "call"
Mutant 1203 in q.js: "apply" replaced with "applyAsync"
Mutant 1204 in q.js: "apply" replaced with "execute"
Mutant 1205 in q.js: [void 0, array_slice(arguments, 1)] replaced with [null, array_slice(arguments, 1)]
Mutant 1206 in q.js: [void 0, array_slice(arguments, 1)] replaced with [1, array_slice(arguments, 1)]
Mutant 1207 in q.js: [void 0, array_slice(arguments, 1)] replaced with [array_slice(arguments, 0), array_slice(arguments, 1)]
Mutant 1208 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1209 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, arguments.length)
Mutant 1210 in q.js: array_slice replaced with arguments[0]
Mutant 1211 in q.js: array_slice replaced with arguments.length
Mutant 1212 in q.js: arguments replaced with "unexpected"
Mutant 1213 in q.js: 1 replaced with 1 + 1
Mutant 1214 in q.js: 1 replaced with arguments.length - 1
Mutant 1215 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [null, array_slice(arguments)])
Mutant 1216 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [undefined, arguments])
Mutant 1217 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, []])
Mutant 1218 in q.js: "apply" replaced with "call"
Mutant 1219 in q.js: "apply" replaced with "execute"
Mutant 1220 in q.js: "apply" replaced with "invoke"
Mutant 1221 in q.js: [void 0, array_slice(arguments)] replaced with [null, array_slice(arguments)]
Mutant 1222 in q.js: [void 0, array_slice(arguments)] replaced with [1, array_slice(arguments)]
Mutant 1223 in q.js: [void 0, array_slice(arguments)] replaced with [array_slice(arguments, 0, 1), array_slice(arguments)]
Mutant 1224 in q.js: array_slice replaced with arguments[0]
Mutant 1225 in q.js: arguments replaced with ""
Mutant 1226 in q.js: object replaced with null
Mutant 1227 in q.js: object replaced with undefined
Mutant 1228 in q.js: object replaced with "string"
Mutant 1229 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1230 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1231 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, -1)
Mutant 1232 in q.js: array_slice replaced with arguments[1]
Mutant 1233 in q.js: arguments replaced with []
Mutant 1234 in q.js: arguments replaced with null
Mutant 1235 in q.js: arguments replaced with arguments[0]
Mutant 1236 in q.js: 1 replaced with 0
Mutant 1237 in q.js: 1 replaced with 1 + 1
Mutant 1238 in q.js: 1 replaced with args.length
Mutant 1239 in q.js: args.concat replaced with arguments
Mutant 1240 in q.js: array_slice(arguments) replaced with [null]
Mutant 1241 in q.js: array_slice(arguments) replaced with arguments[0]
Mutant 1242 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1, 1)
Mutant 1243 in q.js: arguments replaced with []
Mutant 1244 in q.js: arguments replaced with "invalid"
Mutant 1245 in q.js: array_slice replaced with arguments[0]
Mutant 1246 in q.js: array_slice replaced with arguments.length
Mutant 1247 in q.js: arguments replaced with []
Mutant 1248 in q.js: arguments replaced with null
Mutant 1249 in q.js: arguments replaced with ""
Mutant 1250 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1251 in q.js: array_slice(arguments) replaced with arguments[0]
Mutant 1252 in q.js: array_slice(arguments) replaced with []
Mutant 1253 in q.js: array_slice replaced with arguments.length
Mutant 1254 in q.js: arguments replaced with null
Mutant 1255 in q.js: arguments replaced with "invalid"
Mutant 1256 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [null])
Mutant 1257 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("getKeys", [])
Mutant 1258 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [1, 2, 3])
Mutant 1259 in q.js: object replaced with undefined
Mutant 1260 in q.js: object replaced with object.keys
Mutant 1261 in q.js: "keys" replaced with "values"
Mutant 1262 in q.js: "keys" replaced with "length"
Mutant 1263 in q.js: "keys" replaced with "getOwnPropertyNames"
Mutant 1264 in q.js: [] replaced with [null]
Mutant 1265 in q.js: [] replaced with undefined
Mutant 1266 in q.js: [] replaced with ["unexpectedKey"]
Mutant 1267 in q.js: this.dispatch("keys", []) replaced with this.dispatch("keys", [null])
Mutant 1268 in q.js: this.dispatch("keys", []) replaced with this.dispatch("getKeys", [])
Mutant 1269 in q.js: this.dispatch("keys", []) replaced with this.dispatch("keys", [1, 2, 3])
Mutant 1270 in q.js: this.dispatch replaced with this.invoke
Mutant 1271 in q.js: "keys" replaced with "values"
Mutant 1272 in q.js: "keys" replaced with "getOwnPropertyNames"
Mutant 1273 in q.js: "keys" replaced with "length"
Mutant 1274 in q.js: [] replaced with [null]
Mutant 1275 in q.js: [] replaced with undefined
Mutant 1276 in q.js: [] replaced with ["unexpected"]
Mutant 1277 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with !isPromise(promise) || (snapshot = promise.inspect()).state !== "fulfilled"
Mutant 1278 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with isPromise(promise) && (snapshot = promise.inspect()).state === "pending"
Mutant 1279 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with isPromise(promise) && (snapshot = promise.inspect()).state === "rejected"
Mutant 1280 in q.js: isPromise replaced with !promise
Mutant 1281 in q.js: isPromise replaced with typeof promise === 'object'
Mutant 1282 in q.js: isPromise replaced with promise instanceof Array
Mutant 1283 in q.js: promise replaced with null
Mutant 1284 in q.js: promise replaced with undefined
Mutant 1285 in q.js: promise replaced with promises[index]
Mutant 1286 in q.js: promise.inspect replaced with promise.state
Mutant 1287 in q.js: promise.inspect replaced with promise.then
Mutant 1288 in q.js: --pendingCount === 0 replaced with pendingCount > 0
Mutant 1289 in q.js: --pendingCount === 0 replaced with pendingCount === 1
Mutant 1290 in q.js: --pendingCount === 0 replaced with pendingCount !== 0
Mutant 1291 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: null
}
Mutant 1292 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index + 1,
  value: progress
}
Mutant 1293 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: -1,
  value: progress
}
Mutant 1294 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1295 in q.js: pendingCount === 0 replaced with pendingCount !== 0
Mutant 1296 in q.js: pendingCount === 0 replaced with pendingCount === 1
Mutant 1297 in q.js: this replaced with promises
Mutant 1298 in q.js: this replaced with null
Mutant 1299 in q.js: this replaced with undefined
Mutant 1300 in q.js: promises.length === 0 replaced with promises.length > 0
Mutant 1301 in q.js: promises.length === 0 replaced with promises.length === 1
Mutant 1302 in q.js: promises.length === 0 replaced with promises.length !== 0
Mutant 1303 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise, onRejected, onFulfilled, onProgress)
Mutant 1304 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise, onFulfilled, onProgress, onRejected)
Mutant 1305 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise, onFulfilled, onRejected, null)
Mutant 1306 in q.js: when replaced with Promise.resolve
Mutant 1307 in q.js: when replaced with Q.reject
Mutant 1308 in q.js: promise replaced with Q.resolve()
Mutant 1309 in q.js: promise replaced with null
Mutant 1310 in q.js: promise replaced with promises[index] + 1
Mutant 1311 in q.js: onFulfilled replaced with onRejected
Mutant 1312 in q.js: onFulfilled replaced with function () {
  deferred.resolve(null);
}
Mutant 1313 in q.js: onFulfilled replaced with onProgress
Mutant 1314 in q.js: onRejected replaced with function onFulfilled() {}
Mutant 1315 in q.js: onRejected replaced with function () {
  deferred.reject(new Error("Promise rejected"));
}
Mutant 1316 in q.js: onProgress replaced with function onProgress() {}
Mutant 1317 in q.js: onProgress replaced with onFulfilled
Mutant 1318 in q.js: onProgress replaced with undefined
Mutant 1319 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1320 in q.js: pendingCount === 0 replaced with pendingCount === 1
Mutant 1321 in q.js: pendingCount === 0 replaced with pendingCount !== 0
Mutant 1322 in q.js: rejection replaced with new Error("All promises were rejected.")
Mutant 1323 in q.js: rejection replaced with undefined
Mutant 1324 in q.js: rejection replaced with rejection.message
Mutant 1325 in q.js: this replaced with promises
Mutant 1326 in q.js: this replaced with null
Mutant 1327 in q.js: this replaced with undefined
Mutant 1328 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "allRejected")
Mutant 1329 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "anySettled")
Mutant 1330 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "allFulfilled")
Mutant 1331 in q.js: allResolved replaced with all
Mutant 1332 in q.js: allResolved replaced with Q.reject(promises)
Mutant 1333 in q.js: allResolved replaced with Q.resolve(promises.length)
Mutant 1334 in q.js: "allResolved" replaced with "allResolvedPromises"
Mutant 1335 in q.js: "allResolved" replaced with "allSettled"
Mutant 1336 in q.js: "allResolved" replaced with "allResolved()"
Mutant 1337 in q.js: "allSettled" replaced with "allResolved"
Mutant 1338 in q.js: "allSettled" replaced with "allSettled()"
Mutant 1339 in q.js: "allSettled" replaced with "all"
Mutant 1340 in q.js: array_map(promises, Q) replaced with array_map(promises.length, Q)
Mutant 1341 in q.js: array_map(promises, Q) replaced with array_map(Q, promises)
Mutant 1342 in q.js: array_map(promises, Q) replaced with array_map(undefined, promises)
Mutant 1343 in q.js: array_map replaced with array_filter
Mutant 1344 in q.js: promises replaced with promises.length
Mutant 1345 in q.js: promises replaced with null
Mutant 1346 in q.js: promises replaced with undefined
Mutant 1347 in q.js: Q replaced with array_map(promises, function (p) {
  return p;
})
Mutant 1348 in q.js: Q replaced with array_map(promises, function (p) {
  return Q.reject(new Error("Rejected"));
})
Mutant 1349 in q.js: Q replaced with array_map(promises, function (p) {
  return p + 1;
})
Mutant 1350 in q.js: when(promise, noop, noop) replaced with when(Q.reject(new Error("Forced rejection")), noop, noop)
Mutant 1351 in q.js: when(promise, noop, noop) replaced with when(Q.resolve("Unexpected value"), noop, noop)
Mutant 1352 in q.js: promise replaced with null
Mutant 1353 in q.js: promise replaced with undefined
Mutant 1354 in q.js: promise replaced with "not_a_promise"
Mutant 1355 in q.js: this replaced with null
Mutant 1356 in q.js: this replaced with []
Mutant 1357 in q.js: this replaced with undefined
Mutant 1358 in q.js: Q replaced with Promise
Mutant 1359 in q.js: Q replaced with Q.all
Mutant 1360 in q.js: Q replaced with Q.reject
Mutant 1361 in q.js: promises replaced with promises.length
Mutant 1362 in q.js: promises replaced with null
Mutant 1363 in q.js: promises replaced with undefined
Mutant 1364 in q.js: Q replaced with Promise
Mutant 1365 in q.js: Q replaced with null
Mutant 1366 in q.js: Q replaced with undefined
Mutant 1367 in q.js: promise replaced with Q.reject("Error")
Mutant 1368 in q.js: promise replaced with Q.resolve(42)
Mutant 1369 in q.js: promise replaced with Q(null)
Mutant 1370 in q.js: promise.inspect replaced with promise.value
Mutant 1371 in q.js: promise.then(regardless, regardless) replaced with promise.then(promise.then(regardless, null))
Mutant 1372 in q.js: promise.then(regardless, regardless) replaced with promise.then(promise.then(null, regardless))
Mutant 1373 in q.js: promise.then(regardless, regardless) replaced with promise.then(promise.catch(regardless))
Mutant 1374 in q.js: promise.then replaced with promise.catch
Mutant 1375 in q.js: promise.then replaced with promise.finally
Mutant 1376 in q.js: regardless replaced with function () {
  return promise.then(noop);
}
Mutant 1377 in q.js: regardless replaced with function () {
  return promise.reject(new Error("Forced rejection"));
}
Mutant 1378 in q.js: regardless replaced with function () {
  return promise.inspect().state;
}
Mutant 1379 in q.js: regardless replaced with function () {
  return promise.reject(new Error("Forced rejection"));
}
Mutant 1380 in q.js: regardless replaced with function () {
  return promise.then(function () {
    return "Success";
  });
}
Mutant 1381 in q.js: regardless replaced with function () {
  return promise.inspect().state;
}
Mutant 1382 in q.js: object replaced with null
Mutant 1383 in q.js: object replaced with undefined
Mutant 1384 in q.js: object replaced with "error"
Mutant 1385 in q.js: void 0 replaced with null
Mutant 1386 in q.js: void 0 replaced with Promise.reject(new Error("Promise rejected"))
Mutant 1387 in q.js: void 0 replaced with this
Mutant 1388 in q.js: this.then(void 0, rejected) replaced with this.then(rejected, void 0)
Mutant 1389 in q.js: void 0 replaced with null
Mutant 1390 in q.js: void 0 replaced with 1
Mutant 1391 in q.js: void 0 replaced with Promise.reject(new Error("Error"))
Mutant 1392 in q.js: rejected replaced with function () {
  throw new Error("Promise was rejected");
}
Mutant 1393 in q.js: rejected replaced with null
Mutant 1394 in q.js: rejected replaced with function () {
  return "Handled";
}
Mutant 1395 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(void 0, progressed, void 0)
Mutant 1396 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(progressed, void 0, void 0)
Mutant 1397 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(void 0, void 0, null)
Mutant 1398 in q.js: object replaced with undefined
Mutant 1399 in q.js: object replaced with Promise.reject(new Error("Progress error"))
Mutant 1400 in q.js: void 0 replaced with null
Mutant 1401 in q.js: void 0 replaced with Promise.reject(new Error("Progress error"))
Mutant 1402 in q.js: void 0 replaced with 1 + 1
Mutant 1403 in q.js: void 0 replaced with null
Mutant 1404 in q.js: void 0 replaced with true
Mutant 1405 in q.js: void 0 replaced with undefined
Mutant 1406 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(void 0, progressed, void 0)
Mutant 1407 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(progressed, void 0, void 0)
Mutant 1408 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(void 0, void 0, null)
Mutant 1409 in q.js: void 0 replaced with null
Mutant 1410 in q.js: void 0 replaced with this
Mutant 1411 in q.js: void 0 replaced with Promise.reject(new Error("Progress error"))
Mutant 1412 in q.js: void 0 replaced with null
Mutant 1413 in q.js: void 0 replaced with 1
Mutant 1414 in q.js: void 0 replaced with this
Mutant 1415 in q.js: progressed replaced with function () {
  return "progress";
}
Mutant 1416 in q.js: progressed replaced with undefined
Mutant 1417 in q.js: progressed replaced with function () {
  return null;
}
Mutant 1418 in q.js: object replaced with null
Mutant 1419 in q.js: object replaced with undefined
Mutant 1420 in q.js: object replaced with Promise.reject(new Error("Forced rejection"))
Mutant 1421 in q.js: callback replaced with undefined
Mutant 1422 in q.js: callback replaced with null
Mutant 1423 in q.js: callback replaced with function () {
  return "done";
}
Mutant 1424 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.call === "function"
Mutant 1425 in q.js: !callback || typeof callback.apply !== "function" replaced with callback === null
Mutant 1426 in q.js: !callback || typeof callback.apply !== "function" replaced with typeof callback !== "object"
Mutant 1427 in q.js: Q replaced with Q.resolve
Mutant 1428 in q.js: Q replaced with Q.reject
Mutant 1429 in q.js: Q replaced with Q.all
Mutant 1430 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled || rejected)
Mutant 1431 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled && rejected && progress)
Mutant 1432 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, void 0, progress)
Mutant 1433 in q.js: object replaced with null
Mutant 1434 in q.js: object replaced with undefined
Mutant 1435 in q.js: object replaced with "string"
Mutant 1436 in q.js: fulfilled replaced with rejected
Mutant 1437 in q.js: fulfilled replaced with undefined
Mutant 1438 in q.js: fulfilled replaced with function () {
  throw new Error("Forced error");
}
Mutant 1439 in q.js: rejected replaced with fulfilled
Mutant 1440 in q.js: rejected replaced with undefined
Mutant 1441 in q.js: rejected replaced with function () {
  throw new Error("Forced error");
}
Mutant 1442 in q.js: progress replaced with null
Mutant 1443 in q.js: progress replaced with undefined
Mutant 1444 in q.js: progress replaced with "error"
Mutant 1445 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(promise, error)
Mutant 1446 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(undefined, promise)
Mutant 1447 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(null, promise)
Mutant 1448 in q.js: promise replaced with null
Mutant 1449 in q.js: promise replaced with undefined
Mutant 1450 in q.js: promise replaced with "error"
Mutant 1451 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled || rejected)
Mutant 1452 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled && rejected)
Mutant 1453 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(this.catch(rejected))
Mutant 1454 in q.js: fulfilled replaced with null
Mutant 1455 in q.js: fulfilled replaced with undefined
Mutant 1456 in q.js: fulfilled replaced with function () {
  throw new Error("Forced rejection");
}
Mutant 1457 in q.js: rejected replaced with fulfilled
Mutant 1458 in q.js: rejected replaced with null
Mutant 1459 in q.js: rejected replaced with function () {
  throw new Error("Forced rejection");
}
Mutant 1460 in q.js: progress replaced with fulfilled
Mutant 1461 in q.js: progress replaced with null
Mutant 1462 in q.js: progress replaced with undefined
Mutant 1463 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError, void 0)
Mutant 1464 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(null, onUnhandledError)
Mutant 1465 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError, onUnhandledError)
Mutant 1466 in q.js: promise.then replaced with promise.catch
Mutant 1467 in q.js: void 0 replaced with null
Mutant 1468 in q.js: void 0 replaced with undefined
Mutant 1469 in q.js: void 0 replaced with Promise.reject(new Error("Unhandled error"))
Mutant 1470 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms + 1000, error)
Mutant 1471 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms * 2, error)
Mutant 1472 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(0, error)
Mutant 1473 in q.js: object replaced with null
Mutant 1474 in q.js: object replaced with undefined
Mutant 1475 in q.js: ms replaced with ms + 1000
Mutant 1476 in q.js: ms replaced with ms / 2
Mutant 1477 in q.js: error replaced with "Timeout occurred"
Mutant 1478 in q.js: error replaced with null
Mutant 1479 in q.js: error replaced with new Error("Custom timeout error")
Mutant 1480 in q.js: !error || "string" === typeof error replaced with error && "string" !== typeof error
Mutant 1481 in q.js: !error || "string" === typeof error replaced with error === null
Mutant 1482 in q.js: !error || "string" === typeof error replaced with typeof error === "object"
Mutant 1483 in q.js: clearTimeout replaced with clearInterval
Mutant 1484 in q.js: clearTimeout replaced with timeoutId = null
Mutant 1485 in q.js: timeoutId replaced with timeoutId + 1
Mutant 1486 in q.js: timeoutId replaced with null
Mutant 1487 in q.js: timeoutId replaced with timeoutId * 2
Mutant 1488 in q.js: value replaced with undefined
Mutant 1489 in q.js: value replaced with Promise.reject(new Error("Custom error"))
Mutant 1490 in q.js: value replaced with value + 1
Mutant 1491 in q.js: timeoutId replaced with timeoutId + 1
Mutant 1492 in q.js: timeoutId replaced with clearTimeout(0)
Mutant 1493 in q.js: timeoutId replaced with clearTimeout(timeoutId + 100)
Mutant 1494 in q.js: exception replaced with "An error occurred"
Mutant 1495 in q.js: exception replaced with new Error("Custom error message")
Mutant 1496 in q.js: exception replaced with undefined
Mutant 1497 in q.js: timeout === void 0 replaced with timeout !== null
Mutant 1498 in q.js: timeout === void 0 replaced with timeout > 0
Mutant 1499 in q.js: timeout === void 0 replaced with timeout === true
Mutant 1500 in q.js: object replaced with null
Mutant 1501 in q.js: object replaced with undefined
Mutant 1502 in q.js: object replaced with Promise.reject(new Error("Test Error"))
Mutant 1503 in q.js: timeout replaced with timeout + 1000
Mutant 1504 in q.js: timeout replaced with timeout / 2
Mutant 1505 in q.js: value replaced with undefined
Mutant 1506 in q.js: value replaced with value + 1
Mutant 1507 in q.js: callback replaced with null
Mutant 1508 in q.js: callback replaced with undefined
Mutant 1509 in q.js: callback replaced with "string"
Mutant 1510 in q.js: args replaced with null
Mutant 1511 in q.js: args replaced with undefined
Mutant 1512 in q.js: args replaced with []
Mutant 1513 in q.js: args replaced with this
Mutant 1514 in q.js: args replaced with []
Mutant 1515 in q.js: args replaced with null
Mutant 1516 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1517 in q.js: deferred.makeNodeResolver() replaced with deferred.reject
Mutant 1518 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1519 in q.js: deferred.makeNodeResolver replaced with undefined
Mutant 1520 in q.js: this.fapply replaced with this.apply
Mutant 1521 in q.js: this.fapply replaced with this.call
not replacing this.fapply with this.apply
not replacing this.fapply with this.apply
not replacing this.fapply with this.call
not replacing this.fapply with this.call
Mutant 1522 in q.js: nodeArgs replaced with nodeArgs.slice(0, 1)
Mutant 1523 in q.js: nodeArgs replaced with nodeArgs.concat([null])
Mutant 1524 in q.js: nodeArgs replaced with undefined
Mutant 1525 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1526 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length)
Mutant 1527 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments))
Mutant 1528 in q.js: arguments replaced with [0]
Mutant 1529 in q.js: arguments replaced with this
Mutant 1530 in q.js: arguments replaced with null
Mutant 1531 in q.js: 1 replaced with 0
Mutant 1532 in q.js: 1 replaced with 1 + 1
Mutant 1533 in q.js: 1 replaced with arguments.length
Mutant 1534 in q.js: Q replaced with Promise.resolve
Mutant 1535 in q.js: Q replaced with Q.reject
Mutant 1536 in q.js: Q replaced with Q.all
Mutant 1537 in q.js: callback replaced with null
Mutant 1538 in q.js: callback replaced with undefined
Mutant 1539 in q.js: callback replaced with "not_a_function"
Mutant 1540 in q.js: args replaced with undefined
Mutant 1541 in q.js: args replaced with []
Mutant 1542 in q.js: args replaced with null
Mutant 1543 in q.js: arguments replaced with []
Mutant 1544 in q.js: arguments replaced with null
Mutant 1545 in q.js: arguments replaced with this
Mutant 1546 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve()
Mutant 1547 in q.js: deferred.makeNodeResolver() replaced with deferred.reject()
Mutant 1548 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver.bind(deferred)()
Mutant 1549 in q.js: nodeArgs replaced with nodeArgs.slice(0, 1)
Mutant 1550 in q.js: nodeArgs replaced with nodeArgs.concat([null])
Mutant 1551 in q.js: nodeArgs replaced with []
Mutant 1552 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1553 in q.js: deferred.reject replaced with deferred.reject(new Error("Custom error"))
Mutant 1554 in q.js: deferred.reject replaced with deferred.reject(null)
Mutant 1555 in q.js: callback === undefined replaced with callback == null
Mutant 1556 in q.js: callback === undefined replaced with callback !== undefined && callback !== null
Mutant 1557 in q.js: callback === undefined replaced with typeof callback === "function"
Mutant 1558 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1559 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length)
Mutant 1560 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[0])
Mutant 1561 in q.js: arguments replaced with []
Mutant 1562 in q.js: arguments replaced with null
Mutant 1563 in q.js: arguments replaced with this
Mutant 1564 in q.js: 1 replaced with 0
Mutant 1565 in q.js: 1 replaced with -1
Mutant 1566 in q.js: array_slice(arguments) replaced with [arguments[0]]
Mutant 1567 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1568 in q.js: array_slice(arguments) replaced with arguments.length > 0 ? [arguments[0]] : []
Mutant 1569 in q.js: arguments replaced with [1, 2, 3]
Mutant 1570 in q.js: arguments replaced with null
Mutant 1571 in q.js: arguments replaced with this
Mutant 1572 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1573 in q.js: deferred.makeNodeResolver() replaced with deferred.reject
Mutant 1574 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1575 in q.js: Q replaced with Promise
Mutant 1576 in q.js: Q replaced with Q.reject
Mutant 1577 in q.js: Q replaced with Q.resolve
Mutant 1578 in q.js: callback replaced with null
Mutant 1579 in q.js: callback replaced with undefined
Mutant 1580 in q.js: callback replaced with function () {
  throw new Error("Intentional Error");
}
Mutant 1581 in q.js: nodeArgs replaced with nodeArgs.slice(0, 1)
Mutant 1582 in q.js: nodeArgs replaced with nodeArgs.concat([null])
Mutant 1583 in q.js: nodeArgs replaced with nodeArgs.map(arg => arg * 2)
Mutant 1584 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1585 in q.js: deferred.reject replaced with deferred.reject(new Error("Custom error"))
Mutant 1586 in q.js: deferred.reject replaced with deferred.reject(null)
Mutant 1587 in q.js: array_slice replaced with arguments
Mutant 1588 in q.js: arguments replaced with this
Mutant 1589 in q.js: arguments replaced with []
Mutant 1590 in q.js: arguments replaced with null
Mutant 1591 in q.js: this replaced with null
Mutant 1592 in q.js: this replaced with undefined
Mutant 1593 in q.js: this replaced with "string"
Mutant 1594 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(this, args.concat([1]))
Mutant 1595 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null, args)
Mutant 1596 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(undefined, args.slice(0, -1))
Mutant 1597 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1598 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1599 in q.js: void 0 replaced with null
Mutant 1600 in q.js: void 0 replaced with this
Mutant 1601 in q.js: void 0 replaced with ""
Mutant 1602 in q.js: args replaced with args.concat([this])
Mutant 1603 in q.js: args replaced with args.slice(0, -1)
Mutant 1604 in q.js: args replaced with [args]
Mutant 1605 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1606 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments.length - 1)
Mutant 1607 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments[0])
Mutant 1608 in q.js: arguments replaced with []
Mutant 1609 in q.js: arguments replaced with this
Mutant 1610 in q.js: arguments replaced with arguments[1]
Mutant 1611 in q.js: 2 replaced with 1
Mutant 1612 in q.js: 2 replaced with 3
Mutant 1613 in q.js: 2 replaced with arguments.length
Mutant 1614 in q.js: array_slice(arguments) replaced with [arguments[0]]
Mutant 1615 in q.js: array_slice(arguments) replaced with Array.from(arguments)
Mutant 1616 in q.js: array_slice(arguments) replaced with arguments.length > 0 ? [arguments[1]] : []
Mutant 1617 in q.js: arguments replaced with null
Mutant 1618 in q.js: arguments replaced with this
Mutant 1619 in q.js: deferred.makeNodeResolver() replaced with deferred.reject
Mutant 1620 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1621 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1622 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(null, [])
Mutant 1623 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, [1, 2, 3])
Mutant 1624 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, [arguments[0]])
Mutant 1625 in q.js: thisp replaced with null
Mutant 1626 in q.js: thisp replaced with window
Mutant 1627 in q.js: thisp replaced with undefined
Mutant 1628 in q.js: arguments replaced with []
Mutant 1629 in q.js: arguments replaced with null
Mutant 1630 in q.js: arguments replaced with this
Mutant 1631 in q.js: bound replaced with Q(callback).fapply(nodeArgs)
Mutant 1632 in q.js: bound replaced with callback.apply(null, nodeArgs)
Mutant 1633 in q.js: bound replaced with callback.call(thisp, nodeArgs)
Mutant 1634 in q.js: nodeArgs replaced with []
Mutant 1635 in q.js: nodeArgs replaced with [null]
Mutant 1636 in q.js: nodeArgs replaced with nodeArgs.slice(0, 1)
Mutant 1637 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1638 in q.js: deferred.reject replaced with deferred.reject(new Error("Custom error"))
Mutant 1639 in q.js: deferred.reject replaced with deferred.reject(null)
Mutant 1640 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1641 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments.slice(0, 1))
Mutant 1642 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments[0])
Mutant 1643 in q.js: array_slice replaced with arguments[0]
Mutant 1644 in q.js: arguments replaced with nodeArgs
Mutant 1645 in q.js: arguments replaced with []
Mutant 1646 in q.js: arguments replaced with null
Mutant 1647 in q.js: 0 replaced with 1
Mutant 1648 in q.js: 0 replaced with -1
Mutant 1649 in q.js: 0 replaced with thisp
Mutant 1650 in q.js: this replaced with null
Mutant 1651 in q.js: this replaced with undefined
Mutant 1652 in q.js: this replaced with "string"
Mutant 1653 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1654 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this, args.concat([1]))
Mutant 1655 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined, args.slice(0, 1))
Mutant 1656 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1657 in q.js: Q.nbind.apply replaced with Q.nbind.bind
Mutant 1658 in q.js: void 0 replaced with null
Mutant 1659 in q.js: void 0 replaced with this
Mutant 1660 in q.js: void 0 replaced with undefined
Mutant 1661 in q.js: args replaced with args.slice(0, 1)
Mutant 1662 in q.js: args replaced with args.concat([null])
Mutant 1663 in q.js: args replaced with args.map(arg => arg * 2)
Mutant 1664 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.concat([null]))
Mutant 1665 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(args, name)
Mutant 1666 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(args.slice(0, 1))
Mutant 1667 in q.js: object replaced with undefined
Mutant 1668 in q.js: object replaced with {}
Mutant 1669 in q.js: name replaced with name + "Extra"
Mutant 1670 in q.js: name replaced with args[0]
Mutant 1671 in q.js: name replaced with null
Mutant 1672 in q.js: args replaced with null
Mutant 1673 in q.js: args replaced with []
Mutant 1674 in q.js: args replaced with undefined
Mutant 1675 in q.js: array_slice replaced with args.length
Mutant 1676 in q.js: array_slice replaced with args[0]
Mutant 1677 in q.js: args || [] replaced with args && args.length ? args : [null]
Mutant 1678 in q.js: args || [] replaced with args.length > 0 ? args : undefined
Mutant 1679 in q.js: args || [] replaced with args.concat([1])
Mutant 1680 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve()
Mutant 1681 in q.js: deferred.makeNodeResolver() replaced with deferred.reject(new Error("An error occurred"))
Mutant 1682 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1683 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1684 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, []])
Mutant 1685 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, "extraArg"])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, []])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, "extraArg"])
Mutant 1686 in q.js: this.dispatch replaced with this.send
Mutant 1687 in q.js: this.dispatch replaced with this.invoke
not replacing this.dispatch with this.send
not replacing this.dispatch with this.send
not replacing this.dispatch with this.invoke
not replacing this.dispatch with this.invoke
Mutant 1688 in q.js: "post" replaced with "get"
Mutant 1689 in q.js: "post" replaced with "send"
Mutant 1690 in q.js: "post" replaced with "dispatch"
Mutant 1691 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, "extraArg"]
Mutant 1692 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1693 in q.js: [name, nodeArgs] replaced with [nodeArgs.length, name]
Mutant 1694 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1695 in q.js: deferred.reject replaced with deferred.reject("An error occurred")
Mutant 1696 in q.js: deferred.reject replaced with deferred.reject(new Error("Custom error"))
Mutant 1697 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 0)
Mutant 1698 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1699 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1700 in q.js: array_slice replaced with arguments[2]
Mutant 1701 in q.js: arguments replaced with nodeArgs
Mutant 1702 in q.js: arguments replaced with Array.prototype.slice.call(arguments)
Mutant 1703 in q.js: arguments replaced with []
Mutant 1704 in q.js: 2 replaced with 0
Mutant 1705 in q.js: 2 replaced with 1
Mutant 1706 in q.js: 2 replaced with arguments.length
Mutant 1707 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve()
Mutant 1708 in q.js: deferred.makeNodeResolver() replaced with deferred.reject(new Error("Custom error"))
Mutant 1709 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1710 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1711 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, []])
Mutant 1712 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, "extraArg"])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, []])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, "extraArg"])
Mutant 1713 in q.js: object replaced with null
Mutant 1714 in q.js: object replaced with undefined
Mutant 1715 in q.js: object replaced with "string"
Mutant 1716 in q.js: "post" replaced with "get"
Mutant 1717 in q.js: "post" replaced with "dispatch"
Mutant 1718 in q.js: "post" replaced with "send"
Mutant 1719 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1720 in q.js: [name, nodeArgs] replaced with [nodeArgs, null]
Mutant 1721 in q.js: [name, nodeArgs] replaced with [name, []]
Mutant 1722 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1723 in q.js: deferred.reject replaced with deferred.reject("An error occurred")
Mutant 1724 in q.js: deferred.reject replaced with deferred.reject(new Error("Custom error"))
Mutant 1725 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1726 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length)
Mutant 1727 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments))
Mutant 1728 in q.js: 1 replaced with 0
Mutant 1729 in q.js: 1 replaced with arguments.length
Mutant 1730 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve()
Mutant 1731 in q.js: deferred.makeNodeResolver() replaced with deferred.reject(new Error("An error occurred"))
Mutant 1732 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver.bind(null, "unexpected")
Mutant 1733 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1734 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, "extraArg"])
Mutant 1735 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, []])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, "extraArg"])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, []])
Mutant 1736 in q.js: this.dispatch replaced with this.send
not replacing this.dispatch with this.send
not replacing this.dispatch with this.send
Mutant 1737 in q.js: "post" replaced with "get"
Mutant 1738 in q.js: "post" replaced with "send"
Mutant 1739 in q.js: "post" replaced with "undefinedMethod"
Mutant 1740 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, "extraArg"]
Mutant 1741 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1742 in q.js: [name, nodeArgs] replaced with [nodeArgs.length, name]
Mutant 1743 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1744 in q.js: deferred.reject replaced with deferred.reject(new Error("Custom error"))
Mutant 1745 in q.js: deferred.reject replaced with deferred.reject(null)
Mutant 1746 in q.js: Q replaced with Promise
Mutant 1747 in q.js: Q replaced with Q.reject
Mutant 1748 in q.js: Q replaced with Q.resolve
Mutant 1749 in q.js: object replaced with null
Mutant 1750 in q.js: object replaced with undefined
Mutant 1751 in q.js: object replaced with "string"
Mutant 1752 in q.js: nodeback replaced with null
Mutant 1753 in q.js: nodeback replaced with undefined
Mutant 1754 in q.js: nodeback replaced with function () {}
Mutant 1755 in q.js: nodeback replaced with true
Mutant 1756 in q.js: nodeback replaced with false
Mutant 1757 in q.js: nodeback replaced with nodeback !== undefined
Mutant 1758 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1759 in q.js: nodeback(null, value) replaced with nodeback(value, null)
Mutant 1760 in q.js: nodeback(null, value) replaced with nodeback(error, value)
Mutant 1761 in q.js: null replaced with undefined
Mutant 1762 in q.js: null replaced with "error"
Mutant 1763 in q.js: null replaced with new Error("An error occurred")
Mutant 1764 in q.js: value replaced with undefined
Mutant 1765 in q.js: value replaced with value + 1
Mutant 1766 in q.js: captureLine replaced with captureLine + 1
Mutant 1767 in q.js: captureLine replaced with captureLine * 2
Mutant 1768 in q.js: captureLine replaced with captureLine - 5
Mutant 1769 in queue.js: Q.defer replaced with null
Mutant 1770 in queue.js: Q.defer replaced with null
Mutant 1771 in queue.js: Q.defer replaced with null
Mutant 1772 in queue.js: "head" replaced with "tail"
Mutant 1773 in queue.js: "head" replaced with "head" + "extra"
Mutant 1774 in queue.js: "head" replaced with undefined
Mutant 1775 in queue.js: "tail" replaced with "head"
Mutant 1776 in queue.js: "tail" replaced with "tail.length"
Mutant 1777 in queue.js: "tail" replaced with "undefined"
Mutant 1778 in queue.js: error replaced with null
Mutant 1779 in queue.js: error replaced with "An error occurred"
Mutant 1780 in queue.js: error replaced with undefined
Mutant 1781 in queue.js: Q.reject replaced with null
Mutant 1782 in queue.js: Q.reject replaced with undefined
Mutant 1783 in queue.js: error replaced with null
Mutant 1784 in queue.js: error replaced with "Queue closed"
Mutant 1785 in queue.js: error replaced with new Error("Different error")
[32m14:36:10 (3408) INFO Instrumenter[39m Instrumented 2 source file(s) with 1786 mutant(s)
[32m14:36:10 (3408) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m14:36:11 (3408) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m14:36:11 (3408) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m14:36:18 (3408) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6396 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 39m) 3/1786 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 28m) 4/1786 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 28m) 6/1786 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 28m) 8/1786 tested (6 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 44m) 9/1786 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 41m) 11/1786 tested (9 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 1m) 17/1786 tested (10 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 10m) 18/1786 tested (11 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 12m) 20/1786 tested (13 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 13m) 22/1786 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 20m) 23/1786 tested (16 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 20m) 25/1786 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 26m) 26/1786 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 26m) 28/1786 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 31m) 29/1786 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 30m) 31/1786 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 30m) 33/1786 tested (26 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~2h 34m) 34/1786 tested (27 survived, 0 timed out)
Mutation testing 2% (elapsed: ~3m, remaining: ~2h 33m) 36/1786 tested (29 survived, 0 timed out)
Mutation testing 2% (elapsed: ~3m, remaining: ~2h 25m) 40/1786 tested (30 survived, 0 timed out)
Mutation testing 2% (elapsed: ~3m, remaining: ~2h 32m) 40/1786 tested (30 survived, 0 timed out)
Mutation testing 2% (elapsed: ~3m, remaining: ~2h 32m) 42/1786 tested (31 survived, 1 timed out)
Mutation testing 2% (elapsed: ~3m, remaining: ~2h 39m) 42/1786 tested (31 survived, 1 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~2h 38m) 44/1786 tested (32 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~2h 41m) 45/1786 tested (33 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~2h 47m) 45/1786 tested (33 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~2h 42m) 48/1786 tested (34 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~2h 45m) 49/1786 tested (35 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~2h 41m) 52/1786 tested (35 survived, 4 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 40m) 54/1786 tested (36 survived, 4 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 39m) 56/1786 tested (38 survived, 4 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 38m) 58/1786 tested (39 survived, 4 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 40m) 59/1786 tested (40 survived, 4 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 34m) 63/1786 tested (40 survived, 5 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 34m) 65/1786 tested (41 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 33m) 67/1786 tested (43 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 35m) 68/1786 tested (44 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 35m) 70/1786 tested (46 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 37m) 71/1786 tested (47 survived, 5 timed out)
Mutation testing 4% (elapsed: ~6m, remaining: ~2h 36m) 73/1786 tested (49 survived, 5 timed out)
Mutation testing 4% (elapsed: ~6m, remaining: ~2h 38m) 74/1786 tested (50 survived, 5 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~2h 37m) 76/1786 tested (52 survived, 5 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~2h 36m) 78/1786 tested (54 survived, 5 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~2h 38m) 79/1786 tested (55 survived, 5 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~2h 37m) 81/1786 tested (57 survived, 5 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~2h 41m) 81/1786 tested (57 survived, 5 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~2h 42m) 82/1786 tested (57 survived, 6 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~2h 44m) 83/1786 tested (57 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~2h 47m) 83/1786 tested (57 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~2h 46m) 85/1786 tested (58 survived, 8 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~2h 48m) 86/1786 tested (59 survived, 8 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~2h 49m) 87/1786 tested (60 survived, 8 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~2h 50m) 88/1786 tested (60 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~2h 53m) 88/1786 tested (60 survived, 9 timed out)
Mutation testing 5% (elapsed: ~9m, remaining: ~2h 52m) 90/1786 tested (61 survived, 10 timed out)
Mutation testing 5% (elapsed: ~9m, remaining: ~2h 51m) 92/1786 tested (63 survived, 10 timed out)
Mutation testing 5% (elapsed: ~9m, remaining: ~2h 52m) 93/1786 tested (64 survived, 10 timed out)
Mutation testing 5% (elapsed: ~9m, remaining: ~2h 52m) 95/1786 tested (66 survived, 10 timed out)
Mutation testing 5% (elapsed: ~9m, remaining: ~2h 53m) 96/1786 tested (67 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 52m) 98/1786 tested (69 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 53m) 99/1786 tested (70 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 52m) 101/1786 tested (72 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 51m) 103/1786 tested (74 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 52m) 104/1786 tested (75 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 51m) 106/1786 tested (77 survived, 10 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~2h 52m) 107/1786 tested (78 survived, 10 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 51m) 109/1786 tested (80 survived, 10 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 52m) 110/1786 tested (81 survived, 10 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 51m) 112/1786 tested (83 survived, 10 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 51m) 114/1786 tested (85 survived, 10 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 51m) 115/1786 tested (86 survived, 10 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~2h 51m) 117/1786 tested (88 survived, 10 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~2h 51m) 118/1786 tested (89 survived, 10 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~2h 46m) 123/1786 tested (91 survived, 10 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~2h 47m) 124/1786 tested (92 survived, 10 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 45m) 127/1786 tested (94 survived, 10 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 43m) 130/1786 tested (94 survived, 10 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 38m) 135/1786 tested (94 survived, 11 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 34m) 140/1786 tested (94 survived, 11 timed out)
Mutation testing 8% (elapsed: ~13m, remaining: ~2h 33m) 143/1786 tested (94 survived, 12 timed out)
Mutation testing 8% (elapsed: ~13m, remaining: ~2h 33m) 144/1786 tested (95 survived, 12 timed out)
Mutation testing 8% (elapsed: ~13m, remaining: ~2h 33m) 146/1786 tested (97 survived, 12 timed out)
Mutation testing 8% (elapsed: ~13m, remaining: ~2h 34m) 147/1786 tested (98 survived, 12 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 33m) 149/1786 tested (100 survived, 12 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 34m) 150/1786 tested (101 survived, 12 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 34m) 152/1786 tested (103 survived, 12 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 33m) 154/1786 tested (105 survived, 12 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 34m) 155/1786 tested (106 survived, 12 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 33m) 157/1786 tested (108 survived, 12 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 34m) 158/1786 tested (109 survived, 12 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 34m) 160/1786 tested (111 survived, 12 timed out)
Mutation testing 9% (elapsed: ~15m, remaining: ~2h 34m) 161/1786 tested (112 survived, 12 timed out)
Mutation testing 9% (elapsed: ~15m, remaining: ~2h 34m) 163/1786 tested (114 survived, 12 timed out)
Mutation testing 9% (elapsed: ~15m, remaining: ~2h 33m) 165/1786 tested (116 survived, 12 timed out)
Mutation testing 9% (elapsed: ~15m, remaining: ~2h 34m) 166/1786 tested (117 survived, 12 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 34m) 168/1786 tested (119 survived, 12 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 34m) 169/1786 tested (120 survived, 12 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 34m) 171/1786 tested (122 survived, 12 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 34m) 172/1786 tested (123 survived, 12 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 34m) 174/1786 tested (125 survived, 12 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 33m) 176/1786 tested (127 survived, 12 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 34m) 177/1786 tested (128 survived, 12 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 34m) 179/1786 tested (130 survived, 12 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 34m) 180/1786 tested (131 survived, 12 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 34m) 182/1786 tested (133 survived, 12 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 34m) 183/1786 tested (134 survived, 12 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 34m) 185/1786 tested (136 survived, 12 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 33m) 187/1786 tested (138 survived, 12 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 34m) 188/1786 tested (139 survived, 12 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 34m) 190/1786 tested (141 survived, 12 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 34m) 191/1786 tested (142 survived, 12 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 34m) 193/1786 tested (144 survived, 12 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 34m) 194/1786 tested (145 survived, 12 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 34m) 196/1786 tested (147 survived, 12 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 33m) 198/1786 tested (149 survived, 12 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 34m) 199/1786 tested (150 survived, 12 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 33m) 201/1786 tested (152 survived, 12 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 34m) 202/1786 tested (153 survived, 12 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 33m) 204/1786 tested (155 survived, 12 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 33m) 206/1786 tested (157 survived, 12 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 33m) 207/1786 tested (158 survived, 12 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 32m) 210/1786 tested (159 survived, 12 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 32m) 212/1786 tested (161 survived, 12 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 31m) 214/1786 tested (163 survived, 12 timed out)
Mutation testing 12% (elapsed: ~20m, remaining: ~2h 32m) 215/1786 tested (164 survived, 12 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 31m) 217/1786 tested (166 survived, 12 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 32m) 218/1786 tested (167 survived, 12 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 31m) 220/1786 tested (169 survived, 12 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 32m) 221/1786 tested (170 survived, 12 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 31m) 223/1786 tested (172 survived, 12 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 31m) 225/1786 tested (174 survived, 12 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 31m) 226/1786 tested (175 survived, 12 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 31m) 228/1786 tested (177 survived, 12 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 31m) 229/1786 tested (178 survived, 12 timed out)
Mutation testing 13% (elapsed: ~22m, remaining: ~2h 29m) 233/1786 tested (179 survived, 12 timed out)
Mutation testing 13% (elapsed: ~22m, remaining: ~2h 30m) 234/1786 tested (179 survived, 12 timed out)
Mutation testing 13% (elapsed: ~22m, remaining: ~2h 30m) 235/1786 tested (179 survived, 12 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 30m) 237/1786 tested (180 survived, 12 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 30m) 238/1786 tested (181 survived, 12 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 29m) 241/1786 tested (183 survived, 12 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 29m) 243/1786 tested (184 survived, 12 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 29m) 244/1786 tested (184 survived, 12 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 29m) 246/1786 tested (186 survived, 12 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 29m) 247/1786 tested (187 survived, 12 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 29m) 249/1786 tested (189 survived, 12 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 28m) 251/1786 tested (191 survived, 12 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 29m) 252/1786 tested (192 survived, 12 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 28m) 254/1786 tested (194 survived, 12 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 29m) 255/1786 tested (195 survived, 12 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 28m) 257/1786 tested (197 survived, 12 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 29m) 258/1786 tested (198 survived, 12 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 28m) 260/1786 tested (200 survived, 12 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 28m) 262/1786 tested (202 survived, 12 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 28m) 263/1786 tested (203 survived, 12 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 28m) 265/1786 tested (205 survived, 12 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 28m) 266/1786 tested (206 survived, 12 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 28m) 268/1786 tested (208 survived, 12 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 27m) 270/1786 tested (210 survived, 12 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 28m) 271/1786 tested (211 survived, 12 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 27m) 273/1786 tested (213 survived, 12 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 28m) 274/1786 tested (214 survived, 12 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 27m) 276/1786 tested (216 survived, 12 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 27m) 277/1786 tested (217 survived, 12 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 27m) 279/1786 tested (219 survived, 12 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 27m) 281/1786 tested (221 survived, 12 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 27m) 282/1786 tested (222 survived, 12 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 27m) 284/1786 tested (224 survived, 12 timed out)
Mutation testing 15% (elapsed: ~28m, remaining: ~2h 27m) 285/1786 tested (225 survived, 12 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 27m) 287/1786 tested (227 survived, 12 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 27m) 288/1786 tested (228 survived, 12 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 27m) 290/1786 tested (230 survived, 12 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 26m) 292/1786 tested (232 survived, 12 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 26m) 293/1786 tested (233 survived, 12 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 26m) 295/1786 tested (235 survived, 12 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 26m) 296/1786 tested (236 survived, 12 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 26m) 298/1786 tested (238 survived, 12 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 26m) 299/1786 tested (239 survived, 12 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 26m) 301/1786 tested (241 survived, 12 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 26m) 303/1786 tested (243 survived, 12 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 26m) 304/1786 tested (244 survived, 12 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 25m) 306/1786 tested (246 survived, 12 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 26m) 307/1786 tested (247 survived, 12 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 25m) 309/1786 tested (249 survived, 12 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 26m) 310/1786 tested (250 survived, 12 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 25m) 312/1786 tested (252 survived, 12 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 25m) 314/1786 tested (254 survived, 12 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 25m) 315/1786 tested (255 survived, 12 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 24m) 318/1786 tested (257 survived, 12 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 23m) 321/1786 tested (258 survived, 12 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 23m) 323/1786 tested (260 survived, 12 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 23m) 324/1786 tested (261 survived, 12 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 23m) 326/1786 tested (263 survived, 12 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 23m) 327/1786 tested (264 survived, 12 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 22m) 330/1786 tested (266 survived, 12 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 22m) 331/1786 tested (267 survived, 12 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 22m) 333/1786 tested (269 survived, 12 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 22m) 334/1786 tested (270 survived, 12 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 22m) 336/1786 tested (272 survived, 12 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 22m) 338/1786 tested (274 survived, 12 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 22m) 339/1786 tested (275 survived, 12 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 21m) 341/1786 tested (277 survived, 12 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 22m) 342/1786 tested (278 survived, 12 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 21m) 344/1786 tested (280 survived, 12 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 22m) 345/1786 tested (281 survived, 12 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 21m) 347/1786 tested (283 survived, 12 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 21m) 349/1786 tested (285 survived, 12 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 21m) 350/1786 tested (286 survived, 12 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 20m) 353/1786 tested (288 survived, 12 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 20m) 354/1786 tested (289 survived, 12 timed out)
Mutation testing 19% (elapsed: ~35m, remaining: ~2h 20m) 356/1786 tested (291 survived, 12 timed out)
Mutation testing 19% (elapsed: ~35m, remaining: ~2h 20m) 357/1786 tested (292 survived, 12 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 20m) 359/1786 tested (294 survived, 12 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 20m) 361/1786 tested (296 survived, 12 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 20m) 362/1786 tested (297 survived, 12 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 19m) 364/1786 tested (299 survived, 12 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 20m) 365/1786 tested (300 survived, 12 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 19m) 367/1786 tested (302 survived, 12 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 20m) 368/1786 tested (303 survived, 12 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 19m) 370/1786 tested (305 survived, 12 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 19m) 372/1786 tested (307 survived, 12 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 19m) 373/1786 tested (308 survived, 12 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 18m) 376/1786 tested (310 survived, 12 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 18m) 377/1786 tested (310 survived, 12 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 19m) 378/1786 tested (310 survived, 13 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 19m) 379/1786 tested (310 survived, 13 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 18m) 382/1786 tested (310 survived, 13 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 18m) 384/1786 tested (310 survived, 13 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 18m) 385/1786 tested (310 survived, 13 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 18m) 386/1786 tested (310 survived, 13 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 18m) 387/1786 tested (310 survived, 13 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 18m) 388/1786 tested (310 survived, 14 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 18m) 389/1786 tested (310 survived, 15 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 19m) 389/1786 tested (310 survived, 15 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 16m) 397/1786 tested (310 survived, 16 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 14m) 403/1786 tested (310 survived, 16 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 14m) 404/1786 tested (310 survived, 17 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 14m) 405/1786 tested (311 survived, 17 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 14m) 407/1786 tested (313 survived, 17 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 14m) 408/1786 tested (314 survived, 17 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 14m) 410/1786 tested (316 survived, 17 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 14m) 411/1786 tested (317 survived, 17 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 14m) 412/1786 tested (317 survived, 18 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 14m) 413/1786 tested (318 survived, 18 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 14m) 414/1786 tested (318 survived, 19 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 13m) 418/1786 tested (319 survived, 19 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 13m) 419/1786 tested (320 survived, 19 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 13m) 421/1786 tested (322 survived, 19 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 13m) 422/1786 tested (323 survived, 19 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 13m) 424/1786 tested (325 survived, 19 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 13m) 425/1786 tested (326 survived, 19 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 13m) 427/1786 tested (328 survived, 19 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 12m) 429/1786 tested (330 survived, 19 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 12m) 430/1786 tested (331 survived, 19 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 12m) 432/1786 tested (333 survived, 19 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 12m) 433/1786 tested (334 survived, 19 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 12m) 435/1786 tested (336 survived, 19 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 12m) 436/1786 tested (337 survived, 19 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 12m) 438/1786 tested (339 survived, 19 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 12m) 440/1786 tested (341 survived, 19 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 12m) 441/1786 tested (342 survived, 19 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 11m) 443/1786 tested (344 survived, 19 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 11m) 444/1786 tested (345 survived, 19 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 11m) 446/1786 tested (347 survived, 19 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 11m) 447/1786 tested (348 survived, 19 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 11m) 449/1786 tested (350 survived, 19 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 10m) 452/1786 tested (351 survived, 19 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 10m) 453/1786 tested (351 survived, 20 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 11m) 454/1786 tested (352 survived, 20 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 10m) 456/1786 tested (354 survived, 20 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 10m) 457/1786 tested (355 survived, 20 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 10m) 458/1786 tested (355 survived, 21 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 11m) 458/1786 tested (355 survived, 21 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 10m) 461/1786 tested (355 survived, 22 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 10m) 462/1786 tested (355 survived, 22 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 10m) 463/1786 tested (355 survived, 23 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 11m) 463/1786 tested (355 survived, 23 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 11m) 464/1786 tested (355 survived, 24 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 11m) 466/1786 tested (355 survived, 25 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 11m) 466/1786 tested (355 survived, 25 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 11m) 467/1786 tested (355 survived, 26 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 11m) 469/1786 tested (357 survived, 26 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 11m) 471/1786 tested (359 survived, 26 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 11m) 472/1786 tested (360 survived, 26 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 11m) 474/1786 tested (361 survived, 26 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 10m) 476/1786 tested (361 survived, 26 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 10m) 477/1786 tested (361 survived, 26 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 10m) 478/1786 tested (361 survived, 26 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 10m) 479/1786 tested (361 survived, 26 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 11m) 480/1786 tested (362 survived, 26 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 10m) 482/1786 tested (364 survived, 26 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 10m) 484/1786 tested (366 survived, 26 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 10m) 485/1786 tested (367 survived, 26 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 10m) 487/1786 tested (369 survived, 26 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 10m) 488/1786 tested (370 survived, 26 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 10m) 490/1786 tested (372 survived, 26 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 10m) 491/1786 tested (373 survived, 26 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 9m) 493/1786 tested (375 survived, 26 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 9m) 495/1786 tested (377 survived, 26 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 9m) 496/1786 tested (378 survived, 26 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 9m) 498/1786 tested (380 survived, 26 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 9m) 499/1786 tested (381 survived, 26 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 9m) 501/1786 tested (383 survived, 26 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 9m) 502/1786 tested (384 survived, 26 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 8m) 504/1786 tested (386 survived, 26 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 8m) 506/1786 tested (388 survived, 26 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 8m) 507/1786 tested (389 survived, 26 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 8m) 509/1786 tested (391 survived, 26 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 8m) 510/1786 tested (392 survived, 26 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 8m) 512/1786 tested (394 survived, 26 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 8m) 513/1786 tested (395 survived, 26 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 7m) 515/1786 tested (397 survived, 26 timed out)
Mutation testing 28% (elapsed: ~52m, remaining: ~2h 7m) 517/1786 tested (399 survived, 26 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 7m) 518/1786 tested (400 survived, 26 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 7m) 520/1786 tested (402 survived, 26 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 7m) 521/1786 tested (403 survived, 26 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 7m) 523/1786 tested (405 survived, 26 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 7m) 524/1786 tested (406 survived, 26 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 6m) 526/1786 tested (408 survived, 26 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 6m) 528/1786 tested (410 survived, 26 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 6m) 529/1786 tested (411 survived, 26 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 6m) 531/1786 tested (413 survived, 26 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 6m) 532/1786 tested (414 survived, 26 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 6m) 534/1786 tested (416 survived, 26 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 6m) 535/1786 tested (417 survived, 26 timed out)
Mutation testing 30% (elapsed: ~54m, remaining: ~2h 5m) 537/1786 tested (419 survived, 26 timed out)
Mutation testing 30% (elapsed: ~54m, remaining: ~2h 5m) 539/1786 tested (421 survived, 26 timed out)
Mutation testing 30% (elapsed: ~54m, remaining: ~2h 5m) 540/1786 tested (422 survived, 26 timed out)
Mutation testing 30% (elapsed: ~54m, remaining: ~2h 5m) 542/1786 tested (424 survived, 26 timed out)
Mutation testing 30% (elapsed: ~54m, remaining: ~2h 5m) 543/1786 tested (425 survived, 26 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 5m) 545/1786 tested (427 survived, 26 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 5m) 546/1786 tested (428 survived, 26 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 5m) 548/1786 tested (430 survived, 26 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 4m) 550/1786 tested (432 survived, 26 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 4m) 551/1786 tested (433 survived, 26 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 4m) 553/1786 tested (435 survived, 26 timed out)
Mutation testing 31% (elapsed: ~56m, remaining: ~2h 4m) 554/1786 tested (436 survived, 26 timed out)
Mutation testing 31% (elapsed: ~56m, remaining: ~2h 4m) 556/1786 tested (438 survived, 26 timed out)
Mutation testing 31% (elapsed: ~56m, remaining: ~2h 3m) 558/1786 tested (439 survived, 26 timed out)
Mutation testing 31% (elapsed: ~56m, remaining: ~2h 4m) 559/1786 tested (439 survived, 27 timed out)
Mutation testing 31% (elapsed: ~56m, remaining: ~2h 4m) 559/1786 tested (439 survived, 27 timed out)
Mutation testing 31% (elapsed: ~56m, remaining: ~2h 4m) 561/1786 tested (440 survived, 28 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 4m) 561/1786 tested (440 survived, 28 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 4m) 562/1786 tested (440 survived, 28 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 4m) 563/1786 tested (440 survived, 28 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 4m) 564/1786 tested (440 survived, 29 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 4m) 564/1786 tested (440 survived, 29 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 4m) 565/1786 tested (440 survived, 30 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 5m) 566/1786 tested (440 survived, 31 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 5m) 567/1786 tested (440 survived, 32 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 5m) 568/1786 tested (441 survived, 32 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 4m) 570/1786 tested (443 survived, 32 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 5m) 570/1786 tested (443 survived, 32 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 5m) 571/1786 tested (443 survived, 33 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 5m) 572/1786 tested (443 survived, 34 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 5m) 572/1786 tested (443 survived, 34 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 5m) 574/1786 tested (444 survived, 35 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 5m) 575/1786 tested (445 survived, 35 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 5m) 577/1786 tested (447 survived, 35 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 5m) 578/1786 tested (448 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 4m) 580/1786 tested (450 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 4m) 581/1786 tested (451 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 4m) 583/1786 tested (453 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 4m) 585/1786 tested (455 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 4m) 586/1786 tested (456 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 3m) 588/1786 tested (458 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 3m) 589/1786 tested (459 survived, 35 timed out)
Mutation testing 33% (elapsed: ~1h 1m, remaining: ~2h 3m) 591/1786 tested (461 survived, 35 timed out)
Mutation testing 33% (elapsed: ~1h 1m, remaining: ~2h 4m) 591/1786 tested (461 survived, 35 timed out)
Mutation testing 33% (elapsed: ~1h 1m, remaining: ~2h 4m) 592/1786 tested (461 survived, 36 timed out)
Mutation testing 33% (elapsed: ~1h 1m, remaining: ~2h 4m) 593/1786 tested (461 survived, 37 timed out)
Mutation testing 33% (elapsed: ~1h 1m, remaining: ~2h 4m) 593/1786 tested (461 survived, 37 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 4m) 594/1786 tested (461 survived, 38 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 4m) 595/1786 tested (461 survived, 38 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 4m) 596/1786 tested (461 survived, 38 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 4m) 597/1786 tested (461 survived, 38 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 4m) 597/1786 tested (461 survived, 38 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 4m) 598/1786 tested (461 survived, 39 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 4m) 599/1786 tested (461 survived, 40 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 5m) 599/1786 tested (461 survived, 40 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 5m) 600/1786 tested (461 survived, 41 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 5m) 601/1786 tested (461 survived, 41 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 5m) 602/1786 tested (461 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 5m) 603/1786 tested (461 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 4m) 605/1786 tested (463 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 4m) 606/1786 tested (464 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 4m) 607/1786 tested (464 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 5m) 607/1786 tested (464 survived, 43 timed out)
Mutation testing 34% (elapsed: ~1h 4m, remaining: ~2h 5m) 608/1786 tested (464 survived, 44 timed out)
Mutation testing 34% (elapsed: ~1h 4m, remaining: ~2h 5m) 609/1786 tested (464 survived, 45 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 5m) 609/1786 tested (464 survived, 45 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 5m) 610/1786 tested (464 survived, 46 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 5m) 611/1786 tested (464 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 5m) 611/1786 tested (464 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 5m) 612/1786 tested (464 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 5m) 613/1786 tested (464 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 5m) 614/1786 tested (464 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 5m) 615/1786 tested (464 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 5m) 616/1786 tested (464 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 5m) 617/1786 tested (464 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 5m) 618/1786 tested (464 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 5m) 620/1786 tested (466 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 5m) 621/1786 tested (467 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 5m) 623/1786 tested (469 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 5m) 623/1786 tested (469 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 5m) 624/1786 tested (469 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 5m) 625/1786 tested (469 survived, 50 timed out)
Mutation testing 35% (elapsed: ~1h 7m, remaining: ~2h 5m) 627/1786 tested (470 survived, 50 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 5m) 628/1786 tested (470 survived, 51 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 5m) 628/1786 tested (470 survived, 51 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 5m) 629/1786 tested (470 survived, 52 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 5m) 630/1786 tested (470 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 5m) 630/1786 tested (470 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 5m) 631/1786 tested (470 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 5m) 632/1786 tested (470 survived, 55 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 6m) 632/1786 tested (470 survived, 55 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 6m) 633/1786 tested (470 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 6m) 634/1786 tested (470 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 6m) 634/1786 tested (470 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 6m) 635/1786 tested (470 survived, 58 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 6m) 636/1786 tested (470 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 6m) 638/1786 tested (472 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 6m) 639/1786 tested (473 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 5m) 641/1786 tested (475 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 5m) 642/1786 tested (476 survived, 59 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 5m) 644/1786 tested (478 survived, 59 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 5m) 645/1786 tested (479 survived, 59 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 5m) 647/1786 tested (481 survived, 59 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 4m) 649/1786 tested (483 survived, 59 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 4m) 650/1786 tested (484 survived, 59 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 4m) 652/1786 tested (486 survived, 59 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 4m) 653/1786 tested (487 survived, 59 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 4m) 655/1786 tested (489 survived, 59 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 4m) 656/1786 tested (490 survived, 59 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 4m) 658/1786 tested (492 survived, 59 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 3m) 660/1786 tested (494 survived, 59 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 3m) 661/1786 tested (495 survived, 59 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 3m) 663/1786 tested (497 survived, 59 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 3m) 664/1786 tested (498 survived, 59 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 3m) 666/1786 tested (500 survived, 59 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 3m) 667/1786 tested (501 survived, 59 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 2m) 669/1786 tested (503 survived, 59 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 2m) 671/1786 tested (505 survived, 59 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 2m) 672/1786 tested (506 survived, 59 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 2m) 674/1786 tested (508 survived, 59 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 2m) 675/1786 tested (509 survived, 59 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 1m) 677/1786 tested (511 survived, 59 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 1m) 678/1786 tested (512 survived, 59 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~2h 1m) 680/1786 tested (514 survived, 59 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~2h 1m) 682/1786 tested (516 survived, 59 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~2h 1m) 683/1786 tested (517 survived, 59 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~2h 0m) 685/1786 tested (519 survived, 59 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~2h 0m) 686/1786 tested (520 survived, 59 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~2h 0m) 688/1786 tested (522 survived, 59 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~2h 0m) 689/1786 tested (523 survived, 59 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~2h 0m) 691/1786 tested (525 survived, 59 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~1h 59m) 693/1786 tested (527 survived, 59 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~1h 59m) 694/1786 tested (528 survived, 59 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~1h 59m) 696/1786 tested (530 survived, 59 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 59m) 697/1786 tested (531 survived, 59 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 59m) 699/1786 tested (533 survived, 59 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 59m) 700/1786 tested (534 survived, 59 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~1h 58m) 705/1786 tested (535 survived, 59 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~1h 58m) 706/1786 tested (535 survived, 59 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~1h 58m) 707/1786 tested (535 survived, 59 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~1h 57m) 709/1786 tested (537 survived, 59 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~1h 57m) 711/1786 tested (539 survived, 59 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~1h 57m) 712/1786 tested (540 survived, 59 timed out)
Mutation testing 39% (elapsed: ~1h 18m, remaining: ~1h 57m) 714/1786 tested (542 survived, 59 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 57m) 715/1786 tested (543 survived, 59 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 56m) 717/1786 tested (545 survived, 59 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 56m) 718/1786 tested (546 survived, 59 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 56m) 720/1786 tested (548 survived, 59 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 56m) 722/1786 tested (550 survived, 59 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 56m) 723/1786 tested (551 survived, 59 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 55m) 725/1786 tested (553 survived, 59 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 55m) 726/1786 tested (554 survived, 59 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 55m) 728/1786 tested (556 survived, 59 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 55m) 729/1786 tested (557 survived, 59 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 55m) 731/1786 tested (559 survived, 59 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 54m) 733/1786 tested (561 survived, 59 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 54m) 734/1786 tested (562 survived, 59 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 54m) 736/1786 tested (564 survived, 59 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 54m) 737/1786 tested (565 survived, 59 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 54m) 739/1786 tested (567 survived, 59 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 54m) 740/1786 tested (568 survived, 59 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 53m) 742/1786 tested (570 survived, 59 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 53m) 744/1786 tested (572 survived, 59 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 53m) 745/1786 tested (573 survived, 59 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 53m) 747/1786 tested (575 survived, 59 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 53m) 748/1786 tested (576 survived, 59 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 53m) 750/1786 tested (578 survived, 59 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 52m) 752/1786 tested (580 survived, 59 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 52m) 753/1786 tested (581 survived, 59 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 52m) 755/1786 tested (583 survived, 59 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 52m) 756/1786 tested (584 survived, 59 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 52m) 758/1786 tested (586 survived, 59 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 52m) 759/1786 tested (587 survived, 59 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 51m) 761/1786 tested (588 survived, 59 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 51m) 762/1786 tested (589 survived, 59 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 51m) 764/1786 tested (591 survived, 59 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 51m) 765/1786 tested (592 survived, 59 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 51m) 767/1786 tested (593 survived, 59 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 51m) 768/1786 tested (594 survived, 59 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 50m) 770/1786 tested (596 survived, 59 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 50m) 772/1786 tested (598 survived, 59 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 50m) 773/1786 tested (599 survived, 59 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 50m) 774/1786 tested (600 survived, 59 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 50m) 775/1786 tested (600 survived, 60 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 50m) 777/1786 tested (602 survived, 60 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 50m) 778/1786 tested (603 survived, 60 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 49m) 780/1786 tested (605 survived, 60 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 49m) 781/1786 tested (606 survived, 60 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 49m) 783/1786 tested (608 survived, 60 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 49m) 784/1786 tested (609 survived, 60 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 49m) 786/1786 tested (611 survived, 60 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 48m) 788/1786 tested (612 survived, 60 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 48m) 790/1786 tested (614 survived, 60 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 48m) 792/1786 tested (616 survived, 60 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 48m) 793/1786 tested (617 survived, 60 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 48m) 795/1786 tested (619 survived, 60 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 47m) 796/1786 tested (620 survived, 60 timed out)
Mutation testing 44% (elapsed: ~1h 27m, remaining: ~1h 47m) 798/1786 tested (622 survived, 60 timed out)
Mutation testing 44% (elapsed: ~1h 27m, remaining: ~1h 47m) 800/1786 tested (624 survived, 60 timed out)
Mutation testing 44% (elapsed: ~1h 27m, remaining: ~1h 47m) 801/1786 tested (625 survived, 60 timed out)
Mutation testing 44% (elapsed: ~1h 27m, remaining: ~1h 47m) 803/1786 tested (627 survived, 60 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 47m) 804/1786 tested (628 survived, 60 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 46m) 806/1786 tested (630 survived, 60 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 46m) 807/1786 tested (631 survived, 60 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 46m) 809/1786 tested (633 survived, 60 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 46m) 811/1786 tested (635 survived, 60 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 46m) 812/1786 tested (636 survived, 60 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 45m) 814/1786 tested (638 survived, 60 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 45m) 815/1786 tested (639 survived, 60 timed out)
Mutation testing 45% (elapsed: ~1h 29m, remaining: ~1h 45m) 817/1786 tested (641 survived, 60 timed out)
Mutation testing 45% (elapsed: ~1h 29m, remaining: ~1h 45m) 818/1786 tested (642 survived, 60 timed out)
Mutation testing 45% (elapsed: ~1h 29m, remaining: ~1h 45m) 820/1786 tested (644 survived, 60 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 44m) 822/1786 tested (646 survived, 60 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 44m) 823/1786 tested (647 survived, 60 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 44m) 825/1786 tested (649 survived, 60 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 44m) 826/1786 tested (650 survived, 60 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 44m) 828/1786 tested (652 survived, 60 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 44m) 829/1786 tested (653 survived, 60 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 44m) 831/1786 tested (655 survived, 60 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 43m) 832/1786 tested (656 survived, 60 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 43m) 834/1786 tested (658 survived, 60 timed out)
Mutation testing 46% (elapsed: ~1h 31m, remaining: ~1h 43m) 836/1786 tested (660 survived, 60 timed out)
Mutation testing 46% (elapsed: ~1h 31m, remaining: ~1h 43m) 837/1786 tested (661 survived, 60 timed out)
Mutation testing 46% (elapsed: ~1h 31m, remaining: ~1h 43m) 839/1786 tested (663 survived, 60 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 43m) 840/1786 tested (664 survived, 60 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 43m) 841/1786 tested (664 survived, 61 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 43m) 841/1786 tested (664 survived, 61 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 43m) 842/1786 tested (664 survived, 62 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 43m) 843/1786 tested (664 survived, 63 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 43m) 843/1786 tested (664 survived, 63 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 43m) 844/1786 tested (664 survived, 64 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 43m) 845/1786 tested (664 survived, 65 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 43m) 845/1786 tested (664 survived, 65 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 43m) 847/1786 tested (665 survived, 66 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 43m) 848/1786 tested (666 survived, 66 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 42m) 850/1786 tested (668 survived, 66 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 42m) 851/1786 tested (669 survived, 66 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 42m) 853/1786 tested (671 survived, 66 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 42m) 855/1786 tested (673 survived, 66 timed out)
Mutation testing 47% (elapsed: ~1h 34m, remaining: ~1h 42m) 856/1786 tested (674 survived, 66 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 41m) 858/1786 tested (676 survived, 66 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 41m) 859/1786 tested (677 survived, 66 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 41m) 861/1786 tested (679 survived, 66 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 41m) 862/1786 tested (680 survived, 66 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 41m) 864/1786 tested (682 survived, 66 timed out)
Mutation testing 48% (elapsed: ~1h 35m, remaining: ~1h 40m) 866/1786 tested (684 survived, 66 timed out)
Mutation testing 48% (elapsed: ~1h 35m, remaining: ~1h 40m) 867/1786 tested (685 survived, 66 timed out)
Mutation testing 48% (elapsed: ~1h 35m, remaining: ~1h 40m) 869/1786 tested (687 survived, 66 timed out)
Mutation testing 48% (elapsed: ~1h 35m, remaining: ~1h 40m) 870/1786 tested (688 survived, 66 timed out)
Mutation testing 48% (elapsed: ~1h 35m, remaining: ~1h 40m) 872/1786 tested (690 survived, 66 timed out)
Mutation testing 48% (elapsed: ~1h 35m, remaining: ~1h 40m) 873/1786 tested (691 survived, 66 timed out)
Mutation testing 48% (elapsed: ~1h 36m, remaining: ~1h 39m) 875/1786 tested (693 survived, 66 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 39m) 877/1786 tested (695 survived, 66 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 39m) 878/1786 tested (696 survived, 66 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 39m) 880/1786 tested (698 survived, 66 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 39m) 881/1786 tested (699 survived, 66 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 39m) 883/1786 tested (701 survived, 66 timed out)
Mutation testing 49% (elapsed: ~1h 37m, remaining: ~1h 38m) 884/1786 tested (702 survived, 66 timed out)
Mutation testing 49% (elapsed: ~1h 37m, remaining: ~1h 38m) 886/1786 tested (704 survived, 66 timed out)
Mutation testing 49% (elapsed: ~1h 37m, remaining: ~1h 38m) 888/1786 tested (706 survived, 66 timed out)
Mutation testing 49% (elapsed: ~1h 37m, remaining: ~1h 38m) 889/1786 tested (707 survived, 66 timed out)
Mutation testing 49% (elapsed: ~1h 37m, remaining: ~1h 38m) 891/1786 tested (708 survived, 66 timed out)
Mutation testing 49% (elapsed: ~1h 37m, remaining: ~1h 38m) 892/1786 tested (708 survived, 66 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 37m) 893/1786 tested (708 survived, 66 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 37m) 895/1786 tested (708 survived, 66 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 37m) 896/1786 tested (708 survived, 66 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 37m) 898/1786 tested (708 survived, 66 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 37m) 899/1786 tested (708 survived, 66 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 37m) 901/1786 tested (708 survived, 66 timed out)
Mutation testing 50% (elapsed: ~1h 39m, remaining: ~1h 37m) 902/1786 tested (709 survived, 66 timed out)
Mutation testing 50% (elapsed: ~1h 39m, remaining: ~1h 36m) 904/1786 tested (711 survived, 66 timed out)
Mutation testing 50% (elapsed: ~1h 39m, remaining: ~1h 36m) 905/1786 tested (712 survived, 66 timed out)
Mutation testing 50% (elapsed: ~1h 39m, remaining: ~1h 36m) 907/1786 tested (714 survived, 66 timed out)
Mutation testing 50% (elapsed: ~1h 39m, remaining: ~1h 36m) 909/1786 tested (716 survived, 66 timed out)
Mutation testing 50% (elapsed: ~1h 39m, remaining: ~1h 36m) 910/1786 tested (717 survived, 66 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 35m) 912/1786 tested (719 survived, 66 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 35m) 913/1786 tested (720 survived, 66 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 35m) 915/1786 tested (722 survived, 66 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 35m) 916/1786 tested (723 survived, 66 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 35m) 918/1786 tested (725 survived, 66 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 34m) 920/1786 tested (727 survived, 66 timed out)
Mutation testing 51% (elapsed: ~1h 41m, remaining: ~1h 34m) 921/1786 tested (728 survived, 66 timed out)
Mutation testing 51% (elapsed: ~1h 41m, remaining: ~1h 34m) 923/1786 tested (730 survived, 66 timed out)
Mutation testing 51% (elapsed: ~1h 41m, remaining: ~1h 34m) 924/1786 tested (731 survived, 66 timed out)
Mutation testing 51% (elapsed: ~1h 41m, remaining: ~1h 34m) 926/1786 tested (733 survived, 66 timed out)
Mutation testing 51% (elapsed: ~1h 41m, remaining: ~1h 34m) 927/1786 tested (734 survived, 66 timed out)
Mutation testing 52% (elapsed: ~1h 41m, remaining: ~1h 33m) 929/1786 tested (736 survived, 66 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 33m) 931/1786 tested (738 survived, 66 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 33m) 932/1786 tested (739 survived, 66 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 33m) 934/1786 tested (741 survived, 66 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 33m) 935/1786 tested (742 survived, 66 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 33m) 937/1786 tested (744 survived, 66 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 32m) 938/1786 tested (745 survived, 66 timed out)
Mutation testing 52% (elapsed: ~1h 43m, remaining: ~1h 32m) 940/1786 tested (747 survived, 66 timed out)
Mutation testing 52% (elapsed: ~1h 43m, remaining: ~1h 32m) 942/1786 tested (749 survived, 66 timed out)
Mutation testing 52% (elapsed: ~1h 43m, remaining: ~1h 32m) 943/1786 tested (750 survived, 66 timed out)
Mutation testing 52% (elapsed: ~1h 43m, remaining: ~1h 32m) 945/1786 tested (752 survived, 66 timed out)
Mutation testing 52% (elapsed: ~1h 43m, remaining: ~1h 32m) 946/1786 tested (753 survived, 66 timed out)
Mutation testing 53% (elapsed: ~1h 43m, remaining: ~1h 31m) 948/1786 tested (755 survived, 66 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 31m) 949/1786 tested (756 survived, 66 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 31m) 951/1786 tested (758 survived, 66 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 31m) 953/1786 tested (760 survived, 66 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 31m) 954/1786 tested (761 survived, 66 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 30m) 956/1786 tested (763 survived, 66 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 30m) 957/1786 tested (764 survived, 66 timed out)
Mutation testing 53% (elapsed: ~1h 45m, remaining: ~1h 30m) 959/1786 tested (766 survived, 66 timed out)
Mutation testing 53% (elapsed: ~1h 45m, remaining: ~1h 30m) 960/1786 tested (767 survived, 66 timed out)
Mutation testing 53% (elapsed: ~1h 45m, remaining: ~1h 30m) 962/1786 tested (769 survived, 66 timed out)
Mutation testing 53% (elapsed: ~1h 45m, remaining: ~1h 29m) 964/1786 tested (771 survived, 66 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 29m) 965/1786 tested (772 survived, 66 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 29m) 967/1786 tested (774 survived, 66 timed out)
Mutation testing 54% (elapsed: ~1h 46m, remaining: ~1h 29m) 968/1786 tested (775 survived, 66 timed out)
Mutation testing 54% (elapsed: ~1h 46m, remaining: ~1h 29m) 970/1786 tested (777 survived, 66 timed out)
Mutation testing 54% (elapsed: ~1h 46m, remaining: ~1h 29m) 971/1786 tested (778 survived, 66 timed out)
Mutation testing 54% (elapsed: ~1h 46m, remaining: ~1h 28m) 973/1786 tested (780 survived, 66 timed out)
Mutation testing 54% (elapsed: ~1h 46m, remaining: ~1h 28m) 975/1786 tested (782 survived, 66 timed out)
Mutation testing 54% (elapsed: ~1h 46m, remaining: ~1h 28m) 976/1786 tested (783 survived, 66 timed out)
Mutation testing 54% (elapsed: ~1h 47m, remaining: ~1h 28m) 978/1786 tested (785 survived, 66 timed out)
Mutation testing 54% (elapsed: ~1h 47m, remaining: ~1h 28m) 979/1786 tested (786 survived, 66 timed out)
Mutation testing 54% (elapsed: ~1h 47m, remaining: ~1h 28m) 981/1786 tested (788 survived, 66 timed out)
Mutation testing 54% (elapsed: ~1h 47m, remaining: ~1h 28m) 982/1786 tested (789 survived, 66 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 27m) 984/1786 tested (791 survived, 66 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 27m) 986/1786 tested (793 survived, 66 timed out)
Mutation testing 55% (elapsed: ~1h 48m, remaining: ~1h 27m) 987/1786 tested (794 survived, 66 timed out)
Mutation testing 55% (elapsed: ~1h 48m, remaining: ~1h 27m) 989/1786 tested (796 survived, 66 timed out)
Mutation testing 55% (elapsed: ~1h 48m, remaining: ~1h 27m) 990/1786 tested (797 survived, 66 timed out)
Mutation testing 55% (elapsed: ~1h 48m, remaining: ~1h 26m) 992/1786 tested (799 survived, 66 timed out)
Mutation testing 55% (elapsed: ~1h 48m, remaining: ~1h 26m) 993/1786 tested (800 survived, 66 timed out)
Mutation testing 55% (elapsed: ~1h 48m, remaining: ~1h 26m) 995/1786 tested (802 survived, 66 timed out)
Mutation testing 55% (elapsed: ~1h 49m, remaining: ~1h 26m) 996/1786 tested (803 survived, 66 timed out)
Mutation testing 55% (elapsed: ~1h 49m, remaining: ~1h 26m) 998/1786 tested (805 survived, 66 timed out)
Mutation testing 55% (elapsed: ~1h 49m, remaining: ~1h 25m) 1000/1786 tested (807 survived, 66 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 25m) 1001/1786 tested (808 survived, 66 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 25m) 1003/1786 tested (810 survived, 66 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 25m) 1004/1786 tested (811 survived, 66 timed out)
Mutation testing 56% (elapsed: ~1h 50m, remaining: ~1h 25m) 1006/1786 tested (813 survived, 66 timed out)
Mutation testing 56% (elapsed: ~1h 50m, remaining: ~1h 25m) 1007/1786 tested (814 survived, 66 timed out)
Mutation testing 56% (elapsed: ~1h 50m, remaining: ~1h 24m) 1009/1786 tested (816 survived, 66 timed out)
Mutation testing 56% (elapsed: ~1h 50m, remaining: ~1h 24m) 1011/1786 tested (818 survived, 66 timed out)
Mutation testing 56% (elapsed: ~1h 50m, remaining: ~1h 24m) 1012/1786 tested (819 survived, 66 timed out)
Mutation testing 56% (elapsed: ~1h 50m, remaining: ~1h 24m) 1014/1786 tested (821 survived, 66 timed out)
Mutation testing 56% (elapsed: ~1h 51m, remaining: ~1h 24m) 1015/1786 tested (822 survived, 66 timed out)
Mutation testing 56% (elapsed: ~1h 51m, remaining: ~1h 24m) 1017/1786 tested (824 survived, 66 timed out)
Mutation testing 56% (elapsed: ~1h 51m, remaining: ~1h 23m) 1018/1786 tested (825 survived, 66 timed out)
Mutation testing 57% (elapsed: ~1h 51m, remaining: ~1h 23m) 1020/1786 tested (827 survived, 66 timed out)
Mutation testing 57% (elapsed: ~1h 51m, remaining: ~1h 23m) 1022/1786 tested (829 survived, 66 timed out)
Mutation testing 57% (elapsed: ~1h 51m, remaining: ~1h 23m) 1023/1786 tested (830 survived, 66 timed out)
Mutation testing 57% (elapsed: ~1h 52m, remaining: ~1h 23m) 1025/1786 tested (832 survived, 66 timed out)
Mutation testing 57% (elapsed: ~1h 52m, remaining: ~1h 23m) 1026/1786 tested (833 survived, 66 timed out)
Mutation testing 57% (elapsed: ~1h 52m, remaining: ~1h 22m) 1028/1786 tested (835 survived, 66 timed out)
Mutation testing 57% (elapsed: ~1h 52m, remaining: ~1h 22m) 1029/1786 tested (836 survived, 66 timed out)
Mutation testing 57% (elapsed: ~1h 52m, remaining: ~1h 22m) 1031/1786 tested (838 survived, 66 timed out)
Mutation testing 57% (elapsed: ~1h 52m, remaining: ~1h 22m) 1033/1786 tested (840 survived, 66 timed out)
Mutation testing 57% (elapsed: ~1h 53m, remaining: ~1h 22m) 1034/1786 tested (841 survived, 66 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 21m) 1036/1786 tested (843 survived, 66 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 21m) 1037/1786 tested (844 survived, 66 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 21m) 1039/1786 tested (846 survived, 66 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 21m) 1040/1786 tested (847 survived, 66 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 21m) 1042/1786 tested (849 survived, 66 timed out)
Mutation testing 58% (elapsed: ~1h 54m, remaining: ~1h 21m) 1044/1786 tested (851 survived, 66 timed out)
Mutation testing 58% (elapsed: ~1h 54m, remaining: ~1h 20m) 1045/1786 tested (852 survived, 66 timed out)
Mutation testing 58% (elapsed: ~1h 54m, remaining: ~1h 20m) 1047/1786 tested (854 survived, 66 timed out)
Mutation testing 58% (elapsed: ~1h 54m, remaining: ~1h 20m) 1048/1786 tested (855 survived, 66 timed out)
Mutation testing 58% (elapsed: ~1h 54m, remaining: ~1h 20m) 1050/1786 tested (857 survived, 66 timed out)
Mutation testing 58% (elapsed: ~1h 54m, remaining: ~1h 20m) 1051/1786 tested (858 survived, 66 timed out)
Mutation testing 58% (elapsed: ~1h 55m, remaining: ~1h 20m) 1053/1786 tested (860 survived, 66 timed out)
Mutation testing 59% (elapsed: ~1h 55m, remaining: ~1h 19m) 1055/1786 tested (862 survived, 66 timed out)
Mutation testing 59% (elapsed: ~1h 55m, remaining: ~1h 19m) 1056/1786 tested (863 survived, 66 timed out)
Mutation testing 59% (elapsed: ~1h 55m, remaining: ~1h 19m) 1058/1786 tested (865 survived, 66 timed out)
Mutation testing 59% (elapsed: ~1h 55m, remaining: ~1h 19m) 1059/1786 tested (866 survived, 66 timed out)
Mutation testing 59% (elapsed: ~1h 55m, remaining: ~1h 19m) 1061/1786 tested (868 survived, 66 timed out)
Mutation testing 59% (elapsed: ~1h 56m, remaining: ~1h 19m) 1062/1786 tested (869 survived, 66 timed out)
Mutation testing 59% (elapsed: ~1h 56m, remaining: ~1h 18m) 1064/1786 tested (871 survived, 66 timed out)
Mutation testing 59% (elapsed: ~1h 56m, remaining: ~1h 18m) 1066/1786 tested (873 survived, 66 timed out)
Mutation testing 59% (elapsed: ~1h 56m, remaining: ~1h 18m) 1067/1786 tested (874 survived, 66 timed out)
Mutation testing 59% (elapsed: ~1h 56m, remaining: ~1h 18m) 1069/1786 tested (876 survived, 66 timed out)
Mutation testing 59% (elapsed: ~1h 56m, remaining: ~1h 18m) 1070/1786 tested (877 survived, 66 timed out)
Mutation testing 60% (elapsed: ~1h 57m, remaining: ~1h 17m) 1072/1786 tested (879 survived, 66 timed out)
Mutation testing 60% (elapsed: ~1h 57m, remaining: ~1h 17m) 1073/1786 tested (880 survived, 66 timed out)
Mutation testing 60% (elapsed: ~1h 57m, remaining: ~1h 17m) 1075/1786 tested (882 survived, 66 timed out)
Mutation testing 60% (elapsed: ~1h 57m, remaining: ~1h 17m) 1077/1786 tested (884 survived, 66 timed out)
Mutation testing 60% (elapsed: ~1h 57m, remaining: ~1h 17m) 1078/1786 tested (885 survived, 66 timed out)
Mutation testing 60% (elapsed: ~1h 57m, remaining: ~1h 17m) 1080/1786 tested (887 survived, 66 timed out)
Mutation testing 60% (elapsed: ~1h 58m, remaining: ~1h 16m) 1081/1786 tested (888 survived, 66 timed out)
Mutation testing 60% (elapsed: ~1h 58m, remaining: ~1h 16m) 1083/1786 tested (890 survived, 66 timed out)
Mutation testing 60% (elapsed: ~1h 58m, remaining: ~1h 16m) 1084/1786 tested (891 survived, 66 timed out)
Mutation testing 60% (elapsed: ~1h 58m, remaining: ~1h 16m) 1086/1786 tested (893 survived, 66 timed out)
Mutation testing 60% (elapsed: ~1h 58m, remaining: ~1h 16m) 1088/1786 tested (895 survived, 66 timed out)
Mutation testing 60% (elapsed: ~1h 58m, remaining: ~1h 16m) 1089/1786 tested (896 survived, 66 timed out)
Mutation testing 61% (elapsed: ~1h 59m, remaining: ~1h 15m) 1091/1786 tested (898 survived, 66 timed out)
Mutation testing 61% (elapsed: ~1h 59m, remaining: ~1h 15m) 1092/1786 tested (899 survived, 66 timed out)
Mutation testing 61% (elapsed: ~1h 59m, remaining: ~1h 15m) 1094/1786 tested (901 survived, 66 timed out)
Mutation testing 61% (elapsed: ~1h 59m, remaining: ~1h 15m) 1095/1786 tested (902 survived, 66 timed out)
Mutation testing 61% (elapsed: ~1h 59m, remaining: ~1h 15m) 1097/1786 tested (904 survived, 66 timed out)
Mutation testing 61% (elapsed: ~1h 59m, remaining: ~1h 15m) 1098/1786 tested (905 survived, 66 timed out)
Mutation testing 61% (elapsed: ~2h 0m, remaining: ~1h 14m) 1100/1786 tested (907 survived, 66 timed out)
Mutation testing 61% (elapsed: ~2h 0m, remaining: ~1h 14m) 1102/1786 tested (909 survived, 66 timed out)
Mutation testing 61% (elapsed: ~2h 0m, remaining: ~1h 14m) 1103/1786 tested (910 survived, 66 timed out)
Mutation testing 61% (elapsed: ~2h 0m, remaining: ~1h 14m) 1105/1786 tested (912 survived, 66 timed out)
Mutation testing 61% (elapsed: ~2h 0m, remaining: ~1h 14m) 1106/1786 tested (913 survived, 66 timed out)
Mutation testing 62% (elapsed: ~2h 0m, remaining: ~1h 13m) 1108/1786 tested (915 survived, 66 timed out)
Mutation testing 62% (elapsed: ~2h 1m, remaining: ~1h 13m) 1109/1786 tested (916 survived, 66 timed out)
Mutation testing 62% (elapsed: ~2h 1m, remaining: ~1h 13m) 1111/1786 tested (918 survived, 66 timed out)
Mutation testing 62% (elapsed: ~2h 1m, remaining: ~1h 13m) 1113/1786 tested (920 survived, 66 timed out)
Mutation testing 62% (elapsed: ~2h 1m, remaining: ~1h 13m) 1114/1786 tested (921 survived, 66 timed out)
Mutation testing 62% (elapsed: ~2h 1m, remaining: ~1h 13m) 1116/1786 tested (923 survived, 66 timed out)
Mutation testing 62% (elapsed: ~2h 1m, remaining: ~1h 12m) 1117/1786 tested (924 survived, 66 timed out)
Mutation testing 62% (elapsed: ~2h 2m, remaining: ~1h 12m) 1119/1786 tested (926 survived, 66 timed out)
Mutation testing 62% (elapsed: ~2h 2m, remaining: ~1h 12m) 1120/1786 tested (927 survived, 66 timed out)
Mutation testing 62% (elapsed: ~2h 2m, remaining: ~1h 12m) 1122/1786 tested (929 survived, 66 timed out)
Mutation testing 62% (elapsed: ~2h 2m, remaining: ~1h 12m) 1124/1786 tested (931 survived, 66 timed out)
Mutation testing 62% (elapsed: ~2h 2m, remaining: ~1h 12m) 1125/1786 tested (932 survived, 66 timed out)
Mutation testing 63% (elapsed: ~2h 2m, remaining: ~1h 11m) 1127/1786 tested (934 survived, 66 timed out)
Mutation testing 63% (elapsed: ~2h 3m, remaining: ~1h 11m) 1128/1786 tested (935 survived, 66 timed out)
Mutation testing 63% (elapsed: ~2h 3m, remaining: ~1h 11m) 1130/1786 tested (937 survived, 66 timed out)
Mutation testing 63% (elapsed: ~2h 3m, remaining: ~1h 11m) 1131/1786 tested (938 survived, 66 timed out)
Mutation testing 63% (elapsed: ~2h 3m, remaining: ~1h 11m) 1133/1786 tested (940 survived, 66 timed out)
Mutation testing 63% (elapsed: ~2h 3m, remaining: ~1h 10m) 1135/1786 tested (942 survived, 66 timed out)
Mutation testing 63% (elapsed: ~2h 3m, remaining: ~1h 10m) 1136/1786 tested (943 survived, 66 timed out)
Mutation testing 63% (elapsed: ~2h 4m, remaining: ~1h 10m) 1138/1786 tested (945 survived, 66 timed out)
Mutation testing 63% (elapsed: ~2h 4m, remaining: ~1h 10m) 1139/1786 tested (946 survived, 66 timed out)
Mutation testing 63% (elapsed: ~2h 4m, remaining: ~1h 10m) 1141/1786 tested (948 survived, 66 timed out)
Mutation testing 63% (elapsed: ~2h 4m, remaining: ~1h 10m) 1142/1786 tested (949 survived, 66 timed out)
Mutation testing 64% (elapsed: ~2h 4m, remaining: ~1h 9m) 1144/1786 tested (951 survived, 66 timed out)
Mutation testing 64% (elapsed: ~2h 4m, remaining: ~1h 9m) 1145/1786 tested (952 survived, 66 timed out)
Mutation testing 64% (elapsed: ~2h 5m, remaining: ~1h 9m) 1147/1786 tested (954 survived, 66 timed out)
Mutation testing 64% (elapsed: ~2h 5m, remaining: ~1h 9m) 1149/1786 tested (956 survived, 66 timed out)
Mutation testing 64% (elapsed: ~2h 5m, remaining: ~1h 9m) 1150/1786 tested (957 survived, 66 timed out)
Mutation testing 64% (elapsed: ~2h 5m, remaining: ~1h 9m) 1152/1786 tested (959 survived, 66 timed out)
Mutation testing 64% (elapsed: ~2h 5m, remaining: ~1h 8m) 1153/1786 tested (960 survived, 66 timed out)
Mutation testing 64% (elapsed: ~2h 5m, remaining: ~1h 8m) 1155/1786 tested (962 survived, 66 timed out)
Mutation testing 64% (elapsed: ~2h 6m, remaining: ~1h 8m) 1156/1786 tested (963 survived, 66 timed out)
Mutation testing 64% (elapsed: ~2h 6m, remaining: ~1h 8m) 1158/1786 tested (965 survived, 66 timed out)
Mutation testing 64% (elapsed: ~2h 6m, remaining: ~1h 8m) 1160/1786 tested (967 survived, 66 timed out)
Mutation testing 65% (elapsed: ~2h 6m, remaining: ~1h 8m) 1161/1786 tested (968 survived, 66 timed out)
Mutation testing 65% (elapsed: ~2h 6m, remaining: ~1h 7m) 1163/1786 tested (970 survived, 66 timed out)
Mutation testing 65% (elapsed: ~2h 6m, remaining: ~1h 7m) 1164/1786 tested (971 survived, 66 timed out)
Mutation testing 65% (elapsed: ~2h 7m, remaining: ~1h 7m) 1166/1786 tested (973 survived, 66 timed out)
Mutation testing 65% (elapsed: ~2h 7m, remaining: ~1h 7m) 1167/1786 tested (974 survived, 66 timed out)
Mutation testing 65% (elapsed: ~2h 7m, remaining: ~1h 7m) 1169/1786 tested (976 survived, 66 timed out)
Mutation testing 65% (elapsed: ~2h 7m, remaining: ~1h 6m) 1171/1786 tested (978 survived, 66 timed out)
Mutation testing 65% (elapsed: ~2h 7m, remaining: ~1h 6m) 1172/1786 tested (979 survived, 66 timed out)
Mutation testing 65% (elapsed: ~2h 7m, remaining: ~1h 6m) 1174/1786 tested (981 survived, 66 timed out)
Mutation testing 65% (elapsed: ~2h 8m, remaining: ~1h 6m) 1175/1786 tested (982 survived, 66 timed out)
Mutation testing 65% (elapsed: ~2h 8m, remaining: ~1h 6m) 1177/1786 tested (984 survived, 66 timed out)
Mutation testing 65% (elapsed: ~2h 8m, remaining: ~1h 6m) 1178/1786 tested (985 survived, 66 timed out)
Mutation testing 66% (elapsed: ~2h 8m, remaining: ~1h 5m) 1180/1786 tested (987 survived, 66 timed out)
Mutation testing 66% (elapsed: ~2h 8m, remaining: ~1h 5m) 1182/1786 tested (989 survived, 66 timed out)
Mutation testing 66% (elapsed: ~2h 8m, remaining: ~1h 5m) 1183/1786 tested (990 survived, 66 timed out)
Mutation testing 66% (elapsed: ~2h 9m, remaining: ~1h 5m) 1185/1786 tested (992 survived, 66 timed out)
Mutation testing 66% (elapsed: ~2h 9m, remaining: ~1h 5m) 1186/1786 tested (993 survived, 66 timed out)
Mutation testing 66% (elapsed: ~2h 9m, remaining: ~1h 5m) 1188/1786 tested (995 survived, 66 timed out)
Mutation testing 66% (elapsed: ~2h 9m, remaining: ~1h 5m) 1189/1786 tested (996 survived, 66 timed out)
Mutation testing 66% (elapsed: ~2h 9m, remaining: ~1h 4m) 1191/1786 tested (998 survived, 66 timed out)
Mutation testing 66% (elapsed: ~2h 9m, remaining: ~1h 4m) 1193/1786 tested (1000 survived, 66 timed out)
Mutation testing 66% (elapsed: ~2h 10m, remaining: ~1h 4m) 1194/1786 tested (1001 survived, 66 timed out)
Mutation testing 66% (elapsed: ~2h 10m, remaining: ~1h 4m) 1196/1786 tested (1003 survived, 66 timed out)
Mutation testing 67% (elapsed: ~2h 10m, remaining: ~1h 4m) 1197/1786 tested (1004 survived, 66 timed out)
Mutation testing 67% (elapsed: ~2h 10m, remaining: ~1h 3m) 1199/1786 tested (1006 survived, 66 timed out)
Mutation testing 67% (elapsed: ~2h 10m, remaining: ~1h 3m) 1201/1786 tested (1008 survived, 66 timed out)
Mutation testing 67% (elapsed: ~2h 10m, remaining: ~1h 3m) 1202/1786 tested (1009 survived, 66 timed out)
Mutation testing 67% (elapsed: ~2h 11m, remaining: ~1h 3m) 1204/1786 tested (1011 survived, 66 timed out)
Mutation testing 67% (elapsed: ~2h 11m, remaining: ~1h 3m) 1205/1786 tested (1012 survived, 66 timed out)
Mutation testing 67% (elapsed: ~2h 11m, remaining: ~1h 3m) 1207/1786 tested (1014 survived, 66 timed out)
Mutation testing 67% (elapsed: ~2h 11m, remaining: ~1h 2m) 1208/1786 tested (1015 survived, 66 timed out)
Mutation testing 67% (elapsed: ~2h 11m, remaining: ~1h 2m) 1210/1786 tested (1017 survived, 66 timed out)
Mutation testing 67% (elapsed: ~2h 11m, remaining: ~1h 2m) 1212/1786 tested (1019 survived, 66 timed out)
Mutation testing 67% (elapsed: ~2h 12m, remaining: ~1h 2m) 1213/1786 tested (1020 survived, 66 timed out)
Mutation testing 68% (elapsed: ~2h 12m, remaining: ~1h 2m) 1215/1786 tested (1022 survived, 66 timed out)
Mutation testing 68% (elapsed: ~2h 12m, remaining: ~1h 2m) 1216/1786 tested (1023 survived, 66 timed out)
Mutation testing 68% (elapsed: ~2h 12m, remaining: ~1h 1m) 1218/1786 tested (1025 survived, 66 timed out)
Mutation testing 68% (elapsed: ~2h 12m, remaining: ~1h 1m) 1219/1786 tested (1026 survived, 66 timed out)
Mutation testing 68% (elapsed: ~2h 12m, remaining: ~1h 1m) 1221/1786 tested (1028 survived, 66 timed out)
Mutation testing 68% (elapsed: ~2h 13m, remaining: ~1h 1m) 1223/1786 tested (1030 survived, 66 timed out)
Mutation testing 68% (elapsed: ~2h 13m, remaining: ~1h 1m) 1224/1786 tested (1031 survived, 66 timed out)
Mutation testing 68% (elapsed: ~2h 13m, remaining: ~1h 0m) 1226/1786 tested (1033 survived, 66 timed out)
Mutation testing 68% (elapsed: ~2h 13m, remaining: ~1h 0m) 1227/1786 tested (1034 survived, 66 timed out)
Mutation testing 68% (elapsed: ~2h 13m, remaining: ~1h 0m) 1229/1786 tested (1036 survived, 66 timed out)
Mutation testing 68% (elapsed: ~2h 13m, remaining: ~1h 0m) 1230/1786 tested (1037 survived, 66 timed out)
Mutation testing 68% (elapsed: ~2h 14m, remaining: ~1h 0m) 1232/1786 tested (1039 survived, 66 timed out)
Mutation testing 69% (elapsed: ~2h 14m, remaining: ~1h 0m) 1234/1786 tested (1041 survived, 66 timed out)
Mutation testing 69% (elapsed: ~2h 14m, remaining: ~59m) 1235/1786 tested (1042 survived, 66 timed out)
Mutation testing 69% (elapsed: ~2h 14m, remaining: ~59m) 1237/1786 tested (1044 survived, 66 timed out)
Mutation testing 69% (elapsed: ~2h 14m, remaining: ~59m) 1238/1786 tested (1045 survived, 66 timed out)
Mutation testing 69% (elapsed: ~2h 14m, remaining: ~59m) 1240/1786 tested (1047 survived, 66 timed out)
Mutation testing 69% (elapsed: ~2h 15m, remaining: ~59m) 1241/1786 tested (1048 survived, 66 timed out)
Mutation testing 69% (elapsed: ~2h 15m, remaining: ~59m) 1243/1786 tested (1050 survived, 66 timed out)
Mutation testing 69% (elapsed: ~2h 15m, remaining: ~58m) 1245/1786 tested (1052 survived, 66 timed out)
Mutation testing 69% (elapsed: ~2h 15m, remaining: ~58m) 1246/1786 tested (1053 survived, 66 timed out)
Mutation testing 69% (elapsed: ~2h 15m, remaining: ~58m) 1248/1786 tested (1055 survived, 66 timed out)
Mutation testing 69% (elapsed: ~2h 15m, remaining: ~58m) 1249/1786 tested (1056 survived, 66 timed out)
Mutation testing 70% (elapsed: ~2h 16m, remaining: ~58m) 1251/1786 tested (1058 survived, 66 timed out)
Mutation testing 70% (elapsed: ~2h 16m, remaining: ~58m) 1252/1786 tested (1059 survived, 66 timed out)
Mutation testing 70% (elapsed: ~2h 16m, remaining: ~57m) 1254/1786 tested (1061 survived, 66 timed out)
Mutation testing 70% (elapsed: ~2h 16m, remaining: ~57m) 1256/1786 tested (1063 survived, 66 timed out)
Mutation testing 70% (elapsed: ~2h 16m, remaining: ~57m) 1257/1786 tested (1064 survived, 66 timed out)
Mutation testing 70% (elapsed: ~2h 16m, remaining: ~57m) 1259/1786 tested (1066 survived, 66 timed out)
Mutation testing 70% (elapsed: ~2h 17m, remaining: ~57m) 1260/1786 tested (1067 survived, 66 timed out)
Mutation testing 70% (elapsed: ~2h 17m, remaining: ~56m) 1262/1786 tested (1069 survived, 66 timed out)
Mutation testing 70% (elapsed: ~2h 17m, remaining: ~56m) 1263/1786 tested (1070 survived, 66 timed out)
Mutation testing 70% (elapsed: ~2h 17m, remaining: ~56m) 1265/1786 tested (1072 survived, 66 timed out)
Mutation testing 70% (elapsed: ~2h 17m, remaining: ~56m) 1267/1786 tested (1074 survived, 66 timed out)
Mutation testing 70% (elapsed: ~2h 17m, remaining: ~56m) 1268/1786 tested (1075 survived, 66 timed out)
Mutation testing 71% (elapsed: ~2h 18m, remaining: ~56m) 1270/1786 tested (1077 survived, 66 timed out)
Mutation testing 71% (elapsed: ~2h 18m, remaining: ~55m) 1271/1786 tested (1078 survived, 66 timed out)
Mutation testing 71% (elapsed: ~2h 18m, remaining: ~55m) 1273/1786 tested (1080 survived, 66 timed out)
Mutation testing 71% (elapsed: ~2h 18m, remaining: ~55m) 1274/1786 tested (1081 survived, 66 timed out)
Mutation testing 71% (elapsed: ~2h 18m, remaining: ~55m) 1276/1786 tested (1083 survived, 66 timed out)
Mutation testing 71% (elapsed: ~2h 18m, remaining: ~55m) 1278/1786 tested (1085 survived, 66 timed out)
Mutation testing 71% (elapsed: ~2h 19m, remaining: ~55m) 1279/1786 tested (1086 survived, 66 timed out)
Mutation testing 71% (elapsed: ~2h 19m, remaining: ~54m) 1281/1786 tested (1088 survived, 66 timed out)
Mutation testing 71% (elapsed: ~2h 19m, remaining: ~54m) 1282/1786 tested (1089 survived, 66 timed out)
Mutation testing 71% (elapsed: ~2h 19m, remaining: ~54m) 1284/1786 tested (1091 survived, 66 timed out)
Mutation testing 71% (elapsed: ~2h 19m, remaining: ~54m) 1285/1786 tested (1092 survived, 66 timed out)
Mutation testing 72% (elapsed: ~2h 19m, remaining: ~54m) 1287/1786 tested (1094 survived, 66 timed out)
Mutation testing 72% (elapsed: ~2h 20m, remaining: ~53m) 1289/1786 tested (1096 survived, 66 timed out)
Mutation testing 72% (elapsed: ~2h 20m, remaining: ~53m) 1290/1786 tested (1097 survived, 66 timed out)
Mutation testing 72% (elapsed: ~2h 20m, remaining: ~53m) 1292/1786 tested (1099 survived, 66 timed out)
Mutation testing 72% (elapsed: ~2h 20m, remaining: ~53m) 1293/1786 tested (1100 survived, 66 timed out)
Mutation testing 72% (elapsed: ~2h 20m, remaining: ~53m) 1295/1786 tested (1102 survived, 66 timed out)
Mutation testing 72% (elapsed: ~2h 20m, remaining: ~53m) 1296/1786 tested (1103 survived, 66 timed out)
Mutation testing 72% (elapsed: ~2h 21m, remaining: ~53m) 1298/1786 tested (1105 survived, 66 timed out)
Mutation testing 72% (elapsed: ~2h 21m, remaining: ~52m) 1300/1786 tested (1107 survived, 66 timed out)
Mutation testing 72% (elapsed: ~2h 21m, remaining: ~52m) 1301/1786 tested (1108 survived, 66 timed out)
Mutation testing 72% (elapsed: ~2h 21m, remaining: ~52m) 1303/1786 tested (1110 survived, 66 timed out)
Mutation testing 73% (elapsed: ~2h 21m, remaining: ~52m) 1304/1786 tested (1111 survived, 66 timed out)
Mutation testing 73% (elapsed: ~2h 21m, remaining: ~52m) 1306/1786 tested (1113 survived, 66 timed out)
Mutation testing 73% (elapsed: ~2h 22m, remaining: ~52m) 1307/1786 tested (1114 survived, 66 timed out)
Mutation testing 73% (elapsed: ~2h 22m, remaining: ~51m) 1309/1786 tested (1116 survived, 66 timed out)
Mutation testing 73% (elapsed: ~2h 22m, remaining: ~51m) 1311/1786 tested (1118 survived, 66 timed out)
Mutation testing 73% (elapsed: ~2h 22m, remaining: ~51m) 1312/1786 tested (1119 survived, 66 timed out)
Mutation testing 73% (elapsed: ~2h 22m, remaining: ~51m) 1314/1786 tested (1121 survived, 66 timed out)
Mutation testing 73% (elapsed: ~2h 22m, remaining: ~51m) 1315/1786 tested (1122 survived, 66 timed out)
Mutation testing 73% (elapsed: ~2h 23m, remaining: ~50m) 1317/1786 tested (1124 survived, 66 timed out)
Mutation testing 73% (elapsed: ~2h 23m, remaining: ~50m) 1319/1786 tested (1126 survived, 66 timed out)
Mutation testing 73% (elapsed: ~2h 23m, remaining: ~50m) 1320/1786 tested (1127 survived, 66 timed out)
Mutation testing 74% (elapsed: ~2h 23m, remaining: ~50m) 1322/1786 tested (1129 survived, 66 timed out)
Mutation testing 74% (elapsed: ~2h 23m, remaining: ~50m) 1323/1786 tested (1130 survived, 66 timed out)
Mutation testing 74% (elapsed: ~2h 23m, remaining: ~50m) 1325/1786 tested (1132 survived, 66 timed out)
Mutation testing 74% (elapsed: ~2h 24m, remaining: ~49m) 1326/1786 tested (1133 survived, 66 timed out)
Mutation testing 74% (elapsed: ~2h 24m, remaining: ~49m) 1328/1786 tested (1135 survived, 66 timed out)
Mutation testing 74% (elapsed: ~2h 24m, remaining: ~49m) 1330/1786 tested (1137 survived, 66 timed out)
Mutation testing 74% (elapsed: ~2h 24m, remaining: ~49m) 1331/1786 tested (1138 survived, 66 timed out)
Mutation testing 74% (elapsed: ~2h 24m, remaining: ~49m) 1334/1786 tested (1139 survived, 66 timed out)
Mutation testing 74% (elapsed: ~2h 24m, remaining: ~48m) 1336/1786 tested (1141 survived, 66 timed out)
Mutation testing 74% (elapsed: ~2h 25m, remaining: ~48m) 1338/1786 tested (1143 survived, 66 timed out)
Mutation testing 74% (elapsed: ~2h 25m, remaining: ~48m) 1339/1786 tested (1144 survived, 66 timed out)
Mutation testing 75% (elapsed: ~2h 25m, remaining: ~48m) 1341/1786 tested (1146 survived, 66 timed out)
Mutation testing 75% (elapsed: ~2h 25m, remaining: ~48m) 1342/1786 tested (1147 survived, 66 timed out)
Mutation testing 75% (elapsed: ~2h 25m, remaining: ~47m) 1344/1786 tested (1149 survived, 66 timed out)
Mutation testing 75% (elapsed: ~2h 25m, remaining: ~47m) 1345/1786 tested (1150 survived, 66 timed out)
Mutation testing 75% (elapsed: ~2h 26m, remaining: ~47m) 1347/1786 tested (1152 survived, 66 timed out)
Mutation testing 75% (elapsed: ~2h 26m, remaining: ~47m) 1349/1786 tested (1154 survived, 66 timed out)
Mutation testing 75% (elapsed: ~2h 26m, remaining: ~47m) 1350/1786 tested (1155 survived, 66 timed out)
Mutation testing 75% (elapsed: ~2h 26m, remaining: ~47m) 1352/1786 tested (1157 survived, 66 timed out)
Mutation testing 75% (elapsed: ~2h 26m, remaining: ~46m) 1353/1786 tested (1158 survived, 66 timed out)
Mutation testing 75% (elapsed: ~2h 26m, remaining: ~46m) 1355/1786 tested (1160 survived, 66 timed out)
Mutation testing 75% (elapsed: ~2h 27m, remaining: ~46m) 1357/1786 tested (1162 survived, 66 timed out)
Mutation testing 76% (elapsed: ~2h 27m, remaining: ~46m) 1358/1786 tested (1163 survived, 66 timed out)
Mutation testing 76% (elapsed: ~2h 27m, remaining: ~46m) 1360/1786 tested (1165 survived, 66 timed out)
Mutation testing 76% (elapsed: ~2h 27m, remaining: ~46m) 1361/1786 tested (1166 survived, 66 timed out)
Mutation testing 76% (elapsed: ~2h 27m, remaining: ~45m) 1363/1786 tested (1168 survived, 66 timed out)
Mutation testing 76% (elapsed: ~2h 27m, remaining: ~45m) 1364/1786 tested (1169 survived, 66 timed out)
Mutation testing 76% (elapsed: ~2h 28m, remaining: ~45m) 1366/1786 tested (1171 survived, 66 timed out)
Mutation testing 76% (elapsed: ~2h 28m, remaining: ~45m) 1368/1786 tested (1173 survived, 66 timed out)
Mutation testing 76% (elapsed: ~2h 28m, remaining: ~45m) 1369/1786 tested (1174 survived, 66 timed out)
Mutation testing 76% (elapsed: ~2h 28m, remaining: ~44m) 1371/1786 tested (1176 survived, 66 timed out)
Mutation testing 76% (elapsed: ~2h 28m, remaining: ~44m) 1372/1786 tested (1177 survived, 66 timed out)
Mutation testing 76% (elapsed: ~2h 28m, remaining: ~44m) 1374/1786 tested (1179 survived, 66 timed out)
Mutation testing 76% (elapsed: ~2h 29m, remaining: ~44m) 1375/1786 tested (1180 survived, 66 timed out)
Mutation testing 77% (elapsed: ~2h 29m, remaining: ~44m) 1377/1786 tested (1182 survived, 66 timed out)
Mutation testing 77% (elapsed: ~2h 29m, remaining: ~44m) 1379/1786 tested (1184 survived, 66 timed out)
Mutation testing 77% (elapsed: ~2h 29m, remaining: ~43m) 1380/1786 tested (1185 survived, 66 timed out)
Mutation testing 77% (elapsed: ~2h 29m, remaining: ~43m) 1382/1786 tested (1187 survived, 66 timed out)
Mutation testing 77% (elapsed: ~2h 29m, remaining: ~43m) 1383/1786 tested (1188 survived, 66 timed out)
Mutation testing 77% (elapsed: ~2h 30m, remaining: ~43m) 1385/1786 tested (1190 survived, 66 timed out)
Mutation testing 77% (elapsed: ~2h 30m, remaining: ~43m) 1386/1786 tested (1191 survived, 66 timed out)
Mutation testing 77% (elapsed: ~2h 30m, remaining: ~43m) 1388/1786 tested (1193 survived, 66 timed out)
Mutation testing 77% (elapsed: ~2h 30m, remaining: ~42m) 1390/1786 tested (1195 survived, 66 timed out)
Mutation testing 77% (elapsed: ~2h 30m, remaining: ~42m) 1391/1786 tested (1196 survived, 66 timed out)
Mutation testing 77% (elapsed: ~2h 30m, remaining: ~42m) 1393/1786 tested (1198 survived, 66 timed out)
Mutation testing 78% (elapsed: ~2h 31m, remaining: ~42m) 1394/1786 tested (1199 survived, 66 timed out)
Mutation testing 78% (elapsed: ~2h 31m, remaining: ~42m) 1396/1786 tested (1201 survived, 66 timed out)
Mutation testing 78% (elapsed: ~2h 31m, remaining: ~42m) 1397/1786 tested (1202 survived, 66 timed out)
Mutation testing 78% (elapsed: ~2h 31m, remaining: ~41m) 1399/1786 tested (1204 survived, 66 timed out)
Mutation testing 78% (elapsed: ~2h 31m, remaining: ~41m) 1401/1786 tested (1206 survived, 66 timed out)
Mutation testing 78% (elapsed: ~2h 31m, remaining: ~41m) 1402/1786 tested (1207 survived, 66 timed out)
Mutation testing 78% (elapsed: ~2h 32m, remaining: ~41m) 1404/1786 tested (1209 survived, 66 timed out)
Mutation testing 78% (elapsed: ~2h 32m, remaining: ~41m) 1405/1786 tested (1210 survived, 66 timed out)
Mutation testing 78% (elapsed: ~2h 32m, remaining: ~41m) 1407/1786 tested (1212 survived, 66 timed out)
Mutation testing 78% (elapsed: ~2h 32m, remaining: ~40m) 1408/1786 tested (1213 survived, 66 timed out)
Mutation testing 78% (elapsed: ~2h 32m, remaining: ~40m) 1410/1786 tested (1215 survived, 66 timed out)
Mutation testing 79% (elapsed: ~2h 32m, remaining: ~40m) 1412/1786 tested (1217 survived, 66 timed out)
Mutation testing 79% (elapsed: ~2h 33m, remaining: ~40m) 1413/1786 tested (1218 survived, 66 timed out)
Mutation testing 79% (elapsed: ~2h 33m, remaining: ~40m) 1415/1786 tested (1220 survived, 66 timed out)
Mutation testing 79% (elapsed: ~2h 33m, remaining: ~40m) 1416/1786 tested (1221 survived, 66 timed out)
Mutation testing 79% (elapsed: ~2h 33m, remaining: ~39m) 1418/1786 tested (1223 survived, 66 timed out)
Mutation testing 79% (elapsed: ~2h 33m, remaining: ~39m) 1419/1786 tested (1224 survived, 66 timed out)
Mutation testing 79% (elapsed: ~2h 33m, remaining: ~39m) 1421/1786 tested (1226 survived, 66 timed out)
Mutation testing 79% (elapsed: ~2h 34m, remaining: ~39m) 1423/1786 tested (1228 survived, 66 timed out)
Mutation testing 79% (elapsed: ~2h 34m, remaining: ~39m) 1424/1786 tested (1229 survived, 66 timed out)
Mutation testing 79% (elapsed: ~2h 34m, remaining: ~38m) 1426/1786 tested (1231 survived, 66 timed out)
Mutation testing 79% (elapsed: ~2h 34m, remaining: ~38m) 1427/1786 tested (1232 survived, 66 timed out)
Mutation testing 80% (elapsed: ~2h 34m, remaining: ~38m) 1429/1786 tested (1234 survived, 66 timed out)
Mutation testing 80% (elapsed: ~2h 34m, remaining: ~38m) 1430/1786 tested (1235 survived, 66 timed out)
Mutation testing 80% (elapsed: ~2h 35m, remaining: ~38m) 1432/1786 tested (1237 survived, 66 timed out)
Mutation testing 80% (elapsed: ~2h 35m, remaining: ~38m) 1434/1786 tested (1239 survived, 66 timed out)
Mutation testing 80% (elapsed: ~2h 35m, remaining: ~37m) 1435/1786 tested (1240 survived, 66 timed out)
Mutation testing 80% (elapsed: ~2h 35m, remaining: ~37m) 1437/1786 tested (1242 survived, 66 timed out)
Mutation testing 80% (elapsed: ~2h 35m, remaining: ~37m) 1438/1786 tested (1243 survived, 66 timed out)
Mutation testing 80% (elapsed: ~2h 35m, remaining: ~37m) 1440/1786 tested (1245 survived, 66 timed out)
Mutation testing 80% (elapsed: ~2h 36m, remaining: ~37m) 1441/1786 tested (1246 survived, 66 timed out)
Mutation testing 80% (elapsed: ~2h 36m, remaining: ~37m) 1443/1786 tested (1248 survived, 66 timed out)
Mutation testing 80% (elapsed: ~2h 36m, remaining: ~36m) 1445/1786 tested (1250 survived, 66 timed out)
Mutation testing 80% (elapsed: ~2h 36m, remaining: ~36m) 1446/1786 tested (1251 survived, 66 timed out)
Mutation testing 81% (elapsed: ~2h 36m, remaining: ~36m) 1448/1786 tested (1253 survived, 66 timed out)
Mutation testing 81% (elapsed: ~2h 36m, remaining: ~36m) 1449/1786 tested (1254 survived, 66 timed out)
Mutation testing 81% (elapsed: ~2h 37m, remaining: ~36m) 1451/1786 tested (1256 survived, 66 timed out)
Mutation testing 81% (elapsed: ~2h 37m, remaining: ~36m) 1452/1786 tested (1257 survived, 66 timed out)
Mutation testing 81% (elapsed: ~2h 37m, remaining: ~35m) 1454/1786 tested (1259 survived, 66 timed out)
Mutation testing 81% (elapsed: ~2h 37m, remaining: ~35m) 1456/1786 tested (1261 survived, 66 timed out)
Mutation testing 81% (elapsed: ~2h 37m, remaining: ~35m) 1457/1786 tested (1262 survived, 66 timed out)
Mutation testing 81% (elapsed: ~2h 37m, remaining: ~35m) 1459/1786 tested (1264 survived, 66 timed out)
Mutation testing 81% (elapsed: ~2h 38m, remaining: ~35m) 1460/1786 tested (1265 survived, 66 timed out)
Mutation testing 81% (elapsed: ~2h 38m, remaining: ~35m) 1462/1786 tested (1267 survived, 66 timed out)
Mutation testing 81% (elapsed: ~2h 38m, remaining: ~34m) 1463/1786 tested (1268 survived, 66 timed out)
Mutation testing 82% (elapsed: ~2h 38m, remaining: ~34m) 1465/1786 tested (1270 survived, 66 timed out)
Mutation testing 82% (elapsed: ~2h 38m, remaining: ~34m) 1467/1786 tested (1272 survived, 66 timed out)
Mutation testing 82% (elapsed: ~2h 38m, remaining: ~34m) 1468/1786 tested (1273 survived, 66 timed out)
Mutation testing 82% (elapsed: ~2h 39m, remaining: ~34m) 1470/1786 tested (1275 survived, 66 timed out)
Mutation testing 82% (elapsed: ~2h 39m, remaining: ~34m) 1471/1786 tested (1276 survived, 66 timed out)
Mutation testing 82% (elapsed: ~2h 39m, remaining: ~33m) 1473/1786 tested (1278 survived, 66 timed out)
Mutation testing 82% (elapsed: ~2h 39m, remaining: ~33m) 1474/1786 tested (1279 survived, 66 timed out)
Mutation testing 82% (elapsed: ~2h 39m, remaining: ~33m) 1476/1786 tested (1281 survived, 66 timed out)
Mutation testing 82% (elapsed: ~2h 39m, remaining: ~33m) 1478/1786 tested (1283 survived, 66 timed out)
Mutation testing 82% (elapsed: ~2h 40m, remaining: ~33m) 1479/1786 tested (1284 survived, 66 timed out)
Mutation testing 82% (elapsed: ~2h 40m, remaining: ~32m) 1481/1786 tested (1286 survived, 66 timed out)
Mutation testing 82% (elapsed: ~2h 40m, remaining: ~32m) 1482/1786 tested (1287 survived, 66 timed out)
Mutation testing 83% (elapsed: ~2h 40m, remaining: ~32m) 1484/1786 tested (1289 survived, 66 timed out)
Mutation testing 83% (elapsed: ~2h 40m, remaining: ~32m) 1485/1786 tested (1290 survived, 66 timed out)
Mutation testing 83% (elapsed: ~2h 40m, remaining: ~32m) 1487/1786 tested (1292 survived, 66 timed out)
Mutation testing 83% (elapsed: ~2h 41m, remaining: ~32m) 1489/1786 tested (1294 survived, 66 timed out)
Mutation testing 83% (elapsed: ~2h 41m, remaining: ~32m) 1490/1786 tested (1295 survived, 66 timed out)
Mutation testing 83% (elapsed: ~2h 41m, remaining: ~31m) 1492/1786 tested (1297 survived, 66 timed out)
Mutation testing 83% (elapsed: ~2h 41m, remaining: ~31m) 1493/1786 tested (1298 survived, 66 timed out)
Mutation testing 83% (elapsed: ~2h 41m, remaining: ~31m) 1495/1786 tested (1300 survived, 66 timed out)
Mutation testing 83% (elapsed: ~2h 41m, remaining: ~31m) 1496/1786 tested (1301 survived, 66 timed out)
Mutation testing 83% (elapsed: ~2h 42m, remaining: ~31m) 1498/1786 tested (1303 survived, 66 timed out)
Mutation testing 83% (elapsed: ~2h 42m, remaining: ~30m) 1500/1786 tested (1305 survived, 66 timed out)
Mutation testing 84% (elapsed: ~2h 42m, remaining: ~30m) 1501/1786 tested (1306 survived, 66 timed out)
Mutation testing 84% (elapsed: ~2h 42m, remaining: ~30m) 1503/1786 tested (1308 survived, 66 timed out)
Mutation testing 84% (elapsed: ~2h 42m, remaining: ~30m) 1504/1786 tested (1309 survived, 66 timed out)
Mutation testing 84% (elapsed: ~2h 42m, remaining: ~30m) 1506/1786 tested (1311 survived, 66 timed out)
Mutation testing 84% (elapsed: ~2h 43m, remaining: ~30m) 1507/1786 tested (1312 survived, 66 timed out)
Mutation testing 84% (elapsed: ~2h 43m, remaining: ~29m) 1509/1786 tested (1314 survived, 66 timed out)
Mutation testing 84% (elapsed: ~2h 43m, remaining: ~29m) 1511/1786 tested (1316 survived, 66 timed out)
Mutation testing 84% (elapsed: ~2h 43m, remaining: ~29m) 1512/1786 tested (1317 survived, 66 timed out)
Mutation testing 84% (elapsed: ~2h 43m, remaining: ~29m) 1514/1786 tested (1319 survived, 66 timed out)
Mutation testing 84% (elapsed: ~2h 43m, remaining: ~29m) 1515/1786 tested (1320 survived, 66 timed out)
Mutation testing 84% (elapsed: ~2h 44m, remaining: ~29m) 1517/1786 tested (1322 survived, 66 timed out)
Mutation testing 84% (elapsed: ~2h 44m, remaining: ~28m) 1518/1786 tested (1323 survived, 66 timed out)
Mutation testing 85% (elapsed: ~2h 44m, remaining: ~28m) 1520/1786 tested (1325 survived, 66 timed out)
Mutation testing 85% (elapsed: ~2h 44m, remaining: ~28m) 1522/1786 tested (1327 survived, 66 timed out)
Mutation testing 85% (elapsed: ~2h 44m, remaining: ~28m) 1523/1786 tested (1328 survived, 66 timed out)
Mutation testing 85% (elapsed: ~2h 44m, remaining: ~28m) 1525/1786 tested (1330 survived, 66 timed out)
Mutation testing 85% (elapsed: ~2h 45m, remaining: ~28m) 1526/1786 tested (1331 survived, 66 timed out)
Mutation testing 85% (elapsed: ~2h 45m, remaining: ~27m) 1528/1786 tested (1333 survived, 66 timed out)
Mutation testing 85% (elapsed: ~2h 45m, remaining: ~27m) 1529/1786 tested (1334 survived, 66 timed out)
Mutation testing 85% (elapsed: ~2h 45m, remaining: ~27m) 1531/1786 tested (1336 survived, 66 timed out)
Mutation testing 85% (elapsed: ~2h 45m, remaining: ~27m) 1533/1786 tested (1338 survived, 66 timed out)
Mutation testing 85% (elapsed: ~2h 45m, remaining: ~27m) 1534/1786 tested (1339 survived, 66 timed out)
Mutation testing 86% (elapsed: ~2h 46m, remaining: ~27m) 1536/1786 tested (1341 survived, 66 timed out)
Mutation testing 86% (elapsed: ~2h 46m, remaining: ~26m) 1537/1786 tested (1342 survived, 66 timed out)
Mutation testing 86% (elapsed: ~2h 46m, remaining: ~26m) 1539/1786 tested (1344 survived, 66 timed out)
Mutation testing 86% (elapsed: ~2h 46m, remaining: ~26m) 1540/1786 tested (1345 survived, 66 timed out)
Mutation testing 86% (elapsed: ~2h 46m, remaining: ~26m) 1542/1786 tested (1347 survived, 66 timed out)
Mutation testing 86% (elapsed: ~2h 46m, remaining: ~26m) 1544/1786 tested (1349 survived, 66 timed out)
Mutation testing 86% (elapsed: ~2h 47m, remaining: ~26m) 1545/1786 tested (1350 survived, 66 timed out)
Mutation testing 86% (elapsed: ~2h 47m, remaining: ~25m) 1547/1786 tested (1352 survived, 66 timed out)
Mutation testing 86% (elapsed: ~2h 47m, remaining: ~25m) 1548/1786 tested (1353 survived, 66 timed out)
Mutation testing 86% (elapsed: ~2h 47m, remaining: ~25m) 1550/1786 tested (1355 survived, 66 timed out)
Mutation testing 86% (elapsed: ~2h 47m, remaining: ~25m) 1552/1786 tested (1357 survived, 66 timed out)
Mutation testing 86% (elapsed: ~2h 47m, remaining: ~25m) 1553/1786 tested (1358 survived, 66 timed out)
Mutation testing 87% (elapsed: ~2h 48m, remaining: ~24m) 1555/1786 tested (1360 survived, 66 timed out)
Mutation testing 87% (elapsed: ~2h 48m, remaining: ~24m) 1556/1786 tested (1361 survived, 66 timed out)
Mutation testing 87% (elapsed: ~2h 48m, remaining: ~24m) 1558/1786 tested (1363 survived, 66 timed out)
Mutation testing 87% (elapsed: ~2h 48m, remaining: ~24m) 1559/1786 tested (1364 survived, 66 timed out)
Mutation testing 87% (elapsed: ~2h 48m, remaining: ~24m) 1561/1786 tested (1366 survived, 66 timed out)
Mutation testing 87% (elapsed: ~2h 48m, remaining: ~24m) 1563/1786 tested (1368 survived, 66 timed out)
Mutation testing 87% (elapsed: ~2h 49m, remaining: ~23m) 1564/1786 tested (1369 survived, 66 timed out)
Mutation testing 87% (elapsed: ~2h 49m, remaining: ~23m) 1566/1786 tested (1371 survived, 66 timed out)
Mutation testing 87% (elapsed: ~2h 49m, remaining: ~23m) 1567/1786 tested (1372 survived, 66 timed out)
Mutation testing 87% (elapsed: ~2h 49m, remaining: ~23m) 1569/1786 tested (1374 survived, 66 timed out)
Mutation testing 87% (elapsed: ~2h 49m, remaining: ~23m) 1570/1786 tested (1375 survived, 66 timed out)
Mutation testing 88% (elapsed: ~2h 49m, remaining: ~23m) 1572/1786 tested (1377 survived, 66 timed out)
Mutation testing 88% (elapsed: ~2h 50m, remaining: ~22m) 1574/1786 tested (1379 survived, 66 timed out)
Mutation testing 88% (elapsed: ~2h 50m, remaining: ~22m) 1575/1786 tested (1380 survived, 66 timed out)
Mutation testing 88% (elapsed: ~2h 50m, remaining: ~22m) 1577/1786 tested (1382 survived, 66 timed out)
Mutation testing 88% (elapsed: ~2h 50m, remaining: ~22m) 1578/1786 tested (1383 survived, 66 timed out)
Mutation testing 88% (elapsed: ~2h 50m, remaining: ~22m) 1580/1786 tested (1385 survived, 66 timed out)
Mutation testing 88% (elapsed: ~2h 50m, remaining: ~22m) 1581/1786 tested (1386 survived, 66 timed out)
Mutation testing 88% (elapsed: ~2h 51m, remaining: ~21m) 1583/1786 tested (1388 survived, 66 timed out)
Mutation testing 88% (elapsed: ~2h 51m, remaining: ~21m) 1585/1786 tested (1390 survived, 66 timed out)
Mutation testing 88% (elapsed: ~2h 51m, remaining: ~21m) 1586/1786 tested (1391 survived, 66 timed out)
Mutation testing 88% (elapsed: ~2h 51m, remaining: ~21m) 1588/1786 tested (1393 survived, 66 timed out)
Mutation testing 88% (elapsed: ~2h 51m, remaining: ~21m) 1589/1786 tested (1394 survived, 66 timed out)
Mutation testing 89% (elapsed: ~2h 51m, remaining: ~21m) 1591/1786 tested (1396 survived, 66 timed out)
Mutation testing 89% (elapsed: ~2h 52m, remaining: ~20m) 1592/1786 tested (1397 survived, 66 timed out)
Mutation testing 89% (elapsed: ~2h 52m, remaining: ~20m) 1594/1786 tested (1399 survived, 66 timed out)
Mutation testing 89% (elapsed: ~2h 52m, remaining: ~20m) 1596/1786 tested (1401 survived, 66 timed out)
Mutation testing 89% (elapsed: ~2h 52m, remaining: ~20m) 1597/1786 tested (1402 survived, 66 timed out)
Mutation testing 89% (elapsed: ~2h 52m, remaining: ~20m) 1599/1786 tested (1404 survived, 66 timed out)
Mutation testing 89% (elapsed: ~2h 52m, remaining: ~20m) 1600/1786 tested (1405 survived, 66 timed out)
Mutation testing 89% (elapsed: ~2h 53m, remaining: ~19m) 1602/1786 tested (1407 survived, 66 timed out)
Mutation testing 89% (elapsed: ~2h 53m, remaining: ~19m) 1603/1786 tested (1408 survived, 66 timed out)
Mutation testing 89% (elapsed: ~2h 53m, remaining: ~19m) 1605/1786 tested (1410 survived, 66 timed out)
Mutation testing 89% (elapsed: ~2h 53m, remaining: ~19m) 1607/1786 tested (1412 survived, 66 timed out)
Mutation testing 90% (elapsed: ~2h 53m, remaining: ~19m) 1608/1786 tested (1413 survived, 66 timed out)
Mutation testing 90% (elapsed: ~2h 53m, remaining: ~19m) 1610/1786 tested (1415 survived, 66 timed out)
Mutation testing 90% (elapsed: ~2h 54m, remaining: ~18m) 1611/1786 tested (1416 survived, 66 timed out)
Mutation testing 90% (elapsed: ~2h 54m, remaining: ~18m) 1613/1786 tested (1418 survived, 66 timed out)
Mutation testing 90% (elapsed: ~2h 54m, remaining: ~18m) 1614/1786 tested (1419 survived, 66 timed out)
Mutation testing 90% (elapsed: ~2h 54m, remaining: ~18m) 1616/1786 tested (1421 survived, 66 timed out)
Mutation testing 90% (elapsed: ~2h 54m, remaining: ~18m) 1618/1786 tested (1423 survived, 66 timed out)
Mutation testing 90% (elapsed: ~2h 54m, remaining: ~18m) 1619/1786 tested (1424 survived, 66 timed out)
Mutation testing 90% (elapsed: ~2h 55m, remaining: ~17m) 1621/1786 tested (1426 survived, 66 timed out)
Mutation testing 90% (elapsed: ~2h 55m, remaining: ~17m) 1622/1786 tested (1427 survived, 66 timed out)
Mutation testing 90% (elapsed: ~2h 55m, remaining: ~17m) 1624/1786 tested (1429 survived, 66 timed out)
Mutation testing 90% (elapsed: ~2h 55m, remaining: ~17m) 1625/1786 tested (1430 survived, 66 timed out)
Mutation testing 91% (elapsed: ~2h 55m, remaining: ~17m) 1627/1786 tested (1432 survived, 66 timed out)
Mutation testing 91% (elapsed: ~2h 55m, remaining: ~16m) 1629/1786 tested (1434 survived, 66 timed out)
Mutation testing 91% (elapsed: ~2h 56m, remaining: ~16m) 1630/1786 tested (1435 survived, 66 timed out)
Mutation testing 91% (elapsed: ~2h 56m, remaining: ~16m) 1632/1786 tested (1437 survived, 66 timed out)
Mutation testing 91% (elapsed: ~2h 56m, remaining: ~16m) 1633/1786 tested (1438 survived, 66 timed out)
Mutation testing 91% (elapsed: ~2h 56m, remaining: ~16m) 1635/1786 tested (1440 survived, 66 timed out)
Mutation testing 91% (elapsed: ~2h 56m, remaining: ~16m) 1636/1786 tested (1441 survived, 66 timed out)
Mutation testing 91% (elapsed: ~2h 56m, remaining: ~15m) 1638/1786 tested (1443 survived, 66 timed out)
Mutation testing 91% (elapsed: ~2h 57m, remaining: ~15m) 1640/1786 tested (1445 survived, 66 timed out)
Mutation testing 91% (elapsed: ~2h 57m, remaining: ~15m) 1641/1786 tested (1446 survived, 66 timed out)
Mutation testing 91% (elapsed: ~2h 57m, remaining: ~15m) 1643/1786 tested (1448 survived, 66 timed out)
Mutation testing 92% (elapsed: ~2h 57m, remaining: ~15m) 1644/1786 tested (1449 survived, 66 timed out)
Mutation testing 92% (elapsed: ~2h 57m, remaining: ~15m) 1646/1786 tested (1451 survived, 66 timed out)
Mutation testing 92% (elapsed: ~2h 57m, remaining: ~15m) 1647/1786 tested (1452 survived, 66 timed out)
Mutation testing 92% (elapsed: ~2h 58m, remaining: ~14m) 1649/1786 tested (1454 survived, 66 timed out)
Mutation testing 92% (elapsed: ~2h 58m, remaining: ~14m) 1651/1786 tested (1456 survived, 66 timed out)
Mutation testing 92% (elapsed: ~2h 58m, remaining: ~14m) 1652/1786 tested (1457 survived, 66 timed out)
Mutation testing 92% (elapsed: ~2h 58m, remaining: ~14m) 1654/1786 tested (1459 survived, 66 timed out)
Mutation testing 92% (elapsed: ~2h 58m, remaining: ~14m) 1655/1786 tested (1460 survived, 66 timed out)
Mutation testing 92% (elapsed: ~2h 58m, remaining: ~13m) 1657/1786 tested (1462 survived, 66 timed out)
Mutation testing 92% (elapsed: ~2h 59m, remaining: ~13m) 1658/1786 tested (1463 survived, 66 timed out)
Mutation testing 92% (elapsed: ~2h 59m, remaining: ~13m) 1660/1786 tested (1465 survived, 66 timed out)
Mutation testing 93% (elapsed: ~2h 59m, remaining: ~13m) 1662/1786 tested (1467 survived, 66 timed out)
Mutation testing 93% (elapsed: ~2h 59m, remaining: ~13m) 1663/1786 tested (1468 survived, 66 timed out)
Mutation testing 93% (elapsed: ~2h 59m, remaining: ~13m) 1665/1786 tested (1470 survived, 66 timed out)
Mutation testing 93% (elapsed: ~2h 59m, remaining: ~12m) 1666/1786 tested (1471 survived, 66 timed out)
Mutation testing 93% (elapsed: ~3h 0m, remaining: ~12m) 1668/1786 tested (1473 survived, 66 timed out)
Mutation testing 93% (elapsed: ~3h 0m, remaining: ~12m) 1669/1786 tested (1474 survived, 66 timed out)
Mutation testing 93% (elapsed: ~3h 0m, remaining: ~12m) 1671/1786 tested (1476 survived, 66 timed out)
Mutation testing 93% (elapsed: ~3h 0m, remaining: ~12m) 1673/1786 tested (1478 survived, 66 timed out)
Mutation testing 93% (elapsed: ~3h 0m, remaining: ~12m) 1674/1786 tested (1479 survived, 66 timed out)
Mutation testing 93% (elapsed: ~3h 0m, remaining: ~11m) 1676/1786 tested (1481 survived, 66 timed out)
Mutation testing 93% (elapsed: ~3h 1m, remaining: ~11m) 1677/1786 tested (1482 survived, 66 timed out)
Mutation testing 94% (elapsed: ~3h 1m, remaining: ~11m) 1679/1786 tested (1484 survived, 66 timed out)
Mutation testing 94% (elapsed: ~3h 1m, remaining: ~11m) 1681/1786 tested (1486 survived, 66 timed out)
Mutation testing 94% (elapsed: ~3h 1m, remaining: ~11m) 1682/1786 tested (1487 survived, 66 timed out)
Mutation testing 94% (elapsed: ~3h 1m, remaining: ~11m) 1684/1786 tested (1489 survived, 66 timed out)
Mutation testing 94% (elapsed: ~3h 1m, remaining: ~10m) 1685/1786 tested (1490 survived, 66 timed out)
Mutation testing 94% (elapsed: ~3h 2m, remaining: ~10m) 1687/1786 tested (1492 survived, 66 timed out)
Mutation testing 94% (elapsed: ~3h 2m, remaining: ~10m) 1688/1786 tested (1493 survived, 66 timed out)
Mutation testing 94% (elapsed: ~3h 2m, remaining: ~10m) 1690/1786 tested (1495 survived, 66 timed out)
Mutation testing 94% (elapsed: ~3h 2m, remaining: ~10m) 1692/1786 tested (1497 survived, 66 timed out)
Mutation testing 94% (elapsed: ~3h 2m, remaining: ~10m) 1693/1786 tested (1498 survived, 66 timed out)
Mutation testing 94% (elapsed: ~3h 2m, remaining: ~9m) 1695/1786 tested (1500 survived, 66 timed out)
Mutation testing 94% (elapsed: ~3h 3m, remaining: ~9m) 1696/1786 tested (1501 survived, 66 timed out)
Mutation testing 95% (elapsed: ~3h 3m, remaining: ~9m) 1698/1786 tested (1503 survived, 66 timed out)
Mutation testing 95% (elapsed: ~3h 3m, remaining: ~9m) 1699/1786 tested (1504 survived, 66 timed out)
Mutation testing 95% (elapsed: ~3h 3m, remaining: ~9m) 1701/1786 tested (1506 survived, 66 timed out)
Mutation testing 95% (elapsed: ~3h 3m, remaining: ~8m) 1703/1786 tested (1508 survived, 66 timed out)
Mutation testing 95% (elapsed: ~3h 3m, remaining: ~8m) 1704/1786 tested (1509 survived, 66 timed out)
Mutation testing 95% (elapsed: ~3h 4m, remaining: ~8m) 1706/1786 tested (1511 survived, 66 timed out)
Mutation testing 95% (elapsed: ~3h 4m, remaining: ~8m) 1707/1786 tested (1512 survived, 66 timed out)
Mutation testing 95% (elapsed: ~3h 4m, remaining: ~8m) 1709/1786 tested (1514 survived, 66 timed out)
Mutation testing 95% (elapsed: ~3h 4m, remaining: ~8m) 1710/1786 tested (1515 survived, 66 timed out)
Mutation testing 95% (elapsed: ~3h 4m, remaining: ~7m) 1712/1786 tested (1517 survived, 66 timed out)
Mutation testing 95% (elapsed: ~3h 4m, remaining: ~7m) 1714/1786 tested (1519 survived, 66 timed out)
Mutation testing 96% (elapsed: ~3h 5m, remaining: ~7m) 1715/1786 tested (1520 survived, 66 timed out)
Mutation testing 96% (elapsed: ~3h 5m, remaining: ~7m) 1717/1786 tested (1522 survived, 66 timed out)
Mutation testing 96% (elapsed: ~3h 5m, remaining: ~7m) 1718/1786 tested (1523 survived, 66 timed out)
Mutation testing 96% (elapsed: ~3h 5m, remaining: ~7m) 1720/1786 tested (1525 survived, 66 timed out)
Mutation testing 96% (elapsed: ~3h 5m, remaining: ~7m) 1721/1786 tested (1526 survived, 66 timed out)
Mutation testing 96% (elapsed: ~3h 5m, remaining: ~6m) 1723/1786 tested (1528 survived, 66 timed out)
Mutation testing 96% (elapsed: ~3h 6m, remaining: ~6m) 1725/1786 tested (1530 survived, 66 timed out)
Mutation testing 96% (elapsed: ~3h 6m, remaining: ~6m) 1726/1786 tested (1531 survived, 66 timed out)
Mutation testing 96% (elapsed: ~3h 6m, remaining: ~6m) 1728/1786 tested (1533 survived, 66 timed out)
Mutation testing 96% (elapsed: ~3h 6m, remaining: ~6m) 1729/1786 tested (1534 survived, 66 timed out)
Mutation testing 96% (elapsed: ~3h 6m, remaining: ~5m) 1731/1786 tested (1536 survived, 66 timed out)
Mutation testing 96% (elapsed: ~3h 6m, remaining: ~5m) 1732/1786 tested (1537 survived, 66 timed out)
Mutation testing 97% (elapsed: ~3h 7m, remaining: ~5m) 1734/1786 tested (1539 survived, 66 timed out)
Mutation testing 97% (elapsed: ~3h 7m, remaining: ~5m) 1736/1786 tested (1541 survived, 66 timed out)
Mutation testing 97% (elapsed: ~3h 7m, remaining: ~5m) 1737/1786 tested (1542 survived, 66 timed out)
Mutation testing 97% (elapsed: ~3h 7m, remaining: ~5m) 1739/1786 tested (1544 survived, 66 timed out)
Mutation testing 97% (elapsed: ~3h 7m, remaining: ~4m) 1740/1786 tested (1545 survived, 66 timed out)
Mutation testing 97% (elapsed: ~3h 7m, remaining: ~4m) 1742/1786 tested (1547 survived, 66 timed out)
Mutation testing 97% (elapsed: ~3h 8m, remaining: ~4m) 1743/1786 tested (1548 survived, 66 timed out)
Mutation testing 97% (elapsed: ~3h 8m, remaining: ~4m) 1745/1786 tested (1550 survived, 66 timed out)
Mutation testing 97% (elapsed: ~3h 8m, remaining: ~4m) 1747/1786 tested (1552 survived, 66 timed out)
Mutation testing 97% (elapsed: ~3h 8m, remaining: ~4m) 1748/1786 tested (1553 survived, 66 timed out)
Mutation testing 97% (elapsed: ~3h 8m, remaining: ~3m) 1750/1786 tested (1555 survived, 66 timed out)
Mutation testing 98% (elapsed: ~3h 8m, remaining: ~3m) 1751/1786 tested (1556 survived, 66 timed out)
Mutation testing 98% (elapsed: ~3h 9m, remaining: ~3m) 1753/1786 tested (1558 survived, 66 timed out)
Mutation testing 98% (elapsed: ~3h 9m, remaining: ~3m) 1754/1786 tested (1559 survived, 66 timed out)
Mutation testing 98% (elapsed: ~3h 9m, remaining: ~3m) 1756/1786 tested (1561 survived, 66 timed out)
Mutation testing 98% (elapsed: ~3h 9m, remaining: ~3m) 1758/1786 tested (1563 survived, 66 timed out)
Mutation testing 98% (elapsed: ~3h 9m, remaining: ~2m) 1759/1786 tested (1564 survived, 66 timed out)
Mutation testing 98% (elapsed: ~3h 9m, remaining: ~2m) 1761/1786 tested (1566 survived, 66 timed out)
Mutation testing 98% (elapsed: ~3h 10m, remaining: ~2m) 1762/1786 tested (1567 survived, 66 timed out)
Mutation testing 98% (elapsed: ~3h 10m, remaining: ~2m) 1764/1786 tested (1569 survived, 66 timed out)
Mutation testing 98% (elapsed: ~3h 10m, remaining: ~2m) 1765/1786 tested (1570 survived, 66 timed out)
Mutation testing 99% (elapsed: ~3h 10m, remaining: ~1m) 1770/1786 tested (1572 survived, 66 timed out)
Mutation testing 99% (elapsed: ~3h 10m, remaining: ~1m) 1771/1786 tested (1573 survived, 66 timed out)
Mutation testing 99% (elapsed: ~3h 10m, remaining: ~1m) 1773/1786 tested (1575 survived, 66 timed out)
Mutation testing 99% (elapsed: ~3h 11m, remaining: ~1m) 1774/1786 tested (1576 survived, 66 timed out)
Mutation testing 99% (elapsed: ~3h 11m, remaining: ~1m) 1776/1786 tested (1578 survived, 66 timed out)
Mutation testing 99% (elapsed: ~3h 11m, remaining: <1m) 1778/1786 tested (1580 survived, 66 timed out)
Mutation testing 99% (elapsed: ~3h 11m, remaining: <1m) 1779/1786 tested (1581 survived, 66 timed out)
Mutation testing 99% (elapsed: ~3h 11m, remaining: <1m) 1781/1786 tested (1583 survived, 66 timed out)
Mutation testing 99% (elapsed: ~3h 11m, remaining: <1m) 1782/1786 tested (1584 survived, 66 timed out)
Mutation testing 99% (elapsed: ~3h 12m, remaining: <1m) 1784/1786 tested (1586 survived, 66 timed out)
Mutation testing 99% (elapsed: ~3h 12m, remaining: <1m) 1785/1786 tested (1587 survived, 66 timed out)

All tests
  ✓ All tests (killed 132)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap === "object") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("callback", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", "definition");

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("callback", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("undefined", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("null", definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", undefined);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", "invalid");

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "object" && define.amd) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && !define.amd) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.commonjs) {

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define("promise");

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(definition.bind(null));

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(definition.call(this));

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "object") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses === null) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined" || ses === null) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (!ses.isValid()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.ok() === false) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.ok() && false) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.ok !== true()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.isReady()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.ok === false()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window === "undefined" && typeof self === "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof document !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof global !== "undefined") {

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = null();

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = undefined();

[Survived] PrecomputedMutator
q.js:115:16
-           while (head.next) {
+           while (head.next !== null) {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (undefined) {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.exit();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, "");

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length - 1) {

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length * 2) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (true) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain === null) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain !== undefined) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       void 0();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   clearTimeout(flush, 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (null) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (undefined) {

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain = null();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               head.domain = void 0();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof document === "undefined") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window === "object") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof global !== "undefined") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(document, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, runSingle);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(document, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "undefined") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "object") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "function" && false) {

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(undefined);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Math.random() * 1000);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               clearTimeout(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (!flushing && true) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing === false) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length !== 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index >= length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (this[index] === undefined) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index in arguments) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index >= length - 1) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index < length + 1) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (index < length);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (index <= length);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (index >= length);

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index <= length; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index < length + 1; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index <= length - 1; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index < length + 1; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index >= this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (this[index] === undefined) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index in arguments) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + this[index] + index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(this[index] * 2);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(undefined);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = basis + this[index](basis, this[index], index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = this[index] * 2(basis, this[index], index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = this[index] - 1(basis, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(this[index], this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(null, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] + 1, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] * 2, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], length);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], this[index] + 1);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length + 1; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length - 1; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i = this.length) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] != value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] === undefined) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] === null) {

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(self, value, index + 1));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value * 2, index));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(self, value, index - 1));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(undefined(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(thisp(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(self[index](thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(self, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, this[index] + 1, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, self[index], index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, 0, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, self.length, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, undefined, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, undefined));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, this));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, value));

[Survived] PrecomputedMutator
q.js:335:29
-   var object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);
+   var object_hasOwnProperty = Object.prototype.toString(Object.prototype.hasOwnProperty);

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in this) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in Object.prototype) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (!object_hasOwnProperty(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && key !== 'someKey') {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) || key in object) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object[key])) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object[keys])) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object["key"])) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object[key] !== undefined(object, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(this, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(undefined, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, "key")) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, undefined)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, null)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push("undefined");

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(this[key]);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key + 1);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           typeof exception(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString("StopIteration") === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(this) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(undefined) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue === "object") {

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && typeof error === "string" && error !== null && error.stack

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && typeof error === "object" && error !== undefined && error.stack

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p = p && p.source;) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p = p.value;) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p = p.source || {};) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p = null; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p = undefined; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p = {}; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.next) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = null) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.parent) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ && error.__minimumStackCounter__ < p.stackCounter) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (error.__minimumStackCounter__ === undefined || error.__minimumStackCounter__ < p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(promise, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error.stack, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(null, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "stackCounter", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackDepth__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: undefined,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.source);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stackCounter);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift("Error stack not available");

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(promise.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.stack + " Additional Info");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("; " + STACK_JUMP_SEPARATOR + "; ");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + "Error occurred" + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\r\n" + STACK_JUMP_SEPARATOR + "\r\n");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(stacks.length);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(stacks.join(", "));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(stacks.reverse().join("\n" + STACK_JUMP_SEPARATOR + "\n"));

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(promise, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(null, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty("Error stack trace unavailable", "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "error.stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "undefined", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "promise.stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: null,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: "Error occurred",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: promise.stack,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(";");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(",");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(" ");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < 10; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i = i + 1) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (isInternalFrame(line) || isNodeFrame(line) || !line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (isInternalFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!line.length === 0(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(true) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(false) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(lineNumber > qEndingLine) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:52
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame("node_modules") && line) {

[Survived] PrecomputedMutator
q.js:408:52
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(stackLine.includes("node.js")) && line) {

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(";");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" | ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("---");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.lastIndexOf("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:30
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.indexOf("(node):") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(module.js)") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec("error");

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine + " (additional info)");

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(undefined);

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], String(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], attempt1[2] * 1(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(0)];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.toString());

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.replace(":", ";"));

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(0)];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec("at filename:lineNumber");

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.toUpperCase());

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec("@filename:lineNumber:columnNumber");

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], attempt3[2] * 2(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(0)];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber("invalid stack line");

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine + " extra text");

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(null);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber === undefined) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (true) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(";");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\r\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(" ");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("@!") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("~") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("@filename") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(lines[0]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(lines[3]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(lines[1] + " extra text");

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber !== undefined) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console === "undefined" || typeof console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console === "object" && typeof console.log === "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console !== "undefined" && typeof console.warn === "string") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(null);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(undefined);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(arguments[0]);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(function () {
+     return "error";
+   }, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, []);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, arguments[0]);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (typeof value === "function") {

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[0]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op !== "when" && operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "then" && operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.unshift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(null);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[1] + 1);

[Survived] PrecomputedMutator
q.js:570:17
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:72
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args.concat([null]));

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (!messages) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length === 0) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (resolvedPromise === null) {

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = null(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = undefined(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(null);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(undefined);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer("not a promise");

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (typeof nearerValue === "object") {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue instanceof Array) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue == null(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(undefined)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise("error")) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (!messages) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:591:16
-           return resolvedPromise.inspect();
+           return {
+     state: "fulfilled",
+     value: resolvedPromise.value
+   }();

[Survived] PrecomputedMutator
q.js:591:16
-           return resolvedPromise.inspect();
+           return {
+     state: "rejected",
+     reason: resolvedPromise.reason
+   }();

[Survived] PrecomputedMutator
q.js:591:16
-           return resolvedPromise.inspect();
+           return {
+     state: "pending",
+     progress: progressListeners.length
+   }();

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length - 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("at ") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(0);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(" ") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("Error") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(resolvedPromise, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(null, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(messages, message);

[Survived] PrecomputedMutator
q.js:624:62
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message.concat("extra"));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (typeof resolvedPromise === "undefined") {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise === null) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== undefined && resolvedPromise !== null) {

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(undefined));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill("error"));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise === null) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (!error) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error === null) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (typeof error === "string") {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length < 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length !== 2) {

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(arguments[0]);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(arguments.length > 1 ? arguments[1] : undefined);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[1] + 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[2]));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(arguments.length > 1 ? arguments[1] : null(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(arguments[arguments.length - 1](arguments, 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, arguments.length - 1));

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve("error");

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver === null) {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver === "object") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver instanceof Promise) {

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.notify, deferred.resolve);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.resolve, deferred.reject);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(undefined, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, undefined, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notifyAll);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject("An error occurred");

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Promise.resolve(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.reject(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.all(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(undefined).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + 1).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(null);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(undefined);

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([x, y]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([null, null]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x != y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x === null) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x === undefined) {

[Survived] PrecomputedMutator
q.js:766:9
-           for (var i = 0, len = answerPs.length; i < len; i++) {
-               Q(answerPs[i]).then(resolve, reject);
-           }
+           for (var i = 1, len = answerPs.length; i < len; i++) {
+     Q(answerPs[i]).then(resolve, reject);
+   }

[Survived] PrecomputedMutator
q.js:766:9
-           for (var i = 0, len = answerPs.length; i < len; i++) {
-               Q(answerPs[i]).then(resolve, reject);
-           }
+           for (var i = 0, len = answerPs.length + 1; i < len; i++) {
+     Q(answerPs[i]).then(resolve, reject);
+   }

[Survived] PrecomputedMutator
q.js:766:9
-           for (var i = 0, len = answerPs.length; i < len; i++) {
-               Q(answerPs[i]).then(resolve, reject);
-           }
+           for (var i = 0, len = answerPs.length - 1; i < len; i++) {
+     Q(answerPs[i]).then(resolve, reject);
+   }

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i != len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < 0; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; len = 0) {

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] + 1).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(null).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i].catch(function () {
+     return "error";
+   })).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject(new Error("Promise rejected")));

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, console.log("Promise settled"));

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return this.catch(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return this.resolve(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return this.valueOf(Q.race);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback !== void 0) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (typeof fallback === "undefined") {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === true) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect = function () {
+     return {
+       state: "fulfilled"
+     };
+   }) {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (descriptor[op] + 1) {

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(null, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(this, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(this, op, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "nonExistentOp", args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(this, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(undefined, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "unknownOperation", args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, null, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, args[0], args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, undefined);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, null);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, "unexpected");

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "pending" && inspected.value !== undefined) {

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(undefined, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong("Error occurred", self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(new Error("Custom error"), self);

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? undefined(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? value + 1(value) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(value + 1) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:878:17
-               if (done) {
+               if (done === true) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = value + 1(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = null(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value + 1);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(undefined);

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (!newValue) {

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue + 1);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(undefined);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue * 2);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Promise(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Q.reject(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Q.resolve(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback(null));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback(value + 1));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.fcall(value).then(function () {
+     return "error";
+   }));

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = null(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = undefined(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(null);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(function () {
+     return "error";
+   });

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(undefined);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(Promise.reject(new Error("Error"))).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(Promise.reject(new Error("Error")));

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(value + 1);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(null).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(undefined).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(Promise.reject(new Error("Rejected"))).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled(value), rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function () {
+     return null;
+   }, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, "notAFunction");

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return undefined;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value + 1;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     throw new Error("Intentional Error");
+   });

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q("string").thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve("error");

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     console.log(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error("Custom error message");
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(null).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(undefined).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q("not a promise").thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(undefined);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject("Error");

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (!isPromise(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value instanceof Object) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value === null) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (typeof value === "object"(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(undefined)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise("not a promise")) {

[Survived] PrecomputedMutator
q.js:992:25
-           var inspected = value.inspect();
+           var inspected = value.inspect.state();

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.value !== undefined) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return object instanceof Object(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return object === null(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise("string") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(null) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(undefined) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && object.state().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.state().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !object instanceof Object(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !object === null(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(null) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(undefined) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise("fulfilled") || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:34
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object) || object.state === "fulfilled"().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return typeof object === "object"(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return object instanceof Array(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise("rejected") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object instanceof Object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && object.state().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return this.inspect.state().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections && false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === true) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== true) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections && false) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise) === -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.length === 0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise) > 0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections[0], promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, null) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, undefined) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.constructor) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledError", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", promise, reason);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", promise, reason);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("handledRejection", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledError", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", "unknown reason", promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", undefined, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason + " (additional context)", promise);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, undefined);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, this);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push("string");

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && typeof reason.message !== "undefined") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack === null) {

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.message);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push("Error occurred: " + reason);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(undefined);

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push("stack not available: " + reason);

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push("unknown error");

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections && false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (true) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledReasons, promise);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections[0], promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledReasons, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections[0], promise);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, undefined);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, promise + "extra");

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > 0) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at == null) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(array_indexOf(unhandledRejections, promise));

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledReasons[0], promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledReasons, promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, undefined);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, this);

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === 0) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport > 0) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", "An error occurred", promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], null);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("unhandledRejection", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("error", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons.length, promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[0], promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], null);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], undefined);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(0);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections[at] = null(atReport, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(0, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, atReport + 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(0);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(0, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, at + 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, unhandledRejections.length - 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(0);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(0, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, at + 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (true) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (this.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(promise);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(promise, reason);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(promise, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, "Custom error message");

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === "") {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name !== null && name !== void 0) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === false) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(this);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(undefined);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(this, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(args[0]);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(this);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(null);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].call(value, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(this, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value.name, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, [args[0]]);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.length);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, null);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(args[0], args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(value, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args[0]);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, undefined);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return value.length(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(value.length);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(object_keys(value));

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.notify.bind(deferred, 'progress'));

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject("Error occurred");

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object + op + args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object.op(args));

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(dispatch(object, args));

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch("string", op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op + 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op * 2, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, null, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, undefined);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, null);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, []);

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q("error").inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled.bind(null, "unexpected"), rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(undefined).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(Promise.reject(new Error("Promise rejected"))).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(function () {
+     throw new Error("Fulfillment error");
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, function () {
+     throw new Error("Custom Error");
+   });

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.any().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.allSettled().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.resolve().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(this);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(array[0]);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply("", array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, [0]);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.slice(0, 1));

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.concat([1]));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof generator === "function") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (false) {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("unexpected value");

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(null);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject("Error occurred");

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(new Error("Custom error"));

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.done === false) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.done !== true) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value + 1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(undefined);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.done);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.done, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(undefined, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, callback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, Q.reject(new Error("An error occurred")));

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, undefined);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("unexpected value");

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception instanceof Error) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception === null) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (typeof exception === "string") {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(arg)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(true)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(false)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(undefined);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q("Error occurred");

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.message);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result.done, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(callback, errback, result);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, Q.reject(result.value), errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, Q(result.value), errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, Q.all(result), errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, callback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, null);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, undefined);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(window, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(arguments[0], arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, this);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(callback.bind(null));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "next"));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.call(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.apply(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(callback.bind(null), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "next", "extraArg"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(callback.bind(continuer, "throw"), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "nextTick");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.call(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind("next", "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(undefined, "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind("throwError", "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, undefined);

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.bind(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(null))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.apply(this, [1, 2, 3]))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, any(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, arguments[0](arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, this(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(self)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([1, 2, 3])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, this);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(args, self);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(args[0], args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, self);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args[0]);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, null);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(args, op);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, [args]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q("string").dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(args[0], args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch("invalidOperation", args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(null, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, undefined);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, []);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject(op, args));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve(op));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve(null, args));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseResolve(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseReject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve("unexpected value"), op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, "invalidOperation", args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, args[0], args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, null, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, undefined);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key, "extra"]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("fetch", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [undefined]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q("invalidObject").dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("invoke", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key, "unexpected"]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [null]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + "extra"]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, "extraArg"]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("fetch", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [undefined]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.get("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("invoke", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key + '1']);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key * 2]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("update", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(undefined).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q("string").dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("update", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("setValue", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("assign", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("update", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.get("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("setValue", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("update", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(null).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q("string").dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, null]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.resolve("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.then("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("undefined", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", key + "1");

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", undefined);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, null]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("invoke", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q("string").dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("apply", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("set", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, null]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, [args]]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, null]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("apply", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("undefined", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, null]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, [1, 2, 3]]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Promise.resolve(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(undefined).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q("string").dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("set", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, []]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments.length)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([])]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, arguments.length(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, arguments[0](arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments[0], 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(null, 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 2 + 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, arguments[1]]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, null]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("get", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("set", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, []]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1).reverse()]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments.length - 1)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments[1])]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, arguments[0](arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, arguments.length(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments[0], 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, arguments.length)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [undefined, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, []]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Promise(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q("string").dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("execute", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("applyWithContext", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, []]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, []]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [undefined, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("applyWithContext", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("execute", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [undefined, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args, args]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, []]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q("string").dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("applyAsync", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("execute", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [1, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [array_slice(arguments, 0), array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, arguments.length)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, arguments[0](arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, arguments.length(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice("unexpected", 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1 + 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, arguments.length - 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [null, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [undefined, arguments]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, []]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("execute", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("invoke", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [null, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [1, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [array_slice(arguments, 0, 1), array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:44
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, arguments[0](arguments)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice("")]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q("string");

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = arguments[1](arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments[0], 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 1 + 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, args.length);

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               arguments(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat([null])

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments[0])

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1, 1))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice("invalid"))

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = arguments[0](arguments);

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = arguments.length(arguments);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice([]);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice("");

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments[0])

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat([])

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments.length(arguments))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice("invalid"))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [null]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("getKeys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(undefined).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.keys).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("getOwnPropertyNames", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [null]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", undefined);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", ["unexpectedKey"]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [null]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("getKeys", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.invoke("keys", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("getOwnPropertyNames", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [null]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", undefined);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", ["unexpected"]);

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   !isPromise(promise) || (snapshot = promise.inspect()).state !== "fulfilled"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   isPromise(promise) && (snapshot = promise.inspect()).state === "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   isPromise(promise) && (snapshot = promise.inspect()).state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   !promise(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   typeof promise === 'object'(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   promise instanceof Array(promise) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(null) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(undefined) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promises[index]) &&

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.then()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === 1) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount !== 0) {

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: null
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index + 1,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: -1,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount !== 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === 1) {

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(promises);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(null);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(undefined);

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === 1) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length !== 0) {

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onProgress, onRejected);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, null);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           Promise.resolve(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           Q.reject(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(Q.resolve(), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(null, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promises[index] + 1, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, function () {
+     deferred.resolve(null);
+   }, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, function onFulfilled() {}, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, function () {
+     deferred.reject(new Error("Promise rejected"));
+   }, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, function onProgress() {});

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, undefined);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount === 1) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount !== 0) {

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(new Error("All promises were rejected."));

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejection.message);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(promises);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(null);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(undefined);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allRejected");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "anySettled");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allFulfilled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(all, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolvedPromises", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved()", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled()");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises.length, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(Q, promises);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(undefined, promises);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.length, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(null, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(undefined, Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, array_map(promises, function (p) {
+     return p;
+   }));

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, array_map(promises, function (p) {
+     return Q.reject(new Error("Rejected"));
+   }));

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, array_map(promises, function (p) {
+     return p + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(Q.reject(new Error("Forced rejection")), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(Q.resolve("Unexpected value"), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(null, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(undefined, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when("not_a_promise", noop, noop);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved([]);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(undefined);

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Promise(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.all(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.reject(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.length).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(null).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(undefined).allSettled();

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = Promise(promise);

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = null(promise);

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = undefined(promise);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(Q.reject("Error"));

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(Q.resolve(42));

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(Q(null));

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.value();

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(promise.then(regardless, null));

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(promise.then(null, regardless));

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(promise.catch(regardless));

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.catch(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.finally(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function () {
+     return promise.then(noop);
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function () {
+     return promise.reject(new Error("Forced rejection"));
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function () {
+     return promise.inspect().state;
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function () {
+     return promise.reject(new Error("Forced rejection"));
+   });

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function () {
+     return promise.then(function () {
+       return "Success";
+     });
+   });

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function () {
+     return promise.inspect().state;
+   });

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(null).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(undefined).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q("error").then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(Promise.reject(new Error("Promise rejected")), rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(this, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(rejected, void 0);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(1, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(Promise.reject(new Error("Error")), rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, function () {
+     throw new Error("Promise was rejected");
+   });

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, null);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, function () {
+     return "Handled";
+   });

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, progressed, void 0);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(progressed, void 0, void 0);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(undefined).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(Promise.reject(new Error("Progress error"))).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(Promise.reject(new Error("Progress error")), void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(1 + 1, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, true, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, progressed, void 0);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(progressed, void 0, void 0);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(this, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(Promise.reject(new Error("Progress error")), void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, 1, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, this, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, function () {
+     return "progress";
+   });

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, undefined);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, function () {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(undefined)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Promise.reject(new Error("Forced rejection")))["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](undefined);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](null);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](function () {
+     return "done";
+   });

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.call === "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback === null) {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (typeof callback !== "object") {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.all(callback);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled || rejected);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled && rejected && progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, void 0, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(null).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(undefined).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q("string").done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(undefined, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(function () {
+     throw new Error("Forced error");
+   }, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, undefined, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, function () {
+     throw new Error("Forced error");
+   }, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, "error");

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(promise, error);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(undefined, promise);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, null);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, undefined);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, "error");

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled || rejected) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled && rejected) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(this.catch(rejected)) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(undefined, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(function () {
+     throw new Error("Forced rejection");
+   }, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, fulfilled, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, null, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, function () {
+     throw new Error("Forced rejection");
+   }, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, fulfilled) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, null) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, undefined) :

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError, void 0);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.catch(void 0, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(Promise.reject(new Error("Unhandled error")), onUnhandledError);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms + 1000, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms * 2, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms + 1000, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms / 2, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, "Timeout occurred");

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Custom timeout error"));

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error === null) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (typeof error === "object") {

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           timeoutId = null(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(timeoutId + 1);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(timeoutId * 2);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(Promise.reject(new Error("Custom error")));

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(value + 1);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(timeoutId + 1);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(clearTimeout(0));

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(clearTimeout(timeoutId + 100));

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject("An error occurred");

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(new Error("Custom error message"));

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout > 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === true) {

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(Promise.reject(new Error("Test Error"))).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout + 1000);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout / 2);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(value + 1);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q("string").nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(this);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject);

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined());

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.apply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.call(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(0, 1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat([null])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(undefined).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments.length);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([0], 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(this, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 1 + 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, arguments.length);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return Promise.resolve(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return Q.reject(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return Q.all(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q("not_a_function").nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(this);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver.bind(deferred)());

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(0, 1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat([null])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.reject(new Error("Custom error")));

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.reject(null));

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback == null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== undefined && callback !== null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback === "function") {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments.length);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(this, 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([arguments[0]]);

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(arguments.length > 0 ? [arguments[0]] : []);

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(this));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.reject);

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Promise(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.reject(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.resolve(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {
+     throw new Error("Intentional Error");
+   }).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.slice(0, 1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.concat([null])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.map(arg => arg * 2)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.reject(new Error("Custom error")));

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.reject(null));

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = arguments(arguments);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(this);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice([]);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift("string");

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this, args.concat([1]));

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args.slice(0, -1));

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply("", args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.concat([this]));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice(0, -1));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, [args]);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments.length - 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([], 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(this, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments[1], 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, arguments.length);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([arguments[0]]);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Array.from(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(arguments.length > 0 ? [arguments[1]] : []);

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(this));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.reject);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, []);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, [arguments[0]]);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(window, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, this);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(Q(callback).fapply(nodeArgs)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback.apply(null, nodeArgs)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback.call(thisp, nodeArgs)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply([null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice(0, 1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.reject(new Error("Custom error")));

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.reject(null));

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments.slice(0, 1));

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = arguments[0](arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(nodeArgs, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([], 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, thisp);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift("string");

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args.concat([1]));

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args.slice(0, 1));

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(0, 1));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.concat([null]));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.map(arg => arg * 2));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat([null]));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(args, name);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(args.slice(0, 1));

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q({}).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name + "Extra", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(args[0], args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(null, args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, null);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, []);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, undefined);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = args.length(args || []);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = args[0](args || []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(args && args.length ? args : [null]);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(args.length > 0 ? args : undefined);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(args.concat([1]));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject(new Error("An error occurred")));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, []]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "extraArg"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.send("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.invoke("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "extraArg"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs.length, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject("An error occurred"));

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject(new Error("Custom error")));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = arguments[2](arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(nodeArgs, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(Array.prototype.slice.call(arguments), 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([], 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, arguments.length);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject(new Error("Custom error")));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, []]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, "extraArg"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(null).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(undefined).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q("string").dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, []]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject("An error occurred"));

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject(new Error("Custom error")));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments.length);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, arguments.length);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject(new Error("An error occurred")));

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver.bind(null, "unexpected"));

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "extraArg"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, []]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.send("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("undefinedMethod", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "extraArg"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs.length, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject(new Error("Custom error")));

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject(null));

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Promise(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.reject(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.resolve(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q("string").nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(null);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(undefined);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(function () {});

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (true) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback !== undefined) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(error, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback("error", value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(new Error("An error occurred"), value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, value + 1);

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = null();

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = null();

[Survived] PrecomputedMutator
queue.js:10:24
-               var next = Q.defer();
+               var next = null();

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head" + "extra");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(undefined);

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail.length");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("undefined");

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve("An error occurred");

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: null(error)};

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: undefined(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject("Queue closed")};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(new Error("Different error"))};

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.09 |      132 |        66 |       1588 |        0 |        0 |
 q.js     |   11.19 |      132 |        66 |       1571 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         17 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m17:48:29 (3408) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llmorpheus/llmorpheus/q/reports/mutation/mutation.html
[32m17:48:29 (3408) INFO MutationTestExecutor[39m Done in 192 minutes 20 seconds.

real	192m21.550s
user	25m9.762s
sys	4m22.727s
