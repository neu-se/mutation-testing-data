*** using precomputed mutations ***
[32m09:31:42 (2730) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m09:31:42 (2730) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m09:31:43 (2730) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/pull-stream/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m09:31:43 (2730) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m09:31:43 (2730) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m09:31:45 (2730) INFO ProjectReader[39m Found 31 of 1504 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 752 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k in throughs) exports[k] = sources[k];
Mutant 1 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k in sinks) exports[k] = sources[k];
Mutant 2 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k in sources.keys()) exports[k] = sources[k];
Mutant 3 in index.js: sources replaced with sources === null ? sinks : sources
Mutant 4 in index.js: sources replaced with sources.length === 0 ? sinks : sources
Mutant 5 in index.js: sources replaced with sources.keys === 0 ? sinks : sources
Mutant 6 in index.js: for (var k in throughs) exports[k] = throughs[k]; replaced with for (var k in sinks) exports[k] = throughs[k];
Mutant 7 in index.js: for (var k in throughs) exports[k] = throughs[k]; replaced with for (var k in sources) exports[k] = throughs[k];
Mutant 8 in index.js: throughs replaced with throughs[0]
Mutant 9 in index.js: throughs replaced with 1
Mutant 10 in index.js: throughs replaced with {}
Mutant 11 in index.js: for (var k in sinks) exports[k] = sinks[k]; replaced with for (var k in sinks.length) exports[k] = sinks[k];
Mutant 12 in index.js: for (var k in sinks) exports[k] = sinks[k]; replaced with for (var k in sinks.length - 1) exports[k] = sinks[k];
Mutant 13 in index.js: for (var k in sinks) exports[k] = sinks[k]; replaced with for (var k in sinks[0]) exports[k] = sinks[k];
Mutant 14 in index.js: sinks replaced with sources
Mutant 15 in index.js: sinks replaced with sinks.length
Mutant 16 in index.js: sinks replaced with throughs.length
Mutant 17 in pull.js: typeof a === 'function' && a.length === 1 replaced with a.length === 1
Mutant 18 in pull.js: typeof a === 'function' && a.length === 1 replaced with a !== null && a.length === 1
Mutant 19 in pull.js: typeof a === 'function' && a.length === 1 replaced with a && a.length === 1
Mutant 20 in pull.js: i < length replaced with i <= length - 1
Mutant 21 in pull.js: i < length replaced with i >= length + 1
Mutant 22 in pull.js: i < length replaced with i == length
Mutant 23 in pull.js: i++ replaced with i--
Mutant 24 in pull.js: i++ replaced with i - 1
Mutant 25 in pull.js: i++ replaced with i - 2
Mutant 26 in pull.js: args == null replaced with args.length === 0
Mutant 27 in pull.js: args == null replaced with args !== null && args.length === 0
Mutant 28 in pull.js: args == null replaced with typeof args !== 'undefined' && args.length === 0
Mutant 29 in pull.js: length replaced with 99
Mutant 30 in pull.js: length replaced with length - 1
Mutant 31 in pull.js: length replaced with read.length
Mutant 32 in pull.js: pull(read, ref[0]) replaced with pull(read, ref[1])
Mutant 33 in pull.js: pull(read, ref[0]) replaced with pull(read, ref[2])
Mutant 34 in pull.js: pull(read, ref[0]) replaced with pull(read, ref[i])
Mutant 35 in pull.js: read replaced with s
Mutant 36 in pull.js: read replaced with ref[i]
Mutant 37 in pull.js: read replaced with read + 1
Mutant 38 in pull.js: ref[0] replaced with ref[1]
Mutant 39 in pull.js: ref[0] replaced with args[0]
Mutant 40 in pull.js: ref[0] replaced with null
Mutant 41 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[1], ref[0])
Mutant 42 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[0], ref[2])
Mutant 43 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[0], ref[i])
Mutant 44 in pull.js: read replaced with read + 1
Mutant 45 in pull.js: read replaced with null
Mutant 46 in pull.js: ref[0] replaced with ref[1]
Mutant 47 in pull.js: ref[0] replaced with ref[length]
Mutant 48 in pull.js: ref[0] replaced with ref[read.indexOf('something')]
Mutant 49 in pull.js: ref[1] replaced with ref[2]
Mutant 50 in pull.js: ref[1] replaced with ref[0]
Mutant 51 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[1], ref[3], ref[4])
Mutant 52 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[0], ref[1], "...")
Mutant 53 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[0], ref[1], ref[2], ref[2])
Mutant 54 in pull.js: pull replaced with pull = read = ref[0]
Mutant 55 in pull.js: read replaced with read + 1
Mutant 56 in pull.js: read replaced with read * 2
Mutant 57 in pull.js: read replaced with read - 1
Mutant 58 in pull.js: ref[0] replaced with ref[0] = 0
Mutant 59 in pull.js: ref[0] replaced with ref[0](0)
Mutant 60 in pull.js: ref[0] replaced with ref[0][0]
Mutant 61 in pull.js: ref[1] replaced with ref[2]
Mutant 62 in pull.js: ref[1] replaced with ref[3]
Mutant 63 in pull.js: ref[1] replaced with ref[1] + 1
Mutant 64 in pull.js: ref[2] replaced with ref[3]
Mutant 65 in pull.js: ref[2] replaced with ref.length
Mutant 66 in pull.js: ref[2] replaced with null
Mutant 67 in pull.js: read replaced with read => $_
Mutant 68 in pull.js: read replaced with read => null
Mutant 69 in pull.js: read replaced with read => !read
Mutant 70 in pull.js: ref[0] replaced with ref[1]
Mutant 71 in pull.js: ref[0] replaced with ref[0] + 'something'
Mutant 72 in pull.js: ref[1] replaced with ref[2]
Mutant 73 in pull.js: ref[1] replaced with ref[0] + 1
Mutant 74 in pull.js: ref[1] replaced with ref[length - 1]
Mutant 75 in pull.js: ref[2] replaced with ref[3]
Mutant 76 in pull.js: ref[2] replaced with ref.length
Mutant 77 in pull.js: ref[2] replaced with null
Mutant 78 in pull.js: ref[3] replaced with ref[4]
Mutant 79 in pull.js: ref[3] replaced with ref[i]
Mutant 80 in pull.js: ref[3] replaced with ref.foobar
Mutant 81 in pull.js: read replaced with null
Mutant 82 in pull.js: read replaced with "read"
Mutant 83 in pull.js: read replaced with () => read
Mutant 84 in pull.js: pull.apply(null, ref) replaced with pull.apply(undefined, ref)
Mutant 85 in pull.js: pull.apply(null, ref) replaced with pull.apply(null, null)
Mutant 86 in pull.js: pull.apply(null, ref) replaced with pull.apply([], ref)
Mutant 87 in pull.js: pull.apply replaced with pull.call
Mutant 88 in pull.js: pull.apply replaced with pull.bind
Mutant 89 in pull.js: pull.apply replaced with pull.spread
Mutant 90 in pull.js: null replaced with undefined
Mutant 91 in pull.js: null replaced with args
Mutant 92 in pull.js: null replaced with pull.arguments
Mutant 93 in pull.js: ref replaced with ref.splice(0, 1)
Mutant 94 in pull.js: ref replaced with ref[0] = 1
Mutant 95 in pull.js: ref replaced with ref.unshift(1)
Mutant 96 in pull.js: read && typeof read.source === 'function' replaced with read || typeof read.source === 'function'
Mutant 97 in pull.js: read && typeof read.source === 'function' replaced with read && typeof read.source !== 'function'
Mutant 98 in pull.js: read && typeof read.source === 'function' replaced with read.source && typeof read.source === 'function'
Mutant 99 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = 0; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 100 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = length - 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 101 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = Math.floor(length / 2); i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 102 in pull.js: i < length replaced with i <= length
Mutant 103 in pull.js: i < length replaced with i < length - 1
Mutant 104 in pull.js: i < length replaced with i < length * 2
Mutant 105 in pull.js: i++ replaced with i--
Mutant 106 in pull.js: i++ replaced with i += 2
Mutant 107 in pull.js: i++ replaced with i *= 2
Mutant 108 in pull.js: typeof s === 'function' replaced with s instanceof Function
Mutant 109 in pull.js: typeof s === 'function' replaced with s.constructor == Function
Mutant 110 in pull.js: typeof s === 'function' replaced with s.isFunction
Mutant 111 in pull.js: s replaced with Read
Mutant 112 in pull.js: s replaced with read + 1
Mutant 113 in pull.js: read replaced with read + 1
Mutant 114 in pull.js: read replaced with read * 2
Mutant 115 in pull.js: read replaced with read - 1
Mutant 116 in pull.js: s && typeof s === 'object' replaced with s !== 'object'
Mutant 117 in pull.js: s && typeof s === 'object' replaced with s !== null
Mutant 118 in pull.js: s && typeof s === 'object' replaced with s && s.toString() === '[object Object]'
Mutant 119 in pull.js: s.sink replaced with -s.sink
Mutant 120 in pull.js: s.sink replaced with s.sink = null
Mutant 121 in pull.js: read replaced with read === null
Mutant 122 in pull.js: read replaced with read.length === 0
Mutant 123 in pull.js: read replaced with read !== null && read !== undefined
Mutant 124 in collect.js: item replaced with arr.push(item * 2)
Mutant 125 in collect.js: item replaced with arr.push(item + 1)
Mutant 126 in collect.js: item replaced with arr.push(item || null)
Mutant 127 in drain.js: !done replaced with !done()
Mutant 128 in drain.js: !done replaced with !done.called
Mutant 129 in drain.js: !done replaced with !done.result
Mutant 130 in drain.js: abort replaced with !abort
Mutant 131 in drain.js: abort replaced with abort || true
Mutant 132 in drain.js: abort replaced with abort && false
Mutant 133 in drain.js: loop replaced with !loop
Mutant 134 in drain.js: loop replaced with loop + 1
Mutant 135 in drain.js: loop replaced with null
Mutant 136 in drain.js: loop replaced with undefined
Mutant 137 in drain.js: end = end || abort replaced with end = abort
Mutant 138 in drain.js: end = end || abort replaced with end = true
Mutant 139 in drain.js: end = end || abort replaced with end = !end
Mutant 140 in drain.js: done replaced with abort
Mutant 141 in drain.js: done replaced with null
Mutant 142 in drain.js: done replaced with undefined
Mutant 143 in drain.js: end === true ? null : end replaced with end == true ? null : end
Mutant 144 in drain.js: end === true ? null : end replaced with end === false ? null : end
Mutant 145 in drain.js: end === true ? null : end replaced with end ? null : end
Mutant 146 in drain.js: end && end !== true replaced with end > true
Mutant 147 in drain.js: end && end !== true replaced with end == true
Mutant 148 in drain.js: end && end !== true replaced with end < true
Mutant 149 in drain.js: console.warn replaced with console.error
Mutant 150 in drain.js: console.warn replaced with console.log
Mutant 151 in drain.js: console.warn replaced with console.trace
Mutant 152 in drain.js: doneLackingErr replaced with doneLackingErr.message
Mutant 153 in drain.js: doneLackingErr replaced with doneLackingErr.stack
Mutant 154 in drain.js: op && false === op(data) || abort replaced with op && false === op().data || abort
Mutant 155 in drain.js: op && false === op(data) || abort replaced with op && false === op(data) && abort
Mutant 156 in drain.js: op && false === op(data) || abort replaced with op && false === op(data) || !abort
Mutant 157 in drain.js: read replaced with abort = abort || true
Mutant 158 in drain.js: read replaced with abort = false
Mutant 159 in drain.js: read replaced with abort = !done
Mutant 160 in drain.js: abort || true replaced with !abort
Mutant 161 in drain.js: abort || true replaced with abort && false
Mutant 162 in drain.js: done || function () {} replaced with null
Mutant 163 in drain.js: done || function () {} replaced with undefined
Mutant 164 in drain.js: done || function () {} replaced with function () {}
Mutant 165 in drain.js: !loop replaced with !event
Mutant 166 in drain.js: !loop replaced with loop === 0
Mutant 167 in drain.js: !loop replaced with read.length === 0
Mutant 168 in drain.js: !cbed replaced with cbed
Mutant 169 in drain.js: 'function' == typeof err replaced with typeof err === 'function'
Mutant 170 in drain.js: 'function' == typeof err replaced with err instanceof Error
Mutant 171 in drain.js: 'function' == typeof err replaced with err === undefined
Mutant 172 in drain.js: read replaced with read(abort, cb)
Mutant 173 in drain.js: read replaced with read('abort')
Mutant 174 in drain.js: read replaced with read.throw()
Mutant 175 in drain.js: read(abort, cb || function () {}) replaced with read(abort, null || function () {})
Mutant 176 in drain.js: read(abort, cb || function () {}) replaced with read(abort, undefined || function () {})
Mutant 177 in drain.js: read(abort, cb || function () {}) replaced with read(abort, function () {} || function () {})
Mutant 178 in drain.js: read replaced with read = {}
Mutant 179 in drain.js: abort replaced with null
Mutant 180 in drain.js: abort replaced with undefined
Mutant 181 in drain.js: abort replaced with true
Mutant 182 in drain.js: cb || function () {} replaced with cb || done
Mutant 183 in drain.js: cb || function () {} replaced with abort || done
Mutant 184 in drain.js: cb || function () {} replaced with op(data) || done
Mutant 185 in find.js: !cb replaced with !!cb
Mutant 186 in find.js: !cb replaced with cb && !!test
Mutant 187 in find.js: !cb replaced with cb !== test
Mutant 188 in find.js: prop replaced with !prop
Mutant 189 in find.js: prop replaced with prop.foo
Mutant 190 in find.js: test replaced with !test
Mutant 191 in find.js: test replaced with test + 1
Mutant 192 in find.js: test replaced with test !== 'test'
Mutant 193 in find.js: test(data) replaced with test(data.value)
Mutant 194 in find.js: test(data) replaced with test(data.key)
Mutant 195 in find.js: test(data) replaced with test(data.type)
Mutant 196 in find.js: test replaced with !test
Mutant 197 in find.js: test replaced with test.property
Mutant 198 in find.js: data replaced with false
Mutant 199 in find.js: data replaced with data.length
Mutant 200 in find.js: data replaced with data[0]
Mutant 201 in find.js: cb(null, data) replaced with cb(data, null)
Mutant 202 in find.js: cb(null, data) replaced with cb(data, undefined)
Mutant 203 in find.js: cb(null, data) replaced with cb(null, data[0])
Mutant 204 in find.js: null replaced with undefined
Mutant 205 in find.js: null replaced with ''
Mutant 206 in find.js: null replaced with 0
Mutant 207 in find.js: data replaced with null
Mutant 208 in find.js: data replaced with function () {}
Mutant 209 in find.js: data replaced with 0
Mutant 210 in find.js: ended replaced with !ended
Mutant 211 in find.js: ended replaced with ended = true
Mutant 212 in find.js: ended replaced with ended == false
Mutant 213 in find.js: cb(err === true ? null : err, null) replaced with cb(err === false ? null : err)
Mutant 214 in find.js: cb(err === true ? null : err, null) replaced with cb(err ? err : null)
Mutant 215 in find.js: cb(err === true ? null : err, null) replaced with cb(err instanceof Error ? null : err)
Mutant 216 in find.js: cb replaced with test
Mutant 217 in find.js: err === true ? null : err replaced with err === false ? null : err
Mutant 218 in find.js: err === true ? null : err replaced with err.message === 'error' ? null : err
Mutant 219 in find.js: err === true ? null : err replaced with err.code === 404 ? null : err
Mutant 220 in find.js: null replaced with undefined
Mutant 221 in find.js: null replaced with ERROR
Mutant 222 in find.js: null replaced with ''
Mutant 223 in log.js: console.log replaced with console.warn
Mutant 224 in log.js: console.log replaced with console.error
Mutant 225 in log.js: console.log replaced with console.info
Mutant 226 in log.js: data replaced with console.log(data + 1)
Mutant 227 in log.js: data replaced with console.log(data.toString())
Mutant 228 in log.js: data replaced with console.log(data.toUpperCase())
Mutant 229 in on-end.js: drain(null, done) replaced with drain(undefined, done)
Mutant 230 in on-end.js: drain(null, done) replaced with drain(true, done)
Mutant 231 in on-end.js: drain(null, done) replaced with drain(false, done)
Mutant 232 in on-end.js: null replaced with undefined
Mutant 233 in on-end.js: null replaced with false
Mutant 234 in on-end.js: null replaced with 0
Mutant 235 in on-end.js: done replaced with undefined
Mutant 236 in on-end.js: done replaced with null
Mutant 237 in on-end.js: done replaced with 'foo'
Mutant 238 in reduce.js: !cb replaced with cb === null
Mutant 239 in reduce.js: !cb replaced with typeof cb === 'function'
Mutant 240 in reduce.js: !cb replaced with acc instanceof Error
Mutant 241 in reduce.js: reducer(acc, data) replaced with reducer(acc + data)
Mutant 242 in reduce.js: reducer(acc, data) replaced with reducer(acc * data)
Mutant 243 in reduce.js: reducer(acc, data) replaced with reducer(null)
Mutant 244 in reduce.js: reducer replaced with acc + data
Mutant 245 in reduce.js: reducer replaced with acc - data
Mutant 246 in reduce.js: acc replaced with null
Mutant 247 in reduce.js: acc replaced with undefined
Mutant 248 in reduce.js: acc replaced with {}
Mutant 249 in reduce.js: data replaced with null
Mutant 250 in reduce.js: data replaced with data.slice()
Mutant 251 in reduce.js: data replaced with data[0]
Mutant 252 in reduce.js: cb(err, acc) replaced with cb(error, acc)
Mutant 253 in reduce.js: cb(err, acc) replaced with cb(err, data)
Mutant 254 in reduce.js: cb(err, acc) replaced with cb(error, result)
Mutant 255 in reduce.js: err replaced with null
Mutant 256 in reduce.js: err replaced with acc
Mutant 257 in reduce.js: err replaced with err && acc
Mutant 258 in reduce.js: acc replaced with acc + 1
Mutant 259 in reduce.js: acc replaced with acc - 1
Mutant 260 in reduce.js: acc replaced with sink
Mutant 261 in reduce.js: arguments.length === 2 replaced with arguments.length < 2
Mutant 262 in reduce.js: arguments.length === 2 replaced with arguments.length > 2
Mutant 263 in reduce.js: arguments.length === 2 replaced with arguments.length === 0
Mutant 264 in reduce.js: end replaced with end || acc
Mutant 265 in reduce.js: end replaced with end && acc
Mutant 266 in reduce.js: end replaced with end !== acc
Mutant 267 in reduce.js: end === true ? null : end replaced with end === null ? null : end
Mutant 268 in reduce.js: end === true ? null : end replaced with end != true ? null : end
Mutant 269 in reduce.js: end === true ? null : end replaced with end !== true ? null : end
Mutant 270 in reduce.js: sink replaced with sink + 1
Mutant 271 in reduce.js: sink replaced with sink * 2
Mutant 272 in reduce.js: sink replaced with sink - 1
Mutant 273 in reduce.js: source replaced with function (err) {
  if (err) {
    throw err;
  }
}
Mutant 274 in reduce.js: source replaced with function (err) {
  if (err) {
    cb(err);
  } else {
    sink(data);
  }
}
Mutant 275 in reduce.js: source replaced with function (err, data) {
  if (err) {
    throw err;
  }
  sink(data);
}
Mutant 276 in count.js: end replaced with end + 1
Mutant 277 in count.js: end replaced with max
Mutant 278 in count.js: end replaced with i
Mutant 279 in count.js: end replaced with !end
Mutant 280 in count.js: end replaced with end * 2
Mutant 281 in count.js: end replaced with end && cb(null, i)
Mutant 282 in count.js: i > max replaced with i < max
Mutant 283 in count.js: i > max replaced with i >= max
Mutant 284 in count.js: i > max replaced with i <= max
Mutant 285 in count.js: true replaced with null
Mutant 286 in count.js: true replaced with false
Mutant 287 in count.js: true replaced with undefined
Mutant 288 in count.js: cb(null, i++) replaced with cb(null, i + 1)
Mutant 289 in count.js: cb replaced with null
Mutant 290 in count.js: cb replaced with undefined
Mutant 291 in count.js: cb replaced with 0
Mutant 292 in count.js: null replaced with false
Mutant 293 in count.js: null replaced with 0
Mutant 294 in count.js: null replaced with undefined
Mutant 295 in count.js: i++ replaced with null
Mutant 296 in count.js: i++ replaced with false
Mutant 297 in count.js: i++ replaced with Math.random()
Mutant 298 in empty.js: cb replaced with abort
Mutant 299 in empty.js: true replaced with false
Mutant 300 in empty.js: true replaced with null
Mutant 301 in empty.js: true replaced with undefined
Mutant 302 in error.js: cb replaced with abort
Mutant 303 in error.js: cb replaced with null
Mutant 304 in error.js: cb replaced with undefined
Mutant 305 in error.js: err replaced with null
Mutant 306 in error.js: err replaced with 2
Mutant 307 in error.js: err replaced with err + 1
Mutant 308 in infinite.js: end replaced with end + 1
Mutant 309 in infinite.js: end replaced with cb(null)
Mutant 310 in infinite.js: end replaced with cb()
Mutant 311 in infinite.js: cb replaced with null
Mutant 312 in infinite.js: cb replaced with undefined
Mutant 313 in infinite.js: end replaced with null
Mutant 314 in infinite.js: end replaced with true
Mutant 315 in infinite.js: end replaced with end && cb
Mutant 316 in infinite.js: cb(null, generate()) replaced with cb(undefined, generate())
Mutant 317 in infinite.js: cb(null, generate()) replaced with cb(0, generate())
Mutant 318 in infinite.js: cb(null, generate()) replaced with cb('', generate())
Mutant 319 in infinite.js: cb replaced with Math.random
Mutant 320 in infinite.js: null replaced with undefined
Mutant 321 in infinite.js: null replaced with ''
Mutant 322 in infinite.js: null replaced with Infinity
Mutant 323 in infinite.js: generate() replaced with generate(null)
Mutant 324 in infinite.js: generate() replaced with generate(Math.floor(Math.random() * 100))
Mutant 325 in infinite.js: generate() replaced with generate(function () {
  return Math.random() * 10;
})
Mutant 326 in keys.js: values replaced with undefined
Mutant 327 in keys.js: values replaced with null
Mutant 328 in keys.js: values replaced with NaN
Mutant 329 in keys.js: object replaced with object
Mutant 330 in keys.js: object replaced with function () {
  return object;
}
Mutant 331 in keys.js: object replaced with null
Mutant 332 in once.js: abort replaced with !abort
Mutant 333 in once.js: abort replaced with abort || true
Mutant 334 in once.js: abort replaced with typeof abort === 'undefined'
Mutant 335 in once.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, onAbort, abort)
Mutant 336 in once.js: abortCb(cb, abort, onAbort) replaced with abortCb(abort, cb, onAbort)
Mutant 337 in once.js: abortCb replaced with 1
Mutant 338 in once.js: abortCb replaced with null
Mutant 339 in once.js: abort replaced with abort + 1
Mutant 340 in once.js: abort replaced with !abort
Mutant 341 in once.js: abort replaced with abort ? 1 : 0
Mutant 342 in once.js: onAbort replaced with undefined
Mutant 343 in once.js: onAbort replaced with null
Mutant 344 in once.js: onAbort replaced with () => {}
Mutant 345 in once.js: value != null replaced with value == null
Mutant 346 in once.js: value != null replaced with value !== null
Mutant 347 in once.js: value != null replaced with !value
Mutant 348 in once.js: cb(null, _value) replaced with cb(undefined)
Mutant 349 in once.js: cb(null, _value) replaced with cb(0)
Mutant 350 in once.js: cb(null, _value) replaced with cb(function () {})
Mutant 351 in once.js: null replaced with undefined
Mutant 352 in once.js: null replaced with 0
Mutant 353 in once.js: _value replaced with _value + 1
Mutant 354 in once.js: _value replaced with _value * 2
Mutant 355 in once.js: _value replaced with 0
Mutant 356 in once.js: true replaced with false
Mutant 357 in once.js: true replaced with cb(null, value)
Mutant 358 in once.js: true replaced with cb(new Error('Invalid argument'))
Mutant 359 in values.js: abort replaced with !abort
Mutant 360 in values.js: abort replaced with abort || true
Mutant 361 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(abort, cb, onAbort)
Mutant 362 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(onAbort, cb, abort)
Mutant 363 in values.js: cb replaced with null
Mutant 364 in values.js: cb replaced with undefined
Mutant 365 in values.js: abort replaced with null
Mutant 366 in values.js: abort replaced with abort || true
Mutant 367 in values.js: abort replaced with !abort
Mutant 368 in values.js: onAbort replaced with null
Mutant 369 in values.js: onAbort replaced with undefined
Mutant 370 in values.js: onAbort replaced with []
Mutant 371 in values.js: cb replaced with null
Mutant 372 in values.js: cb replaced with undefined
Mutant 373 in values.js: true replaced with cb(false)
Mutant 374 in values.js: true replaced with cb(undefined)
Mutant 375 in values.js: true replaced with cb()
Mutant 376 in values.js: !Array.isArray(array) replaced with Array.isArray(array)
Mutant 377 in values.js: !Array.isArray(array) replaced with !Array.isArray(array[0])
Mutant 378 in values.js: !Array.isArray(array) replaced with typeof array === 'undefined'
Mutant 379 in values.js: Array.isArray replaced with array.length === 0
Mutant 380 in values.js: Array.isArray replaced with typeof array !== 'object'
Mutant 381 in values.js: array replaced with Object.keys(array)[k]
Mutant 382 in values.js: array replaced with array[i++]
Mutant 383 in values.js: array replaced with array.pop()
Mutant 384 in values.js: array replaced with array[i]
Mutant 385 in values.js: array replaced with array.length
Mutant 386 in values.js: array replaced with array[k - 1]
Mutant 387 in values.js: abort replaced with abort || i >= array.length
Mutant 388 in values.js: abort replaced with !abort && i >= array.length
Mutant 389 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, null, null)
Mutant 390 in values.js: cb replaced with abortCb(null, abort, onAbort)
Mutant 391 in values.js: abort replaced with abort || true
Mutant 392 in values.js: abort replaced with abort && false
Mutant 393 in values.js: abort replaced with !abort
Mutant 394 in values.js: onAbort replaced with abort
Mutant 395 in values.js: onAbort replaced with null
Mutant 396 in values.js: onAbort replaced with function () {}
Mutant 397 in values.js: i >= array.length replaced with i < 0
Mutant 398 in values.js: i >= array.length replaced with i === array.length + 1
Mutant 399 in values.js: i >= array.length replaced with i >= array.length && i % 2 === 0
Mutant 400 in values.js: cb replaced with null
Mutant 401 in values.js: cb replaced with onAbort
Mutant 402 in values.js: true replaced with false
Mutant 403 in values.js: true replaced with null
Mutant 404 in values.js: true replaced with undefined
Mutant 405 in values.js: cb(null, array[i++]) replaced with cb(undefined)
Mutant 406 in values.js: cb(null, array[i++]) replaced with cb(null)
Mutant 407 in values.js: null replaced with undefined
Mutant 408 in values.js: null replaced with 0
Mutant 409 in values.js: null replaced with 'null'
Mutant 410 in values.js: array[i++] replaced with array[i + 1]
Mutant 411 in values.js: array[i++] replaced with array[array.length - i - 1]
Mutant 412 in async-map.js: !map replaced with map && !map.length
Mutant 413 in async-map.js: !map replaced with map.length > 0
Mutant 414 in async-map.js: prop replaced with 1
Mutant 415 in async-map.js: prop replaced with null
Mutant 416 in async-map.js: prop replaced with ['foo', 'bar', 'baz']
Mutant 417 in async-map.js: map replaced with !map
Mutant 418 in async-map.js: map replaced with map + 1
Mutant 419 in async-map.js: map replaced with "map"
Mutant 420 in async-map.js: aborted replaced with !aborted
Mutant 421 in async-map.js: aborted replaced with abort && aborted
Mutant 422 in async-map.js: aborted replaced with abort || !aborted
Mutant 423 in async-map.js: cb replaced with abort
Mutant 424 in async-map.js: cb replaced with null
Mutant 425 in async-map.js: cb replaced with undefined
Mutant 426 in async-map.js: aborted replaced with null
Mutant 427 in async-map.js: aborted replaced with !aborted
Mutant 428 in async-map.js: aborted replaced with aborted && false
Mutant 429 in async-map.js: abort replaced with abort || undefined
Mutant 430 in async-map.js: abort replaced with !abort
Mutant 431 in async-map.js: abort replaced with true
Mutant 432 in async-map.js: !busy replaced with busy
Mutant 433 in async-map.js: !busy replaced with !aborted
Mutant 434 in async-map.js: abort replaced with undefined
Mutant 435 in async-map.js: abort replaced with null
Mutant 436 in async-map.js: abort replaced with function () {}
Mutant 437 in async-map.js: busy replaced with !busy
Mutant 438 in async-map.js: busy replaced with aborted
Mutant 439 in async-map.js: busy replaced with !map
Mutant 440 in async-map.js: end replaced with end < 0
Mutant 441 in async-map.js: end replaced with end - 1
Mutant 442 in async-map.js: end replaced with end + 1
Mutant 443 in async-map.js: end replaced with end + 1
Mutant 444 in async-map.js: end replaced with end - 1
Mutant 445 in async-map.js: end replaced with end = 0
Mutant 446 in async-map.js: aborted replaced with aborted !== null
Mutant 447 in async-map.js: aborted replaced with aborted.toString()
Mutant 448 in async-map.js: cb replaced with null
Mutant 449 in async-map.js: cb replaced with undefined
Mutant 450 in async-map.js: cb replaced with !aborted
Mutant 451 in async-map.js: aborted replaced with aborted()
Mutant 452 in async-map.js: aborted replaced with 1
Mutant 453 in async-map.js: aborted replaced with null
Mutant 454 in async-map.js: aborted replaced with !aborted
Mutant 455 in async-map.js: aborted replaced with aborted !== 0
Mutant 456 in async-map.js: aborted replaced with aborted + Math.random()
Mutant 457 in async-map.js: cb replaced with empty = []
Mutant 458 in async-map.js: cb replaced with undefined = 42
Mutant 459 in async-map.js: aborted replaced with null
Mutant 460 in async-map.js: aborted replaced with undefined
Mutant 461 in async-map.js: aborted replaced with aborted.toUpperCase()
Mutant 462 in async-map.js: aborted replaced with undefined
Mutant 463 in async-map.js: aborted replaced with null
Mutant 464 in async-map.js: aborted replaced with {}
Mutant 465 in async-map.js: err replaced with !err
Mutant 466 in async-map.js: err replaced with err && 'error'
Mutant 467 in async-map.js: err replaced with err || 'error'
Mutant 468 in async-map.js: next(err, cb) replaced with next(err, (err2, cb) => cb(err2))
Mutant 469 in async-map.js: next(err, cb) replaced with next(err, (err, cb) => cb(err))
Mutant 470 in async-map.js: err replaced with null
Mutant 471 in async-map.js: err replaced with undefined
Mutant 472 in async-map.js: err replaced with ''
Mutant 473 in async-map.js: cb replaced with abort
Mutant 474 in async-map.js: cb replaced with "error"
Mutant 475 in async-map.js: cb replaced with cb(undefined)
Mutant 476 in async-map.js: cb(null, data) replaced with cb(undefined)
Mutant 477 in async-map.js: cb(null, data) replaced with cb({
  data: null
})
Mutant 478 in async-map.js: cb(null, data) replaced with cb("null")
Mutant 479 in async-map.js: cb replaced with null
Mutant 480 in async-map.js: cb replaced with undefined
Mutant 481 in async-map.js: cb replaced with 0
Mutant 482 in async-map.js: null replaced with "null"
Mutant 483 in async-map.js: null replaced with undefined
Mutant 484 in async-map.js: null replaced with {}
Mutant 485 in async-map.js: data replaced with null
Mutant 486 in async-map.js: data replaced with data + 1
Mutant 487 in filter-not.js: test replaced with !test(data)
Mutant 488 in filter-not.js: test replaced with test(data, data)
Mutant 489 in filter-not.js: test replaced with test(data + data)
Mutant 490 in filter-not.js: filter replaced with filterNot
Mutant 491 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return !test(data) || data;
}
Mutant 492 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return !test(data) && data;
}
Mutant 493 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return !test(data) - data;
}
Mutant 494 in filter-not.js: test replaced with test + 1
Mutant 495 in filter-not.js: test replaced with test * 2
Mutant 496 in filter-not.js: data replaced with data - 1
Mutant 497 in filter-not.js: data replaced with data + 1
Mutant 498 in filter.js: tester replaced with test
Mutant 499 in filter.js: tester replaced with tester.someProperty
Mutant 500 in filter.js: test replaced with test === 'expected value'
Mutant 501 in filter.js: test replaced with test !== 'expected value'
Mutant 502 in filter.js: test replaced with test.includes('expected value')
Mutant 503 in filter.js: loop replaced with !loop
Mutant 504 in filter.js: loop replaced with true
Mutant 505 in filter.js: loop replaced with false
Mutant 506 in filter.js: test replaced with !test && !data
Mutant 507 in filter.js: test replaced with test && data
Mutant 508 in filter.js: test replaced with test || data
Mutant 509 in filter.js: data replaced with !test(data)
Mutant 510 in filter.js: data replaced with test(data + 1)
Mutant 511 in filter.js: data replaced with test(data.prop)
Mutant 512 in filter.js: next(end, cb) replaced with next(end - 1, cb)
Mutant 513 in filter.js: next(end, cb) replaced with next(end + 1, cb)
Mutant 514 in filter.js: next replaced with Loop = true
Mutant 515 in filter.js: end replaced with null
Mutant 516 in filter.js: end replaced with undefined
Mutant 517 in filter.js: end replaced with Number.NaN
Mutant 518 in filter.js: cb replaced with () => cb
Mutant 519 in filter.js: cb replaced with null
Mutant 520 in filter.js: cb replaced with undefined
Mutant 521 in filter.js: cb replaced with NULL
Mutant 522 in filter.js: cb replaced with undefined
Mutant 523 in filter.js: cb replaced with NaN
Mutant 524 in filter.js: end replaced with true
Mutant 525 in filter.js: end replaced with false
Mutant 526 in filter.js: end replaced with end + 1
Mutant 527 in filter.js: data replaced with !data
Mutant 528 in filter.js: data replaced with data + 1
Mutant 529 in filter.js: data replaced with undefined
Mutant 530 in flatten.js: abort replaced with !abort
Mutant 531 in flatten.js: abort replaced with abort + 1
Mutant 532 in flatten.js: abort replaced with abort()
Mutant 533 in flatten.js: read(err || abort, cb) replaced with read(abort || cb(err))
Mutant 534 in flatten.js: read(err || abort, cb) replaced with read(abort && cb())
Mutant 535 in flatten.js: read(err || abort, cb) replaced with read(abort || cb(err) || cb())
Mutant 536 in flatten.js: err || abort replaced with err && abort
Mutant 537 in flatten.js: err || abort replaced with !err
Mutant 538 in flatten.js: cb replaced with callback
Mutant 539 in flatten.js: cb replaced with cb(null, data)
Mutant 540 in flatten.js: cb replaced with cb(false, data)
Mutant 541 in flatten.js: read(abort, cb) replaced with read(null)
Mutant 542 in flatten.js: read(abort, cb) replaced with read(undefined)
Mutant 543 in flatten.js: read(abort, cb) replaced with read(true)
Mutant 544 in flatten.js: abort replaced with null
Mutant 545 in flatten.js: abort replaced with true
Mutant 546 in flatten.js: abort replaced with undefined
Mutant 547 in flatten.js: cb replaced with cb(abortErr)
Mutant 548 in flatten.js: cb replaced with cb(err)
Mutant 549 in flatten.js: _read replaced with _read(null, function (err, data) {
  if (err) {
    read(true, cb(err));
  } else cb(null, data);
})
Mutant 550 in flatten.js: _read replaced with _read(null, function (err, data) {
  if (err) {
    read(err, cb);
  } else cb(null, data);
})
Mutant 551 in flatten.js: nextChunk replaced with nextStream
Mutant 552 in flatten.js: nextChunk replaced with null
Mutant 553 in flatten.js: nextStream replaced with _read = null
Mutant 554 in flatten.js: nextStream replaced with _read = stream
Mutant 555 in flatten.js: err replaced with err && err.message
Mutant 556 in flatten.js: err replaced with err !== true
Mutant 557 in flatten.js: err replaced with !err
Mutant 558 in flatten.js: err === true replaced with err == 1
Mutant 559 in flatten.js: err === true replaced with err != 0
Mutant 560 in flatten.js: err === true replaced with !err
Mutant 561 in flatten.js: cb replaced with null
Mutant 562 in flatten.js: cb replaced with undefined
Mutant 563 in flatten.js: err replaced with null
Mutant 564 in flatten.js: err replaced with undefined
Mutant 565 in flatten.js: err replaced with false
Mutant 566 in flatten.js: cb(null, data) replaced with cb(undefined, 'notdata')
Mutant 567 in flatten.js: cb(null, data) replaced with cb('notnull', data)
Mutant 568 in flatten.js: null replaced with undefined
Mutant 569 in flatten.js: null replaced with NaN
Mutant 570 in flatten.js: null replaced with ''
Mutant 571 in flatten.js: data replaced with undefined
Mutant 572 in flatten.js: data replaced with null
Mutant 573 in flatten.js: cb replaced with !cb
Mutant 574 in flatten.js: cb replaced with null
Mutant 575 in flatten.js: cb replaced with undefined
Mutant 576 in flatten.js: end replaced with null
Mutant 577 in flatten.js: end replaced with !end
Mutant 578 in flatten.js: end replaced with undefined
Mutant 579 in flatten.js: stream && 'object' === typeof stream replaced with stream !== 'object'
Mutant 580 in flatten.js: stream && 'object' === typeof stream replaced with stream && 'object' === typeof stream && stream.hasOwnProperty('length')
Mutant 581 in flatten.js: stream && 'object' === typeof stream replaced with !stream || 'object' !== typeof stream
Mutant 582 in flatten.js: stream replaced with stream()
Mutant 583 in flatten.js: stream replaced with stream + 1
Mutant 584 in flatten.js: stream replaced with false
Mutant 585 in flatten.js: stream replaced with function () {}
Mutant 586 in flatten.js: stream replaced with 0
Mutant 587 in flatten.js: stream replaced with null
Mutant 588 in flatten.js: nextChunk replaced with nextStream = nextChunk
Mutant 589 in flatten.js: nextChunk replaced with nextChunk = nextStream
Mutant 590 in map.js: !mapper replaced with mapper === null
Mutant 591 in map.js: !mapper replaced with mapper == false
Mutant 592 in map.js: !mapper replaced with !mapper(data)
Mutant 593 in map.js: prop replaced with !prop
Mutant 594 in map.js: prop replaced with prop.foo
Mutant 595 in map.js: prop replaced with prop + 1
Mutant 596 in map.js: data replaced with `null`
Mutant 597 in map.js: data replaced with `undefined`
Mutant 598 in map.js: data replaced with `0`
Mutant 599 in map.js: err replaced with null
Mutant 600 in map.js: err replaced with "error_message"
Mutant 601 in map.js: err replaced with new Error("error_message")
Mutant 602 in map.js: cb(end, data) replaced with cb(end, undefined)
Mutant 603 in map.js: cb(end, data) replaced with cb(end, null)
Mutant 604 in map.js: cb(end, data) replaced with cb(!end, data)
Mutant 605 in map.js: end replaced with !end
Mutant 606 in map.js: end replaced with end + true
Mutant 607 in map.js: end replaced with end ? data : null
Mutant 608 in map.js: data replaced with data === undefined
Mutant 609 in map.js: data replaced with typeof data !== 'undefined'
Mutant 610 in map.js: data replaced with data != null
Mutant 611 in non-unique.js: unique(field, true) replaced with unique(field, false)
Mutant 612 in non-unique.js: unique(field, true) replaced with unique(field, !field)
Mutant 613 in non-unique.js: unique(field, true) replaced with unique(field + '!')
Mutant 614 in non-unique.js: field replaced with field.slice(0, 1)
Mutant 615 in non-unique.js: field replaced with field.toUpperCase()
Mutant 616 in non-unique.js: field replaced with field.length
Mutant 617 in non-unique.js: true replaced with false
Mutant 618 in non-unique.js: true replaced with void 0
Mutant 619 in non-unique.js: true replaced with null
Mutant 620 in take.js: 'number' === typeof test replaced with 'integer' === typeof test
Mutant 621 in take.js: 'number' === typeof test replaced with test.length > 0
Mutant 622 in take.js: 'number' === typeof test replaced with typeof test === 'object'
Mutant 623 in take.js: err || true replaced with err && true
Mutant 624 in take.js: err || true replaced with !err || true
Mutant 625 in take.js: ended && !end replaced with ended || !end
Mutant 626 in take.js: ended && !end replaced with end !== ended
Mutant 627 in take.js: ended && !end replaced with ended && test(data)
Mutant 628 in take.js: terminate replaced with undefined
Mutant 629 in take.js: cb replaced with cb(null, 42)
Mutant 630 in take.js: cb replaced with cb(new Error("BOOM"))
Mutant 631 in take.js: cb replaced with cb({
  name: "Jane",
  age: 30
}, data)
Mutant 632 in take.js: cb replaced with ended
Mutant 633 in take.js: cb replaced with false
Mutant 634 in take.js: ended replaced with !ended
Mutant 635 in take.js: ended replaced with false
Mutant 636 in take.js: ended replaced with null
Mutant 637 in take.js: ended = end replaced with ended != end
Mutant 638 in take.js: ended = end replaced with end && ended
Mutant 639 in take.js: ended = end replaced with ended && test(data)
Mutant 640 in take.js: read(ended, cb) replaced with read(!ended, cb)
Mutant 641 in take.js: read(ended, cb) replaced with read(ended || cb)
Mutant 642 in take.js: read(ended, cb) replaced with read(ended && cb)
Mutant 643 in take.js: ended replaced with ""
Mutant 644 in take.js: ended replaced with ended || false
Mutant 645 in take.js: ended replaced with !ended
Mutant 646 in take.js: cb replaced with false
Mutant 647 in take.js: cb replaced with null
Mutant 648 in take.js: cb replaced with undefined
Mutant 649 in take.js: ended = ended || end replaced with ended = end
Mutant 650 in take.js: ended = ended || end replaced with ended = !end
Mutant 651 in take.js: ended = ended || end replaced with ended = 1
Mutant 652 in take.js: ended replaced with !ended
Mutant 653 in take.js: ended replaced with ended || true
Mutant 654 in take.js: ended replaced with ended && false
Mutant 655 in take.js: !test(data) replaced with test(data)
Mutant 656 in take.js: !test(data) replaced with test(null)
Mutant 657 in take.js: !test(data) replaced with test()
Mutant 658 in take.js: data replaced with !data
Mutant 659 in take.js: data replaced with data + 1
Mutant 660 in take.js: data replaced with data * 2
Mutant 661 in take.js: cb(null, data) replaced with cb(null)
Mutant 662 in take.js: cb(null, data) replaced with cb(undefined)
Mutant 663 in take.js: cb(null, data) replaced with cb(true)
Mutant 664 in take.js: null replaced with undefined
Mutant 665 in take.js: null replaced with 0
Mutant 666 in take.js: data replaced with !data
Mutant 667 in take.js: data replaced with null
Mutant 668 in take.js: data replaced with undefined
Mutant 669 in take.js: terminate replaced with null
Mutant 670 in take.js: cb replaced with seen
Mutant 671 in take.js: cb replaced with 1
Mutant 672 in take.js: cb replaced with null
Mutant 673 in take.js: cb(null, data) replaced with cb(undefined, data)
Mutant 674 in take.js: cb(null, data) replaced with cb(true, data)
Mutant 675 in take.js: cb(null, data) replaced with cb('data', data)
Mutant 676 in take.js: cb replaced with ended ? null : cb
Mutant 677 in take.js: cb replaced with !ended ? null : cb
Mutant 678 in take.js: null replaced with undefined
Mutant 679 in take.js: null replaced with ""
Mutant 680 in take.js: data replaced with null
Mutant 681 in take.js: data replaced with undefined
Mutant 682 in through.js: a || !onEnd replaced with a && !onEnd
Mutant 683 in through.js: a || !onEnd replaced with a != !onEnd
Mutant 684 in through.js: a || !onEnd replaced with a | !onEnd
Mutant 685 in through.js: abort === true ? null : abort replaced with abort === false ? null : abort
Mutant 686 in through.js: abort === true ? null : abort replaced with abort === true && onEnd !== null ? null : abort
Mutant 687 in through.js: abort === true ? null : abort replaced with abort === true && onEnd.length === 0 ? null : abort
Mutant 688 in through.js: end replaced with false
Mutant 689 in through.js: end replaced with null
Mutant 690 in through.js: end replaced with void 0
Mutant 691 in through.js: !end replaced with end
Mutant 692 in through.js: !end replaced with op
Mutant 693 in through.js: !end replaced with a
Mutant 694 in through.js: op replaced with op == false
Mutant 695 in through.js: op replaced with op && !op
Mutant 696 in through.js: op replaced with op || null
Mutant 697 in through.js: data replaced with undefined
Mutant 698 in through.js: data replaced with null
Mutant 699 in through.js: data replaced with "hello"
Mutant 700 in through.js: end replaced with end + 1
Mutant 701 in through.js: end replaced with !end
Mutant 702 in through.js: end replaced with end = true
Mutant 703 in through.js: cb(end, data) replaced with cb(end, null)
Mutant 704 in through.js: cb(end, data) replaced with cb(end, undefined)
Mutant 705 in through.js: cb(end, data) replaced with cb(end, {
  name: 'John',
  age: 30
})
Mutant 706 in through.js: cb replaced with data = null
Mutant 707 in through.js: cb replaced with a = true
Mutant 708 in through.js: cb replaced with read = null
Mutant 709 in through.js: end replaced with a
Mutant 710 in through.js: end replaced with null
Mutant 711 in through.js: end replaced with undefined
Mutant 712 in through.js: data replaced with null
Mutant 713 in through.js: data replaced with 'hello'
Mutant 714 in through.js: data replaced with data + 1
Mutant 715 in unique.js: prop replaced with field + prop
Mutant 716 in unique.js: prop replaced with field * prop
Mutant 717 in unique.js: prop replaced with field[prop]
Mutant 718 in unique.js: field replaced with field + 1
Mutant 719 in unique.js: field replaced with field - 1
Mutant 720 in unique.js: field replaced with field.toLowerCase()
Mutant 721 in unique.js: field replaced with field + 1
Mutant 722 in unique.js: field replaced with field - 1
Mutant 723 in unique.js: field replaced with field == null
Mutant 724 in unique.js: data replaced with data = undefined
Mutant 725 in unique.js: data replaced with field.apply(this, [data])
Mutant 726 in unique.js: seen[key] replaced with !seen[key]
Mutant 727 in unique.js: seen[key] replaced with seen[key] = false
Mutant 728 in unique.js: seen[key] replaced with seen[key] = !seen[key]
Mutant 729 in abort-cb.js: cb replaced with !abort
Mutant 730 in abort-cb.js: cb replaced with abort && cb
Mutant 731 in abort-cb.js: abort replaced with abort === true
Mutant 732 in abort-cb.js: abort replaced with onAbort
Mutant 733 in abort-cb.js: abort replaced with onAbort(abort === true ? null : abort)
Mutant 734 in abort-cb.js: onAbort replaced with onAbort = null
Mutant 735 in abort-cb.js: onAbort replaced with onAbort ||= null
Mutant 736 in abort-cb.js: abort === true ? null : abort replaced with abort !== true ? null : abort
Mutant 737 in abort-cb.js: abort === true ? null : abort replaced with abort === "true" ? null : abort
Mutant 738 in abort-cb.js: abort === true ? null : abort replaced with abort === true ? null : !abort
Mutant 739 in prop.js: key.exec replaced with key.match
Mutant 740 in prop.js: data replaced with null
Mutant 741 in prop.js: data replaced with undefined
Mutant 742 in prop.js: data replaced with new Object()
Mutant 743 in tester.js: data replaced with null
Mutant 744 in tester.js: data replaced with undefined
Mutant 745 in tester.js: data replaced with 0
Mutant 746 in tester.js: prop replaced with prop.length
Mutant 747 in tester.js: prop replaced with test.size
Mutant 748 in tester.js: prop replaced with test.attributes.length
Mutant 749 in tester.js: test replaced with test.test(null)
Mutant 750 in tester.js: test replaced with test.test(undefined)
Mutant 751 in tester.js: test replaced with test.test("")
[32m09:31:45 (2730) INFO Instrumenter[39m Instrumented 31 source file(s) with 752 mutant(s)
[32m09:31:45 (2730) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m09:31:46 (2730) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m09:31:46 (2730) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m09:31:48 (2730) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 1 second (net 1817 ms, overhead 0 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~10m) 12/752 tested (3 survived, 0 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~11m) 21/752 tested (7 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~15m) 23/752 tested (7 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~19m) 25/752 tested (7 survived, 2 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~21m) 28/752 tested (9 survived, 3 timed out)
Mutation testing 4% (elapsed: ~1m, remaining: ~21m) 34/752 tested (13 survived, 3 timed out)
Mutation testing 5% (elapsed: ~1m, remaining: ~20m) 40/752 tested (19 survived, 3 timed out)
Mutation testing 6% (elapsed: ~1m, remaining: ~20m) 47/752 tested (20 survived, 3 timed out)
Mutation testing 7% (elapsed: ~1m, remaining: ~19m) 54/752 tested (20 survived, 3 timed out)
Mutation testing 8% (elapsed: ~1m, remaining: ~18m) 63/752 tested (20 survived, 3 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~18m) 69/752 tested (22 survived, 3 timed out)
Mutation testing 9% (elapsed: ~2m, remaining: ~18m) 75/752 tested (28 survived, 3 timed out)
Mutation testing 10% (elapsed: ~2m, remaining: ~17m) 81/752 tested (34 survived, 3 timed out)
Mutation testing 11% (elapsed: ~2m, remaining: ~18m) 86/752 tested (39 survived, 3 timed out)
Mutation testing 12% (elapsed: ~2m, remaining: ~17m) 92/752 tested (45 survived, 3 timed out)
Mutation testing 13% (elapsed: ~2m, remaining: ~17m) 99/752 tested (50 survived, 3 timed out)
Mutation testing 13% (elapsed: ~2m, remaining: ~18m) 102/752 tested (50 survived, 4 timed out)
Mutation testing 15% (elapsed: ~3m, remaining: ~16m) 113/752 tested (54 survived, 4 timed out)
Mutation testing 15% (elapsed: ~3m, remaining: ~16m) 120/752 tested (58 survived, 4 timed out)
Mutation testing 17% (elapsed: ~3m, remaining: ~16m) 129/752 tested (63 survived, 4 timed out)
Mutation testing 17% (elapsed: ~3m, remaining: ~16m) 134/752 tested (65 survived, 4 timed out)
Mutation testing 18% (elapsed: ~3m, remaining: ~16m) 137/752 tested (65 survived, 5 timed out)
Mutation testing 19% (elapsed: ~3m, remaining: ~15m) 147/752 tested (67 survived, 6 timed out)
Mutation testing 20% (elapsed: ~4m, remaining: ~15m) 152/752 tested (72 survived, 6 timed out)
Mutation testing 21% (elapsed: ~4m, remaining: ~15m) 161/752 tested (75 survived, 6 timed out)
Mutation testing 22% (elapsed: ~4m, remaining: ~14m) 171/752 tested (77 survived, 6 timed out)
Mutation testing 23% (elapsed: ~4m, remaining: ~14m) 177/752 tested (80 survived, 6 timed out)
Mutation testing 24% (elapsed: ~4m, remaining: ~14m) 184/752 tested (83 survived, 6 timed out)
Mutation testing 25% (elapsed: ~4m, remaining: ~14m) 192/752 tested (83 survived, 6 timed out)
Mutation testing 26% (elapsed: ~5m, remaining: ~13m) 199/752 tested (83 survived, 6 timed out)
Mutation testing 27% (elapsed: ~5m, remaining: ~13m) 206/752 tested (85 survived, 6 timed out)
Mutation testing 28% (elapsed: ~5m, remaining: ~13m) 213/752 tested (86 survived, 6 timed out)
Mutation testing 29% (elapsed: ~5m, remaining: ~13m) 219/752 tested (87 survived, 6 timed out)
Mutation testing 29% (elapsed: ~5m, remaining: ~13m) 225/752 tested (89 survived, 6 timed out)
Mutation testing 30% (elapsed: ~5m, remaining: ~13m) 231/752 tested (95 survived, 6 timed out)
Mutation testing 31% (elapsed: ~6m, remaining: ~13m) 237/752 tested (99 survived, 6 timed out)
Mutation testing 33% (elapsed: ~6m, remaining: ~12m) 251/752 tested (99 survived, 6 timed out)
Mutation testing 34% (elapsed: ~6m, remaining: ~11m) 263/752 tested (100 survived, 6 timed out)
Mutation testing 35% (elapsed: ~6m, remaining: ~11m) 269/752 tested (106 survived, 6 timed out)
Mutation testing 36% (elapsed: ~6m, remaining: ~11m) 276/752 tested (107 survived, 6 timed out)
Mutation testing 37% (elapsed: ~6m, remaining: ~11m) 285/752 tested (110 survived, 6 timed out)
Mutation testing 39% (elapsed: ~7m, remaining: ~10m) 294/752 tested (112 survived, 6 timed out)
Mutation testing 39% (elapsed: ~7m, remaining: ~10m) 299/752 tested (113 survived, 6 timed out)
Mutation testing 39% (elapsed: ~7m, remaining: ~11m) 300/752 tested (113 survived, 7 timed out)
Mutation testing 40% (elapsed: ~7m, remaining: ~11m) 303/752 tested (113 survived, 9 timed out)
Mutation testing 40% (elapsed: ~7m, remaining: ~11m) 308/752 tested (113 survived, 9 timed out)
Mutation testing 41% (elapsed: ~7m, remaining: ~10m) 313/752 tested (113 survived, 10 timed out)
Mutation testing 42% (elapsed: ~8m, remaining: ~10m) 318/752 tested (117 survived, 11 timed out)
Mutation testing 43% (elapsed: ~8m, remaining: ~10m) 324/752 tested (121 survived, 11 timed out)
Mutation testing 44% (elapsed: ~8m, remaining: ~10m) 331/752 tested (124 survived, 11 timed out)
Mutation testing 44% (elapsed: ~8m, remaining: ~10m) 333/752 tested (124 survived, 12 timed out)
Mutation testing 44% (elapsed: ~8m, remaining: ~10m) 335/752 tested (125 survived, 13 timed out)
Mutation testing 45% (elapsed: ~8m, remaining: ~10m) 341/752 tested (131 survived, 13 timed out)
Mutation testing 46% (elapsed: ~9m, remaining: ~10m) 346/752 tested (135 survived, 13 timed out)
Mutation testing 46% (elapsed: ~9m, remaining: ~10m) 352/752 tested (137 survived, 13 timed out)
Mutation testing 47% (elapsed: ~9m, remaining: ~10m) 356/752 tested (138 survived, 13 timed out)
Mutation testing 47% (elapsed: ~9m, remaining: ~10m) 357/752 tested (138 survived, 14 timed out)
Mutation testing 48% (elapsed: ~9m, remaining: ~10m) 362/752 tested (141 survived, 15 timed out)
Mutation testing 48% (elapsed: ~9m, remaining: ~10m) 367/752 tested (146 survived, 15 timed out)
Mutation testing 49% (elapsed: ~10m, remaining: ~10m) 373/752 tested (152 survived, 15 timed out)
Mutation testing 50% (elapsed: ~10m, remaining: ~10m) 376/752 tested (155 survived, 15 timed out)
Mutation testing 50% (elapsed: ~10m, remaining: ~10m) 378/752 tested (156 survived, 16 timed out)
Mutation testing 51% (elapsed: ~10m, remaining: ~10m) 385/752 tested (157 survived, 17 timed out)
Mutation testing 51% (elapsed: ~10m, remaining: ~10m) 388/752 tested (157 survived, 18 timed out)
Mutation testing 52% (elapsed: ~10m, remaining: ~9m) 397/752 tested (158 survived, 18 timed out)
Mutation testing 53% (elapsed: ~11m, remaining: ~9m) 402/752 tested (158 survived, 19 timed out)
Mutation testing 53% (elapsed: ~11m, remaining: ~9m) 403/752 tested (158 survived, 20 timed out)
Mutation testing 53% (elapsed: ~11m, remaining: ~9m) 404/752 tested (158 survived, 21 timed out)
Mutation testing 53% (elapsed: ~11m, remaining: ~9m) 405/752 tested (158 survived, 22 timed out)
Mutation testing 54% (elapsed: ~11m, remaining: ~9m) 407/752 tested (158 survived, 24 timed out)
Mutation testing 54% (elapsed: ~11m, remaining: ~9m) 410/752 tested (160 survived, 24 timed out)
Mutation testing 54% (elapsed: ~12m, remaining: ~9m) 412/752 tested (160 survived, 26 timed out)
Mutation testing 55% (elapsed: ~12m, remaining: ~9m) 420/752 tested (161 survived, 26 timed out)
Mutation testing 56% (elapsed: ~12m, remaining: ~9m) 422/752 tested (162 survived, 27 timed out)
Mutation testing 56% (elapsed: ~12m, remaining: ~9m) 428/752 tested (164 survived, 28 timed out)
Mutation testing 57% (elapsed: ~12m, remaining: ~9m) 431/752 tested (166 survived, 29 timed out)
Mutation testing 57% (elapsed: ~12m, remaining: ~9m) 434/752 tested (167 survived, 30 timed out)
Mutation testing 58% (elapsed: ~13m, remaining: ~9m) 440/752 tested (167 survived, 30 timed out)
Mutation testing 58% (elapsed: ~13m, remaining: ~9m) 443/752 tested (167 survived, 32 timed out)
Mutation testing 59% (elapsed: ~13m, remaining: ~9m) 445/752 tested (168 survived, 33 timed out)
Mutation testing 59% (elapsed: ~13m, remaining: ~9m) 451/752 tested (168 survived, 34 timed out)
Mutation testing 61% (elapsed: ~13m, remaining: ~8m) 464/752 tested (170 survived, 34 timed out)
Mutation testing 63% (elapsed: ~13m, remaining: ~7m) 477/752 tested (172 survived, 34 timed out)
Mutation testing 64% (elapsed: ~14m, remaining: ~7m) 488/752 tested (173 survived, 34 timed out)
Mutation testing 65% (elapsed: ~14m, remaining: ~7m) 496/752 tested (174 survived, 34 timed out)
Mutation testing 66% (elapsed: ~14m, remaining: ~7m) 498/752 tested (175 survived, 35 timed out)
Mutation testing 67% (elapsed: ~14m, remaining: ~7m) 504/752 tested (175 survived, 35 timed out)
Mutation testing 67% (elapsed: ~14m, remaining: ~7m) 508/752 tested (175 survived, 36 timed out)
Mutation testing 67% (elapsed: ~14m, remaining: ~7m) 510/752 tested (176 survived, 37 timed out)
Mutation testing 67% (elapsed: ~15m, remaining: ~7m) 511/752 tested (176 survived, 38 timed out)
Mutation testing 68% (elapsed: ~15m, remaining: ~6m) 515/752 tested (179 survived, 39 timed out)
Mutation testing 69% (elapsed: ~15m, remaining: ~6m) 521/752 tested (185 survived, 39 timed out)
Mutation testing 69% (elapsed: ~15m, remaining: ~6m) 525/752 tested (185 survived, 39 timed out)
Mutation testing 70% (elapsed: ~15m, remaining: ~6m) 530/752 tested (185 survived, 40 timed out)
Mutation testing 71% (elapsed: ~15m, remaining: ~6m) 537/752 tested (186 survived, 40 timed out)
Mutation testing 72% (elapsed: ~16m, remaining: ~6m) 545/752 tested (186 survived, 40 timed out)
Mutation testing 73% (elapsed: ~16m, remaining: ~5m) 551/752 tested (187 survived, 40 timed out)
Mutation testing 73% (elapsed: ~16m, remaining: ~5m) 555/752 tested (187 survived, 40 timed out)
Mutation testing 74% (elapsed: ~16m, remaining: ~5m) 557/752 tested (187 survived, 42 timed out)
Mutation testing 74% (elapsed: ~16m, remaining: ~5m) 559/752 tested (188 survived, 43 timed out)
Mutation testing 74% (elapsed: ~16m, remaining: ~5m) 563/752 tested (188 survived, 43 timed out)
Mutation testing 75% (elapsed: ~17m, remaining: ~5m) 564/752 tested (188 survived, 44 timed out)
Mutation testing 75% (elapsed: ~17m, remaining: ~5m) 566/752 tested (188 survived, 46 timed out)
Mutation testing 76% (elapsed: ~17m, remaining: ~5m) 572/752 tested (191 survived, 46 timed out)
Mutation testing 76% (elapsed: ~17m, remaining: ~5m) 576/752 tested (191 survived, 46 timed out)
Mutation testing 76% (elapsed: ~17m, remaining: ~5m) 577/752 tested (191 survived, 47 timed out)
Mutation testing 77% (elapsed: ~17m, remaining: ~5m) 580/752 tested (191 survived, 49 timed out)
Mutation testing 77% (elapsed: ~18m, remaining: ~5m) 585/752 tested (192 survived, 49 timed out)
Mutation testing 78% (elapsed: ~18m, remaining: ~4m) 591/752 tested (194 survived, 49 timed out)
Mutation testing 80% (elapsed: ~18m, remaining: ~4m) 602/752 tested (195 survived, 49 timed out)
Mutation testing 80% (elapsed: ~18m, remaining: ~4m) 607/752 tested (195 survived, 49 timed out)
Mutation testing 81% (elapsed: ~18m, remaining: ~4m) 615/752 tested (196 survived, 50 timed out)
Mutation testing 82% (elapsed: ~18m, remaining: ~3m) 623/752 tested (196 survived, 50 timed out)
Mutation testing 83% (elapsed: ~19m, remaining: ~3m) 625/752 tested (198 survived, 50 timed out)
Mutation testing 83% (elapsed: ~19m, remaining: ~3m) 629/752 tested (198 survived, 52 timed out)
Mutation testing 84% (elapsed: ~19m, remaining: ~3m) 636/752 tested (202 survived, 52 timed out)
Mutation testing 86% (elapsed: ~19m, remaining: ~3m) 650/752 tested (205 survived, 52 timed out)
Mutation testing 87% (elapsed: ~19m, remaining: ~2m) 659/752 tested (208 survived, 52 timed out)
Mutation testing 88% (elapsed: ~19m, remaining: ~2m) 667/752 tested (210 survived, 52 timed out)
Mutation testing 89% (elapsed: ~20m, remaining: ~2m) 675/752 tested (211 survived, 52 timed out)
Mutation testing 90% (elapsed: ~20m, remaining: ~2m) 684/752 tested (215 survived, 52 timed out)
Mutation testing 91% (elapsed: ~20m, remaining: ~1m) 689/752 tested (220 survived, 52 timed out)
Mutation testing 92% (elapsed: ~20m, remaining: ~1m) 697/752 tested (223 survived, 52 timed out)
Mutation testing 93% (elapsed: ~20m, remaining: ~1m) 702/752 tested (228 survived, 52 timed out)
Mutation testing 94% (elapsed: ~20m, remaining: ~1m) 709/752 tested (229 survived, 52 timed out)
Mutation testing 94% (elapsed: ~21m, remaining: ~1m) 711/752 tested (229 survived, 54 timed out)
Mutation testing 95% (elapsed: ~21m, remaining: ~1m) 715/752 tested (229 survived, 55 timed out)
Mutation testing 95% (elapsed: ~21m, remaining: <1m) 720/752 tested (231 survived, 55 timed out)
Mutation testing 96% (elapsed: ~21m, remaining: <1m) 726/752 tested (232 survived, 55 timed out)
Mutation testing 97% (elapsed: ~21m, remaining: <1m) 732/752 tested (233 survived, 55 timed out)
Mutation testing 98% (elapsed: ~21m, remaining: <1m) 739/752 tested (234 survived, 55 timed out)
Mutation testing 98% (elapsed: ~22m, remaining: <1m) 743/752 tested (238 survived, 55 timed out)
Mutation testing 98% (elapsed: ~22m, remaining: <1m) 744/752 tested (238 survived, 56 timed out)
Mutation testing 99% (elapsed: ~22m, remaining: <1m) 746/752 tested (238 survived, 58 timed out)

All tests
  ✓ All tests (killed 456)

[Survived] PrecomputedMutator
sinks/drain.js:8:7
-     if (!done) {
+     if (!done.called) {

[Survived] PrecomputedMutator
sinks/drain.js:8:7
-     if (!done) {
+     if (!done.result) {

[Survived] PrecomputedMutator
sinks/drain.js:14:8
-       if(abort) return sink.abort()
+       if(abort && false) return sink.abort()

[Survived] PrecomputedMutator
sinks/drain.js:26:29
-                 if(done) done(end === true ? null : end)
+                 if(done) done(end == true ? null : end)

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(end > true) {

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(end == true) {

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(end < true) {

[Survived] PrecomputedMutator
sinks/drain.js:28:17
-                   console.warn(doneLackingErr)
+                   console.error(doneLackingErr)

[Survived] PrecomputedMutator
sinks/drain.js:28:17
-                   console.warn(doneLackingErr)
+                   console.log(doneLackingErr)

[Survived] PrecomputedMutator
sinks/drain.js:28:17
-                   console.warn(doneLackingErr)
+                   console.trace(doneLackingErr)

[Survived] PrecomputedMutator
sinks/drain.js:28:30
-                   console.warn(doneLackingErr)
+                   console.warn(doneLackingErr.message)

[Survived] PrecomputedMutator
sinks/drain.js:28:30
-                   console.warn(doneLackingErr)
+                   console.warn(doneLackingErr.stack)

[Survived] PrecomputedMutator
sinks/drain.js:34:20
-                 read(abort || true, done || function () {})
+                 read(!abort, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:34:20
-                 read(abort || true, done || function () {})
+                 read(abort && false, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:49:8
-       if('function' == typeof err)
+       if(typeof err === 'function')

[Survived] PrecomputedMutator
sinks/drain.js:49:8
-       if('function' == typeof err)
+       if(err === undefined)

[Survived] PrecomputedMutator
sinks/drain.js:52:21
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(abort, null || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:21
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(abort, undefined || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:21
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(abort, function () {} || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:26
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(null, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:26
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(undefined, cb || function () {})

[Survived] PrecomputedMutator
sinks/find.js:17:10
-         cb(null, data)
+         cb(undefined, data)

[Survived] PrecomputedMutator
sinks/find.js:17:10
-         cb(null, data)
+         cb('', data)

[Survived] PrecomputedMutator
sinks/find.js:17:10
-         cb(null, data)
+         cb(0, data)

[Survived] PrecomputedMutator
sinks/find.js:22:8
-       cb(err === true ? null : err, null)
+       cb(err === false ? null : err, null)

[Survived] PrecomputedMutator
sinks/log.js:7:5
-       console.log(data)
+       console.warn(data)

[Survived] PrecomputedMutator
sinks/log.js:7:5
-       console.log(data)
+       console.error(data)

[Survived] PrecomputedMutator
sinks/log.js:7:5
-       console.log(data)
+       console.info(data)

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(console.log(data + 1))

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(console.log(data.toString()))

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(console.log(data.toUpperCase()))

[Survived] PrecomputedMutator
sinks/on-end.js:6:10
-     return drain(null, done)
+     return drain(undefined, done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:10
-     return drain(null, done)
+     return drain(true, done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:10
-     return drain(null, done)
+     return drain(false, done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain(undefined, done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain(false, done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain(0, done)

[Survived] PrecomputedMutator
sinks/reduce.js:12:7
-     if (arguments.length === 2)
+     if (arguments.length < 2)

[Survived] PrecomputedMutator
sinks/reduce.js:12:7
-     if (arguments.length === 2)
+     if (arguments.length === 0)

[Survived] PrecomputedMutator
sinks/reduce.js:16:12
-           if(end) return cb(end === true ? null : end)
+           if(end || acc) return cb(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:12
-           if(end) return cb(end === true ? null : end)
+           if(end && acc) return cb(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:12
-           if(end) return cb(end === true ? null : end)
+           if(end !== acc) return cb(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(end === null ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(end != true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(end !== true ? null : end)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(!end)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(end * 2)

[Survived] PrecomputedMutator
sources/count.js:7:8
-       if(i > max)
+       if(i >= max)

[Survived] PrecomputedMutator
sources/count.js:9:8
-       cb(null, i++)
+       cb(false, i++)

[Survived] PrecomputedMutator
sources/count.js:9:8
-       cb(null, i++)
+       cb(0, i++)

[Survived] PrecomputedMutator
sources/count.js:9:8
-       cb(null, i++)
+       cb(undefined, i++)

[Survived] PrecomputedMutator
sources/infinite.js:5:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(true)

[Survived] PrecomputedMutator
sources/infinite.js:5:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(end && cb)

[Survived] PrecomputedMutator
sources/infinite.js:6:12
-       return cb(null, generate())
+       return cb(undefined, generate())

[Survived] PrecomputedMutator
sources/infinite.js:6:12
-       return cb(null, generate())
+       return cb(0, generate())

[Survived] PrecomputedMutator
sources/infinite.js:6:12
-       return cb(null, generate())
+       return cb('', generate())

[Survived] PrecomputedMutator
sources/infinite.js:6:15
-       return cb(null, generate())
+       return cb(undefined, generate())

[Survived] PrecomputedMutator
sources/infinite.js:6:15
-       return cb(null, generate())
+       return cb('', generate())

[Survived] PrecomputedMutator
sources/infinite.js:6:21
-       return cb(null, generate())
+       return cb(null, generate(null))

[Survived] PrecomputedMutator
sources/infinite.js:6:21
-       return cb(null, generate())
+       return cb(null, generate(Math.floor(Math.random() * 100)))

[Survived] PrecomputedMutator
sources/infinite.js:6:21
-       return cb(null, generate())
+       return cb(null, generate(function () {
+     return Math.random() * 10;
+   }))

[Survived] PrecomputedMutator
sources/keys.js:4:29
-     return values(Object.keys(object))
+     return values(Object.keys(object))

[Survived] PrecomputedMutator
sources/once.js:6:8
-       if(abort)
+       if(typeof abort === 'undefined')

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, onAbort, abort)

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return abortCb(abort, cb, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return 1(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return null(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort + 1, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, !abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort ? 1 : 0, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, undefined)

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, null)

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, () => {})

[Survived] PrecomputedMutator
sources/once.js:8:8
-       if(value != null) {
+       if(value !== null) {

[Survived] PrecomputedMutator
sources/once.js:10:10
-         cb(null, _value)
+         cb(undefined, _value)

[Survived] PrecomputedMutator
sources/once.js:10:10
-         cb(null, _value)
+         cb(0, _value)

[Survived] PrecomputedMutator
sources/values.js:7:10
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(!abort) return abortCb(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:10
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort || true) return abortCb(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(abort, cb, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(onAbort, cb, abort)

[Survived] PrecomputedMutator
sources/values.js:7:32
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(null, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:32
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(undefined, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:36
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, null, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:36
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort || true, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:36
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, !abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:43
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, null)

[Survived] PrecomputedMutator
sources/values.js:7:43
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, undefined)

[Survived] PrecomputedMutator
sources/values.js:7:43
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, [])

[Survived] PrecomputedMutator
sources/values.js:8:14
-         return cb(true)
+         return null(true)

[Survived] PrecomputedMutator
sources/values.js:8:14
-         return cb(true)
+         return undefined(true)

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(cb(false))

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(cb(undefined))

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(cb())

[Survived] PrecomputedMutator
sources/values.js:10:6
-     if(!Array.isArray(array))
+     if(!Array.isArray(array[0]))

[Survived] PrecomputedMutator
sources/values.js:10:21
-     if(!Array.isArray(array))
+     if(!Array.isArray(array[i++]))

[Survived] PrecomputedMutator
sources/values.js:17:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort || true, onAbort)

[Survived] PrecomputedMutator
sources/values.js:21:10
-         cb(null, array[i++])
+         cb(undefined, array[i++])

[Survived] PrecomputedMutator
sources/values.js:21:10
-         cb(null, array[i++])
+         cb(0, array[i++])

[Survived] PrecomputedMutator
throughs/async-map.js:7:6
-     if(!map) return id
+     if(map && !map.length) return id

[Survived] PrecomputedMutator
throughs/async-map.js:12:10
-         if(aborted) return cb(aborted)
+         if(abort && aborted) return cb(aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(null)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(!aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(aborted && false)

[Survived] PrecomputedMutator
throughs/async-map.js:13:10
-         if(abort) {
+         if(abort || undefined) {

[Survived] PrecomputedMutator
throughs/async-map.js:15:12
-           if(!busy) read(abort, function (err) {
+           if(!aborted) read(abort, function (err) {

[Survived] PrecomputedMutator
throughs/async-map.js:28:22
-             if(end) cb(end)
+             if(end) cb(end + 1)

[Survived] PrecomputedMutator
throughs/async-map.js:29:31
-             else if(aborted) cb(aborted)
+             else if(aborted) cb(1)

[Survived] PrecomputedMutator
throughs/async-map.js:34:18
-                 if(aborted) {
+                 if(aborted + Math.random()) {

[Survived] PrecomputedMutator
throughs/async-map.js:36:36
-                   abortCb && abortCb(aborted)
+                   abortCb && abortCb({})

[Survived] PrecomputedMutator
throughs/async-map.js:38:23
-                 else if(err) next (err, cb)
+                 else if(err && 'error') next (err, cb)

[Survived] PrecomputedMutator
throughs/async-map.js:39:23
-                 else cb(null, data)
+                 else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/filter-not.js:8:17
-     return filter(function (data) { return !test(data) })
+     return filter(function (data) {
+     return !test(data) && data;
+   })

[Survived] PrecomputedMutator
throughs/filter-not.js:8:48
-     return filter(function (data) { return !test(data) })
+     return filter(function (data) { return !test(data + 1) })

[Survived] PrecomputedMutator
throughs/filter.js:15:23
-             if(!end && !test(data))
+             if(!end && !test || data(data))

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end - 1, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end + 1, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : Loop = true(end, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:46
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(null, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:46
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(undefined, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:46
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(Number.NaN, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, () => cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, null)

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, undefined)

[Survived] PrecomputedMutator
throughs/flatten.js:13:16
-             read(err || abort, cb)
+             read(err && abort, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:14:19
-           }) : read(abort, cb)
+           }) : read(true, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:22:17
-               if (err === true) nextStream()
+               if (err == 1) nextStream()

[Survived] PrecomputedMutator
throughs/flatten.js:28:19
-             else cb(null, data)
+             else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/flatten.js:28:19
-             else cb(null, data)
+             else cb(NaN, data)

[Survived] PrecomputedMutator
throughs/flatten.js:28:19
-             else cb(null, data)
+             else cb('', data)

[Survived] PrecomputedMutator
throughs/flatten.js:36:14
-             if(stream && 'object' === typeof stream)
+             if(stream && 'object' === typeof stream && stream.hasOwnProperty('length'))

[Survived] PrecomputedMutator
throughs/flatten.js:41:11
-             nextChunk()
+             nextStream = nextChunk()

[Survived] PrecomputedMutator
throughs/map.js:7:6
-     if(!mapper) return id
+     if(mapper === null) return id

[Survived] PrecomputedMutator
throughs/map.js:7:6
-     if(!mapper) return id
+     if(mapper == false) return id

[Survived] PrecomputedMutator
throughs/non-unique.js:7:10
-     return unique(field, true)
+     return unique(field, !field)

[Survived] PrecomputedMutator
throughs/take.js:19:26
-           last = false; cb(err || true)
+           last = false; cb(err && true)

[Survived] PrecomputedMutator
throughs/take.js:19:26
-           last = false; cb(err || true)
+           last = false; cb(!err || true)

[Survived] PrecomputedMutator
throughs/take.js:24:48
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : ended(ended)

[Survived] PrecomputedMutator
throughs/take.js:24:48
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : false(ended)

[Survived] PrecomputedMutator
throughs/take.js:24:51
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : cb(!ended)

[Survived] PrecomputedMutator
throughs/take.js:24:51
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : cb(false)

[Survived] PrecomputedMutator
throughs/take.js:24:51
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : cb(null)

[Survived] PrecomputedMutator
throughs/take.js:25:33
-         else if(ended = end) read(ended, cb)
+         else if(ended = end) read(ended || false, cb)

[Survived] PrecomputedMutator
throughs/take.js:28:14
-             if(ended = ended || end) {
+             if(ended = end) {

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(!ended)

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(ended || true)

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(ended && false)

[Survived] PrecomputedMutator
throughs/take.js:34:23
-               last ? cb(null, data) : terminate(cb)
+               last ? cb(undefined, data) : terminate(cb)

[Survived] PrecomputedMutator
throughs/take.js:34:23
-               last ? cb(null, data) : terminate(cb)
+               last ? cb(0, data) : terminate(cb)

[Survived] PrecomputedMutator
throughs/take.js:37:13
-               cb(null, data)
+               cb(undefined, data)

[Survived] PrecomputedMutator
throughs/take.js:37:13
-               cb(null, data)
+               ended ? null : cb(null, data)

[Survived] PrecomputedMutator
throughs/take.js:37:16
-               cb(null, data)
+               cb(undefined, data)

[Survived] PrecomputedMutator
throughs/take.js:37:16
-               cb(null, data)
+               cb("", data)

[Survived] PrecomputedMutator
throughs/through.js:8:8
-       if(a || !onEnd) return
+       if(a != !onEnd) return

[Survived] PrecomputedMutator
throughs/through.js:8:8
-       if(a || !onEnd) return
+       if(a | !onEnd) return

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(abort === false ? null : abort)

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(abort === true && onEnd !== null ? null : abort)

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(abort === true && onEnd.length === 0 ? null : abort)

[Survived] PrecomputedMutator
throughs/through.js:15:20
-         if(end) once(end)
+         if(end) once(false)

[Survived] PrecomputedMutator
throughs/through.js:15:20
-         if(end) once(end)
+         if(end) once(null)

[Survived] PrecomputedMutator
throughs/through.js:15:20
-         if(end) once(end)
+         if(end) once(void 0)

[Survived] PrecomputedMutator
throughs/through.js:17:24
-           if(!end) op && op(data)
+           if(!end) op && op || null(data)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op(undefined)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op(null)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op("hello")

[Survived] PrecomputedMutator
throughs/through.js:18:19
-           else once(end)
+           else once(end + 1)

[Survived] PrecomputedMutator
throughs/through.js:18:19
-           else once(end)
+           else once(!end)

[Survived] PrecomputedMutator
throughs/through.js:18:19
-           else once(end)
+           else once(end = true)

[Survived] PrecomputedMutator
throughs/unique.js:9:16
-     field = prop(field) || id
+     field = prop(field + 1) || id

[Survived] PrecomputedMutator
throughs/unique.js:9:16
-     field = prop(field) || id
+     field = prop(field - 1) || id

[Survived] PrecomputedMutator
throughs/unique.js:12:21
-       var key = field(data)
+       var key = field(field.apply(this, [data]))

[Survived] PrecomputedMutator
util/abort-cb.js:2:3
-     cb(abort)
+     abort && cb(abort)

[Survived] PrecomputedMutator
util/abort-cb.js:3:14
-     onAbort && onAbort(abort === true ? null: abort)
+     onAbort && onAbort ||= null(abort === true ? null: abort)

[Survived] PrecomputedMutator
util/prop.js:6:33
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.match(data); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:42
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.exec(null); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:42
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.exec(undefined); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:42
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.exec(new Object()); return v && v[0] }

[Survived] PrecomputedMutator
index.js:11:14
-   for(var k in sources)
+   for(var k in sources === null ? sinks : sources)

[Survived] PrecomputedMutator
index.js:11:14
-   for(var k in sources)
+   for(var k in sources.length === 0 ? sinks : sources)

[Survived] PrecomputedMutator
index.js:11:14
-   for(var k in sources)
+   for(var k in sources.keys === 0 ? sinks : sources)

[Survived] PrecomputedMutator
pull.js:5:7
-     if (typeof a === 'function' && a.length === 1) {
+     if (a.length === 1) {

[Survived] PrecomputedMutator
pull.js:5:7
-     if (typeof a === 'function' && a.length === 1) {
+     if (a !== null && a.length === 1) {

[Survived] PrecomputedMutator
pull.js:5:7
-     if (typeof a === 'function' && a.length === 1) {
+     if (a && a.length === 1) {

[Survived] PrecomputedMutator
pull.js:7:20
-       for(var i = 0; i < length; i++)
+       for(var i = 0; i <= length - 1; i++)

[Survived] PrecomputedMutator
pull.js:10:11
-         if (args == null) {
+         if (args.length === 0) {

[Survived] PrecomputedMutator
pull.js:10:11
-         if (args == null) {
+         if (args !== null && args.length === 0) {

[Survived] PrecomputedMutator
pull.js:10:11
-         if (args == null) {
+         if (typeof args !== 'undefined' && args.length === 0) {

[Survived] PrecomputedMutator
pull.js:20:15
-         switch (length) {
+         switch (99) {

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[1])

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[2])

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[i])

[Survived] PrecomputedMutator
pull.js:21:27
-         case 1: return pull(read, ref[0])
+         case 1: return pull(s, ref[0])

[Survived] PrecomputedMutator
pull.js:21:27
-         case 1: return pull(read, ref[0])
+         case 1: return pull(ref[i], ref[0])

[Survived] PrecomputedMutator
pull.js:21:27
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read + 1, ref[0])

[Survived] PrecomputedMutator
pull.js:21:33
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[1])

[Survived] PrecomputedMutator
pull.js:21:33
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, args[0])

[Survived] PrecomputedMutator
pull.js:21:33
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, null)

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read => $_, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read => null, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read => !read, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:33
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[1], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:33
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0] + 'something', ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[2], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[0] + 1, ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[length - 1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[3], ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref.length, ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], null, ref[3])

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[4])

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[i])

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref.foobar)

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift(null)

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift("read")

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift(() => read)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply(undefined, ref)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply(null, null)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply([], ref)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.call(null, ref)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.bind(null, ref)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.spread(null, ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply(undefined, ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply(args, ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply(pull.arguments, ref)

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref.splice(0, 1))

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref[0] = 1)

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref.unshift(1))

[Survived] PrecomputedMutator
pull.js:34:7
-     if (read && typeof read.source === 'function') {
+     if (read.source && typeof read.source === 'function') {

[Survived] PrecomputedMutator
pull.js:38:19
-     for (var i = 1; i < length; i++) {
+     for (var i = 1; i <= length; i++) {

[Survived] PrecomputedMutator
pull.js:38:19
-     for (var i = 1; i < length; i++) {
+     for (var i = 1; i < length * 2; i++) {

[Survived] PrecomputedMutator
pull.js:40:9
-       if (typeof s === 'function') {
+       if (s instanceof Function) {

[Survived] PrecomputedMutator
pull.js:40:9
-       if (typeof s === 'function') {
+       if (s.constructor == Function) {

[Survived] PrecomputedMutator
pull.js:42:16
-       } else if (s && typeof s === 'object') {
+       } else if (s !== 'object') {

[Survived] PrecomputedMutator
pull.js:42:16
-       } else if (s && typeof s === 'object') {
+       } else if (s !== null) {

[Survived] PrecomputedMutator
pull.js:42:16
-       } else if (s && typeof s === 'object') {
+       } else if (s && s.toString() === '[object Object]') {

[Survived] PrecomputedMutator
pull.js:43:7
-         s.sink(read)
+         -s.sink(read)

[Survived] PrecomputedMutator
pull.js:43:7
-         s.sink(read)
+         s.sink = null(read)

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink(read === null)

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink(read.length === 0)

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink(read !== null && read !== undefined)

Ran 0.92 tests per mutant on average.
----------------|---------|----------|-----------|------------|----------|----------|
File            | % score | # killed | # timeout | # survived | # no cov | # errors |
----------------|---------|----------|-----------|------------|----------|----------|
All files       |   68.35 |      456 |        58 |        238 |        0 |        0 |
 sinks          |   70.39 |      105 |         2 |         45 |        0 |        0 |
  collect.js    |  100.00 |        3 |         0 |          0 |        0 |        0 |
  drain.js      |   63.79 |       35 |         2 |         21 |        0 |        0 |
  find.js       |   89.47 |       34 |         0 |          4 |        0 |        0 |
  log.js        |    0.00 |        0 |         0 |          6 |        0 |        0 |
  on-end.js     |   33.33 |        3 |         0 |          6 |        0 |        0 |
  reduce.js     |   78.95 |       30 |         0 |          8 |        0 |        0 |
 sources        |   61.03 |       63 |        20 |         53 |        0 |        0 |
  count.js      |   72.73 |       16 |         0 |          6 |        0 |        0 |
  empty.js      |  100.00 |        1 |         3 |          0 |        0 |        0 |
  error.js      |  100.00 |        6 |         0 |          0 |        0 |        0 |
  infinite.js   |   44.44 |        6 |         2 |         10 |        0 |        0 |
  keys.js       |   83.33 |        5 |         0 |          1 |        0 |        0 |
  once.js       |   48.15 |        9 |         4 |         14 |        0 |        0 |
  values.js     |   58.49 |       20 |        11 |         22 |        0 |        0 |
 throughs       |   77.29 |      216 |        29 |         72 |        0 |        0 |
  async-map.js  |   82.67 |       54 |         8 |         13 |        0 |        0 |
  filter-not.js |   81.82 |        8 |         1 |          2 |        0 |        0 |
  filter.js     |   68.75 |       17 |         5 |         10 |        0 |        0 |
  flatten.js    |   86.67 |       43 |         9 |          8 |        0 |        0 |
  map.js        |   90.48 |       18 |         1 |          2 |        0 |        0 |
  non-unique.js |   88.89 |        8 |         0 |          1 |        0 |        0 |
  take.js       |   70.97 |       42 |         2 |         18 |        0 |        0 |
  through.js    |   54.55 |       15 |         3 |         15 |        0 |        0 |
  unique.js     |   78.57 |       11 |         0 |          3 |        0 |        0 |
 util           |   73.91 |       14 |         3 |          6 |        0 |        0 |
  abort-cb.js   |   80.00 |        8 |         0 |          2 |        0 |        0 |
  prop.js       |    0.00 |        0 |         0 |          4 |        0 |        0 |
  tester.js     |  100.00 |        6 |         3 |          0 |        0 |        0 |
 index.js       |   82.35 |       14 |         0 |          3 |        0 |        0 |
 pull.js        |   44.86 |       44 |         4 |         59 |        0 |        0 |
----------------|---------|----------|-----------|------------|----------|----------|
[32m09:54:15 (2730) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/pull-stream/reports/mutation/mutation.html
[32m09:54:15 (2730) INFO MutationTestExecutor[39m Done in 22 minutes 32 seconds.

real	22m34.273s
user	8m11.138s
sys	1m39.082s
