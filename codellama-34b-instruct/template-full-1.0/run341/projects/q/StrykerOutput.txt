*** using precomputed mutations ***
[32m22:31:48 (3110) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m22:31:48 (3110) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m22:31:48 (3110) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m22:31:48 (3110) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m22:31:48 (3110) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m22:31:49 (3110) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1899 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof exports === "undefined"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof Q === "undefined"
Mutant 2 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", "undefined")
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", {
  promise: "undefined"
})
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", () => {
  throw new Error("Test error");
})
Mutant 5 in q.js: bootstrap replaced with null
Mutant 6 in q.js: "promise" replaced with "bug"
Mutant 7 in q.js: "promise" replaced with null
Mutant 8 in q.js: "promise" replaced with "error"
Mutant 9 in q.js: definition replaced with definition()
Mutant 10 in q.js: definition replaced with function () {}
Mutant 11 in q.js: definition replaced with function (x) {
  return x * x;
}
Mutant 12 in q.js: definition replaced with definition - 1
Mutant 13 in q.js: definition replaced with () => {}
Mutant 14 in q.js: definition replaced with null
Mutant 15 in q.js: definition replaced with NaN
Mutant 16 in q.js: typeof ses !== "undefined" replaced with ses === undefined
Mutant 17 in q.js: typeof ses !== "undefined" replaced with ses !== undefined
Mutant 18 in q.js: ses.ok replaced with !ses.ok
Mutant 19 in q.js: ses.ok replaced with ses.notOk
Mutant 20 in q.js: ses.ok replaced with isNodeJS = !ses.ok
Mutant 21 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self === "undefined"
Mutant 22 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window === "undefined" && typeof self !== "undefined"
Mutant 23 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined"
Mutant 24 in q.js: captureLine replaced with 42
Mutant 25 in q.js: captureLine replaced with "undefined"
Mutant 26 in q.js: captureLine replaced with 1984
Mutant 27 in q.js: head.next replaced with tail
Mutant 28 in q.js: head.next replaced with undefined
Mutant 29 in q.js: head.next replaced with null
Mutant 30 in q.js: domain replaced with !domain
Mutant 31 in q.js: domain replaced with domain.foo
Mutant 32 in q.js: domain replaced with undefined
Mutant 33 in q.js: domain.enter replaced with 0
Mutant 34 in q.js: runSingle(task, domain) replaced with runSingle(task, window)
Mutant 35 in q.js: runSingle(task, domain) replaced with runSingle(task, null)
Mutant 36 in q.js: runSingle(task, domain) replaced with runSingle(task, undefined)
Mutant 37 in q.js: task replaced with null
Mutant 38 in q.js: task replaced with "null"
Mutant 39 in q.js: task replaced with function () {
  throw new Error("test error");
}
Mutant 40 in q.js: domain replaced with domain[0]
Mutant 41 in q.js: domain replaced with domain.name
Mutant 42 in q.js: domain replaced with domain.property
Mutant 43 in q.js: laterQueue.length replaced with laterQueue.length > 0
Mutant 44 in q.js: laterQueue.length replaced with laterQueue.length === 0
Mutant 45 in q.js: laterQueue.length replaced with laterQueue.splice(0, 1).length
Mutant 46 in q.js: laterQueue.pop replaced with laterQueue.length = 0
Mutant 47 in q.js: runSingle replaced with runDifferent
Mutant 48 in q.js: task replaced with undefined
Mutant 49 in q.js: task replaced with null
Mutant 50 in q.js: task replaced with 0
Mutant 51 in q.js: isNodeJS replaced with isNodeJS === false
Mutant 52 in q.js: isNodeJS replaced with isNodeJS + 1
Mutant 53 in q.js: domain replaced with 0 + domain
Mutant 54 in q.js: domain replaced with domain.somethingOtherThanExit
Mutant 55 in q.js: domain replaced with (domain - 1).exit
Mutant 56 in q.js: setTimeout(flush, 0) replaced with setTimeout(requestPortTick())
Mutant 57 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush(1))
Mutant 58 in q.js: flush replaced with 42
Mutant 59 in q.js: flush replaced with "foo"
Mutant 60 in q.js: flush replaced with null
Mutant 61 in q.js: 0 replaced with 1
Mutant 62 in q.js: 0 replaced with -1
Mutant 63 in q.js: 0 replaced with null
Mutant 64 in q.js: domain replaced with !domain
Mutant 65 in q.js: domain replaced with domain && false
Mutant 66 in q.js: domain replaced with domain || true
Mutant 67 in q.js: domain replaced with !domain
Mutant 68 in q.js: domain replaced with domain + 1
Mutant 69 in q.js: domain replaced with domain && false
Mutant 70 in q.js: domain.exit replaced with 1 + 1
Mutant 71 in q.js: domain.exit replaced with "hello world"
Mutant 72 in q.js: domain.exit replaced with undefined
Mutant 73 in q.js: !flushing replaced with flushing
Mutant 74 in q.js: !flushing replaced with !flushing || true
Mutant 75 in q.js: !flushing replaced with flushing != true
Mutant 76 in q.js: requestTick replaced with requestSleep
Mutant 77 in q.js: requestTick replaced with requestWake
Mutant 78 in q.js: requestTick replaced with requestSnooze
Mutant 79 in q.js: flush replaced with flush()
Mutant 80 in q.js: flush replaced with requestTick()
Mutant 81 in q.js: typeof window !== "undefined" replaced with typeof window === "undefined"
Mutant 82 in q.js: typeof window !== "undefined" replaced with typeof window !== "object"
Mutant 83 in q.js: typeof window !== "undefined" replaced with typeof window !== "function"
Mutant 84 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(location)
Mutant 85 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(top)
Mutant 86 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(self)
Mutant 87 in q.js: window replaced with undefined
Mutant 88 in q.js: window replaced with this
Mutant 89 in q.js: window replaced with 0
Mutant 90 in q.js: flush replaced with 3
Mutant 91 in q.js: flush replaced with function () {
  throw "error";
}
Mutant 92 in q.js: flush replaced with "example"
Mutant 93 in q.js: flush replaced with 1
Mutant 94 in q.js: flush replaced with "flush"
Mutant 95 in q.js: flush replaced with function () {}
Mutant 96 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 97 in q.js: channel.port2.postMessage replaced with channel.port3.postMessage
Mutant 98 in q.js: channel.port2.postMessage replaced with channel.postMessage
Mutant 99 in q.js: 0 replaced with 1
Mutant 100 in q.js: 0 replaced with null
Mutant 101 in q.js: 0 replaced with {}
Mutant 102 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1000)
Mutant 103 in q.js: setTimeout(flush, 0) replaced with setTimeout(undefined, 0)
Mutant 104 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "flush")
Mutant 105 in q.js: setTimeout replaced with setInterval
Mutant 106 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 107 in q.js: flush replaced with flush(0)
Mutant 108 in q.js: flush replaced with flush(false)
Mutant 109 in q.js: flush replaced with flush(null)
Mutant 110 in q.js: 0 replaced with 1
Mutant 111 in q.js: 0 replaced with -0
Mutant 112 in q.js: 0 replaced with Infinity
Mutant 113 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 114 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 115 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 5 - 3)
Mutant 116 in q.js: setTimeout replaced with setInterval
Mutant 117 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 118 in q.js: flush replaced with flush()
Mutant 119 in q.js: 0 replaced with 1
Mutant 120 in q.js: 0 replaced with 1000
Mutant 121 in q.js: 0 replaced with -1
Mutant 122 in q.js: task replaced with undefined
Mutant 123 in q.js: task replaced with null
Mutant 124 in q.js: task replaced with "<PLACEHOLDER>"
Mutant 125 in q.js: !flushing replaced with flushing
Mutant 126 in q.js: !flushing replaced with !this.flushing
Mutant 127 in q.js: !flushing replaced with this.flushing !== flushing
Mutant 128 in q.js: requestTick replaced with undefined
Mutant 129 in q.js: call.apply(f, arguments) replaced with call.apply(f, {})
Mutant 130 in q.js: call.apply(f, arguments) replaced with call.apply(f(), arguments)
Mutant 131 in q.js: call.apply(f, arguments) replaced with call.apply(f(arguments[0]))
Mutant 132 in q.js: call.apply replaced with call.call
Mutant 133 in q.js: call.apply replaced with call.bind
Mutant 134 in q.js: call.apply replaced with call.apply !== call.call
Mutant 135 in q.js: f replaced with f()
Mutant 136 in q.js: f replaced with f(0)
Mutant 137 in q.js: f replaced with f(1)
Mutant 138 in q.js: arguments replaced with fragment.splice(0, 1)
Mutant 139 in q.js: arguments replaced with fragment.slice(0, 1)
Mutant 140 in q.js: arguments replaced with fragment.unshift(0)
Mutant 141 in q.js: uncurryThis replaced with null
Mutant 142 in q.js: uncurryThis replaced with undefined
Mutant 143 in q.js: Array.prototype.slice replaced with String.prototype.slice
Mutant 144 in q.js: Array.prototype.slice replaced with Array.prototype.forEach
Mutant 145 in q.js: Array.prototype.slice replaced with Array.prototype.includes
Mutant 146 in q.js: arguments.length === 1 replaced with arguments.length == 2
Mutant 147 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 148 in q.js: arguments.length === 1 replaced with arguments.length < 1
Mutant 149 in q.js: index in this replaced with index > this
Mutant 150 in q.js: index in this replaced with index <= this
Mutant 151 in q.js: index in this replaced with this[index]
Mutant 152 in q.js: ++index >= length replaced with index--
Mutant 153 in q.js: ++index >= length replaced with length--
Mutant 154 in q.js: index < length replaced with index <= length
Mutant 155 in q.js: index < length replaced with index + 1 < length
Mutant 156 in q.js: index < length replaced with index === 0
Mutant 157 in q.js: index++ replaced with index += 1
Mutant 158 in q.js: index++ replaced with index + 2
Mutant 159 in q.js: index in this replaced with !foo[bar]
Mutant 160 in q.js: index in this replaced with bar.length < 0
Mutant 161 in q.js: index in this replaced with {} + bar
Mutant 162 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index - 1)
Mutant 163 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index] + 1, index)
Mutant 164 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index] * 2, index)
Mutant 165 in q.js: basis replaced with basis + 1
Mutant 166 in q.js: basis replaced with null
Mutant 167 in q.js: this[index] replaced with index
Mutant 168 in q.js: this[index] replaced with this[index + 1]
Mutant 169 in q.js: index replaced with index + 1
Mutant 170 in q.js: index replaced with 0
Mutant 171 in q.js: index replaced with -1
Mutant 172 in q.js: i < this.length replaced with i <= this.length
Mutant 173 in q.js: i < this.length replaced with this.length - i > 0
Mutant 174 in q.js: i++ replaced with i += 2
Mutant 175 in q.js: i++ replaced with i = i + 2
Mutant 176 in q.js: this[i] === value replaced with this[i] !== value
Mutant 177 in q.js: this[i] === value replaced with this[i] + value
Mutant 178 in q.js: this[i] === value replaced with typeof this[i] === value
Mutant 179 in q.js: collect.push replaced with collect.bundles
Mutant 180 in q.js: collect.push replaced with collect.contains
Mutant 181 in q.js: collect.push replaced with collect + 1
Mutant 182 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, basis, index, self)
Mutant 183 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index)
Mutant 184 in q.js: callback.call(thisp, value, index, self) replaced with callback.apply(thisp, [value, index, self])
Mutant 185 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp[callback].call(value, index))
Mutant 186 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp[callback](value, index))
Mutant 187 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp[callback](thisp[index], value))
Mutant 188 in q.js: callback.call replaced with cb
Mutant 189 in q.js: thisp replaced with undefined
Mutant 190 in q.js: thisp replaced with true
Mutant 191 in q.js: thisp replaced with 0
Mutant 192 in q.js: value replaced with this[index - 1]
Mutant 193 in q.js: value replaced with this[index - 2]
Mutant 194 in q.js: value replaced with this[index] = value
Mutant 195 in q.js: index replaced with 0
Mutant 196 in q.js: index replaced with this.length
Mutant 197 in q.js: index replaced with null
Mutant 198 in q.js: self replaced with Math.random()
Mutant 199 in q.js: self replaced with null
Mutant 200 in q.js: self replaced with undefined
Mutant 201 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var i in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 202 in q.js: object replaced with "myObject"
Mutant 203 in q.js: object replaced with null
Mutant 204 in q.js: object replaced with undefined
Mutant 205 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, -1)
Mutant 206 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, "propName")
Mutant 207 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, object)
Mutant 208 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object[key + 1])
Mutant 209 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(key + 1 in object)
Mutant 210 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object[key] = undefined)
Mutant 211 in q.js: object replaced with null
Mutant 212 in q.js: object replaced with undefined
Mutant 213 in q.js: object replaced with "sdfhgsg"
Mutant 214 in q.js: key replaced with value
Mutant 215 in q.js: key replaced with Object
Mutant 216 in q.js: key replaced with null
Mutant 217 in q.js: key replaced with i + 1
Mutant 218 in q.js: Object replaced with "null"
Mutant 219 in q.js: Object replaced with NaN
Mutant 220 in q.js: Object replaced with undefined
Mutant 221 in q.js: value replaced with undefined
Mutant 222 in q.js: value replaced with null
Mutant 223 in q.js: value replaced with NaN
Mutant 224 in q.js: object_toString replaced with object_hasOwnProperty
Mutant 225 in q.js: object_toString replaced with Object.prototype.toString
Mutant 226 in q.js: object_toString replaced with object_create
Mutant 227 in q.js: exception replaced with true
Mutant 228 in q.js: exception replaced with false
Mutant 229 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "definitelynotundefined"
Mutant 230 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "string"
Mutant 231 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue === "function"
Mutant 232 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && !promise.stack && typeof error === "object" && error !== null && error.stack
Mutant 233 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && typeof error === "object" && error !== null && error.stack
Mutant 234 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.error; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 235 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise + 1; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 236 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise || true; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 237 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 238 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; null !== p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 239 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p !== null; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 240 in q.js: !!p replaced with !!q
Mutant 241 in q.js: !!p replaced with p && q
Mutant 242 in q.js: !!p replaced with 1
Mutant 243 in q.js: p = p.source replaced with p = p.source + 1
Mutant 244 in q.js: p = p.source replaced with p = 0
Mutant 245 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with !p.stack && error.__minimumStackCounter__ === p.stackCounter
Mutant 246 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack === true && error.__minimumStackCounter__ === p.stackCounter
Mutant 247 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with typeof p.stack === "undefined" && error.__minimumStackCounter__ === p.stackCounter
Mutant 248 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 249 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: null,
  configurable: true
})
Mutant 250 in q.js: error replaced with 42
Mutant 251 in q.js: error replaced with "ERROR"
Mutant 252 in q.js: error replaced with function () {
  console.log("Error");
}
Mutant 253 in q.js: "__minimumStackCounter__" replaced with "__maximumStackCounter__"
Mutant 254 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__"
Mutant 255 in q.js: "__minimumStackCounter__" replaced with "__counter__"
Mutant 256 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 257 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 258 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 259 in q.js: p.stack replaced with p.stackCounter
Mutant 260 in q.js: p.stack replaced with p.stack.valueOf()
Mutant 261 in q.js: p.stack replaced with p.stack.split(':')[1]
Mutant 262 in q.js: error.stack replaced with error.message
Mutant 263 in q.js: error.stack replaced with error.lineNumber
Mutant 264 in q.js: error.stack replaced with error.columnNumber
Mutant 265 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\t"
Mutant 266 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with " "
Mutant 267 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\v"
Mutant 268 in q.js: filterStackString replaced with undefined + concatedStacks
Mutant 269 in q.js: filterStackString replaced with null + concatedStacks
Mutant 270 in q.js: concatedStacks replaced with concatedStacks.length
Mutant 271 in q.js: concatedStacks replaced with concatedStacks.join(", ")
Mutant 272 in q.js: concatedStacks replaced with concatedStacks.reverse()
Mutant 273 in q.js: object_defineProperty replaced with property_define
Mutant 274 in q.js: object_defineProperty replaced with object_define
Mutant 275 in q.js: object_defineProperty replaced with this.defineProperty
Mutant 276 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: "modified stack",
  configurable: true
}
Mutant 277 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack.replace("original", "modified"),
  configurable: true
}
Mutant 278 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: null,
  configurable: true
}
Mutant 279 in q.js: stackString.split replaced with stackString.substr
Mutant 280 in q.js: stackString.split replaced with stackString.replace
Mutant 281 in q.js: stackString.split replaced with stackString.concat
Mutant 282 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 283 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var j = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 284 in q.js: i < lines.length replaced with i <= lines.length
Mutant 285 in q.js: i < lines.length replaced with i > lines.length
Mutant 286 in q.js: i < lines.length replaced with lines.length - i
Mutant 287 in q.js: ++i replaced with i + 1
Mutant 288 in q.js: ++i replaced with i += 1
Mutant 289 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with line.indexOf("From previous event:") === -1 && !isNodeFrame(line)
Mutant 290 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with line.charAt(0) !== "A" && !isNodeFrame(line)
Mutant 291 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with line.length > 50 && !isNodeFrame(line)
Mutant 292 in q.js: isInternalFrame replaced with isExternalFrame
Mutant 293 in q.js: isInternalFrame replaced with !isInternalFrame
Mutant 294 in q.js: line replaced with line - 1
Mutant 295 in q.js: line replaced with line + 1
Mutant 296 in q.js: line replaced with line * 2
Mutant 297 in q.js: line replaced with "QReturnValue(value)"
Mutant 298 in q.js: line replaced with "obj[prop] = descriptor"
Mutant 299 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 300 in q.js: stackLine.indexOf replaced with stackLine.lastIndexOf
Mutant 301 in q.js: stackLine.indexOf replaced with stackLine.substr
Mutant 302 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 303 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 304 in q.js: stackLine.indexOf replaced with stackLine.lastIndexOf
Mutant 305 in q.js: stackLine replaced with stackLine.split("@")[1]
Mutant 306 in q.js: stackLine replaced with stackLine.replace(":", "-")
Mutant 307 in q.js: stackLine replaced with stackLine[0] + stackLine[1]
Mutant 308 in q.js: attempt1 replaced with attempt1[1], Number(attempt1[2]) + 1
Mutant 309 in q.js: attempt1 replaced with attempt1[1], Number(attempt1[2]) - 1
Mutant 310 in q.js: attempt1 replaced with attempt1[1], Number(attempt1[2]) * 2
Mutant 311 in q.js: Number replaced with 'from previous event:'
Mutant 312 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 313 in q.js: attempt1[2] replaced with Number(attempt1[2]) + 1
Mutant 314 in q.js: attempt1[2] replaced with String(attempt1[2])
Mutant 315 in q.js: Number replaced with String
Mutant 316 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 317 in q.js: attempt2[2] replaced with undefined
Mutant 318 in q.js: attempt2[2] replaced with null
Mutant 319 in q.js: stackLine replaced with null
Mutant 320 in q.js: stackLine replaced with undefined
Mutant 321 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 322 in q.js: attempt3[2] replaced with attempt3[0]
Mutant 323 in q.js: getFileNameAndLineNumber replaced with fileNameAndLineNumber[1]
Mutant 324 in q.js: getFileNameAndLineNumber replaced with fileNameAndLineNumber.length
Mutant 325 in q.js: getFileNameAndLineNumber replaced with fileNameAndLineNumber[0] + fileNameAndLineNumber[1]
Mutant 326 in q.js: stackLine replaced with stackLine[1]
Mutant 327 in q.js: stackLine replaced with stackLine.length
Mutant 328 in q.js: stackLine replaced with stackLine.split("\n")
Mutant 329 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber
Mutant 330 in q.js: !fileNameAndLineNumber replaced with !Object.keys(fileNameAndLineNumber).length
Mutant 331 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === undefined
Mutant 332 in q.js: !hasStacks replaced with 1
Mutant 333 in q.js: !hasStacks replaced with 0
Mutant 334 in q.js: !hasStacks replaced with `undefined`
Mutant 335 in q.js: "\n" replaced with "\n\n"
Mutant 336 in q.js: lines[0].indexOf replaced with lines[0].length
Mutant 337 in q.js: "@" replaced with "#"
Mutant 338 in q.js: "@" replaced with "!"
Mutant 339 in q.js: "@" replaced with "?"
Mutant 340 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 341 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber > 0
Mutant 342 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber !== "undefined"
Mutant 343 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with undefined
Mutant 344 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console !== undefined
Mutant 345 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console === "object" && typeof console.warn === "function"
Mutant 346 in q.js: callback.apply(callback, arguments) replaced with callback.apply(arguments)
Mutant 347 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback.bind(null, arguments))
Mutant 348 in q.js: callback.apply(callback, arguments) replaced with callback.apply(function () {
  return callback.apply(null, arguments);
})
Mutant 349 in q.js: callback replaced with LOGGER.info("Hello World!")
Mutant 350 in q.js: callback replaced with Object.keys({
  "key1": "value1"
})[0]
Mutant 351 in q.js: callback replaced with function () {
  return "Hello World!";
}
Mutant 352 in q.js: arguments replaced with Array.apply(0, Array(1000))
Mutant 353 in q.js: arguments replaced with function () {
  throw 'Exception in Deeper Promises';
}
Mutant 354 in q.js: arguments replaced with undefined
Mutant 355 in q.js: value instanceof Promise replaced with value !== value
Mutant 356 in q.js: value instanceof Promise replaced with value == value
Mutant 357 in q.js: value instanceof Promise replaced with value === value
Mutant 358 in q.js: isPromiseAlike(value) replaced with false
Mutant 359 in q.js: isPromiseAlike(value) replaced with value.isPromise
Mutant 360 in q.js: isPromiseAlike(value) replaced with value instanceof Promise
Mutant 361 in q.js: isPromiseAlike replaced with typeof value === "object"
Mutant 362 in q.js: value replaced with null
Mutant 363 in q.js: value replaced with undefined
Mutant 364 in q.js: value replaced with NaN
Mutant 365 in q.js: value replaced with null
Mutant 366 in q.js: value replaced with undefined
Mutant 367 in q.js: fulfill replaced with reject
Mutant 368 in q.js: value replaced with undefined
Mutant 369 in q.js: value replaced with null
Mutant 370 in q.js: value replaced with new Error()
Mutant 371 in q.js: object_create replaced with null
Mutant 372 in q.js: object_create replaced with undefined
Mutant 373 in q.js: defer.prototype replaced with defer.promise
Mutant 374 in q.js: defer.prototype replaced with defer.resolve
Mutant 375 in q.js: defer.prototype replaced with defer.reject
Mutant 376 in q.js: object_create replaced with this.hasStacks = Q.longStackSupport && hasStacks
Mutant 377 in q.js: object_create replaced with this.hasStacks = !Q.longStackSupport || !hasStacks
Mutant 378 in q.js: object_create replaced with this.hasStacks = Q.longStackSupport && typeof hasStacks !== 'undefined'
Mutant 379 in q.js: Promise.prototype replaced with Object.prototype
Mutant 380 in q.js: Promise.prototype replaced with null
Mutant 381 in q.js: Promise.prototype replaced with 123
Mutant 382 in q.js: array_slice replaced with promise.reject
Mutant 383 in q.js: array_slice replaced with promise.resolve
Mutant 384 in q.js: array_slice replaced with deferred.promise
Mutant 385 in q.js: arguments replaced with null
Mutant 386 in q.js: arguments replaced with 1
Mutant 387 in q.js: arguments replaced with 2
Mutant 388 in q.js: messages replaced with messages.length
Mutant 389 in q.js: messages replaced with !messages.length
Mutant 390 in q.js: messages replaced with messages.slice()
Mutant 391 in q.js: args replaced with null
Mutant 392 in q.js: args replaced with {}
Mutant 393 in q.js: args replaced with "hello"
Mutant 394 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 395 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[1]
Mutant 396 in q.js: op === "when" && operands[1] replaced with op !== "when" || operands[1]
Mutant 397 in q.js: operands[1] replaced with operands[2]
Mutant 398 in q.js: operands[1] replaced with operands[1] + 1
Mutant 399 in q.js: operands[1] replaced with operation[1]
Mutant 400 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(Promise.resolve(), args)
Mutant 401 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(obj, args)
Mutant 402 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(Promise.reject(), args)
Mutant 403 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.then.apply
Mutant 404 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.reject.apply
Mutant 405 in q.js: resolvedPromise replaced with null
Mutant 406 in q.js: resolvedPromise replaced with undefined
Mutant 407 in q.js: resolvedPromise replaced with promise
Mutant 408 in q.js: args replaced with new Error()
Mutant 409 in q.js: args replaced with "Hello, World!"
Mutant 410 in q.js: args replaced with undefined
Mutant 411 in q.js: messages replaced with messages[0]
Mutant 412 in q.js: messages replaced with messages.length
Mutant 413 in q.js: messages replaced with undefined
Mutant 414 in q.js: nearer replaced with promise.resolvedPromise
Mutant 415 in q.js: isPromise replaced with !isPromise
Mutant 416 in q.js: isPromise replaced with isPromiseAlike
Mutant 417 in q.js: nearerValue replaced with nearterValue
Mutant 418 in q.js: nearerValue replaced with deferredPromise
Mutant 419 in q.js: nearerValue replaced with promise
Mutant 420 in q.js: !resolvedPromise replaced with resolvedPromise === undefined
Mutant 421 in q.js: !resolvedPromise replaced with !resolvedPromise || resolvedPromise === null
Mutant 422 in q.js: !resolvedPromise replaced with resolvedPromise && resolvedPromise !== null
Mutant 423 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 424 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 425 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && hasStacks && Math.random() < 0.5
Mutant 426 in q.js: e.stack.substring replaced with e.stack
Mutant 427 in q.js: e.stack.substring replaced with e.stack + 1
Mutant 428 in q.js: e.stack.substring replaced with e.stack + e.stack
Mutant 429 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.length + 1
Mutant 430 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.split("\n").length
Mutant 431 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") - 1
Mutant 432 in q.js: e.stack.indexOf replaced with e.stack.replace
Mutant 433 in q.js: "\n" replaced with "\t"
Mutant 434 in q.js: "\n" replaced with " "
Mutant 435 in q.js: "\n" replaced with ""
Mutant 436 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport || hasStacks
Mutant 437 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || !hasStacks
Mutant 438 in q.js: Q.longStackSupport && hasStacks replaced with !(Q.longStackSupport && hasStacks)
Mutant 439 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(promise)
Mutant 440 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(reject)
Mutant 441 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(fulfill)
Mutant 442 in q.js: newPromise replaced with null
Mutant 443 in q.js: newPromise replaced with new Promise(() => {})
Mutant 444 in q.js: newPromise replaced with new Error('PLACEHOLDER')
Mutant 445 in q.js: message replaced with promise
Mutant 446 in q.js: message replaced with []
Mutant 447 in q.js: message replaced with null
Mutant 448 in q.js: resolvedPromise replaced with false
Mutant 449 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 450 in q.js: resolvedPromise replaced with 3
Mutant 451 in q.js: Q(value) replaced with Q.reject(value)
Mutant 452 in q.js: Q(value) replaced with become(reject(value))
Mutant 453 in q.js: Q(value) replaced with undefined
Mutant 454 in q.js: value replaced with null
Mutant 455 in q.js: value replaced with 42
Mutant 456 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 457 in q.js: resolvedPromise replaced with resolvedPromise == false
Mutant 458 in q.js: resolvedPromise replaced with resolvedPromise.contains(false)
Mutant 459 in q.js: become replaced with resolvedPromise.reject
Mutant 460 in q.js: become replaced with this.reject
Mutant 461 in q.js: fulfill(value) replaced with become(Q.reject(value))
Mutant 462 in q.js: fulfill(value) replaced with become(Q(reject(value)))
Mutant 463 in q.js: fulfill(value) replaced with become(Q(value).reflect())
Mutant 464 in q.js: value replaced with {
  value
}
Mutant 465 in q.js: value replaced with [value]
Mutant 466 in q.js: resolvedPromise replaced with false
Mutant 467 in q.js: resolvedPromise replaced with resolvedPromise === false
Mutant 468 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 469 in q.js: reason replaced with "custom reason"
Mutant 470 in q.js: reason replaced with null
Mutant 471 in q.js: reason replaced with reject("custom reason")
Mutant 472 in q.js: resolvedPromise replaced with progressListeners
Mutant 473 in q.js: resolvedPromise replaced with promise.then
Mutant 474 in q.js: resolvedPromise replaced with messages
Mutant 475 in q.js: progressListener replaced with progressListeners[0]
Mutant 476 in q.js: error replaced with error.message
Mutant 477 in q.js: error replaced with error.stack
Mutant 478 in q.js: error replaced with null
Mutant 479 in q.js: error replaced with null
Mutant 480 in q.js: error replaced with undefined
Mutant 481 in q.js: error replaced with new Error('some error')
Mutant 482 in q.js: arguments.length > 2 replaced with arguments[0].length > 2
Mutant 483 in q.js: arguments.length > 2 replaced with arguments[0] > 2
Mutant 484 in q.js: arguments.length > 2 replaced with arguments.length >= 2
Mutant 485 in q.js: self.resolve replaced with self.reject
Mutant 486 in q.js: self.resolve replaced with self.resolvedPromise
Mutant 487 in q.js: self.resolve replaced with self.notify
Mutant 488 in q.js: array_slice(arguments, 1) replaced with array_splice(arguments, 1)
Mutant 489 in q.js: array_slice(arguments, 1) replaced with array_push(arguments, 1)
Mutant 490 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(null, 2))
Mutant 491 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, -2))
Mutant 492 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1, 2))
Mutant 493 in q.js: array_slice replaced with array_reduce
Mutant 494 in q.js: array_slice replaced with array_map
Mutant 495 in q.js: array_slice replaced with array_filter
Mutant 496 in q.js: arguments replaced with undefined
Mutant 497 in q.js: arguments replaced with null
Mutant 498 in q.js: arguments replaced with "placeholder"
Mutant 499 in q.js: 1 replaced with 2
Mutant 500 in q.js: 1 replaced with x
Mutant 501 in q.js: self.resolve replaced with self.reject
Mutant 502 in q.js: self.resolve replaced with self.notify
Mutant 503 in q.js: value replaced with undefined
Mutant 504 in q.js: typeof resolver !== "function" replaced with resolver != "function"
Mutant 505 in q.js: typeof resolver !== "function" replaced with !resolver.isFunction()
Mutant 506 in q.js: typeof resolver !== "function" replaced with resolver() != "function"
Mutant 507 in q.js: defer replaced with defer.resolve
Mutant 508 in q.js: defer replaced with become
Mutant 509 in q.js: defer replaced with Q
Mutant 510 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.fulfill, deferred.fulfill, deferred.notify)
Mutant 511 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.reject, deferred.notify)
Mutant 512 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.notify, deferred.notify, deferred.notify)
Mutant 513 in q.js: deferred.resolve replaced with deferred.reject
Mutant 514 in q.js: deferred.resolve replaced with deferred.notify
Mutant 515 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 516 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 517 in q.js: deferred.reject replaced with deferred.resolve(new Error('rejected'))
Mutant 518 in q.js: deferred.reject replaced with deferred.throw
Mutant 519 in q.js: deferred.notify replaced with deferred.notify.bind(deferred)
Mutant 520 in q.js: deferred.reject replaced with deferred.resolve
Mutant 521 in q.js: deferred.reject replaced with deferred.notify
Mutant 522 in q.js: deferred.reject replaced with reject
Mutant 523 in q.js: reason replaced with null
Mutant 524 in q.js: reason replaced with reason + " WHY this is bad"
Mutant 525 in q.js: y replaced with x
Mutant 526 in q.js: y replaced with y + 1
Mutant 527 in q.js: y replaced with x - y
Mutant 528 in q.js: Q replaced with none
Mutant 529 in q.js: [this, that] replaced with [that, this]
Mutant 530 in q.js: [this, that] replaced with [this, this]
Mutant 531 in q.js: [this, that] replaced with [that, undefined]
Mutant 532 in q.js: x === y replaced with x !== y
Mutant 533 in q.js: x === y replaced with x + y === z
Mutant 534 in q.js: i < len replaced with i >= len
Mutant 535 in q.js: i < len replaced with i !== len
Mutant 536 in q.js: i < len replaced with i !== 0
Mutant 537 in q.js: i++ replaced with i--
Mutant 538 in q.js: i++ replaced with i += 2
Mutant 539 in q.js: i++ replaced with i = i - 1
Mutant 540 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, "foobar")
Mutant 541 in q.js: Q replaced with null
Mutant 542 in q.js: Q replaced with undefined
Mutant 543 in q.js: answerPs[i] replaced with answerPs[i + 1]
Mutant 544 in q.js: answerPs[i] replaced with answerPs[answerPs.length - i - 1]
Mutant 545 in q.js: answerPs[i] replaced with Q(answerPs[i] + 1)
Mutant 546 in q.js: resolve replaced with deferred
Mutant 547 in q.js: resolve replaced with newFunction
Mutant 548 in q.js: resolve replaced with reject
Mutant 549 in q.js: reject replaced with null
Mutant 550 in q.js: reject replaced with undefined
Mutant 551 in q.js: this.then replaced with 1 + 1
Mutant 552 in q.js: this.then replaced with 1 - 1
Mutant 553 in q.js: Q.race replaced with Q.reject
Mutant 554 in q.js: Q.race replaced with Q.all
Mutant 555 in q.js: Q.race replaced with Q.then
Mutant 556 in q.js: fallback === void 0 replaced with fallback === null
Mutant 557 in q.js: fallback === void 0 replaced with fallback === undefined
Mutant 558 in q.js: fallback === void 0 replaced with fallback === reject
Mutant 559 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 560 in q.js: inspect === void 0 replaced with inspect === true
Mutant 561 in q.js: inspect === void 0 replaced with inspect !== inspect
Mutant 562 in q.js: descriptor[op] replaced with function () {
  return reject();
}
Mutant 563 in q.js: descriptor[op] replaced with function () {
  throw new Error("Something went wrong");
}
Mutant 564 in q.js: descriptor[op] replaced with function () {
  return fulfilled();
}
Mutant 565 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise(null))
Mutant 566 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise.then(args))
Mutant 567 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(args[0].promise)
Mutant 568 in q.js: args replaced with undefined
Mutant 569 in q.js: args replaced with null
Mutant 570 in q.js: args replaced with function () {
  throw new Error("Hello, world!");
}
Mutant 571 in q.js: fallback.call(promise, op, args) replaced with fallback.call(null)
Mutant 572 in q.js: fallback.call(promise, op, args) replaced with fallback.call({})
Mutant 573 in q.js: fallback.call(promise, op, args) replaced with fallback.call(() => {})
Mutant 574 in q.js: promise replaced with promise.reject
Mutant 575 in q.js: promise replaced with promise.race
Mutant 576 in q.js: promise replaced with Q.passByCopy
Mutant 577 in q.js: op replaced with - -op
Mutant 578 in q.js: op replaced with ~op
Mutant 579 in q.js: op replaced with op + 1
Mutant 580 in q.js: reject replaced with resolve
Mutant 581 in q.js: exception replaced with exception.message
Mutant 582 in q.js: exception replaced with "\"" + exception + "\""
Mutant 583 in q.js: exception replaced with void 0
Mutant 584 in q.js: resolve replaced with !resolve
Mutant 585 in q.js: resolve replaced with resolve()
Mutant 586 in q.js: resolve replaced with reject
Mutant 587 in q.js: resolve replaced with reject
Mutant 588 in q.js: inspect replaced with inspect.prototype
Mutant 589 in q.js: inspect replaced with inspect.arguments
Mutant 590 in q.js: inspect replaced with promise
Mutant 591 in q.js: inspect replaced with inspected.exception
Mutant 592 in q.js: inspect replaced with inspected.value
Mutant 593 in q.js: inspected.state === "rejected" replaced with inspected.reason !== undefined
Mutant 594 in q.js: inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 595 in q.js: inspected.state === "rejected" replaced with inspected.state !== "pending"
Mutant 596 in q.js: inspect replaced with inspect[0]
Mutant 597 in q.js: inspect replaced with inspect["state"]
Mutant 598 in q.js: inspect replaced with inspect["valueOf"]
Mutant 599 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 600 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "rejected" || inspected.state === "fulfilled"
Mutant 601 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 602 in q.js: value replaced with value.then()
Mutant 603 in q.js: value replaced with value + 1
Mutant 604 in q.js: value replaced with value * 2
Mutant 605 in q.js: reject replaced with undefined
Mutant 606 in q.js: exception replaced with exception.message
Mutant 607 in q.js: exception replaced with null
Mutant 608 in q.js: exception replaced with Math.random()
Mutant 609 in q.js: typeof rejected === "function" replaced with !rejected
Mutant 610 in q.js: typeof rejected === "function" replaced with rejected !== "function"
Mutant 611 in q.js: typeof rejected === "function" replaced with typeof fulfilled === "function"
Mutant 612 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(undefined, self)
Mutant 613 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(null, self)
Mutant 614 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong("rejected", self)
Mutant 615 in q.js: self replaced with self.promiseDispatch
Mutant 616 in q.js: self replaced with Q.promiseDispatch
Mutant 617 in q.js: self replaced with deferred.promiseDispatch
Mutant 618 in q.js: exception replaced with null
Mutant 619 in q.js: exception replaced with reject(exception)
Mutant 620 in q.js: reject replaced with undefined
Mutant 621 in q.js: newException replaced with null
Mutant 622 in q.js: newException replaced with new Error("Different error message")
Mutant 623 in q.js: newException replaced with Q
Mutant 624 in q.js: reject replaced with resolve
Mutant 625 in q.js: reject replaced with Promise.reject
Mutant 626 in q.js: exception replaced with reject(new Error("My custom error message"))
Mutant 627 in q.js: exception replaced with resolve(value)
Mutant 628 in q.js: exception replaced with reject(exception)
Mutant 629 in q.js: progressed replaced with "progressed"
Mutant 630 in q.js: progressed replaced with ""
Mutant 631 in q.js: progressed replaced with "foo"
Mutant 632 in q.js: value replaced with "<value>"
Mutant 633 in q.js: value replaced with null
Mutant 634 in q.js: value replaced with undefined
Mutant 635 in q.js: done replaced with typeof done === "undefined"
Mutant 636 in q.js: done replaced with !done
Mutant 637 in q.js: done replaced with done === true
Mutant 638 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 639 in q.js: _fulfilled(value) replaced with _fulfilled(_rejected(value))
Mutant 640 in q.js: _fulfilled(value) replaced with _fulfilled(_fulfilled(value))
Mutant 641 in q.js: _fulfilled replaced with _progressed
Mutant 642 in q.js: _fulfilled replaced with Q.reject
Mutant 643 in q.js: value replaced with undefined
Mutant 644 in q.js: value replaced with null
Mutant 645 in q.js: done replaced with done === false
Mutant 646 in q.js: done replaced with done === true
Mutant 647 in q.js: done replaced with done !== true
Mutant 648 in q.js: deferred.resolve replaced with deferred.reject
Mutant 649 in q.js: deferred.resolve replaced with deferred.notify
Mutant 650 in q.js: _rejected(exception) replaced with reject(new Error("This is a different error message"))
Mutant 651 in q.js: _rejected(exception) replaced with Q.reject(exception)
Mutant 652 in q.js: _rejected replaced with _fulfilled
Mutant 653 in q.js: _rejected replaced with _progressed
Mutant 654 in q.js: exception replaced with null
Mutant 655 in q.js: exception replaced with "error"
Mutant 656 in q.js: exception replaced with undefined
Mutant 657 in q.js: value replaced with 123
Mutant 658 in q.js: value replaced with value + 1
Mutant 659 in q.js: value replaced with null
Mutant 660 in q.js: Q.onerror replaced with false
Mutant 661 in q.js: Q.onerror replaced with true
Mutant 662 in q.js: Q.onerror replaced with Q.onerror = null
Mutant 663 in q.js: e replaced with e.stack
Mutant 664 in q.js: e replaced with reject(e)
Mutant 665 in q.js: e replaced with e.toJSON()
Mutant 666 in q.js: deferred.notify replaced with deferred.reject
Mutant 667 in q.js: deferred.notify replaced with deferred.resolve
Mutant 668 in q.js: deferred.notify replaced with null
Mutant 669 in q.js: newValue replaced with void 0
Mutant 670 in q.js: newValue replaced with null
Mutant 671 in q.js: newValue replaced with ''
Mutant 672 in q.js: promise replaced with undefined
Mutant 673 in q.js: promise replaced with null
Mutant 674 in q.js: promise replaced with new Promise()
Mutant 675 in q.js: callback replaced with callback()
Mutant 676 in q.js: callback replaced with null
Mutant 677 in q.js: callback replaced with true
Mutant 678 in q.js: Q replaced with Q.fcall
Mutant 679 in q.js: Q replaced with Promise.resolve
Mutant 680 in q.js: Q replaced with Q.seq
Mutant 681 in q.js: callback replaced with !callback
Mutant 682 in q.js: callback replaced with callback()
Mutant 683 in q.js: callback replaced with null
Mutant 684 in q.js: callback.fcall replaced with callback.fcannel
not replacing callback.fcall with callback.fcannel
not replacing callback.fcall with callback.fcannel
Mutant 685 in q.js: value replaced with null
Mutant 686 in q.js: value replaced with undefined
Mutant 687 in q.js: value replaced with rejected(exception)
Mutant 688 in q.js: value replaced with fulfilled
Mutant 689 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed.bind(null))
Mutant 690 in q.js: Q replaced with undefined
Mutant 691 in q.js: value replaced with undefined
Mutant 692 in q.js: value replaced with 0
Mutant 693 in q.js: fulfilled replaced with undefined
Mutant 694 in q.js: fulfilled replaced with Promise.reject()
Mutant 695 in q.js: fulfilled replaced with () => {}
Mutant 696 in q.js: rejected replaced with fulfilled
Mutant 697 in q.js: rejected replaced with _rejected
Mutant 698 in q.js: rejected replaced with null
Mutant 699 in q.js: progressed replaced with null
Mutant 700 in q.js: progressed replaced with void 0
Mutant 701 in q.js: progressed replaced with Q.resolve(progressed(value))
Mutant 702 in q.js: this.then replaced with void 0
Mutant 703 in q.js: this.then replaced with null
Mutant 704 in q.js: function () {
  return value;
} replaced with function () {
  return null;
}
Mutant 705 in q.js: function () {
  return value;
} replaced with function () {
  return {};
}
Mutant 706 in q.js: function () {
  return value;
} replaced with function () {
  return undefined;
}
Mutant 707 in q.js: Q replaced with __proto__
Mutant 708 in q.js: Q replaced with prototype
Mutant 709 in q.js: Q replaced with Promise
Mutant 710 in q.js: promise replaced with Q.reject("error")
Mutant 711 in q.js: promise replaced with void 0
Mutant 712 in q.js: promise replaced with "hello world"
Mutant 713 in q.js: value replaced with null
Mutant 714 in q.js: value replaced with undefined
Mutant 715 in q.js: value replaced with false
Mutant 716 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error(reason);
}
Mutant 717 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 718 in q.js: function () {
  throw reason;
} replaced with function () {
  if (typeof reason === "string") {
    throw new Error(reason);
  } else {
    return reason;
  }
}
Mutant 719 in q.js: promise replaced with null
Mutant 720 in q.js: promise replaced with undefined
Mutant 721 in q.js: promise replaced with 0
Mutant 722 in q.js: isPromise(value) replaced with value instanceof Promise
Mutant 723 in q.js: isPromise(value) replaced with Q.isPromise(value.promise)
Mutant 724 in q.js: isPromise(value) replaced with value.constructor.name === "Promise"
Mutant 725 in q.js: isPromise replaced with 1
Mutant 726 in q.js: value replaced with null
Mutant 727 in q.js: value replaced with {}
Mutant 728 in q.js: value replaced with 0
Mutant 729 in q.js: inspected.state === "fulfilled" replaced with inspected.value === void 0
Mutant 730 in q.js: inspected.state === "fulfilled" replaced with inspected.state !== "pending"
Mutant 731 in q.js: inspected.state === "fulfilled" replaced with inspected.state !== "fulfilled" && inspected.state !== "rejected"
Mutant 732 in q.js: isObject replaced with typeof object
Mutant 733 in q.js: isObject replaced with object instanceof Object
Mutant 734 in q.js: object replaced with object.x
Mutant 735 in q.js: object replaced with object[0]
Mutant 736 in q.js: isPromise replaced with isPromise = 1
Mutant 737 in q.js: object replaced with function () {
  return;
}
Mutant 738 in q.js: object replaced with true
Mutant 739 in q.js: object replaced with null
Mutant 740 in q.js: object.inspect replaced with object.inspected
Mutant 741 in q.js: object.inspect replaced with object[Symbol.toStringTag] = ' inspect'
not replacing object.inspect with object.inspected
not replacing object.inspect with object[Symbol.toStringTag] = ' inspect'
Mutant 742 in q.js: this.inspect replaced with !this.inspect
Mutant 743 in q.js: this.inspect replaced with this.inspect.state === "rejected"
Mutant 744 in q.js: this.inspect replaced with this.inspect.state !== "fulfilled"
not replacing this.inspect with !this.inspect
not replacing this.inspect with this.inspect.state === "rejected"
not replacing this.inspect with this.inspect.state !== "fulfilled"
Mutant 745 in q.js: isPromise replaced with isPromise === false
Mutant 746 in q.js: isPromise replaced with isPromise !== true
Mutant 747 in q.js: object replaced with typeof object !== "object"
Mutant 748 in q.js: object replaced with object === undefined
Mutant 749 in q.js: object replaced with object !== null
Mutant 750 in q.js: this.inspect replaced with this.done
Mutant 751 in q.js: this.inspect replaced with this.fail
Mutant 752 in q.js: this.inspect replaced with this.caught
not replacing this.inspect with this.done
not replacing this.inspect with this.fail
not replacing this.inspect with this.caught
Mutant 753 in q.js: object replaced with promise
Mutant 754 in q.js: object replaced with rejection
Mutant 755 in q.js: object replaced with inspected
Mutant 756 in q.js: object.inspect replaced with object.isRejected
Mutant 757 in q.js: object.inspect replaced with object.state
Mutant 758 in q.js: object.inspect replaced with object.isFulfilled
not replacing object.inspect with object.isRejected
not replacing object.inspect with object.state
not replacing object.inspect with object.isFulfilled
Mutant 759 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections || Date.now() >= 1000
Mutant 760 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections && Date.now() >= 1000
Mutant 761 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections || Date.now() >= 1000
Mutant 762 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections == false
Mutant 763 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections != false
Mutant 764 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === true
Mutant 765 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with array_indexOf(unhandledRejections, promise) > -1
Mutant 766 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with array_indexOf(unhandledRejections, promise) >= 0
Mutant 767 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with array_includes(unhandledRejections, promise)
Mutant 768 in q.js: unhandledRejections replaced with NaN
Mutant 769 in q.js: unhandledRejections replaced with null
Mutant 770 in q.js: unhandledRejections replaced with undefined
Mutant 771 in q.js: promise replaced with promise.catch(fake)
Mutant 772 in q.js: promise replaced with Q.nextTick
Mutant 773 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("handledRejection", reason, promise)
Mutant 774 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("rejection", reason, promise)
Mutant 775 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, promise, 1000)
Mutant 776 in q.js: "unhandledRejection" replaced with "unhandledRejection123"
Mutant 777 in q.js: "unhandledRejection" replaced with "unhandledRejectionRejection"
Mutant 778 in q.js: reason replaced with null
Mutant 779 in q.js: reason replaced with reason.toString()
Mutant 780 in q.js: reason replaced with {}
Mutant 781 in q.js: promise replaced with 0
Mutant 782 in q.js: promise replaced with null
Mutant 783 in q.js: promise replaced with promise.then()
Mutant 784 in q.js: promise replaced with Promise.reject(reason)
Mutant 785 in q.js: promise replaced with Promise.fulfill(value)
Mutant 786 in q.js: promise replaced with Promise.resolve(value)
Mutant 787 in q.js: promise replaced with null
Mutant 788 in q.js: promise replaced with Promise.resolve()
Mutant 789 in q.js: promise replaced with Q.reject()
Mutant 790 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack != null
Mutant 791 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== void 0
Mutant 792 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && "stack" in reason
Mutant 793 in q.js: reason.stack replaced with reason
Mutant 794 in q.js: reason.stack replaced with Object.assign(reason)
Mutant 795 in q.js: reason.stack replaced with console.dir(reason)
Mutant 796 in q.js: "(no stack) " + reason replaced with reason, " "
Mutant 797 in q.js: "(no stack) " + reason replaced with NaN
Mutant 798 in q.js: "(no stack) " + reason replaced with null
Mutant 799 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 800 in q.js: !trackUnhandledRejections replaced with !array_indexOf(unhandledRejections, promise)
Mutant 801 in q.js: !trackUnhandledRejections replaced with promise.isFulfilled()
Mutant 802 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections[promise])
Mutant 803 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length)
Mutant 804 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections[promise])
Mutant 805 in q.js: array_indexOf replaced with method_indexOf
Mutant 806 in q.js: array_indexOf replaced with array.indexOf
Mutant 807 in q.js: array_indexOf replaced with index_of
Mutant 808 in q.js: at !== -1 replaced with array_indexOf(reportedUnhandledRejections, promise) != -2
Mutant 809 in q.js: at !== -1 replaced with unhandledRejections[at] != promise
Mutant 810 in q.js: at !== -1 replaced with promise.isFulfilled()
Mutant 811 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(unhandledRejections)
Mutant 812 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(unhandledReasons)
Mutant 813 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 814 in q.js: array_indexOf replaced with array_includes
Mutant 815 in q.js: array_indexOf replaced with array_find
Mutant 816 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 817 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.length
Mutant 818 in q.js: reportedUnhandledRejections replaced with unhandledReasons
Mutant 819 in q.js: promise replaced with undefined
Mutant 820 in q.js: promise replaced with null
Mutant 821 in q.js: promise replaced with reportedUnhandledRejections.length
Mutant 822 in q.js: atReport !== -1 replaced with atReport > -1
Mutant 823 in q.js: atReport !== -1 replaced with atReport < -1
Mutant 824 in q.js: atReport !== -1 replaced with atReport + 1
Mutant 825 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("fulfilled", Promise.resolve())
Mutant 826 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at])
Mutant 827 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at + 1])
Mutant 828 in q.js: unhandledReasons[at] replaced with unhandledReasons.slice(1)
Mutant 829 in q.js: unhandledReasons[at] replaced with unhandledReasons.pop()
Mutant 830 in q.js: promise replaced with 5
Mutant 831 in q.js: promise replaced with null
Mutant 832 in q.js: promise replaced with promise.then(function (value) {
  return value + 1;
})
Mutant 833 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 0)
Mutant 834 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport)
Mutant 835 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport - 1)
Mutant 836 in q.js: atReport replaced with -1
Mutant 837 in q.js: atReport replaced with array_indexOf(unhandledRejections, promise) + 1
Mutant 838 in q.js: 1 replaced with 0
Mutant 839 in q.js: 1 replaced with unhandledRejections.length
Mutant 840 in q.js: 1 replaced with null
Mutant 841 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 2)
Mutant 842 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 3)
Mutant 843 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, -1)
Mutant 844 in q.js: at replaced with unhandledReasons.length - 1
Mutant 845 in q.js: at replaced with unhandledReasons[unhandledRejections.indexOf(promise)]
Mutant 846 in q.js: at replaced with unhandledRejections.indexOf(promise) - 1
Mutant 847 in q.js: 1 replaced with 2
Mutant 848 in q.js: 1 replaced with 0
Mutant 849 in q.js: 1 replaced with unhandledRejections.length
Mutant 850 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at + 1)
Mutant 851 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(-2)
Mutant 852 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at - 3)
Mutant 853 in q.js: at replaced with at - 1
Mutant 854 in q.js: at replaced with at + 1
Mutant 855 in q.js: at replaced with at.length
Mutant 856 in q.js: 1 replaced with 0
Mutant 857 in q.js: 1 replaced with unhandledReasons.length - 1
Mutant 858 in q.js: 1 replaced with Math.ceil(unhandledReasons.length / 2)
Mutant 859 in q.js: resetUnhandledRejections replaced with trackUnhandledRejections = false
Mutant 860 in q.js: resetUnhandledRejections replaced with unhandledRejections = null
Mutant 861 in q.js: rejected replaced with !rejected
Mutant 862 in q.js: rejected replaced with rejected && false
Mutant 863 in q.js: rejected replaced with rejected || false
Mutant 864 in q.js: untrackRejection replaced with trackRejection
Mutant 865 in q.js: this replaced with rejection
Mutant 866 in q.js: this replaced with rejection.promise
Mutant 867 in q.js: this replaced with null
Mutant 868 in q.js: reason replaced with null
Mutant 869 in q.js: reason replaced with undefined
Mutant 870 in q.js: reason replaced with Promise.reject(new Error("Rejected"))
Mutant 871 in q.js: trackRejection(rejection, reason) replaced with trackRejection(reason, rejection)
Mutant 872 in q.js: trackRejection(rejection, reason) replaced with trackRejection(reason, null)
Mutant 873 in q.js: rejection replaced with null
Mutant 874 in q.js: rejection replaced with Promise.reject('')
Mutant 875 in q.js: rejection replaced with Promise.resolve(0)
Mutant 876 in q.js: reason replaced with undefined
Mutant 877 in q.js: reason replaced with "error message"
Mutant 878 in q.js: reason replaced with Error()
Mutant 879 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 880 in q.js: name === null || name === void 0 replaced with name === void 0
Mutant 881 in q.js: name === null || name === void 0 replaced with typeof name === 'undefined'
Mutant 882 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 883 in q.js: value.apply(void 0, args) replaced with value.apply(NaN, args)
Mutant 884 in q.js: value.apply(void 0, args) replaced with value.apply(undefined, args)
Mutant 885 in q.js: value.apply replaced with value.call
Mutant 886 in q.js: value.apply replaced with value.bind
Mutant 887 in q.js: void 0 replaced with "undefined"
Mutant 888 in q.js: void 0 replaced with null
Mutant 889 in q.js: void 0 replaced with void 1
Mutant 890 in q.js: args replaced with args.slice(1)
Mutant 891 in q.js: args replaced with args.concat([])
Mutant 892 in q.js: args replaced with [].concat(args)
Mutant 893 in q.js: value[name].apply(value, args) replaced with value[name].apply(args[0])
Mutant 894 in q.js: value[name].apply(value, args) replaced with value[name].apply(undefined)
Mutant 895 in q.js: value[name].apply(value, args) replaced with value[name].apply("some string")
Mutant 896 in q.js: value replaced with 4 + 4
Mutant 897 in q.js: value replaced with "hello"
Mutant 898 in q.js: value replaced with null
Mutant 899 in q.js: args replaced with args[0]
Mutant 900 in q.js: args replaced with args.slice(1)
Mutant 901 in q.js: args replaced with args.length
Mutant 902 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args - 1)
Mutant 903 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, [args])
Mutant 904 in q.js: value.apply replaced with thisp.apply
Mutant 905 in q.js: value.apply replaced with thisp['apply']
Mutant 906 in q.js: thisp replaced with this
Mutant 907 in q.js: thisp replaced with void 0
Mutant 908 in q.js: thisp replaced with null
Mutant 909 in q.js: value replaced with void 0
Mutant 910 in q.js: value replaced with null
Mutant 911 in q.js: value replaced with this
Mutant 912 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.eval, deferred.finally, deferred.cancel)
Mutant 913 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(Promise.resolve, Promise.reject, Promise.notify)
Mutant 914 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(Q.resolve, Q.reject, Q.notify)
Mutant 915 in q.js: deferred.resolve replaced with deferred.reject
Mutant 916 in q.js: deferred.resolve replaced with deferred.notify
Mutant 917 in q.js: deferred.resolve replaced with deferred.not_a_function
Mutant 918 in q.js: deferred.reject replaced with deferred.resolve
Mutant 919 in q.js: deferred.reject replaced with null
Mutant 920 in q.js: deferred.reject replaced with deferred.resolve
Mutant 921 in q.js: deferred.reject replaced with deferred.notify
Mutant 922 in q.js: exception replaced with unevaluated
Mutant 923 in q.js: exception replaced with undefined
Mutant 924 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args, undefined)
Mutant 925 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, undefined, args)
Mutant 926 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, null, args)
Mutant 927 in q.js: dispatch replaced with JSON
Mutant 928 in q.js: object replaced with 12345
Mutant 929 in q.js: object replaced with object * 2
Mutant 930 in q.js: object replaced with object[0]
Mutant 931 in q.js: op replaced with op + 1
Mutant 932 in q.js: op replaced with op - 1
Mutant 933 in q.js: op replaced with op * 2
Mutant 934 in q.js: args replaced with undefined
Mutant 935 in q.js: args replaced with args[0]
Mutant 936 in q.js: args replaced with Function.prototype.apply.call(args)
Mutant 937 in q.js: Q replaced with null
Mutant 938 in q.js: Q replaced with ""
Mutant 939 in q.js: Q replaced with undefined
Mutant 940 in q.js: object replaced with 123
Mutant 941 in q.js: object replaced with undefined
Mutant 942 in q.js: object replaced with Q.reject
Mutant 943 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 944 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled, fulfilled)
Mutant 945 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(undefined, undefined)
Mutant 946 in q.js: value replaced with null
Mutant 947 in q.js: value replaced with 0
Mutant 948 in q.js: rejected replaced with resolved
Mutant 949 in q.js: rejected replaced with notified
Mutant 950 in q.js: rejected replaced with now
Mutant 951 in q.js: this.all replaced with this.any
Mutant 952 in q.js: this.all replaced with this.none
Mutant 953 in q.js: this.all replaced with this.race
not replacing this.all with this.any
not replacing this.all with this.any
not replacing this.all with this.none
not replacing this.all with this.none
not replacing this.all with this.race
not replacing this.all with this.race
Mutant 954 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(this)
Mutant 955 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(0)
Mutant 956 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 957 in q.js: fulfilled.apply replaced with undefined
Mutant 958 in q.js: fulfilled.apply replaced with fulfilled.resolve
Mutant 959 in q.js: array replaced with array[0]
Mutant 960 in q.js: array replaced with null
Mutant 961 in q.js: array replaced with []
Mutant 962 in q.js: typeof StopIteration === "undefined" replaced with StopIteration === undefUNED
Mutant 963 in q.js: typeof StopIteration === "undefined" replaced with StopIteration === "ovf"
Mutant 964 in q.js: typeof StopIteration === "undefined" replaced with StopIteration === Q.StopIteration
Mutant 965 in q.js: arg replaced with Math.PI
Mutant 966 in q.js: arg replaced with {}
Mutant 967 in q.js: exception replaced with "orange"
Mutant 968 in q.js: exception replaced with Q.when(exception)
Mutant 969 in q.js: result.done replaced with generator.isDone()
Mutant 970 in q.js: result.done replaced with result.isPending()
Mutant 971 in q.js: result.done replaced with result.isFulfilled()
Mutant 972 in q.js: Q replaced with Q.reject
Mutant 973 in q.js: Q replaced with Q.defer
Mutant 974 in q.js: Q replaced with Q.resolve
Mutant 975 in q.js: result.value replaced with result
Mutant 976 in q.js: result.value replaced with promise
Mutant 977 in q.js: result.value replaced with "result"
Mutant 978 in q.js: when(result.value, callback, errback) replaced with when(result.error)
Mutant 979 in q.js: when(result.value, callback, errback) replaced with when(result.resolve)
Mutant 980 in q.js: when(result.value, callback, errback) replaced with when(result.reject)
Mutant 981 in q.js: when replaced with reject
Mutant 982 in q.js: result.value replaced with result.done
Mutant 983 in q.js: result.value replaced with result.reject
Mutant 984 in q.js: result.value replaced with result.resolve
Mutant 985 in q.js: callback replaced with null
Mutant 986 in q.js: callback replaced with function () {}
Mutant 987 in q.js: callback replaced with Q.reject
Mutant 988 in q.js: errback replaced with nop
Mutant 989 in q.js: errback replaced with 0(errback)
Mutant 990 in q.js: generator[verb] replaced with generator[verb] + 1
Mutant 991 in q.js: generator[verb] replaced with null
Mutant 992 in q.js: generator[verb] replaced with "random-string"
Mutant 993 in q.js: arg replaced with "string"
Mutant 994 in q.js: arg replaced with null
Mutant 995 in q.js: arg replaced with undefined
Mutant 996 in q.js: isStopIteration(exception) replaced with !isStopIteration(exception)
Mutant 997 in q.js: isStopIteration(exception) replaced with !StopIteration
Mutant 998 in q.js: isStopIteration(exception) replaced with StopIteration()
Mutant 999 in q.js: isStopIteration replaced with isStopIteration == true
Mutant 1000 in q.js: isStopIteration replaced with isStopIteration === false
Mutant 1001 in q.js: exception replaced with exception.val
Mutant 1002 in q.js: exception replaced with exception.message
Mutant 1003 in q.js: exception replaced with NaN
Mutant 1004 in q.js: Q replaced with undefined
Mutant 1005 in q.js: exception.value replaced with null
Mutant 1006 in q.js: exception.value replaced with undefined
Mutant 1007 in q.js: exception.value replaced with Q()
Mutant 1008 in q.js: exception replaced with exception.toLowerCase()
Mutant 1009 in q.js: exception replaced with (exception || "error").toLowerCase()
Mutant 1010 in q.js: exception replaced with exception instanceof Error ? exception.message : "error"
Mutant 1011 in q.js: when(result, callback, errback) replaced with when(resolution, callback, errback)
Mutant 1012 in q.js: when(result, callback, errback) replaced with when(result, errback, callback)
Mutant 1013 in q.js: when replaced with reject
Mutant 1014 in q.js: when replaced with resolve
Mutant 1015 in q.js: when replaced with join
Mutant 1016 in q.js: result replaced with undefined
Mutant 1017 in q.js: result replaced with null
Mutant 1018 in q.js: result replaced with false
Mutant 1019 in q.js: callback replaced with deferred.reject
Mutant 1020 in q.js: callback replaced with self.reject
Mutant 1021 in q.js: callback replaced with Q.reject
Mutant 1022 in q.js: errback replaced with null
Mutant 1023 in q.js: errback replaced with undefined
Mutant 1024 in q.js: errback replaced with function () {}
Mutant 1025 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1026 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(undefined)
Mutant 1027 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(0)
Mutant 1028 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 1029 in q.js: makeGenerator.apply replaced with makeGenerator.bind
Mutant 1030 in q.js: makeGenerator.apply replaced with makeGenerator.test
Mutant 1031 in q.js: this replaced with null
Mutant 1032 in q.js: this replaced with undefined
Mutant 1033 in q.js: this replaced with 42
Mutant 1034 in q.js: arguments replaced with null
Mutant 1035 in q.js: arguments replaced with undefined
Mutant 1036 in q.js: arguments replaced with 0
Mutant 1037 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(Q.reject)
Mutant 1038 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(null)
Mutant 1039 in q.js: "next" replaced with "send"
Mutant 1040 in q.js: "next" replaced with "throw"
Mutant 1041 in q.js: continuer.bind replaced with Null
Mutant 1042 in q.js: continuer replaced with "throw"
Mutant 1043 in q.js: continuer replaced with "argument"
Mutant 1044 in q.js: continuer replaced with null
Mutant 1045 in q.js: "throw" replaced with "con"
Mutant 1046 in q.js: "throw" replaced with "length"
Mutant 1047 in q.js: "throw" replaced with "apply"
Mutant 1048 in q.js: callback replaced with errback
Mutant 1049 in q.js: Q.done replaced with Q.reject
Mutant 1050 in q.js: Q.async replaced with Q.then
Mutant 1051 in q.js: Q.async replaced with Q.done
not replacing Q.async with Q.then
not replacing Q.async with Q.done
Mutant 1052 in q.js: all replaced with [1, 2, 3]
Mutant 1053 in q.js: all replaced with []
Mutant 1054 in q.js: all replaced with [,,]
Mutant 1055 in q.js: arguments replaced with void 0
Mutant 1056 in q.js: arguments replaced with []
Mutant 1057 in q.js: arguments replaced with null
Mutant 1058 in q.js: callback.apply(self, args) replaced with callback.apply(self, args.slice())
Mutant 1059 in q.js: callback.apply(self, args) replaced with callback.apply("" + self, args)
Mutant 1060 in q.js: callback.apply replaced with callback.call
Mutant 1061 in q.js: callback.apply replaced with callback.bind
Mutant 1062 in q.js: self replaced with null
Mutant 1063 in q.js: self replaced with 0
Mutant 1064 in q.js: self replaced with {}
Mutant 1065 in q.js: args replaced with "args"
Mutant 1066 in q.js: args replaced with null
Mutant 1067 in q.js: args replaced with undefined
Mutant 1068 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op + args)
Mutant 1069 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op - args)
Mutant 1070 in q.js: Q(object).dispatch replaced with null
Mutant 1071 in q.js: Q(object).dispatch replaced with undefined
Mutant 1072 in q.js: Q(object).dispatch replaced with 0
Mutant 1073 in q.js: object replaced with {}
Mutant 1074 in q.js: args replaced with []
Mutant 1075 in q.js: args replaced with "invalid"
Mutant 1076 in q.js: args replaced with null
Mutant 1077 in q.js: defer replaced with foo
Mutant 1078 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1079 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.notify, op, args)
Mutant 1080 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(null, op, args)
Mutant 1081 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 1082 in q.js: self.promiseDispatch replaced with result
Mutant 1083 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1084 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1085 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1086 in q.js: op replaced with op + 1
Mutant 1087 in q.js: op replaced with op - 1
Mutant 1088 in q.js: op replaced with op * 2
Mutant 1089 in q.js: args replaced with null
Mutant 1090 in q.js: args replaced with undefined
Mutant 1091 in q.js: args replaced with {}
Mutant 1092 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key, null])
Mutant 1093 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("post", [key, "foo"])
Mutant 1094 in q.js: object replaced with "PLACEHOLDER"
Mutant 1095 in q.js: object replaced with object[0]
Mutant 1096 in q.js: object replaced with object.someProperty
Mutant 1097 in q.js: "get" replaced with "set"
Mutant 1098 in q.js: "get" replaced with void 0
Mutant 1099 in q.js: "get" replaced with {}
Mutant 1100 in q.js: [key] replaced with Q.get(object, [])
Mutant 1101 in q.js: [key] replaced with Q.get(object, key * 2)
Mutant 1102 in q.js: [key] replaced with Q.get(object, key + 1)
Mutant 1103 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key, value])
Mutant 1104 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key, value])
Mutant 1105 in q.js: this.dispatch replaced with obj[key]
Mutant 1106 in q.js: this.dispatch replaced with obj.key
Mutant 1107 in q.js: "get" replaced with "set"
Mutant 1108 in q.js: "get" replaced with "undefined"
Mutant 1109 in q.js: [key] replaced with [value]
Mutant 1110 in q.js: [key] replaced with [object[key]]
Mutant 1111 in q.js: [key] replaced with [key.valueOf()]
Mutant 1112 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("hello", [key, value])
Mutant 1113 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("get", [key])
Mutant 1114 in q.js: Q(object).dispatch replaced with Q[object].dispatch
Mutant 1115 in q.js: Q(object).dispatch replaced with object.dispatch
Mutant 1116 in q.js: Q replaced with null
Mutant 1117 in q.js: "set" replaced with "get"
Mutant 1118 in q.js: "set" replaced with "post"
Mutant 1119 in q.js: [key, value] replaced with [value, value]
Mutant 1120 in q.js: [key, value] replaced with [key, key]
Mutant 1121 in q.js: [key, value] replaced with [key]
Mutant 1122 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value, key])
Mutant 1123 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key + 1, value])
Mutant 1124 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value * 2])
Mutant 1125 in q.js: "set" replaced with "settle"
Mutant 1126 in q.js: "set" replaced with "throw"
Mutant 1127 in q.js: "set" replaced with "return"
Mutant 1128 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("post", [key])
Mutant 1129 in q.js: Q replaced with Q.promise
Mutant 1130 in q.js: "delete" replaced with "push"
Mutant 1131 in q.js: "delete" replaced with "pop"
Mutant 1132 in q.js: "delete" replaced with "shift"
Mutant 1133 in q.js: [key] replaced with [object]
Mutant 1134 in q.js: [key] replaced with [this[key]]
Mutant 1135 in q.js: [key] replaced with ["key"]
Mutant 1136 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, value])
Mutant 1137 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("get", [key])
Mutant 1138 in q.js: this.dispatch replaced with Q.reject
Mutant 1139 in q.js: this.dispatch replaced with Q.throw
Mutant 1140 in q.js: this.dispatch replaced with Promise.prototype.throw
Mutant 1141 in q.js: "delete" replaced with "put"
Mutant 1142 in q.js: "delete" replaced with "remove"
Mutant 1143 in q.js: [key] replaced with [value]
Mutant 1144 in q.js: [key] replaced with ["value"]
Mutant 1145 in q.js: [key] replaced with null
Mutant 1146 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("send", [name, args])
Mutant 1147 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("get", [name, args])
Mutant 1148 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("apply", [name, args])
Mutant 1149 in q.js: object replaced with undefined
Mutant 1150 in q.js: object replaced with {}
Mutant 1151 in q.js: object replaced with null
Mutant 1152 in q.js: "post" replaced with "call"
Mutant 1153 in q.js: "post" replaced with "apply"
Mutant 1154 in q.js: "post" replaced with "bind"
Mutant 1155 in q.js: [name, args] replaced with [name, [args]]
Mutant 1156 in q.js: [name, args] replaced with [name, args].reverse()
Mutant 1157 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [args, name])
Mutant 1158 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name.toUpperCase(), args])
Mutant 1159 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name.slice(1), args])
Mutant 1160 in q.js: this.dispatch replaced with this.promiseDispatch
Mutant 1161 in q.js: this.dispatch replaced with this.dispatc
Mutant 1162 in q.js: "post" replaced with "put"
Mutant 1163 in q.js: "post" replaced with "apply"
Mutant 1164 in q.js: [name, args] replaced with [name, args, 0]
Mutant 1165 in q.js: [name, args] replaced with [name, args, name]
Mutant 1166 in q.js: [name, args] replaced with [name, args].concat([0])
Mutant 1167 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("send", [name, args])
Mutant 1168 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1169 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("get", [name, args])
Mutant 1170 in q.js: object replaced with deferred
Mutant 1171 in q.js: object replaced with Q(object).dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1172 in q.js: object replaced with Q(deferred).dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1173 in q.js: "post" replaced with "put"
Mutant 1174 in q.js: "post" replaced with "send"
Mutant 1175 in q.js: "post" replaced with "postNew"
Mutant 1176 in q.js: [name, array_slice(arguments, 2)] replaced with [name, arguments]
Mutant 1177 in q.js: [name, array_slice(arguments, 2)] replaced with [name, [].slice.call(arguments, 2)]
Mutant 1178 in q.js: [name, array_slice(arguments, 2)] replaced with [name, arguments.slice(2)]
Mutant 1179 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(Q.slice(arguments, 2)))
Mutant 1180 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 2, 5))
Mutant 1181 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 2, -1))
Mutant 1182 in q.js: array_slice replaced with array_reverse
Mutant 1183 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1184 in q.js: arguments replaced with array_slice(arguments, 0, 1)
Mutant 1185 in q.js: arguments replaced with array_slice(arguments, 0, -1)
Mutant 1186 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1187 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1188 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 4)])
Mutant 1189 in q.js: this.dispatch replaced with null
Mutant 1190 in q.js: this.dispatch replaced with "hello"
Mutant 1191 in q.js: "post" replaced with "put"
Mutant 1192 in q.js: "post" replaced with "apply"
Mutant 1193 in q.js: "post" replaced with "get"
Mutant 1194 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments), 1]
Mutant 1195 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1196 in q.js: array_slice(arguments, 1) replaced with array_slice(-arguments, 1)
Mutant 1197 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments * 0)
Mutant 1198 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1199 in q.js: arguments replaced with deferred.resolve([1, 2, 3])
Mutant 1200 in q.js: 1 replaced with 0
Mutant 1201 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [args, void 0])
Mutant 1202 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [args, null])
Mutant 1203 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("bind", [void 0, args])
Mutant 1204 in q.js: object replaced with undefined
Mutant 1205 in q.js: "apply" replaced with "call"
Mutant 1206 in q.js: "apply" replaced with "bind"
Mutant 1207 in q.js: "apply" replaced with "concat"
Mutant 1208 in q.js: [void 0, args] replaced with [void 0, args[0]]
Mutant 1209 in q.js: [void 0, args] replaced with [void 0, promises]
Mutant 1210 in q.js: [void 0, args] replaced with [void 0, promise]
Mutant 1211 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("call", [void 0, args])
Mutant 1212 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [void 0, [args]])
Mutant 1213 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [args])
Mutant 1214 in q.js: this.dispatch replaced with this.dispatch = null
Mutant 1215 in q.js: "apply" replaced with "apply" + 1
Mutant 1216 in q.js: "apply" replaced with "apply" + "toString"
Mutant 1217 in q.js: "apply" replaced with "apply"[0]
Mutant 1218 in q.js: [void 0, args] replaced with [void 0]
Mutant 1219 in q.js: [void 0, args] replaced with [args, void 0]
Mutant 1220 in q.js: [void 0, args] replaced with [array_slice(arguments, 1), void 0]
Mutant 1221 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [name, args])
Mutant 1222 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("call", [args])
Mutant 1223 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("post", [name, args])
Mutant 1224 in q.js: Q replaced with null
Mutant 1225 in q.js: Q replaced with undefined
Mutant 1226 in q.js: Q replaced with this
Mutant 1227 in q.js: object replaced with undefined
Mutant 1228 in q.js: object replaced with null
Mutant 1229 in q.js: object replaced with "q"
Mutant 1230 in q.js: "apply" replaced with "call"
Mutant 1231 in q.js: "apply" replaced with "bind"
Mutant 1232 in q.js: "apply" replaced with "apply2"
Mutant 1233 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, arguments]
Mutant 1234 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, [array_slice(arguments, 1)]]
Mutant 1235 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, [array_slice(arguments, 1, 1)]]
Mutant 1236 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1))
Mutant 1237 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 1))
Mutant 1238 in q.js: array_slice replaced with array.slice
Mutant 1239 in q.js: arguments replaced with null
Mutant 1240 in q.js: arguments replaced with undefined
Mutant 1241 in q.js: arguments replaced with [void 0]
Mutant 1242 in q.js: 1 replaced with 2
Mutant 1243 in q.js: 1 replaced with null
Mutant 1244 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [this, array_slice(arguments)])
Mutant 1245 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("call", [void 0, array_slice(arguments)])
Mutant 1246 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("all", [array_slice(arguments)])
Mutant 1247 in q.js: this.dispatch replaced with this.resolve
Mutant 1248 in q.js: this.dispatch replaced with this.reject
Mutant 1249 in q.js: this.dispatch replaced with this.notify
Mutant 1250 in q.js: "apply" replaced with "eval"
Mutant 1251 in q.js: "apply" replaced with "typeof"
Mutant 1252 in q.js: "apply" replaced with "call"
Mutant 1253 in q.js: [void 0, array_slice(arguments)] replaced with this
Mutant 1254 in q.js: [void 0, array_slice(arguments)] replaced with 1
Mutant 1255 in q.js: [void 0, array_slice(arguments)] replaced with null
Mutant 1256 in q.js: arguments replaced with [arguments]
Mutant 1257 in q.js: arguments replaced with [...arguments]
Mutant 1258 in q.js: arguments replaced with function () {
  return arguments;
}
Mutant 1259 in q.js: Q replaced with Q.reject
Mutant 1260 in q.js: Q replaced with undefined
Mutant 1261 in q.js: object replaced with void 0
Mutant 1262 in q.js: object replaced with this
Mutant 1263 in q.js: object replaced with null
Mutant 1264 in q.js: array_slice replaced with void 0
Mutant 1265 in q.js: array_slice replaced with null
Mutant 1266 in q.js: arguments replaced with "arguments" + "/0"
Mutant 1267 in q.js: arguments replaced with "args" + "[0]"
Mutant 1268 in q.js: arguments replaced with "args /0/"
Mutant 1269 in q.js: 1 replaced with 1 + 2
Mutant 1270 in q.js: 1 replaced with 2 * 1
Mutant 1271 in q.js: 1 replaced with true && 1
Mutant 1272 in q.js: array_slice(arguments) replaced with 3 - Math.abs(3 / 4)
Mutant 1273 in q.js: array_slice(arguments) replaced with error && error.length
Mutant 1274 in q.js: array_slice replaced with array_concat
Mutant 1275 in q.js: array_slice replaced with array_length
Mutant 1276 in q.js: arguments replaced with void 0
Mutant 1277 in q.js: arguments replaced with args[0]
Mutant 1278 in q.js: arguments replaced with arguments[1]
Mutant 1279 in q.js: arguments replaced with undefined
Mutant 1280 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1281 in q.js: array_slice(arguments) replaced with array_reverse(arguments)
Mutant 1282 in q.js: array_slice(arguments) replaced with array_slice(Object.values(arguments))
Mutant 1283 in q.js: array_slice replaced with args
Mutant 1284 in q.js: arguments replaced with array_slice(arguments)
Mutant 1285 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1286 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch(("promises", []))
Mutant 1287 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch(("keys", [1, 2, 3]))
Mutant 1288 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch(("keys", ["a", "b", "c"]))
Mutant 1289 in q.js: Q(object).dispatch replaced with object.dispatch
Mutant 1290 in q.js: Q replaced with Q.allSettled
Mutant 1291 in q.js: Q replaced with Q.anySettled
Mutant 1292 in q.js: Q replaced with Q.settled
Mutant 1293 in q.js: object replaced with null
Mutant 1294 in q.js: object replaced with object.value
Mutant 1295 in q.js: object replaced with object.name
Mutant 1296 in q.js: "keys" replaced with "value"
Mutant 1297 in q.js: "keys" replaced with "undefined"
Mutant 1298 in q.js: "keys" replaced with "unassigned"
Mutant 1299 in q.js: [] replaced with undefined
Mutant 1300 in q.js: [] replaced with "keys"
Mutant 1301 in q.js: [] replaced with null
Mutant 1302 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1303 in q.js: this.dispatch("keys", []) replaced with this.dispatch("keys", [42])
Mutant 1304 in q.js: this.dispatch("keys", []) replaced with this.dispatch("keys", null)
Mutant 1305 in q.js: "keys" replaced with "hello"
Mutant 1306 in q.js: "keys" replaced with "getKeys"
Mutant 1307 in q.js: "keys" replaced with "keys_internal"
Mutant 1308 in q.js: defer replaced with null
Mutant 1309 in q.js: defer replaced with undefined
Mutant 1310 in q.js: defer replaced with 0
Mutant 1311 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect() !== void 0 && (snapshot = promise.inspect()).state === "fulfilled"
Mutant 1312 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with isObject(promise) && (snapshot = promise.inspect()).state === "fulfilled"
Mutant 1313 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with isPromise(promise) && (snapshot = promise.inspect()).state !== "fulfilled"
Mutant 1314 in q.js: isPromise replaced with promise === undefined
Mutant 1315 in q.js: isPromise replaced with promise === null
Mutant 1316 in q.js: promise replaced with true
Mutant 1317 in q.js: promise replaced with promise.then(function () {
  return true;
})
Mutant 1318 in q.js: promise replaced with null
Mutant 1319 in q.js: promise.inspect replaced with promise.value
Mutant 1320 in q.js: promise.inspect replaced with promise.isFulfilled
Mutant 1321 in q.js: promise.inspect replaced with promise.then
Mutant 1322 in q.js: --pendingCount === 0 replaced with pendingCount <= 0
Mutant 1323 in q.js: --pendingCount === 0 replaced with pendingCount > 0
Mutant 1324 in q.js: --pendingCount === 0 replaced with !pendingCount
Mutant 1325 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1326 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1327 in q.js: deferred.resolve replaced with undefined
Mutant 1328 in q.js: promises replaced with null
Mutant 1329 in q.js: promises replaced with []
Mutant 1330 in q.js: promises replaced with undefined
Mutant 1331 in q.js: deferred.notify replaced with deferred.reject
Mutant 1332 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1333 in q.js: deferred.notify replaced with deferred.progress
Mutant 1334 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress + 10
}
Mutant 1335 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress * 2
}
Mutant 1336 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress - 10
}
Mutant 1337 in q.js: pendingCount === 0 replaced with !pendingCount
Mutant 1338 in q.js: pendingCount === 0 replaced with !promises.length
Mutant 1339 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1340 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1341 in q.js: deferred.resolve replaced with undefined
Mutant 1342 in q.js: deferred.resolve replaced with null
Mutant 1343 in q.js: promises replaced with null
Mutant 1344 in q.js: promises replaced with undefined
Mutant 1345 in q.js: promises replaced with Promise.reject()
Mutant 1346 in q.js: all replaced with any
Mutant 1347 in q.js: all replaced with race
Mutant 1348 in q.js: this replaced with this == null
Mutant 1349 in q.js: this replaced with this.constructor.name
Mutant 1350 in q.js: this replaced with valueOf(this)
Mutant 1351 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1352 in q.js: promises.length === 0 replaced with promises.length > 0
Mutant 1353 in q.js: promises.length === 0 replaced with promises.length === promises.length
Mutant 1354 in q.js: Q.resolve replaced with Q.reject
Mutant 1355 in q.js: Q.resolve replaced with Promise.resolve
Mutant 1356 in q.js: Q.resolve replaced with undefined
Mutant 1357 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(null, onRejected, onProgress))
Mutant 1358 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, null, onProgress))
Mutant 1359 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected, null))
Mutant 1360 in q.js: when replaced with when + 1
Mutant 1361 in q.js: when replaced with promise.when
Mutant 1362 in q.js: onFulfilled replaced with onRejected
Mutant 1363 in q.js: onFulfilled replaced with promise.then
Mutant 1364 in q.js: onFulfilled replaced with promise.all
Mutant 1365 in q.js: onRejected replaced with onFulfilled
Mutant 1366 in q.js: onRejected replaced with noop
Mutant 1367 in q.js: onRejected replaced with reject
Mutant 1368 in q.js: onProgress replaced with onResolve
Mutant 1369 in q.js: onProgress replaced with onReject
Mutant 1370 in q.js: onProgress replaced with onFulfilled
Mutant 1371 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1372 in q.js: result replaced with result + 1
Mutant 1373 in q.js: result replaced with result - 1
Mutant 1374 in q.js: result replaced with result * 2
Mutant 1375 in q.js: pendingCount === 0 replaced with pendingCount !== 0
Mutant 1376 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1377 in q.js: pendingCount === 0 replaced with promises.length > 0
Mutant 1378 in q.js: deferred.reject replaced with deferred.notify
Mutant 1379 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1380 in q.js: deferred.reject replaced with Q.all
Mutant 1381 in q.js: rejection replaced with rejection.cause
Mutant 1382 in q.js: rejection replaced with null
Mutant 1383 in q.js: any replaced with resolved
Mutant 1384 in q.js: any replaced with rejected
Mutant 1385 in q.js: any replaced with pending
Mutant 1386 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allSettled1", "allSettled2")
Mutant 1387 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(Promise.allSettled, "Promise.allSettled", "Q.allSettled")
Mutant 1388 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(deferred.progress, "deferred.progress", "Q.progress")
Mutant 1389 in q.js: allResolved replaced with any
Mutant 1390 in q.js: allResolved replaced with allSettled
Mutant 1391 in q.js: allResolved replaced with defer
Mutant 1392 in q.js: "allResolved" replaced with "allRejected"
Mutant 1393 in q.js: "allResolved" replaced with "allFulfilled"
Mutant 1394 in q.js: "allResolved" replaced with "anyRejected"
Mutant 1395 in q.js: "allSettled" replaced with "allFulfilled"
Mutant 1396 in q.js: "allSettled" replaced with "any"
Mutant 1397 in q.js: array_map(promises, Q) replaced with array_map(Q.reject(promises))
Mutant 1398 in q.js: array_map(promises, Q) replaced with array_map(Q(promises).then(void 0, onRejected))
Mutant 1399 in q.js: array_map replaced with array_filter
Mutant 1400 in q.js: array_map replaced with array_slice
Mutant 1401 in q.js: array_map replaced with array_splice
Mutant 1402 in q.js: promises replaced with promises.slice(0)
Mutant 1403 in q.js: promises replaced with promises.concat(promises)
Mutant 1404 in q.js: promises replaced with promises.splice(0)
Mutant 1405 in q.js: Q replaced with Q * Q
Mutant 1406 in q.js: when(promise, noop, noop) replaced with when(promise.then(null, noop))
Mutant 1407 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop))
Mutant 1408 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop))
Mutant 1409 in q.js: when replaced with never
Mutant 1410 in q.js: when replaced with null
Mutant 1411 in q.js: promise replaced with {
  foo: 'bar'
}
Mutant 1412 in q.js: promise replaced with function add(a, b) {
  return a + b;
}
Mutant 1413 in q.js: noop replaced with () => {
  throw new Exception("Something went wrong");
}
Mutant 1414 in q.js: noop replaced with () => {
  return "Something went wrong";
}
Mutant 1415 in q.js: noop replaced with () => {
  return;
}
Mutant 1416 in q.js: noop replaced with onFulfilled
Mutant 1417 in q.js: noop replaced with onRejected
Mutant 1418 in q.js: noop replaced with function () {}
Mutant 1419 in q.js: this replaced with null
Mutant 1420 in q.js: this replaced with Q.reject()
Mutant 1421 in q.js: this replaced with Promise.all([]).then(() => {
  throw new Error();
})
Mutant 1422 in q.js: promises replaced with []
Mutant 1423 in q.js: promises replaced with null
Mutant 1424 in q.js: promises replaced with undefined
Mutant 1425 in q.js: Q replaced with NaN
Mutant 1426 in q.js: Q replaced with null
Mutant 1427 in q.js: Q replaced with undefined
Mutant 1428 in q.js: promise replaced with promise = 1
Mutant 1429 in q.js: promise replaced with promise.then(function () {
  throw new Error("Error");
})
Mutant 1430 in q.js: promise replaced with promise.then(function () {
  return null;
})
Mutant 1431 in q.js: promise.inspect replaced with promise.fulfill
Mutant 1432 in q.js: promise.inspect replaced with promise.reject
Mutant 1433 in q.js: promise.inspect replaced with promise.resolve
Mutant 1434 in q.js: promise.then(regardless, regardless) replaced with promise.then(null)
Mutant 1435 in q.js: promise.then replaced with promise["then"]
Mutant 1436 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void 1, rejected)
Mutant 1437 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void rejected, 1)
Mutant 1438 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void 0, reject(rejected))
Mutant 1439 in q.js: Q(object).then replaced with Q.reject
Mutant 1440 in q.js: object replaced with null
Mutant 1441 in q.js: object replaced with undefined
Mutant 1442 in q.js: void 0 replaced with promise.reject()
Mutant 1443 in q.js: void 0 replaced with null
Mutant 1444 in q.js: void 0 replaced with undefined
Mutant 1445 in q.js: rejected replaced with promise.then(void 0, noop)
Mutant 1446 in q.js: rejected replaced with promise.then(noop, void 0)
Mutant 1447 in q.js: rejected replaced with promise.then(noop, noop)
Mutant 1448 in q.js: this.then(void 0, rejected) replaced with this.then(null, null)
Mutant 1449 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, undefined)
Mutant 1450 in q.js: this.then(void 0, rejected) replaced with this.then(Promise.reject("error message"), null)
Mutant 1451 in q.js: rejected replaced with resolved
Mutant 1452 in q.js: rejected replaced with rejected(null)
Mutant 1453 in q.js: rejected replaced with rejected(Q.reject("Rejection reason"))
Mutant 1454 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(5, 10)
Mutant 1455 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(true, false)
Mutant 1456 in q.js: object replaced with undefined
Mutant 1457 in q.js: object replaced with null
Mutant 1458 in q.js: progressed replaced with rejection => {
  deferred.reject(rejection);
}
Mutant 1459 in q.js: progressed replaced with () => {
  deferred.reject(new Error("Progress rejected"));
}
Mutant 1460 in q.js: progressed replaced with progress => {
  if (progress.status === "rejected") {
    deferred.reject(new Error("Progress rejected"));
  } else {
    deferred.notify(progress);
  }
}
Mutant 1461 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, function progressed() {})
Mutant 1462 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, function progressed() {})
Mutant 1463 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(0, 0, function progressed() {})
Mutant 1464 in q.js: this.then replaced with -this.then + deferred.resolve
Mutant 1465 in q.js: this.then replaced with -this.then + this.when
Mutant 1466 in q.js: void 0 replaced with this
Mutant 1467 in q.js: void 0 replaced with null
Mutant 1468 in q.js: void 0 replaced with 1
Mutant 1469 in q.js: void 0 replaced with null
Mutant 1470 in q.js: void 0 replaced with NaN
Mutant 1471 in q.js: void 0 replaced with undefined
Mutant 1472 in q.js: progressed replaced with function () {}
Mutant 1473 in q.js: progressed replaced with null
Mutant 1474 in q.js: progressed replaced with undefined
Mutant 1475 in q.js: Q replaced with "foo"
Mutant 1476 in q.js: Q replaced with 1 + 1
Mutant 1477 in q.js: Q replaced with {
  bar: "baz"
}
Mutant 1478 in q.js: object replaced with null
Mutant 1479 in q.js: object replaced with Q.reject(new Error("Something went wrong"))
Mutant 1480 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply !== "function"
Mutant 1481 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply !== callback.length
Mutant 1482 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.prototype !== callback
Mutant 1483 in q.js: Q replaced with "undefined"
Mutant 1484 in q.js: Q replaced with null
Mutant 1485 in q.js: Q replaced with "test"
Mutant 1486 in q.js: callback replaced with null
Mutant 1487 in q.js: callback replaced with false
Mutant 1488 in q.js: callback replaced with 0
Mutant 1489 in q.js: callback.fcall replaced with this.fcall
Mutant 1490 in q.js: callback.fcall replaced with Q.fcall
not replacing callback.fcall with this.fcall
not replacing callback.fcall with this.fcall
not replacing callback.fcall with Q.fcall
not replacing callback.fcall with Q.fcall
Mutant 1491 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, rejected)
Mutant 1492 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, true)
Mutant 1493 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, promise, progress)
Mutant 1494 in q.js: Q replaced with deferred
Mutant 1495 in q.js: object replaced with this
Mutant 1496 in q.js: object replaced with null
Mutant 1497 in q.js: fulfilled replaced with rejected
Mutant 1498 in q.js: fulfilled replaced with null
Mutant 1499 in q.js: rejected replaced with undefined
Mutant 1500 in q.js: rejected replaced with null
Mutant 1501 in q.js: progress replaced with rejected
Mutant 1502 in q.js: progress replaced with Math.random()
Mutant 1503 in q.js: progress replaced with new Error('Random error')
Mutant 1504 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error)
Mutant 1505 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(promise.reject(reason))
Mutant 1506 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, error)
Mutant 1507 in q.js: error replaced with error = Q.reject(error)
Mutant 1508 in q.js: error replaced with error = Q.resolve(error)
Mutant 1509 in q.js: error replaced with error = new Error(error)
Mutant 1510 in q.js: promise replaced with Q.reject()
Mutant 1511 in q.js: promise replaced with Q.resolve()
Mutant 1512 in q.js: promise replaced with Q.fcall()
Mutant 1513 in q.js: Q.onerror replaced with false
Mutant 1514 in q.js: Q.onerror replaced with true
Mutant 1515 in q.js: Q.onerror replaced with Q.onerror = null
Mutant 1516 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(null, fulfilled, null)
Mutant 1517 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(rejected, null, null)
Mutant 1518 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(null, null, progress)
Mutant 1519 in q.js: this.then replaced with this + 1
Mutant 1520 in q.js: this.then replaced with "hello"
Mutant 1521 in q.js: fulfilled replaced with rejected
Mutant 1522 in q.js: fulfilled replaced with undefined
Mutant 1523 in q.js: fulfilled replaced with null
Mutant 1524 in q.js: rejected replaced with null
Mutant 1525 in q.js: rejected replaced with -Infinity
Mutant 1526 in q.js: rejected replaced with "foo"
Mutant 1527 in q.js: progress replaced with rejected
Mutant 1528 in q.js: progress replaced with resolved
Mutant 1529 in q.js: progress replaced with notify
Mutant 1530 in q.js: onUnhandledError replaced with null
Mutant 1531 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(null, onUnhandledError)
Mutant 1532 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(undefined, onUnhandledError)
Mutant 1533 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError)
Mutant 1534 in q.js: void 0 replaced with null
Mutant 1535 in q.js: void 0 replaced with 42
Mutant 1536 in q.js: onUnhandledError replaced with onUnhandledError()
Mutant 1537 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms * 2, error)
Mutant 1538 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms / 2, error)
Mutant 1539 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, error + 1)
Mutant 1540 in q.js: Q(object).timeout replaced with Q.defer
Mutant 1541 in q.js: Q replaced with Q.then
Mutant 1542 in q.js: Q replaced with Q.always
Mutant 1543 in q.js: Q replaced with Q.never
Mutant 1544 in q.js: object replaced with null
Mutant 1545 in q.js: object replaced with undefined
Mutant 1546 in q.js: object replaced with {}
Mutant 1547 in q.js: error replaced with null
Mutant 1548 in q.js: error replaced with "Error"
Mutant 1549 in q.js: error replaced with new Error()
Mutant 1550 in q.js: defer replaced with 42
Mutant 1551 in q.js: !error || "string" === typeof error replaced with !error || !"string" === typeof error
Mutant 1552 in q.js: !error || "string" === typeof error replaced with error || "string" === typeof error
Mutant 1553 in q.js: !error || "string" === typeof error replaced with "string" !== typeof error
Mutant 1554 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1555 in q.js: deferred.reject replaced with null
Mutant 1556 in q.js: deferred.reject replaced with undefined
Mutant 1557 in q.js: timeoutId replaced with null
Mutant 1558 in q.js: timeoutId replaced with "timeoutId"
Mutant 1559 in q.js: timeoutId replaced with 0
Mutant 1560 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1561 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1562 in q.js: value replaced with null
Mutant 1563 in q.js: value replaced with undefined
Mutant 1564 in q.js: value replaced with {
  value: value
}
Mutant 1565 in q.js: clearTimeout replaced with clearInterval
Mutant 1566 in q.js: timeoutId replaced with null
Mutant 1567 in q.js: timeoutId replaced with undefined
Mutant 1568 in q.js: timeoutId replaced with 0
Mutant 1569 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1570 in q.js: deferred.reject replaced with deferred.notify
Mutant 1571 in q.js: exception replaced with function () {}
Mutant 1572 in q.js: exception replaced with undefined
Mutant 1573 in q.js: exception replaced with null
Mutant 1574 in q.js: timeout === void 0 replaced with timeout == null
Mutant 1575 in q.js: timeout === void 0 replaced with timeout !== undefined
Mutant 1576 in q.js: timeout === void 0 replaced with timeout.valueOf() === void 0
Mutant 1577 in q.js: Q(object).delay replaced with null
Mutant 1578 in q.js: Q replaced with true
Mutant 1579 in q.js: Q replaced with undefined
Mutant 1580 in q.js: object replaced with "foo"
Mutant 1581 in q.js: object replaced with Q.reject(new Error("bar"))
Mutant 1582 in q.js: timeout replaced with this
Mutant 1583 in q.js: timeout replaced with undefined
Mutant 1584 in q.js: timeout replaced with null
Mutant 1585 in q.js: defer replaced with defer.promise
Mutant 1586 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1587 in q.js: deferred.resolve replaced with null
Mutant 1588 in q.js: deferred.resolve replaced with undefined
Mutant 1589 in q.js: value replaced with undefined
Mutant 1590 in q.js: value replaced with Promise.reject('error')
Mutant 1591 in q.js: value replaced with void 0
Mutant 1592 in q.js: callback replaced with undefined
Mutant 1593 in q.js: callback replaced with null
Mutant 1594 in q.js: callback replaced with function () {
  return {};
}
Mutant 1595 in q.js: args replaced with []
Mutant 1596 in q.js: args replaced with null
Mutant 1597 in q.js: args replaced with undefined
Mutant 1598 in q.js: args replaced with args.slice(0)
Mutant 1599 in q.js: args replaced with args.concat(args)
Mutant 1600 in q.js: args replaced with args.every()
Mutant 1601 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1602 in q.js: nodeArgs.push replaced with arguments.push
Mutant 1603 in q.js: nodeArgs.push replaced with this.push
Mutant 1604 in q.js: deferred.makeNodeResolver() replaced with this.reject
Mutant 1605 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1606 in q.js: deferred.makeNodeResolver() replaced with function (error) {
  throw error;
}
Mutant 1607 in q.js: this.fapply(nodeArgs).fail replaced with deferred.reject
Mutant 1608 in q.js: this.fapply(nodeArgs).fail replaced with deferred.notify
Mutant 1609 in q.js: this.fapply replaced with deferred.resolve
not replacing this.fapply with deferred.resolve
not replacing this.fapply with deferred.resolve
Mutant 1610 in q.js: nodeArgs replaced with null
Mutant 1611 in q.js: nodeArgs replaced with undefined
Mutant 1612 in q.js: nodeArgs replaced with []
Mutant 1613 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1614 in q.js: deferred.reject replaced with deferred.notify
Mutant 1615 in q.js: deferred.reject replaced with null
Mutant 1616 in q.js: array_slice(arguments, 1) replaced with array_slice(cards.slice(0, 10))
Mutant 1617 in q.js: array_slice(arguments, 1) replaced with array_slice(cards.slice(cards.length - 20, cards.length))
Mutant 1618 in q.js: array_slice(arguments, 1) replaced with array_slice(cards.reverse().slice(0, 10))
Mutant 1619 in q.js: arguments replaced with null
Mutant 1620 in q.js: arguments replaced with []
Mutant 1621 in q.js: arguments replaced with {}
Mutant 1622 in q.js: 1 replaced with 2
Mutant 1623 in q.js: 1 replaced with "hello"
Mutant 1624 in q.js: 1 replaced with new Object()
Mutant 1625 in q.js: Q replaced with 1 + 1
Mutant 1626 in q.js: args replaced with args.length
Mutant 1627 in q.js: args replaced with args.reverse()
Mutant 1628 in q.js: args replaced with undefined
Mutant 1629 in q.js: array_slice replaced with args
Mutant 1630 in q.js: array_slice replaced with varargs
Mutant 1631 in q.js: arguments replaced with void 0
Mutant 1632 in q.js: arguments replaced with null
Mutant 1633 in q.js: arguments replaced with Promise.reject()
Mutant 1634 in q.js: deferred.makeNodeResolver() replaced with deferred.reject("Error")
Mutant 1635 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1636 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1637 in q.js: this.fapply replaced with deferred.reject
Mutant 1638 in q.js: this.fapply replaced with deferred.notify
not replacing this.fapply with deferred.reject
not replacing this.fapply with deferred.reject
not replacing this.fapply with deferred.notify
not replacing this.fapply with deferred.notify
Mutant 1639 in q.js: nodeArgs replaced with nodeArgs.reverse()
Mutant 1640 in q.js: nodeArgs replaced with null
Mutant 1641 in q.js: nodeArgs replaced with undefined
Mutant 1642 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1643 in q.js: deferred.reject replaced with deferred.notify
Mutant 1644 in q.js: deferred.reject replaced with null
Mutant 1645 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1646 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, -1)
Mutant 1647 in q.js: array_slice(arguments, 1) replaced with array_slice(null)
Mutant 1648 in q.js: arguments replaced with 0
Mutant 1649 in q.js: arguments replaced with void 0
Mutant 1650 in q.js: arguments replaced with null
Mutant 1651 in q.js: 1 replaced with 0
Mutant 1652 in q.js: 1 replaced with NaN
Mutant 1653 in q.js: 1 replaced with undefined
Mutant 1654 in q.js: baseArgs.concat replaced with baseArgs.print
Mutant 1655 in q.js: baseArgs.concat replaced with baseArgs.expand
Mutant 1656 in q.js: array_slice(arguments) replaced with array_slice.call(arguments)
Mutant 1657 in q.js: array_slice(arguments) replaced with arguments.slice()
Mutant 1658 in q.js: array_slice(arguments) replaced with void 0
Mutant 1659 in q.js: arguments replaced with arguments.slice(1)
Mutant 1660 in q.js: defer replaced with deferred
Mutant 1661 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver() * 2
Mutant 1662 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1663 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1664 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeRejector
Mutant 1665 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeCallback
Mutant 1666 in q.js: deferred.makeNodeResolver replaced with deferred.makeCallback
Mutant 1667 in q.js: Q replaced with identifier
Mutant 1668 in q.js: Q replaced with A.B
Mutant 1669 in q.js: callback replaced with function () {}
Mutant 1670 in q.js: callback replaced with null
Mutant 1671 in q.js: callback replaced with () => {}
Mutant 1672 in q.js: nodeArgs replaced with nodeArgs[0]
Mutant 1673 in q.js: nodeArgs replaced with nodeArgs.length
Mutant 1674 in q.js: nodeArgs replaced with null
Mutant 1675 in q.js: deferred.reject replaced with deferred.reject("error")
Mutant 1676 in q.js: deferred.reject replaced with deferred.resolve(undefined)
Mutant 1677 in q.js: deferred.reject replaced with Q.reject(new Error("error"))
Mutant 1678 in q.js: array_slice replaced with slice
Mutant 1679 in q.js: array_slice replaced with string_slice
Mutant 1680 in q.js: array_slice replaced with integer_slice
Mutant 1681 in q.js: arguments replaced with void 0
Mutant 1682 in q.js: arguments replaced with undefined
Mutant 1683 in q.js: arguments replaced with null
Mutant 1684 in q.js: this replaced with undefined
Mutant 1685 in q.js: this replaced with () => {
  throw new Error('intentional error');
}
Mutant 1686 in q.js: this replaced with () => 0
Mutant 1687 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(NaN)
Mutant 1688 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null)
Mutant 1689 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(undefined)
Mutant 1690 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1691 in q.js: Q.denodeify.apply replaced with Object.denodeify
Mutant 1692 in q.js: Q.denodeify.apply replaced with Math.denodeify
Mutant 1693 in q.js: void 0 replaced with 42
Mutant 1694 in q.js: void 0 replaced with "PLACEHOLDER"
Mutant 1695 in q.js: void 0 replaced with NaN
Mutant 1696 in q.js: args replaced with void 0
Mutant 1697 in q.js: args replaced with args.slice(0)
Mutant 1698 in q.js: args replaced with args.concat()
Mutant 1699 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1700 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1701 in q.js: array_slice(arguments, 2) replaced with array_slice(undefined, arguments, 2)
Mutant 1702 in q.js: array_slice replaced with array_slice.length = 0
Mutant 1703 in q.js: arguments replaced with baseArgs.concat(array_slice(arguments))
Mutant 1704 in q.js: arguments replaced with baseArgs.concat(array_slice(args))
Mutant 1705 in q.js: arguments replaced with baseArgs.concat(args)
Mutant 1706 in q.js: 2 replaced with "Hello World!"
Mutant 1707 in q.js: 2 replaced with 5
Mutant 1708 in q.js: 2 replaced with undefined
Mutant 1709 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1710 in q.js: baseArgs.concat replaced with baseArgs.unshift
Mutant 1711 in q.js: baseArgs.concat replaced with baseArgs.filter
Mutant 1712 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1713 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, -1)
Mutant 1714 in q.js: array_slice(arguments) replaced with array_slice(arguments, 10)
Mutant 1715 in q.js: arguments replaced with []
Mutant 1716 in q.js: arguments replaced with 123
Mutant 1717 in q.js: arguments replaced with null
Mutant 1718 in q.js: defer replaced with new Deferred()
Mutant 1719 in q.js: nodeArgs.push replaced with deferred.resolve
Mutant 1720 in q.js: nodeArgs.push replaced with Q.delay
Mutant 1721 in q.js: nodeArgs.push replaced with Q.resolve
Mutant 1722 in q.js: deferred.makeNodeResolver() replaced with deferred.reject()
Mutant 1723 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve()
Mutant 1724 in q.js: thisp replaced with undefined
Mutant 1725 in q.js: thisp replaced with null
Mutant 1726 in q.js: thisp replaced with {
  foo: "bar"
}
Mutant 1727 in q.js: arguments replaced with undefined
Mutant 1728 in q.js: arguments replaced with null
Mutant 1729 in q.js: arguments replaced with []
Mutant 1730 in q.js: Q replaced with deferred.resolve
Mutant 1731 in q.js: bound replaced with deferred.resolve
Mutant 1732 in q.js: bound replaced with deferred.reject
Mutant 1733 in q.js: bound replaced with function () {
  throw new Error("different error");
}
Mutant 1734 in q.js: nodeArgs replaced with null
Mutant 1735 in q.js: nodeArgs replaced with [42]
Mutant 1736 in q.js: nodeArgs replaced with nodeArgs.concat([null])
Mutant 1737 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1738 in q.js: deferred.reject replaced with null
Mutant 1739 in q.js: deferred.reject replaced with undefined
Mutant 1740 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1741 in q.js: array_slice(arguments, 0) replaced with array_slice(1, arguments)
Mutant 1742 in q.js: array_slice(arguments, 0) replaced with array_slice(...arguments, arguments[0])
Mutant 1743 in q.js: array_slice replaced with array_shift
Mutant 1744 in q.js: arguments replaced with args[0]
Mutant 1745 in q.js: arguments replaced with this[0]
Mutant 1746 in q.js: arguments replaced with arguments.slice(1)
Mutant 1747 in q.js: 0 replaced with array_slice(arguments, 1)
Mutant 1748 in q.js: 0 replaced with array_slice(arguments, -1)
Mutant 1749 in q.js: this replaced with null
Mutant 1750 in q.js: this replaced with undefined
Mutant 1751 in q.js: this replaced with 42
Mutant 1752 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(void 1, args)
Mutant 1753 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined, args)
Mutant 1754 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(args.shift(), args)
Mutant 1755 in q.js: void 0 replaced with null
Mutant 1756 in q.js: void 0 replaced with undefined
Mutant 1757 in q.js: void 0 replaced with 0
Mutant 1758 in q.js: args replaced with null
Mutant 1759 in q.js: args replaced with args.length
Mutant 1760 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.concat())
Mutant 1761 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(args.concat([name]))
Mutant 1762 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(args.slice(1).push(name))
Mutant 1763 in q.js: Q(object).npost replaced with Q.then
Mutant 1764 in q.js: Q replaced with null
Mutant 1765 in q.js: object replaced with null
Mutant 1766 in q.js: object replaced with undefined
Mutant 1767 in q.js: object replaced with 42
Mutant 1768 in q.js: name replaced with "nmake"
Mutant 1769 in q.js: name replaced with "npost"
Mutant 1770 in q.js: name replaced with "ninvoke"
Mutant 1771 in q.js: args replaced with "placeholder"
Mutant 1772 in q.js: args replaced with 2
Mutant 1773 in q.js: args replaced with undefined
Mutant 1774 in q.js: array_slice replaced with null
Mutant 1775 in q.js: defer replaced with defer2
Mutant 1776 in q.js: defer replaced with defer + 1
Mutant 1777 in q.js: defer replaced with null
Mutant 1778 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1779 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1780 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1781 in q.js: deferred.makeNodeResolver() replaced with function (err) {
  throw new Error('error');
}
Mutant 1782 in q.js: deferred.makeNodeResolver() replaced with function (err) {
  return null;
}
Mutant 1783 in q.js: deferred.makeNodeResolver replaced with undefined
Mutant 1784 in q.js: deferred.makeNodeResolver replaced with deferred.reject
Mutant 1785 in q.js: deferred.makeNodeResolver replaced with Promise.resolve
Mutant 1786 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1787 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("put", [name, nodeArgs])
Mutant 1788 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("patch", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("put", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("patch", [name, nodeArgs])
Mutant 1789 in q.js: "post" replaced with "get"
Mutant 1790 in q.js: "post" replaced with "put"
Mutant 1791 in q.js: [name, nodeArgs] replaced with [name, args]
Mutant 1792 in q.js: [name, nodeArgs] replaced with [name, this]
Mutant 1793 in q.js: [name, nodeArgs] replaced with [name, 42]
Mutant 1794 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1795 in q.js: deferred.reject replaced with deferred.notify
Mutant 1796 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1797 in q.js: array_slice(arguments, 2) replaced with array_slice(0)
Mutant 1798 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments.length)
Mutant 1799 in q.js: array_slice(arguments, 2) replaced with array_slice(n => n + 1)
Mutant 1800 in q.js: arguments replaced with null
Mutant 1801 in q.js: arguments replaced with arguments.slice(2)
Mutant 1802 in q.js: arguments replaced with []
Mutant 1803 in q.js: 2 replaced with 1
Mutant 1804 in q.js: 2 replaced with null
Mutant 1805 in q.js: 2 replaced with "hello"
Mutant 1806 in q.js: defer replaced with deferred.reject
Mutant 1807 in q.js: defer replaced with null
Mutant 1808 in q.js: defer replaced with undefined
Mutant 1809 in q.js: nodeArgs.push replaced with undefined
Mutant 1810 in q.js: nodeArgs.push replaced with null
Mutant 1811 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1812 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().bind(null)
Mutant 1813 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().toString()
Mutant 1814 in q.js: deferred.makeNodeResolver replaced with 42
Mutant 1815 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [nodeArgs, name])
Mutant 1816 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, 1])
Mutant 1817 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs + 1])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [nodeArgs, name])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, 1])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs + 1])
Mutant 1818 in q.js: Q replaced with object[name]
Mutant 1819 in q.js: object replaced with "foo"
Mutant 1820 in q.js: object replaced with null
Mutant 1821 in q.js: object replaced with undefined
Mutant 1822 in q.js: "post" replaced with "get"
Mutant 1823 in q.js: "post" replaced with undefined
Mutant 1824 in q.js: "post" replaced with "postSubject"
Mutant 1825 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1826 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1827 in q.js: [name, nodeArgs] replaced with [name, null]
Mutant 1828 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1829 in q.js: deferred.reject replaced with nodeback
Mutant 1830 in q.js: deferred.reject replaced with undefined
Mutant 1831 in q.js: array_slice(arguments, 1) replaced with array_slice(this)
Mutant 1832 in q.js: array_slice(arguments, 1) replaced with array_slice(null)
Mutant 1833 in q.js: array_slice(arguments, 1) replaced with array_slice(undefined)
Mutant 1834 in q.js: arguments replaced with nodeArgs[0]
Mutant 1835 in q.js: arguments replaced with nodeArgs.length
Mutant 1836 in q.js: arguments replaced with nodeArgs.slice(1)
Mutant 1837 in q.js: 1 replaced with args.length
Mutant 1838 in q.js: 1 replaced with args.concat([])
Mutant 1839 in q.js: 1 replaced with typeof args
Mutant 1840 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1841 in q.js: deferred.makeNodeResolver() replaced with deferred.doResolve()
Mutant 1842 in q.js: deferred.makeNodeResolver() replaced with Q.always()
Mutant 1843 in q.js: deferred.makeNodeResolver() replaced with Q.reject()
Mutant 1844 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1845 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("put", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("put", [name, nodeArgs])
Mutant 1846 in q.js: "post" replaced with "send"
Mutant 1847 in q.js: "post" replaced with "foo"
Mutant 1848 in q.js: "post" replaced with 1000
Mutant 1849 in q.js: [name, nodeArgs] replaced with [name]
Mutant 1850 in q.js: [name, nodeArgs] replaced with [Q.resolve(name)]
Mutant 1851 in q.js: [name, nodeArgs] replaced with [name.toUpperCase()]
Mutant 1852 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1853 in q.js: deferred.reject replaced with Promise.reject(error)
Mutant 1854 in q.js: deferred.reject replaced with null
Mutant 1855 in q.js: Q replaced with undefined
Mutant 1856 in q.js: Q replaced with null
Mutant 1857 in q.js: Q replaced with {}
Mutant 1858 in q.js: object replaced with !object
Mutant 1859 in q.js: object replaced with object + 1
Mutant 1860 in q.js: object replaced with object.toString()
Mutant 1861 in q.js: nodeback replaced with undefined
Mutant 1862 in q.js: nodeback replaced with 1 + 2
Mutant 1863 in q.js: nodeback replaced with 'Hello World'
Mutant 1864 in q.js: nodeback replaced with !nodeback
Mutant 1865 in q.js: nodeback replaced with nodeback === undefined
Mutant 1866 in q.js: nodeback replaced with typeof nodeback !== 'function'
Mutant 1867 in q.js: nodeback(null, value) replaced with nodeback("value", null)
Mutant 1868 in q.js: nodeback(null, value) replaced with nodeback(value, undefined)
Mutant 1869 in q.js: nodeback(null, value) replaced with nodeback(value, value)
Mutant 1870 in q.js: null replaced with undefined
Mutant 1871 in q.js: null replaced with "error"
Mutant 1872 in q.js: null replaced with 0
Mutant 1873 in q.js: value replaced with 42
Mutant 1874 in q.js: value replaced with undefined
Mutant 1875 in q.js: value replaced with 1302
Mutant 1876 in queue.js: Q.defer replaced with Q.reject
Mutant 1877 in queue.js: Q.defer replaced with {
  head: Q.resolve,
  tail: Q.defer
}
Mutant 1878 in queue.js: Q.defer replaced with {
  head: 42,
  tail: Q.defer
}
Mutant 1879 in queue.js: Q.defer replaced with null
Mutant 1880 in queue.js: Q.defer replaced with {}
Mutant 1881 in queue.js: "head" replaced with "tail"
Mutant 1882 in queue.js: "head" replaced with "unknown"
Mutant 1883 in queue.js: "head" replaced with "get"
Mutant 1884 in queue.js: ends.promise.get replaced with ends.promise.tail
Mutant 1885 in queue.js: "tail" replaced with "head"
Mutant 1886 in queue.js: "tail" replaced with "end"
Mutant 1887 in queue.js: "tail" replaced with "next"
Mutant 1888 in queue.js: closed.resolve replaced with closed.reject
Mutant 1889 in queue.js: closed.resolve replaced with closed.isResolved
Mutant 1890 in queue.js: error replaced with null
Mutant 1891 in queue.js: error replaced with "error"
Mutant 1892 in queue.js: error replaced with new Error("New error message")
Mutant 1893 in queue.js: ends.resolve replaced with ends.reject
Mutant 1894 in queue.js: ends.resolve replaced with closed.resolve
Mutant 1895 in queue.js: ends.resolve replaced with null
Mutant 1896 in queue.js: end replaced with closed.resolve(end)
Mutant 1897 in queue.js: end replaced with Q.reject(end)
Mutant 1898 in queue.js: end replaced with ends.promise
[32m22:31:50 (3110) INFO Instrumenter[39m Instrumented 2 source file(s) with 1899 mutant(s)
[32m22:31:50 (3110) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m22:31:52 (3110) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m22:31:52 (3110) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m22:31:59 (3110) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6801 ms, overhead 2 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~2h 38m) 2/1899 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 30m) 3/1899 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 9m) 5/1899 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 30m) 6/1899 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 16m) 8/1899 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 30m) 9/1899 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 20m) 11/1899 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 13m) 13/1899 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 21m) 14/1899 tested (12 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 16m) 16/1899 tested (14 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 22m) 17/1899 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 17m) 19/1899 tested (17 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 23m) 20/1899 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 19m) 22/1899 tested (20 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 23m) 23/1899 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 4m) 27/1899 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 16m) 27/1899 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 20m) 28/1899 tested (22 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 24m) 29/1899 tested (22 survived, 2 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 34m) 29/1899 tested (22 survived, 2 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 38m) 30/1899 tested (22 survived, 3 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 40m) 31/1899 tested (22 survived, 4 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 50m) 31/1899 tested (22 survived, 4 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 46m) 33/1899 tested (23 survived, 5 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 48m) 34/1899 tested (24 survived, 5 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 57m) 34/1899 tested (24 survived, 5 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 52m) 36/1899 tested (25 survived, 6 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 36m) 40/1899 tested (26 survived, 6 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 44m) 40/1899 tested (26 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 46m) 41/1899 tested (26 survived, 7 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 48m) 42/1899 tested (26 survived, 8 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 55m) 42/1899 tested (26 survived, 8 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 51m) 44/1899 tested (27 survived, 9 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 48m) 46/1899 tested (28 survived, 9 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 54m) 46/1899 tested (28 survived, 9 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 56m) 47/1899 tested (28 survived, 10 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~4h 2m) 47/1899 tested (28 survived, 10 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 49m) 51/1899 tested (28 survived, 11 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 46m) 53/1899 tested (30 survived, 11 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 47m) 54/1899 tested (31 survived, 11 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 44m) 56/1899 tested (33 survived, 11 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 46m) 57/1899 tested (34 survived, 11 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 43m) 59/1899 tested (36 survived, 11 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 44m) 60/1899 tested (37 survived, 11 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 42m) 62/1899 tested (39 survived, 11 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 43m) 63/1899 tested (40 survived, 11 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 41m) 65/1899 tested (42 survived, 11 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 42m) 66/1899 tested (43 survived, 11 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 43m) 67/1899 tested (44 survived, 11 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 44m) 68/1899 tested (44 survived, 12 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 48m) 68/1899 tested (44 survived, 12 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 46m) 70/1899 tested (45 survived, 13 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 47m) 71/1899 tested (46 survived, 13 timed out)
Mutation testing 3% (elapsed: ~9m, remaining: ~3h 48m) 72/1899 tested (47 survived, 13 timed out)
Mutation testing 3% (elapsed: ~9m, remaining: ~3h 49m) 73/1899 tested (48 survived, 13 timed out)
Mutation testing 3% (elapsed: ~9m, remaining: ~3h 50m) 74/1899 tested (48 survived, 14 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 47m) 76/1899 tested (50 survived, 14 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 51m) 76/1899 tested (50 survived, 14 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 52m) 77/1899 tested (50 survived, 15 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 53m) 78/1899 tested (50 survived, 16 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 57m) 78/1899 tested (50 survived, 16 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 51m) 81/1899 tested (50 survived, 17 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 52m) 82/1899 tested (51 survived, 17 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 50m) 84/1899 tested (53 survived, 17 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 51m) 85/1899 tested (54 survived, 17 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 49m) 87/1899 tested (56 survived, 17 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 49m) 88/1899 tested (57 survived, 17 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 47m) 90/1899 tested (59 survived, 17 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 48m) 91/1899 tested (60 survived, 17 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 46m) 93/1899 tested (62 survived, 17 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 47m) 94/1899 tested (63 survived, 17 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 45m) 96/1899 tested (65 survived, 17 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 46m) 97/1899 tested (66 survived, 17 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 44m) 99/1899 tested (68 survived, 17 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 44m) 100/1899 tested (69 survived, 17 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 43m) 102/1899 tested (71 survived, 17 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 43m) 103/1899 tested (72 survived, 17 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 44m) 104/1899 tested (73 survived, 17 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 42m) 106/1899 tested (75 survived, 17 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 43m) 107/1899 tested (76 survived, 17 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 41m) 109/1899 tested (78 survived, 17 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 42m) 110/1899 tested (79 survived, 17 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 40m) 112/1899 tested (81 survived, 17 timed out)
Mutation testing 5% (elapsed: ~14m, remaining: ~3h 41m) 113/1899 tested (82 survived, 17 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 39m) 115/1899 tested (84 survived, 17 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 40m) 116/1899 tested (85 survived, 17 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 38m) 118/1899 tested (87 survived, 17 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 39m) 119/1899 tested (88 survived, 17 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 37m) 121/1899 tested (90 survived, 17 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 32m) 125/1899 tested (91 survived, 17 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 33m) 126/1899 tested (92 survived, 17 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 32m) 128/1899 tested (94 survived, 17 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 25m) 133/1899 tested (94 survived, 17 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 28m) 133/1899 tested (94 survived, 17 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 15m) 142/1899 tested (94 survived, 18 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 12m) 146/1899 tested (94 survived, 18 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 11m) 148/1899 tested (96 survived, 18 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 11m) 149/1899 tested (97 survived, 18 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 11m) 151/1899 tested (99 survived, 18 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 11m) 152/1899 tested (100 survived, 18 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 10m) 154/1899 tested (102 survived, 18 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 11m) 155/1899 tested (103 survived, 18 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 10m) 157/1899 tested (105 survived, 18 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 10m) 158/1899 tested (106 survived, 18 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 10m) 160/1899 tested (108 survived, 18 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 10m) 161/1899 tested (109 survived, 18 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 11m) 162/1899 tested (110 survived, 18 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 10m) 164/1899 tested (112 survived, 18 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 10m) 165/1899 tested (113 survived, 18 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 10m) 167/1899 tested (115 survived, 18 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 10m) 168/1899 tested (116 survived, 18 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 9m) 170/1899 tested (118 survived, 18 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~3h 10m) 171/1899 tested (119 survived, 18 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 9m) 173/1899 tested (121 survived, 18 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 10m) 174/1899 tested (122 survived, 18 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 9m) 176/1899 tested (124 survived, 18 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 9m) 177/1899 tested (125 survived, 18 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 8m) 179/1899 tested (127 survived, 18 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 9m) 180/1899 tested (128 survived, 18 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 8m) 182/1899 tested (130 survived, 18 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 9m) 183/1899 tested (131 survived, 18 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 8m) 185/1899 tested (133 survived, 18 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 8m) 186/1899 tested (134 survived, 18 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 9m) 187/1899 tested (135 survived, 18 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 8m) 189/1899 tested (137 survived, 18 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 8m) 190/1899 tested (138 survived, 18 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 8m) 192/1899 tested (140 survived, 18 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 8m) 193/1899 tested (141 survived, 18 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 7m) 195/1899 tested (143 survived, 18 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 8m) 196/1899 tested (144 survived, 18 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 7m) 198/1899 tested (146 survived, 18 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 7m) 199/1899 tested (147 survived, 18 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 7m) 201/1899 tested (149 survived, 18 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 7m) 202/1899 tested (150 survived, 18 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 6m) 204/1899 tested (152 survived, 18 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 7m) 205/1899 tested (153 survived, 18 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 6m) 207/1899 tested (155 survived, 18 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 6m) 208/1899 tested (156 survived, 18 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 6m) 210/1899 tested (158 survived, 18 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 6m) 211/1899 tested (159 survived, 18 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 7m) 212/1899 tested (160 survived, 18 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 6m) 214/1899 tested (162 survived, 18 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 6m) 215/1899 tested (163 survived, 18 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 6m) 217/1899 tested (165 survived, 18 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 3m) 221/1899 tested (166 survived, 18 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 3m) 222/1899 tested (166 survived, 18 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 4m) 223/1899 tested (166 survived, 18 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 3m) 225/1899 tested (167 survived, 18 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 3m) 226/1899 tested (168 survived, 18 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 3m) 228/1899 tested (170 survived, 18 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 1m) 231/1899 tested (171 survived, 18 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 2m) 232/1899 tested (172 survived, 18 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 1m) 234/1899 tested (174 survived, 18 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 1m) 235/1899 tested (175 survived, 18 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 1m) 237/1899 tested (177 survived, 18 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 1m) 238/1899 tested (178 survived, 18 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 0m) 240/1899 tested (180 survived, 18 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 1m) 241/1899 tested (181 survived, 18 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 0m) 243/1899 tested (183 survived, 18 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 0m) 244/1899 tested (184 survived, 18 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 0m) 246/1899 tested (186 survived, 18 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~3h 0m) 247/1899 tested (187 survived, 18 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~3h 0m) 249/1899 tested (189 survived, 18 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~3h 0m) 250/1899 tested (190 survived, 18 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 59m) 252/1899 tested (192 survived, 18 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 59m) 253/1899 tested (193 survived, 18 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 59m) 255/1899 tested (195 survived, 18 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 59m) 256/1899 tested (196 survived, 18 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 59m) 257/1899 tested (197 survived, 18 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 59m) 259/1899 tested (199 survived, 18 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 59m) 260/1899 tested (200 survived, 18 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 59m) 262/1899 tested (202 survived, 18 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 59m) 263/1899 tested (203 survived, 18 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~2h 58m) 265/1899 tested (205 survived, 18 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 59m) 266/1899 tested (206 survived, 18 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 58m) 268/1899 tested (208 survived, 18 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 58m) 269/1899 tested (209 survived, 18 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 58m) 271/1899 tested (211 survived, 18 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 58m) 272/1899 tested (212 survived, 18 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 57m) 274/1899 tested (214 survived, 18 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 58m) 275/1899 tested (215 survived, 18 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 57m) 277/1899 tested (217 survived, 18 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 57m) 278/1899 tested (218 survived, 18 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 57m) 280/1899 tested (220 survived, 18 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 57m) 281/1899 tested (221 survived, 18 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~2h 57m) 282/1899 tested (222 survived, 18 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~2h 57m) 284/1899 tested (224 survived, 18 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 57m) 285/1899 tested (225 survived, 18 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 56m) 287/1899 tested (227 survived, 18 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 57m) 288/1899 tested (228 survived, 18 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 56m) 290/1899 tested (230 survived, 18 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 56m) 291/1899 tested (231 survived, 18 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 56m) 293/1899 tested (233 survived, 18 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 56m) 294/1899 tested (234 survived, 18 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 56m) 296/1899 tested (236 survived, 18 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 56m) 297/1899 tested (237 survived, 18 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 55m) 299/1899 tested (239 survived, 18 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 55m) 300/1899 tested (240 survived, 18 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 55m) 302/1899 tested (242 survived, 18 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 55m) 303/1899 tested (243 survived, 18 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 55m) 304/1899 tested (244 survived, 18 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 55m) 306/1899 tested (246 survived, 18 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 55m) 307/1899 tested (247 survived, 18 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 53m) 311/1899 tested (248 survived, 18 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 53m) 313/1899 tested (250 survived, 18 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 53m) 314/1899 tested (251 survived, 18 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 52m) 316/1899 tested (253 survived, 18 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 53m) 317/1899 tested (254 survived, 18 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 52m) 319/1899 tested (256 survived, 18 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 52m) 320/1899 tested (257 survived, 18 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 52m) 322/1899 tested (259 survived, 18 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 52m) 323/1899 tested (260 survived, 18 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 51m) 325/1899 tested (262 survived, 18 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 52m) 326/1899 tested (263 survived, 18 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 51m) 328/1899 tested (265 survived, 18 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 51m) 329/1899 tested (266 survived, 18 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 51m) 331/1899 tested (268 survived, 18 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 51m) 332/1899 tested (269 survived, 18 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 51m) 333/1899 tested (270 survived, 18 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 51m) 335/1899 tested (272 survived, 18 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 50m) 337/1899 tested (273 survived, 18 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 50m) 339/1899 tested (275 survived, 18 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 50m) 340/1899 tested (276 survived, 18 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 49m) 342/1899 tested (278 survived, 18 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 50m) 343/1899 tested (279 survived, 18 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 49m) 345/1899 tested (281 survived, 18 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 49m) 346/1899 tested (282 survived, 18 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 49m) 348/1899 tested (284 survived, 18 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 49m) 349/1899 tested (285 survived, 18 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 49m) 350/1899 tested (286 survived, 18 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 49m) 352/1899 tested (288 survived, 18 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 49m) 353/1899 tested (289 survived, 18 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 48m) 355/1899 tested (291 survived, 18 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 47m) 358/1899 tested (292 survived, 18 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 47m) 360/1899 tested (292 survived, 18 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 47m) 362/1899 tested (292 survived, 18 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 46m) 364/1899 tested (292 survived, 18 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 46m) 365/1899 tested (292 survived, 18 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 46m) 366/1899 tested (292 survived, 18 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 46m) 367/1899 tested (292 survived, 18 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 47m) 368/1899 tested (292 survived, 19 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 47m) 368/1899 tested (292 survived, 19 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 47m) 369/1899 tested (292 survived, 20 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 48m) 370/1899 tested (292 survived, 21 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 48m) 370/1899 tested (292 survived, 21 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 46m) 376/1899 tested (292 survived, 22 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 42m) 384/1899 tested (292 survived, 22 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 42m) 386/1899 tested (292 survived, 22 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 42m) 387/1899 tested (292 survived, 23 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 42m) 387/1899 tested (292 survived, 23 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 41m) 391/1899 tested (292 survived, 24 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 41m) 391/1899 tested (292 survived, 24 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 42m) 392/1899 tested (292 survived, 25 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 41m) 394/1899 tested (292 survived, 26 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 41m) 395/1899 tested (293 survived, 26 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 41m) 397/1899 tested (295 survived, 26 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 41m) 398/1899 tested (296 survived, 26 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 39m) 403/1899 tested (297 survived, 26 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 40m) 403/1899 tested (297 survived, 26 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 39m) 405/1899 tested (297 survived, 27 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 39m) 407/1899 tested (299 survived, 27 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 39m) 408/1899 tested (300 survived, 27 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 40m) 408/1899 tested (300 survived, 27 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 39m) 410/1899 tested (300 survived, 28 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 39m) 411/1899 tested (300 survived, 29 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 40m) 412/1899 tested (301 survived, 29 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 39m) 414/1899 tested (303 survived, 29 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 39m) 415/1899 tested (304 survived, 29 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 39m) 417/1899 tested (306 survived, 29 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 39m) 418/1899 tested (307 survived, 29 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 39m) 420/1899 tested (309 survived, 29 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 39m) 421/1899 tested (310 survived, 29 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 38m) 423/1899 tested (312 survived, 29 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 38m) 424/1899 tested (313 survived, 29 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 38m) 426/1899 tested (315 survived, 29 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 38m) 427/1899 tested (316 survived, 29 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 38m) 429/1899 tested (318 survived, 29 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 38m) 430/1899 tested (319 survived, 29 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 38m) 431/1899 tested (320 survived, 29 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 37m) 433/1899 tested (322 survived, 29 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 38m) 434/1899 tested (323 survived, 29 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 37m) 436/1899 tested (325 survived, 29 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 37m) 437/1899 tested (326 survived, 29 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 37m) 439/1899 tested (328 survived, 29 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 37m) 439/1899 tested (328 survived, 29 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 38m) 440/1899 tested (328 survived, 30 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 38m) 441/1899 tested (328 survived, 31 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 38m) 441/1899 tested (328 survived, 31 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 38m) 442/1899 tested (328 survived, 32 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 38m) 444/1899 tested (330 survived, 32 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 38m) 445/1899 tested (331 survived, 32 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 38m) 446/1899 tested (331 survived, 33 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 39m) 446/1899 tested (331 survived, 33 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 39m) 447/1899 tested (331 survived, 34 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 39m) 448/1899 tested (331 survived, 35 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 38m) 450/1899 tested (331 survived, 35 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 39m) 450/1899 tested (331 survived, 35 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 39m) 451/1899 tested (331 survived, 36 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 38m) 454/1899 tested (331 survived, 37 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 39m) 454/1899 tested (331 survived, 37 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 39m) 455/1899 tested (331 survived, 38 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 39m) 456/1899 tested (331 survived, 39 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 39m) 457/1899 tested (332 survived, 39 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 38m) 459/1899 tested (334 survived, 39 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 39m) 460/1899 tested (335 survived, 39 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 38m) 462/1899 tested (337 survived, 39 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 38m) 463/1899 tested (338 survived, 39 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 38m) 464/1899 tested (339 survived, 39 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 37m) 467/1899 tested (341 survived, 39 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 37m) 469/1899 tested (341 survived, 39 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 37m) 470/1899 tested (341 survived, 39 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 37m) 471/1899 tested (341 survived, 39 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 37m) 472/1899 tested (341 survived, 39 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 37m) 473/1899 tested (342 survived, 39 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 37m) 475/1899 tested (344 survived, 39 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 37m) 476/1899 tested (345 survived, 39 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 37m) 477/1899 tested (346 survived, 39 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 37m) 479/1899 tested (348 survived, 39 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 37m) 480/1899 tested (349 survived, 39 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 36m) 482/1899 tested (351 survived, 39 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 36m) 483/1899 tested (352 survived, 39 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 36m) 485/1899 tested (354 survived, 39 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 36m) 486/1899 tested (355 survived, 39 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 36m) 488/1899 tested (357 survived, 39 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 36m) 489/1899 tested (358 survived, 39 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 35m) 491/1899 tested (360 survived, 39 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 35m) 492/1899 tested (361 survived, 39 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 35m) 494/1899 tested (363 survived, 39 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 35m) 495/1899 tested (364 survived, 39 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 35m) 497/1899 tested (366 survived, 39 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 35m) 498/1899 tested (367 survived, 39 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 35m) 499/1899 tested (368 survived, 39 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 34m) 501/1899 tested (370 survived, 39 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 34m) 502/1899 tested (371 survived, 39 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 34m) 504/1899 tested (373 survived, 39 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 34m) 505/1899 tested (374 survived, 39 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 34m) 507/1899 tested (376 survived, 39 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 34m) 508/1899 tested (377 survived, 39 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 33m) 510/1899 tested (379 survived, 39 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 33m) 511/1899 tested (380 survived, 39 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 33m) 513/1899 tested (382 survived, 39 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 33m) 514/1899 tested (383 survived, 39 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 33m) 516/1899 tested (385 survived, 39 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 33m) 517/1899 tested (386 survived, 39 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 32m) 519/1899 tested (388 survived, 39 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 32m) 520/1899 tested (389 survived, 39 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 32m) 522/1899 tested (391 survived, 39 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 32m) 523/1899 tested (392 survived, 39 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 32m) 524/1899 tested (393 survived, 39 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 32m) 526/1899 tested (395 survived, 39 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 32m) 527/1899 tested (396 survived, 39 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 31m) 529/1899 tested (398 survived, 39 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 31m) 530/1899 tested (399 survived, 39 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 31m) 532/1899 tested (401 survived, 39 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 31m) 533/1899 tested (402 survived, 39 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 31m) 535/1899 tested (404 survived, 39 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 31m) 536/1899 tested (405 survived, 39 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 30m) 538/1899 tested (407 survived, 39 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 30m) 539/1899 tested (408 survived, 39 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 30m) 541/1899 tested (410 survived, 39 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 30m) 542/1899 tested (411 survived, 39 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 30m) 544/1899 tested (413 survived, 39 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 30m) 545/1899 tested (414 survived, 39 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 29m) 547/1899 tested (416 survived, 39 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 29m) 548/1899 tested (417 survived, 39 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 30m) 549/1899 tested (418 survived, 39 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 29m) 551/1899 tested (420 survived, 39 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 29m) 552/1899 tested (421 survived, 39 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 29m) 554/1899 tested (423 survived, 39 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 29m) 555/1899 tested (424 survived, 39 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 28m) 557/1899 tested (426 survived, 39 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 29m) 558/1899 tested (427 survived, 39 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 28m) 560/1899 tested (429 survived, 39 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 28m) 561/1899 tested (430 survived, 39 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 28m) 563/1899 tested (432 survived, 39 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 28m) 564/1899 tested (433 survived, 39 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 28m) 565/1899 tested (434 survived, 39 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 28m) 566/1899 tested (434 survived, 40 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 28m) 566/1899 tested (434 survived, 40 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 28m) 567/1899 tested (434 survived, 41 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 28m) 568/1899 tested (434 survived, 42 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 29m) 568/1899 tested (434 survived, 42 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 29m) 569/1899 tested (434 survived, 43 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 29m) 570/1899 tested (434 survived, 44 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 29m) 570/1899 tested (434 survived, 44 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 29m) 571/1899 tested (434 survived, 45 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 29m) 573/1899 tested (436 survived, 45 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 29m) 574/1899 tested (437 survived, 45 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 28m) 576/1899 tested (439 survived, 45 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 28m) 577/1899 tested (440 survived, 45 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 28m) 579/1899 tested (442 survived, 45 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 28m) 580/1899 tested (443 survived, 45 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 28m) 582/1899 tested (445 survived, 45 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 28m) 583/1899 tested (446 survived, 45 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 27m) 587/1899 tested (447 survived, 45 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 27m) 587/1899 tested (447 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 26m) 590/1899 tested (448 survived, 46 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 25m) 594/1899 tested (449 survived, 46 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 25m) 595/1899 tested (450 survived, 46 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 25m) 596/1899 tested (451 survived, 46 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 25m) 598/1899 tested (451 survived, 46 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 25m) 599/1899 tested (451 survived, 46 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 25m) 600/1899 tested (452 survived, 46 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 25m) 602/1899 tested (454 survived, 46 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 25m) 602/1899 tested (454 survived, 46 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 25m) 603/1899 tested (454 survived, 47 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 25m) 604/1899 tested (454 survived, 48 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 25m) 604/1899 tested (454 survived, 48 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 25m) 606/1899 tested (454 survived, 49 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 25m) 607/1899 tested (454 survived, 49 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 25m) 607/1899 tested (454 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 25m) 608/1899 tested (454 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 25m) 609/1899 tested (454 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 25m) 610/1899 tested (454 survived, 50 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 25m) 611/1899 tested (454 survived, 50 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 26m) 611/1899 tested (454 survived, 50 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 26m) 612/1899 tested (454 survived, 51 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 25m) 614/1899 tested (456 survived, 51 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 25m) 615/1899 tested (457 survived, 51 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 25m) 616/1899 tested (458 survived, 51 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 25m) 617/1899 tested (458 survived, 52 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 26m) 617/1899 tested (458 survived, 52 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 26m) 618/1899 tested (458 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 26m) 619/1899 tested (458 survived, 54 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 26m) 619/1899 tested (458 survived, 54 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 620/1899 tested (458 survived, 55 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 621/1899 tested (458 survived, 55 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 622/1899 tested (458 survived, 55 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 623/1899 tested (458 survived, 55 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 623/1899 tested (458 survived, 55 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 624/1899 tested (458 survived, 55 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 26m) 625/1899 tested (458 survived, 55 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 26m) 626/1899 tested (458 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 26m) 627/1899 tested (458 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 26m) 628/1899 tested (458 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 26m) 629/1899 tested (458 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 26m) 631/1899 tested (460 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 26m) 632/1899 tested (461 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 634/1899 tested (463 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 635/1899 tested (464 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 636/1899 tested (464 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 637/1899 tested (464 survived, 56 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 638/1899 tested (465 survived, 56 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 25m) 639/1899 tested (465 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 639/1899 tested (465 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 640/1899 tested (465 survived, 58 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 641/1899 tested (465 survived, 58 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 642/1899 tested (465 survived, 59 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 642/1899 tested (465 survived, 59 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 643/1899 tested (465 survived, 60 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 644/1899 tested (465 survived, 61 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 644/1899 tested (465 survived, 61 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 645/1899 tested (465 survived, 62 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 26m) 646/1899 tested (465 survived, 63 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 26m) 647/1899 tested (466 survived, 63 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 26m) 648/1899 tested (466 survived, 64 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 648/1899 tested (466 survived, 64 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 649/1899 tested (466 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 649/1899 tested (466 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 650/1899 tested (466 survived, 66 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 651/1899 tested (466 survived, 67 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 651/1899 tested (466 survived, 67 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 652/1899 tested (466 survived, 68 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 653/1899 tested (466 survived, 69 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 653/1899 tested (466 survived, 69 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 654/1899 tested (466 survived, 70 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 655/1899 tested (466 survived, 71 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 28m) 655/1899 tested (466 survived, 71 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 28m) 656/1899 tested (466 survived, 72 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 28m) 657/1899 tested (466 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 28m) 658/1899 tested (467 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 27m) 660/1899 tested (469 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 27m) 661/1899 tested (470 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 27m) 663/1899 tested (472 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 27m) 664/1899 tested (473 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 26m) 666/1899 tested (475 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 26m) 667/1899 tested (476 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 26m) 669/1899 tested (478 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 26m) 670/1899 tested (479 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 26m) 672/1899 tested (481 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 26m) 673/1899 tested (482 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 25m) 675/1899 tested (484 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 25m) 676/1899 tested (485 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 25m) 678/1899 tested (487 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 25m) 679/1899 tested (488 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 25m) 680/1899 tested (489 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 24m) 682/1899 tested (491 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 24m) 683/1899 tested (492 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 24m) 685/1899 tested (494 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 24m) 686/1899 tested (495 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 24m) 688/1899 tested (497 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 24m) 689/1899 tested (498 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 23m) 691/1899 tested (500 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 23m) 692/1899 tested (501 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 23m) 694/1899 tested (503 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 23m) 695/1899 tested (504 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 22m) 697/1899 tested (506 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 22m) 698/1899 tested (507 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 22m) 700/1899 tested (509 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 22m) 701/1899 tested (510 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 22m) 703/1899 tested (512 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 22m) 704/1899 tested (513 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 21m) 705/1899 tested (514 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 21m) 707/1899 tested (516 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 21m) 708/1899 tested (517 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 21m) 710/1899 tested (519 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 21m) 711/1899 tested (520 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 20m) 713/1899 tested (522 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 20m) 714/1899 tested (523 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 25m, remaining: ~2h 20m) 716/1899 tested (525 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 25m, remaining: ~2h 20m) 717/1899 tested (526 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 25m, remaining: ~2h 20m) 719/1899 tested (528 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 25m, remaining: ~2h 20m) 720/1899 tested (529 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 19m) 722/1899 tested (531 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 19m) 723/1899 tested (532 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 19m) 725/1899 tested (534 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 19m) 726/1899 tested (535 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 19m) 727/1899 tested (536 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 18m) 729/1899 tested (538 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 18m) 730/1899 tested (539 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 17m) 734/1899 tested (541 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 27m, remaining: ~2h 17m) 737/1899 tested (542 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 27m, remaining: ~2h 17m) 738/1899 tested (543 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 27m, remaining: ~2h 16m) 740/1899 tested (545 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 16m) 741/1899 tested (546 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 16m) 743/1899 tested (548 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 16m) 744/1899 tested (549 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 16m) 746/1899 tested (551 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 15m) 747/1899 tested (552 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 15m) 748/1899 tested (553 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 15m) 750/1899 tested (555 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 15m) 751/1899 tested (556 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 15m) 753/1899 tested (558 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 29m, remaining: ~2h 15m) 754/1899 tested (559 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 29m, remaining: ~2h 14m) 756/1899 tested (561 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 29m, remaining: ~2h 14m) 757/1899 tested (562 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 29m, remaining: ~2h 14m) 759/1899 tested (564 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 14m) 760/1899 tested (565 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 14m) 762/1899 tested (567 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 13m) 763/1899 tested (568 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 13m) 765/1899 tested (570 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 13m) 766/1899 tested (571 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 13m) 768/1899 tested (572 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 12m) 772/1899 tested (573 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 12m) 774/1899 tested (575 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 31m, remaining: ~2h 11m) 775/1899 tested (576 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 31m, remaining: ~2h 11m) 777/1899 tested (578 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 31m, remaining: ~2h 11m) 778/1899 tested (579 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 11m) 780/1899 tested (581 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 11m) 781/1899 tested (582 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 10m) 783/1899 tested (584 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 10m) 785/1899 tested (585 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 10m) 787/1899 tested (585 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 9m) 790/1899 tested (586 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 9m) 792/1899 tested (588 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 9m) 793/1899 tested (589 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 8m) 795/1899 tested (591 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 33m, remaining: ~2h 8m) 796/1899 tested (592 survived, 73 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 8m) 798/1899 tested (594 survived, 73 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 8m) 799/1899 tested (595 survived, 73 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 8m) 801/1899 tested (597 survived, 73 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 8m) 802/1899 tested (598 survived, 73 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 8m) 802/1899 tested (598 survived, 73 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 8m) 804/1899 tested (599 survived, 74 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 8m) 804/1899 tested (599 survived, 74 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 8m) 805/1899 tested (599 survived, 75 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 8m) 806/1899 tested (599 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 8m) 806/1899 tested (599 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 8m) 807/1899 tested (599 survived, 77 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 8m) 808/1899 tested (599 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 8m) 809/1899 tested (600 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 7m) 811/1899 tested (602 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 7m) 812/1899 tested (603 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 6m) 816/1899 tested (604 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 35m, remaining: ~2h 6m) 817/1899 tested (605 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 6m) 819/1899 tested (607 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 6m) 820/1899 tested (608 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 6m) 822/1899 tested (610 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 6m) 823/1899 tested (611 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 5m) 825/1899 tested (613 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 5m) 826/1899 tested (614 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 5m) 828/1899 tested (616 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 5m) 829/1899 tested (617 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 5m) 831/1899 tested (619 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 5m) 832/1899 tested (620 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 4m) 834/1899 tested (622 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 4m) 835/1899 tested (623 survived, 78 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 4m) 837/1899 tested (625 survived, 78 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 4m) 838/1899 tested (626 survived, 78 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 4m) 839/1899 tested (627 survived, 78 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 3m) 841/1899 tested (629 survived, 78 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 3m) 842/1899 tested (630 survived, 78 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 3m) 844/1899 tested (632 survived, 78 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 3m) 845/1899 tested (633 survived, 78 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 3m) 847/1899 tested (635 survived, 78 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 3m) 848/1899 tested (636 survived, 78 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 2m) 850/1899 tested (638 survived, 78 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 2m) 851/1899 tested (639 survived, 78 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 2m) 853/1899 tested (641 survived, 78 timed out)
Mutation testing 44% (elapsed: ~1h 40m, remaining: ~2h 2m) 854/1899 tested (642 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 2m) 856/1899 tested (644 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 1m) 857/1899 tested (645 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 1m) 859/1899 tested (647 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 1m) 862/1899 tested (648 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 1m) 863/1899 tested (649 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 0m) 865/1899 tested (651 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 0m) 866/1899 tested (652 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 0m) 868/1899 tested (654 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 0m) 868/1899 tested (654 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 0m) 869/1899 tested (654 survived, 79 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 0m) 870/1899 tested (654 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 0m) 870/1899 tested (654 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 0m) 871/1899 tested (654 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 0m) 873/1899 tested (656 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 42m, remaining: ~1h 59m) 876/1899 tested (657 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 42m, remaining: ~1h 59m) 877/1899 tested (658 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 42m, remaining: ~1h 59m) 879/1899 tested (660 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~1h 59m) 880/1899 tested (661 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~1h 58m) 882/1899 tested (663 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~1h 58m) 883/1899 tested (664 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~1h 58m) 885/1899 tested (666 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~1h 58m) 886/1899 tested (667 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~1h 58m) 888/1899 tested (669 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~1h 58m) 889/1899 tested (670 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~1h 57m) 891/1899 tested (672 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~1h 57m) 892/1899 tested (673 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 44m, remaining: ~1h 57m) 893/1899 tested (674 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 44m, remaining: ~1h 57m) 895/1899 tested (676 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 44m, remaining: ~1h 57m) 896/1899 tested (677 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 57m) 898/1899 tested (679 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 56m) 899/1899 tested (680 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 56m) 901/1899 tested (682 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 56m) 902/1899 tested (683 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 56m) 904/1899 tested (685 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 56m) 905/1899 tested (686 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 55m) 907/1899 tested (688 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 55m) 908/1899 tested (689 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 55m) 910/1899 tested (691 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 55m) 911/1899 tested (692 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 46m, remaining: ~1h 55m) 912/1899 tested (693 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 46m, remaining: ~1h 55m) 914/1899 tested (693 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 55m) 915/1899 tested (693 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 55m) 916/1899 tested (693 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 54m) 918/1899 tested (693 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 54m) 919/1899 tested (693 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 54m) 921/1899 tested (694 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 54m) 922/1899 tested (695 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 53m) 924/1899 tested (697 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 53m) 925/1899 tested (698 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 53m) 927/1899 tested (700 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 53m) 928/1899 tested (701 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 53m) 930/1899 tested (703 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 48m, remaining: ~1h 53m) 931/1899 tested (704 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 53m) 932/1899 tested (705 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 52m) 934/1899 tested (707 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 52m) 935/1899 tested (708 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 52m) 937/1899 tested (710 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 52m) 938/1899 tested (711 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 52m) 940/1899 tested (713 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 51m) 941/1899 tested (714 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 51m) 943/1899 tested (716 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 51m) 944/1899 tested (717 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 51m) 946/1899 tested (719 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 51m) 947/1899 tested (720 survived, 81 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 50m) 949/1899 tested (722 survived, 81 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 50m) 950/1899 tested (723 survived, 81 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 50m) 952/1899 tested (725 survived, 81 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 50m) 953/1899 tested (726 survived, 81 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 50m) 955/1899 tested (728 survived, 81 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 50m) 956/1899 tested (729 survived, 81 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 50m) 957/1899 tested (730 survived, 81 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 49m) 959/1899 tested (732 survived, 81 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 49m) 960/1899 tested (733 survived, 81 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 49m) 962/1899 tested (735 survived, 81 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 49m) 963/1899 tested (736 survived, 81 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 49m) 965/1899 tested (738 survived, 81 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 48m) 966/1899 tested (739 survived, 81 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 48m) 968/1899 tested (741 survived, 81 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 48m) 969/1899 tested (742 survived, 81 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 48m) 971/1899 tested (744 survived, 81 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 48m) 972/1899 tested (745 survived, 81 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 47m) 974/1899 tested (747 survived, 81 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 47m) 975/1899 tested (748 survived, 81 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 47m) 977/1899 tested (750 survived, 81 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 47m) 978/1899 tested (751 survived, 81 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 47m) 980/1899 tested (753 survived, 81 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 47m) 981/1899 tested (754 survived, 81 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 47m) 982/1899 tested (755 survived, 81 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 46m) 984/1899 tested (757 survived, 81 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 46m) 985/1899 tested (758 survived, 81 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 46m) 987/1899 tested (760 survived, 81 timed out)
Mutation testing 52% (elapsed: ~1h 55m, remaining: ~1h 46m) 988/1899 tested (761 survived, 81 timed out)
Mutation testing 52% (elapsed: ~1h 55m, remaining: ~1h 46m) 990/1899 tested (763 survived, 81 timed out)
Mutation testing 52% (elapsed: ~1h 55m, remaining: ~1h 45m) 991/1899 tested (764 survived, 81 timed out)
Mutation testing 52% (elapsed: ~1h 55m, remaining: ~1h 45m) 993/1899 tested (766 survived, 81 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 45m) 994/1899 tested (767 survived, 81 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 45m) 996/1899 tested (769 survived, 81 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 45m) 997/1899 tested (770 survived, 81 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 44m) 999/1899 tested (772 survived, 81 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 44m) 1000/1899 tested (773 survived, 81 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 44m) 1002/1899 tested (775 survived, 81 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 44m) 1003/1899 tested (776 survived, 81 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 44m) 1005/1899 tested (778 survived, 81 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 44m) 1006/1899 tested (779 survived, 81 timed out)
Mutation testing 53% (elapsed: ~1h 57m, remaining: ~1h 44m) 1007/1899 tested (780 survived, 81 timed out)
Mutation testing 53% (elapsed: ~1h 57m, remaining: ~1h 43m) 1009/1899 tested (782 survived, 81 timed out)
Mutation testing 53% (elapsed: ~1h 57m, remaining: ~1h 43m) 1010/1899 tested (783 survived, 81 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 43m) 1012/1899 tested (785 survived, 81 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 43m) 1013/1899 tested (786 survived, 81 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 43m) 1015/1899 tested (788 survived, 81 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 42m) 1016/1899 tested (789 survived, 81 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 42m) 1018/1899 tested (791 survived, 81 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 42m) 1019/1899 tested (792 survived, 81 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 42m) 1021/1899 tested (794 survived, 81 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 42m) 1022/1899 tested (795 survived, 81 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 41m) 1024/1899 tested (797 survived, 81 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 41m) 1025/1899 tested (798 survived, 81 timed out)
Mutation testing 54% (elapsed: ~1h 59m, remaining: ~1h 41m) 1027/1899 tested (800 survived, 81 timed out)
Mutation testing 54% (elapsed: ~1h 59m, remaining: ~1h 41m) 1028/1899 tested (801 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 41m) 1030/1899 tested (803 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 41m) 1031/1899 tested (804 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 41m) 1032/1899 tested (805 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 40m) 1034/1899 tested (807 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 40m) 1035/1899 tested (808 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 40m) 1037/1899 tested (810 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 40m) 1038/1899 tested (811 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 40m) 1040/1899 tested (813 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 40m) 1041/1899 tested (814 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 39m) 1043/1899 tested (816 survived, 81 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 39m) 1044/1899 tested (817 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 1m, remaining: ~1h 39m) 1046/1899 tested (819 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 39m) 1047/1899 tested (820 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 38m) 1049/1899 tested (822 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 38m) 1050/1899 tested (823 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 38m) 1052/1899 tested (825 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 38m) 1053/1899 tested (826 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 38m) 1055/1899 tested (828 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 38m) 1056/1899 tested (829 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 38m) 1057/1899 tested (830 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 37m) 1059/1899 tested (832 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 37m) 1060/1899 tested (833 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 37m) 1062/1899 tested (835 survived, 81 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 37m) 1063/1899 tested (836 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 37m) 1065/1899 tested (838 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 37m) 1066/1899 tested (839 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 36m) 1068/1899 tested (841 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 36m) 1069/1899 tested (842 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 36m) 1071/1899 tested (844 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 36m) 1072/1899 tested (845 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 36m) 1074/1899 tested (847 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 35m) 1075/1899 tested (848 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 35m) 1077/1899 tested (850 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 35m) 1078/1899 tested (851 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 35m) 1080/1899 tested (853 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 35m) 1081/1899 tested (854 survived, 81 timed out)
Mutation testing 56% (elapsed: ~2h 6m, remaining: ~1h 35m) 1082/1899 tested (855 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 34m) 1084/1899 tested (857 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 34m) 1085/1899 tested (858 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 34m) 1087/1899 tested (860 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 34m) 1088/1899 tested (861 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 34m) 1090/1899 tested (863 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 34m) 1091/1899 tested (864 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 33m) 1093/1899 tested (866 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 33m) 1094/1899 tested (867 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 33m) 1096/1899 tested (869 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 33m) 1097/1899 tested (870 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 33m) 1099/1899 tested (872 survived, 81 timed out)
Mutation testing 57% (elapsed: ~2h 8m, remaining: ~1h 32m) 1100/1899 tested (873 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 32m) 1102/1899 tested (875 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 32m) 1103/1899 tested (876 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 32m) 1105/1899 tested (878 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 32m) 1106/1899 tested (879 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 32m) 1107/1899 tested (880 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 31m) 1109/1899 tested (882 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 31m) 1110/1899 tested (883 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 31m) 1112/1899 tested (885 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 31m) 1113/1899 tested (886 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 31m) 1115/1899 tested (888 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 31m) 1116/1899 tested (889 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 30m) 1118/1899 tested (891 survived, 81 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 30m) 1119/1899 tested (892 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 30m) 1121/1899 tested (894 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 30m) 1122/1899 tested (895 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 30m) 1124/1899 tested (897 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 30m) 1125/1899 tested (898 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 11m, remaining: ~1h 29m) 1127/1899 tested (900 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 11m, remaining: ~1h 29m) 1128/1899 tested (901 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 11m, remaining: ~1h 29m) 1130/1899 tested (903 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 11m, remaining: ~1h 29m) 1131/1899 tested (904 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 11m, remaining: ~1h 29m) 1132/1899 tested (905 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 11m, remaining: ~1h 28m) 1134/1899 tested (907 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 28m) 1135/1899 tested (908 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 28m) 1137/1899 tested (910 survived, 81 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 28m) 1138/1899 tested (911 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 12m, remaining: ~1h 28m) 1140/1899 tested (913 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 12m, remaining: ~1h 28m) 1141/1899 tested (914 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 12m, remaining: ~1h 27m) 1143/1899 tested (916 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 13m, remaining: ~1h 27m) 1144/1899 tested (917 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 13m, remaining: ~1h 27m) 1146/1899 tested (919 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 13m, remaining: ~1h 27m) 1147/1899 tested (920 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 13m, remaining: ~1h 27m) 1149/1899 tested (922 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 13m, remaining: ~1h 27m) 1150/1899 tested (923 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 13m, remaining: ~1h 26m) 1152/1899 tested (925 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 26m) 1153/1899 tested (926 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 26m) 1154/1899 tested (927 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 26m) 1156/1899 tested (929 survived, 81 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 26m) 1157/1899 tested (930 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 14m, remaining: ~1h 25m) 1159/1899 tested (932 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 14m, remaining: ~1h 25m) 1160/1899 tested (933 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 25m) 1162/1899 tested (935 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 25m) 1163/1899 tested (936 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 25m) 1165/1899 tested (938 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 25m) 1166/1899 tested (939 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 24m) 1168/1899 tested (941 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 24m) 1169/1899 tested (942 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 24m) 1171/1899 tested (944 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 24m) 1172/1899 tested (945 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 24m) 1174/1899 tested (947 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 24m) 1175/1899 tested (948 survived, 81 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 23m) 1177/1899 tested (950 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 16m, remaining: ~1h 23m) 1178/1899 tested (951 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 23m) 1179/1899 tested (952 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 23m) 1181/1899 tested (954 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 23m) 1182/1899 tested (955 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 23m) 1184/1899 tested (957 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 22m) 1185/1899 tested (958 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 22m) 1187/1899 tested (960 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 22m) 1188/1899 tested (961 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 22m) 1190/1899 tested (963 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 22m) 1191/1899 tested (964 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 21m) 1193/1899 tested (966 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 21m) 1194/1899 tested (967 survived, 81 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 21m) 1196/1899 tested (969 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 21m) 1197/1899 tested (970 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 21m) 1199/1899 tested (972 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 21m) 1200/1899 tested (973 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 20m) 1202/1899 tested (975 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 20m) 1203/1899 tested (976 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 20m) 1204/1899 tested (977 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 20m) 1206/1899 tested (979 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 20m) 1207/1899 tested (980 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 20m) 1209/1899 tested (982 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 20m) 1210/1899 tested (983 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 19m) 1212/1899 tested (985 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 19m) 1213/1899 tested (986 survived, 81 timed out)
Mutation testing 63% (elapsed: ~2h 21m, remaining: ~1h 19m) 1215/1899 tested (988 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 19m) 1216/1899 tested (989 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 19m) 1218/1899 tested (991 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 18m) 1219/1899 tested (992 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 18m) 1221/1899 tested (994 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 18m) 1222/1899 tested (995 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 22m, remaining: ~1h 18m) 1224/1899 tested (997 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 22m, remaining: ~1h 18m) 1225/1899 tested (998 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 22m, remaining: ~1h 17m) 1227/1899 tested (1000 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 22m, remaining: ~1h 17m) 1228/1899 tested (1001 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 22m, remaining: ~1h 17m) 1229/1899 tested (1002 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 22m, remaining: ~1h 17m) 1231/1899 tested (1004 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 23m, remaining: ~1h 17m) 1232/1899 tested (1005 survived, 81 timed out)
Mutation testing 64% (elapsed: ~2h 23m, remaining: ~1h 17m) 1234/1899 tested (1007 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 17m) 1235/1899 tested (1008 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 16m) 1237/1899 tested (1010 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 16m) 1238/1899 tested (1011 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 16m) 1240/1899 tested (1013 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 24m, remaining: ~1h 16m) 1241/1899 tested (1014 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 24m, remaining: ~1h 16m) 1243/1899 tested (1016 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 24m, remaining: ~1h 15m) 1244/1899 tested (1017 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 24m, remaining: ~1h 15m) 1246/1899 tested (1019 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 24m, remaining: ~1h 15m) 1247/1899 tested (1020 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 24m, remaining: ~1h 15m) 1249/1899 tested (1022 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 25m, remaining: ~1h 15m) 1250/1899 tested (1023 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 25m, remaining: ~1h 15m) 1252/1899 tested (1025 survived, 81 timed out)
Mutation testing 65% (elapsed: ~2h 25m, remaining: ~1h 14m) 1253/1899 tested (1026 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 14m) 1254/1899 tested (1027 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 14m) 1256/1899 tested (1029 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 14m) 1257/1899 tested (1030 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 26m, remaining: ~1h 14m) 1259/1899 tested (1032 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 26m, remaining: ~1h 14m) 1260/1899 tested (1033 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 26m, remaining: ~1h 13m) 1262/1899 tested (1035 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 26m, remaining: ~1h 13m) 1263/1899 tested (1036 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 26m, remaining: ~1h 13m) 1265/1899 tested (1038 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 26m, remaining: ~1h 13m) 1266/1899 tested (1039 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 27m, remaining: ~1h 13m) 1268/1899 tested (1041 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 27m, remaining: ~1h 13m) 1269/1899 tested (1042 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 27m, remaining: ~1h 12m) 1271/1899 tested (1044 survived, 81 timed out)
Mutation testing 66% (elapsed: ~2h 27m, remaining: ~1h 12m) 1272/1899 tested (1045 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 27m, remaining: ~1h 12m) 1274/1899 tested (1047 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 27m, remaining: ~1h 12m) 1275/1899 tested (1048 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 28m, remaining: ~1h 12m) 1277/1899 tested (1050 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 28m, remaining: ~1h 11m) 1278/1899 tested (1051 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 28m, remaining: ~1h 11m) 1279/1899 tested (1052 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 28m, remaining: ~1h 11m) 1281/1899 tested (1054 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 28m, remaining: ~1h 11m) 1282/1899 tested (1055 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 28m, remaining: ~1h 11m) 1284/1899 tested (1057 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 11m) 1285/1899 tested (1058 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 10m) 1287/1899 tested (1060 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 10m) 1288/1899 tested (1061 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 10m) 1290/1899 tested (1063 survived, 81 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 10m) 1291/1899 tested (1064 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 29m, remaining: ~1h 10m) 1293/1899 tested (1066 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 30m, remaining: ~1h 10m) 1294/1899 tested (1067 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 30m, remaining: ~1h 9m) 1296/1899 tested (1069 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 30m, remaining: ~1h 9m) 1297/1899 tested (1070 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 30m, remaining: ~1h 9m) 1299/1899 tested (1072 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 30m, remaining: ~1h 9m) 1300/1899 tested (1073 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 30m, remaining: ~1h 9m) 1301/1899 tested (1074 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 9m) 1303/1899 tested (1076 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 8m) 1304/1899 tested (1077 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 8m) 1306/1899 tested (1079 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 8m) 1307/1899 tested (1080 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 8m) 1309/1899 tested (1082 survived, 81 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 8m) 1310/1899 tested (1083 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 32m, remaining: ~1h 8m) 1312/1899 tested (1085 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 32m, remaining: ~1h 7m) 1313/1899 tested (1086 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 32m, remaining: ~1h 7m) 1315/1899 tested (1088 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 32m, remaining: ~1h 7m) 1316/1899 tested (1089 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 32m, remaining: ~1h 7m) 1318/1899 tested (1091 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 32m, remaining: ~1h 7m) 1319/1899 tested (1092 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 33m, remaining: ~1h 6m) 1321/1899 tested (1094 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 33m, remaining: ~1h 6m) 1322/1899 tested (1095 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 33m, remaining: ~1h 6m) 1324/1899 tested (1097 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 33m, remaining: ~1h 6m) 1325/1899 tested (1098 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 33m, remaining: ~1h 6m) 1326/1899 tested (1099 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 33m, remaining: ~1h 6m) 1328/1899 tested (1101 survived, 81 timed out)
Mutation testing 69% (elapsed: ~2h 34m, remaining: ~1h 6m) 1329/1899 tested (1102 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 34m, remaining: ~1h 5m) 1331/1899 tested (1104 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 34m, remaining: ~1h 5m) 1332/1899 tested (1105 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 34m, remaining: ~1h 5m) 1334/1899 tested (1107 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 34m, remaining: ~1h 5m) 1335/1899 tested (1108 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 34m, remaining: ~1h 5m) 1337/1899 tested (1110 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 35m, remaining: ~1h 4m) 1338/1899 tested (1111 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 35m, remaining: ~1h 4m) 1340/1899 tested (1113 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 35m, remaining: ~1h 4m) 1341/1899 tested (1114 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 35m, remaining: ~1h 4m) 1343/1899 tested (1116 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 35m, remaining: ~1h 4m) 1344/1899 tested (1117 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 35m, remaining: ~1h 4m) 1346/1899 tested (1119 survived, 81 timed out)
Mutation testing 70% (elapsed: ~2h 36m, remaining: ~1h 3m) 1347/1899 tested (1120 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 36m, remaining: ~1h 3m) 1349/1899 tested (1122 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 36m, remaining: ~1h 3m) 1350/1899 tested (1123 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 36m, remaining: ~1h 3m) 1351/1899 tested (1124 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 36m, remaining: ~1h 3m) 1353/1899 tested (1126 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 36m, remaining: ~1h 3m) 1354/1899 tested (1127 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 37m, remaining: ~1h 2m) 1356/1899 tested (1129 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 37m, remaining: ~1h 2m) 1357/1899 tested (1130 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 37m, remaining: ~1h 2m) 1359/1899 tested (1132 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 37m, remaining: ~1h 2m) 1360/1899 tested (1133 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 37m, remaining: ~1h 2m) 1362/1899 tested (1135 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 37m, remaining: ~1h 2m) 1363/1899 tested (1136 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 38m, remaining: ~1h 1m) 1365/1899 tested (1138 survived, 81 timed out)
Mutation testing 71% (elapsed: ~2h 38m, remaining: ~1h 1m) 1366/1899 tested (1139 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 38m, remaining: ~1h 1m) 1368/1899 tested (1141 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 38m, remaining: ~1h 1m) 1369/1899 tested (1142 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 38m, remaining: ~1h 1m) 1371/1899 tested (1144 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 38m, remaining: ~1h 1m) 1372/1899 tested (1145 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 39m, remaining: ~1h 0m) 1373/1899 tested (1146 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 39m, remaining: ~1h 0m) 1375/1899 tested (1148 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 39m, remaining: ~1h 0m) 1376/1899 tested (1149 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 39m, remaining: ~1h 0m) 1378/1899 tested (1151 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 39m, remaining: ~1h 0m) 1379/1899 tested (1152 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 39m, remaining: ~59m) 1381/1899 tested (1154 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 40m, remaining: ~59m) 1382/1899 tested (1155 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 40m, remaining: ~59m) 1384/1899 tested (1157 survived, 81 timed out)
Mutation testing 72% (elapsed: ~2h 40m, remaining: ~59m) 1385/1899 tested (1158 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 40m, remaining: ~59m) 1387/1899 tested (1160 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 40m, remaining: ~58m) 1389/1899 tested (1161 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 40m, remaining: ~58m) 1390/1899 tested (1162 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~58m) 1392/1899 tested (1164 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~58m) 1393/1899 tested (1165 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~58m) 1395/1899 tested (1167 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~58m) 1396/1899 tested (1168 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~57m) 1398/1899 tested (1170 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~57m) 1399/1899 tested (1171 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 42m, remaining: ~57m) 1401/1899 tested (1173 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 42m, remaining: ~57m) 1402/1899 tested (1174 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 42m, remaining: ~57m) 1404/1899 tested (1176 survived, 81 timed out)
Mutation testing 73% (elapsed: ~2h 42m, remaining: ~57m) 1405/1899 tested (1177 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 42m, remaining: ~56m) 1407/1899 tested (1179 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 42m, remaining: ~56m) 1408/1899 tested (1180 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~56m) 1410/1899 tested (1182 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~56m) 1411/1899 tested (1183 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~56m) 1413/1899 tested (1185 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~56m) 1414/1899 tested (1186 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~55m) 1415/1899 tested (1187 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~55m) 1417/1899 tested (1189 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 44m, remaining: ~55m) 1418/1899 tested (1190 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 44m, remaining: ~55m) 1420/1899 tested (1192 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 44m, remaining: ~55m) 1421/1899 tested (1193 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 44m, remaining: ~55m) 1423/1899 tested (1195 survived, 81 timed out)
Mutation testing 74% (elapsed: ~2h 44m, remaining: ~54m) 1424/1899 tested (1196 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 44m, remaining: ~54m) 1426/1899 tested (1198 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~54m) 1427/1899 tested (1199 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~54m) 1429/1899 tested (1201 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~54m) 1430/1899 tested (1202 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~53m) 1432/1899 tested (1204 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~53m) 1433/1899 tested (1205 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~53m) 1435/1899 tested (1207 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 46m, remaining: ~53m) 1436/1899 tested (1208 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 46m, remaining: ~53m) 1438/1899 tested (1210 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 46m, remaining: ~53m) 1439/1899 tested (1211 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 46m, remaining: ~53m) 1440/1899 tested (1212 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 46m, remaining: ~52m) 1442/1899 tested (1214 survived, 81 timed out)
Mutation testing 75% (elapsed: ~2h 46m, remaining: ~52m) 1443/1899 tested (1215 survived, 81 timed out)
Mutation testing 76% (elapsed: ~2h 47m, remaining: ~52m) 1445/1899 tested (1217 survived, 81 timed out)
Mutation testing 76% (elapsed: ~2h 47m, remaining: ~52m) 1446/1899 tested (1218 survived, 81 timed out)
Mutation testing 76% (elapsed: ~2h 47m, remaining: ~52m) 1448/1899 tested (1220 survived, 81 timed out)
Mutation testing 76% (elapsed: ~2h 47m, remaining: ~52m) 1449/1899 tested (1221 survived, 81 timed out)
Mutation testing 76% (elapsed: ~2h 47m, remaining: ~51m) 1451/1899 tested (1223 survived, 81 timed out)
Mutation testing 76% (elapsed: ~2h 47m, remaining: ~51m) 1452/1899 tested (1224 survived, 81 timed out)
Mutation testing 76% (elapsed: ~2h 48m, remaining: ~51m) 1454/1899 tested (1226 survived, 81 timed out)
Mutation testing 76% (elapsed: ~2h 48m, remaining: ~51m) 1455/1899 tested (1227 survived, 81 timed out)
Mutation testing 76% (elapsed: ~2h 48m, remaining: ~51m) 1457/1899 tested (1229 survived, 81 timed out)
Mutation testing 76% (elapsed: ~2h 48m, remaining: ~50m) 1458/1899 tested (1230 survived, 81 timed out)
Mutation testing 76% (elapsed: ~2h 48m, remaining: ~50m) 1460/1899 tested (1232 survived, 81 timed out)
Mutation testing 76% (elapsed: ~2h 48m, remaining: ~50m) 1461/1899 tested (1233 survived, 81 timed out)
Mutation testing 76% (elapsed: ~2h 49m, remaining: ~50m) 1462/1899 tested (1234 survived, 81 timed out)
Mutation testing 77% (elapsed: ~2h 49m, remaining: ~50m) 1464/1899 tested (1236 survived, 81 timed out)
Mutation testing 77% (elapsed: ~2h 49m, remaining: ~50m) 1465/1899 tested (1237 survived, 81 timed out)
Mutation testing 77% (elapsed: ~2h 49m, remaining: ~49m) 1467/1899 tested (1239 survived, 81 timed out)
Mutation testing 77% (elapsed: ~2h 49m, remaining: ~49m) 1468/1899 tested (1240 survived, 81 timed out)
Mutation testing 77% (elapsed: ~2h 49m, remaining: ~49m) 1470/1899 tested (1242 survived, 81 timed out)
Mutation testing 77% (elapsed: ~2h 50m, remaining: ~49m) 1471/1899 tested (1243 survived, 81 timed out)
Mutation testing 77% (elapsed: ~2h 50m, remaining: ~49m) 1473/1899 tested (1245 survived, 81 timed out)
Mutation testing 77% (elapsed: ~2h 50m, remaining: ~49m) 1474/1899 tested (1246 survived, 81 timed out)
Mutation testing 77% (elapsed: ~2h 50m, remaining: ~48m) 1476/1899 tested (1248 survived, 81 timed out)
Mutation testing 77% (elapsed: ~2h 50m, remaining: ~48m) 1477/1899 tested (1249 survived, 81 timed out)
Mutation testing 77% (elapsed: ~2h 50m, remaining: ~48m) 1479/1899 tested (1251 survived, 81 timed out)
Mutation testing 77% (elapsed: ~2h 51m, remaining: ~48m) 1480/1899 tested (1252 survived, 81 timed out)
Mutation testing 78% (elapsed: ~2h 51m, remaining: ~48m) 1482/1899 tested (1254 survived, 81 timed out)
Mutation testing 78% (elapsed: ~2h 51m, remaining: ~48m) 1483/1899 tested (1255 survived, 81 timed out)
Mutation testing 78% (elapsed: ~2h 51m, remaining: ~47m) 1485/1899 tested (1257 survived, 81 timed out)
Mutation testing 78% (elapsed: ~2h 51m, remaining: ~47m) 1486/1899 tested (1258 survived, 81 timed out)
Mutation testing 78% (elapsed: ~2h 51m, remaining: ~47m) 1487/1899 tested (1259 survived, 81 timed out)
Mutation testing 78% (elapsed: ~2h 52m, remaining: ~47m) 1489/1899 tested (1261 survived, 81 timed out)
Mutation testing 78% (elapsed: ~2h 52m, remaining: ~47m) 1490/1899 tested (1262 survived, 81 timed out)
Mutation testing 78% (elapsed: ~2h 52m, remaining: ~47m) 1492/1899 tested (1264 survived, 81 timed out)
Mutation testing 78% (elapsed: ~2h 52m, remaining: ~46m) 1493/1899 tested (1265 survived, 81 timed out)
Mutation testing 78% (elapsed: ~2h 52m, remaining: ~46m) 1495/1899 tested (1267 survived, 81 timed out)
Mutation testing 78% (elapsed: ~2h 52m, remaining: ~46m) 1496/1899 tested (1268 survived, 81 timed out)
Mutation testing 78% (elapsed: ~2h 53m, remaining: ~46m) 1498/1899 tested (1270 survived, 81 timed out)
Mutation testing 78% (elapsed: ~2h 53m, remaining: ~46m) 1499/1899 tested (1271 survived, 81 timed out)
Mutation testing 79% (elapsed: ~2h 53m, remaining: ~45m) 1501/1899 tested (1273 survived, 81 timed out)
Mutation testing 79% (elapsed: ~2h 53m, remaining: ~45m) 1502/1899 tested (1274 survived, 81 timed out)
Mutation testing 79% (elapsed: ~2h 53m, remaining: ~45m) 1504/1899 tested (1276 survived, 81 timed out)
Mutation testing 79% (elapsed: ~2h 53m, remaining: ~45m) 1505/1899 tested (1277 survived, 81 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~45m) 1507/1899 tested (1279 survived, 81 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~45m) 1508/1899 tested (1280 survived, 81 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~44m) 1510/1899 tested (1282 survived, 81 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~44m) 1511/1899 tested (1283 survived, 81 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~44m) 1512/1899 tested (1284 survived, 81 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~44m) 1514/1899 tested (1286 survived, 81 timed out)
Mutation testing 79% (elapsed: ~2h 55m, remaining: ~44m) 1515/1899 tested (1287 survived, 81 timed out)
Mutation testing 79% (elapsed: ~2h 55m, remaining: ~44m) 1517/1899 tested (1289 survived, 81 timed out)
Mutation testing 79% (elapsed: ~2h 55m, remaining: ~44m) 1518/1899 tested (1290 survived, 81 timed out)
Mutation testing 80% (elapsed: ~2h 55m, remaining: ~43m) 1520/1899 tested (1292 survived, 81 timed out)
Mutation testing 80% (elapsed: ~2h 55m, remaining: ~43m) 1521/1899 tested (1293 survived, 81 timed out)
Mutation testing 80% (elapsed: ~2h 55m, remaining: ~43m) 1523/1899 tested (1295 survived, 81 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~43m) 1524/1899 tested (1296 survived, 81 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~43m) 1526/1899 tested (1298 survived, 81 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~42m) 1527/1899 tested (1299 survived, 81 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~42m) 1529/1899 tested (1301 survived, 81 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~42m) 1530/1899 tested (1302 survived, 81 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~42m) 1532/1899 tested (1304 survived, 81 timed out)
Mutation testing 80% (elapsed: ~2h 57m, remaining: ~42m) 1533/1899 tested (1305 survived, 81 timed out)
Mutation testing 80% (elapsed: ~2h 57m, remaining: ~42m) 1535/1899 tested (1307 survived, 81 timed out)
Mutation testing 80% (elapsed: ~2h 57m, remaining: ~41m) 1536/1899 tested (1308 survived, 81 timed out)
Mutation testing 80% (elapsed: ~2h 57m, remaining: ~41m) 1537/1899 tested (1309 survived, 81 timed out)
Mutation testing 81% (elapsed: ~2h 57m, remaining: ~41m) 1539/1899 tested (1311 survived, 81 timed out)
Mutation testing 81% (elapsed: ~2h 57m, remaining: ~41m) 1540/1899 tested (1312 survived, 81 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~41m) 1542/1899 tested (1314 survived, 81 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~41m) 1543/1899 tested (1315 survived, 81 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~40m) 1545/1899 tested (1317 survived, 81 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~40m) 1546/1899 tested (1318 survived, 81 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~40m) 1548/1899 tested (1320 survived, 81 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~40m) 1549/1899 tested (1321 survived, 81 timed out)
Mutation testing 81% (elapsed: ~2h 59m, remaining: ~40m) 1551/1899 tested (1323 survived, 81 timed out)
Mutation testing 81% (elapsed: ~2h 59m, remaining: ~40m) 1552/1899 tested (1324 survived, 81 timed out)
Mutation testing 81% (elapsed: ~2h 59m, remaining: ~39m) 1554/1899 tested (1326 survived, 81 timed out)
Mutation testing 81% (elapsed: ~2h 59m, remaining: ~39m) 1555/1899 tested (1327 survived, 81 timed out)
Mutation testing 81% (elapsed: ~2h 59m, remaining: ~39m) 1557/1899 tested (1329 survived, 81 timed out)
Mutation testing 82% (elapsed: ~2h 59m, remaining: ~39m) 1558/1899 tested (1330 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~39m) 1559/1899 tested (1331 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~39m) 1561/1899 tested (1333 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~38m) 1562/1899 tested (1334 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~38m) 1564/1899 tested (1336 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~38m) 1565/1899 tested (1337 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~38m) 1567/1899 tested (1339 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 1m, remaining: ~38m) 1568/1899 tested (1340 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 1m, remaining: ~37m) 1570/1899 tested (1342 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 1m, remaining: ~37m) 1571/1899 tested (1343 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 1m, remaining: ~37m) 1573/1899 tested (1345 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 1m, remaining: ~37m) 1574/1899 tested (1346 survived, 81 timed out)
Mutation testing 82% (elapsed: ~3h 1m, remaining: ~37m) 1576/1899 tested (1348 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~37m) 1577/1899 tested (1349 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~36m) 1579/1899 tested (1351 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~36m) 1580/1899 tested (1352 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~36m) 1582/1899 tested (1354 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~36m) 1583/1899 tested (1355 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~36m) 1584/1899 tested (1356 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 3m, remaining: ~36m) 1586/1899 tested (1358 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 3m, remaining: ~36m) 1587/1899 tested (1359 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 3m, remaining: ~35m) 1589/1899 tested (1361 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 3m, remaining: ~35m) 1590/1899 tested (1362 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 3m, remaining: ~35m) 1592/1899 tested (1364 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 3m, remaining: ~35m) 1593/1899 tested (1365 survived, 81 timed out)
Mutation testing 83% (elapsed: ~3h 4m, remaining: ~35m) 1595/1899 tested (1367 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 4m, remaining: ~34m) 1596/1899 tested (1368 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 4m, remaining: ~34m) 1598/1899 tested (1370 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 4m, remaining: ~34m) 1599/1899 tested (1371 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 4m, remaining: ~34m) 1601/1899 tested (1373 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 4m, remaining: ~34m) 1602/1899 tested (1374 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 5m, remaining: ~34m) 1604/1899 tested (1376 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 5m, remaining: ~33m) 1605/1899 tested (1377 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 5m, remaining: ~33m) 1607/1899 tested (1379 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 5m, remaining: ~33m) 1608/1899 tested (1380 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 5m, remaining: ~33m) 1609/1899 tested (1381 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 5m, remaining: ~33m) 1611/1899 tested (1383 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 6m, remaining: ~33m) 1612/1899 tested (1384 survived, 81 timed out)
Mutation testing 84% (elapsed: ~3h 6m, remaining: ~32m) 1614/1899 tested (1386 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 6m, remaining: ~32m) 1615/1899 tested (1387 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 6m, remaining: ~32m) 1617/1899 tested (1389 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 6m, remaining: ~32m) 1618/1899 tested (1390 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 6m, remaining: ~32m) 1620/1899 tested (1392 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 7m, remaining: ~32m) 1621/1899 tested (1393 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 7m, remaining: ~31m) 1623/1899 tested (1395 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 7m, remaining: ~31m) 1624/1899 tested (1396 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 7m, remaining: ~31m) 1626/1899 tested (1398 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 7m, remaining: ~31m) 1627/1899 tested (1399 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 7m, remaining: ~31m) 1629/1899 tested (1401 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 8m, remaining: ~31m) 1630/1899 tested (1402 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 8m, remaining: ~30m) 1631/1899 tested (1403 survived, 81 timed out)
Mutation testing 85% (elapsed: ~3h 8m, remaining: ~30m) 1633/1899 tested (1405 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 8m, remaining: ~30m) 1634/1899 tested (1406 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 8m, remaining: ~30m) 1636/1899 tested (1408 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 8m, remaining: ~30m) 1637/1899 tested (1409 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 9m, remaining: ~29m) 1639/1899 tested (1411 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 9m, remaining: ~29m) 1640/1899 tested (1412 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 9m, remaining: ~29m) 1642/1899 tested (1414 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 9m, remaining: ~29m) 1643/1899 tested (1415 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 9m, remaining: ~29m) 1645/1899 tested (1417 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 9m, remaining: ~29m) 1646/1899 tested (1418 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 10m, remaining: ~28m) 1648/1899 tested (1420 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 10m, remaining: ~28m) 1649/1899 tested (1421 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 10m, remaining: ~28m) 1651/1899 tested (1423 survived, 81 timed out)
Mutation testing 86% (elapsed: ~3h 10m, remaining: ~28m) 1652/1899 tested (1424 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 10m, remaining: ~28m) 1654/1899 tested (1426 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 10m, remaining: ~28m) 1655/1899 tested (1427 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 11m, remaining: ~28m) 1656/1899 tested (1428 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 11m, remaining: ~27m) 1658/1899 tested (1430 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 11m, remaining: ~27m) 1659/1899 tested (1431 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 11m, remaining: ~27m) 1661/1899 tested (1433 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 11m, remaining: ~27m) 1662/1899 tested (1434 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 11m, remaining: ~27m) 1664/1899 tested (1436 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 12m, remaining: ~26m) 1665/1899 tested (1437 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 12m, remaining: ~26m) 1667/1899 tested (1439 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 12m, remaining: ~26m) 1668/1899 tested (1440 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 12m, remaining: ~26m) 1670/1899 tested (1442 survived, 81 timed out)
Mutation testing 87% (elapsed: ~3h 12m, remaining: ~26m) 1671/1899 tested (1443 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 12m, remaining: ~26m) 1673/1899 tested (1445 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 13m, remaining: ~25m) 1674/1899 tested (1446 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 13m, remaining: ~25m) 1676/1899 tested (1448 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 13m, remaining: ~25m) 1677/1899 tested (1449 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 13m, remaining: ~25m) 1678/1899 tested (1450 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 13m, remaining: ~25m) 1680/1899 tested (1452 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 13m, remaining: ~25m) 1681/1899 tested (1453 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 14m, remaining: ~24m) 1683/1899 tested (1455 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 14m, remaining: ~24m) 1684/1899 tested (1456 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 14m, remaining: ~24m) 1686/1899 tested (1458 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 14m, remaining: ~24m) 1687/1899 tested (1459 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 14m, remaining: ~24m) 1689/1899 tested (1461 survived, 81 timed out)
Mutation testing 88% (elapsed: ~3h 14m, remaining: ~24m) 1690/1899 tested (1462 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 15m, remaining: ~23m) 1692/1899 tested (1464 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 15m, remaining: ~23m) 1693/1899 tested (1465 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 15m, remaining: ~23m) 1695/1899 tested (1467 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 15m, remaining: ~23m) 1696/1899 tested (1468 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 15m, remaining: ~23m) 1698/1899 tested (1470 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 15m, remaining: ~23m) 1699/1899 tested (1471 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 16m, remaining: ~22m) 1701/1899 tested (1473 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 16m, remaining: ~22m) 1702/1899 tested (1474 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 16m, remaining: ~22m) 1703/1899 tested (1475 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 16m, remaining: ~22m) 1705/1899 tested (1477 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 16m, remaining: ~22m) 1706/1899 tested (1478 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 16m, remaining: ~22m) 1708/1899 tested (1480 survived, 81 timed out)
Mutation testing 89% (elapsed: ~3h 17m, remaining: ~21m) 1709/1899 tested (1481 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 17m, remaining: ~21m) 1711/1899 tested (1483 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 17m, remaining: ~21m) 1712/1899 tested (1484 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 17m, remaining: ~21m) 1714/1899 tested (1486 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 17m, remaining: ~21m) 1715/1899 tested (1487 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 17m, remaining: ~20m) 1717/1899 tested (1489 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 18m, remaining: ~20m) 1718/1899 tested (1490 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 18m, remaining: ~20m) 1720/1899 tested (1492 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 18m, remaining: ~20m) 1721/1899 tested (1493 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 18m, remaining: ~20m) 1723/1899 tested (1495 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 18m, remaining: ~20m) 1724/1899 tested (1496 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 18m, remaining: ~20m) 1725/1899 tested (1497 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 19m, remaining: ~19m) 1727/1899 tested (1499 survived, 81 timed out)
Mutation testing 90% (elapsed: ~3h 19m, remaining: ~19m) 1728/1899 tested (1500 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 19m, remaining: ~19m) 1730/1899 tested (1502 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 19m, remaining: ~19m) 1731/1899 tested (1503 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 19m, remaining: ~19m) 1733/1899 tested (1505 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 19m, remaining: ~19m) 1734/1899 tested (1506 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 20m, remaining: ~18m) 1736/1899 tested (1508 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 20m, remaining: ~18m) 1737/1899 tested (1509 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 20m, remaining: ~18m) 1739/1899 tested (1511 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 20m, remaining: ~18m) 1740/1899 tested (1512 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 20m, remaining: ~18m) 1742/1899 tested (1514 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 20m, remaining: ~17m) 1743/1899 tested (1515 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 21m, remaining: ~17m) 1745/1899 tested (1517 survived, 81 timed out)
Mutation testing 91% (elapsed: ~3h 21m, remaining: ~17m) 1746/1899 tested (1518 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 21m, remaining: ~17m) 1748/1899 tested (1520 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 21m, remaining: ~17m) 1749/1899 tested (1521 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 21m, remaining: ~17m) 1750/1899 tested (1522 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 21m, remaining: ~16m) 1752/1899 tested (1524 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 22m, remaining: ~16m) 1753/1899 tested (1525 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 22m, remaining: ~16m) 1755/1899 tested (1527 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 22m, remaining: ~16m) 1756/1899 tested (1528 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 22m, remaining: ~16m) 1758/1899 tested (1530 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 22m, remaining: ~16m) 1759/1899 tested (1531 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 22m, remaining: ~15m) 1761/1899 tested (1533 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 23m, remaining: ~15m) 1762/1899 tested (1534 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 23m, remaining: ~15m) 1764/1899 tested (1536 survived, 81 timed out)
Mutation testing 92% (elapsed: ~3h 23m, remaining: ~15m) 1765/1899 tested (1537 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 23m, remaining: ~15m) 1767/1899 tested (1539 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 23m, remaining: ~15m) 1768/1899 tested (1540 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 23m, remaining: ~14m) 1770/1899 tested (1542 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 24m, remaining: ~14m) 1771/1899 tested (1543 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 24m, remaining: ~14m) 1773/1899 tested (1545 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 24m, remaining: ~14m) 1774/1899 tested (1546 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 24m, remaining: ~14m) 1775/1899 tested (1547 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 24m, remaining: ~14m) 1777/1899 tested (1549 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 24m, remaining: ~13m) 1778/1899 tested (1550 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 25m, remaining: ~13m) 1780/1899 tested (1552 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 25m, remaining: ~13m) 1781/1899 tested (1553 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 25m, remaining: ~13m) 1783/1899 tested (1555 survived, 81 timed out)
Mutation testing 93% (elapsed: ~3h 25m, remaining: ~13m) 1784/1899 tested (1556 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 25m, remaining: ~13m) 1786/1899 tested (1558 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 25m, remaining: ~12m) 1787/1899 tested (1559 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 26m, remaining: ~12m) 1789/1899 tested (1561 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 26m, remaining: ~12m) 1790/1899 tested (1562 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 26m, remaining: ~12m) 1792/1899 tested (1564 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 26m, remaining: ~12m) 1793/1899 tested (1565 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 26m, remaining: ~11m) 1795/1899 tested (1567 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 26m, remaining: ~11m) 1796/1899 tested (1568 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 27m, remaining: ~11m) 1798/1899 tested (1570 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 27m, remaining: ~11m) 1799/1899 tested (1571 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 27m, remaining: ~11m) 1800/1899 tested (1572 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 27m, remaining: ~11m) 1802/1899 tested (1574 survived, 81 timed out)
Mutation testing 94% (elapsed: ~3h 27m, remaining: ~11m) 1803/1899 tested (1575 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 27m, remaining: ~10m) 1805/1899 tested (1577 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 28m, remaining: ~10m) 1806/1899 tested (1578 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 28m, remaining: ~10m) 1808/1899 tested (1580 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 28m, remaining: ~10m) 1809/1899 tested (1581 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 28m, remaining: ~10m) 1811/1899 tested (1583 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 28m, remaining: ~10m) 1812/1899 tested (1584 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 28m, remaining: ~9m) 1814/1899 tested (1586 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 29m, remaining: ~9m) 1815/1899 tested (1587 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 29m, remaining: ~9m) 1817/1899 tested (1589 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 29m, remaining: ~9m) 1818/1899 tested (1590 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 29m, remaining: ~9m) 1820/1899 tested (1592 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 29m, remaining: ~8m) 1821/1899 tested (1593 survived, 81 timed out)
Mutation testing 95% (elapsed: ~3h 29m, remaining: ~8m) 1823/1899 tested (1595 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 30m, remaining: ~8m) 1824/1899 tested (1596 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 30m, remaining: ~8m) 1825/1899 tested (1597 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 30m, remaining: ~8m) 1827/1899 tested (1599 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 30m, remaining: ~8m) 1828/1899 tested (1600 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 30m, remaining: ~7m) 1830/1899 tested (1602 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 30m, remaining: ~7m) 1831/1899 tested (1603 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 31m, remaining: ~7m) 1833/1899 tested (1605 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 31m, remaining: ~7m) 1834/1899 tested (1606 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 31m, remaining: ~7m) 1836/1899 tested (1608 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 31m, remaining: ~7m) 1837/1899 tested (1609 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 31m, remaining: ~6m) 1839/1899 tested (1611 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 31m, remaining: ~6m) 1840/1899 tested (1612 survived, 81 timed out)
Mutation testing 96% (elapsed: ~3h 32m, remaining: ~6m) 1842/1899 tested (1614 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 32m, remaining: ~6m) 1843/1899 tested (1615 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 32m, remaining: ~6m) 1845/1899 tested (1617 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 32m, remaining: ~6m) 1846/1899 tested (1618 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 32m, remaining: ~5m) 1848/1899 tested (1620 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 32m, remaining: ~5m) 1849/1899 tested (1621 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 33m, remaining: ~5m) 1850/1899 tested (1622 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 33m, remaining: ~5m) 1852/1899 tested (1624 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 33m, remaining: ~5m) 1853/1899 tested (1625 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 33m, remaining: ~5m) 1855/1899 tested (1627 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 33m, remaining: ~4m) 1856/1899 tested (1628 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 33m, remaining: ~4m) 1858/1899 tested (1630 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 34m, remaining: ~4m) 1859/1899 tested (1631 survived, 81 timed out)
Mutation testing 97% (elapsed: ~3h 34m, remaining: ~4m) 1861/1899 tested (1633 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 34m, remaining: ~4m) 1862/1899 tested (1634 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 34m, remaining: ~4m) 1864/1899 tested (1636 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 34m, remaining: ~3m) 1865/1899 tested (1637 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 34m, remaining: ~3m) 1867/1899 tested (1639 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 35m, remaining: ~3m) 1868/1899 tested (1640 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 35m, remaining: ~3m) 1870/1899 tested (1642 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 35m, remaining: ~3m) 1871/1899 tested (1643 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 35m, remaining: ~3m) 1872/1899 tested (1644 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 35m, remaining: ~2m) 1874/1899 tested (1646 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 35m, remaining: ~2m) 1875/1899 tested (1647 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 36m, remaining: ~2m) 1877/1899 tested (1649 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 36m, remaining: ~2m) 1878/1899 tested (1650 survived, 81 timed out)
Mutation testing 98% (elapsed: ~3h 36m, remaining: ~2m) 1880/1899 tested (1652 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 36m, remaining: ~2m) 1881/1899 tested (1653 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 36m, remaining: ~1m) 1883/1899 tested (1655 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 36m, remaining: ~1m) 1884/1899 tested (1656 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 37m, remaining: ~1m) 1886/1899 tested (1658 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 37m, remaining: ~1m) 1887/1899 tested (1659 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 37m, remaining: ~1m) 1889/1899 tested (1661 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 37m, remaining: ~1m) 1890/1899 tested (1662 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 37m, remaining: <1m) 1892/1899 tested (1664 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 37m, remaining: <1m) 1893/1899 tested (1665 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 38m, remaining: <1m) 1895/1899 tested (1667 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 38m, remaining: <1m) 1896/1899 tested (1668 survived, 81 timed out)
Mutation testing 99% (elapsed: ~3h 38m, remaining: <1m) 1897/1899 tested (1669 survived, 81 timed out)

All tests
  ✓ All tests (killed 147)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof exports === "undefined") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", "undefined");

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", {
+     promise: "undefined"
+   });

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", () => {
+     throw new Error("Test error");
+   });

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           null("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("bug", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(null, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("error", definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", definition());

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {});

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function (x) {
+     return x * x;
+   });

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(() => {});

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(null);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(NaN);

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses === undefined) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses !== undefined) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!!ses.ok()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!isNodeJS = !ses.ok()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self === "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window === "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (undefined) {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   0();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length > 0) {

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length === 0) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isNodeJS === false) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isNodeJS + 1) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (0 + domain) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.somethingOtherThanExit) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if ((domain - 1).exit) {

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(requestPortTick());

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush(1));

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(42, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout("foo", 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(null, 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain && false) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain || true) {

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (domain && false) {

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               1 + 1();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               "hello world"();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               undefined();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (!flushing || true) {

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (flushing != true) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "object") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "function") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(location);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(top);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(self);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(this, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(0, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, 3);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, function () {
+     throw "error";
+   });

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, "example");

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(1);

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate("flush");

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(function () {});

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port3.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage({});

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(undefined, 0);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, "flush");

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush(0), 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush(false), 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush(null), 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 5 - 3);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (!this.flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (this.flushing !== flushing) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length == 2) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length < 1) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index > this) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index <= this) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (this[index]) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index--) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (length--) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index + 1 < length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index === 0; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 1) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index + 2) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (!foo[bar]) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (bar.length < 0) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if ({} + bar) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] + 1, index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] * 2, index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(null, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, index, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], 0);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], -1);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; this.length - i > 0; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i = i + 2) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] + value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (typeof this[i] === value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.bundles(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.contains(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect + 1(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, basis, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, [value, index, self]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp[callback].call(value, index)));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp[callback](value, index)));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp[callback](thisp[index], value)));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(cb(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(true, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(0, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, this[index - 1], index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, this[index - 2], index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, this[index] = value, index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, 0, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, this.length, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, null, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, Math.random()));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, null));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, undefined));

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var i in object) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in "myObject") {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, -1)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, "propName")) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, object)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object[key + 1])) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(key + 1 in object)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object[key] = undefined)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(undefined, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty("sdfhgsg", key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, value)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, Object)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, null)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(i + 1);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_hasOwnProperty(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           Object.prototype.toString(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_create(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(true) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(false) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue === "function") {

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && !promise.stack && typeof error === "object" && error !== null && error.stack

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && typeof error === "object" && error !== null && error.stack

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.error; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise + 1; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise || true; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; null !== p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p !== null; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!q; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p && q; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; 1; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source + 1) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = 0) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (!p.stack && error.__minimumStackCounter__ === p.stackCounter) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack === true && error.__minimumStackCounter__ === p.stackCounter) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (typeof p.stack === "undefined" && error.__minimumStackCounter__ === p.stackCounter) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: null,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(42, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty("ERROR", "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(function () {
+     console.log("Error");
+   }, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__maximumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__counter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stackCounter);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.valueOf());

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.split(':')[1]);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.lineNumber);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.columnNumber);

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\t");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join(" ");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\v");

[Survived] PrecomputedMutator
q.js:397:21
-           var stack = filterStackString(concatedStacks);
+           var stack = undefined + concatedStacks(concatedStacks);

[Survived] PrecomputedMutator
q.js:397:21
-           var stack = filterStackString(concatedStacks);
+           var stack = null + concatedStacks(concatedStacks);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.length);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.join(", "));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.reverse());

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           property_define(error, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_define(error, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           this.defineProperty(error, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: "modified stack",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack.replace("original", "modified"),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: null,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:403:17
-       var lines = stackString.split("\n");
+       var lines = stackString.substr("\n");

[Survived] PrecomputedMutator
q.js:403:17
-       var lines = stackString.split("\n");
+       var lines = stackString.replace("\n");

[Survived] PrecomputedMutator
q.js:403:17
-       var lines = stackString.split("\n");
+       var lines = stackString.concat("\n");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var j = 0; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; lines.length - i; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i + 1) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 1) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (line.indexOf("From previous event:") === -1 && !isNodeFrame(line)) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (line.charAt(0) !== "A" && !isNodeFrame(line)) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (line.length > 50 && !isNodeFrame(line)) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isExternalFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!!isInternalFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line - 1) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line + 1) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line * 2) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push("QReturnValue(value)");

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push("obj[prop] = descriptor");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.lastIndexOf("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.substr("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.search("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.lastIndexOf("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split("@")[1]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.replace(":", "-"));

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine[0] + stackLine[1]);

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], 'from previous event:'(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(Number(attempt1[2]) + 1)];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(String(attempt1[2]))];

[Survived] PrecomputedMutator
q.js:431:30
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], String(attempt2[2])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(undefined)];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(null)];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(null);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(undefined);

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[0])];

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = fileNameAndLineNumber[1](stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = fileNameAndLineNumber.length(stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = fileNameAndLineNumber[0] + fileNameAndLineNumber[1](stackLine);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine[1]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.length);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split("\n"));

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (typeof fileNameAndLineNumber) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (!Object.keys(fileNameAndLineNumber).length) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber === undefined) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (1) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (0) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (`undefined`) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\n\n");

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("!") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("?") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber > 0) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (typeof fileNameAndLineNumber !== "undefined") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (undefined) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console !== undefined) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console === "object" && typeof console.warn === "function") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.bind(null, arguments));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(function () {
+     return callback.apply(null, arguments);
+   });

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(LOGGER.info("Hello World!"), arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(Object.keys({
+     "key1": "value1"
+   })[0], arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(function () {
+     return "Hello World!";
+   }, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, Array.apply(0, Array(1000)));

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, function () {
+     throw 'Exception in Deeper Promises';
+   });

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, undefined);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (value !== value) {

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op !== "when" || operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[1] + 1);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(promise, args);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages[0]) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (undefined) {

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = promise.resolvedPromise(resolvedPromise);

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (!isPromise(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearterValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(deferredPromise)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(promise)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (!resolvedPromise || resolvedPromise === null) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise && resolvedPromise !== null) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && hasStacks && Math.random() < 0.5) {

[Survived] PrecomputedMutator
q.js:604:29
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack(e.stack.indexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:29
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack + 1(e.stack.indexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:29
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack + e.stack(e.stack.indexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.split("\n").length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") - 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.replace("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(" ") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || !hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!(Q.longStackSupport && hasStacks)) {

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(null, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(new Promise(() => {}), message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(new Error('PLACEHOLDER'), message);

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise == false) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise.contains(false)) {

[Survived] PrecomputedMutator
q.js:646:9
-           become(fulfill(value));
+           resolvedPromise.reject(fulfill(value));

[Survived] PrecomputedMutator
q.js:646:9
-           become(fulfill(value));
+           this.reject(fulfill(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(become(Q.reject(value)));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(become(Q(reject(value))));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(become(Q(value).reflect()));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill({
+     value
+   }));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill([value]));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (progressListeners) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (promise.then) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (messages) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListeners[0](progress);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.message) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.stack) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(null);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(undefined);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(new Error('some error'));

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments[0].length > 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments[0] > 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length >= 2) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.resolvedPromise(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_splice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_push(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(null, 2)));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, -2)));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 1, 2)));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_reduce(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_map(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_filter(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(undefined, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(null, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice("placeholder", 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, x));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.notify(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver != "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (!resolver.isFunction()) {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver() != "function") {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.resolve();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = become();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = Q();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.fulfill, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.fulfill, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve(new Error('rejected')), deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.throw, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify.bind(deferred));

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           reject(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(reason + " WHY this is bad");

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(y + 1);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x - y);

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return none([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, undefined]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x + y === z) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i >= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i !== len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i !== 0; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = i - 1) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, "foobar");

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               null(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               undefined(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i + 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[answerPs.length - i - 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(Q(answerPs[i] + 1)).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(deferred, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(newFunction, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, null);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, undefined);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return 1 + 1(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return 1 - 1(Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.then);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === undefined) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === reject) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === true) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== inspect) {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (function () {
+     return reject();
+   }) {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (function () {
+     throw new Error("Something went wrong");
+   }) {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (function () {
+     return fulfilled();
+   }) {

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call({});

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(() => {});

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.reject, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.race, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(Q.passByCopy, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, - -op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, ~op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op + 1, args);

[Survived] PrecomputedMutator
q.js:813:22
-               result = reject(exception);
+               result = resolve(exception);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(exception.message);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject("\"" + exception + "\"");

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(void 0);

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.prototype) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.reason !== undefined) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "pending") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "rejected" || inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(undefined, self);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(null, self);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong("rejected", self);

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch);

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? "progressed"(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? ""(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? "foo"(value) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed("<value>") : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:878:17
-               if (done) {
+               if (done === true) {

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done === true) {

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(123);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value + 1);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (true) {

[Survived] PrecomputedMutator
q.js:903:17
-                   Q.onerror(e);
+                   Q.onerror = null(e);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.stack);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(reject(e));

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.toJSON());

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.reject(newValue);

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.resolve(newValue);

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               null(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(void 0);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify('');

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(undefined).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(null).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(new Promise()).tap(callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback());

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(null);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(true);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.fcall(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Promise.resolve(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.seq(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(!callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback());

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(null);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcannel(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(rejected(exception));

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(fulfilled);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed.bind(null));

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return undefined(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(undefined).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(0).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(Promise.reject(), rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(() => {}, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, _rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, null, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, void 0);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, Q.resolve(progressed(value)));

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return void 0(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return null(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return {};
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return undefined;
+   });

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return __proto__(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return prototype(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Promise(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Q.reject("error")).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(void 0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q("hello world").thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(false);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     if (typeof reason === "string") {
+       throw new Error(reason);
+     } else {
+       return reason;
+     }
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(null).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(undefined).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(0).thenReject(reason);

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value instanceof Promise) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (Q.isPromise(value.promise)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value.constructor.name === "Promise") {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (1(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(null)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise({})) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(0)) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.value === void 0) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state !== "pending") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state !== "fulfilled" && inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise = 1(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(function () {
+     return;
+   }) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(true) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(null) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && object.inspected().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && object[Symbol.toStringTag] = ' inspect'().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return !this.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.state === "rejected"().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.state !== "fulfilled"().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise === false(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise !== true(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(typeof object !== "object") || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object === undefined) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object !== null) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.done().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.fail().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.caught().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(promise) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(rejection) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(inspected) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && object.isRejected().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && object.state().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && object.isFulfilled().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections || Date.now() >= 1000) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections && Date.now() >= 1000) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections || Date.now() >= 1000) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections == false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections != false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === true) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise) > -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise) >= 0) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(NaN, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, Q.nextTick) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("handledRejection", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejection", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise, 1000);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection123", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejectionRejection", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", null, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.toString(), promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", {}, promise);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, 0);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then());

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack != null) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== void 0) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && "stack" in reason) {

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(Object.assign(reason));

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(console.dir(reason));

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(reason, " ");

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(NaN);

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(null);

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (!array_indexOf(unhandledRejections, promise)) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (promise.isFulfilled()) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (array_indexOf(reportedUnhandledRejections, promise) != -2) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (unhandledRejections[at] != promise) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (promise.isFulfilled()) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledReasons);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledReasons, promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, undefined);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, reportedUnhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport > -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport < -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport + 1) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("fulfilled", Promise.resolve());

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at + 1]);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons.slice(1), promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons.pop(), promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], 5);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], null);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then(function (value) {
+     return value + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(-1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(array_indexOf(unhandledRejections, promise) + 1, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, unhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, null);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 3);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(unhandledReasons.length - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(unhandledReasons[unhandledRejections.indexOf(promise)], 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(unhandledRejections.indexOf(promise) - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, unhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(-2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 3);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at.length, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, unhandledReasons.length - 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, Math.ceil(unhandledReasons.length / 2));

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected && false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected || false) {

[Survived] PrecomputedMutator
q.js:1140:17
-                   untrackRejection(this);
+                   trackRejection(this);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(rejection);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(rejection.promise);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(reason, rejection);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(reason, null);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, "error message");

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, Error());

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === void 0) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (typeof name === 'undefined') {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(NaN, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply("undefined", args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(void 1, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.concat([]));

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, [].concat(args));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(args[0]);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply("some string");

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(4 + 4, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply("hello", args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args[0]);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice(1));

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.length);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args - 1);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, [args]);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return thisp.apply(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return thisp['apply'](thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(this, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(void 0);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(this);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(unevaluated);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args, undefined);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, undefined, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, null, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return JSON(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(12345, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(object * 2, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(object[0], op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op + 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op - 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op * 2, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, undefined);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, Function.prototype.apply.call(args));

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return null(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return ""(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return undefined(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(123).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(Q.reject).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, undefined);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(null).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(0).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, resolved);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, notified);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, now);

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.any().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.none().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.race().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(this);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(0);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return undefined(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.resolve(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array[0]);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration === undefUNED) {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration === "ovf") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration === Q.StopIteration) {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](Math.PI);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb]({});

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject("orange");

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(Q.when(exception));

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (generator.isDone()) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.isPending()) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.isFulfilled()) {

[Survived] PrecomputedMutator
q.js:1303:28
-                       return Q(result.value);
+                       return Q.reject(result.value);

[Survived] PrecomputedMutator
q.js:1303:28
-                       return Q(result.value);
+                       return Q.defer(result.value);

[Survived] PrecomputedMutator
q.js:1303:28
-                       return Q(result.value);
+                       return Q.resolve(result.value);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(promise);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q("result");

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.error);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.resolve);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.reject);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return reject(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.done, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.reject, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.resolve, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, null, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, function () {}, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, Q.reject, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, nop);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, 0(errback));

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = generator[verb] + 1(arg);

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = null(arg);

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = "random-string"(arg);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("string");

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (!isStopIteration(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (!StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (StopIteration()) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration == true(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration === false(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.val)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.message)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(NaN)) {

[Survived] PrecomputedMutator
q.js:1314:32
-                           return Q(exception.value);
+                           return undefined(exception.value);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(null);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(undefined);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(Q());

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.toLowerCase());

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject((exception || "error").toLowerCase());

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception instanceof Error ? exception.message : "error");

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(resolution, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, errback, callback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return reject(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return join(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(undefined, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(false, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, deferred.reject, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, self.reject, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, Q.reject, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, null);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, undefined);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, function () {});

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(0);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.bind(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.test(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(42, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, 0);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(Q.reject);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(null);

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = Null(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind("throw", "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind("argument", "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(null, "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "con");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "length");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "apply");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.reject(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.then(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.done(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, [1, 2, 3](arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, [](arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, [,,](arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(void 0)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice());

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply("" + self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.bind(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(0, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply({}, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, "args");

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, null);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, undefined);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op - args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return null(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return undefined(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return 0(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q({}).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, []);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, "invalid");

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1409:20
-       var deferred = defer();
+       var deferred = foo();

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           result(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.cancel, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op - 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op * 2, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, undefined);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, {});

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key, "foo"]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q("PLACEHOLDER").dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(object[0]).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(object.someProperty).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch(void 0, [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch({}, [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", Q.get(object, []));

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", Q.get(object, key * 2));

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", Q.get(object, key + 1));

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return obj[key]("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return obj.key("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("undefined", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [value]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [object[key]]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key.valueOf()]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("hello", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q[object].dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return object.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return null(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key + 1, value]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value * 2]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("settle", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("throw", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("return", [key, value]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.promise(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("push", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("pop", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("shift", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [object]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [this[key]]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", ["key"]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return Q.reject("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return Q.throw("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return Promise.prototype.throw("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("put", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [value]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", ["value"]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", null);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("send", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("apply", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q({}).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("call", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("apply", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("bind", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, [args]]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args].reverse());

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name.toUpperCase(), args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name.slice(1), args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.promiseDispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatc("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("apply", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, 0]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, name]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args].concat([0]));

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("send", [name, args]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(deferred).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(Q(object).dispatch("post", [name, array_slice(arguments, 2)])).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(Q(deferred).dispatch("post", [name, array_slice(arguments, 2)])).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("put", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("send", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("postNew", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, arguments]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, [].slice.call(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, arguments.slice(2)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(Q.slice(arguments, 2)))]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 2, 5))]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 2, -1))]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_reverse(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 2), 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 0, 1), 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 0, -1), 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return null("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return "hello"("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("put", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("apply", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("get", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments), 1]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(-arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments * 0)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(deferred.resolve([1, 2, 3]), 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, null]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("concat", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args[0]]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, promises]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, promise]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, [args]]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch = null("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply" + 1, [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply" + "toString", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply"[0], [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [array_slice(arguments, 1), void 0]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [name, args]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [args]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return null(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return undefined(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return this(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(null).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q("q").dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply2", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, arguments]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, [array_slice(arguments, 1)]]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, [array_slice(arguments, 1, 1)]]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 1))]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(Array.prototype.slice.call(arguments, 1))]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array.slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(null, 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(undefined, 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([void 0], 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, null)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("all", [array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.resolve("apply", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.reject("apply", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.notify("apply", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("eval", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("typeof", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", this);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", 1);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", null);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice([arguments])]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice([...arguments])]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(function () {
+     return arguments;
+   })]);

[Survived] PrecomputedMutator
q.js:1537:19
-       var promise = Q(object);
+       var promise = Q.reject(object);

[Survived] PrecomputedMutator
q.js:1537:19
-       var promise = Q(object);
+       var promise = undefined(object);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(void 0);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(this);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = void 0(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = null(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice("arguments" + "/0", 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice("args" + "[0]", 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice("args /0/", 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 1 + 2);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2 * 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, true && 1);

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(3 - Math.abs(3 / 4))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(error && error.length)

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_concat(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_length(arguments))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(void 0))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args[0]);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments[1]);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_reverse(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(Object.values(arguments)))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(args(arguments))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(array_slice(arguments)))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(array_slice(arguments, 1)))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch(("promises", []));

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch(("keys", [1, 2, 3]));

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch(("keys", ["a", "b", "c"]));

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return object.dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.allSettled(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.anySettled(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.settled(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(null).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.value).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.name).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("value", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("undefined", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("unassigned", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", undefined);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", "keys");

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [42]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("hello", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("getKeys", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("keys_internal", []);

[Survived] PrecomputedMutator
q.js:1584:24
-           var deferred = defer();
+           var deferred = null();

[Survived] PrecomputedMutator
q.js:1584:24
-           var deferred = defer();
+           var deferred = undefined();

[Survived] PrecomputedMutator
q.js:1584:24
-           var deferred = defer();
+           var deferred = 0();

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect() !== void 0 && (snapshot = promise.inspect()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   isObject(promise) && (snapshot = promise.inspect()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   isPromise(promise) && (snapshot = promise.inspect()).state !== "fulfilled"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   promise === undefined(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   promise === null(promise) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(true) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return true;
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(null) &&

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.value()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.isFulfilled()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.then()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount <= 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (!pendingCount) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               undefined(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.resolve({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.progress({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress + 10
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress * 2
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress - 10
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (!pendingCount) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (!promises.length) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               undefined(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               null(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(Promise.reject());

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return race(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(this == null);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(this.constructor.name);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(valueOf(this));

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === promises.length) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Promise.resolve();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return undefined();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(null, onRejected, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, null, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected, null));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when + 1(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           promise.when(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, promise.then, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, promise.all, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, noop, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, reject, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onResolve);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onReject);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(result + 1);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(result - 1);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(result * 2);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount !== 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   Q.all(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejection.cause);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return resolved(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return rejected(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return pending(this);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled1", "allSettled2");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(Promise.allSettled, "Promise.allSettled", "Q.allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(any, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(defer, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allRejected", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allFulfilled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "anyRejected", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allFulfilled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "any");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(Q.reject(promises));

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(Q(promises).then(void 0, onRejected));

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_slice(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_splice(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(0), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.concat(promises), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.splice(0), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q * Q);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(null, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return never(promise, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return null(promise, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when({
+     foo: 'bar'
+   }, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(function add(a, b) {
+     return a + b;
+   }, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, () => {
+     throw new Exception("Something went wrong");
+   }, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, () => {
+     return "Something went wrong";
+   }, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, () => {
+     return;
+   }, noop);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, onFulfilled);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, onRejected);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function () {});

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(Q.reject());

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(Promise.all([]).then(() => {
+     throw new Error();
+   }));

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q([]).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(null).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(undefined).allSettled();

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = NaN(promise);

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = null(promise);

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = undefined(promise);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise = 1);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function () {
+     throw new Error("Error");
+   }));

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function () {
+     return null;
+   }));

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.fulfill();

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.reject();

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.resolve();

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(null);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise["then"](regardless, regardless);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 1, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void rejected, 1);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, reject(rejected));

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q.reject(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(null).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(undefined).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(promise.reject(), rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, promise.then(void 0, noop));

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, promise.then(noop, void 0));

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, null);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, undefined);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(Promise.reject("error message"), null);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, rejected(null));

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, rejected(Q.reject("Rejection reason")));

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(5, 10);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(true, false);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(undefined).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(null).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, rejection => {
+     deferred.reject(rejection);
+   });

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, () => {
+     deferred.reject(new Error("Progress rejected"));
+   });

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, progress => {
+     if (progress.status === "rejected") {
+       deferred.reject(new Error("Progress rejected"));
+     } else {
+       deferred.notify(progress);
+     }
+   });

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, function progressed() {});

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, function progressed() {});

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(0, 0, function progressed() {});

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return -this.then + deferred.resolve(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return -this.then + this.when(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(this, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(1, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, NaN, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, function () {});

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, undefined);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return "foo"(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return 1 + 1(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return {
+     bar: "baz"
+   }(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Q.reject(new Error("Something went wrong")))["finally"](callback);

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply !== callback.length) {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.prototype !== callback) {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = "undefined"(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = null(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = "test"(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(null);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(false);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(0);

[Survived] PrecomputedMutator
q.js:1787:16
-           return callback.fcall().then(function () {
+           return this.fcall().then(function () {

[Survived] PrecomputedMutator
q.js:1787:16
-           return callback.fcall().then(function () {
+           return Q.fcall().then(function () {

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, rejected);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, true);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, promise, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return deferred(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(this).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(null).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, undefined, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, null, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, rejected);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, Math.random());

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, new Error('Random error'));

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(promise.reject(reason));

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, error);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error = Q.reject(error), promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error = Q.resolve(error), promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error = new Error(error), promise);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, Q.reject());

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, Q.resolve());

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, Q.fcall());

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (true) {

[Survived] PrecomputedMutator
q.js:1810:17
-                   Q.onerror(error);
+                   Q.onerror = null(error);

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, fulfilled, null) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, null, null) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, null, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this + 1(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           "hello"(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(undefined, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, null, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, -Infinity, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, "foo", progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, rejected) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, resolved) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, notify) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(null);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(42, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError());

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms * 2, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms / 2, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, error + 1);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.defer(ms, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.then(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.always(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.never(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q({}).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, "Error");

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error());

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = 42();

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (!error || !"string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if ("string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           null(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           undefined(error);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout("timeoutId");

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve({
+     value: value
+   });

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(function () {});

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout == null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== undefined) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout.valueOf() === void 0) {

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return null(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return true(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return undefined(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q("foo").delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(Q.reject(new Error("bar"))).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(this);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(undefined);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(null);

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               null(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               undefined(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(Promise.reject('error'));

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(void 0);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return {};
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.slice(0));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.concat(args));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.every());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       arguments.push(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       this.push(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(this.reject);

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function (error) {
+     throw error;
+   });

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       deferred.reject(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       deferred.notify(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       deferred.resolve(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(undefined).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(cards.slice(0, 10));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(cards.slice(cards.length - 20, cards.length));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(cards.reverse().slice(0, 10));

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice({}, 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, "hello");

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, new Object());

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return 1 + 1(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(args.length);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(args.reverse());

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = args(arguments);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = varargs(arguments);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(void 0);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(Promise.reject());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject("Error"));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       deferred.reject(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       deferred.notify(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.reverse()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(undefined).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(0, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(void 0, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, NaN);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, undefined);

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.print(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.expand(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(arguments.slice());

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(void 0);

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments.slice(1)));

[Survived] PrecomputedMutator
q.js:1949:24
-           var deferred = defer();
+           var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver() * 2);

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeRejector());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeCallback());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeCallback());

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           identifier(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           A.B(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(() => {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs[0]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.length).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.reject("error"));

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve(undefined));

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(Q.reject(new Error("error")));

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = slice(arguments);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = string_slice(arguments);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = integer_slice(arguments);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(void 0);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(() => {
+     throw new Error('intentional error');
+   });

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(() => 0);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(NaN);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Object.denodeify(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Math.denodeify(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(42, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply("PLACEHOLDER", args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(NaN, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, void 0);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice(0));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.concat());

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(undefined, arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice.length = 0(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(baseArgs.concat(array_slice(arguments)), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(baseArgs.concat(array_slice(args)), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(baseArgs.concat(args), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, "Hello World!");

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 5);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, undefined);

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.unshift(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.filter(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, -1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 10));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(123));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1967:24
-           var deferred = defer();
+           var deferred = new Deferred()();

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           deferred.resolve(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           Q.delay(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           Q.resolve(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply({
+     foo: "bar"
+   }, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, undefined);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           deferred.resolve(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(deferred.resolve).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(deferred.reject).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {
+     throw new Error("different error");
+   }).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply([42]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.concat([null])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(1, arguments);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(...arguments, arguments[0]);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_shift(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(args[0], 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(this[0], 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments.slice(1), 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, array_slice(arguments, -1));

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(42);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 1, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(args.shift(), args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(0, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.length);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat());

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(args.concat([name]));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(args.slice(1).push(name));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.then(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return null(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(42).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("nmake", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("npost", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("ninvoke", args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, "placeholder");

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, 2);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, undefined);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = null(args || []);

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = defer2();

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = defer + 1();

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = null();

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function (err) {
+     throw new Error('error');
+   });

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function (err) {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(Promise.resolve());

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("patch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, args]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, this]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, 42]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(0);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments.length);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(n => n + 1);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments.slice(2), 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([], 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, "hello");

[Survived] PrecomputedMutator
q.js:2020:20
-       var deferred = defer();
+       var deferred = deferred.reject();

[Survived] PrecomputedMutator
q.js:2020:20
-       var deferred = defer();
+       var deferred = null();

[Survived] PrecomputedMutator
q.js:2020:20
-       var deferred = defer();
+       var deferred = undefined();

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       undefined(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       null(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().bind(null));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().toString());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(42());

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs + 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       object[name](object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q("foo").dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(null).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(undefined).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch(undefined, [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("postSubject", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(nodeback);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(this);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(nodeArgs[0], 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(nodeArgs.length, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(nodeArgs.slice(1), 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, args.length);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, args.concat([]));

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, typeof args);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.doResolve());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(Q.always());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(Q.reject());

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("foo", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch(1000, [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [Q.resolve(name)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name.toUpperCase()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(Promise.reject(error));

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return undefined(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return null(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return {}(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(!object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(object + 1).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(object.toString()).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(undefined);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(1 + 2);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify('Hello World');

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback === undefined) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (typeof nodeback !== 'function') {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback("value", null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, undefined);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback("error", value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, 42);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, 1302);

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.reject();

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = {
+     head: Q.resolve,
+     tail: Q.defer
+   }();

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = {
+     head: 42,
+     tail: Q.defer
+   }();

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = null();

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = {}();

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("unknown");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("get");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.tail("tail");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("end");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("next");

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.isResolved(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve("error");

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(new Error("New error message"));

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               closed.resolve(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               null(end);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(closed.resolve(end));

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(Q.reject(end));

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(ends.promise);

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   12.01 |      147 |        81 |       1671 |        0 |        0 |
 q.js     |   12.15 |      147 |        81 |       1648 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         23 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m02:10:26 (3110) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m02:10:26 (3110) INFO MutationTestExecutor[39m Done in 218 minutes 38 seconds.

real	218m40.086s
user	39m39.565s
sys	6m45.646s
