*** using precomputed mutations ***
[32m13:35:01 (3122) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m13:35:01 (3122) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m13:35:01 (3122) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m13:35:01 (3122) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m13:35:01 (3122) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m13:35:02 (3122) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 2007 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.0/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "string"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", null)
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", function () {})
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", "definition")
Mutant 6 in q.js: "promise" replaced with "deferred"
Mutant 7 in q.js: "promise" replaced with "fulfilled"
Mutant 8 in q.js: "promise" replaced with "rejected"
Mutant 9 in q.js: definition replaced with function () {
  throw new Error("This is a buggy function");
}
Mutant 10 in q.js: definition replaced with function () {
  return "This is a buggy function";
}
Mutant 11 in q.js: definition replaced with function () {
  return function () {
    throw new Error("This is a buggy function");
  };
}
Mutant 12 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "function"
Mutant 13 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof module === "undefined"
Mutant 14 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "undefined"
Mutant 15 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.buggy
Mutant 16 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.buggy()
Mutant 17 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.buggy === true
Mutant 18 in q.js: definition replaced with definition()
Mutant 19 in q.js: definition replaced with null
Mutant 20 in q.js: definition replaced with function () {}
Mutant 21 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined"
Mutant 22 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "object"
Mutant 23 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "function"
Mutant 24 in q.js: !ses.ok() replaced with ses.notOk()
Mutant 25 in q.js: !ses.ok() replaced with ses.isNotOk()
Mutant 26 in q.js: !ses.ok() replaced with ses.isOk()
Mutant 27 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined"
Mutant 28 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" ^ typeof self !== "undefined"
Mutant 29 in q.js: captureLine replaced with captureLine + 1
Mutant 30 in q.js: captureLine replaced with captureLine - 1
Mutant 31 in q.js: captureLine replaced with captureLine * 2
Mutant 32 in q.js: head.next replaced with head.next.next
Mutant 33 in q.js: head.next replaced with head.next.next.next
Mutant 34 in q.js: head.next replaced with head.next.next.next.next
Mutant 35 in q.js: domain replaced with domain && domain.exit()
Mutant 36 in q.js: domain replaced with domain || domain.exit()
Mutant 37 in q.js: domain replaced with !domain || domain.exit()
Mutant 38 in q.js: domain.enter replaced with domain.exit
Mutant 39 in q.js: domain.enter replaced with domain.run
Mutant 40 in q.js: domain.enter replaced with domain.bind
Mutant 41 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, undefined)
Mutant 42 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, null)
Mutant 43 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, 0)
Mutant 44 in q.js: task replaced with task + 1
Mutant 45 in q.js: task replaced with task - 1
Mutant 46 in q.js: task replaced with task * 2
Mutant 47 in q.js: domain replaced with null
Mutant 48 in q.js: domain replaced with undefined
Mutant 49 in q.js: domain replaced with {}
Mutant 50 in q.js: laterQueue.length replaced with laterQueue.length + 1
Mutant 51 in q.js: laterQueue.length replaced with laterQueue.length - 1
Mutant 52 in q.js: laterQueue.length replaced with laterQueue.length * 2
Mutant 53 in q.js: laterQueue.pop replaced with laterQueue.shift
Mutant 54 in q.js: laterQueue.pop replaced with laterQueue.length
Mutant 55 in q.js: runSingle replaced with noop
Mutant 56 in q.js: runSingle replaced with undefined
Mutant 57 in q.js: task replaced with null
Mutant 58 in q.js: task replaced with undefined
Mutant 59 in q.js: task replaced with () => {}
Mutant 60 in q.js: task replaced with task + 1
Mutant 61 in q.js: task replaced with task * 2
Mutant 62 in q.js: task replaced with task - 1
Mutant 63 in q.js: isNodeJS replaced with !isNodeJS
Mutant 64 in q.js: isNodeJS replaced with isNodeJS && false
Mutant 65 in q.js: isNodeJS replaced with isNodeJS || true
Mutant 66 in q.js: domain replaced with domain.exit()
Mutant 67 in q.js: domain replaced with domain.enter()
Mutant 68 in q.js: domain replaced with domain.exit() && domain.enter()
Mutant 69 in q.js: domain.exit replaced with domain.enter
Mutant 70 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 71 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 72 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "hello")
Mutant 73 in q.js: setTimeout replaced with setInterval
Mutant 74 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 75 in q.js: flush replaced with flush()
Mutant 76 in q.js: flush replaced with flush(1)
Mutant 77 in q.js: flush replaced with flush(undefined)
Mutant 78 in q.js: 0 replaced with 1
Mutant 79 in q.js: 0 replaced with -1
Mutant 80 in q.js: 0 replaced with Infinity
Mutant 81 in q.js: domain replaced with domain.exit()
Mutant 82 in q.js: domain replaced with domain.enter()
Mutant 83 in q.js: domain.enter replaced with domain.exit
Mutant 84 in q.js: domain replaced with !domain
Mutant 85 in q.js: domain replaced with domain + 1
Mutant 86 in q.js: domain replaced with domain.foo
Mutant 87 in q.js: domain.exit replaced with domain.enter
Mutant 88 in q.js: !flushing replaced with flushing
Mutant 89 in q.js: !flushing replaced with !flushing && true
Mutant 90 in q.js: !flushing replaced with flushing || false
Mutant 91 in q.js: flush replaced with flush()
Mutant 92 in q.js: flush replaced with flush(1)
Mutant 93 in q.js: flush replaced with flush(undefined)
Mutant 94 in q.js: typeof window !== "undefined" replaced with typeof window === "undefined"
Mutant 95 in q.js: typeof window !== "undefined" replaced with typeof window !== "object"
Mutant 96 in q.js: typeof window !== "undefined" replaced with typeof window !== "function"
Mutant 97 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 98 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 99 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(this)
Mutant 100 in q.js: setImmediate.bind replaced with setInterval.bind
Mutant 101 in q.js: setImmediate.bind replaced with requestAnimationFrame.bind
Mutant 102 in q.js: window replaced with null
Mutant 103 in q.js: window replaced with undefined
Mutant 104 in q.js: window replaced with {}
Mutant 105 in q.js: flush replaced with flush()
Mutant 106 in q.js: flush replaced with undefined
Mutant 107 in q.js: flush replaced with null
Mutant 108 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "undefined"
Mutant 109 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "object"
Mutant 110 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "function"
Mutant 111 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 112 in q.js: 0 replaced with 1
Mutant 113 in q.js: 0 replaced with "hello"
Mutant 114 in q.js: 0 replaced with null
Mutant 115 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 116 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 117 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "hello")
Mutant 118 in q.js: setTimeout replaced with setInterval
Mutant 119 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 120 in q.js: flush replaced with flush()
Mutant 121 in q.js: 0 replaced with 1
Mutant 122 in q.js: 0 replaced with -1
Mutant 123 in q.js: 0 replaced with null
Mutant 124 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 125 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 126 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "hello")
Mutant 127 in q.js: setTimeout replaced with setInterval
Mutant 128 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 129 in q.js: flush replaced with flush()
Mutant 130 in q.js: flush replaced with flush(1)
Mutant 131 in q.js: flush replaced with flush(undefined)
Mutant 132 in q.js: 0 replaced with 1
Mutant 133 in q.js: 0 replaced with -1
Mutant 134 in q.js: 0 replaced with null
Mutant 135 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 136 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 137 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 138 in q.js: task replaced with null
Mutant 139 in q.js: task replaced with undefined
Mutant 140 in q.js: task replaced with {}
Mutant 141 in q.js: !flushing replaced with flushing
Mutant 142 in q.js: !flushing replaced with flushing && !flushing
Mutant 143 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[0])
Mutant 144 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[1])
Mutant 145 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[2])
Mutant 146 in q.js: call.apply replaced with call.bind
Mutant 147 in q.js: call.apply replaced with call.call
Mutant 148 in q.js: f replaced with f + 1
Mutant 149 in q.js: f replaced with f * 2
Mutant 150 in q.js: f replaced with f - 1
Mutant 151 in q.js: arguments replaced with [1, 2, 3]
Mutant 152 in q.js: arguments replaced with "hello"
Mutant 153 in q.js: arguments replaced with null
Mutant 154 in q.js: Array.prototype.slice replaced with Array.prototype.reverse
Mutant 155 in q.js: Array.prototype.slice replaced with Array.prototype.splice
Mutant 156 in q.js: Array.prototype.slice replaced with Array.prototype.concat
Mutant 157 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 158 in q.js: arguments.length === 1 replaced with arguments.length === 0
Mutant 159 in q.js: arguments.length === 1 replaced with arguments.length < 1
Mutant 160 in q.js: 1 replaced with 0
Mutant 161 in q.js: 1 replaced with -1
Mutant 162 in q.js: 1 replaced with length - 1
Mutant 163 in q.js: index in this replaced with index > this.length
Mutant 164 in q.js: index in this replaced with index < this.length
Mutant 165 in q.js: index in this replaced with index === this.length
Mutant 166 in q.js: ++index >= length replaced with index > length
Mutant 167 in q.js: ++index >= length replaced with index >= length + 1
Mutant 168 in q.js: ++index >= length replaced with index + 1 >= length
Mutant 169 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index += 2; index < length; index += 2) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 170 in q.js: index < length replaced with index > length
Mutant 171 in q.js: index < length replaced with index <= length
Mutant 172 in q.js: index < length replaced with index >= length
Mutant 173 in q.js: index++ replaced with index--
Mutant 174 in q.js: index++ replaced with index += 2
Mutant 175 in q.js: index++ replaced with index = 0
Mutant 176 in q.js: index in this replaced with index > this.length
Mutant 177 in q.js: index in this replaced with index < this.length
Mutant 178 in q.js: index in this replaced with index === this.length
Mutant 179 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index + 1)
Mutant 180 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index - 1)
Mutant 181 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index * 2)
Mutant 182 in q.js: basis replaced with basis + 1
Mutant 183 in q.js: basis replaced with basis * 2
Mutant 184 in q.js: basis replaced with basis - 1
Mutant 185 in q.js: this[index] replaced with this[index + 1]
Mutant 186 in q.js: this[index] replaced with this[index - 1]
Mutant 187 in q.js: this[index] replaced with this[index] = 0
Mutant 188 in q.js: index replaced with index + 1
Mutant 189 in q.js: index replaced with index - 1
Mutant 190 in q.js: index replaced with index * 2
Mutant 191 in q.js: i < this.length replaced with i <= this.length
Mutant 192 in q.js: i < this.length replaced with i > this.length
Mutant 193 in q.js: i < this.length replaced with i == this.length
Mutant 194 in q.js: i++ replaced with i--
Mutant 195 in q.js: i++ replaced with i += 2
Mutant 196 in q.js: i++ replaced with i *= 2
Mutant 197 in q.js: this[i] === value replaced with this[i] !== value
Mutant 198 in q.js: this[i] === value replaced with this[i] > value
Mutant 199 in q.js: this[i] === value replaced with this[i] < value
Mutant 200 in q.js: collect.push replaced with collect.pop
Mutant 201 in q.js: collect.push replaced with collect.shift
Mutant 202 in q.js: collect.push replaced with collect.unshift
Mutant 203 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) + 1
Mutant 204 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) - 1
Mutant 205 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) * 2
Mutant 206 in q.js: callback.call replaced with callback.apply
Mutant 207 in q.js: callback.call replaced with callback.bind
Mutant 208 in q.js: thisp replaced with null
Mutant 209 in q.js: thisp replaced with undefined
Mutant 210 in q.js: thisp replaced with {}
Mutant 211 in q.js: value replaced with undefined
Mutant 212 in q.js: value replaced with null
Mutant 213 in q.js: value replaced with 0
Mutant 214 in q.js: index replaced with index + 1
Mutant 215 in q.js: index replaced with index - 1
Mutant 216 in q.js: index replaced with index * 2
Mutant 217 in q.js: self replaced with self + 1
Mutant 218 in q.js: self replaced with self.length
Mutant 219 in q.js: self replaced with self.toString()
Mutant 220 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key of object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 221 in q.js: object replaced with null
Mutant 222 in q.js: object replaced with undefined
Mutant 223 in q.js: object replaced with {}
Mutant 224 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && object[key] !== undefined
Mutant 225 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) || object[key] === undefined
Mutant 226 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && object[key] !== null
Mutant 227 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key + 1)
Mutant 228 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key - 1)
Mutant 229 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, "key")
Mutant 230 in q.js: object replaced with {}
Mutant 231 in q.js: key replaced with key + 1
Mutant 232 in q.js: key replaced with key * 2
Mutant 233 in q.js: key replaced with key - 1
Mutant 234 in q.js: key replaced with key + 1
Mutant 235 in q.js: key replaced with key * 2
Mutant 236 in q.js: key replaced with key - 1
Mutant 237 in q.js: Object replaced with null
Mutant 238 in q.js: Object replaced with undefined
Mutant 239 in q.js: Object replaced with {}
Mutant 240 in q.js: value replaced with value + 1
Mutant 241 in q.js: value replaced with value * 2
Mutant 242 in q.js: value replaced with value - 1
Mutant 243 in q.js: object_toString replaced with object_hasOwnProperty
Mutant 244 in q.js: object_toString replaced with object_keys
Mutant 245 in q.js: object_toString replaced with object_create
Mutant 246 in q.js: exception replaced with exception.message
Mutant 247 in q.js: exception replaced with exception.stack
Mutant 248 in q.js: exception replaced with exception.name
Mutant 249 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" && ReturnValue !== null
Mutant 250 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" && ReturnValue !== "undefined"
Mutant 251 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" && ReturnValue !== 0
Mutant 252 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 253 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p.source; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 254 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p.source; p = p.source.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 255 in q.js: !!p replaced with !p
Mutant 256 in q.js: !!p replaced with p && !p
Mutant 257 in q.js: p = p.source replaced with p = p.source.source
Mutant 258 in q.js: p = p.source replaced with p = p.source.source.source
Mutant 259 in q.js: p = p.source replaced with p = p.source.source.source.source
Mutant 260 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)
Mutant 261 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)
Mutant 262 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 263 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 264 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter * 2,
  configurable: true
})
Mutant 265 in q.js: "__minimumStackCounter__" replaced with "__maximumStackCounter__"
Mutant 266 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__"
Mutant 267 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__" + 1
Mutant 268 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 269 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 270 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 271 in q.js: stacks.unshift replaced with stacks.push
Mutant 272 in q.js: stacks.unshift replaced with stacks.pop
Mutant 273 in q.js: stacks.unshift replaced with stacks.shift
Mutant 274 in q.js: p.stack replaced with p.stack.slice(0, 10)
Mutant 275 in q.js: p.stack replaced with p.stack.toUpperCase()
Mutant 276 in q.js: p.stack replaced with p.stack.split("").reverse().join("")
Mutant 277 in q.js: stacks.unshift replaced with stacks.push
Mutant 278 in q.js: stacks.unshift replaced with stacks.pop
Mutant 279 in q.js: stacks.unshift replaced with stacks.shift
Mutant 280 in q.js: error.stack replaced with error.message
Mutant 281 in q.js: error.stack replaced with error.name
Mutant 282 in q.js: error.stack replaced with error.code
Mutant 283 in q.js: stacks.join replaced with stacks.concat
Mutant 284 in q.js: stacks.join replaced with stacks.push
Mutant 285 in q.js: stacks.join replaced with stacks.pop
Mutant 286 in q.js: concatedStacks replaced with concatedStacks.split("\n")
Mutant 287 in q.js: concatedStacks replaced with concatedStacks.toUpperCase()
Mutant 288 in q.js: concatedStacks replaced with concatedStacks.replace("From previous event:", "From previous event: (MODIFIED)")
Mutant 289 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  enumerable: true
})
Mutant 290 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  writable: false
})
Mutant 291 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  configurable: false
})
Mutant 292 in q.js: "stack" replaced with "stackTrace"
Mutant 293 in q.js: "stack" replaced with "error"
Mutant 294 in q.js: "stack" replaced with "message"
Mutant 295 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack + "foo",
  configurable: true
}
Mutant 296 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack.slice(0, -1),
  configurable: true
}
Mutant 297 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack.split("").reverse().join(""),
  configurable: true
}
Mutant 298 in q.js: "\n" replaced with " "
Mutant 299 in q.js: "\n" replaced with "\t"
Mutant 300 in q.js: "\n" replaced with "\\n"
Mutant 301 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 302 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = this.length - 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 303 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = Math.floor(Math.random() * this.length); i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 304 in q.js: i < lines.length replaced with i <= lines.length
Mutant 305 in q.js: i < lines.length replaced with i > lines.length
Mutant 306 in q.js: i < lines.length replaced with i == lines.length
Mutant 307 in q.js: ++i replaced with i--
Mutant 308 in q.js: ++i replaced with i += 2
Mutant 309 in q.js: ++i replaced with i = i + 1
Mutant 310 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) || !isNodeFrame(line) || line
Mutant 311 in q.js: isInternalFrame replaced with getFileNameAndLineNumber
Mutant 312 in q.js: isInternalFrame replaced with isPromiseAlike
Mutant 313 in q.js: desiredLines.push replaced with desiredLines.pop
Mutant 314 in q.js: desiredLines.push replaced with desiredLines.shift
Mutant 315 in q.js: desiredLines.push replaced with desiredLines.unshift
Mutant 316 in q.js: line replaced with line + 1
Mutant 317 in q.js: line replaced with line - 1
Mutant 318 in q.js: line replaced with line * 2
Mutant 319 in q.js: "\n" replaced with "\t"
Mutant 320 in q.js: "\n" replaced with " "
Mutant 321 in q.js: "\n" replaced with "<br>"
Mutant 322 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 323 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 324 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 325 in q.js: "(module.js:" replaced with "(module.js:)"
Mutant 326 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 327 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 328 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 329 in q.js: "(node.js:" replaced with "(node.js:)"
Mutant 330 in q.js: stackLine replaced with stackLine.split("@")[1]
Mutant 331 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 332 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 333 in q.js: attempt1 replaced with attempt1[1] === undefined
Mutant 334 in q.js: attempt1 replaced with attempt1[1] === null
Mutant 335 in q.js: attempt1 replaced with attempt1[1] === ""
Mutant 336 in q.js: Number replaced with "string"
Mutant 337 in q.js: Number replaced with null
Mutant 338 in q.js: Number replaced with undefined
Mutant 339 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 340 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 341 in q.js: attempt1[2] replaced with attempt2[1]
Mutant 342 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 343 in q.js: stackLine replaced with stackLine.split(" ").pop()
Mutant 344 in q.js: stackLine replaced with stackLine.split(" ").slice(1).join(" ")
Mutant 345 in q.js: attempt2 replaced with attempt2[1]
Mutant 346 in q.js: attempt2 replaced with attempt2[0]
Mutant 347 in q.js: attempt2 replaced with attempt2.length
Mutant 348 in q.js: Number replaced with "0"
Mutant 349 in q.js: Number replaced with null
Mutant 350 in q.js: Number replaced with undefined
Mutant 351 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 352 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 353 in q.js: attempt2[2] replaced with attempt2[4]
Mutant 354 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 355 in q.js: stackLine replaced with stackLine.split(" ").pop()
Mutant 356 in q.js: stackLine replaced with stackLine.split(" ").slice(1).join(" ")
Mutant 357 in q.js: attempt3 replaced with attempt3[1]
Mutant 358 in q.js: attempt3 replaced with attempt3[0]
Mutant 359 in q.js: attempt3 replaced with attempt3.length
Mutant 360 in q.js: Number replaced with "0"
Mutant 361 in q.js: Number replaced with null
Mutant 362 in q.js: Number replaced with undefined
Mutant 363 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 364 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 365 in q.js: attempt3[2] replaced with attempt3[0]
Mutant 366 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 367 in q.js: stackLine replaced with stackLine.split(" ").pop()
Mutant 368 in q.js: stackLine replaced with stackLine.split(" ").slice(1).join(" ")
Mutant 369 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0]
Mutant 370 in q.js: !fileNameAndLineNumber replaced with !fileNameAndLineNumber.length
Mutant 371 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.indexOf(qFileName) === -1
Mutant 372 in q.js: !hasStacks replaced with hasStacks === false
Mutant 373 in q.js: !hasStacks replaced with typeof hasStacks === "undefined"
Mutant 374 in q.js: !hasStacks replaced with hasStacks !== true
Mutant 375 in q.js: "\n" replaced with "\t"
Mutant 376 in q.js: "\n" replaced with " "
Mutant 377 in q.js: "\n" replaced with "\\n"
Mutant 378 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 379 in q.js: lines[0].indexOf replaced with lines[lines.length - 1].indexOf
Mutant 380 in q.js: "@" replaced with "#"
Mutant 381 in q.js: "@" replaced with "%"
Mutant 382 in q.js: "@" replaced with "^"
Mutant 383 in q.js: firstLine replaced with firstLine.split(":")[0]
Mutant 384 in q.js: firstLine replaced with firstLine.split(":")[1]
Mutant 385 in q.js: firstLine replaced with firstLine.split(":")[2]
Mutant 386 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === undefined
Mutant 387 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 388 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === undefined
Mutant 389 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn("deprecated")
Mutant 390 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console.warn === "function"
Mutant 391 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console !== "undefined" && typeof console.warn === "function"
Mutant 392 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, arguments[0])
Mutant 393 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, arguments[1])
Mutant 394 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, arguments[2])
Mutant 395 in q.js: callback.apply replaced with callback.call
Mutant 396 in q.js: callback.apply replaced with callback.bind
Mutant 397 in q.js: callback.apply replaced with callback.toString
Mutant 398 in q.js: arguments replaced with null
Mutant 399 in q.js: arguments replaced with undefined
Mutant 400 in q.js: arguments replaced with 0
Mutant 401 in q.js: value instanceof Promise replaced with value === Promise
Mutant 402 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 403 in q.js: value instanceof Promise replaced with Object.getPrototypeOf(value) === Promise.prototype
Mutant 404 in q.js: isPromiseAlike(value) replaced with value instanceof Promise
Mutant 405 in q.js: isPromiseAlike(value) replaced with value.then
Mutant 406 in q.js: isPromiseAlike(value) replaced with value.constructor.name === "Promise"
Mutant 407 in q.js: isPromiseAlike replaced with typeof value === "object"
Mutant 408 in q.js: isPromiseAlike replaced with value.then !== undefined
Mutant 409 in q.js: value replaced with value + 1
Mutant 410 in q.js: value replaced with value * 2
Mutant 411 in q.js: value replaced with value - 1
Mutant 412 in q.js: value replaced with value + 1
Mutant 413 in q.js: value replaced with value * 2
Mutant 414 in q.js: value replaced with value - 1
Mutant 415 in q.js: fulfill replaced with reject
Mutant 416 in q.js: value replaced with null
Mutant 417 in q.js: value replaced with undefined
Mutant 418 in q.js: value replaced with 0
Mutant 419 in q.js: object_create replaced with null
Mutant 420 in q.js: object_create replaced with undefined
Mutant 421 in q.js: object_create replaced with {}
Mutant 422 in q.js: defer.prototype replaced with defer.prototype.constructor
Mutant 423 in q.js: defer.prototype replaced with defer.prototype.then
Mutant 424 in q.js: defer.prototype replaced with defer.prototype.catch
Mutant 425 in q.js: object_create replaced with null
Mutant 426 in q.js: object_create replaced with undefined
Mutant 427 in q.js: object_create replaced with {}
Mutant 428 in q.js: Promise.prototype replaced with Object.prototype
Mutant 429 in q.js: Promise.prototype replaced with null
Mutant 430 in q.js: Promise.prototype replaced with undefined
Mutant 431 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 432 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 433 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 434 in q.js: messages replaced with messages.length
Mutant 435 in q.js: messages replaced with messages.length > 0
Mutant 436 in q.js: messages replaced with resolvedPromise === undefined
Mutant 437 in q.js: args replaced with args[0]
Mutant 438 in q.js: args replaced with args[1]
Mutant 439 in q.js: args replaced with args.slice(1)
Mutant 440 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 441 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[1]
Mutant 442 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[1] === "foo"
Mutant 443 in q.js: progressListeners.push replaced with progressListeners.pop
Mutant 444 in q.js: progressListeners.push replaced with progressListeners.shift
Mutant 445 in q.js: progressListeners.push replaced with progressListeners.unshift
Mutant 446 in q.js: operands[1] replaced with operands[2]
Mutant 447 in q.js: operands[1] replaced with operands[0]
Mutant 448 in q.js: operands[1] replaced with operands[3]
Mutant 449 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(promise))
Mutant 450 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(deferred))
Mutant 451 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(Q))
Mutant 452 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 453 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.bind
Mutant 454 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 455 in q.js: resolvedPromise replaced with resolvedPromise.source
Mutant 456 in q.js: resolvedPromise replaced with resolvedPromise.stack
Mutant 457 in q.js: args replaced with args[0]
Mutant 458 in q.js: args replaced with args.slice(1)
Mutant 459 in q.js: args replaced with args.concat(["extra argument"])
Mutant 460 in q.js: messages replaced with messages.length
Mutant 461 in q.js: messages replaced with messages[0]
Mutant 462 in q.js: messages replaced with messages.pop()
Mutant 463 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 464 in q.js: resolvedPromise replaced with resolvedPromise.source
Mutant 465 in q.js: resolvedPromise replaced with resolvedPromise.inspect()
Mutant 466 in q.js: isPromise(nearerValue) replaced with nearerValue === null
Mutant 467 in q.js: isPromise(nearerValue) replaced with nearerValue === undefined
Mutant 468 in q.js: isPromise(nearerValue) replaced with nearerValue === 0
Mutant 469 in q.js: isPromise replaced with isPromiseAlike
Mutant 470 in q.js: isPromise replaced with !isPromise
Mutant 471 in q.js: isPromise replaced with isPromise || isPromiseAlike
Mutant 472 in q.js: nearerValue replaced with nearerValue + 1
Mutant 473 in q.js: nearerValue replaced with nearerValue * 2
Mutant 474 in q.js: nearerValue replaced with nearerValue - 1
Mutant 475 in q.js: !resolvedPromise replaced with resolvedPromise === undefined
Mutant 476 in q.js: !resolvedPromise replaced with resolvedPromise !== null
Mutant 477 in q.js: !resolvedPromise replaced with typeof resolvedPromise === "undefined"
Mutant 478 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 479 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 480 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport ^ hasStacks
Mutant 481 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.length
Mutant 482 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") + 2
Mutant 483 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.lastIndexOf("\n") + 1
Mutant 484 in q.js: "\n" replaced with "\t"
Mutant 485 in q.js: "\n" replaced with " "
Mutant 486 in q.js: "\n" replaced with "\\n"
Mutant 487 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 488 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport || hasStacks
Mutant 489 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && hasStacks && false
Mutant 490 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message[0])
Mutant 491 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.slice(1))
Mutant 492 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.concat(newPromise))
Mutant 493 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 494 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.bind
Mutant 495 in q.js: newPromise replaced with newPromise.promise
Mutant 496 in q.js: newPromise replaced with newPromise.then(function (value) {
  return value;
})
Mutant 497 in q.js: newPromise replaced with newPromise.catch(function (error) {
  throw error;
})
Mutant 498 in q.js: message replaced with message.slice(1)
Mutant 499 in q.js: message replaced with message.concat(["new element"])
Mutant 500 in q.js: message replaced with message.map(function (x) {
  return x * 2;
})
Mutant 501 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 502 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 503 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 504 in q.js: Q replaced with Q.reject
Mutant 505 in q.js: Q replaced with Q.resolve
Mutant 506 in q.js: Q replaced with Q.all
Mutant 507 in q.js: value replaced with null
Mutant 508 in q.js: value replaced with undefined
Mutant 509 in q.js: value replaced with 0
Mutant 510 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 511 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 512 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 513 in q.js: fulfill(value) replaced with reject(value)
Mutant 514 in q.js: fulfill(value) replaced with fulfill(otherValue)
Mutant 515 in q.js: fulfill(value) replaced with fulfill(value + 1)
Mutant 516 in q.js: fulfill replaced with resolve
Mutant 517 in q.js: fulfill replaced with notify
Mutant 518 in q.js: value replaced with null
Mutant 519 in q.js: value replaced with undefined
Mutant 520 in q.js: value replaced with 0
Mutant 521 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 522 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 523 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 524 in q.js: reject(reason) replaced with reject(new Error(reason))
Mutant 525 in q.js: reject(reason) replaced with reject(reason + "!")
Mutant 526 in q.js: reject(reason) replaced with reject(reason.toUpperCase())
Mutant 527 in q.js: reject replaced with undefined
Mutant 528 in q.js: reason replaced with null
Mutant 529 in q.js: reason replaced with undefined
Mutant 530 in q.js: reason replaced with "error"
Mutant 531 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 532 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 533 in q.js: resolvedPromise replaced with resolvedPromise !== undefined
Mutant 534 in q.js: progressListener replaced with progressListeners[0]
Mutant 535 in q.js: progressListener replaced with progressListeners[progressListeners.length - 1]
Mutant 536 in q.js: progress replaced with progress + 1
Mutant 537 in q.js: progress replaced with progress - 1
Mutant 538 in q.js: progress replaced with progress * 2
Mutant 539 in q.js: error replaced with error.message
Mutant 540 in q.js: error replaced with error.stack
Mutant 541 in q.js: error replaced with error.name
Mutant 542 in q.js: error replaced with null
Mutant 543 in q.js: error replaced with undefined
Mutant 544 in q.js: error replaced with new Error()
Mutant 545 in q.js: arguments.length > 2 replaced with arguments.length > 1
Mutant 546 in q.js: arguments.length > 2 replaced with arguments.length === 2
Mutant 547 in q.js: arguments.length > 2 replaced with arguments.length < 2
Mutant 548 in q.js: self.resolve replaced with self.reject
Mutant 549 in q.js: self.resolve replaced with self.notify
Mutant 550 in q.js: self.resolve replaced with self.fulfill
Mutant 551 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 552 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0, 1)
Mutant 553 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 1, 2)
Mutant 554 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 555 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 4)
Mutant 556 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 557 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 558 in q.js: 1 replaced with null
Mutant 559 in q.js: self.resolve replaced with self.reject
Mutant 560 in q.js: self.resolve replaced with self.notify
Mutant 561 in q.js: self.resolve replaced with self.fulfill
Mutant 562 in q.js: value replaced with null
Mutant 563 in q.js: value replaced with undefined
Mutant 564 in q.js: value replaced with 0
Mutant 565 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 566 in q.js: typeof resolver !== "function" replaced with resolver !== Function
Mutant 567 in q.js: defer replaced with defer.promise
Mutant 568 in q.js: defer replaced with defer.resolve
Mutant 569 in q.js: defer replaced with defer.reject
Mutant 570 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.resolve, deferred.notify)
Mutant 571 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.notify, deferred.resolve, deferred.reject)
Mutant 572 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.notify, deferred.resolve)
Mutant 573 in q.js: deferred.resolve replaced with deferred.reject
Mutant 574 in q.js: deferred.resolve replaced with deferred.notify
Mutant 575 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 576 in q.js: deferred.reject replaced with deferred.resolve
Mutant 577 in q.js: deferred.reject replaced with deferred.notify
Mutant 578 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 579 in q.js: deferred.notify replaced with deferred.reject
Mutant 580 in q.js: deferred.notify replaced with deferred.fulfill
Mutant 581 in q.js: deferred.notify replaced with deferred.resolve
Mutant 582 in q.js: deferred.reject replaced with deferred.resolve
Mutant 583 in q.js: deferred.reject replaced with deferred.notify
Mutant 584 in q.js: deferred.reject replaced with deferred.makeNodeResolver
Mutant 585 in q.js: reason replaced with null
Mutant 586 in q.js: reason replaced with undefined
Mutant 587 in q.js: reason replaced with "error"
Mutant 588 in q.js: Q replaced with Q.reject
Mutant 589 in q.js: Q replaced with Q.resolve
Mutant 590 in q.js: Q replaced with Q.all
Mutant 591 in q.js: x replaced with y
Mutant 592 in q.js: x replaced with x + 1
Mutant 593 in q.js: x replaced with x * 2
Mutant 594 in q.js: y replaced with x
Mutant 595 in q.js: y replaced with y + 1
Mutant 596 in q.js: y replaced with x + y
Mutant 597 in q.js: Q replaced with Q.reject
Mutant 598 in q.js: Q replaced with Q.resolve
Mutant 599 in q.js: Q replaced with Q.all
Mutant 600 in q.js: [this, that] replaced with [that, this]
Mutant 601 in q.js: [this, that] replaced with [this, this]
Mutant 602 in q.js: [this, that] replaced with [null, that]
Mutant 603 in q.js: x === y replaced with x !== y
Mutant 604 in q.js: x === y replaced with x + y
Mutant 605 in q.js: x === y replaced with x - y
Mutant 606 in q.js: i < len replaced with i > len
Mutant 607 in q.js: i < len replaced with i <= len
Mutant 608 in q.js: i < len replaced with i >= len
Mutant 609 in q.js: i++ replaced with i--
Mutant 610 in q.js: i++ replaced with i += 2
Mutant 611 in q.js: i++ replaced with i = i + 1
Mutant 612 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve)
Mutant 613 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, resolve)
Mutant 614 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve, reject)
Mutant 615 in q.js: Q replaced with Q.reject
Mutant 616 in q.js: Q replaced with Q.resolve
Mutant 617 in q.js: Q replaced with Q.all
Mutant 618 in q.js: answerPs[i] replaced with answerPs[i] + 1
Mutant 619 in q.js: answerPs[i] replaced with answerPs[i] * 2
Mutant 620 in q.js: answerPs[i] replaced with answerPs[i] - 1
Mutant 621 in q.js: resolve replaced with reject
Mutant 622 in q.js: reject replaced with resolve
Mutant 623 in q.js: this.then replaced with null
Mutant 624 in q.js: this.then replaced with undefined
Mutant 625 in q.js: this.then replaced with 0
Mutant 626 in q.js: Q.race replaced with Q.reject
Mutant 627 in q.js: Q.race replaced with Q.resolve
Mutant 628 in q.js: Q.race replaced with Q.all
Mutant 629 in q.js: fallback === void 0 replaced with fallback === null
Mutant 630 in q.js: fallback === void 0 replaced with fallback === undefined
Mutant 631 in q.js: fallback === void 0 replaced with fallback === function () {}
Mutant 632 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 633 in q.js: inspect === void 0 replaced with inspect === null
Mutant 634 in q.js: inspect === void 0 replaced with inspect === undefined
Mutant 635 in q.js: object_create replaced with null
Mutant 636 in q.js: object_create replaced with undefined
Mutant 637 in q.js: object_create replaced with {}
Mutant 638 in q.js: Promise.prototype replaced with Object.prototype
Mutant 639 in q.js: Promise.prototype replaced with Function.prototype
Mutant 640 in q.js: Promise.prototype replaced with Array.prototype
Mutant 641 in q.js: descriptor[op] replaced with descriptor[op] + 1
Mutant 642 in q.js: descriptor[op] replaced with descriptor[op] = function () {}
Mutant 643 in q.js: descriptor[op] replaced with descriptor[op] = null
Mutant 644 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args[0])
Mutant 645 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args[1])
Mutant 646 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args.slice(1))
Mutant 647 in q.js: promise replaced with null
Mutant 648 in q.js: promise replaced with undefined
Mutant 649 in q.js: promise replaced with {}
Mutant 650 in q.js: args replaced with args.slice(1)
Mutant 651 in q.js: args replaced with args.concat(1)
Mutant 652 in q.js: args replaced with args.map(function (x) {
  return x + 1;
})
Mutant 653 in q.js: promise replaced with null
Mutant 654 in q.js: promise replaced with undefined
Mutant 655 in q.js: promise replaced with {}
Mutant 656 in q.js: op replaced with op + 1
Mutant 657 in q.js: op replaced with op - 1
Mutant 658 in q.js: op replaced with op * 2
Mutant 659 in q.js: args replaced with args[0]
Mutant 660 in q.js: args replaced with args[1]
Mutant 661 in q.js: args replaced with args[2]
Mutant 662 in q.js: reject replaced with resolve
Mutant 663 in q.js: exception replaced with null
Mutant 664 in q.js: exception replaced with undefined
Mutant 665 in q.js: exception replaced with "error"
Mutant 666 in q.js: resolve replaced with !resolve
Mutant 667 in q.js: resolve replaced with resolve && false
Mutant 668 in q.js: resolve replaced with resolve || true
Mutant 669 in q.js: resolve replaced with reject
Mutant 670 in q.js: result replaced with null
Mutant 671 in q.js: result replaced with undefined
Mutant 672 in q.js: inspect replaced with inspect.state
Mutant 673 in q.js: inspect replaced with inspect.value
Mutant 674 in q.js: inspect replaced with inspect.reason
Mutant 675 in q.js: inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 676 in q.js: inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 677 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 678 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 679 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 680 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 681 in q.js: fulfilled replaced with rejected
Mutant 682 in q.js: fulfilled replaced with undefined
Mutant 683 in q.js: fulfilled replaced with null
Mutant 684 in q.js: value replaced with null
Mutant 685 in q.js: value replaced with undefined
Mutant 686 in q.js: value replaced with 0
Mutant 687 in q.js: reject replaced with resolve
Mutant 688 in q.js: exception replaced with null
Mutant 689 in q.js: exception replaced with undefined
Mutant 690 in q.js: exception replaced with new Error()
Mutant 691 in q.js: typeof rejected === "function" replaced with rejected !== null
Mutant 692 in q.js: typeof rejected === "function" replaced with typeof rejected !== "undefined"
Mutant 693 in q.js: typeof rejected === "function" replaced with rejected.caller !== null
Mutant 694 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self)
Mutant 695 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, this)
Mutant 696 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, null)
Mutant 697 in q.js: exception replaced with exception.message
Mutant 698 in q.js: exception replaced with exception.stack
Mutant 699 in q.js: exception replaced with exception.name
Mutant 700 in q.js: self replaced with self.promiseDispatch
Mutant 701 in q.js: self replaced with self.promiseDispatch()
Mutant 702 in q.js: self replaced with self.promiseDispatch.bind(self)
Mutant 703 in q.js: exception replaced with null
Mutant 704 in q.js: exception replaced with undefined
Mutant 705 in q.js: exception replaced with new Error("Different error message")
Mutant 706 in q.js: reject replaced with resolve
Mutant 707 in q.js: reject replaced with Q.reject
Mutant 708 in q.js: newException replaced with reject(new Error("New exception"))
Mutant 709 in q.js: newException replaced with resolve(new Error("New exception"))
Mutant 710 in q.js: reject replaced with Q.reject
Mutant 711 in q.js: exception replaced with reject(new Error("Promise does not support operation: " + op))
Mutant 712 in q.js: exception replaced with reject(exception)
Mutant 713 in q.js: progressed replaced with progressed + 1
Mutant 714 in q.js: progressed replaced with progressed * 2
Mutant 715 in q.js: progressed replaced with progressed - 1
Mutant 716 in q.js: value replaced with null
Mutant 717 in q.js: value replaced with undefined
Mutant 718 in q.js: value replaced with 0
Mutant 719 in q.js: done replaced with !done
Mutant 720 in q.js: done replaced with done && false
Mutant 721 in q.js: done replaced with done || true
Mutant 722 in q.js: deferred.resolve replaced with deferred.reject
Mutant 723 in q.js: deferred.resolve replaced with deferred.notify
Mutant 724 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 725 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 726 in q.js: _fulfilled(value) replaced with _fulfilled(reject(value))
Mutant 727 in q.js: value replaced with null
Mutant 728 in q.js: value replaced with undefined
Mutant 729 in q.js: done replaced with !done
Mutant 730 in q.js: done replaced with done && false
Mutant 731 in q.js: done replaced with done || true
Mutant 732 in q.js: deferred.resolve replaced with deferred.reject
Mutant 733 in q.js: deferred.resolve replaced with deferred.notify
Mutant 734 in q.js: deferred.resolve replaced with deferred.then
Mutant 735 in q.js: _rejected(exception) replaced with _fulfilled(exception)
Mutant 736 in q.js: _rejected(exception) replaced with _rejected(value)
Mutant 737 in q.js: _rejected(exception) replaced with _progressed(exception)
Mutant 738 in q.js: exception replaced with exception.message
Mutant 739 in q.js: exception replaced with exception.stack
Mutant 740 in q.js: exception replaced with exception.name
Mutant 741 in q.js: _progressed replaced with _rejected
Mutant 742 in q.js: _progressed replaced with _fulfilled
Mutant 743 in q.js: value replaced with null
Mutant 744 in q.js: value replaced with undefined
Mutant 745 in q.js: value replaced with 0
Mutant 746 in q.js: Q.onerror replaced with Q.onerror()
Mutant 747 in q.js: e replaced with e.message
Mutant 748 in q.js: e replaced with e.stack
Mutant 749 in q.js: e replaced with e.toString()
Mutant 750 in q.js: !threw replaced with threw
Mutant 751 in q.js: !threw replaced with threw === true
Mutant 752 in q.js: deferred.notify replaced with deferred.reject
Mutant 753 in q.js: newValue replaced with null
Mutant 754 in q.js: newValue replaced with undefined
Mutant 755 in q.js: newValue replaced with 0
Mutant 756 in q.js: callback replaced with callback.fcall(value).thenResolve(value)
Mutant 757 in q.js: callback replaced with callback.call(value).thenResolve(value)
Mutant 758 in q.js: callback replaced with callback.apply(value).thenResolve(value)
Mutant 759 in q.js: Q replaced with Q.fcall
Mutant 760 in q.js: Q replaced with Q.resolve
Mutant 761 in q.js: Q replaced with Q.reject
Mutant 762 in q.js: callback replaced with callback.fcall(value).thenResolve(value)
Mutant 763 in q.js: callback replaced with callback.call(value).thenResolve(value)
Mutant 764 in q.js: callback replaced with callback.apply(value).thenResolve(value)
Mutant 765 in q.js: value replaced with null
Mutant 766 in q.js: value replaced with undefined
Mutant 767 in q.js: value replaced with 0
Mutant 768 in q.js: value replaced with null
Mutant 769 in q.js: value replaced with undefined
Mutant 770 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed)
Mutant 771 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed, null)
Mutant 772 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed, undefined)
Mutant 773 in q.js: value replaced with 0
Mutant 774 in q.js: fulfilled replaced with rejected
Mutant 775 in q.js: fulfilled replaced with undefined
Mutant 776 in q.js: fulfilled replaced with null
Mutant 777 in q.js: rejected replaced with fulfilled
Mutant 778 in q.js: rejected replaced with function (value) {
  return value;
}
Mutant 779 in q.js: rejected replaced with function (reason) {
  throw reason;
}
Mutant 780 in q.js: progressed replaced with null
Mutant 781 in q.js: progressed replaced with undefined
Mutant 782 in q.js: progressed replaced with function () {}
Mutant 783 in q.js: function () {
  return value;
} replaced with function () {
  return null;
}
Mutant 784 in q.js: function () {
  return value;
} replaced with function () {
  return undefined;
}
Mutant 785 in q.js: function () {
  return value;
} replaced with function () {
  return 0;
}
Mutant 786 in q.js: Q replaced with Q.reject
Mutant 787 in q.js: Q replaced with Q.resolve
Mutant 788 in q.js: Q replaced with Q.defer
Mutant 789 in q.js: promise replaced with null
Mutant 790 in q.js: promise replaced with undefined
Mutant 791 in q.js: promise replaced with 0
Mutant 792 in q.js: value replaced with null
Mutant 793 in q.js: value replaced with undefined
Mutant 794 in q.js: value replaced with 0
Mutant 795 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 796 in q.js: function () {
  throw reason;
} replaced with function () {
  return new Error(reason);
}
Mutant 797 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error("Reason: " + reason);
}
Mutant 798 in q.js: promise replaced with null
Mutant 799 in q.js: promise replaced with undefined
Mutant 800 in q.js: promise replaced with 0
Mutant 801 in q.js: reason replaced with null
Mutant 802 in q.js: reason replaced with undefined
Mutant 803 in q.js: reason replaced with "error"
Mutant 804 in q.js: isPromise(value) replaced with !isPromise(value)
Mutant 805 in q.js: isPromise(value) replaced with isPromiseAlike(value)
Mutant 806 in q.js: isPromise(value) replaced with isFulfilled(value)
Mutant 807 in q.js: isPromise replaced with isRejected
Mutant 808 in q.js: value replaced with value + 1
Mutant 809 in q.js: value replaced with value * 2
Mutant 810 in q.js: value replaced with value - 1
Mutant 811 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 812 in q.js: inspected.state === "fulfilled" replaced with inspected.value === undefined
Mutant 813 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "pending"
Mutant 814 in q.js: isObject replaced with isArray
Mutant 815 in q.js: isObject replaced with isFunction
Mutant 816 in q.js: isObject replaced with isString
Mutant 817 in q.js: object replaced with object.then
Mutant 818 in q.js: object replaced with object.then()
Mutant 819 in q.js: object replaced with object.then(function () {})
Mutant 820 in q.js: isPromise replaced with isPromiseAlike
Mutant 821 in q.js: isPromise replaced with !isPromise
Mutant 822 in q.js: isPromise replaced with isFulfilled
Mutant 823 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 824 in q.js: object replaced with object.state === "rejected"
Mutant 825 in q.js: object replaced with object.inspect().state === "fulfilled"
Mutant 826 in q.js: isPromise replaced with !isPromise
Mutant 827 in q.js: isPromise replaced with isPromiseAlike
Mutant 828 in q.js: isPromise replaced with isPending
Mutant 829 in q.js: object replaced with object.inspect().value
Mutant 830 in q.js: object replaced with object.inspect().reason
Mutant 831 in q.js: object replaced with object.inspect().state
Mutant 832 in q.js: this.inspect replaced with this.inspect.state
Mutant 833 in q.js: this.inspect replaced with this.inspect.value
Mutant 834 in q.js: this.inspect replaced with this.inspect.reason
not replacing this.inspect with this.inspect.state
not replacing this.inspect with this.inspect.value
not replacing this.inspect with this.inspect.reason
Mutant 835 in q.js: isPromise replaced with isPromiseAlike
Mutant 836 in q.js: isPromise replaced with !isPromise
Mutant 837 in q.js: isPromise replaced with isFulfilled
Mutant 838 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 839 in q.js: object replaced with object.state === "rejected"
Mutant 840 in q.js: object replaced with object.inspect().state === "fulfilled"
Mutant 841 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 842 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections.valueOf()
Mutant 843 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 844 in q.js: !trackUnhandledRejections replaced with typeof trackUnhandledRejections === "boolean"
Mutant 845 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== true
Mutant 846 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 847 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.indexOf(promise) > -1
Mutant 848 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise) && unhandledReasons.includes(reason)
Mutant 849 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, reason)
Mutant 850 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, promise)
Mutant 851 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons, promise)
Mutant 852 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 853 in q.js: array_indexOf replaced with array_includes
Mutant 854 in q.js: array_indexOf replaced with array_findIndex
Mutant 855 in q.js: unhandledRejections replaced with reportedUnhandledRejections
Mutant 856 in q.js: unhandledRejections replaced with trackUnhandledRejections
Mutant 857 in q.js: promise replaced with promise.then(function () {
  throw new Error("test");
})
Mutant 858 in q.js: promise replaced with promise.then(function () {
  return 42;
})
Mutant 859 in q.js: promise replaced with promise.then(function () {
  return Promise.reject(new Error("test"));
})
Mutant 860 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("rejectionHandled", reason, promise)
Mutant 861 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, null)
Mutant 862 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "foo"
Mutant 863 in q.js: "unhandledRejection" replaced with "unhandledRejection" + 1
Mutant 864 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "bar"
Mutant 865 in q.js: reason replaced with reason.stack
Mutant 866 in q.js: reason replaced with reason.message
Mutant 867 in q.js: reason replaced with reason.toString()
Mutant 868 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.pop
Mutant 869 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.shift
Mutant 870 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.unshift
Mutant 871 in q.js: unhandledRejections.push replaced with unhandledRejections.pop
Mutant 872 in q.js: unhandledRejections.push replaced with unhandledRejections.shift
Mutant 873 in q.js: unhandledRejections.push replaced with unhandledRejections.unshift
Mutant 874 in q.js: promise replaced with null
Mutant 875 in q.js: promise replaced with undefined
Mutant 876 in q.js: promise replaced with 0
Mutant 877 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined"
Mutant 878 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== void 0
Mutant 879 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== null
Mutant 880 in q.js: reason.stack replaced with reason.message
Mutant 881 in q.js: reason.stack replaced with reason.name
Mutant 882 in q.js: reason.stack replaced with reason.code
Mutant 883 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 884 in q.js: unhandledReasons.push replaced with unhandledReasons.shift
Mutant 885 in q.js: unhandledReasons.push replaced with unhandledReasons.unshift
Mutant 886 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.message
Mutant 887 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.toString()
Mutant 888 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.stack
Mutant 889 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 890 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== true
Mutant 891 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.slice(0, -1), promise)
Mutant 892 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.slice(1), promise)
Mutant 893 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.slice(0, 1), promise)
Mutant 894 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 895 in q.js: array_indexOf replaced with array_includes
Mutant 896 in q.js: array_indexOf replaced with array_findIndex
Mutant 897 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 898 in q.js: unhandledRejections replaced with unhandledRejections.concat()
Mutant 899 in q.js: unhandledRejections replaced with unhandledRejections.filter(function (rejection) {
  return rejection !== promise;
})
Mutant 900 in q.js: at !== -1 replaced with at === -1
Mutant 901 in q.js: at !== -1 replaced with at < -1
Mutant 902 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.length)
Mutant 903 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections[0])
Mutant 904 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.indexOf(promise))
Mutant 905 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 906 in q.js: array_indexOf replaced with array_includes
Mutant 907 in q.js: array_indexOf replaced with array_findIndex
Mutant 908 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 909 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.length
Mutant 910 in q.js: reportedUnhandledRejections replaced with unhandledReasons.length
Mutant 911 in q.js: promise replaced with promise.then(function () {})
Mutant 912 in q.js: promise replaced with promise.catch(function () {})
Mutant 913 in q.js: promise replaced with promise.finally(function () {})
Mutant 914 in q.js: atReport !== -1 replaced with atReport === -1
Mutant 915 in q.js: atReport !== -1 replaced with atReport > -1
Mutant 916 in q.js: atReport !== -1 replaced with atReport < -1
Mutant 917 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at])
Mutant 918 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at])
Mutant 919 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at])
Mutant 920 in q.js: "rejectionHandled" replaced with "unhandledRejection"
Mutant 921 in q.js: "rejectionHandled" replaced with "handledRejection"
Mutant 922 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 923 in q.js: unhandledReasons[at] replaced with unhandledReasons[at - 1]
Mutant 924 in q.js: unhandledReasons[at] replaced with unhandledReasons[at] = "new reason"
Mutant 925 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 2)
Mutant 926 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 0)
Mutant 927 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, -1)
Mutant 928 in q.js: atReport replaced with atReport + 1
Mutant 929 in q.js: atReport replaced with atReport - 1
Mutant 930 in q.js: atReport replaced with atReport.length
Mutant 931 in q.js: 1 replaced with 0
Mutant 932 in q.js: 1 replaced with -1
Mutant 933 in q.js: 1 replaced with array.length
Mutant 934 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 0)
Mutant 935 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 2)
Mutant 936 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, -1)
Mutant 937 in q.js: at replaced with at + 1
Mutant 938 in q.js: at replaced with at - 1
Mutant 939 in q.js: at replaced with at + 2
Mutant 940 in q.js: 1 replaced with 0
Mutant 941 in q.js: 1 replaced with -1
Mutant 942 in q.js: 1 replaced with 2
Mutant 943 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 0)
Mutant 944 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 2)
Mutant 945 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, -1)
Mutant 946 in q.js: at replaced with at + 1
Mutant 947 in q.js: at replaced with at - 1
Mutant 948 in q.js: at replaced with at + 2
Mutant 949 in q.js: 1 replaced with 0
Mutant 950 in q.js: 1 replaced with -1
Mutant 951 in q.js: 1 replaced with array_indexOf(unhandledRejections, promise) + 1
Mutant 952 in q.js: resetUnhandledRejections replaced with unhandledRejections.length = 0
Mutant 953 in q.js: resetUnhandledRejections replaced with trackUnhandledRejections = false
Mutant 954 in q.js: rejected replaced with !rejected
Mutant 955 in q.js: rejected replaced with rejected && false
Mutant 956 in q.js: rejected replaced with rejected || true
Mutant 957 in q.js: this replaced with null
Mutant 958 in q.js: this replaced with undefined
Mutant 959 in q.js: this replaced with 0
Mutant 960 in q.js: rejected replaced with rejected + 1
Mutant 961 in q.js: rejected replaced with !rejected
Mutant 962 in q.js: rejected replaced with rejected && false
Mutant 963 in q.js: reason replaced with null
Mutant 964 in q.js: reason replaced with undefined
Mutant 965 in q.js: reason replaced with "error"
Mutant 966 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason + 1)
Mutant 967 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason - 1)
Mutant 968 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason * 2)
Mutant 969 in q.js: trackRejection replaced with untrackRejection
Mutant 970 in q.js: rejection replaced with null
Mutant 971 in q.js: rejection replaced with undefined
Mutant 972 in q.js: rejection replaced with 0
Mutant 973 in q.js: reason replaced with null
Mutant 974 in q.js: reason replaced with undefined
Mutant 975 in q.js: reason replaced with "some string"
Mutant 976 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 977 in q.js: name === null || name === void 0 replaced with name === void 0
Mutant 978 in q.js: name === null || name === void 0 replaced with name === null || name === undefined
Mutant 979 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 980 in q.js: value.apply(void 0, args) replaced with value.apply(undefined, args)
Mutant 981 in q.js: value.apply(void 0, args) replaced with value.apply(args[0], args)
Mutant 982 in q.js: value.apply replaced with value.call
Mutant 983 in q.js: value.apply replaced with value.bind
Mutant 984 in q.js: value.apply replaced with value.toString
Mutant 985 in q.js: void 0 replaced with null
Mutant 986 in q.js: void 0 replaced with undefined
Mutant 987 in q.js: void 0 replaced with 0
Mutant 988 in q.js: args replaced with args.slice()
Mutant 989 in q.js: args replaced with args.concat()
Mutant 990 in q.js: args replaced with args.map(function (arg) {
  return arg + 1;
})
Mutant 991 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.slice())
Mutant 992 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.concat())
Mutant 993 in q.js: value replaced with null
Mutant 994 in q.js: value replaced with undefined
Mutant 995 in q.js: value replaced with 0
Mutant 996 in q.js: args replaced with args.slice()
Mutant 997 in q.js: args replaced with args.concat()
Mutant 998 in q.js: args replaced with args.map(function (x) {
  return x;
})
Mutant 999 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.slice())
Mutant 1000 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.concat())
Mutant 1001 in q.js: value.apply replaced with value.call
Mutant 1002 in q.js: value.apply replaced with value.bind
Mutant 1003 in q.js: value.apply replaced with value.toString
Mutant 1004 in q.js: thisp replaced with null
Mutant 1005 in q.js: thisp replaced with undefined
Mutant 1006 in q.js: thisp replaced with {}
Mutant 1007 in q.js: args replaced with args.slice()
Mutant 1008 in q.js: args replaced with args.concat()
Mutant 1009 in q.js: args replaced with args.map(function (x) {
  return x;
})
Mutant 1010 in q.js: object_keys replaced with object_values
Mutant 1011 in q.js: object_keys replaced with Object.values
Mutant 1012 in q.js: object_keys replaced with Object.keys
Mutant 1013 in q.js: value replaced with null
Mutant 1014 in q.js: value replaced with undefined
Mutant 1015 in q.js: value replaced with {}
Mutant 1016 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.reject)
Mutant 1017 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.notify)
Mutant 1018 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve(reason))
Mutant 1019 in q.js: promise.then replaced with promise.catch
Mutant 1020 in q.js: promise.then replaced with promise.finally
Mutant 1021 in q.js: promise.then replaced with promise.all
Mutant 1022 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1023 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1024 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1025 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1026 in q.js: deferred.reject replaced with deferred.notify
Mutant 1027 in q.js: deferred.reject replaced with deferred.reject(new Error(reason))
Mutant 1028 in q.js: deferred.notify replaced with deferred.reject
Mutant 1029 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1030 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1031 in q.js: deferred.reject replaced with deferred.notify
Mutant 1032 in q.js: deferred.reject replaced with deferred.cancel
Mutant 1033 in q.js: exception replaced with null
Mutant 1034 in q.js: exception replaced with undefined
Mutant 1035 in q.js: exception replaced with 0
Mutant 1036 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[0])
Mutant 1037 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args.slice(1))
Mutant 1038 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args.concat(args))
Mutant 1039 in q.js: object replaced with null
Mutant 1040 in q.js: object replaced with undefined
Mutant 1041 in q.js: object replaced with 0
Mutant 1042 in q.js: op replaced with op + 1
Mutant 1043 in q.js: op replaced with op - 1
Mutant 1044 in q.js: op replaced with op * 2
Mutant 1045 in q.js: args replaced with args[0]
Mutant 1046 in q.js: args replaced with args.slice(1)
Mutant 1047 in q.js: args replaced with args.length
Mutant 1048 in q.js: Q replaced with Q.reject
Mutant 1049 in q.js: Q replaced with Q.fulfill
Mutant 1050 in q.js: object replaced with null
Mutant 1051 in q.js: object replaced with undefined
Mutant 1052 in q.js: object replaced with {}
Mutant 1053 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 1054 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled)
Mutant 1055 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected)
Mutant 1056 in q.js: Q replaced with Q.reject
Mutant 1057 in q.js: Q replaced with Q.resolve
Mutant 1058 in q.js: Q replaced with Q.defer
Mutant 1059 in q.js: value replaced with null
Mutant 1060 in q.js: value replaced with undefined
Mutant 1061 in q.js: value replaced with 0
Mutant 1062 in q.js: fulfilled replaced with rejected
Mutant 1063 in q.js: fulfilled replaced with null
Mutant 1064 in q.js: fulfilled replaced with undefined
Mutant 1065 in q.js: rejected replaced with fulfilled
Mutant 1066 in q.js: rejected replaced with undefined
Mutant 1067 in q.js: rejected replaced with null
Mutant 1068 in q.js: this.all replaced with this.then
Mutant 1069 in q.js: this.all replaced with this.catch
Mutant 1070 in q.js: this.all replaced with this.finally
not replacing this.all with this.then
not replacing this.all with this.then
not replacing this.all with this.catch
not replacing this.all with this.catch
not replacing this.all with this.finally
not replacing this.all with this.finally
Mutant 1071 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 1072 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(undefined)
Mutant 1073 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(0)
Mutant 1074 in q.js: fulfilled.apply replaced with fulfilled.call
Mutant 1075 in q.js: fulfilled.apply replaced with fulfilled.bind
Mutant 1076 in q.js: void 0 replaced with null
Mutant 1077 in q.js: void 0 replaced with undefined
Mutant 1078 in q.js: void 0 replaced with 0
Mutant 1079 in q.js: array replaced with array.slice()
Mutant 1080 in q.js: array replaced with array.concat()
Mutant 1081 in q.js: array replaced with array.map(function (x) {
  return x;
})
Mutant 1082 in q.js: typeof StopIteration === "undefined" replaced with StopIteration === "undefined"
Mutant 1083 in q.js: typeof StopIteration === "undefined" replaced with StopIteration !== "undefined"
Mutant 1084 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 1085 in q.js: arg replaced with null
Mutant 1086 in q.js: arg replaced with undefined
Mutant 1087 in q.js: arg replaced with 0
Mutant 1088 in q.js: reject replaced with resolve
Mutant 1089 in q.js: reject replaced with deferred.reject
Mutant 1090 in q.js: exception replaced with exception.message
Mutant 1091 in q.js: exception replaced with exception.stack
Mutant 1092 in q.js: exception replaced with null
Mutant 1093 in q.js: result.done replaced with result.fail
Mutant 1094 in q.js: result.done replaced with result.isRejected
Mutant 1095 in q.js: result.done replaced with result.isFulfilled
Mutant 1096 in q.js: result.value replaced with result.value + 1
Mutant 1097 in q.js: result.value replaced with result.value * 2
Mutant 1098 in q.js: result.value replaced with result.value - 1
Mutant 1099 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, callback)
Mutant 1100 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback, callback)
Mutant 1101 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, errback)
Mutant 1102 in q.js: result.value replaced with result.value + 1
Mutant 1103 in q.js: result.value replaced with result.value * 2
Mutant 1104 in q.js: result.value replaced with result.value - 1
Mutant 1105 in q.js: callback replaced with reject
Mutant 1106 in q.js: callback replaced with Q.reject
Mutant 1107 in q.js: errback replaced with reject
Mutant 1108 in q.js: errback replaced with resolve
Mutant 1109 in q.js: arg replaced with arg + 1
Mutant 1110 in q.js: arg replaced with arg * 2
Mutant 1111 in q.js: arg replaced with arg.length
Mutant 1112 in q.js: isStopIteration(exception) replaced with exception instanceof StopIteration
Mutant 1113 in q.js: isStopIteration(exception) replaced with exception.name === "StopIteration"
Mutant 1114 in q.js: isStopIteration(exception) replaced with exception.constructor === StopIteration
Mutant 1115 in q.js: isStopIteration replaced with isStopIteration = false
Mutant 1116 in q.js: isStopIteration replaced with isStopIteration = true
Mutant 1117 in q.js: isStopIteration replaced with isStopIteration = !isStopIteration
Mutant 1118 in q.js: exception replaced with exception.value
Mutant 1119 in q.js: exception replaced with exception.message
Mutant 1120 in q.js: exception.value replaced with exception.message
Mutant 1121 in q.js: exception.value replaced with exception.stack
Mutant 1122 in q.js: exception.value replaced with exception.name
Mutant 1123 in q.js: reject replaced with Q.reject
Mutant 1124 in q.js: exception replaced with null
Mutant 1125 in q.js: exception replaced with undefined
Mutant 1126 in q.js: exception replaced with "error"
Mutant 1127 in q.js: when(result, callback, errback) replaced with when(result, errback, callback)
Mutant 1128 in q.js: when(result, callback, errback) replaced with when(result, callback, errback, null)
Mutant 1129 in q.js: when(result, callback, errback) replaced with when(result, callback, errback, undefined)
Mutant 1130 in q.js: when replaced with Q.reject
Mutant 1131 in q.js: when replaced with Q.resolve
Mutant 1132 in q.js: when replaced with Q.defer
Mutant 1133 in q.js: result replaced with result + 1
Mutant 1134 in q.js: result replaced with result * 2
Mutant 1135 in q.js: result replaced with result - 1
Mutant 1136 in q.js: callback replaced with errback
Mutant 1137 in q.js: callback replaced with reject
Mutant 1138 in q.js: callback replaced with resolve
Mutant 1139 in q.js: errback replaced with reject
Mutant 1140 in q.js: errback replaced with resolve
Mutant 1141 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1142 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(undefined)
Mutant 1143 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply({})
Mutant 1144 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 1145 in q.js: makeGenerator.apply replaced with makeGenerator.bind
Mutant 1146 in q.js: this replaced with null
Mutant 1147 in q.js: this replaced with undefined
Mutant 1148 in q.js: this replaced with {}
Mutant 1149 in q.js: arguments replaced with null
Mutant 1150 in q.js: arguments replaced with undefined
Mutant 1151 in q.js: arguments replaced with []
Mutant 1152 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "throw")
Mutant 1153 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "return")
Mutant 1154 in q.js: continuer.bind replaced with continuer.call
Mutant 1155 in q.js: continuer.bind replaced with continuer.apply
Mutant 1156 in q.js: continuer replaced with continuer.bind(null, "next")
Mutant 1157 in q.js: continuer replaced with continuer.bind(undefined, "next")
Mutant 1158 in q.js: continuer replaced with continuer.bind(void 0, "next")
Mutant 1159 in q.js: "next" replaced with "throw"
Mutant 1160 in q.js: "next" replaced with "return"
Mutant 1161 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw"))
Mutant 1162 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw", "error"))
Mutant 1163 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw", "error", "message"))
Mutant 1164 in q.js: continuer replaced with continuer.bind(null, "throw")
Mutant 1165 in q.js: continuer replaced with continuer.bind(undefined, "throw")
Mutant 1166 in q.js: continuer replaced with continuer.bind(void 0, "throw")
Mutant 1167 in q.js: "throw" replaced with "send"
Mutant 1168 in q.js: "throw" replaced with "next"
Mutant 1169 in q.js: "throw" replaced with "reject"
Mutant 1170 in q.js: callback replaced with errback
Mutant 1171 in q.js: callback replaced with reject
Mutant 1172 in q.js: Q.done replaced with Q.fail
Mutant 1173 in q.js: Q.done replaced with Q.reject
Mutant 1174 in q.js: Q.done replaced with Q.resolve
Mutant 1175 in q.js: makeGenerator replaced with makeGenerator.bind(this)
Mutant 1176 in q.js: makeGenerator replaced with makeGenerator.call(this)
Mutant 1177 in q.js: makeGenerator replaced with makeGenerator.apply(this)
Mutant 1178 in q.js: all replaced with none
Mutant 1179 in q.js: all replaced with some
Mutant 1180 in q.js: all replaced with any
Mutant 1181 in q.js: arguments replaced with null
Mutant 1182 in q.js: arguments replaced with undefined
Mutant 1183 in q.js: arguments replaced with []
Mutant 1184 in q.js: callback.apply(self, args) replaced with callback.apply(self, args, null)
Mutant 1185 in q.js: callback.apply(self, args) replaced with callback.apply(args, self)
Mutant 1186 in q.js: callback.apply(self, args) replaced with callback.apply(self, args, undefined)
Mutant 1187 in q.js: callback.apply replaced with callback.call
Mutant 1188 in q.js: callback.apply replaced with callback.bind
Mutant 1189 in q.js: self replaced with null
Mutant 1190 in q.js: self replaced with undefined
Mutant 1191 in q.js: self replaced with {}
Mutant 1192 in q.js: args replaced with args[0]
Mutant 1193 in q.js: args replaced with args.slice(1)
Mutant 1194 in q.js: args replaced with args.concat(args[0])
Mutant 1195 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op + args)
Mutant 1196 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.length)
Mutant 1197 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args[0])
Mutant 1198 in q.js: Q replaced with Q.reject
Mutant 1199 in q.js: Q replaced with Q.resolve
Mutant 1200 in q.js: Q replaced with Q.defer
Mutant 1201 in q.js: object replaced with null
Mutant 1202 in q.js: object replaced with undefined
Mutant 1203 in q.js: object replaced with {}
Mutant 1204 in q.js: op replaced with op + 1
Mutant 1205 in q.js: op replaced with op - 1
Mutant 1206 in q.js: op replaced with op * 2
Mutant 1207 in q.js: args replaced with null
Mutant 1208 in q.js: args replaced with undefined
Mutant 1209 in q.js: args replaced with []
Mutant 1210 in q.js: defer replaced with deferred.reject
Mutant 1211 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1212 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.slice(1))
Mutant 1213 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.concat(1))
Mutant 1214 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1215 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1216 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1217 in q.js: op replaced with op + 1
Mutant 1218 in q.js: op replaced with op - 1
Mutant 1219 in q.js: op replaced with op * 2
Mutant 1220 in q.js: args replaced with args[0]
Mutant 1221 in q.js: args replaced with args.slice(1)
Mutant 1222 in q.js: args replaced with args.concat(args[0])
Mutant 1223 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key])
Mutant 1224 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("post", [key, value])
Mutant 1225 in q.js: Q replaced with Q.reject
Mutant 1226 in q.js: Q replaced with Q.defer
Mutant 1227 in q.js: object replaced with null
Mutant 1228 in q.js: object replaced with undefined
Mutant 1229 in q.js: object replaced with {}
Mutant 1230 in q.js: "get" replaced with "set"
Mutant 1231 in q.js: "get" replaced with "post"
Mutant 1232 in q.js: [key] replaced with [key + 1]
Mutant 1233 in q.js: [key] replaced with [key * 2]
Mutant 1234 in q.js: [key] replaced with [key - 1]
Mutant 1235 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key])
Mutant 1236 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key])
Mutant 1237 in q.js: "get" replaced with "set"
Mutant 1238 in q.js: "get" replaced with "post"
Mutant 1239 in q.js: [key] replaced with [key + 1]
Mutant 1240 in q.js: [key] replaced with [key * 2]
Mutant 1241 in q.js: [key] replaced with [key - 1]
Mutant 1242 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, key])
Mutant 1243 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, key])
Mutant 1244 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, value])
Mutant 1245 in q.js: Q replaced with Q.reject
Mutant 1246 in q.js: Q replaced with Q.defer
Mutant 1247 in q.js: Q replaced with Q.all
Mutant 1248 in q.js: object replaced with null
Mutant 1249 in q.js: object replaced with undefined
Mutant 1250 in q.js: object replaced with 0
Mutant 1251 in q.js: "set" replaced with "post"
Mutant 1252 in q.js: "set" replaced with "apply"
Mutant 1253 in q.js: [key, value] replaced with [value, key]
Mutant 1254 in q.js: [key, value] replaced with [key, value, null]
Mutant 1255 in q.js: [key, value] replaced with [key, value, key]
Mutant 1256 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value, key])
Mutant 1257 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, key])
Mutant 1258 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value, value])
Mutant 1259 in q.js: "set" replaced with "setValue"
Mutant 1260 in q.js: "set" replaced with "get"
Mutant 1261 in q.js: [key, value] replaced with [value, key]
Mutant 1262 in q.js: [key, value] replaced with [key, value, null]
Mutant 1263 in q.js: [key, value] replaced with [key, value, undefined]
Mutant 1264 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1265 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, null])
Mutant 1266 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, ""])
Mutant 1267 in q.js: Q replaced with Q.reject
Mutant 1268 in q.js: Q replaced with Q.defer
Mutant 1269 in q.js: Q replaced with Q.all
Mutant 1270 in q.js: object replaced with "foo"
Mutant 1271 in q.js: "delete" replaced with "set"
Mutant 1272 in q.js: "delete" replaced with "get"
Mutant 1273 in q.js: "delete" replaced with "post"
Mutant 1274 in q.js: [key] replaced with [key, key]
Mutant 1275 in q.js: [key] replaced with [key, undefined]
Mutant 1276 in q.js: [key] replaced with [undefined, key]
Mutant 1277 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, undefined])
Mutant 1278 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, null])
Mutant 1279 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, ""])
Mutant 1280 in q.js: [key] replaced with [key, key]
Mutant 1281 in q.js: [key] replaced with [key + 1]
Mutant 1282 in q.js: [key] replaced with [key - 1]
Mutant 1283 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [args, name])
Mutant 1284 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.reverse()])
Mutant 1285 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.slice(1)])
Mutant 1286 in q.js: Q replaced with Q.reject
Mutant 1287 in q.js: Q replaced with Q.resolve
Mutant 1288 in q.js: Q replaced with Q.defer
Mutant 1289 in q.js: object replaced with null
Mutant 1290 in q.js: object replaced with undefined
Mutant 1291 in q.js: object replaced with {}
Mutant 1292 in q.js: "post" replaced with "get"
Mutant 1293 in q.js: "post" replaced with "set"
Mutant 1294 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1295 in q.js: [name, args] replaced with [name, args.concat(args)]
Mutant 1296 in q.js: [name, args] replaced with [name, args.reverse()]
Mutant 1297 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.slice(1)])
Mutant 1298 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.reverse()])
Mutant 1299 in q.js: "post" replaced with "put"
Mutant 1300 in q.js: "post" replaced with "get"
Mutant 1301 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1302 in q.js: [name, args] replaced with [name, args.reverse()]
Mutant 1303 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1304 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1305 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 4)])
Mutant 1306 in q.js: Q replaced with Q.reject
Mutant 1307 in q.js: Q replaced with Q.resolve
Mutant 1308 in q.js: Q replaced with Q.defer
Mutant 1309 in q.js: object replaced with null
Mutant 1310 in q.js: object replaced with undefined
Mutant 1311 in q.js: object replaced with "foo"
Mutant 1312 in q.js: "post" replaced with "put"
Mutant 1313 in q.js: "post" replaced with "get"
Mutant 1314 in q.js: "post" replaced with "resolve"
Mutant 1315 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1316 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 3)]
Mutant 1317 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 2, 1)]
Mutant 1318 in q.js: array_slice(arguments, 2) replaced with array_slice(args, 2)
Mutant 1319 in q.js: array_slice(arguments, 2) replaced with array_slice([], 2)
Mutant 1320 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1321 in q.js: 2 replaced with 5
Mutant 1322 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1323 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 0)])
Mutant 1324 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 1, 2)])
Mutant 1325 in q.js: "post" replaced with "put"
Mutant 1326 in q.js: "post" replaced with "patch"
Mutant 1327 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1328 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 0, 1)]
Mutant 1329 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 1, 2)]
Mutant 1330 in q.js: array_slice(arguments, 1) replaced with array_slice([1, 2, 3])
Mutant 1331 in q.js: arguments replaced with null
Mutant 1332 in q.js: arguments replaced with undefined
Mutant 1333 in q.js: arguments replaced with []
Mutant 1334 in q.js: 1 replaced with -1
Mutant 1335 in q.js: 1 replaced with arguments.length - 1
Mutant 1336 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [void 0, args])
Mutant 1337 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, [args]])
Mutant 1338 in q.js: Q replaced with Q.reject
Mutant 1339 in q.js: Q replaced with Q.resolve
Mutant 1340 in q.js: Q replaced with Q.defer
Mutant 1341 in q.js: object replaced with null
Mutant 1342 in q.js: object replaced with undefined
Mutant 1343 in q.js: object replaced with function () {}
Mutant 1344 in q.js: "apply" replaced with "call"
Mutant 1345 in q.js: "apply" replaced with "bind"
Mutant 1346 in q.js: "apply" replaced with "concat"
Mutant 1347 in q.js: [void 0, args] replaced with [void 0, args.slice(1)]
Mutant 1348 in q.js: [void 0, args] replaced with [void 0, args.concat(args)]
Mutant 1349 in q.js: [void 0, args] replaced with [void 0, args.reverse()]
Mutant 1350 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [null, args])
Mutant 1351 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [undefined, args])
Mutant 1352 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [args])
Mutant 1353 in q.js: "apply" replaced with "call"
Mutant 1354 in q.js: "apply" replaced with "bind"
Mutant 1355 in q.js: "apply" replaced with "apply" + "call"
Mutant 1356 in q.js: [void 0, args] replaced with [void 0, args, 1]
Mutant 1357 in q.js: [void 0, args] replaced with [void 0, args, "foo"]
Mutant 1358 in q.js: [void 0, args] replaced with [void 0, args, null]
Mutant 1359 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1360 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 0, 1)])
Mutant 1361 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)])
Mutant 1362 in q.js: Q replaced with Q.reject
Mutant 1363 in q.js: Q replaced with Q.resolve
Mutant 1364 in q.js: Q replaced with Q.defer
Mutant 1365 in q.js: object replaced with null
Mutant 1366 in q.js: object replaced with undefined
Mutant 1367 in q.js: object replaced with {}
Mutant 1368 in q.js: "apply" replaced with "call"
Mutant 1369 in q.js: "apply" replaced with "bind"
Mutant 1370 in q.js: "apply" replaced with "concat"
Mutant 1371 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1372 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 0, 1)]
Mutant 1373 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1374 in q.js: array_slice(arguments, 1) replaced with array_slice([], 1)
Mutant 1375 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1376 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1377 in q.js: 1 replaced with 3
Mutant 1378 in q.js: 1 replaced with 4
Mutant 1379 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [null, array_slice(arguments)])
Mutant 1380 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1381 in q.js: "apply" replaced with "call"
Mutant 1382 in q.js: "apply" replaced with "bind"
Mutant 1383 in q.js: "apply" replaced with "apply" + "call"
Mutant 1384 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1385 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1386 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 3)]
Mutant 1387 in q.js: object replaced with null
Mutant 1388 in q.js: object replaced with undefined
Mutant 1389 in q.js: object replaced with {}
Mutant 1390 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1391 in q.js: array_slice(arguments, 1) replaced with array_slice(args.length)
Mutant 1392 in q.js: array_slice(arguments, 1) replaced with array_slice(void 0)
Mutant 1393 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1394 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1395 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1396 in q.js: 1 replaced with 0
Mutant 1397 in q.js: 1 replaced with -1
Mutant 1398 in q.js: 1 replaced with arguments.length - 1
Mutant 1399 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1400 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1401 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1402 in q.js: arguments replaced with args.slice(1)
Mutant 1403 in q.js: arguments replaced with args.slice(0, -1)
Mutant 1404 in q.js: arguments replaced with args.slice(1, -1)
Mutant 1405 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1406 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1407 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1408 in q.js: arguments replaced with null
Mutant 1409 in q.js: arguments replaced with undefined
Mutant 1410 in q.js: arguments replaced with []
Mutant 1411 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1412 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("length", [])
Mutant 1413 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("toString", [])
Mutant 1414 in q.js: Q replaced with Q.reject
Mutant 1415 in q.js: Q replaced with Q.resolve
Mutant 1416 in q.js: Q replaced with Q.defer
Mutant 1417 in q.js: object replaced with null
Mutant 1418 in q.js: object replaced with undefined
Mutant 1419 in q.js: object replaced with {}
Mutant 1420 in q.js: "keys" replaced with "values"
Mutant 1421 in q.js: "keys" replaced with "length"
Mutant 1422 in q.js: "keys" replaced with "toString"
Mutant 1423 in q.js: [] replaced with [1]
Mutant 1424 in q.js: [] replaced with [undefined]
Mutant 1425 in q.js: [] replaced with [null]
Mutant 1426 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1427 in q.js: this.dispatch("keys", []) replaced with this.dispatch("length", [])
Mutant 1428 in q.js: this.dispatch("keys", []) replaced with this.dispatch("toString", [])
Mutant 1429 in q.js: "keys" replaced with "values"
Mutant 1430 in q.js: "keys" replaced with "length"
Mutant 1431 in q.js: "keys" replaced with "toString"
Mutant 1432 in q.js: [] replaced with [1]
Mutant 1433 in q.js: [] replaced with [undefined]
Mutant 1434 in q.js: [] replaced with [null]
Mutant 1435 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "rejected"
Mutant 1436 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "pending"
Mutant 1437 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "fulfilled" && promise.inspect().value === undefined
Mutant 1438 in q.js: promise replaced with promise.then(function () {
  throw new Error("Buggy code");
})
Mutant 1439 in q.js: promise replaced with promise.then(function () {
  return Q.reject("Buggy code");
})
Mutant 1440 in q.js: promise replaced with promise.then(function () {
  return Q.resolve("Buggy code");
})
Mutant 1441 in q.js: promise.inspect replaced with promise.inspect.state
Mutant 1442 in q.js: promise.inspect replaced with promise.state
Mutant 1443 in q.js: promise.inspect replaced with promise.isFulfilled
Mutant 1444 in q.js: --pendingCount === 0 replaced with pendingCount < 0
Mutant 1445 in q.js: --pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1446 in q.js: --pendingCount === 0 replaced with pendingCount === 0 && promises.length > 0
Mutant 1447 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1448 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1449 in q.js: promises replaced with promises.slice(1)
Mutant 1450 in q.js: promises replaced with promises.concat([Q.reject()])
Mutant 1451 in q.js: promises replaced with promises.map(function (promise) {
  return Q.reject(promise.inspect().value);
})
Mutant 1452 in q.js: deferred.notify replaced with deferred.reject
Mutant 1453 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1454 in q.js: deferred.notify replaced with deferred.progress
Mutant 1455 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index + 1,
  value: progress
}
Mutant 1456 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index - 1,
  value: progress
}
Mutant 1457 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index * 2,
  value: progress
}
Mutant 1458 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1459 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1460 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1461 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1462 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1463 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1464 in q.js: promises replaced with promises.slice(1)
Mutant 1465 in q.js: promises replaced with promises.concat([Q.reject()])
Mutant 1466 in q.js: promises replaced with promises.map(function (promise) {
  return Q.reject(promise.inspect().value);
})
Mutant 1467 in q.js: all replaced with any
Mutant 1468 in q.js: all replaced with allSettled
Mutant 1469 in q.js: all replaced with allResolved
Mutant 1470 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1471 in q.js: promises.length === 0 replaced with promises.length > 0
Mutant 1472 in q.js: promises.length === 0 replaced with promises.length === 1
Mutant 1473 in q.js: Q.resolve replaced with Q.reject
Mutant 1474 in q.js: Q.resolve replaced with Q.defer
Mutant 1475 in q.js: Q.resolve replaced with Q.when
Mutant 1476 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected, onProgress))
Mutant 1477 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected).then(onProgress))
Mutant 1478 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected).then(onProgress).catch(onRejected))
Mutant 1479 in q.js: when replaced with when.reject
Mutant 1480 in q.js: when replaced with when.resolve
Mutant 1481 in q.js: when replaced with when.then
Mutant 1482 in q.js: promise replaced with promise.then(onFulfilled, onRejected)
Mutant 1483 in q.js: promise replaced with promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected)
Mutant 1484 in q.js: promise replaced with promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected).then(onFulfilled, onRejected)
Mutant 1485 in q.js: onFulfilled replaced with onRejected
Mutant 1486 in q.js: onFulfilled replaced with onProgress
Mutant 1487 in q.js: onFulfilled replaced with noop
Mutant 1488 in q.js: onRejected replaced with onFulfilled
Mutant 1489 in q.js: onRejected replaced with onProgress
Mutant 1490 in q.js: onProgress replaced with onRejected
Mutant 1491 in q.js: onProgress replaced with onFulfilled
Mutant 1492 in q.js: onProgress replaced with noop
Mutant 1493 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1494 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1495 in q.js: result replaced with promise
Mutant 1496 in q.js: result replaced with index
Mutant 1497 in q.js: result replaced with promise.value
Mutant 1498 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1499 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1500 in q.js: pendingCount === 0 replaced with pendingCount !== 0
Mutant 1501 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1502 in q.js: deferred.reject replaced with deferred.notify
Mutant 1503 in q.js: deferred.reject replaced with deferred.inspect
Mutant 1504 in q.js: any replaced with all
Mutant 1505 in q.js: any replaced with none
Mutant 1506 in q.js: any replaced with some
Mutant 1507 in q.js: this replaced with null
Mutant 1508 in q.js: this replaced with undefined
Mutant 1509 in q.js: this replaced with Promise.reject()
Mutant 1510 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allSettled, "allSettled", "allResolved")
Mutant 1511 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allSettled", "allSettled")
Mutant 1512 in q.js: allResolved replaced with allRejected
Mutant 1513 in q.js: allResolved replaced with anyResolved
Mutant 1514 in q.js: allResolved replaced with allSettled
Mutant 1515 in q.js: "allResolved" replaced with "allSettled"
Mutant 1516 in q.js: "allResolved" replaced with "any"
Mutant 1517 in q.js: "allResolved" replaced with "all"
Mutant 1518 in q.js: "allSettled" replaced with "allResolved"
Mutant 1519 in q.js: "allSettled" replaced with "any"
Mutant 1520 in q.js: "allSettled" replaced with "all"
Mutant 1521 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.reject)
Mutant 1522 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.resolve)
Mutant 1523 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.defer)
Mutant 1524 in q.js: array_map replaced with array_filter
Mutant 1525 in q.js: array_map replaced with array_reduce
Mutant 1526 in q.js: array_map replaced with array_forEach
Mutant 1527 in q.js: promises replaced with promises.slice(0)
Mutant 1528 in q.js: promises replaced with promises.concat()
Mutant 1529 in q.js: promises replaced with promises.filter(function () {
  return true;
})
Mutant 1530 in q.js: Q replaced with Q.reject()
Mutant 1531 in q.js: Q replaced with Q.resolve()
Mutant 1532 in q.js: Q replaced with Q.defer()
Mutant 1533 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop))
Mutant 1534 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop))
Mutant 1535 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop).then(noop, noop))
Mutant 1536 in q.js: allResolved replaced with allSettled
Mutant 1537 in q.js: allResolved replaced with any
Mutant 1538 in q.js: this replaced with null
Mutant 1539 in q.js: this replaced with undefined
Mutant 1540 in q.js: this replaced with 0
Mutant 1541 in q.js: promises replaced with promises.reverse()
Mutant 1542 in q.js: promises replaced with promises.slice(1)
Mutant 1543 in q.js: promises replaced with promises.concat(Q.reject())
Mutant 1544 in q.js: promise replaced with promise.then(function (result) {
  return result + 1;
})
Mutant 1545 in q.js: promise replaced with promise.then(function (result) {
  return result * 2;
})
Mutant 1546 in q.js: promise replaced with promise.then(function (result) {
  return result + Math.random();
})
Mutant 1547 in q.js: promise.then(regardless, regardless) replaced with promise.then(onRejected, onRejected)
Mutant 1548 in q.js: promise.then(regardless, regardless) replaced with promise.then(onFulfilled, onRejected)
Mutant 1549 in q.js: regardless replaced with promise.inspect()
Mutant 1550 in q.js: regardless replaced with promise.then(noop, noop)
Mutant 1551 in q.js: regardless replaced with promise.then(function (value) {
  return value;
}, function (reason) {
  throw reason;
})
Mutant 1552 in q.js: regardless replaced with noop
Mutant 1553 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(null, rejected)
Mutant 1554 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(undefined, rejected)
Mutant 1555 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(rejected, null)
Mutant 1556 in q.js: object replaced with 0
Mutant 1557 in q.js: void 0 replaced with null
Mutant 1558 in q.js: void 0 replaced with undefined
Mutant 1559 in q.js: void 0 replaced with () => {}
Mutant 1560 in q.js: rejected replaced with Q.reject(promise)
Mutant 1561 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1562 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, rejected)
Mutant 1563 in q.js: this.then(void 0, rejected) replaced with this.then(rejected, null)
Mutant 1564 in q.js: void 0 replaced with null
Mutant 1565 in q.js: void 0 replaced with undefined
Mutant 1566 in q.js: rejected replaced with resolved
Mutant 1567 in q.js: rejected replaced with deferred.reject(rejection)
Mutant 1568 in q.js: rejected replaced with deferred.notify(rejection)
Mutant 1569 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(null, null, progressed)
Mutant 1570 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(undefined, undefined, progressed)
Mutant 1571 in q.js: object replaced with 0
Mutant 1572 in q.js: void 0 replaced with null
Mutant 1573 in q.js: void 0 replaced with undefined
Mutant 1574 in q.js: void 0 replaced with NaN
Mutant 1575 in q.js: void 0 replaced with null
Mutant 1576 in q.js: void 0 replaced with undefined
Mutant 1577 in q.js: void 0 replaced with () => {}
Mutant 1578 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1579 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, progressed)
Mutant 1580 in q.js: void 0 replaced with null
Mutant 1581 in q.js: void 0 replaced with undefined
Mutant 1582 in q.js: void 0 replaced with 0
Mutant 1583 in q.js: void 0 replaced with null
Mutant 1584 in q.js: void 0 replaced with undefined
Mutant 1585 in q.js: void 0 replaced with NaN
Mutant 1586 in q.js: object replaced with null
Mutant 1587 in q.js: object replaced with undefined
Mutant 1588 in q.js: object replaced with 0
Mutant 1589 in q.js: callback replaced with callback.fcall()
Mutant 1590 in q.js: callback replaced with callback.fcall().then(function () {})
Mutant 1591 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply === "function"
Mutant 1592 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply !== "function"
Mutant 1593 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply === "object"
Mutant 1594 in q.js: Q replaced with Q.reject
Mutant 1595 in q.js: Q replaced with Q.resolve
Mutant 1596 in q.js: Q replaced with Q.defer
Mutant 1597 in q.js: callback replaced with callback.fcall()
Mutant 1598 in q.js: callback replaced with callback.fcall(promise)
Mutant 1599 in q.js: callback replaced with callback.fcall(promise.then)
Mutant 1600 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1601 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress, null)
Mutant 1602 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress, undefined)
Mutant 1603 in q.js: object replaced with "foo"
Mutant 1604 in q.js: fulfilled replaced with rejected
Mutant 1605 in q.js: fulfilled replaced with progressed
Mutant 1606 in q.js: fulfilled replaced with void 0
Mutant 1607 in q.js: rejected replaced with fulfilled
Mutant 1608 in q.js: rejected replaced with progressed
Mutant 1609 in q.js: progress replaced with null
Mutant 1610 in q.js: progress replaced with undefined
Mutant 1611 in q.js: progress replaced with function () {}
Mutant 1612 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.then())
Mutant 1613 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.catch())
Mutant 1614 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.finally())
Mutant 1615 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(rejected, fulfilled, progress)
Mutant 1616 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, progress, "extra argument")
Mutant 1617 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, progress, function () {})
Mutant 1618 in q.js: fulfilled replaced with rejected
Mutant 1619 in q.js: fulfilled replaced with undefined
Mutant 1620 in q.js: fulfilled replaced with null
Mutant 1621 in q.js: rejected replaced with fulfilled
Mutant 1622 in q.js: rejected replaced with null
Mutant 1623 in q.js: rejected replaced with undefined
Mutant 1624 in q.js: progress replaced with null
Mutant 1625 in q.js: progress replaced with undefined
Mutant 1626 in q.js: progress replaced with 0
Mutant 1627 in q.js: onUnhandledError replaced with onUnhandledError.bind(null)
Mutant 1628 in q.js: onUnhandledError replaced with onUnhandledError.bind(undefined)
Mutant 1629 in q.js: onUnhandledError replaced with onUnhandledError.bind(this)
Mutant 1630 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(null, onUnhandledError)
Mutant 1631 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(undefined, onUnhandledError)
Mutant 1632 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError, null)
Mutant 1633 in q.js: void 0 replaced with null
Mutant 1634 in q.js: void 0 replaced with undefined
Mutant 1635 in q.js: void 0 replaced with 0
Mutant 1636 in q.js: onUnhandledError replaced with onUnhandledError()
Mutant 1637 in q.js: onUnhandledError replaced with null
Mutant 1638 in q.js: onUnhandledError replaced with undefined
Mutant 1639 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, new Error("Timeout error"))
Mutant 1640 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, error.message)
Mutant 1641 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, error.stack)
Mutant 1642 in q.js: Q replaced with Q.reject
Mutant 1643 in q.js: Q replaced with Q.resolve
Mutant 1644 in q.js: Q replaced with Q.defer
Mutant 1645 in q.js: object replaced with null
Mutant 1646 in q.js: object replaced with undefined
Mutant 1647 in q.js: object replaced with 0
Mutant 1648 in q.js: ms replaced with 0
Mutant 1649 in q.js: ms replaced with -1
Mutant 1650 in q.js: ms replaced with null
Mutant 1651 in q.js: error replaced with null
Mutant 1652 in q.js: error replaced with undefined
Mutant 1653 in q.js: error replaced with "error"
Mutant 1654 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1655 in q.js: !error || "string" === typeof error replaced with error || "string" !== typeof error
Mutant 1656 in q.js: !error || "string" === typeof error replaced with error && "string" !== typeof error
Mutant 1657 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1658 in q.js: error replaced with null
Mutant 1659 in q.js: error replaced with undefined
Mutant 1660 in q.js: error replaced with "error"
Mutant 1661 in q.js: clearTimeout replaced with clearInterval
Mutant 1662 in q.js: timeoutId replaced with null
Mutant 1663 in q.js: timeoutId replaced with undefined
Mutant 1664 in q.js: timeoutId replaced with 0
Mutant 1665 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1666 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1667 in q.js: deferred.resolve replaced with undefined
Mutant 1668 in q.js: value replaced with null
Mutant 1669 in q.js: value replaced with undefined
Mutant 1670 in q.js: clearTimeout replaced with clearInterval
Mutant 1671 in q.js: timeoutId replaced with null
Mutant 1672 in q.js: timeoutId replaced with undefined
Mutant 1673 in q.js: timeoutId replaced with 0
Mutant 1674 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1675 in q.js: timeout === void 0 replaced with timeout !== void 0
Mutant 1676 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1677 in q.js: timeout === void 0 replaced with timeout === 0
Mutant 1678 in q.js: Q replaced with Q.reject
Mutant 1679 in q.js: Q replaced with Q.resolve
Mutant 1680 in q.js: Q replaced with Q.defer
Mutant 1681 in q.js: object replaced with null
Mutant 1682 in q.js: object replaced with undefined
Mutant 1683 in q.js: object replaced with {}
Mutant 1684 in q.js: timeout replaced with timeout + 1
Mutant 1685 in q.js: timeout replaced with timeout - 1
Mutant 1686 in q.js: timeout replaced with timeout * 2
Mutant 1687 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1688 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1689 in q.js: deferred.resolve replaced with undefined
Mutant 1690 in q.js: value replaced with null
Mutant 1691 in q.js: value replaced with undefined
Mutant 1692 in q.js: value replaced with 0
Mutant 1693 in q.js: Q replaced with Q.reject
Mutant 1694 in q.js: Q replaced with Q.resolve
Mutant 1695 in q.js: Q replaced with Q.defer
Mutant 1696 in q.js: callback replaced with null
Mutant 1697 in q.js: callback replaced with undefined
Mutant 1698 in q.js: callback replaced with function () {}
Mutant 1699 in q.js: args replaced with null
Mutant 1700 in q.js: args replaced with undefined
Mutant 1701 in q.js: args replaced with []
Mutant 1702 in q.js: args replaced with args.slice(1)
Mutant 1703 in q.js: args replaced with args.concat([1])
Mutant 1704 in q.js: args replaced with args.filter(function (x) {
  return x !== 1;
})
Mutant 1705 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1706 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1707 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1708 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1709 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1710 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (error, result) {})
Mutant 1711 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1712 in q.js: nodeArgs replaced with nodeArgs.concat(["extra argument"])
Mutant 1713 in q.js: nodeArgs replaced with nodeArgs.reverse()
Mutant 1714 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1715 in q.js: deferred.reject replaced with deferred.notify
Mutant 1716 in q.js: deferred.reject replaced with deferred.reject("Different error message")
Mutant 1717 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1718 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1719 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1, 2))
Mutant 1720 in q.js: arguments replaced with null
Mutant 1721 in q.js: arguments replaced with undefined
Mutant 1722 in q.js: arguments replaced with []
Mutant 1723 in q.js: 1 replaced with 0
Mutant 1724 in q.js: 1 replaced with -1
Mutant 1725 in q.js: 1 replaced with "foo"
Mutant 1726 in q.js: callback replaced with null
Mutant 1727 in q.js: callback replaced with undefined
Mutant 1728 in q.js: callback replaced with function () {}
Mutant 1729 in q.js: args replaced with null
Mutant 1730 in q.js: args replaced with undefined
Mutant 1731 in q.js: args replaced with []
Mutant 1732 in q.js: arguments replaced with null
Mutant 1733 in q.js: arguments replaced with undefined
Mutant 1734 in q.js: arguments replaced with []
Mutant 1735 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1736 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1737 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1738 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1739 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1740 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (error) {
  throw error;
})
Mutant 1741 in q.js: nodeArgs replaced with nodeArgs.slice(0)
Mutant 1742 in q.js: nodeArgs replaced with nodeArgs.concat([deferred.makeNodeResolver()])
Mutant 1743 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1744 in q.js: deferred.reject replaced with deferred.notify
Mutant 1745 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1746 in q.js: callback === undefined replaced with callback !== undefined
Mutant 1747 in q.js: callback === undefined replaced with callback === null
Mutant 1748 in q.js: callback === undefined replaced with typeof callback === "function"
Mutant 1749 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1750 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1751 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, -1)
Mutant 1752 in q.js: arguments replaced with null
Mutant 1753 in q.js: arguments replaced with undefined
Mutant 1754 in q.js: arguments replaced with []
Mutant 1755 in q.js: 1 replaced with 2
Mutant 1756 in q.js: 1 replaced with 3
Mutant 1757 in q.js: 1 replaced with 4
Mutant 1758 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1759 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1760 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1761 in q.js: arguments replaced with null
Mutant 1762 in q.js: arguments replaced with undefined
Mutant 1763 in q.js: arguments replaced with []
Mutant 1764 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1765 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1766 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1767 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1768 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1769 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err) {
  throw err;
})
Mutant 1770 in q.js: Q replaced with deferred
Mutant 1771 in q.js: Q replaced with undefined
Mutant 1772 in q.js: callback replaced with null
Mutant 1773 in q.js: callback replaced with undefined
Mutant 1774 in q.js: callback replaced with function () {}
Mutant 1775 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1776 in q.js: nodeArgs replaced with nodeArgs.concat([1, 2, 3])
Mutant 1777 in q.js: nodeArgs replaced with nodeArgs.filter(function (arg) {
  return arg !== 1;
})
Mutant 1778 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1779 in q.js: deferred.reject replaced with deferred.notify
Mutant 1780 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1781 in q.js: arguments replaced with arguments[0]
Mutant 1782 in q.js: arguments replaced with arguments.slice(1)
Mutant 1783 in q.js: arguments replaced with [].concat(arguments)
Mutant 1784 in q.js: args.unshift replaced with args.push
Mutant 1785 in q.js: args.unshift replaced with args.shift
Mutant 1786 in q.js: args.unshift replaced with args.pop
Mutant 1787 in q.js: this replaced with null
Mutant 1788 in q.js: this replaced with undefined
Mutant 1789 in q.js: this replaced with {}
Mutant 1790 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null, args)
Mutant 1791 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(undefined, args)
Mutant 1792 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1793 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1794 in q.js: void 0 replaced with null
Mutant 1795 in q.js: void 0 replaced with undefined
Mutant 1796 in q.js: void 0 replaced with 0
Mutant 1797 in q.js: args replaced with args.slice(1)
Mutant 1798 in q.js: args replaced with args.concat(deferred.makeNodeResolver())
Mutant 1799 in q.js: args replaced with args.reverse()
Mutant 1800 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1801 in q.js: array_slice(arguments, 2) replaced with array_slice(args, 2)
Mutant 1802 in q.js: array_slice(arguments, 2) replaced with array_slice(baseArgs, 1)
Mutant 1803 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1804 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1805 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1806 in q.js: 2 replaced with 1
Mutant 1807 in q.js: 2 replaced with 0
Mutant 1808 in q.js: 2 replaced with -1
Mutant 1809 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1810 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1811 in q.js: baseArgs.concat replaced with baseArgs.splice
Mutant 1812 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1813 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1814 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1815 in q.js: array_slice replaced with array_slice.length
Mutant 1816 in q.js: arguments replaced with null
Mutant 1817 in q.js: arguments replaced with undefined
Mutant 1818 in q.js: arguments replaced with []
Mutant 1819 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1820 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1821 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1822 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1823 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1824 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(deferred.reject)
Mutant 1825 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments[0])
Mutant 1826 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments.slice())
Mutant 1827 in q.js: callback.apply replaced with callback.call
Mutant 1828 in q.js: callback.apply replaced with callback.bind
Mutant 1829 in q.js: thisp replaced with null
Mutant 1830 in q.js: thisp replaced with undefined
Mutant 1831 in q.js: thisp replaced with {}
Mutant 1832 in q.js: arguments replaced with nodeArgs
Mutant 1833 in q.js: arguments replaced with baseArgs
Mutant 1834 in q.js: arguments replaced with args
Mutant 1835 in q.js: bound replaced with null
Mutant 1836 in q.js: bound replaced with undefined
Mutant 1837 in q.js: bound replaced with function () {}
Mutant 1838 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1839 in q.js: nodeArgs replaced with nodeArgs.concat([1, 2, 3])
Mutant 1840 in q.js: nodeArgs replaced with nodeArgs.filter(function (arg) {
  return arg !== 1;
})
Mutant 1841 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1842 in q.js: deferred.reject replaced with null
Mutant 1843 in q.js: deferred.reject replaced with undefined
Mutant 1844 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1845 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments.length)
Mutant 1846 in q.js: array_slice(arguments, 0) replaced with array_slice(null)
Mutant 1847 in q.js: arguments replaced with null
Mutant 1848 in q.js: arguments replaced with undefined
Mutant 1849 in q.js: arguments replaced with []
Mutant 1850 in q.js: 0 replaced with 1
Mutant 1851 in q.js: 0 replaced with -1
Mutant 1852 in q.js: 0 replaced with null
Mutant 1853 in q.js: args.unshift replaced with args.push
Mutant 1854 in q.js: args.unshift replaced with args.shift
Mutant 1855 in q.js: args.unshift replaced with args.pop
Mutant 1856 in q.js: this replaced with null
Mutant 1857 in q.js: this replaced with undefined
Mutant 1858 in q.js: this replaced with 0
Mutant 1859 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1860 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined, args)
Mutant 1861 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this, args)
Mutant 1862 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1863 in q.js: Q.nbind.apply replaced with Q.nbind.bind
Mutant 1864 in q.js: Q.nbind.apply replaced with Q.nbind.apply.bind
Mutant 1865 in q.js: void 0 replaced with null
Mutant 1866 in q.js: void 0 replaced with undefined
Mutant 1867 in q.js: void 0 replaced with this
Mutant 1868 in q.js: args replaced with args.slice(1)
Mutant 1869 in q.js: args replaced with args.concat(1)
Mutant 1870 in q.js: args replaced with args.reverse()
Mutant 1871 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.slice(1))
Mutant 1872 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.concat(deferred.makeNodeResolver()))
Mutant 1873 in q.js: Q replaced with Q.reject
Mutant 1874 in q.js: Q replaced with Q.defer
Mutant 1875 in q.js: Q replaced with Q.when
Mutant 1876 in q.js: object replaced with null
Mutant 1877 in q.js: object replaced with undefined
Mutant 1878 in q.js: object replaced with 0
Mutant 1879 in q.js: name replaced with name + "foo"
Mutant 1880 in q.js: name replaced with name.toUpperCase()
Mutant 1881 in q.js: name replaced with name.length
Mutant 1882 in q.js: args replaced with null
Mutant 1883 in q.js: args replaced with undefined
Mutant 1884 in q.js: args replaced with []
Mutant 1885 in q.js: args || [] replaced with null
Mutant 1886 in q.js: args || [] replaced with undefined
Mutant 1887 in q.js: args || [] replaced with []
Mutant 1888 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1889 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1890 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1891 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1892 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1893 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1894 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1895 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, 1])
Mutant 1896 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, function () {}])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, 1])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, function () {}])
Mutant 1897 in q.js: "post" replaced with "get"
Mutant 1898 in q.js: "post" replaced with "put"
Mutant 1899 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1900 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, undefined]
Mutant 1901 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, "foo"]
Mutant 1902 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1903 in q.js: deferred.reject replaced with null
Mutant 1904 in q.js: deferred.reject replaced with undefined
Mutant 1905 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1906 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1907 in q.js: array_slice(arguments, 2) replaced with array_slice(nodeArgs)
Mutant 1908 in q.js: array_slice replaced with array_slice.length
Mutant 1909 in q.js: arguments replaced with null
Mutant 1910 in q.js: arguments replaced with undefined
Mutant 1911 in q.js: arguments replaced with []
Mutant 1912 in q.js: 2 replaced with 1
Mutant 1913 in q.js: 2 replaced with 3
Mutant 1914 in q.js: 2 replaced with 4
Mutant 1915 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1916 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1917 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1918 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1919 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1920 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1921 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1922 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, 1])
Mutant 1923 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, function () {}])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, 1])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, function () {}])
Mutant 1924 in q.js: Q replaced with this
Mutant 1925 in q.js: Q replaced with null
Mutant 1926 in q.js: Q replaced with undefined
Mutant 1927 in q.js: object replaced with null
Mutant 1928 in q.js: object replaced with undefined
Mutant 1929 in q.js: "post" replaced with "get"
Mutant 1930 in q.js: "post" replaced with "put"
Mutant 1931 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1932 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(1)]
Mutant 1933 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1934 in q.js: deferred.reject replaced with null
Mutant 1935 in q.js: deferred.reject replaced with undefined
Mutant 1936 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1937 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1938 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 1939 in q.js: array_slice replaced with array_slice.length
Mutant 1940 in q.js: arguments replaced with null
Mutant 1941 in q.js: arguments replaced with undefined
Mutant 1942 in q.js: arguments replaced with []
Mutant 1943 in q.js: 1 replaced with 0
Mutant 1944 in q.js: 1 replaced with 2
Mutant 1945 in q.js: 1 replaced with null
Mutant 1946 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1947 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1948 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1949 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1950 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1951 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1952 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("send", [name, nodeArgs])
Mutant 1953 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, null])
Mutant 1954 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, function () {}])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("send", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, null])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, function () {}])
Mutant 1955 in q.js: "post" replaced with "send"
Mutant 1956 in q.js: "post" replaced with "dispatch"
Mutant 1957 in q.js: "post" replaced with "apply"
Mutant 1958 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1959 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(0, -1)]
Mutant 1960 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1961 in q.js: deferred.reject replaced with null
Mutant 1962 in q.js: deferred.reject replaced with undefined
Mutant 1963 in q.js: Q replaced with Q.reject
Mutant 1964 in q.js: Q replaced with Q.resolve
Mutant 1965 in q.js: Q replaced with Q.defer
Mutant 1966 in q.js: object replaced with null
Mutant 1967 in q.js: object replaced with undefined
Mutant 1968 in q.js: object replaced with 0
Mutant 1969 in q.js: nodeback replaced with nodeback(error, null)
Mutant 1970 in q.js: nodeback replaced with nodeback(null, error)
Mutant 1971 in q.js: nodeback replaced with nodeback(error, error)
Mutant 1972 in q.js: nodeback replaced with !nodeback
Mutant 1973 in q.js: nodeback replaced with nodeback + 1
Mutant 1974 in q.js: nodeback replaced with nodeback.call()
Mutant 1975 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1976 in q.js: nodeback(null, value) replaced with nodeback(value, null)
Mutant 1977 in q.js: nodeback(null, value) replaced with nodeback(value, undefined)
Mutant 1978 in q.js: null replaced with undefined
Mutant 1979 in q.js: null replaced with 0
Mutant 1980 in q.js: null replaced with {}
Mutant 1981 in q.js: value replaced with null
Mutant 1982 in q.js: value replaced with undefined
Mutant 1983 in q.js: value replaced with 0
Mutant 1984 in q.js: error replaced with null
Mutant 1985 in q.js: error replaced with undefined
Mutant 1986 in q.js: error replaced with "error"
Mutant 1987 in q.js: captureLine replaced with captureLine + 1
Mutant 1988 in q.js: captureLine replaced with captureLine - 1
Mutant 1989 in q.js: captureLine replaced with captureLine * 2
Mutant 1990 in queue.js: "head" replaced with "tail"
Mutant 1991 in queue.js: "head" replaced with "head.tail"
Mutant 1992 in queue.js: "head" replaced with "ends.promise.get('tail')"
Mutant 1993 in queue.js: "tail" replaced with "head"
Mutant 1994 in queue.js: "tail" replaced with "tail" + "foo"
Mutant 1995 in queue.js: "tail" replaced with "tail" + 1
Mutant 1996 in queue.js: closed.resolve replaced with closed.reject
Mutant 1997 in queue.js: error replaced with null
Mutant 1998 in queue.js: error replaced with undefined
Mutant 1999 in queue.js: error replaced with Q.reject(error)
Mutant 2000 in queue.js: Q.reject replaced with Q.resolve
Mutant 2001 in queue.js: error replaced with null
Mutant 2002 in queue.js: error replaced with undefined
Mutant 2003 in queue.js: error replaced with new Error("Different error message")
Mutant 2004 in queue.js: ends.resolve replaced with ends.reject
Mutant 2005 in queue.js: ends.resolve replaced with closed.resolve
Mutant 2006 in queue.js: ends.resolve replaced with next.reject
[32m13:35:03 (3122) INFO Instrumenter[39m Instrumented 2 source file(s) with 2007 mutant(s)
[32m13:35:03 (3122) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m13:35:05 (3122) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m13:35:05 (3122) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m13:35:12 (3122) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6795 ms, overhead 2 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 51m) 3/2007 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 46m) 4/2007 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 46m) 6/2007 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 10m) 7/2007 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 5m) 9/2007 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 19m) 10/2007 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 31m) 11/2007 tested (9 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 45m) 16/2007 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 55m) 17/2007 tested (12 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 4m) 18/2007 tested (13 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 2m) 20/2007 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 9m) 21/2007 tested (16 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 6m) 23/2007 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 12m) 24/2007 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 10m) 26/2007 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 15m) 27/2007 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 0m) 31/2007 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 5m) 32/2007 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 9m) 33/2007 tested (24 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 19m) 33/2007 tested (24 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 23m) 34/2007 tested (24 survived, 2 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 26m) 35/2007 tested (24 survived, 3 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 29m) 36/2007 tested (25 survived, 3 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 32m) 37/2007 tested (25 survived, 4 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 41m) 37/2007 tested (25 survived, 4 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 44m) 38/2007 tested (25 survived, 5 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 41m) 40/2007 tested (27 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 43m) 41/2007 tested (28 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 40m) 43/2007 tested (30 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 28m) 47/2007 tested (31 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 30m) 48/2007 tested (32 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 33m) 49/2007 tested (33 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 30m) 51/2007 tested (33 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 33m) 52/2007 tested (34 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 30m) 54/2007 tested (36 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 36m) 54/2007 tested (36 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 34m) 56/2007 tested (37 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 40m) 56/2007 tested (37 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 34m) 59/2007 tested (37 survived, 8 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 25m) 63/2007 tested (38 survived, 8 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 27m) 64/2007 tested (39 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 25m) 66/2007 tested (41 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 27m) 67/2007 tested (42 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 25m) 69/2007 tested (44 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 27m) 70/2007 tested (45 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 26m) 72/2007 tested (47 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 27m) 73/2007 tested (48 survived, 8 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 26m) 75/2007 tested (50 survived, 8 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 27m) 76/2007 tested (51 survived, 8 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 26m) 78/2007 tested (53 survived, 8 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 27m) 79/2007 tested (54 survived, 8 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 26m) 81/2007 tested (56 survived, 8 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 27m) 82/2007 tested (57 survived, 8 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 26m) 84/2007 tested (59 survived, 8 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 29m) 84/2007 tested (59 survived, 8 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 31m) 85/2007 tested (59 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 32m) 86/2007 tested (59 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 35m) 86/2007 tested (59 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 37m) 87/2007 tested (59 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 38m) 88/2007 tested (60 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 39m) 89/2007 tested (60 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 40m) 90/2007 tested (61 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 38m) 92/2007 tested (61 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 34m) 95/2007 tested (62 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 35m) 96/2007 tested (63 survived, 13 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 34m) 98/2007 tested (65 survived, 13 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 35m) 99/2007 tested (66 survived, 13 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 33m) 101/2007 tested (68 survived, 13 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 34m) 102/2007 tested (69 survived, 13 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 33m) 104/2007 tested (71 survived, 13 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 34m) 105/2007 tested (72 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 33m) 107/2007 tested (74 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 33m) 108/2007 tested (75 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 34m) 109/2007 tested (76 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 33m) 111/2007 tested (78 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 34m) 112/2007 tested (79 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 33m) 114/2007 tested (81 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 33m) 115/2007 tested (82 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 32m) 117/2007 tested (84 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 33m) 118/2007 tested (85 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 32m) 120/2007 tested (87 survived, 13 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 33m) 121/2007 tested (88 survived, 13 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 31m) 123/2007 tested (90 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 32m) 124/2007 tested (91 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 31m) 126/2007 tested (93 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 32m) 127/2007 tested (94 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 31m) 129/2007 tested (96 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 31m) 130/2007 tested (97 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 30m) 132/2007 tested (99 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 31m) 133/2007 tested (100 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 30m) 135/2007 tested (102 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 30m) 136/2007 tested (103 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 29m) 138/2007 tested (105 survived, 13 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 25m) 142/2007 tested (106 survived, 13 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 21m) 146/2007 tested (107 survived, 13 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 23m) 146/2007 tested (107 survived, 13 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 17m) 152/2007 tested (107 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 15m) 155/2007 tested (107 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 14m) 157/2007 tested (107 survived, 15 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 15m) 158/2007 tested (108 survived, 15 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 15m) 159/2007 tested (109 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 14m) 161/2007 tested (111 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 15m) 162/2007 tested (112 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 14m) 164/2007 tested (114 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 15m) 165/2007 tested (115 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 14m) 167/2007 tested (117 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 15m) 168/2007 tested (118 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 14m) 170/2007 tested (120 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 15m) 171/2007 tested (121 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 14m) 173/2007 tested (123 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 14m) 174/2007 tested (124 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 14m) 176/2007 tested (126 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 14m) 177/2007 tested (127 survived, 15 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 14m) 179/2007 tested (129 survived, 15 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 14m) 180/2007 tested (130 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 13m) 182/2007 tested (132 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 14m) 183/2007 tested (133 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 13m) 185/2007 tested (135 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 14m) 186/2007 tested (136 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 13m) 188/2007 tested (138 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 13m) 189/2007 tested (139 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 13m) 191/2007 tested (141 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 13m) 192/2007 tested (142 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 13m) 194/2007 tested (144 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 13m) 195/2007 tested (145 survived, 15 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 12m) 197/2007 tested (147 survived, 15 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 13m) 198/2007 tested (148 survived, 15 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 13m) 199/2007 tested (149 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 13m) 201/2007 tested (151 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 13m) 202/2007 tested (152 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 12m) 204/2007 tested (154 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 13m) 205/2007 tested (155 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 12m) 207/2007 tested (157 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 13m) 208/2007 tested (158 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 12m) 210/2007 tested (160 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 12m) 211/2007 tested (161 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 12m) 213/2007 tested (163 survived, 15 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 12m) 214/2007 tested (164 survived, 15 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 12m) 216/2007 tested (166 survived, 15 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 12m) 217/2007 tested (167 survived, 15 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 11m) 219/2007 tested (169 survived, 15 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 12m) 220/2007 tested (170 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 11m) 222/2007 tested (172 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 12m) 223/2007 tested (173 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 11m) 225/2007 tested (175 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 11m) 226/2007 tested (176 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 11m) 228/2007 tested (178 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 11m) 229/2007 tested (179 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 10m) 231/2007 tested (181 survived, 15 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 11m) 232/2007 tested (182 survived, 15 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 10m) 234/2007 tested (184 survived, 15 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 11m) 235/2007 tested (185 survived, 15 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 11m) 236/2007 tested (186 survived, 15 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 8m) 240/2007 tested (187 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 8m) 242/2007 tested (187 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 8m) 243/2007 tested (187 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 8m) 245/2007 tested (189 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 8m) 246/2007 tested (190 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 7m) 248/2007 tested (192 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 8m) 249/2007 tested (193 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 7m) 251/2007 tested (195 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 8m) 252/2007 tested (196 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 8m) 253/2007 tested (197 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 7m) 255/2007 tested (199 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 8m) 256/2007 tested (200 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 7m) 258/2007 tested (202 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 7m) 259/2007 tested (203 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 7m) 261/2007 tested (205 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 7m) 262/2007 tested (206 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 7m) 264/2007 tested (208 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 7m) 265/2007 tested (209 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 6m) 267/2007 tested (211 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 7m) 268/2007 tested (212 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 270/2007 tested (214 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 271/2007 tested (215 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 273/2007 tested (217 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 274/2007 tested (218 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 276/2007 tested (220 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 277/2007 tested (221 survived, 15 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 5m) 279/2007 tested (223 survived, 15 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 6m) 280/2007 tested (224 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 5m) 282/2007 tested (226 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 5m) 283/2007 tested (227 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 5m) 285/2007 tested (229 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 5m) 286/2007 tested (230 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 288/2007 tested (232 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 289/2007 tested (233 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 290/2007 tested (234 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 292/2007 tested (236 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 293/2007 tested (237 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 4m) 295/2007 tested (239 survived, 15 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 4m) 296/2007 tested (240 survived, 15 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 4m) 298/2007 tested (242 survived, 15 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 4m) 299/2007 tested (243 survived, 15 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 4m) 301/2007 tested (245 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 4m) 302/2007 tested (246 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 3m) 304/2007 tested (248 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 4m) 305/2007 tested (249 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 3m) 307/2007 tested (251 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 3m) 308/2007 tested (252 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 3m) 310/2007 tested (254 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 3m) 311/2007 tested (255 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 3m) 313/2007 tested (257 survived, 15 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 3m) 314/2007 tested (258 survived, 15 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 2m) 316/2007 tested (260 survived, 15 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 3m) 317/2007 tested (261 survived, 15 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 2m) 319/2007 tested (263 survived, 15 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 2m) 320/2007 tested (264 survived, 15 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~3h 2m) 322/2007 tested (266 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 2m) 323/2007 tested (267 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 2m) 325/2007 tested (269 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 2m) 326/2007 tested (270 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 1m) 328/2007 tested (272 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 1m) 329/2007 tested (273 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 2m) 330/2007 tested (274 survived, 15 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 1m) 332/2007 tested (276 survived, 15 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~2h 59m) 336/2007 tested (277 survived, 15 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 0m) 337/2007 tested (278 survived, 15 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~2h 59m) 339/2007 tested (280 survived, 15 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~2h 59m) 340/2007 tested (281 survived, 15 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 59m) 342/2007 tested (283 survived, 15 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 59m) 343/2007 tested (284 survived, 15 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 59m) 345/2007 tested (286 survived, 15 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 59m) 346/2007 tested (287 survived, 15 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 57m) 350/2007 tested (289 survived, 15 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 57m) 352/2007 tested (290 survived, 15 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 57m) 353/2007 tested (291 survived, 15 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 56m) 355/2007 tested (293 survived, 15 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 57m) 356/2007 tested (294 survived, 15 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 56m) 358/2007 tested (296 survived, 15 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 56m) 359/2007 tested (297 survived, 15 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 56m) 361/2007 tested (299 survived, 15 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 56m) 362/2007 tested (300 survived, 15 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 56m) 364/2007 tested (302 survived, 15 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 56m) 365/2007 tested (303 survived, 15 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 55m) 367/2007 tested (305 survived, 15 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 55m) 368/2007 tested (306 survived, 15 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 55m) 370/2007 tested (308 survived, 15 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 55m) 371/2007 tested (309 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 55m) 373/2007 tested (311 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 55m) 374/2007 tested (312 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 54m) 376/2007 tested (314 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 55m) 377/2007 tested (315 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 54m) 379/2007 tested (317 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 54m) 380/2007 tested (318 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 54m) 382/2007 tested (320 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 54m) 383/2007 tested (321 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 54m) 384/2007 tested (322 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 54m) 386/2007 tested (324 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 54m) 387/2007 tested (325 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 54m) 389/2007 tested (327 survived, 15 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 54m) 390/2007 tested (328 survived, 15 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 53m) 392/2007 tested (330 survived, 15 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 53m) 393/2007 tested (331 survived, 15 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 53m) 395/2007 tested (333 survived, 15 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 53m) 396/2007 tested (334 survived, 15 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 53m) 398/2007 tested (336 survived, 15 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 53m) 399/2007 tested (337 survived, 15 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 52m) 401/2007 tested (339 survived, 15 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 51m) 404/2007 tested (340 survived, 15 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 49m) 409/2007 tested (340 survived, 15 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 50m) 410/2007 tested (340 survived, 15 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 50m) 411/2007 tested (340 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 49m) 413/2007 tested (340 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 49m) 414/2007 tested (340 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 50m) 415/2007 tested (340 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 50m) 416/2007 tested (340 survived, 16 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 50m) 416/2007 tested (340 survived, 16 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 50m) 417/2007 tested (340 survived, 17 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 51m) 418/2007 tested (340 survived, 18 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 51m) 418/2007 tested (340 survived, 18 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 50m) 422/2007 tested (340 survived, 19 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 48m) 426/2007 tested (341 survived, 19 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 46m) 433/2007 tested (341 survived, 19 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 46m) 433/2007 tested (341 survived, 19 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 45m) 436/2007 tested (341 survived, 20 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 45m) 437/2007 tested (342 survived, 20 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 45m) 440/2007 tested (342 survived, 21 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 45m) 441/2007 tested (343 survived, 21 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 44m) 443/2007 tested (345 survived, 21 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 44m) 444/2007 tested (346 survived, 21 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 44m) 446/2007 tested (348 survived, 21 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 44m) 447/2007 tested (349 survived, 21 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 44m) 449/2007 tested (351 survived, 21 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 44m) 449/2007 tested (351 survived, 21 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 44m) 450/2007 tested (351 survived, 22 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 45m) 450/2007 tested (351 survived, 22 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 45m) 451/2007 tested (351 survived, 23 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 45m) 453/2007 tested (351 survived, 24 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 45m) 453/2007 tested (351 survived, 24 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 45m) 455/2007 tested (352 survived, 25 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 45m) 456/2007 tested (353 survived, 25 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 45m) 457/2007 tested (354 survived, 25 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 45m) 459/2007 tested (354 survived, 26 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 45m) 460/2007 tested (355 survived, 26 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 44m) 462/2007 tested (357 survived, 26 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 45m) 463/2007 tested (358 survived, 26 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 45m) 464/2007 tested (359 survived, 26 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 44m) 466/2007 tested (361 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 44m) 467/2007 tested (362 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 44m) 469/2007 tested (364 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 44m) 470/2007 tested (365 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 44m) 472/2007 tested (367 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 44m) 473/2007 tested (368 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 43m) 475/2007 tested (370 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 44m) 476/2007 tested (371 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 43m) 478/2007 tested (373 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 43m) 479/2007 tested (374 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 43m) 481/2007 tested (376 survived, 26 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 43m) 482/2007 tested (377 survived, 26 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 43m) 484/2007 tested (379 survived, 26 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 43m) 485/2007 tested (380 survived, 26 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 42m) 487/2007 tested (382 survived, 26 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 42m) 488/2007 tested (383 survived, 26 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 42m) 490/2007 tested (385 survived, 26 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 43m) 490/2007 tested (385 survived, 26 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 42m) 492/2007 tested (385 survived, 27 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 42m) 494/2007 tested (386 survived, 27 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 42m) 495/2007 tested (386 survived, 28 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 42m) 496/2007 tested (387 survived, 28 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 42m) 498/2007 tested (389 survived, 28 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 41m) 500/2007 tested (390 survived, 28 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 42m) 500/2007 tested (390 survived, 28 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 41m) 503/2007 tested (390 survived, 29 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 41m) 503/2007 tested (390 survived, 29 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 42m) 504/2007 tested (390 survived, 30 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 42m) 505/2007 tested (390 survived, 31 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 42m) 506/2007 tested (391 survived, 31 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 42m) 506/2007 tested (391 survived, 31 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 42m) 507/2007 tested (391 survived, 32 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 42m) 508/2007 tested (391 survived, 33 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 43m) 508/2007 tested (391 survived, 33 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 43m) 509/2007 tested (391 survived, 34 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 43m) 510/2007 tested (391 survived, 35 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 43m) 512/2007 tested (393 survived, 35 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 43m) 513/2007 tested (394 survived, 35 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 43m) 514/2007 tested (395 survived, 35 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 42m) 516/2007 tested (397 survived, 35 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 42m) 517/2007 tested (398 survived, 35 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 42m) 519/2007 tested (400 survived, 35 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 42m) 520/2007 tested (401 survived, 35 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 41m) 523/2007 tested (402 survived, 35 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 42m) 523/2007 tested (402 survived, 35 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 42m) 524/2007 tested (402 survived, 36 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 42m) 525/2007 tested (402 survived, 36 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 41m) 528/2007 tested (402 survived, 36 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 41m) 529/2007 tested (402 survived, 36 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 42m) 529/2007 tested (402 survived, 36 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 42m) 530/2007 tested (402 survived, 36 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 41m) 532/2007 tested (403 survived, 36 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 41m) 533/2007 tested (404 survived, 36 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 41m) 535/2007 tested (406 survived, 36 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 41m) 536/2007 tested (407 survived, 36 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 41m) 538/2007 tested (409 survived, 36 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 41m) 539/2007 tested (410 survived, 36 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 40m) 541/2007 tested (412 survived, 36 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 40m) 542/2007 tested (413 survived, 36 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 40m) 544/2007 tested (415 survived, 36 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 40m) 545/2007 tested (416 survived, 36 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 40m) 547/2007 tested (418 survived, 36 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 40m) 548/2007 tested (419 survived, 36 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 39m) 550/2007 tested (421 survived, 36 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 39m) 551/2007 tested (422 survived, 36 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 39m) 553/2007 tested (424 survived, 36 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 39m) 554/2007 tested (425 survived, 36 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 39m) 555/2007 tested (426 survived, 36 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 39m) 557/2007 tested (428 survived, 36 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 39m) 558/2007 tested (429 survived, 36 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 38m) 560/2007 tested (431 survived, 36 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 38m) 561/2007 tested (432 survived, 36 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 38m) 563/2007 tested (434 survived, 36 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 38m) 564/2007 tested (435 survived, 36 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 38m) 566/2007 tested (437 survived, 36 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 38m) 567/2007 tested (438 survived, 36 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 37m) 569/2007 tested (440 survived, 36 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 37m) 570/2007 tested (441 survived, 36 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 37m) 572/2007 tested (443 survived, 36 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 37m) 573/2007 tested (444 survived, 36 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 37m) 575/2007 tested (446 survived, 36 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 37m) 576/2007 tested (447 survived, 36 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 36m) 578/2007 tested (449 survived, 36 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 37m) 579/2007 tested (450 survived, 36 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 36m) 581/2007 tested (452 survived, 36 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 36m) 582/2007 tested (453 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 36m) 584/2007 tested (455 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 36m) 585/2007 tested (456 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 36m) 587/2007 tested (458 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 36m) 588/2007 tested (459 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 35m) 590/2007 tested (461 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 35m) 591/2007 tested (462 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 35m) 592/2007 tested (463 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 35m) 594/2007 tested (465 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 35m) 595/2007 tested (466 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 35m) 597/2007 tested (468 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 35m) 598/2007 tested (469 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 34m) 600/2007 tested (471 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 34m) 601/2007 tested (472 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 34m) 603/2007 tested (474 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 34m) 604/2007 tested (475 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 34m) 606/2007 tested (477 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 34m) 607/2007 tested (478 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 33m) 609/2007 tested (480 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 33m) 610/2007 tested (481 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 33m) 612/2007 tested (483 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 33m) 613/2007 tested (484 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 33m) 615/2007 tested (486 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 33m) 616/2007 tested (487 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 32m) 618/2007 tested (489 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 32m) 619/2007 tested (490 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 32m) 621/2007 tested (492 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 32m) 622/2007 tested (493 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 32m) 624/2007 tested (495 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 32m) 625/2007 tested (496 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 31m) 627/2007 tested (498 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 31m) 628/2007 tested (499 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 31m) 630/2007 tested (501 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 31m) 631/2007 tested (502 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 31m) 632/2007 tested (503 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 31m) 634/2007 tested (505 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 30m) 638/2007 tested (506 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 30m) 638/2007 tested (506 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 30m) 639/2007 tested (506 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 30m) 640/2007 tested (506 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 30m) 640/2007 tested (506 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 30m) 642/2007 tested (507 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 30m) 642/2007 tested (507 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 30m) 643/2007 tested (507 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 30m) 644/2007 tested (507 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 31m) 644/2007 tested (507 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 31m) 645/2007 tested (507 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 31m) 645/2007 tested (507 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 31m) 646/2007 tested (507 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 31m) 647/2007 tested (507 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 31m) 649/2007 tested (509 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 31m) 650/2007 tested (510 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 31m) 650/2007 tested (510 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 31m) 652/2007 tested (511 survived, 45 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 31m) 652/2007 tested (511 survived, 45 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 31m) 654/2007 tested (512 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 31m) 655/2007 tested (513 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 31m) 656/2007 tested (514 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 31m) 658/2007 tested (516 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 31m) 659/2007 tested (517 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 30m) 661/2007 tested (519 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 30m) 662/2007 tested (520 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 30m) 664/2007 tested (522 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 30m) 665/2007 tested (523 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 30m) 667/2007 tested (524 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 29m) 669/2007 tested (524 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 30m) 669/2007 tested (524 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 29m) 670/2007 tested (524 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 29m) 671/2007 tested (524 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 30m) 671/2007 tested (524 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 30m) 672/2007 tested (524 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 29m) 674/2007 tested (526 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 29m) 675/2007 tested (527 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 29m) 677/2007 tested (529 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 29m) 678/2007 tested (530 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 29m) 680/2007 tested (532 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 29m) 681/2007 tested (533 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 29m) 681/2007 tested (533 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 29m) 682/2007 tested (533 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 29m) 683/2007 tested (533 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 29m) 683/2007 tested (533 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 29m) 684/2007 tested (533 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 29m) 685/2007 tested (533 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 30m) 685/2007 tested (533 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 30m) 686/2007 tested (533 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 29m) 688/2007 tested (533 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 30m) 688/2007 tested (533 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 30m) 689/2007 tested (533 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 30m) 690/2007 tested (533 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 30m) 691/2007 tested (533 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 30m) 692/2007 tested (533 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 30m) 693/2007 tested (533 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 30m) 693/2007 tested (533 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 30m) 695/2007 tested (534 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 30m) 695/2007 tested (534 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 30m) 696/2007 tested (534 survived, 58 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 697/2007 tested (534 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 698/2007 tested (534 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 699/2007 tested (534 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 700/2007 tested (534 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 701/2007 tested (535 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 702/2007 tested (535 survived, 60 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 30m) 703/2007 tested (536 survived, 60 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 30m) 704/2007 tested (536 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 30m) 704/2007 tested (536 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 30m) 705/2007 tested (536 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 30m) 705/2007 tested (536 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 30m) 706/2007 tested (536 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 30m) 708/2007 tested (537 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 30m) 708/2007 tested (537 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 30m) 709/2007 tested (537 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 30m) 710/2007 tested (537 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 30m) 711/2007 tested (538 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 30m) 712/2007 tested (538 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 30m) 714/2007 tested (539 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 30m) 715/2007 tested (540 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 29m) 717/2007 tested (542 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 29m) 718/2007 tested (543 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 29m) 719/2007 tested (544 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 29m) 720/2007 tested (544 survived, 64 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 29m) 721/2007 tested (544 survived, 64 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 30m) 721/2007 tested (544 survived, 64 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 30m) 722/2007 tested (544 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 30m) 723/2007 tested (544 survived, 66 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 30m) 723/2007 tested (544 survived, 66 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 30m) 724/2007 tested (544 survived, 67 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 30m) 725/2007 tested (544 survived, 68 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 30m) 725/2007 tested (544 survived, 68 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 30m) 726/2007 tested (544 survived, 69 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 30m) 727/2007 tested (544 survived, 70 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 30m) 727/2007 tested (544 survived, 70 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 30m) 728/2007 tested (544 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 30m) 729/2007 tested (544 survived, 72 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 31m) 729/2007 tested (544 survived, 72 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 30m) 731/2007 tested (545 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 30m) 731/2007 tested (545 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 30m) 732/2007 tested (545 survived, 74 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 31m) 732/2007 tested (545 survived, 74 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 31m) 733/2007 tested (545 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 31m) 734/2007 tested (545 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 31m) 734/2007 tested (545 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 31m) 735/2007 tested (545 survived, 77 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 31m) 736/2007 tested (545 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 31m) 736/2007 tested (545 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 31m) 737/2007 tested (545 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 31m) 738/2007 tested (545 survived, 80 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 31m) 738/2007 tested (545 survived, 80 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 31m) 739/2007 tested (545 survived, 81 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 31m) 740/2007 tested (545 survived, 82 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 32m) 740/2007 tested (545 survived, 82 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 31m) 742/2007 tested (546 survived, 83 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 31m) 743/2007 tested (547 survived, 83 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 31m) 745/2007 tested (549 survived, 83 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 31m) 746/2007 tested (550 survived, 83 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 30m) 748/2007 tested (552 survived, 83 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 30m) 749/2007 tested (553 survived, 83 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 30m) 751/2007 tested (555 survived, 83 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 30m) 752/2007 tested (556 survived, 83 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 30m) 753/2007 tested (557 survived, 83 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 30m) 755/2007 tested (559 survived, 83 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 30m) 756/2007 tested (560 survived, 83 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 29m) 758/2007 tested (562 survived, 83 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 29m) 759/2007 tested (563 survived, 83 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 29m) 761/2007 tested (565 survived, 83 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 29m) 762/2007 tested (566 survived, 83 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 28m) 764/2007 tested (568 survived, 83 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 28m) 765/2007 tested (569 survived, 83 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 28m) 767/2007 tested (571 survived, 83 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 28m) 768/2007 tested (572 survived, 83 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 28m) 770/2007 tested (574 survived, 83 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 28m) 771/2007 tested (575 survived, 83 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 27m) 773/2007 tested (577 survived, 83 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 27m) 774/2007 tested (578 survived, 83 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 27m) 776/2007 tested (580 survived, 83 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 27m) 777/2007 tested (581 survived, 83 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 26m) 779/2007 tested (583 survived, 83 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 26m) 780/2007 tested (584 survived, 83 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 26m) 782/2007 tested (586 survived, 83 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 26m) 783/2007 tested (587 survived, 83 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 26m) 785/2007 tested (589 survived, 83 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 26m) 786/2007 tested (590 survived, 83 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 788/2007 tested (592 survived, 83 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 789/2007 tested (593 survived, 83 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 790/2007 tested (594 survived, 83 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 792/2007 tested (596 survived, 83 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 793/2007 tested (597 survived, 83 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 24m) 795/2007 tested (599 survived, 83 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 24m) 796/2007 tested (600 survived, 83 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 24m) 798/2007 tested (602 survived, 83 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 24m) 799/2007 tested (603 survived, 83 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 24m) 801/2007 tested (605 survived, 83 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 23m) 802/2007 tested (606 survived, 83 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 23m) 804/2007 tested (608 survived, 83 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 23m) 805/2007 tested (609 survived, 83 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 23m) 807/2007 tested (611 survived, 83 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 23m) 808/2007 tested (612 survived, 83 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 22m) 810/2007 tested (614 survived, 83 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 22m) 811/2007 tested (615 survived, 83 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 22m) 813/2007 tested (617 survived, 83 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 21m) 818/2007 tested (618 survived, 83 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 20m) 821/2007 tested (619 survived, 83 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 20m) 822/2007 tested (620 survived, 83 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 20m) 824/2007 tested (622 survived, 83 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 20m) 825/2007 tested (623 survived, 83 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 19m) 827/2007 tested (625 survived, 83 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 19m) 828/2007 tested (626 survived, 83 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 19m) 830/2007 tested (628 survived, 83 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 19m) 831/2007 tested (629 survived, 83 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 19m) 832/2007 tested (630 survived, 83 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 19m) 834/2007 tested (632 survived, 83 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 18m) 835/2007 tested (633 survived, 83 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 18m) 837/2007 tested (635 survived, 83 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 18m) 838/2007 tested (636 survived, 83 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 18m) 840/2007 tested (638 survived, 83 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 18m) 841/2007 tested (639 survived, 83 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 17m) 843/2007 tested (641 survived, 83 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 17m) 844/2007 tested (642 survived, 83 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 17m) 846/2007 tested (644 survived, 83 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 17m) 847/2007 tested (645 survived, 83 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 17m) 849/2007 tested (647 survived, 83 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 17m) 850/2007 tested (648 survived, 83 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 16m) 853/2007 tested (650 survived, 83 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 15m) 856/2007 tested (651 survived, 83 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 15m) 857/2007 tested (652 survived, 83 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 15m) 859/2007 tested (654 survived, 83 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 15m) 860/2007 tested (655 survived, 83 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 15m) 861/2007 tested (656 survived, 83 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 14m) 863/2007 tested (658 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 14m) 864/2007 tested (659 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 14m) 866/2007 tested (661 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 14m) 867/2007 tested (662 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 14m) 869/2007 tested (664 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 14m) 870/2007 tested (665 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 13m) 872/2007 tested (667 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 13m) 873/2007 tested (668 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 13m) 875/2007 tested (670 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 13m) 876/2007 tested (671 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 13m) 878/2007 tested (673 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 13m) 879/2007 tested (674 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 12m) 881/2007 tested (676 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 12m) 882/2007 tested (677 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 12m) 884/2007 tested (679 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 12m) 885/2007 tested (680 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 12m) 886/2007 tested (681 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 11m) 888/2007 tested (681 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 11m) 889/2007 tested (681 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 11m) 891/2007 tested (683 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 11m) 892/2007 tested (684 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 11m) 894/2007 tested (686 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 11m) 894/2007 tested (686 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 11m) 895/2007 tested (686 survived, 84 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 11m) 895/2007 tested (686 survived, 84 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 11m) 896/2007 tested (686 survived, 85 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 11m) 897/2007 tested (686 survived, 86 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 11m) 899/2007 tested (688 survived, 86 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 10m) 900/2007 tested (689 survived, 86 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 10m) 902/2007 tested (691 survived, 86 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 10m) 903/2007 tested (692 survived, 86 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 10m) 905/2007 tested (694 survived, 86 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 9m) 909/2007 tested (695 survived, 86 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 9m) 910/2007 tested (696 survived, 86 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 9m) 911/2007 tested (697 survived, 86 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 9m) 913/2007 tested (699 survived, 86 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 8m) 914/2007 tested (700 survived, 86 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 8m) 916/2007 tested (702 survived, 86 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 8m) 917/2007 tested (703 survived, 86 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 8m) 919/2007 tested (705 survived, 86 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 8m) 920/2007 tested (706 survived, 86 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 7m) 922/2007 tested (708 survived, 86 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 7m) 923/2007 tested (709 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 7m) 925/2007 tested (711 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 7m) 926/2007 tested (712 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 7m) 928/2007 tested (714 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 7m) 929/2007 tested (715 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 6m) 931/2007 tested (717 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 6m) 932/2007 tested (718 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 6m) 934/2007 tested (720 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 6m) 935/2007 tested (721 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 937/2007 tested (723 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 938/2007 tested (724 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 940/2007 tested (726 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 941/2007 tested (727 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 5m) 943/2007 tested (729 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 5m) 944/2007 tested (730 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 5m) 945/2007 tested (731 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 4m) 947/2007 tested (733 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 4m) 948/2007 tested (734 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 4m) 950/2007 tested (736 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 4m) 951/2007 tested (737 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 4m) 953/2007 tested (739 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 3m) 954/2007 tested (740 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 3m) 956/2007 tested (742 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 3m) 957/2007 tested (743 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 3m) 959/2007 tested (745 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 3m) 960/2007 tested (746 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 3m) 961/2007 tested (746 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 3m) 961/2007 tested (746 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 3m) 962/2007 tested (746 survived, 88 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 3m) 962/2007 tested (746 survived, 88 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 3m) 963/2007 tested (746 survived, 89 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 3m) 964/2007 tested (746 survived, 90 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 3m) 964/2007 tested (746 survived, 90 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 3m) 965/2007 tested (746 survived, 91 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 3m) 966/2007 tested (746 survived, 92 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 3m) 968/2007 tested (748 survived, 92 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 3m) 969/2007 tested (749 survived, 92 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 2m) 970/2007 tested (750 survived, 92 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 2m) 972/2007 tested (752 survived, 92 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 2m) 973/2007 tested (753 survived, 92 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 2m) 975/2007 tested (755 survived, 92 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 2m) 976/2007 tested (756 survived, 92 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 1m) 978/2007 tested (758 survived, 92 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 1m) 979/2007 tested (759 survived, 92 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 1m) 981/2007 tested (761 survived, 92 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 1m) 982/2007 tested (762 survived, 92 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~2h 1m) 984/2007 tested (764 survived, 92 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~2h 1m) 985/2007 tested (765 survived, 92 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~2h 0m) 987/2007 tested (767 survived, 92 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~2h 0m) 988/2007 tested (768 survived, 92 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~2h 0m) 990/2007 tested (770 survived, 92 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~2h 0m) 991/2007 tested (771 survived, 92 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 59m) 993/2007 tested (773 survived, 92 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 59m) 994/2007 tested (774 survived, 92 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 59m) 996/2007 tested (776 survived, 92 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~1h 59m) 997/2007 tested (777 survived, 92 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~1h 59m) 999/2007 tested (779 survived, 92 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~1h 59m) 1000/2007 tested (780 survived, 92 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~1h 59m) 1001/2007 tested (781 survived, 92 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~1h 58m) 1003/2007 tested (783 survived, 92 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 58m) 1004/2007 tested (784 survived, 92 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 58m) 1006/2007 tested (786 survived, 92 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 58m) 1007/2007 tested (787 survived, 92 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 58m) 1009/2007 tested (789 survived, 92 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 57m) 1010/2007 tested (790 survived, 92 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 57m) 1012/2007 tested (792 survived, 92 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 57m) 1013/2007 tested (793 survived, 92 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 57m) 1015/2007 tested (795 survived, 92 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 57m) 1016/2007 tested (796 survived, 92 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 56m) 1018/2007 tested (796 survived, 92 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 56m) 1019/2007 tested (796 survived, 92 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 56m) 1020/2007 tested (796 survived, 92 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 56m) 1021/2007 tested (796 survived, 92 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~1h 56m) 1023/2007 tested (796 survived, 92 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 56m) 1024/2007 tested (796 survived, 92 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 56m) 1026/2007 tested (796 survived, 92 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 55m) 1027/2007 tested (796 survived, 92 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 55m) 1028/2007 tested (796 survived, 92 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 55m) 1030/2007 tested (798 survived, 92 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 55m) 1031/2007 tested (799 survived, 92 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 55m) 1033/2007 tested (801 survived, 92 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 55m) 1034/2007 tested (802 survived, 92 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 54m) 1036/2007 tested (804 survived, 92 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 54m) 1037/2007 tested (805 survived, 92 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 54m) 1039/2007 tested (807 survived, 92 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 54m) 1040/2007 tested (808 survived, 92 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 54m) 1042/2007 tested (810 survived, 92 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 53m) 1043/2007 tested (811 survived, 92 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 53m) 1045/2007 tested (813 survived, 92 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 53m) 1046/2007 tested (814 survived, 92 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 53m) 1048/2007 tested (816 survived, 92 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 53m) 1049/2007 tested (817 survived, 92 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 52m) 1051/2007 tested (819 survived, 92 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 52m) 1052/2007 tested (820 survived, 92 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 52m) 1054/2007 tested (822 survived, 92 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 52m) 1055/2007 tested (823 survived, 92 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 52m) 1057/2007 tested (825 survived, 92 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 52m) 1058/2007 tested (826 survived, 92 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 51m) 1060/2007 tested (828 survived, 92 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 51m) 1061/2007 tested (829 survived, 92 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 51m) 1062/2007 tested (830 survived, 92 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 51m) 1064/2007 tested (832 survived, 92 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 51m) 1065/2007 tested (833 survived, 92 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 51m) 1067/2007 tested (835 survived, 92 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 50m) 1068/2007 tested (836 survived, 92 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 50m) 1070/2007 tested (838 survived, 92 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 50m) 1071/2007 tested (839 survived, 92 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 50m) 1073/2007 tested (841 survived, 92 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 50m) 1074/2007 tested (842 survived, 92 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 49m) 1076/2007 tested (844 survived, 92 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 49m) 1077/2007 tested (845 survived, 92 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 49m) 1079/2007 tested (847 survived, 92 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 49m) 1080/2007 tested (848 survived, 92 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 49m) 1082/2007 tested (850 survived, 92 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 49m) 1083/2007 tested (851 survived, 92 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 48m) 1085/2007 tested (853 survived, 92 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 48m) 1086/2007 tested (854 survived, 92 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 48m) 1088/2007 tested (856 survived, 92 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 48m) 1089/2007 tested (857 survived, 92 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 48m) 1091/2007 tested (859 survived, 92 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 47m) 1092/2007 tested (860 survived, 92 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 47m) 1094/2007 tested (862 survived, 92 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 47m) 1095/2007 tested (863 survived, 92 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 47m) 1096/2007 tested (864 survived, 92 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 47m) 1098/2007 tested (866 survived, 92 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 47m) 1099/2007 tested (867 survived, 92 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 46m) 1101/2007 tested (869 survived, 92 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 46m) 1102/2007 tested (870 survived, 92 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 46m) 1104/2007 tested (872 survived, 92 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 46m) 1105/2007 tested (873 survived, 92 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 46m) 1107/2007 tested (875 survived, 92 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 46m) 1108/2007 tested (876 survived, 92 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 45m) 1110/2007 tested (878 survived, 92 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 45m) 1111/2007 tested (879 survived, 92 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 45m) 1113/2007 tested (881 survived, 92 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 45m) 1114/2007 tested (882 survived, 92 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 44m) 1116/2007 tested (884 survived, 92 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 44m) 1117/2007 tested (885 survived, 92 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 44m) 1119/2007 tested (887 survived, 92 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 44m) 1120/2007 tested (888 survived, 92 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 44m) 1122/2007 tested (890 survived, 92 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 44m) 1123/2007 tested (891 survived, 92 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 43m) 1125/2007 tested (893 survived, 92 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 43m) 1126/2007 tested (894 survived, 92 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 43m) 1128/2007 tested (896 survived, 92 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 43m) 1129/2007 tested (897 survived, 92 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 43m) 1131/2007 tested (899 survived, 92 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 43m) 1132/2007 tested (900 survived, 92 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 42m) 1133/2007 tested (901 survived, 92 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 42m) 1135/2007 tested (903 survived, 92 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 42m) 1136/2007 tested (904 survived, 92 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 42m) 1138/2007 tested (906 survived, 92 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 42m) 1139/2007 tested (907 survived, 92 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 41m) 1141/2007 tested (909 survived, 92 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 41m) 1142/2007 tested (910 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 41m) 1144/2007 tested (912 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 41m) 1145/2007 tested (913 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 41m) 1147/2007 tested (915 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 41m) 1148/2007 tested (916 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 40m) 1150/2007 tested (918 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 40m) 1151/2007 tested (919 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 40m) 1153/2007 tested (921 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 40m) 1154/2007 tested (922 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 40m) 1156/2007 tested (924 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 40m) 1157/2007 tested (925 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 39m) 1159/2007 tested (927 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 39m) 1160/2007 tested (928 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 39m) 1161/2007 tested (929 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 39m) 1163/2007 tested (931 survived, 92 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 39m) 1164/2007 tested (932 survived, 92 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 38m) 1166/2007 tested (934 survived, 92 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 38m) 1167/2007 tested (935 survived, 92 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 38m) 1169/2007 tested (937 survived, 92 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 38m) 1170/2007 tested (938 survived, 92 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 38m) 1172/2007 tested (940 survived, 92 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 38m) 1173/2007 tested (941 survived, 92 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 37m) 1175/2007 tested (943 survived, 92 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 37m) 1176/2007 tested (944 survived, 92 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 37m) 1178/2007 tested (946 survived, 92 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 37m) 1179/2007 tested (947 survived, 92 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 37m) 1181/2007 tested (949 survived, 92 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 37m) 1182/2007 tested (950 survived, 92 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 36m) 1184/2007 tested (952 survived, 92 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 36m) 1185/2007 tested (953 survived, 92 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 36m) 1187/2007 tested (955 survived, 92 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 36m) 1188/2007 tested (956 survived, 92 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 36m) 1189/2007 tested (957 survived, 92 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 35m) 1191/2007 tested (959 survived, 92 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 35m) 1192/2007 tested (960 survived, 92 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 35m) 1194/2007 tested (962 survived, 92 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 35m) 1195/2007 tested (963 survived, 92 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 35m) 1197/2007 tested (965 survived, 92 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 35m) 1198/2007 tested (966 survived, 92 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 34m) 1200/2007 tested (968 survived, 92 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 34m) 1201/2007 tested (969 survived, 92 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 34m) 1203/2007 tested (971 survived, 92 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 34m) 1204/2007 tested (972 survived, 92 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 34m) 1206/2007 tested (974 survived, 92 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 34m) 1207/2007 tested (975 survived, 92 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 33m) 1209/2007 tested (977 survived, 92 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 33m) 1210/2007 tested (978 survived, 92 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 33m) 1212/2007 tested (980 survived, 92 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 33m) 1213/2007 tested (981 survived, 92 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 33m) 1214/2007 tested (982 survived, 92 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 32m) 1216/2007 tested (984 survived, 92 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 32m) 1217/2007 tested (985 survived, 92 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 32m) 1219/2007 tested (987 survived, 92 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 32m) 1220/2007 tested (988 survived, 92 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 32m) 1222/2007 tested (990 survived, 92 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 32m) 1223/2007 tested (991 survived, 92 timed out)
Mutation testing 61% (elapsed: ~2h 23m, remaining: ~1h 31m) 1225/2007 tested (993 survived, 92 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 31m) 1226/2007 tested (994 survived, 92 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 31m) 1228/2007 tested (996 survived, 92 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 31m) 1229/2007 tested (997 survived, 92 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 31m) 1231/2007 tested (999 survived, 92 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 31m) 1232/2007 tested (1000 survived, 92 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 30m) 1234/2007 tested (1002 survived, 92 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 30m) 1235/2007 tested (1003 survived, 92 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 30m) 1237/2007 tested (1005 survived, 92 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 30m) 1238/2007 tested (1006 survived, 92 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 29m) 1240/2007 tested (1008 survived, 92 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 29m) 1241/2007 tested (1009 survived, 92 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 29m) 1243/2007 tested (1011 survived, 92 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 29m) 1244/2007 tested (1012 survived, 92 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 29m) 1246/2007 tested (1014 survived, 92 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 29m) 1247/2007 tested (1015 survived, 92 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 28m) 1249/2007 tested (1017 survived, 92 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 28m) 1250/2007 tested (1018 survived, 92 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 28m) 1252/2007 tested (1020 survived, 92 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 28m) 1253/2007 tested (1021 survived, 92 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 28m) 1254/2007 tested (1022 survived, 92 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 28m) 1256/2007 tested (1024 survived, 92 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 28m) 1257/2007 tested (1025 survived, 92 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 27m) 1259/2007 tested (1027 survived, 92 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 27m) 1260/2007 tested (1028 survived, 92 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 27m) 1262/2007 tested (1030 survived, 92 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 27m) 1263/2007 tested (1031 survived, 92 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 27m) 1265/2007 tested (1033 survived, 92 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 26m) 1266/2007 tested (1034 survived, 92 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 26m) 1268/2007 tested (1036 survived, 92 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 26m) 1269/2007 tested (1037 survived, 92 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 26m) 1271/2007 tested (1039 survived, 92 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 26m) 1272/2007 tested (1040 survived, 92 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1274/2007 tested (1042 survived, 92 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1275/2007 tested (1043 survived, 92 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1277/2007 tested (1045 survived, 92 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1278/2007 tested (1046 survived, 92 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 25m) 1280/2007 tested (1048 survived, 92 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 25m) 1281/2007 tested (1049 survived, 92 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 24m) 1283/2007 tested (1051 survived, 92 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 24m) 1284/2007 tested (1052 survived, 92 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 24m) 1286/2007 tested (1054 survived, 92 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 24m) 1287/2007 tested (1055 survived, 92 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 24m) 1289/2007 tested (1057 survived, 92 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 24m) 1290/2007 tested (1058 survived, 92 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 23m) 1292/2007 tested (1060 survived, 92 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 23m) 1293/2007 tested (1061 survived, 92 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 23m) 1294/2007 tested (1062 survived, 92 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 23m) 1296/2007 tested (1064 survived, 92 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 23m) 1297/2007 tested (1065 survived, 92 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 22m) 1299/2007 tested (1067 survived, 92 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 22m) 1300/2007 tested (1068 survived, 92 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 22m) 1302/2007 tested (1070 survived, 92 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 22m) 1303/2007 tested (1071 survived, 92 timed out)
Mutation testing 65% (elapsed: ~2h 32m, remaining: ~1h 22m) 1305/2007 tested (1073 survived, 92 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 22m) 1306/2007 tested (1074 survived, 92 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1308/2007 tested (1076 survived, 92 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1309/2007 tested (1077 survived, 92 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1311/2007 tested (1079 survived, 92 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1312/2007 tested (1080 survived, 92 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1314/2007 tested (1082 survived, 92 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 21m) 1315/2007 tested (1083 survived, 92 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1317/2007 tested (1085 survived, 92 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1318/2007 tested (1086 survived, 92 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1320/2007 tested (1088 survived, 92 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1321/2007 tested (1089 survived, 92 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1323/2007 tested (1091 survived, 92 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 19m) 1324/2007 tested (1092 survived, 92 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 19m) 1326/2007 tested (1094 survived, 92 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 19m) 1327/2007 tested (1095 survived, 92 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 19m) 1329/2007 tested (1097 survived, 92 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 19m) 1330/2007 tested (1098 survived, 92 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 18m) 1332/2007 tested (1100 survived, 92 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1333/2007 tested (1101 survived, 92 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1334/2007 tested (1102 survived, 92 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1336/2007 tested (1104 survived, 92 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1337/2007 tested (1105 survived, 92 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1339/2007 tested (1107 survived, 92 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1340/2007 tested (1108 survived, 92 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 17m) 1342/2007 tested (1110 survived, 92 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 17m) 1343/2007 tested (1111 survived, 92 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 17m) 1345/2007 tested (1113 survived, 92 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 17m) 1346/2007 tested (1114 survived, 92 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 17m) 1348/2007 tested (1116 survived, 92 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 16m) 1349/2007 tested (1117 survived, 92 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 16m) 1351/2007 tested (1119 survived, 92 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 16m) 1352/2007 tested (1120 survived, 92 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 16m) 1354/2007 tested (1122 survived, 92 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 16m) 1355/2007 tested (1123 survived, 92 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 16m) 1357/2007 tested (1125 survived, 92 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 15m) 1358/2007 tested (1126 survived, 92 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 15m) 1360/2007 tested (1128 survived, 92 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 15m) 1361/2007 tested (1129 survived, 92 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 15m) 1363/2007 tested (1131 survived, 92 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 15m) 1364/2007 tested (1132 survived, 92 timed out)
Mutation testing 68% (elapsed: ~2h 39m, remaining: ~1h 14m) 1366/2007 tested (1134 survived, 92 timed out)
Mutation testing 68% (elapsed: ~2h 39m, remaining: ~1h 14m) 1367/2007 tested (1135 survived, 92 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 14m) 1369/2007 tested (1137 survived, 92 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 14m) 1370/2007 tested (1138 survived, 92 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 14m) 1372/2007 tested (1140 survived, 92 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 14m) 1373/2007 tested (1141 survived, 92 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 14m) 1374/2007 tested (1142 survived, 92 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 13m) 1376/2007 tested (1144 survived, 92 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 13m) 1377/2007 tested (1145 survived, 92 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 13m) 1379/2007 tested (1147 survived, 92 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 13m) 1380/2007 tested (1148 survived, 92 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 13m) 1382/2007 tested (1150 survived, 92 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 12m) 1383/2007 tested (1151 survived, 92 timed out)
Mutation testing 69% (elapsed: ~2h 41m, remaining: ~1h 12m) 1385/2007 tested (1153 survived, 92 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 12m) 1386/2007 tested (1154 survived, 92 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 12m) 1388/2007 tested (1156 survived, 92 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 12m) 1389/2007 tested (1157 survived, 92 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 11m) 1391/2007 tested (1159 survived, 92 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 11m) 1392/2007 tested (1160 survived, 92 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 11m) 1394/2007 tested (1162 survived, 92 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 11m) 1395/2007 tested (1163 survived, 92 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 11m) 1397/2007 tested (1165 survived, 92 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 11m) 1398/2007 tested (1166 survived, 92 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 10m) 1400/2007 tested (1168 survived, 92 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 10m) 1401/2007 tested (1169 survived, 92 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 10m) 1403/2007 tested (1171 survived, 92 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 10m) 1404/2007 tested (1172 survived, 92 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 10m) 1406/2007 tested (1174 survived, 92 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 10m) 1407/2007 tested (1175 survived, 92 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 9m) 1409/2007 tested (1177 survived, 92 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 9m) 1410/2007 tested (1178 survived, 92 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 9m) 1412/2007 tested (1180 survived, 92 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 9m) 1413/2007 tested (1181 survived, 92 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 9m) 1414/2007 tested (1182 survived, 92 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 9m) 1416/2007 tested (1184 survived, 92 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 8m) 1417/2007 tested (1185 survived, 92 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 8m) 1419/2007 tested (1187 survived, 92 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 8m) 1420/2007 tested (1188 survived, 92 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 8m) 1422/2007 tested (1190 survived, 92 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 8m) 1423/2007 tested (1191 survived, 92 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 7m) 1425/2007 tested (1193 survived, 92 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 7m) 1426/2007 tested (1194 survived, 92 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 7m) 1428/2007 tested (1196 survived, 92 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 7m) 1429/2007 tested (1197 survived, 92 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 7m) 1431/2007 tested (1199 survived, 92 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 7m) 1432/2007 tested (1200 survived, 92 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 6m) 1434/2007 tested (1202 survived, 92 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 6m) 1435/2007 tested (1203 survived, 92 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 6m) 1437/2007 tested (1205 survived, 92 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 6m) 1438/2007 tested (1206 survived, 92 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 6m) 1440/2007 tested (1208 survived, 92 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 6m) 1441/2007 tested (1209 survived, 92 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 5m) 1443/2007 tested (1211 survived, 92 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 5m) 1444/2007 tested (1212 survived, 92 timed out)
Mutation testing 72% (elapsed: ~2h 48m, remaining: ~1h 5m) 1446/2007 tested (1214 survived, 92 timed out)
Mutation testing 72% (elapsed: ~2h 48m, remaining: ~1h 5m) 1447/2007 tested (1215 survived, 92 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 5m) 1449/2007 tested (1217 survived, 92 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 4m) 1450/2007 tested (1218 survived, 92 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 4m) 1452/2007 tested (1220 survived, 92 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 4m) 1453/2007 tested (1221 survived, 92 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 4m) 1455/2007 tested (1223 survived, 92 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 4m) 1456/2007 tested (1224 survived, 92 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 4m) 1457/2007 tested (1225 survived, 92 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 3m) 1459/2007 tested (1227 survived, 92 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 3m) 1460/2007 tested (1228 survived, 92 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 3m) 1462/2007 tested (1230 survived, 92 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 3m) 1463/2007 tested (1231 survived, 92 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 3m) 1465/2007 tested (1233 survived, 92 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 3m) 1466/2007 tested (1234 survived, 92 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 2m) 1468/2007 tested (1236 survived, 92 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 2m) 1469/2007 tested (1237 survived, 92 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 2m) 1471/2007 tested (1239 survived, 92 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 2m) 1472/2007 tested (1240 survived, 92 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 2m) 1474/2007 tested (1242 survived, 92 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 2m) 1475/2007 tested (1243 survived, 92 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 1m) 1477/2007 tested (1245 survived, 92 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 1m) 1478/2007 tested (1246 survived, 92 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 1m) 1480/2007 tested (1248 survived, 92 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 1m) 1481/2007 tested (1249 survived, 92 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 1m) 1483/2007 tested (1251 survived, 92 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 0m) 1484/2007 tested (1252 survived, 92 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~1h 0m) 1486/2007 tested (1254 survived, 92 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~1h 0m) 1487/2007 tested (1255 survived, 92 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~1h 0m) 1489/2007 tested (1257 survived, 92 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~1h 0m) 1490/2007 tested (1258 survived, 92 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~1h 0m) 1492/2007 tested (1260 survived, 92 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1493/2007 tested (1261 survived, 92 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1494/2007 tested (1262 survived, 92 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1496/2007 tested (1264 survived, 92 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1497/2007 tested (1265 survived, 92 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1499/2007 tested (1267 survived, 92 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1500/2007 tested (1268 survived, 92 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~58m) 1502/2007 tested (1270 survived, 92 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~58m) 1503/2007 tested (1271 survived, 92 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~58m) 1505/2007 tested (1273 survived, 92 timed out)
Mutation testing 75% (elapsed: ~2h 55m, remaining: ~58m) 1506/2007 tested (1274 survived, 92 timed out)
Mutation testing 75% (elapsed: ~2h 55m, remaining: ~58m) 1508/2007 tested (1276 survived, 92 timed out)
Mutation testing 75% (elapsed: ~2h 55m, remaining: ~58m) 1509/2007 tested (1277 survived, 92 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~57m) 1511/2007 tested (1279 survived, 92 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~57m) 1514/2007 tested (1280 survived, 92 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~57m) 1515/2007 tested (1281 survived, 92 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~57m) 1517/2007 tested (1283 survived, 92 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~56m) 1518/2007 tested (1284 survived, 92 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~56m) 1520/2007 tested (1286 survived, 92 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~56m) 1521/2007 tested (1287 survived, 92 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~56m) 1523/2007 tested (1289 survived, 92 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~56m) 1524/2007 tested (1290 survived, 92 timed out)
Mutation testing 76% (elapsed: ~2h 57m, remaining: ~55m) 1526/2007 tested (1292 survived, 92 timed out)
Mutation testing 76% (elapsed: ~2h 57m, remaining: ~55m) 1527/2007 tested (1293 survived, 92 timed out)
Mutation testing 76% (elapsed: ~2h 57m, remaining: ~55m) 1529/2007 tested (1295 survived, 92 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~55m) 1530/2007 tested (1296 survived, 92 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~55m) 1532/2007 tested (1298 survived, 92 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~55m) 1533/2007 tested (1299 survived, 92 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~54m) 1535/2007 tested (1301 survived, 92 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~54m) 1536/2007 tested (1302 survived, 92 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~54m) 1538/2007 tested (1304 survived, 92 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~54m) 1539/2007 tested (1305 survived, 92 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~54m) 1541/2007 tested (1307 survived, 92 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~54m) 1542/2007 tested (1308 survived, 92 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~53m) 1543/2007 tested (1309 survived, 92 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~53m) 1545/2007 tested (1311 survived, 92 timed out)
Mutation testing 77% (elapsed: ~2h 59m, remaining: ~53m) 1546/2007 tested (1312 survived, 92 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~53m) 1548/2007 tested (1314 survived, 92 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~53m) 1549/2007 tested (1315 survived, 92 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~53m) 1551/2007 tested (1317 survived, 92 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~52m) 1552/2007 tested (1318 survived, 92 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~52m) 1554/2007 tested (1320 survived, 92 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~52m) 1555/2007 tested (1321 survived, 92 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~52m) 1557/2007 tested (1323 survived, 92 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~52m) 1558/2007 tested (1324 survived, 92 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~51m) 1560/2007 tested (1326 survived, 92 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~51m) 1561/2007 tested (1327 survived, 92 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~51m) 1563/2007 tested (1329 survived, 92 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~51m) 1564/2007 tested (1330 survived, 92 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~51m) 1566/2007 tested (1332 survived, 92 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~51m) 1567/2007 tested (1333 survived, 92 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~50m) 1569/2007 tested (1335 survived, 92 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~50m) 1570/2007 tested (1336 survived, 92 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~50m) 1571/2007 tested (1337 survived, 92 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~50m) 1573/2007 tested (1339 survived, 92 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~50m) 1574/2007 tested (1340 survived, 92 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~50m) 1576/2007 tested (1342 survived, 92 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~49m) 1577/2007 tested (1343 survived, 92 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~49m) 1579/2007 tested (1345 survived, 92 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~49m) 1580/2007 tested (1346 survived, 92 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~49m) 1582/2007 tested (1348 survived, 92 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~49m) 1583/2007 tested (1349 survived, 92 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~49m) 1585/2007 tested (1351 survived, 92 timed out)
Mutation testing 79% (elapsed: ~3h 4m, remaining: ~48m) 1586/2007 tested (1352 survived, 92 timed out)
Mutation testing 79% (elapsed: ~3h 4m, remaining: ~48m) 1588/2007 tested (1354 survived, 92 timed out)
Mutation testing 79% (elapsed: ~3h 4m, remaining: ~48m) 1589/2007 tested (1355 survived, 92 timed out)
Mutation testing 79% (elapsed: ~3h 4m, remaining: ~48m) 1591/2007 tested (1357 survived, 92 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~48m) 1592/2007 tested (1358 survived, 92 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~47m) 1594/2007 tested (1360 survived, 92 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~47m) 1595/2007 tested (1361 survived, 92 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~47m) 1597/2007 tested (1363 survived, 92 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~47m) 1598/2007 tested (1364 survived, 92 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~47m) 1600/2007 tested (1366 survived, 92 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~47m) 1601/2007 tested (1367 survived, 92 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~46m) 1603/2007 tested (1369 survived, 92 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~46m) 1604/2007 tested (1370 survived, 92 timed out)
Mutation testing 80% (elapsed: ~3h 6m, remaining: ~46m) 1606/2007 tested (1372 survived, 92 timed out)
Mutation testing 80% (elapsed: ~3h 6m, remaining: ~46m) 1607/2007 tested (1373 survived, 92 timed out)
Mutation testing 80% (elapsed: ~3h 6m, remaining: ~46m) 1609/2007 tested (1375 survived, 92 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~46m) 1610/2007 tested (1376 survived, 92 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~46m) 1611/2007 tested (1377 survived, 92 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~45m) 1613/2007 tested (1379 survived, 92 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~45m) 1614/2007 tested (1380 survived, 92 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~45m) 1616/2007 tested (1382 survived, 92 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~45m) 1617/2007 tested (1383 survived, 92 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~45m) 1619/2007 tested (1385 survived, 92 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~44m) 1620/2007 tested (1386 survived, 92 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~44m) 1622/2007 tested (1388 survived, 92 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~44m) 1623/2007 tested (1389 survived, 92 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~44m) 1625/2007 tested (1391 survived, 92 timed out)
Mutation testing 81% (elapsed: ~3h 8m, remaining: ~44m) 1626/2007 tested (1392 survived, 92 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~43m) 1628/2007 tested (1394 survived, 92 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~43m) 1629/2007 tested (1395 survived, 92 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~43m) 1631/2007 tested (1397 survived, 92 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~43m) 1632/2007 tested (1398 survived, 92 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~43m) 1634/2007 tested (1400 survived, 92 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~43m) 1635/2007 tested (1401 survived, 92 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~42m) 1637/2007 tested (1403 survived, 92 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~42m) 1638/2007 tested (1404 survived, 92 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~42m) 1640/2007 tested (1406 survived, 92 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~42m) 1641/2007 tested (1407 survived, 92 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~42m) 1643/2007 tested (1409 survived, 92 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~42m) 1644/2007 tested (1410 survived, 92 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~41m) 1646/2007 tested (1412 survived, 92 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~41m) 1647/2007 tested (1413 survived, 92 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~41m) 1649/2007 tested (1415 survived, 92 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~41m) 1650/2007 tested (1416 survived, 92 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~41m) 1651/2007 tested (1417 survived, 92 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~41m) 1653/2007 tested (1419 survived, 92 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~40m) 1654/2007 tested (1420 survived, 92 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~40m) 1656/2007 tested (1422 survived, 92 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~40m) 1657/2007 tested (1423 survived, 92 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~40m) 1659/2007 tested (1425 survived, 92 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~40m) 1660/2007 tested (1426 survived, 92 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~40m) 1662/2007 tested (1428 survived, 92 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~39m) 1663/2007 tested (1429 survived, 92 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~39m) 1665/2007 tested (1431 survived, 92 timed out)
Mutation testing 83% (elapsed: ~3h 13m, remaining: ~39m) 1666/2007 tested (1432 survived, 92 timed out)
Mutation testing 83% (elapsed: ~3h 13m, remaining: ~39m) 1668/2007 tested (1434 survived, 92 timed out)
Mutation testing 83% (elapsed: ~3h 13m, remaining: ~39m) 1669/2007 tested (1435 survived, 92 timed out)
Mutation testing 83% (elapsed: ~3h 13m, remaining: ~38m) 1671/2007 tested (1437 survived, 92 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~38m) 1672/2007 tested (1438 survived, 92 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~38m) 1674/2007 tested (1440 survived, 92 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~38m) 1675/2007 tested (1441 survived, 92 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~38m) 1677/2007 tested (1443 survived, 92 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~38m) 1678/2007 tested (1444 survived, 92 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~37m) 1680/2007 tested (1446 survived, 92 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~37m) 1681/2007 tested (1447 survived, 92 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~37m) 1683/2007 tested (1449 survived, 92 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~37m) 1684/2007 tested (1450 survived, 92 timed out)
Mutation testing 84% (elapsed: ~3h 15m, remaining: ~37m) 1686/2007 tested (1452 survived, 92 timed out)
Mutation testing 84% (elapsed: ~3h 15m, remaining: ~37m) 1687/2007 tested (1453 survived, 92 timed out)
Mutation testing 84% (elapsed: ~3h 15m, remaining: ~36m) 1689/2007 tested (1455 survived, 92 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~36m) 1690/2007 tested (1456 survived, 92 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~36m) 1692/2007 tested (1458 survived, 92 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~36m) 1693/2007 tested (1459 survived, 92 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~36m) 1694/2007 tested (1460 survived, 92 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~36m) 1696/2007 tested (1462 survived, 92 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~35m) 1697/2007 tested (1463 survived, 92 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~35m) 1699/2007 tested (1465 survived, 92 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~35m) 1700/2007 tested (1466 survived, 92 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~35m) 1702/2007 tested (1468 survived, 92 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~35m) 1703/2007 tested (1469 survived, 92 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~35m) 1705/2007 tested (1471 survived, 92 timed out)
Mutation testing 85% (elapsed: ~3h 17m, remaining: ~34m) 1706/2007 tested (1472 survived, 92 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~34m) 1708/2007 tested (1474 survived, 92 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~34m) 1709/2007 tested (1475 survived, 92 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~34m) 1711/2007 tested (1477 survived, 92 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~34m) 1712/2007 tested (1478 survived, 92 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~33m) 1714/2007 tested (1480 survived, 92 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~33m) 1715/2007 tested (1481 survived, 92 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~33m) 1717/2007 tested (1483 survived, 92 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~33m) 1718/2007 tested (1484 survived, 92 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~33m) 1720/2007 tested (1486 survived, 92 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~33m) 1721/2007 tested (1487 survived, 92 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~32m) 1723/2007 tested (1489 survived, 92 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~32m) 1724/2007 tested (1490 survived, 92 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~32m) 1726/2007 tested (1492 survived, 92 timed out)
Mutation testing 86% (elapsed: ~3h 20m, remaining: ~32m) 1727/2007 tested (1493 survived, 92 timed out)
Mutation testing 86% (elapsed: ~3h 20m, remaining: ~32m) 1729/2007 tested (1495 survived, 92 timed out)
Mutation testing 86% (elapsed: ~3h 20m, remaining: ~32m) 1730/2007 tested (1496 survived, 92 timed out)
Mutation testing 86% (elapsed: ~3h 20m, remaining: ~31m) 1732/2007 tested (1498 survived, 92 timed out)
Mutation testing 86% (elapsed: ~3h 20m, remaining: ~31m) 1733/2007 tested (1499 survived, 92 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~31m) 1734/2007 tested (1500 survived, 92 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~31m) 1736/2007 tested (1502 survived, 92 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~31m) 1737/2007 tested (1503 survived, 92 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~31m) 1739/2007 tested (1505 survived, 92 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~30m) 1740/2007 tested (1506 survived, 92 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~30m) 1742/2007 tested (1508 survived, 92 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~30m) 1743/2007 tested (1509 survived, 92 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~30m) 1745/2007 tested (1511 survived, 92 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~30m) 1746/2007 tested (1512 survived, 92 timed out)
Mutation testing 87% (elapsed: ~3h 22m, remaining: ~30m) 1748/2007 tested (1514 survived, 92 timed out)
Mutation testing 87% (elapsed: ~3h 22m, remaining: ~29m) 1749/2007 tested (1515 survived, 92 timed out)
Mutation testing 87% (elapsed: ~3h 22m, remaining: ~29m) 1751/2007 tested (1517 survived, 92 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~29m) 1752/2007 tested (1518 survived, 92 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~29m) 1754/2007 tested (1520 survived, 92 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~29m) 1755/2007 tested (1521 survived, 92 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~28m) 1757/2007 tested (1523 survived, 92 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~28m) 1758/2007 tested (1524 survived, 92 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~28m) 1760/2007 tested (1526 survived, 92 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~28m) 1761/2007 tested (1527 survived, 92 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~28m) 1763/2007 tested (1529 survived, 92 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~28m) 1764/2007 tested (1530 survived, 92 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~27m) 1766/2007 tested (1532 survived, 92 timed out)
Mutation testing 88% (elapsed: ~3h 24m, remaining: ~27m) 1767/2007 tested (1533 survived, 92 timed out)
Mutation testing 88% (elapsed: ~3h 24m, remaining: ~27m) 1769/2007 tested (1535 survived, 92 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~27m) 1770/2007 tested (1536 survived, 92 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~27m) 1772/2007 tested (1538 survived, 92 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~27m) 1773/2007 tested (1539 survived, 92 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~26m) 1774/2007 tested (1540 survived, 92 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~26m) 1776/2007 tested (1542 survived, 92 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~26m) 1777/2007 tested (1543 survived, 92 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~26m) 1779/2007 tested (1545 survived, 92 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~26m) 1780/2007 tested (1546 survived, 92 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~26m) 1782/2007 tested (1548 survived, 92 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~25m) 1783/2007 tested (1549 survived, 92 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~25m) 1785/2007 tested (1551 survived, 92 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~25m) 1786/2007 tested (1552 survived, 92 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~25m) 1788/2007 tested (1554 survived, 92 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~25m) 1789/2007 tested (1555 survived, 92 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~25m) 1791/2007 tested (1557 survived, 92 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~24m) 1792/2007 tested (1558 survived, 92 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~24m) 1794/2007 tested (1560 survived, 92 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~24m) 1795/2007 tested (1561 survived, 92 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~24m) 1797/2007 tested (1563 survived, 92 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~24m) 1798/2007 tested (1564 survived, 92 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~23m) 1800/2007 tested (1566 survived, 92 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~23m) 1801/2007 tested (1567 survived, 92 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~23m) 1803/2007 tested (1569 survived, 92 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~23m) 1804/2007 tested (1570 survived, 92 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~23m) 1806/2007 tested (1572 survived, 92 timed out)
Mutation testing 90% (elapsed: ~3h 29m, remaining: ~23m) 1807/2007 tested (1573 survived, 92 timed out)
Mutation testing 90% (elapsed: ~3h 29m, remaining: ~22m) 1809/2007 tested (1575 survived, 92 timed out)
Mutation testing 90% (elapsed: ~3h 29m, remaining: ~22m) 1810/2007 tested (1576 survived, 92 timed out)
Mutation testing 90% (elapsed: ~3h 29m, remaining: ~22m) 1811/2007 tested (1577 survived, 92 timed out)
Mutation testing 90% (elapsed: ~3h 29m, remaining: ~22m) 1813/2007 tested (1579 survived, 92 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~22m) 1814/2007 tested (1580 survived, 92 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~22m) 1816/2007 tested (1582 survived, 92 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~21m) 1817/2007 tested (1583 survived, 92 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~21m) 1819/2007 tested (1585 survived, 92 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~21m) 1820/2007 tested (1586 survived, 92 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~21m) 1822/2007 tested (1588 survived, 92 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~21m) 1823/2007 tested (1589 survived, 92 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~21m) 1825/2007 tested (1591 survived, 92 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~20m) 1826/2007 tested (1592 survived, 92 timed out)
Mutation testing 91% (elapsed: ~3h 31m, remaining: ~20m) 1828/2007 tested (1594 survived, 92 timed out)
Mutation testing 91% (elapsed: ~3h 31m, remaining: ~20m) 1829/2007 tested (1595 survived, 92 timed out)
Mutation testing 91% (elapsed: ~3h 31m, remaining: ~20m) 1831/2007 tested (1597 survived, 92 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~20m) 1832/2007 tested (1598 survived, 92 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~20m) 1834/2007 tested (1600 survived, 92 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~19m) 1835/2007 tested (1601 survived, 92 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~19m) 1837/2007 tested (1603 survived, 92 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~19m) 1838/2007 tested (1604 survived, 92 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~19m) 1840/2007 tested (1606 survived, 92 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~19m) 1841/2007 tested (1607 survived, 92 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~18m) 1843/2007 tested (1609 survived, 92 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~18m) 1844/2007 tested (1610 survived, 92 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~18m) 1846/2007 tested (1612 survived, 92 timed out)
Mutation testing 92% (elapsed: ~3h 33m, remaining: ~18m) 1847/2007 tested (1613 survived, 92 timed out)
Mutation testing 92% (elapsed: ~3h 33m, remaining: ~18m) 1849/2007 tested (1615 survived, 92 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~18m) 1850/2007 tested (1616 survived, 92 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~17m) 1852/2007 tested (1618 survived, 92 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~17m) 1853/2007 tested (1619 survived, 92 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~17m) 1854/2007 tested (1620 survived, 92 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~17m) 1856/2007 tested (1622 survived, 92 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~17m) 1857/2007 tested (1623 survived, 92 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~17m) 1859/2007 tested (1625 survived, 92 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~17m) 1860/2007 tested (1626 survived, 92 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~16m) 1862/2007 tested (1628 survived, 92 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~16m) 1863/2007 tested (1629 survived, 92 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~16m) 1865/2007 tested (1631 survived, 92 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~16m) 1866/2007 tested (1632 survived, 92 timed out)
Mutation testing 93% (elapsed: ~3h 36m, remaining: ~16m) 1868/2007 tested (1634 survived, 92 timed out)
Mutation testing 93% (elapsed: ~3h 36m, remaining: ~15m) 1869/2007 tested (1635 survived, 92 timed out)
Mutation testing 93% (elapsed: ~3h 36m, remaining: ~15m) 1871/2007 tested (1637 survived, 92 timed out)
Mutation testing 93% (elapsed: ~3h 36m, remaining: ~15m) 1872/2007 tested (1638 survived, 92 timed out)
Mutation testing 93% (elapsed: ~3h 36m, remaining: ~15m) 1874/2007 tested (1640 survived, 92 timed out)
Mutation testing 93% (elapsed: ~3h 36m, remaining: ~15m) 1875/2007 tested (1641 survived, 92 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~15m) 1877/2007 tested (1643 survived, 92 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~14m) 1878/2007 tested (1644 survived, 92 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~14m) 1880/2007 tested (1646 survived, 92 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~14m) 1881/2007 tested (1647 survived, 92 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~14m) 1883/2007 tested (1649 survived, 92 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~14m) 1884/2007 tested (1650 survived, 92 timed out)
Mutation testing 93% (elapsed: ~3h 38m, remaining: ~13m) 1886/2007 tested (1652 survived, 92 timed out)
Mutation testing 94% (elapsed: ~3h 38m, remaining: ~13m) 1887/2007 tested (1653 survived, 92 timed out)
Mutation testing 94% (elapsed: ~3h 38m, remaining: ~13m) 1889/2007 tested (1655 survived, 92 timed out)
Mutation testing 94% (elapsed: ~3h 38m, remaining: ~13m) 1890/2007 tested (1656 survived, 92 timed out)
Mutation testing 94% (elapsed: ~3h 38m, remaining: ~13m) 1892/2007 tested (1658 survived, 92 timed out)
Mutation testing 94% (elapsed: ~3h 38m, remaining: ~13m) 1893/2007 tested (1659 survived, 92 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~13m) 1894/2007 tested (1660 survived, 92 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~12m) 1896/2007 tested (1662 survived, 92 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~12m) 1897/2007 tested (1663 survived, 92 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~12m) 1899/2007 tested (1665 survived, 92 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~12m) 1900/2007 tested (1666 survived, 92 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~12m) 1902/2007 tested (1668 survived, 92 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~12m) 1903/2007 tested (1669 survived, 92 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~11m) 1905/2007 tested (1671 survived, 92 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~11m) 1906/2007 tested (1672 survived, 92 timed out)
Mutation testing 95% (elapsed: ~3h 40m, remaining: ~11m) 1908/2007 tested (1674 survived, 92 timed out)
Mutation testing 95% (elapsed: ~3h 40m, remaining: ~11m) 1909/2007 tested (1675 survived, 92 timed out)
Mutation testing 95% (elapsed: ~3h 40m, remaining: ~11m) 1911/2007 tested (1677 survived, 92 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~10m) 1912/2007 tested (1678 survived, 92 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~10m) 1914/2007 tested (1680 survived, 92 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~10m) 1915/2007 tested (1681 survived, 92 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~10m) 1917/2007 tested (1683 survived, 92 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~10m) 1918/2007 tested (1684 survived, 92 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~10m) 1920/2007 tested (1686 survived, 92 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~9m) 1921/2007 tested (1687 survived, 92 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~9m) 1923/2007 tested (1689 survived, 92 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~9m) 1924/2007 tested (1690 survived, 92 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~9m) 1926/2007 tested (1692 survived, 92 timed out)
Mutation testing 96% (elapsed: ~3h 42m, remaining: ~9m) 1927/2007 tested (1693 survived, 92 timed out)
Mutation testing 96% (elapsed: ~3h 42m, remaining: ~9m) 1929/2007 tested (1695 survived, 92 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~8m) 1930/2007 tested (1696 survived, 92 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~8m) 1932/2007 tested (1698 survived, 92 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~8m) 1933/2007 tested (1699 survived, 92 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~8m) 1934/2007 tested (1700 survived, 92 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~8m) 1936/2007 tested (1702 survived, 92 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~8m) 1937/2007 tested (1703 survived, 92 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~7m) 1939/2007 tested (1705 survived, 92 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~7m) 1940/2007 tested (1706 survived, 92 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~7m) 1942/2007 tested (1708 survived, 92 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~7m) 1943/2007 tested (1709 survived, 92 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~7m) 1945/2007 tested (1711 survived, 92 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~7m) 1946/2007 tested (1712 survived, 92 timed out)
Mutation testing 97% (elapsed: ~3h 45m, remaining: ~6m) 1948/2007 tested (1714 survived, 92 timed out)
Mutation testing 97% (elapsed: ~3h 45m, remaining: ~6m) 1949/2007 tested (1715 survived, 92 timed out)
Mutation testing 97% (elapsed: ~3h 45m, remaining: ~6m) 1951/2007 tested (1717 survived, 92 timed out)
Mutation testing 97% (elapsed: ~3h 45m, remaining: ~6m) 1952/2007 tested (1718 survived, 92 timed out)
Mutation testing 97% (elapsed: ~3h 45m, remaining: ~6m) 1954/2007 tested (1720 survived, 92 timed out)
Mutation testing 97% (elapsed: ~3h 45m, remaining: ~6m) 1955/2007 tested (1721 survived, 92 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~5m) 1957/2007 tested (1723 survived, 92 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~5m) 1958/2007 tested (1724 survived, 92 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~5m) 1960/2007 tested (1726 survived, 92 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~5m) 1961/2007 tested (1727 survived, 92 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~5m) 1963/2007 tested (1729 survived, 92 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~4m) 1964/2007 tested (1730 survived, 92 timed out)
Mutation testing 97% (elapsed: ~3h 47m, remaining: ~4m) 1966/2007 tested (1732 survived, 92 timed out)
Mutation testing 98% (elapsed: ~3h 47m, remaining: ~4m) 1967/2007 tested (1733 survived, 92 timed out)
Mutation testing 98% (elapsed: ~3h 47m, remaining: ~4m) 1969/2007 tested (1735 survived, 92 timed out)
Mutation testing 98% (elapsed: ~3h 47m, remaining: ~4m) 1970/2007 tested (1736 survived, 92 timed out)
Mutation testing 98% (elapsed: ~3h 47m, remaining: ~4m) 1972/2007 tested (1738 survived, 92 timed out)
Mutation testing 98% (elapsed: ~3h 47m, remaining: ~3m) 1973/2007 tested (1739 survived, 92 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~3m) 1974/2007 tested (1740 survived, 92 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~3m) 1976/2007 tested (1742 survived, 92 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~3m) 1977/2007 tested (1743 survived, 92 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~3m) 1979/2007 tested (1745 survived, 92 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~3m) 1980/2007 tested (1746 survived, 92 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~2m) 1982/2007 tested (1748 survived, 92 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~2m) 1983/2007 tested (1749 survived, 92 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~2m) 1985/2007 tested (1751 survived, 92 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~2m) 1986/2007 tested (1752 survived, 92 timed out)
Mutation testing 99% (elapsed: ~3h 49m, remaining: ~1m) 1990/2007 tested (1753 survived, 92 timed out)
Mutation testing 99% (elapsed: ~3h 49m, remaining: ~1m) 1992/2007 tested (1755 survived, 92 timed out)
Mutation testing 99% (elapsed: ~3h 49m, remaining: ~1m) 1993/2007 tested (1756 survived, 92 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: ~1m) 1995/2007 tested (1758 survived, 92 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: ~1m) 1996/2007 tested (1759 survived, 92 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: ~1m) 1998/2007 tested (1761 survived, 92 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: <1m) 1999/2007 tested (1762 survived, 92 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: <1m) 2001/2007 tested (1764 survived, 92 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: <1m) 2002/2007 tested (1765 survived, 92 timed out)
Mutation testing 99% (elapsed: ~3h 51m, remaining: <1m) 2004/2007 tested (1767 survived, 92 timed out)
Mutation testing 99% (elapsed: ~3h 51m, remaining: <1m) 2005/2007 tested (1768 survived, 92 timed out)

All tests
  ✓ All tests (killed 145)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap === "string") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {});

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", "definition");

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("deferred", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("fulfilled", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("rejected", definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     throw new Error("This is a buggy function");
+   });

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     return "This is a buggy function";
+   });

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     return function () {
+       throw new Error("This is a buggy function");
+     };
+   });

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.buggy) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.buggy()) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.buggy === true) {

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(definition());

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(null);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(function () {});

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "object") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "function") {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.isNotOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.isOk()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" ^ typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (domain && domain.exit()) {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.exit();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.run();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.bind();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, undefined);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, null);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, 0);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length - 1) {

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length * 2) {

[Survived] PrecomputedMutator
q.js:129:20
-               task = laterQueue.pop();
+               task = laterQueue.shift();

[Survived] PrecomputedMutator
q.js:130:13
-               runSingle(task);
+               noop(task);

[Survived] PrecomputedMutator
q.js:130:23
-               runSingle(task);
+               runSingle(() => {});

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isNodeJS && false) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isNodeJS || true) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit() && domain.enter()) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, "hello");

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(1), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(undefined), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (!flushing && true) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "object") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "function") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(this);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setInterval.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind({}, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush());

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, undefined);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, null);

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "undefined") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "object") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "function") {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage("hello");

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, "hello");

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, "hello");

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(1), 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(undefined), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing && !flushing) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length < 1) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (0);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (-1);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (length - 1);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index > this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index < this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index === this.length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index > length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index >= length + 1) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index + 1 >= length) {

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index += 2; index < length; index += 2) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index >= length; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = 0) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index > this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index < this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index === this.length) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis * 2, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index - 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] = 0, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i == this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i *= 2) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] > value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] < value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.pop(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.shift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) + 1);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) - 1);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) * 2);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call({}, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, null, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, 0, index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index - 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index * 2, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self + 1));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.length));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.toString()));

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key of object) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {}) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && object[key] !== undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) || object[key] === undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && object[key] !== null) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key - 1)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, "key")) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty({}, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key * 2)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key - 1)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key + 1);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key * 2);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key - 1);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_hasOwnProperty(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_keys(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_create(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.stack) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.name) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue !== "undefined" && ReturnValue !== null) {

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue !== "undefined" && ReturnValue !== "undefined") {

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue !== "undefined" && ReturnValue !== 0) {

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p.source; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p.source; p = p.source.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p && !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source.source.source) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__maximumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__" + 1, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.pop(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.shift(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.slice(0, 10));

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.toUpperCase());

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.split("").reverse().join(""));

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.pop(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.shift(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.name);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.code);

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.concat("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.push("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.pop("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n"));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.toUpperCase());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.replace("From previous event:", "From previous event: (MODIFIED)"));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: false
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "error", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "message", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack.slice(0, -1),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack.split("").reverse().join(""),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(" ");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\t");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\\n");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = this.length - 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = Math.floor(Math.random() * this.length); i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i == lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i = i + 1) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) || !isNodeFrame(line) || line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!getFileNameAndLineNumber(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isPromiseAlike(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.pop(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.shift(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.unshift(line);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line + 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line - 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line * 2);

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\t");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("<br>");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:30
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.indexOf("(module.js:)") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.match("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.search("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(node.js:)") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split("@")[1]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "string"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], null(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], undefined(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(" ").pop());

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(" ").slice(1).join(" "));

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[0]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2.length) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[4])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(" ").pop());

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(" ").slice(1).join(" "));

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[1]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[0]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3.length) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "0"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], undefined(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[0])];

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(" ").pop());

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(" ").slice(1).join(" "));

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[0]) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (!fileNameAndLineNumber.length) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber.indexOf(qFileName) === -1) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks === false) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (typeof hasStacks === "undefined") {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks !== true) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\t");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(" ");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\\n");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[lines.length - 1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("%") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("^") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[1]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[2]);

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber === undefined) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[0] === undefined) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn("deprecated")) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console.warn === "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console !== "undefined" && typeof console.warn === "function") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, arguments[0]);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, arguments[1]);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, arguments[2]);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.bind(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.toString(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, undefined);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, 0);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (value === Promise) {

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(defer.prototype.constructor);

[Survived] PrecomputedMutator
q.js:563:13
-           if (messages) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[1] === "foo") { // progress operand

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.pop(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.shift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.unshift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[3]);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.promise, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.source, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.stack, args);

[Survived] PrecomputedMutator
q.js:570:72
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages[0]) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.pop()) {

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.promise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.source);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.inspect());

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === undefined) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === 0) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (!isPromise(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromise || isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue + 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue * 2)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue - 1)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise !== null) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (typeof resolvedPromise === "undefined") {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport ^ hasStacks) {

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 2);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(" ") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\\n") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && hasStacks && false) {

[Survived] PrecomputedMutator
q.js:624:17
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message.concat(newPromise));

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.promise, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.then(function (value) {
+     return value;
+   }), message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.catch(function (error) {
+     throw error;
+   }), message);

[Survived] PrecomputedMutator
q.js:624:62
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message.concat(["new element"]));

[Survived] PrecomputedMutator
q.js:638:16
-           become(Q(value));
+           become(Q.resolve(value));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise === true) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== false) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(otherValue));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(value + 1));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(resolve(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(notify(value));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(undefined));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(0));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise === true) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== false) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== undefined) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListeners[0](progress);

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListeners[progressListeners.length - 1](progress);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress + 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress - 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress * 2);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.message) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.stack) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.name) {

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(null);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(undefined);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(new Error());

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length < 2) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.fulfill(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 4));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 1), 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 3), 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, null));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.notify(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.fulfill(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(0);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== Function) {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.resolve();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.reject();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.resolve, deferred.reject);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.notify, deferred.resolve);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.fulfill, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.fulfill);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.makeNodeResolver(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.reject(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.resolve(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.all(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + 1).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x * 2).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(y + 1);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x + y);

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.reject([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.resolve([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.all([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([null, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x + y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x - y) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i >= len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = i + 1) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.reject(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.resolve(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.all(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] + 1).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] * 2).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] - 1).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return null(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return undefined(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return 0(Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === undefined) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === function () {}) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === undefined) {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (descriptor[op] + 1) {

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(null, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply({}, args);

[Survived] PrecomputedMutator
q.js:808:56
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args.concat(1));

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(undefined, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call({}, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op + 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op - 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op * 2, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[0]);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[1]);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[2]);

[Survived] PrecomputedMutator
q.js:813:22
-               result = reject(exception);
+               result = resolve(exception);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(undefined);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject("error");

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.state) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.value) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.reason) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self);

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch);

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch.bind(self));

[Survived] PrecomputedMutator
q.js:866:24
-                   return reject(newException);
+                   return Q.reject(newException);

[Survived] PrecomputedMutator
q.js:869:16
-           return reject(exception);
+           return Q.reject(exception);

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed + 1(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed * 2(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed - 1(value) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(0) : value;

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done && false) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(undefined);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(0);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror()) {

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.message);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.stack);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.toString());

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw === true) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.reject(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(undefined);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(0);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.fcall(value).thenResolve(value));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.call(value).thenResolve(value));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.apply(value).thenResolve(value));

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.fcall(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.fcall(value).thenResolve(value));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.call(value).thenResolve(value));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.apply(value).thenResolve(value));

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed, null);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed, undefined);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(0).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(null, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function (value) {
+     return value;
+   }, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function (reason) {
+     throw reason;
+   }, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return undefined;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return 0;
+   });

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.reject(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.resolve(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.defer(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(0);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error("Reason: " + reason);
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(null).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(undefined).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(0).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(undefined);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject("error");

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (!isPromise(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isFulfilled(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isRejected(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value * 2)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value - 1)) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.value === undefined) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return !isPromise(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isFulfilled(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "rejected") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.state === "rejected") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "fulfilled") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !!isPromise(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromiseAlike(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPending(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect().value) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect().reason) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect().state) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.value().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.reason().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return !isPromise(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isFulfilled(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "rejected") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.state === "rejected") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "fulfilled") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections.valueOf()) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (typeof trackUnhandledRejections === "boolean") {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== true) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.indexOf(promise) > -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise) && unhandledReasons.includes(reason)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(trackUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     throw new Error("test");
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     return 42;
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     return Promise.reject(new Error("test"));
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "foo", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + 1, reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "bar", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.stack, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.message, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.toString(), promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.unshift(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.unshift(promise);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(0);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== void 0) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== null) {

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.message);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.name);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.code);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.pop("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.shift("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.unshift("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== true) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(0, -1), promise);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(1), promise);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(0, 1), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.concat(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.filter(function (rejection) {
+     return rejection !== promise;
+   }), promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at < -1) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections[0]);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.indexOf(promise));

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledReasons.length, promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.then(function () {}));

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.catch(function () {}));

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.finally(function () {}));

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport > -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport < -1) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("unhandledRejection", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("handledRejection", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at] = "new reason", promise);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, array.length);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, array_indexOf(unhandledRejections, promise) + 1);

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledRejections.length = 0();

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       trackUnhandledRejections = false();

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected && false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected || true) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(0);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason + 1);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason - 1);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason * 2);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       untrackRejection(rejection, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(0, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, "some string");

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === void 0) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === null || name === undefined) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(args[0], args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.toString(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(0, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.slice());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.concat());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.map(function (arg) {
+     return arg + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice());

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat());

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(0, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice());

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat());

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.map(function (x) {
+     return x;
+   }));

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.toString(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.map(function (x) {
+     return x;
+   }));

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.keys(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(undefined);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys({});

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.cancel(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(0);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.concat(args));

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(0, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op + 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op - 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op * 2, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.length);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.reject(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.fulfill(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q.reject(value).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q.resolve(value).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q.defer(value).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(null).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(undefined).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(0).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.then().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.catch().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.finally().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(0);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.call(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.bind(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(0, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.slice());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.concat());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.map(function (x) {
+     return x;
+   }));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration === "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](0);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return resolve(exception);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return deferred.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(null);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.fail) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.isRejected) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.isFulfilled) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value + 1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value * 2);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value - 1);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value * 2, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value - 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, reject, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, Q.reject, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, reject);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, resolve);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg + 1);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg * 2);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg.length);

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception instanceof StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.name === "StopIteration") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.constructor === StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration = false(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration = true(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration = !isStopIteration(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.value)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.message)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.message);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.stack);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.name);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return Q.reject(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(null);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(undefined);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject("error");

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, errback, callback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback, errback, null);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback, errback, undefined);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.reject(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.defer(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result * 2, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result - 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, errback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, reject, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, resolve, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, reject);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, resolve);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({});

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.bind(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.call(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.apply(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(null, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(undefined, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(void 0, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw", "error"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw", "error", "message"));

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(null, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(undefined, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(void 0, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "reject");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return reject();

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.fail(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.reject(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.resolve(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.bind(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.apply(this))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, some(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, any(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(undefined)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, args, null);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(args, self);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, args, undefined);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.bind(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply({}, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args[0]);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat(args[0]));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.length);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[0]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.reject(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.resolve(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.defer(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q({}).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op - 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op * 2, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, undefined);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, []);

[Survived] PrecomputedMutator
q.js:1409:20
-       var deferred = defer();
+       var deferred = deferred.reject();

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.concat(1));

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.cancel, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op - 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op * 2, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args[0]);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.concat(args[0]));

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.reject(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.defer(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(undefined).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q({}).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key * 2]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key * 2]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.reject(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.defer(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.all(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(undefined).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(0).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("apply", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, null]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("setValue", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, null]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, ""]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.reject(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.defer(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.all(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q("foo").dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [undefined, key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, ""]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key + 1]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key - 1]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.reject(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.resolve(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.defer(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q({}).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("set", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat(args)]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.reject(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.resolve(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.defer(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(undefined).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q("foo").dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("put", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("resolve", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(args, 2)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([], 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 2), 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 5)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("put", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("patch", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([1, 2, 3])]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(null, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(undefined, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([], 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, arguments.length - 1)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, [args]]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.reject(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.resolve(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.defer(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(function () {}).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("concat", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.concat(args)]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [undefined, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply" + "call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, 1]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, "foo"]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, null]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.reject(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.resolve(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.defer(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(null).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q({}).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("concat", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([], 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 3), 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [null, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply" + "call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q({});

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.length);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(void 0);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3), 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, arguments.length - 1);

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 3))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.slice(1));

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.slice(0, -1));

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.slice(1, -1));

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 3))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(undefined))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.reject(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.resolve(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.defer(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(null).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(undefined).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q({}).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [undefined]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [null]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [undefined]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [null]);

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "fulfilled" && promise.inspect().value === undefined

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     throw new Error("Buggy code");
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return Q.reject("Buggy code");
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return Q.resolve("Buggy code");
+   })) &&

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.isFulfilled()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === 0 && promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.concat([Q.reject()]));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.map(function (promise) {
+     return Q.reject(promise.inspect().value);
+   }));

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.resolve({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.progress({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index + 1,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index - 1,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index * 2,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.cancel(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.concat([Q.reject()]));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.map(function (promise) {
+     return Q.reject(promise.inspect().value);
+   }));

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allResolved(this);

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === 1) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.defer();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.when();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).then(onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).then(onProgress).catch(onRejected));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when.reject(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when.resolve(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when.then(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected).then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, noop, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onProgress, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, noop);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(index);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise.value);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount !== 0) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.inspect(rejection);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return all(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return some(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(null);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(undefined);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Promise.reject());

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "any", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "all", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "any");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_forEach(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(0), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.concat(), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.filter(function () {
+     return true;
+   }), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject());

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve());

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer());

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(undefined);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(0);

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.reverse()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice(1)).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.concat(Q.reject())).allSettled();

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function (result) {
+     return result + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function (result) {
+     return result * 2;
+   }));

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function (result) {
+     return result + Math.random();
+   }));

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(onFulfilled, onRejected);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.inspect(), regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.then(noop, noop), regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.then(function (value) {
+     return value;
+   }, function (reason) {
+     throw reason;
+   }), regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, noop);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(rejected, null);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(0).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(() => {}, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, Q.reject(promise));

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(rejected, null);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, deferred.reject(rejection));

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, deferred.notify(rejection));

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(0).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(NaN, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, () => {}, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, NaN, progressed);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(undefined)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(0)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.fcall());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.fcall().then(function () {}));

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply === "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply === "object") {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.defer(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fcall());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fcall(promise));

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fcall(promise.then));

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress, null);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress, undefined);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q("foo").done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progressed, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(void 0, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, progressed, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.then());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.catch());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.finally());

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, fulfilled, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, progress, "extra argument") :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, progress, function () {}) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(undefined, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, fulfilled, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, null, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, undefined, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, null) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, undefined) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, 0) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(undefined));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(this));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError, null);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(0, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError());

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, null);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Timeout error"));

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, error.message);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, error.stack);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.reject(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.resolve(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.defer(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(0).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(-1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(null, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, undefined);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, "error");

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           undefined(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== void 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === 0) {

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.reject(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.resolve(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.defer(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q({}).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout + 1);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout - 1);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout * 2);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               undefined(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(0);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.reject(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.resolve(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.defer(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.slice(1));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.concat([1]));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.filter(function (x) {
+     return x !== 1;
+   }));

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function (error, result) {}));

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat(["extra argument"])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.reverse()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.reject("Different error message"));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, "foo");

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function (error) {
+     throw error;
+   }));

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(0)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat([deferred.makeNodeResolver()])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback === null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback === "function") {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function (err) {
+     throw err;
+   }));

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           deferred(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           undefined(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.concat([1, 2, 3])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.filter(function (arg) {
+     return arg !== 1;
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice([].concat(arguments));

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift({});

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(0, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.concat(deferred.makeNodeResolver()));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.reverse());

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(args, 2);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(baseArgs, 1);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 1), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 2), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 3), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.splice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice.length(arguments));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(deferred.reject));

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[0]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments.slice());

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, nodeArgs);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, baseArgs);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, args);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.concat([1, 2, 3])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.filter(function (arg) {
+     return arg !== 1;
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments.length);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([], 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.concat(1));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.reverse());

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat(deferred.makeNodeResolver()));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.reject(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.defer(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.when(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(0).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name + "foo", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.length, args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, null);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, undefined);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "foo"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(nodeArgs);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice.length(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(undefined, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([], 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       null(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       undefined(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(null).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(undefined).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.slice(1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice.length(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.slice(0, -1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.reject(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.resolve(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.defer(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(0).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(error, null));

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(null, error));

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(error, error));

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback + 1) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback.call()) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, undefined);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback({}, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, 0);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback("error");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("ends.promise.get('tail')");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" + "foo");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" + 1);

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(Q.reject(error));

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(undefined)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(new Error("Different error message"))};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               closed.resolve(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               next.reject(end);

Ran 0.95 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.81 |      145 |        92 |       1770 |        0 |        0 |
 q.js     |   11.91 |      145 |        92 |       1753 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         17 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m17:26:31 (3122) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m17:26:31 (3122) INFO MutationTestExecutor[39m Done in 231 minutes 30 seconds.

real	231m32.035s
user	39m51.917s
sys	7m16.999s
