[32m13:05:57 (2232) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m13:05:57 (2232) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m13:05:58 (2232) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/node-jsonfile/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[32m13:05:58 (2232) INFO ProjectReader[39m Found 2 of 16 file(s) to be mutated.
*** using standard mutators ***
Mutant 0 in index.js: {
  _fs = require('graceful-fs');
} replaced with {}
Mutant 1 in index.js: {
  _fs = require('fs');
} replaced with {}
Mutant 2 in index.js: {
  if (typeof options === 'string') {
    options = {
      encoding: options
    };
  }
  const fs = options.fs || _fs;
  const shouldThrow = 'throws' in options ? options.throws : true;
  let data = await universalify.fromCallback(fs.readFile)(file, options);
  data = stripBom(data);
  let obj;
  try {
    obj = JSON.parse(data, options ? options.reviver : null);
  } catch (err) {
    if (shouldThrow) {
      err.message = `${file}: ${err.message}`;
      throw err;
    } else {
      return null;
    }
  }
  return obj;
} replaced with {}
Mutant 3 in index.js: typeof options === 'string' replaced with true
Mutant 4 in index.js: typeof options === 'string' replaced with false
Mutant 5 in index.js: typeof options === 'string' replaced with typeof options !== 'string'
Mutant 6 in index.js: 'string' replaced with ""
Mutant 7 in index.js: {
  options = {
    encoding: options
  };
} replaced with {}
Mutant 8 in index.js: {
  encoding: options
} replaced with {}
Mutant 9 in index.js: options.fs || _fs replaced with true
Mutant 10 in index.js: options.fs || _fs replaced with false
Mutant 11 in index.js: options.fs || _fs replaced with options.fs && _fs
Mutant 12 in index.js: 'throws' replaced with ""
Mutant 13 in index.js: true replaced with false
Mutant 14 in index.js: {
  obj = JSON.parse(data, options ? options.reviver : null);
} replaced with {}
Mutant 15 in index.js: {
  if (shouldThrow) {
    err.message = `${file}: ${err.message}`;
    throw err;
  } else {
    return null;
  }
} replaced with {}
Mutant 16 in index.js: shouldThrow replaced with true
Mutant 17 in index.js: shouldThrow replaced with false
Mutant 18 in index.js: {
  err.message = `${file}: ${err.message}`;
  throw err;
} replaced with {}
Mutant 19 in index.js: `${file}: ${err.message}` replaced with ``
Mutant 20 in index.js: {
  return null;
} replaced with {}
Mutant 21 in index.js: {
  if (typeof options === 'string') {
    options = {
      encoding: options
    };
  }
  const fs = options.fs || _fs;
  const shouldThrow = 'throws' in options ? options.throws : true;
  try {
    let content = fs.readFileSync(file, options);
    content = stripBom(content);
    return JSON.parse(content, options.reviver);
  } catch (err) {
    if (shouldThrow) {
      err.message = `${file}: ${err.message}`;
      throw err;
    } else {
      return null;
    }
  }
} replaced with {}
Mutant 22 in index.js: typeof options === 'string' replaced with true
Mutant 23 in index.js: typeof options === 'string' replaced with false
Mutant 24 in index.js: typeof options === 'string' replaced with typeof options !== 'string'
Mutant 25 in index.js: 'string' replaced with ""
Mutant 26 in index.js: {
  options = {
    encoding: options
  };
} replaced with {}
Mutant 27 in index.js: {
  encoding: options
} replaced with {}
Mutant 28 in index.js: options.fs || _fs replaced with true
Mutant 29 in index.js: options.fs || _fs replaced with false
Mutant 30 in index.js: options.fs || _fs replaced with options.fs && _fs
Mutant 31 in index.js: 'throws' replaced with ""
Mutant 32 in index.js: true replaced with false
Mutant 33 in index.js: {
  let content = fs.readFileSync(file, options);
  content = stripBom(content);
  return JSON.parse(content, options.reviver);
} replaced with {}
Mutant 34 in index.js: {
  if (shouldThrow) {
    err.message = `${file}: ${err.message}`;
    throw err;
  } else {
    return null;
  }
} replaced with {}
Mutant 35 in index.js: shouldThrow replaced with true
Mutant 36 in index.js: shouldThrow replaced with false
Mutant 37 in index.js: {
  err.message = `${file}: ${err.message}`;
  throw err;
} replaced with {}
Mutant 38 in index.js: `${file}: ${err.message}` replaced with ``
Mutant 39 in index.js: {
  return null;
} replaced with {}
Mutant 40 in index.js: {
  const fs = options.fs || _fs;
  const str = stringify(obj, options);
  await universalify.fromCallback(fs.writeFile)(file, str, options);
} replaced with {}
Mutant 41 in index.js: options.fs || _fs replaced with true
Mutant 42 in index.js: options.fs || _fs replaced with false
Mutant 43 in index.js: options.fs || _fs replaced with options.fs && _fs
Mutant 44 in index.js: {
  const fs = options.fs || _fs;
  const str = stringify(obj, options);
  // not sure if fs.writeFileSync returns anything, but just in case
  return fs.writeFileSync(file, str, options);
} replaced with {}
Mutant 45 in index.js: options.fs || _fs replaced with true
Mutant 46 in index.js: options.fs || _fs replaced with false
Mutant 47 in index.js: options.fs || _fs replaced with options.fs && _fs
Mutant 48 in index.js: {
  readFile,
  readFileSync,
  writeFile,
  writeFileSync
} replaced with {}
Mutant 49 in utils.js: '\n' replaced with ""
Mutant 50 in utils.js: true replaced with false
Mutant 51 in utils.js: {
  const EOF = finalEOL ? EOL : '';
  const str = JSON.stringify(obj, replacer, spaces);
  return str.replace(/\n/g, EOL) + EOF;
} replaced with {}
Mutant 52 in utils.js: '' replaced with "Stryker was here!"
Mutant 53 in utils.js: str.replace(/\n/g, EOL) + EOF replaced with str.replace(/\n/g, EOL) - EOF
Mutant 54 in utils.js: {
  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified
  if (Buffer.isBuffer(content)) content = content.toString('utf8');
  return content.replace(/^\uFEFF/, '');
} replaced with {}
Mutant 55 in utils.js: Buffer.isBuffer(content) replaced with true
Mutant 56 in utils.js: Buffer.isBuffer(content) replaced with false
Mutant 57 in utils.js: 'utf8' replaced with ""
Mutant 58 in utils.js: /^\uFEFF/ replaced with /\uFEFF/
Mutant 59 in utils.js: '' replaced with "Stryker was here!"
Mutant 60 in utils.js: {
  stringify,
  stripBom
} replaced with {}
[32m13:05:58 (2232) INFO Instrumenter[39m Instrumented 2 source file(s) with 61 mutant(s)
[32m13:05:58 (2232) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m13:05:59 (2232) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m13:05:59 (2232) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m13:06:00 (2232) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 853 ms, overhead 1 ms).
Mutation testing 3% (elapsed: <1m, remaining: ~4m) 2/61 tested (1 survived, 1 timed out)
Mutation testing 6% (elapsed: <1m, remaining: ~4m) 4/61 tested (1 survived, 3 timed out)
Mutation testing 8% (elapsed: <1m, remaining: ~5m) 5/61 tested (1 survived, 3 timed out)
Mutation testing 11% (elapsed: <1m, remaining: ~5m) 7/61 tested (1 survived, 4 timed out)
Mutation testing 16% (elapsed: <1m, remaining: ~4m) 10/61 tested (2 survived, 5 timed out)
Mutation testing 18% (elapsed: ~1m, remaining: ~4m) 11/61 tested (2 survived, 6 timed out)
Mutation testing 21% (elapsed: ~1m, remaining: ~4m) 13/61 tested (2 survived, 7 timed out)
Mutation testing 24% (elapsed: ~1m, remaining: ~4m) 15/61 tested (2 survived, 9 timed out)
Mutation testing 27% (elapsed: ~1m, remaining: ~3m) 17/61 tested (2 survived, 10 timed out)
Mutation testing 29% (elapsed: ~1m, remaining: ~3m) 18/61 tested (2 survived, 11 timed out)
Mutation testing 32% (elapsed: ~1m, remaining: ~3m) 20/61 tested (2 survived, 13 timed out)
Mutation testing 47% (elapsed: ~2m, remaining: ~2m) 29/61 tested (3 survived, 13 timed out)
Mutation testing 65% (elapsed: ~2m, remaining: ~1m) 40/61 tested (3 survived, 13 timed out)
Mutation testing 67% (elapsed: ~2m, remaining: ~1m) 41/61 tested (3 survived, 14 timed out)
Mutation testing 70% (elapsed: ~2m, remaining: ~1m) 43/61 tested (3 survived, 16 timed out)
Mutation testing 80% (elapsed: ~2m, remaining: <1m) 49/61 tested (3 survived, 17 timed out)
Mutation testing 81% (elapsed: ~2m, remaining: <1m) 50/61 tested (3 survived, 18 timed out)
Mutation testing 86% (elapsed: ~3m, remaining: <1m) 53/61 tested (3 survived, 20 timed out)
Mutation testing 88% (elapsed: ~3m, remaining: <1m) 54/61 tested (3 survived, 21 timed out)
Mutation testing 93% (elapsed: ~3m, remaining: <1m) 57/61 tested (4 survived, 23 timed out)
Mutation testing 98% (elapsed: ~3m, remaining: <1m) 60/61 tested (5 survived, 24 timed out)

All tests
  âœ“ All tests (killed 31)

[Survived] BlockStatement
index.js:4:13
-   } catch (_) {
-     _fs = require('fs')
-   }
+   } catch (_) {}

[Survived] ObjectLiteral
index.js:12:15
-       options = { encoding: options }
+       options = {}

[Survived] ObjectLiteral
index.js:42:15
-       options = { encoding: options }
+       options = {}

[Survived] ConditionalExpression
utils.js:10:7
-     if (Buffer.isBuffer(content)) content = content.toString('utf8')
+     if (true) content = content.toString('utf8')

[Survived] Regex
utils.js:11:26
-     return content.replace(/^\uFEFF/, '')
+     return content.replace(/\uFEFF/, '')

Ran 0.59 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   91.80 |       31 |        25 |          5 |        0 |        0 |
 index.js |   93.88 |       29 |        17 |          3 |        0 |        0 |
 utils.js |   83.33 |        2 |         8 |          2 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m13:09:36 (2232) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/node-jsonfile/reports/mutation/mutation.html
[32m13:09:36 (2232) INFO MutationTestExecutor[39m Done in 3 minutes 38 seconds.

real	3m40.167s
user	0m36.084s
sys	0m7.477s
