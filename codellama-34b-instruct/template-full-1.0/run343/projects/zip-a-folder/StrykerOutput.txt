*** using precomputed mutations ***
[32m00:15:42 (2435) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m00:15:42 (2435) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m00:15:43 (2435) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/zip-a-folder/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m00:15:43 (2435) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m00:15:43 (2435) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m00:15:43 (2435) INFO ProjectReader[39m Found 1 of 231 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 94 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in ZipAFolder.ts: ZipAFolder.compress replaced with ZipAFolder.zip
Mutant 1 in ZipAFolder.ts: {
  src,
  targetFilePath: tarFilePath,
  format: 'tar',
  zipAFolderOptions
} replaced with {
  src,
  targetFilePath: zipFilePath,
  format: 'zip',
  zipAFolderOptions
}
Mutant 2 in ZipAFolder.ts: {
  src,
  targetFilePath: tarFilePath,
  format: 'tar',
  zipAFolderOptions
} replaced with {
  src,
  targetFilePath: tarFilePath,
  format: 'tar',
  zipAFolderOptions: {
    compression: COMPRESSION_LEVEL.uncompressed
  }
}
Mutant 3 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with zipAFolderOptions.compression === COMPRESSION_LEVEL.medium
Mutant 4 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with !zipAFolderOptions.compression
Mutant 5 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with zipAFolderOptions["compression"] === COMPRESSION_LEVEL.high
Mutant 6 in ZipAFolder.ts: !zipAFolderOptions?.customWriteStream && targetFilePath replaced with false && targetFilePath
Mutant 7 in ZipAFolder.ts: !zipAFolderOptions?.customWriteStream && targetFilePath replaced with null && targetFilePath
Mutant 8 in ZipAFolder.ts: !zipAFolderOptions?.customWriteStream && targetFilePath replaced with undefined && targetFilePath
Mutant 9 in ZipAFolder.ts: path.dirname replaced with path.basename
Mutant 10 in ZipAFolder.ts: targetFilePath replaced with "SOME_RANDOM_STRING"
Mutant 11 in ZipAFolder.ts: targetFilePath replaced with targetFilePath + ".txt"
Mutant 12 in ZipAFolder.ts: targetFilePath replaced with targetFilePath.toString() + " BUGS"
Mutant 13 in ZipAFolder.ts: targetBasePath === src replaced with src !== targetBasePath
Mutant 14 in ZipAFolder.ts: targetBasePath === src replaced with targetBasePath !== src
Mutant 15 in ZipAFolder.ts: src replaced with src.split(',')
Mutant 16 in ZipAFolder.ts: src replaced with src[0]
Mutant 17 in ZipAFolder.ts: src replaced with src.toLowerCase()
Mutant 18 in ZipAFolder.ts: fs.promises.access replaced with fs.promises.read
Mutant 19 in ZipAFolder.ts: fs.promises.access replaced with fs.accessSync
Mutant 20 in ZipAFolder.ts: src replaced with src + '1'
Mutant 21 in ZipAFolder.ts: src replaced with src['1']
Mutant 22 in ZipAFolder.ts: src replaced with src + 1
Mutant 23 in ZipAFolder.ts: fs.constants.R_OK replaced with fs.constants.W_OK
Mutant 24 in ZipAFolder.ts: fs.constants.R_OK replaced with fs.constants.X_OK
Mutant 25 in ZipAFolder.ts: fs.constants.R_OK replaced with fs.constants.F_OK
Mutant 26 in ZipAFolder.ts: fs.promises.access(targetBasePath, fs.constants.R_OK | fs.constants.W_OK) replaced with fs.promises.access(targetBasePath, fs.constants.R_OK)
Mutant 27 in ZipAFolder.ts: fs.promises.access(targetBasePath, fs.constants.R_OK | fs.constants.W_OK) replaced with fs.promises.access(targetBasePath, fs.constants.W_OK)
Mutant 28 in ZipAFolder.ts: fs.promises.access(targetBasePath, fs.constants.R_OK | fs.constants.W_OK) replaced with fs.promises.access(path.dirname(src), fs.constants.W_OK)
Mutant 29 in ZipAFolder.ts: fs.promises.access replaced with fs.accessSync
Mutant 30 in ZipAFolder.ts: fs.promises.access replaced with fs.constants.W_OK
Mutant 31 in ZipAFolder.ts: targetBasePath replaced with targetBasePath.toUpperCase()
Mutant 32 in ZipAFolder.ts: targetBasePath replaced with targetBasePath.length + 1
Mutant 33 in ZipAFolder.ts: targetBasePath replaced with path.dirname(targetFilePath)
Mutant 34 in ZipAFolder.ts: fs.constants.R_OK | fs.constants.W_OK replaced with fs.constants.R_OK & fs.constants.W_OK
Mutant 35 in ZipAFolder.ts: fs.constants.R_OK | fs.constants.W_OK replaced with fs.constants.R_OK && fs.constants.W_OK
Mutant 36 in ZipAFolder.ts: targetFilePath replaced with null
Mutant 37 in ZipAFolder.ts: targetFilePath replaced with undefined
Mutant 38 in ZipAFolder.ts: targetFilePath replaced with '/path/to/file'
Mutant 39 in ZipAFolder.ts: zipAFolderOptions && zipAFolderOptions.customWriteStream replaced with zipAFolderOptions !== null && zipAFolderOptions.customWriteStream
Mutant 40 in ZipAFolder.ts: zipAFolderOptions && zipAFolderOptions.customWriteStream replaced with typeof zipAFolderOptions !== 'undefined' && zipAFolderOptions.customWriteStream
Mutant 41 in ZipAFolder.ts: zipAFolderOptions && zipAFolderOptions.customWriteStream replaced with zipAFolderOptions?.customWriteStream
Mutant 42 in ZipAFolder.ts: archiver(format, archiverOptions || {}) replaced with archiver(null, {})
Mutant 43 in ZipAFolder.ts: archiver(format, archiverOptions || {}) replaced with archiver(format, {
  gzip: false
})
Mutant 44 in ZipAFolder.ts: archiver(format, archiverOptions || {}) replaced with archiver(size, archiverOptions || {})
Mutant 45 in ZipAFolder.ts: archiverOptions || {} replaced with archiverOptions || {
  gzip: true
}
Mutant 46 in ZipAFolder.ts: archiverOptions || {} replaced with archiverOptions.gzip
Mutant 47 in ZipAFolder.ts: archiverOptions || {} replaced with archiverOptions?.gzip
Mutant 48 in ZipAFolder.ts: output.on('close', resolve) replaced with output.on('open', resolve)
Mutant 49 in ZipAFolder.ts: output.on('close', resolve) replaced with output.on('error', reject)
Mutant 50 in ZipAFolder.ts: output.on('close', resolve) replaced with output.on('finish', resolve)
Mutant 51 in ZipAFolder.ts: 'close' replaced with 'error'
Mutant 52 in ZipAFolder.ts: 'close' replaced with 'end'
Mutant 53 in ZipAFolder.ts: 'close' replaced with 'finish'
Mutant 54 in ZipAFolder.ts: resolve replaced with reject
Mutant 55 in ZipAFolder.ts: resolve replaced with resolve('foo')
Mutant 56 in ZipAFolder.ts: resolve replaced with resolve(new Error('foo'))
Mutant 57 in ZipAFolder.ts: output.on('error', reject) replaced with output.on('error', resolve)
Mutant 58 in ZipAFolder.ts: output.on('error', reject) replaced with output.on('close', reject)
Mutant 59 in ZipAFolder.ts: output.on('error', reject) replaced with output.on('error', null)
Mutant 60 in ZipAFolder.ts: output.on replaced with output.off
Mutant 61 in ZipAFolder.ts: output.on replaced with zipArchive.on
Mutant 62 in ZipAFolder.ts: 'error' replaced with 'end'
Mutant 63 in ZipAFolder.ts: 'error' replaced with undefined
Mutant 64 in ZipAFolder.ts: reject replaced with console.error
Mutant 65 in ZipAFolder.ts: isGlob(src) replaced with src === isGlob
Mutant 66 in ZipAFolder.ts: isGlob(src) replaced with !isGlob(src)
Mutant 67 in ZipAFolder.ts: isGlob(src) replaced with isGlob(src) === false
Mutant 68 in ZipAFolder.ts: isGlob replaced with isNotGlob
Mutant 69 in ZipAFolder.ts: isGlob replaced with glob.isGlob
Mutant 70 in ZipAFolder.ts: isGlob replaced with glob.isNotGlob
Mutant 71 in ZipAFolder.ts: src replaced with src + ''
Mutant 72 in ZipAFolder.ts: src replaced with src - ''
Mutant 73 in ZipAFolder.ts: src replaced with src * ''
Mutant 74 in ZipAFolder.ts: src.split replaced with src.substr
Mutant 75 in ZipAFolder.ts: src.split replaced with src.replace
Mutant 76 in ZipAFolder.ts: src.split replaced with src.includes
not replacing src.split with src.substr
not replacing src.split with src.substr
not replacing src.split with src.replace
not replacing src.split with src.replace
not replacing src.split with src.includes
not replacing src.split with src.includes
Mutant 77 in ZipAFolder.ts: zipArchive.glob replaced with zipArchive.append
Mutant 78 in ZipAFolder.ts: zipArchive.glob replaced with zipArchive.file
Mutant 79 in ZipAFolder.ts: zipArchive.glob replaced with zipArchive.directory
Mutant 80 in ZipAFolder.ts: globPart replaced with globPart.substring(1)
Mutant 81 in ZipAFolder.ts: globPart replaced with globPart.indexOf('/')
Mutant 82 in ZipAFolder.ts: zipArchive.directory(src, false) replaced with zipArchive.directory(src, true)
Mutant 83 in ZipAFolder.ts: zipArchive.directory(src, false) replaced with zipArchive.directory(path.resolve(src))
Mutant 84 in ZipAFolder.ts: zipArchive.directory(src, false) replaced with zipArchive.directory(__dirname)
Mutant 85 in ZipAFolder.ts: zipArchive.directory replaced with zipArchive.file
Mutant 86 in ZipAFolder.ts: zipArchive.directory replaced with zipArchive.dir
Mutant 87 in ZipAFolder.ts: zipArchive.directory replaced with zipArchive['directory']
Mutant 88 in ZipAFolder.ts: src replaced with null
Mutant 89 in ZipAFolder.ts: src replaced with 1
Mutant 90 in ZipAFolder.ts: src replaced with 'hello'
Mutant 91 in ZipAFolder.ts: false replaced with true
Mutant 92 in ZipAFolder.ts: false replaced with !hasUnsupportedFiles
Mutant 93 in ZipAFolder.ts: false replaced with hasUnsupportedFiles == false
[32m00:15:43 (2435) INFO Instrumenter[39m Instrumented 1 source file(s) with 94 mutant(s)
[32m00:15:44 (2435) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m00:15:45 (2435) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m00:15:45 (2435) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m00:15:51 (2435) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6326 ms, overhead 1 ms).
Mutation testing 2% (elapsed: <1m, remaining: ~7m) 2/94 tested (0 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~10m) 3/94 tested (1 survived, 0 timed out)
Mutation testing 5% (elapsed: <1m, remaining: ~8m) 5/94 tested (1 survived, 0 timed out)
Mutation testing 8% (elapsed: <1m, remaining: ~7m) 8/94 tested (1 survived, 0 timed out)
Mutation testing 10% (elapsed: <1m, remaining: ~7m) 10/94 tested (1 survived, 0 timed out)
Mutation testing 12% (elapsed: ~1m, remaining: ~6m) 12/94 tested (2 survived, 0 timed out)
Mutation testing 13% (elapsed: ~1m, remaining: ~7m) 13/94 tested (3 survived, 0 timed out)
Mutation testing 14% (elapsed: ~1m, remaining: ~7m) 14/94 tested (3 survived, 1 timed out)
Mutation testing 14% (elapsed: ~1m, remaining: ~8m) 14/94 tested (3 survived, 1 timed out)
Mutation testing 15% (elapsed: ~1m, remaining: ~8m) 15/94 tested (3 survived, 2 timed out)
Mutation testing 17% (elapsed: ~1m, remaining: ~8m) 16/94 tested (3 survived, 3 timed out)
Mutation testing 17% (elapsed: ~2m, remaining: ~9m) 16/94 tested (3 survived, 3 timed out)
Mutation testing 18% (elapsed: ~2m, remaining: ~9m) 17/94 tested (3 survived, 4 timed out)
Mutation testing 19% (elapsed: ~2m, remaining: ~9m) 18/94 tested (3 survived, 5 timed out)
Mutation testing 20% (elapsed: ~2m, remaining: ~9m) 19/94 tested (3 survived, 6 timed out)
Mutation testing 20% (elapsed: ~2m, remaining: ~10m) 19/94 tested (3 survived, 6 timed out)
Mutation testing 21% (elapsed: ~2m, remaining: ~10m) 20/94 tested (3 survived, 7 timed out)
Mutation testing 22% (elapsed: ~3m, remaining: ~10m) 21/94 tested (3 survived, 8 timed out)
Mutation testing 22% (elapsed: ~3m, remaining: ~11m) 21/94 tested (3 survived, 8 timed out)
Mutation testing 23% (elapsed: ~3m, remaining: ~10m) 22/94 tested (3 survived, 9 timed out)
Mutation testing 24% (elapsed: ~3m, remaining: ~10m) 23/94 tested (3 survived, 10 timed out)
Mutation testing 24% (elapsed: ~3m, remaining: ~11m) 23/94 tested (3 survived, 10 timed out)
Mutation testing 25% (elapsed: ~3m, remaining: ~11m) 24/94 tested (3 survived, 11 timed out)
Mutation testing 26% (elapsed: ~4m, remaining: ~11m) 25/94 tested (3 survived, 12 timed out)
Mutation testing 26% (elapsed: ~4m, remaining: ~11m) 25/94 tested (3 survived, 12 timed out)
Mutation testing 27% (elapsed: ~4m, remaining: ~11m) 26/94 tested (3 survived, 13 timed out)
Mutation testing 28% (elapsed: ~4m, remaining: ~11m) 27/94 tested (3 survived, 14 timed out)
Mutation testing 28% (elapsed: ~4m, remaining: ~11m) 27/94 tested (3 survived, 14 timed out)
Mutation testing 29% (elapsed: ~4m, remaining: ~11m) 28/94 tested (3 survived, 15 timed out)
Mutation testing 30% (elapsed: ~5m, remaining: ~11m) 29/94 tested (3 survived, 16 timed out)
Mutation testing 31% (elapsed: ~5m, remaining: ~11m) 30/94 tested (3 survived, 17 timed out)
Mutation testing 31% (elapsed: ~5m, remaining: ~11m) 30/94 tested (3 survived, 17 timed out)
Mutation testing 32% (elapsed: ~5m, remaining: ~11m) 31/94 tested (3 survived, 18 timed out)
Mutation testing 34% (elapsed: ~5m, remaining: ~10m) 32/94 tested (3 survived, 19 timed out)
Mutation testing 34% (elapsed: ~5m, remaining: ~11m) 32/94 tested (3 survived, 19 timed out)
Mutation testing 35% (elapsed: ~6m, remaining: ~11m) 33/94 tested (3 survived, 20 timed out)
Mutation testing 36% (elapsed: ~6m, remaining: ~10m) 34/94 tested (3 survived, 21 timed out)
Mutation testing 36% (elapsed: ~6m, remaining: ~11m) 34/94 tested (3 survived, 21 timed out)
Mutation testing 37% (elapsed: ~6m, remaining: ~10m) 35/94 tested (3 survived, 22 timed out)
Mutation testing 38% (elapsed: ~6m, remaining: ~10m) 36/94 tested (3 survived, 23 timed out)
Mutation testing 38% (elapsed: ~6m, remaining: ~11m) 36/94 tested (3 survived, 23 timed out)
Mutation testing 39% (elapsed: ~7m, remaining: ~10m) 37/94 tested (3 survived, 24 timed out)
Mutation testing 40% (elapsed: ~7m, remaining: ~10m) 38/94 tested (3 survived, 25 timed out)
Mutation testing 40% (elapsed: ~7m, remaining: ~10m) 38/94 tested (3 survived, 25 timed out)
Mutation testing 41% (elapsed: ~7m, remaining: ~10m) 39/94 tested (3 survived, 26 timed out)
Mutation testing 42% (elapsed: ~7m, remaining: ~10m) 40/94 tested (3 survived, 27 timed out)
Mutation testing 43% (elapsed: ~7m, remaining: ~10m) 41/94 tested (3 survived, 28 timed out)
Mutation testing 43% (elapsed: ~8m, remaining: ~10m) 41/94 tested (3 survived, 28 timed out)
Mutation testing 45% (elapsed: ~8m, remaining: ~9m) 43/94 tested (3 survived, 29 timed out)
Mutation testing 45% (elapsed: ~8m, remaining: ~9m) 43/94 tested (3 survived, 29 timed out)
Mutation testing 47% (elapsed: ~8m, remaining: ~9m) 45/94 tested (3 survived, 30 timed out)
Mutation testing 48% (elapsed: ~8m, remaining: ~9m) 46/94 tested (3 survived, 31 timed out)
Mutation testing 48% (elapsed: ~8m, remaining: ~9m) 46/94 tested (3 survived, 31 timed out)
Mutation testing 50% (elapsed: ~9m, remaining: ~9m) 47/94 tested (3 survived, 32 timed out)
Mutation testing 51% (elapsed: ~9m, remaining: ~8m) 48/94 tested (3 survived, 33 timed out)
Mutation testing 52% (elapsed: ~9m, remaining: ~8m) 49/94 tested (3 survived, 33 timed out)
Mutation testing 53% (elapsed: ~9m, remaining: ~8m) 50/94 tested (3 survived, 34 timed out)
Mutation testing 53% (elapsed: ~9m, remaining: ~8m) 50/94 tested (3 survived, 34 timed out)
Mutation testing 54% (elapsed: ~9m, remaining: ~8m) 51/94 tested (3 survived, 35 timed out)
Mutation testing 55% (elapsed: ~10m, remaining: ~8m) 52/94 tested (3 survived, 36 timed out)
Mutation testing 55% (elapsed: ~10m, remaining: ~8m) 52/94 tested (3 survived, 36 timed out)
Mutation testing 56% (elapsed: ~10m, remaining: ~7m) 53/94 tested (3 survived, 37 timed out)
Mutation testing 57% (elapsed: ~10m, remaining: ~7m) 54/94 tested (3 survived, 38 timed out)
Mutation testing 58% (elapsed: ~10m, remaining: ~7m) 55/94 tested (3 survived, 39 timed out)
Mutation testing 60% (elapsed: ~10m, remaining: ~7m) 57/94 tested (3 survived, 39 timed out)
Mutation testing 61% (elapsed: ~11m, remaining: ~6m) 58/94 tested (3 survived, 40 timed out)
Mutation testing 61% (elapsed: ~11m, remaining: ~6m) 58/94 tested (3 survived, 40 timed out)
Mutation testing 63% (elapsed: ~11m, remaining: ~6m) 60/94 tested (3 survived, 41 timed out)
Mutation testing 63% (elapsed: ~11m, remaining: ~6m) 60/94 tested (3 survived, 41 timed out)
Mutation testing 64% (elapsed: ~11m, remaining: ~6m) 61/94 tested (3 survived, 42 timed out)
Mutation testing 65% (elapsed: ~11m, remaining: ~6m) 62/94 tested (3 survived, 43 timed out)
Mutation testing 65% (elapsed: ~12m, remaining: ~6m) 62/94 tested (3 survived, 43 timed out)
Mutation testing 67% (elapsed: ~12m, remaining: ~5m) 63/94 tested (3 survived, 44 timed out)
Mutation testing 68% (elapsed: ~12m, remaining: ~5m) 64/94 tested (3 survived, 45 timed out)
Mutation testing 68% (elapsed: ~12m, remaining: ~5m) 64/94 tested (3 survived, 45 timed out)
Mutation testing 69% (elapsed: ~12m, remaining: ~5m) 65/94 tested (3 survived, 46 timed out)
Mutation testing 71% (elapsed: ~12m, remaining: ~5m) 67/94 tested (3 survived, 47 timed out)
Mutation testing 74% (elapsed: ~13m, remaining: ~4m) 70/94 tested (3 survived, 47 timed out)
Mutation testing 75% (elapsed: ~13m, remaining: ~4m) 71/94 tested (3 survived, 47 timed out)
Mutation testing 76% (elapsed: ~13m, remaining: ~4m) 72/94 tested (3 survived, 48 timed out)
Mutation testing 76% (elapsed: ~13m, remaining: ~4m) 72/94 tested (3 survived, 48 timed out)
Mutation testing 77% (elapsed: ~13m, remaining: ~3m) 73/94 tested (3 survived, 49 timed out)
Mutation testing 78% (elapsed: ~13m, remaining: ~3m) 74/94 tested (3 survived, 50 timed out)
Mutation testing 79% (elapsed: ~14m, remaining: ~3m) 75/94 tested (3 survived, 51 timed out)
Mutation testing 79% (elapsed: ~14m, remaining: ~3m) 75/94 tested (3 survived, 51 timed out)
Mutation testing 80% (elapsed: ~14m, remaining: ~3m) 76/94 tested (3 survived, 52 timed out)
Mutation testing 81% (elapsed: ~14m, remaining: ~3m) 77/94 tested (3 survived, 53 timed out)
Mutation testing 81% (elapsed: ~14m, remaining: ~3m) 77/94 tested (3 survived, 53 timed out)
Mutation testing 82% (elapsed: ~14m, remaining: ~3m) 78/94 tested (3 survived, 54 timed out)
Mutation testing 84% (elapsed: ~15m, remaining: ~2m) 79/94 tested (3 survived, 55 timed out)
Mutation testing 84% (elapsed: ~15m, remaining: ~2m) 79/94 tested (3 survived, 55 timed out)
Mutation testing 85% (elapsed: ~15m, remaining: ~2m) 80/94 tested (3 survived, 56 timed out)
Mutation testing 86% (elapsed: ~15m, remaining: ~2m) 81/94 tested (3 survived, 57 timed out)
Mutation testing 86% (elapsed: ~15m, remaining: ~2m) 81/94 tested (3 survived, 57 timed out)
Mutation testing 87% (elapsed: ~15m, remaining: ~2m) 82/94 tested (3 survived, 58 timed out)
Mutation testing 88% (elapsed: ~16m, remaining: ~2m) 83/94 tested (3 survived, 59 timed out)
Mutation testing 88% (elapsed: ~16m, remaining: ~2m) 83/94 tested (3 survived, 59 timed out)
Mutation testing 91% (elapsed: ~16m, remaining: ~1m) 86/94 tested (4 survived, 60 timed out)
Mutation testing 92% (elapsed: ~16m, remaining: ~1m) 87/94 tested (4 survived, 60 timed out)
Mutation testing 94% (elapsed: ~16m, remaining: <1m) 89/94 tested (4 survived, 61 timed out)
Mutation testing 96% (elapsed: ~16m, remaining: <1m) 91/94 tested (4 survived, 61 timed out)
Mutation testing 96% (elapsed: ~17m, remaining: <1m) 91/94 tested (4 survived, 61 timed out)

All tests
  ✓ All tests (killed 28)

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:41:39
-               await ZipAFolder.compress({src, targetFilePath: tarFilePath, format: 'tar', zipAFolderOptions});
+               await ZipAFolder.compress({
+     src,
+     targetFilePath: tarFilePath,
+     format: 'tar',
+     zipAFolderOptions: {
+       compression: COMPRESSION_LEVEL.uncompressed
+     }
+   });

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:115:57
-               const targetBasePath: string = path.dirname(targetFilePath);
+               const targetBasePath: string = path.dirname(targetFilePath + ".txt");

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:115:57
-               const targetBasePath: string = path.dirname(targetFilePath);
+               const targetBasePath: string = path.dirname(targetFilePath.toString() + " BUGS");

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:148:17
-                   zipArchive.directory(src, false);
+                   zipArchive.directory(__dirname);

Ran 0.34 tests per mutant on average.
---------------|---------|----------|-----------|------------|----------|----------|
File           | % score | # killed | # timeout | # survived | # no cov | # errors |
---------------|---------|----------|-----------|------------|----------|----------|
All files      |   95.74 |       28 |        62 |          4 |        0 |        0 |
 ZipAFolder.ts |   95.74 |       28 |        62 |          4 |        0 |        0 |
---------------|---------|----------|-----------|------------|----------|----------|
[32m00:32:59 (2435) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/zip-a-folder/reports/mutation/mutation.html
[32m00:32:59 (2435) INFO MutationTestExecutor[39m Done in 17 minutes 16 seconds.

real	17m18.215s
user	3m2.709s
sys	0m21.717s
