[
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 28,
    "startColumn": 8,
    "endLine": 28,
    "endColumn": 25,
    "originalCode": "val === undefined",
    "replacement": "this._data.has(key)",
    "promptId": 3,
    "completionId": 2,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 31,
    "startColumn": 26,
    "endLine": 31,
    "endColumn": 29,
    "originalCode": "val",
    "replacement": "JSON.stringify(val)",
    "promptId": 8,
    "completionId": 7,
    "reason": "call/arg1"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 31,
    "startColumn": 6,
    "endLine": 31,
    "endColumn": 30,
    "originalCode": "this._data.set(key, val)",
    "replacement": "this._data.set(val)",
    "promptId": 9,
    "completionId": 8,
    "reason": "call/allArgs"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 33,
    "startColumn": 8,
    "endLine": 33,
    "endColumn": 17,
    "originalCode": "this.path",
    "replacement": "this._queue.size > 0",
    "promptId": 10,
    "completionId": 9,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 35,
    "startColumn": 10,
    "endLine": 35,
    "endColumn": 12,
    "originalCode": "cb",
    "replacement": "cbs.length === 0",
    "promptId": 13,
    "completionId": 12,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 36,
    "startColumn": 6,
    "endLine": 36,
    "endColumn": 31,
    "originalCode": "this._queue.set(key, cbs)",
    "replacement": "this._queue.set(cbs)",
    "promptId": 19,
    "completionId": 18,
    "reason": "call/allArgs"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 39,
    "startColumn": 31,
    "endLine": 39,
    "endColumn": 33,
    "originalCode": "cb",
    "replacement": "this._data.has(key)",
    "promptId": 24,
    "completionId": 23,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 39,
    "startColumn": 51,
    "endLine": 39,
    "endColumn": 58,
    "originalCode": "'drain'",
    "replacement": "'set'",
    "promptId": 28,
    "completionId": 27,
    "reason": "call/arg0"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 62,
    "startColumn": 18,
    "endLine": 62,
    "endColumn": 27,
    "originalCode": "undefined",
    "replacement": "null",
    "promptId": 33,
    "completionId": 32,
    "reason": "call/arg1"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 62,
    "startColumn": 29,
    "endLine": 62,
    "endColumn": 31,
    "originalCode": "cb",
    "replacement": "() => {\n  if (cb) cb();\n  this.emit('drain');\n}",
    "promptId": 34,
    "completionId": 33,
    "reason": "call/arg2"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 69,
    "startColumn": 29,
    "endLine": 69,
    "endColumn": 39,
    "originalCode": "this._data",
    "replacement": "this._data.entries()",
    "promptId": 37,
    "completionId": 36,
    "reason": "for-of/right"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 70,
    "startColumn": 10,
    "endLine": 70,
    "endColumn": 22,
    "originalCode": "fn(key, val)",
    "replacement": "fn(key)",
    "promptId": 43,
    "completionId": 42,
    "reason": "call/allArgs"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 80,
    "startColumn": 18,
    "endLine": 80,
    "endColumn": 40,
    "originalCode": "updater(this.get(key))",
    "replacement": "this._data.get(key)",
    "promptId": 46,
    "completionId": 45,
    "reason": "call/arg1"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 80,
    "startColumn": 4,
    "endLine": 80,
    "endColumn": 45,
    "originalCode": "this.set(key, updater(this.get(key)), cb)",
    "replacement": "this.set(key)",
    "promptId": 48,
    "completionId": 47,
    "reason": "call/allArgs"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 88,
    "startColumn": 6,
    "endLine": 88,
    "endColumn": 44,
    "originalCode": "this.once('drain', () => this.close())",
    "replacement": "this.once('drain')",
    "promptId": 57,
    "completionId": 56,
    "reason": "call/allArgs"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 91,
    "startColumn": 8,
    "endLine": 91,
    "endColumn": 24,
    "originalCode": "this._readStream",
    "replacement": "this._readStream.destroyed",
    "promptId": 60,
    "completionId": 59,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 92,
    "startColumn": 8,
    "endLine": 92,
    "endColumn": 25,
    "originalCode": "this._writeStream",
    "replacement": "this._writeStream.end",
    "promptId": 63,
    "completionId": 62,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 99,
    "startColumn": 8,
    "endLine": 99,
    "endColumn": 18,
    "originalCode": "!this.path",
    "replacement": "this._readStream.readable",
    "promptId": 68,
    "completionId": 67,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 101,
    "startColumn": 8,
    "endLine": 101,
    "endColumn": 28,
    "originalCode": "this.emit('load', 0)",
    "replacement": "this.emit('load')",
    "promptId": 72,
    "completionId": 71,
    "reason": "call/allArgs"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 114,
    "startColumn": 12,
    "endLine": 114,
    "endColumn": 32,
    "originalCode": "this.emit('load', 0)",
    "replacement": "this.emit('load')",
    "promptId": 77,
    "completionId": 76,
    "reason": "call/allArgs"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 118,
    "startColumn": 10,
    "endLine": 118,
    "endColumn": 33,
    "originalCode": "this.emit('error', err)",
    "replacement": "this.emit('error')",
    "promptId": 81,
    "completionId": 80,
    "reason": "call/allArgs"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 122,
    "startColumn": 14,
    "endLine": 122,
    "endColumn": 44,
    "originalCode": "chunk.lastIndexOf('\\n') === -1",
    "replacement": "buffer.length === 0",
    "promptId": 82,
    "completionId": 81,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 126,
    "startColumn": 16,
    "endLine": 126,
    "endColumn": 23,
    "originalCode": "!rowStr",
    "replacement": "row.key !== undefined",
    "promptId": 89,
    "completionId": 88,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 127,
    "startColumn": 33,
    "endLine": 127,
    "endColumn": 92,
    "originalCode": "new Error('Empty lines never appear in a healthy database')",
    "replacement": "new Error(`Could not load corrupted row: ${rowStr}`)",
    "promptId": 92,
    "completionId": 91,
    "reason": "call/arg1"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 127,
    "startColumn": 14,
    "endLine": 127,
    "endColumn": 93,
    "originalCode": "this.emit('error', new Error('Empty lines never appear in a healthy database'))",
    "replacement": "this.emit('error')",
    "promptId": 93,
    "completionId": 92,
    "reason": "call/allArgs"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 134,
    "startColumn": 18,
    "endLine": 134,
    "endColumn": 33,
    "originalCode": "!('key' in row)",
    "replacement": "row.val !== undefined",
    "promptId": 96,
    "completionId": 95,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 138,
    "startColumn": 33,
    "endLine": 138,
    "endColumn": 85,
    "originalCode": "new Error(`Could not load corrupted row: ${rowStr}`)",
    "replacement": "new Error(`Invalid row: ${rowStr}`)",
    "promptId": 99,
    "completionId": 98,
    "reason": "call/arg1"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 138,
    "startColumn": 14,
    "endLine": 138,
    "endColumn": 86,
    "originalCode": "this.emit('error', new Error(`Could not load corrupted row: ${rowStr}`))",
    "replacement": "this.emit('error')",
    "promptId": 100,
    "completionId": 99,
    "reason": "call/allArgs"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 143,
    "startColumn": 32,
    "endLine": 143,
    "endColumn": 39,
    "originalCode": "row.key",
    "replacement": "key",
    "promptId": 103,
    "completionId": 102,
    "reason": "call/arg0"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 145,
    "startColumn": 14,
    "endLine": 145,
    "endColumn": 46,
    "originalCode": "this._data.set(row.key, row.val)",
    "replacement": "this._data.set(row.key)",
    "promptId": 107,
    "completionId": 106,
    "reason": "call/allArgs"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 151,
    "startColumn": 14,
    "endLine": 151,
    "endColumn": 27,
    "originalCode": "buffer.length",
    "replacement": "buffer.length > 0",
    "promptId": 108,
    "completionId": 107,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 152,
    "startColumn": 31,
    "endLine": 152,
    "endColumn": 89,
    "originalCode": "new Error(`Corrupted row at the end of the db: ${buffer}`)",
    "replacement": "new Error(`Could not load corrupted row: ${buffer.length}`)",
    "promptId": 111,
    "completionId": 110,
    "reason": "call/arg1"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 152,
    "startColumn": 12,
    "endLine": 152,
    "endColumn": 90,
    "originalCode": "this.emit('error', new Error(`Corrupted row at the end of the db: ${buffer}`))",
    "replacement": "this.emit('error')",
    "promptId": 112,
    "completionId": 111,
    "reason": "call/allArgs"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 154,
    "startColumn": 10,
    "endLine": 154,
    "endColumn": 44,
    "originalCode": "this.emit('load', this._data.size)",
    "replacement": "this.emit('load')",
    "promptId": 116,
    "completionId": 115,
    "reason": "call/allArgs"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 158,
    "startColumn": 20,
    "endLine": 158,
    "endColumn": 32,
    "originalCode": "'read_close'",
    "replacement": "'close'",
    "promptId": 118,
    "completionId": 117,
    "reason": "call/arg0"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 169,
    "startColumn": 12,
    "endLine": 169,
    "endColumn": 37,
    "originalCode": "this._inFlightWrites <= 0",
    "replacement": "this._queue.size === 0",
    "promptId": 120,
    "completionId": 119,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 182,
    "startColumn": 8,
    "endLine": 182,
    "endColumn": 47,
    "originalCode": "!this._queue.size || this._waitForDrain",
    "replacement": "this._queue.size > 0",
    "promptId": 127,
    "completionId": 126,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 184,
    "startColumn": 29,
    "endLine": 184,
    "endColumn": 40,
    "originalCode": "this._queue",
    "replacement": "this._queue.entries()",
    "promptId": 131,
    "completionId": 130,
    "reason": "for-of/right"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 186,
    "startColumn": 37,
    "endLine": 186,
    "endColumn": 68,
    "originalCode": "{key, val: this._data.get(key)}",
    "replacement": "{ key: key, val: this._data.get(key) }",
    "promptId": 136,
    "completionId": 135,
    "reason": "call/arg0"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 189,
    "startColumn": 12,
    "endLine": 189,
    "endColumn": 38,
    "originalCode": "!cbs.length && err != null",
    "replacement": "err.code === 'ENOENT'",
    "promptId": 139,
    "completionId": 138,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 189,
    "startColumn": 40,
    "endLine": 189,
    "endColumn": 63,
    "originalCode": "this.emit('error', err)",
    "replacement": "this.emit('error')",
    "promptId": 143,
    "completionId": 142,
    "reason": "call/allArgs"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 190,
    "startColumn": 12,
    "endLine": 190,
    "endColumn": 62,
    "originalCode": "--this._inFlightWrites <= 0 && !this._waitForDrain",
    "replacement": "this._inFlightWrites <= 0",
    "promptId": 144,
    "completionId": 143,
    "reason": "if/test"
  },
  {
    "file": "lib/dirty/dirty.js",
    "startLine": 193,
    "startColumn": 10,
    "endLine": 193,
    "endColumn": 28,
    "originalCode": "this._waitForDrain",
    "replacement": "this._queue.size === 0",
    "promptId": 152,
    "completionId": 151,
    "reason": "if/test"
  }
]