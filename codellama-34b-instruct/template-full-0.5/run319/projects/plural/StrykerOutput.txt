*** using precomputed mutations ***
[32m12:11:17 (2572) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m12:11:17 (2572) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m12:11:18 (2572) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m12:11:18 (2572) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m12:11:18 (2572) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m12:11:18 (2572) INFO ProjectReader[39m Found 1 of 632 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 285 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.5/mutants.json ***
Mutant 0 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(-8, -1)
Mutant 1 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(8, 1)
Mutant 2 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(8, 0)
Mutant 3 in index.js: obj replaced with obj.toString()
Mutant 4 in index.js: obj replaced with obj.valueOf()
Mutant 5 in index.js: obj replaced with obj.hasOwnProperty('toString')
Mutant 6 in index.js: 8 replaced with 7
Mutant 7 in index.js: 8 replaced with 9
Mutant 8 in index.js: 8 replaced with "hello"
Mutant 9 in index.js: -1 replaced with -2
Mutant 10 in index.js: -1 replaced with +1
Mutant 11 in index.js: -1 replaced with 0
Mutant 12 in index.js: rules.unshift replaced with rules.push
Mutant 13 in index.js: rules.unshift replaced with rules.pop
Mutant 14 in index.js: [match, result] replaced with [result, match]
Mutant 15 in index.js: [match, result] replaced with [match, result + 1]
Mutant 16 in index.js: [match, result] replaced with [match, result * 2]
Mutant 17 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 2) + 'ies';
})
Mutant 18 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|quy$/
Mutant 19 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|quy$/g
Mutant 20 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'ies';
}
Mutant 21 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(1, w.length - 1) + 'ies';
}
Mutant 22 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 's';
}
Mutant 23 in index.js: w.substr(0, w.length - 1) replaced with w.substr(w.length - 2)
Mutant 24 in index.js: w.substr(0, w.length - 1) replaced with w.substr(w.length - 3)
Mutant 25 in index.js: w.substr(0, w.length - 1) replaced with w.substr(w.length - 4)
Mutant 26 in index.js: w.substr replaced with w.substring
Mutant 27 in index.js: w.substr replaced with w.slice
Mutant 28 in index.js: w.substr replaced with w.match
Mutant 29 in index.js: 0 replaced with -1
Mutant 30 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|s$/i, function (w) {
  return w + 's';
})
Mutant 31 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|s$/
Mutant 32 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|s$/g
Mutant 33 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 's';
}
Mutant 34 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 'ies';
}
Mutant 35 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 'xes';
}
Mutant 36 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'e';
})
Mutant 37 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /nucleus|syllabus|focus|fungus|cactus|newword/i
Mutant 38 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /nucleus|syllabus|focus|fungus|cactus|newword/g
Mutant 39 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'es';
}
Mutant 40 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'us';
}
Mutant 41 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 's';
}
Mutant 42 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1)
Mutant 43 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 3)
Mutant 44 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 5)
Mutant 45 in index.js: w.substr replaced with w.substring
Mutant 46 in index.js: w.substr replaced with w.slice
Mutant 47 in index.js: w.substr replaced with w.split
Mutant 48 in index.js: 0 replaced with 1
Mutant 49 in index.js: 0 replaced with -1
Mutant 50 in index.js: 0 replaced with word.length - 2
Mutant 51 in index.js: w.length - 2 replaced with w.length - 1
Mutant 52 in index.js: w.length - 2 replaced with w.length + 1
Mutant 53 in index.js: w.length - 2 replaced with w.length * 2
Mutant 54 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 1) + 'es';
})
Mutant 55 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'eses';
})
Mutant 56 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 3) + 'eses';
})
Mutant 57 in index.js: /thesis|crisis/i replaced with /thesis|crises/i
Mutant 58 in index.js: /thesis|crisis/i replaced with /thesis|crisis|thesis/i
Mutant 59 in index.js: /thesis|crisis/i replaced with /thesis|crisis|crises/i
Mutant 60 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'es';
}
Mutant 61 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(1, w.length - 2) + 'es';
}
Mutant 62 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 3)
Mutant 63 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 5)
Mutant 64 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 7)
Mutant 65 in index.js: w.substr replaced with w.slice
Mutant 66 in index.js: w.substr replaced with w.substring
Mutant 67 in index.js: w.length - 2 replaced with w.length + 1
Mutant 68 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 1) + 'ices';
})
Mutant 69 in index.js: /appendix|index/i replaced with /appendix|index|quiz/i
Mutant 70 in index.js: /appendix|index/i replaced with /appendix|index|[a-z]+/i
Mutant 71 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 3) + 'ices';
}
Mutant 72 in index.js: w.substr(0, w.length - 2) replaced with w.substr(1, w.length - 1)
Mutant 73 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1, w.length - 2)
Mutant 74 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1, w.length - 3)
Mutant 75 in index.js: w.substr replaced with w.substring
Mutant 76 in index.js: w.substr replaced with w.slice
Mutant 77 in index.js: 0 replaced with -1
Mutant 78 in index.js: 0 replaced with "hello"
Mutant 79 in index.js: w.length - 2 replaced with w.length + 1
Mutant 80 in index.js: w.length - 2 replaced with w.length * 2
Mutant 81 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
})
Mutant 82 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[aeiouy]o$/i, function (w) {
  return w + 'es';
})
Mutant 83 in index.js: /[aeiouy]o$/i replaced with /[^aeiouy]o$/i
Mutant 84 in index.js: /[aeiouy]o$/i replaced with /[^aeiouy]o$/g
Mutant 85 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'es';
}
Mutant 86 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'ies';
}
Mutant 87 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'es' + w;
}
Mutant 88 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 's';
})
Mutant 89 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'ies';
})
Mutant 90 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'y';
})
Mutant 91 in index.js: /[^aeiouy]o$/i replaced with /[^aeiouy]o$/
Mutant 92 in index.js: /[^aeiouy]o$/i replaced with /[^aeiouy]o$/g
Mutant 93 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 's';
}
Mutant 94 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 'e';
}
Mutant 95 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}
Mutant 96 in index.js: w === 'dwarf' || w === 'roof' replaced with w !== 'dwarf' && w !== 'roof'
Mutant 97 in index.js: w === 'dwarf' || w === 'roof' replaced with w !== 'dwarf' || w !== 'roof'
Mutant 98 in index.js: w === 'dwarf' || w === 'roof' replaced with w !== 'dwarf' && w !== 'roof' && w !== 'quy'
Mutant 99 in index.js: w.replace(regex, 'ves') replaced with w.replace(w.replace(/e$/, 'ves'))
Mutant 100 in index.js: regex replaced with w.replace(regex, 'ves')
Mutant 101 in index.js: regex replaced with w.replace(regex.exec(w)[0], 'ves')
Mutant 102 in index.js: 'ves' replaced with 's'
Mutant 103 in index.js: 'ves' replaced with 'es'
Mutant 104 in index.js: 'ves' replaced with 'i'
Mutant 105 in index.js: addRule('criterion', 'criteria') replaced with addRule('criterion', 'criterions')
Mutant 106 in index.js: addRule('criterion', 'criteria') replaced with addRule('criterion', 'criterion')
Mutant 107 in index.js: 'criterion' replaced with 'criteria'
Mutant 108 in index.js: 'criterion' replaced with 'criteriona'
Mutant 109 in index.js: 'criterion' replaced with 'criterion' + 's'
Mutant 110 in index.js: 'criteria' replaced with 'criterion'
Mutant 111 in index.js: 'criteria' replaced with 'criterions'
Mutant 112 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', 'bacterium')
Mutant 113 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', function (w) {
  return w + 's';
})
Mutant 114 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', function (w) {
  return w + 'es';
})
Mutant 115 in index.js: 'bacterium' replaced with 'bacteria'
Mutant 116 in index.js: 'bacteria' replaced with 'bacterium'
Mutant 117 in index.js: addRule('memo', 'memos') replaced with addRule('memo', 'memo')
Mutant 118 in index.js: addRule('memo', 'memos') replaced with addRule('memo', function (w) {
  return w + 's';
})
Mutant 119 in index.js: addRule('memo', 'memos') replaced with addRule('memo', function (w) {
  return w.substr(0, w.length - 1) + 'os';
})
Mutant 120 in index.js: 'memo' replaced with 'memos'
Mutant 121 in index.js: 'memos' replaced with 'memo'
Mutant 122 in index.js: 'memos' replaced with 'memorandum'
Mutant 123 in index.js: addRule('cello', 'cellos') replaced with addRule('cellos', 'cellos')
Mutant 124 in index.js: 'cello' replaced with 'cell'
Mutant 125 in index.js: 'cello' replaced with 'cello' + 's'
Mutant 126 in index.js: 'cello' replaced with 'cell' + 'os'
Mutant 127 in index.js: 'cellos' replaced with 'cello'
Mutant 128 in index.js: 'cellos' replaced with 'cello' + 's'
Mutant 129 in index.js: 'cellos' replaced with 'cello' + 'es'
Mutant 130 in index.js: addRule('die', 'dice') replaced with addRule('die', 'dice', 'dies')
Mutant 131 in index.js: addRule('die', 'dice') replaced with addRule('die', 'dice', 'die')
Mutant 132 in index.js: 'die' replaced with 'dice'
Mutant 133 in index.js: 'die' replaced with 'die' + 's'
Mutant 134 in index.js: 'die' replaced with 'dice' + 's'
Mutant 135 in index.js: 'dice' replaced with 'die'
Mutant 136 in index.js: 'dice' replaced with 'dies'
Mutant 137 in index.js: 'goose' replaced with 'goose' + 's'
Mutant 138 in index.js: 'goose' replaced with 'geese' + 's'
Mutant 139 in index.js: 'goose' replaced with 'goose' + 'es'
Mutant 140 in index.js: 'geese' replaced with 'goose'
Mutant 141 in index.js: 'geese' replaced with 'gooses'
Mutant 142 in index.js: 'geese' replaced with 'gese'
Mutant 143 in index.js: addRule('mouse', 'mice') replaced with addRule('mouse', 'mouses')
Mutant 144 in index.js: addRule('mouse', 'mice') replaced with addRule('mice', 'mice')
Mutant 145 in index.js: addRule('mouse', 'mice') replaced with addRule('monkey', 'monkeys')
Mutant 146 in index.js: 'mouse' replaced with 'mice'
Mutant 147 in index.js: 'mouse' replaced with 'mouses'
Mutant 148 in index.js: 'mouse' replaced with 'mous'
Mutant 149 in index.js: 'mice' replaced with 'mouses'
Mutant 150 in index.js: 'mice' replaced with 'mouse'
Mutant 151 in index.js: 'mice' replaced with 'mous'
Mutant 152 in index.js: addRule('person', 'people') replaced with addRule('person', 'peoples')
Mutant 153 in index.js: addRule('person', 'people') replaced with addRule('person', 'persons')
Mutant 154 in index.js: addRule('person', 'people') replaced with addRule('person', 'individuals')
Mutant 155 in index.js: 'person' replaced with 'people'
Mutant 156 in index.js: 'person' replaced with 'persons'
Mutant 157 in index.js: 'person' replaced with 'peoples'
Mutant 158 in index.js: 'people' replaced with 'person'
Mutant 159 in index.js: 'people' replaced with 'persons'
Mutant 160 in index.js: 'people' replaced with 'peoples'
Mutant 161 in index.js: addRule('chilli', 'chillies') replaced with addRule('chili', 'chillis')
Mutant 162 in index.js: addRule('chilli', 'chillies') replaced with addRule('chill', 'chillies')
Mutant 163 in index.js: 'chilli' replaced with 'chili'
Mutant 164 in index.js: 'chilli' replaced with 'chillies'
Mutant 165 in index.js: 'chillies' replaced with 'chilli'
Mutant 166 in index.js: 'chillies' replaced with 'chillies' + 's'
Mutant 167 in index.js: 'chillies' replaced with 'chillis'
Mutant 168 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/e/, 'a');
})
Mutant 169 in index.js: /^(?:wo)?man$/i replaced with /^(?:wo)?ma$/i
Mutant 170 in index.js: /^(?:wo)?man$/i replaced with /^(?:wo)?man$/g
Mutant 171 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/a/, 'b');
}
Mutant 172 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/a/, 'a' + 'b');
}
Mutant 173 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/a/, 'a' + 'e');
}
Mutant 174 in index.js: w.replace(/a/, 'e') replaced with w.replace(/a/, 'f')
Mutant 175 in index.js: w.replace(/a/, 'e') replaced with w.replace(/a/, 'g')
Mutant 176 in index.js: /a/ replaced with /b/
Mutant 177 in index.js: /a/ replaced with /a+/
Mutant 178 in index.js: /a/ replaced with /[^a]/
Mutant 179 in index.js: 'e' replaced with 'o'
Mutant 180 in index.js: 'e' replaced with 'u'
Mutant 181 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/bison|cod|deer|fowl|halibut|moose|sheep/i, function (w) {
  return w.substr(0, w.length - 1) + 'es';
})
Mutant 182 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/bison|cod|deer|fowl|halibut|moose|sheep/i, function (w) {
  return w.substr(0, w.length - 1) + 's';
})
Mutant 183 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/g
Mutant 184 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/gi
Mutant 185 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 's';
}
Mutant 186 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 1);
}
Mutant 187 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 188 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'))
Mutant 189 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'g')
Mutant 190 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes.concat(games).concat(illnesses).concat(misc))
Mutant 191 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes.concat(games).concat(illnesses).concat(misc).reverse())
Mutant 192 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes.concat(games).concat(illnesses).concat(misc).sort())
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes.concat(games).concat(illnesses).concat(misc))
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes.concat(games).concat(illnesses).concat(misc).reverse())
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes.concat(games).concat(illnesses).concat(misc).sort())
Mutant 193 in index.js: clothes replaced with clothes.length
Mutant 194 in index.js: clothes replaced with clothes[0]
Mutant 195 in index.js: clothes replaced with clothes.concat("new cloth")
Mutant 196 in index.js: games replaced with function () {
  return 'games';
}
Mutant 197 in index.js: games replaced with function (w) {
  return w.substr(0, w.length - 1) + 'i';
}
Mutant 198 in index.js: games replaced with function (w) {
  return w.substr(0, w.length - 1) + 'es';
}
Mutant 199 in index.js: illnesses replaced with illnesses.concat(["new illness"])
Mutant 200 in index.js: illnesses replaced with illnesses.pop()
Mutant 201 in index.js: illnesses replaced with illnesses.shift()
Mutant 202 in index.js: misc replaced with misc.concat(clothes, games, illnesses, 'foo')
Mutant 203 in index.js: misc replaced with misc.length
Mutant 204 in index.js: misc replaced with misc.toUpperCase()
Mutant 205 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 206 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(1);
}
Mutant 207 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 's' + w;
}
Mutant 208 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/g, function (w) {
  return w.toLowerCase();
})
Mutant 209 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/i, function (w) {
  return w.slice(0, -3) + 'ices';
})
Mutant 210 in index.js: /ics$/i replaced with /ic$/i
Mutant 211 in index.js: /ics$/i replaced with /ic\b/i
Mutant 212 in index.js: /ics$/i replaced with /ic(?!s)/i
Mutant 213 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 214 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.length;
}
Mutant 215 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.split('').reverse().join('');
}
Mutant 216 in index.js: addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/g, function (w) {
  return w.toUpperCase();
})
Mutant 217 in index.js: addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w.slice(0, -1);
})
Mutant 218 in index.js: /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i replaced with /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/g
Mutant 219 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 's';
}
Mutant 220 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.slice(0, -1);
}
Mutant 221 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.replace(/s$/, '');
}
Mutant 222 in index.js: num !== 1 || num === undefined replaced with num == 1 || num === undefined
Mutant 223 in index.js: num !== 1 || num === undefined replaced with num == 1 && num === undefined
Mutant 224 in index.js: num !== 1 || num === undefined replaced with num != 1 || num !== undefined
Mutant 225 in index.js: i < rules.length replaced with i <= rules.length
Mutant 226 in index.js: i < rules.length replaced with i > rules.length
Mutant 227 in index.js: i < rules.length replaced with i < rules.length - 1
Mutant 228 in index.js: i++ replaced with i--
Mutant 229 in index.js: i++ replaced with i += 2
Mutant 230 in index.js: i++ replaced with i = Math.random()
Mutant 231 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with rule[0].test(word)
Mutant 232 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with type(rule[0]) === 'RegExp'
Mutant 233 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with rule[0].test(word) && type(rule[0]) === 'RegExp'
Mutant 234 in index.js: type replaced with word.length
Mutant 235 in index.js: rule[0] replaced with rule[1]
Mutant 236 in index.js: rule[0] replaced with rules[0]
Mutant 237 in index.js: rule[0] replaced with rules.length
Mutant 238 in index.js: rule[0].test replaced with rule[0].match
Mutant 239 in index.js: rule[0].test replaced with rule[0].search
Mutant 240 in index.js: rule[0].test replaced with rule[0].exec
Mutant 241 in index.js: word replaced with word.toUpperCase()
Mutant 242 in index.js: word replaced with word.length
Mutant 243 in index.js: word replaced with word[0]
Mutant 244 in index.js: rule[1] replaced with rule[0]
Mutant 245 in index.js: rule[1] replaced with rule[1](word)
Mutant 246 in index.js: rule[1] replaced with rule[1](word, rule[0])
Mutant 247 in index.js: rule[1](word, rule[0]) replaced with rule[1](word, rule[1])
Mutant 248 in index.js: rule[1](word, rule[0]) replaced with rule[1](word, rule[2])
Mutant 249 in index.js: rule[1](word, rule[0]) replaced with rule[1](word, rule[3])
Mutant 250 in index.js: word replaced with word.substring(1)
Mutant 251 in index.js: word replaced with word.toUpperCase()
Mutant 252 in index.js: word replaced with word.length
Mutant 253 in index.js: rule[0] replaced with rule[1]
Mutant 254 in index.js: rule[0] replaced with rules.length
Mutant 255 in index.js: rule[0] replaced with Math.random()
Mutant 256 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with rule[0] === word
Mutant 257 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with type(rule[0]) === 'String' && rule[0].includes(word)
Mutant 258 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with type(rule[0]) === 'String' && rule[0].startsWith(word)
Mutant 259 in index.js: type replaced with word.constructor.name
Mutant 260 in index.js: rule[0] replaced with rule[1]
Mutant 261 in index.js: rule[0] replaced with rule[2]
Mutant 262 in index.js: rule[0] replaced with rules[i]
Mutant 263 in index.js: type replaced with w.constructor.name
Mutant 264 in index.js: rule[1] replaced with rule[0]
Mutant 265 in index.js: rule[1] replaced with rule[1] + 's'
Mutant 266 in index.js: rule[1] replaced with word.replace(rule[0], rule[1])
Mutant 267 in index.js: rule[1] replaced with rule[2]
Mutant 268 in index.js: rule[1] replaced with rule[0]
Mutant 269 in index.js: word replaced with w.slice(0, w.length - 1)
Mutant 270 in index.js: word replaced with w.slice(0, w.length - 2)
Mutant 271 in index.js: word replaced with w.slice(1, w.length - 1)
Mutant 272 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = function (num) {
  return num > 1 ? this + 's' : this;
}
Mutant 273 in index.js: plural(this, num) replaced with plural(null, num)
Mutant 274 in index.js: plural(this, num) replaced with plural(this, 0)
Mutant 275 in index.js: plural(this, num) replaced with plural("", num)
Mutant 276 in index.js: plural replaced with 'plurals'
Mutant 277 in index.js: plural replaced with 'singulars'
Mutant 278 in index.js: plural replaced with 'irregulars'
Mutant 279 in index.js: this replaced with null
Mutant 280 in index.js: this replaced with undefined
Mutant 281 in index.js: this replaced with 42
Mutant 282 in index.js: num replaced with num + 1
Mutant 283 in index.js: num replaced with num - 1
Mutant 284 in index.js: num replaced with num * 2
[32m12:11:18 (2572) INFO Instrumenter[39m Instrumented 1 source file(s) with 285 mutant(s)
[32m12:11:18 (2572) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m12:11:19 (2572) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m12:11:19 (2572) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m12:11:20 (2572) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 493 ms, overhead 1 ms).
Mutation testing 7% (elapsed: <1m, remaining: ~2m) 20/285 tested (1 survived, 0 timed out)
Mutation testing 14% (elapsed: <1m, remaining: ~2m) 40/285 tested (5 survived, 0 timed out)
Mutation testing 21% (elapsed: <1m, remaining: ~1m) 60/285 tested (9 survived, 0 timed out)
Mutation testing 28% (elapsed: <1m, remaining: ~1m) 80/285 tested (15 survived, 0 timed out)
Mutation testing 35% (elapsed: <1m, remaining: ~1m) 100/285 tested (20 survived, 0 timed out)
Mutation testing 41% (elapsed: ~1m, remaining: ~1m) 119/285 tested (26 survived, 0 timed out)
Mutation testing 48% (elapsed: ~1m, remaining: ~1m) 139/285 tested (36 survived, 0 timed out)
Mutation testing 55% (elapsed: ~1m, remaining: ~1m) 159/285 tested (36 survived, 0 timed out)
Mutation testing 62% (elapsed: ~1m, remaining: <1m) 179/285 tested (37 survived, 0 timed out)
Mutation testing 69% (elapsed: ~1m, remaining: <1m) 199/285 tested (41 survived, 0 timed out)
Mutation testing 76% (elapsed: ~1m, remaining: <1m) 219/285 tested (43 survived, 0 timed out)
Mutation testing 83% (elapsed: ~2m, remaining: <1m) 239/285 tested (46 survived, 0 timed out)
Mutation testing 90% (elapsed: ~2m, remaining: <1m) 259/285 tested (51 survived, 0 timed out)
Mutation testing 97% (elapsed: ~2m, remaining: <1m) 279/285 tested (64 survived, 0 timed out)

All tests
  ✓ All tests (killed 215)

[Survived] PrecomputedMutator
index.js:6:41
-     return Object.prototype.toString.call(obj).slice(8, -1)
+     return Object.prototype.toString.call(obj.valueOf()).slice(8, -1)

[Survived] PrecomputedMutator
index.js:16:50
-   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })
+   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substring(0, w.length - 1) + 'ies' })

[Survived] PrecomputedMutator
index.js:16:50
-   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })
+   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.slice(0, w.length - 1) + 'ies' })

[Survived] PrecomputedMutator
index.js:19:9
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$|s$/, function(w) { return w + 'es' })

[Survived] PrecomputedMutator
index.js:22:9
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus|newword/i, function(w) { return w.substr(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:71
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substring(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:71
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.slice(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis|thesis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis|crises/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:48
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.slice(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:48
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.substring(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:24:9
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index|quiz/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:49
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.substring(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:49
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.slice(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:58
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.substr("hello", w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:27:1
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiouy]o$/i, function (w) {
+     return w + 'es';
+   });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiouy]o$/i, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiouy]o$/g, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:28:9
-   addRule(/[^aeiouy]o$/i, function(w) { return w + 'es' });
+   addRule(/[^aeiouy]o$/, function(w) { return w + 'es' });

[Survived] PrecomputedMutator
index.js:28:9
-   addRule(/[^aeiouy]o$/i, function(w) { return w + 'es' });
+   addRule(/[^aeiouy]o$/g, function(w) { return w + 'es' });

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacterium')

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', function (w) {
+     return w + 's';
+   })

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', function (w) {
+     return w + 'es';
+   })

[Survived] PrecomputedMutator
index.js:40:9
-   addRule('bacterium', 'bacteria')
+   addRule('bacteria', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacterium')

[Survived] PrecomputedMutator
index.js:41:1
-   addRule('memo', 'memos')
+   addRule('memo', function (w) {
+     return w + 's';
+   })

[Survived] PrecomputedMutator
index.js:41:1
-   addRule('memo', 'memos')
+   addRule('memo', function (w) {
+     return w.substr(0, w.length - 1) + 'os';
+   })

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cellos', 'cellos')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cell', 'cellos')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cello' + 's', 'cellos')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cell' + 'os', 'cellos')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'cello')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'cello' + 's')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'cello' + 'es')

[Survived] PrecomputedMutator
index.js:43:1
-   addRule('die', 'dice')
+   addRule('die', 'dice', 'dies')

[Survived] PrecomputedMutator
index.js:43:1
-   addRule('die', 'dice')
+   addRule('die', 'dice', 'die')

[Survived] PrecomputedMutator
index.js:49:57
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a+/, 'e') })

[Survived] PrecomputedMutator
index.js:63:31
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes.concat(games).concat(illnesses).concat(misc)).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:31
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes.concat(games).concat(illnesses).concat(misc).reverse()).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:31
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes.concat(games).concat(illnesses).concat(misc).sort()).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:44
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes.concat("new cloth"), games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:60
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses.concat(["new illness"]), misc).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:71
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc.concat(clothes, games, illnesses, 'foo')).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:70:110
-   addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function(w) { return w })
+   addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
+     return w.replace(/s$/, '');
+   })

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num == 1 || num === undefined) {

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num != 1 || num !== undefined) {

[Survived] PrecomputedMutator
index.js:80:41
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (type(rule[0]) === 'RegExp' && rule[0].exec(word)) {

[Survived] PrecomputedMutator
index.js:80:54
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (type(rule[0]) === 'RegExp' && rule[0].test(word.toUpperCase())) {

[Survived] PrecomputedMutator
index.js:83:11
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (rule[0] === word) {

[Survived] PrecomputedMutator
index.js:83:11
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (type(rule[0]) === 'String' && rule[0].includes(word)) {

[Survived] PrecomputedMutator
index.js:83:11
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (type(rule[0]) === 'String' && rule[0].startsWith(word)) {

[Survived] PrecomputedMutator
index.js:83:16
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (type(rule[1]) === 'String' && rule[0] === word) {

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[0]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1] + 's') === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(word.replace(rule[0], rule[1])) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[2](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[0](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](w.slice(0, w.length - 1)) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](w.slice(0, w.length - 2)) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](w.slice(1, w.length - 1)) : rule[1]

[Survived] PrecomputedMutator
index.js:103:7
-     if (String.prototype.plural === undefined) {
+     if (String.prototype.plural = function (num) {
+     return num > 1 ? this + 's' : this;
+   }) {

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(null, num)

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(this, 0)

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural("", num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(null, num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(undefined, num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(42, num)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num + 1)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num - 1)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num * 2)

Ran 1.00 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   75.44 |      215 |         0 |         70 |        0 |        0 |
 index.js |   75.44 |      215 |         0 |         70 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m12:13:43 (2572) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/reports/mutation/mutation.html
[32m12:13:43 (2572) INFO MutationTestExecutor[39m Done in 2 minutes 25 seconds.

real	2m26.722s
user	2m33.726s
sys	0m26.917s
