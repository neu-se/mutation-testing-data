*** using precomputed mutations ***
[32m09:13:23 (2599) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m09:13:23 (2599) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m09:13:24 (2599) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/node-geo-point/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m09:13:24 (2599) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m09:13:24 (2599) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m09:13:24 (2599) INFO ProjectReader[39m Found 2 of 588 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 259 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in geo-point.ts: typeof latitude !== 'number' || typeof longitude !== 'number' replaced with latitude === NaN || longitude === NaN
Mutant 1 in geo-point.ts: typeof latitude !== 'number' || typeof longitude !== 'number' replaced with latitude !== null || longitude !== null
Mutant 2 in geo-point.ts: latitude < -90 || latitude > 90 replaced with latitude < -90 || latitude > 180
Mutant 3 in geo-point.ts: latitude < -90 || latitude > 90 replaced with longitude < -90 || longitude > 180
Mutant 4 in geo-point.ts: longitude < -180 || longitude > 180 replaced with longitude <= -180 || longitude >= 180
Mutant 5 in geo-point.ts: longitude < -180 || longitude > 180 replaced with longitude < -180 || longitude > 180 || longitude === 0
Mutant 6 in geo-point.ts: longitude < -180 || longitude > 180 replaced with longitude < -180 || longitude > 180 || Math.abs(longitude) > 180
Mutant 7 in geo-point.ts: !isObject(point) replaced with typeof point === 'object'
Mutant 8 in geo-point.ts: !isObject(point) replaced with point.hasOwnProperty('type')
Mutant 9 in geo-point.ts: !isObject(point) replaced with point instanceof Object
Mutant 10 in geo-point.ts: isObject replaced with isBoolean
Mutant 11 in geo-point.ts: point replaced with undefined
Mutant 12 in geo-point.ts: point replaced with true
Mutant 13 in geo-point.ts: point replaced with false
Mutant 14 in geo-point.ts: !point.hasOwnProperty('type') || !point.hasOwnProperty('coordinates') replaced with !!point.hasOwnProperty('type') || !!point.hasOwnProperty('coordinates')
Mutant 15 in geo-point.ts: !point.hasOwnProperty('type') || !point.hasOwnProperty('coordinates') replaced with point.hasOwnProperty('type') && point.hasOwnProperty('coordinates')
Mutant 16 in geo-point.ts: point.hasOwnProperty replaced with point.coordinates.hasOwnProperty
Mutant 17 in geo-point.ts: point.hasOwnProperty replaced with radius
Mutant 18 in geo-point.ts: point.hasOwnProperty replaced with point.coordinates[0] === undefined
Mutant 19 in geo-point.ts: point.hasOwnProperty replaced with point.coordinates.length !== 2
Mutant 20 in geo-point.ts: point.hasOwnProperty replaced with point.coordinates[1] !== point.coordinates[0]
Mutant 21 in geo-point.ts: 'coordinates' replaced with 'coordinates'[0]
Mutant 22 in geo-point.ts: 'coordinates' replaced with 'coordinates'[1]
Mutant 23 in geo-point.ts: 'coordinates' replaced with 'coordinates'[2]
Mutant 24 in geo-point.ts: point.type !== 'Point' replaced with !point.type || point.type === 'Point'
Mutant 25 in geo-point.ts: point.type !== 'Point' replaced with point.type === 'Point' || point.type === 'Point'
Mutant 26 in geo-point.ts: point.type !== 'Point' replaced with !point.type && point.coordinates.length === 2
Mutant 27 in geo-point.ts: !Array.isArray(point.coordinates) || point.coordinates.length !== 2 replaced with point.coordinates && point.coordinates[0]
Mutant 28 in geo-point.ts: !Array.isArray(point.coordinates) || point.coordinates.length !== 2 replaced with !point.coordinates || point.coordinates.length < 2
Mutant 29 in geo-point.ts: Array.isArray replaced with Math.abs
Mutant 30 in geo-point.ts: Array.isArray replaced with Number.isInteger
Mutant 31 in geo-point.ts: point.coordinates replaced with point.coordinates.reverse()
Mutant 32 in geo-point.ts: point.coordinates replaced with point.coordinates.slice(1)
Mutant 33 in geo-point.ts: point.coordinates replaced with Math.round(point.coordinates[0])
Mutant 34 in geo-point.ts: this.fromLngLatArray replaced with this.fromLatLngArray
Mutant 35 in geo-point.ts: this.fromLngLatArray replaced with this.fromGeJSON
Mutant 36 in geo-point.ts: this.fromLngLatArray replaced with null
Mutant 37 in geo-point.ts: point.coordinates replaced with point.coordinates.reverse()
Mutant 38 in geo-point.ts: point.coordinates replaced with point.coordinates.slice(1)
Mutant 39 in geo-point.ts: point.coordinates replaced with point.coordinates.concat([0])
Mutant 40 in geo-point.ts: !isObject(object) replaced with isObject(object)
Mutant 41 in geo-point.ts: !isObject(object) replaced with !object
Mutant 42 in geo-point.ts: !isObject(object) replaced with object.hasOwnProperty('type')
Mutant 43 in geo-point.ts: isObject replaced with isComparable
Mutant 44 in geo-point.ts: isObject replaced with value !== null
Mutant 45 in geo-point.ts: object replaced with object.getOwnPropertyNames()[0]
Mutant 46 in geo-point.ts: !object.hasOwnProperty('latitude') || !object.hasOwnProperty('longitude') replaced with object.hasOwnProperty('latitude') && object.hasOwnProperty('longitude')
Mutant 47 in geo-point.ts: !object.hasOwnProperty('latitude') || !object.hasOwnProperty('longitude') replaced with object.latitude === undefined || object.longitude === undefined
Mutant 48 in geo-point.ts: !object.hasOwnProperty('latitude') || !object.hasOwnProperty('longitude') replaced with object['latitude'] === undefined || object['longitude'] === undefined
Mutant 49 in geo-point.ts: 'latitude' replaced with 'someOtherProperty'
Mutant 50 in geo-point.ts: 'latitude' replaced with 'latitude' + 1
Mutant 51 in geo-point.ts: point1.latitude replaced with null
Mutant 52 in geo-point.ts: point1.latitude replaced with NaN
Mutant 53 in geo-point.ts: point1.latitude replaced with -1
Mutant 54 in geo-point.ts: point2.latitude replaced with point2.longitude
Mutant 55 in geo-point.ts: point2.latitude replaced with Math.random()
Mutant 56 in geo-point.ts: point2.latitude replaced with -point2.latitude
Mutant 57 in geo-point.ts: point2.longitude replaced with point1.longitude
Mutant 58 in geo-point.ts: point2.longitude replaced with point2.latitude
Mutant 59 in geo-point.ts: point2.longitude replaced with point1.latitude
Mutant 60 in geo-point.ts: deg2rad replaced with deg2rad + 90
Mutant 61 in geo-point.ts: deg2rad replaced with deg2rad - 90
Mutant 62 in geo-point.ts: cos replaced with Math.PI
Mutant 63 in geo-point.ts: cos replaced with Math.E
Mutant 64 in geo-point.ts: cos replaced with Math.SQRT2
Mutant 65 in geo-point.ts: point1Rad replaced with point2Rad
Mutant 66 in geo-point.ts: point1Rad replaced with point1Rad + point2Rad
Mutant 67 in geo-point.ts: point1Rad replaced with sin(point1Rad - point2Rad)
Mutant 68 in geo-point.ts: point2Rad replaced with point2Rad * 2
Mutant 69 in geo-point.ts: point2Rad replaced with point2Rad * -1
Mutant 70 in geo-point.ts: point2Rad replaced with point2Rad + Ï€
Mutant 71 in geo-point.ts: cos replaced with Math.sin
Mutant 72 in geo-point.ts: cos replaced with Math.tan
Mutant 73 in geo-point.ts: cos replaced with Math.atan
Mutant 74 in geo-point.ts: point1Rad replaced with point2Rad
Mutant 75 in geo-point.ts: point1Rad replaced with acos(r)
Mutant 76 in geo-point.ts: point1Rad replaced with atan2(b, c)
Mutant 77 in geo-point.ts: sin replaced with cos
Mutant 78 in geo-point.ts: sin replaced with tan
Mutant 79 in geo-point.ts: sin replaced with abs
Mutant 80 in geo-point.ts: point2Rad replaced with cos(point2Rad)
Mutant 81 in geo-point.ts: point2Rad replaced with sin(-point2Rad)
Mutant 82 in geo-point.ts: point2Rad replaced with tan(2 * point2Rad)
Mutant 83 in geo-point.ts: acos replaced with 1 - r
Mutant 84 in geo-point.ts: acos replaced with r + 0.1
Mutant 85 in geo-point.ts: acos replaced with 2 * r
Mutant 86 in geo-point.ts: r > 1 ? 1 : r replaced with r
Mutant 87 in geo-point.ts: r > 1 ? 1 : r replaced with 1 - r
Mutant 88 in geo-point.ts: point1.latitude replaced with null
Mutant 89 in geo-point.ts: point2.latitude replaced with point2.longitude
Mutant 90 in geo-point.ts: point2.latitude replaced with point1.latitude
Mutant 91 in geo-point.ts: point2.latitude replaced with point1.longitude
Mutant 92 in geo-point.ts: deg2rad replaced with deg2rad * 23
Mutant 93 in geo-point.ts: deg2rad replaced with rad2deg - 90
Mutant 94 in geo-point.ts: point2.longitude - point1.longitude replaced with point1.longitude - point2.longitude
Mutant 95 in geo-point.ts: point2.longitude - point1.longitude replaced with point2.latitude - point1.latitude
Mutant 96 in geo-point.ts: point2.longitude - point1.longitude replaced with point1.longitude + point2.longitude
Mutant 97 in geo-point.ts: Î”Î» replaced with Î¸ * Î”Î»
Mutant 98 in geo-point.ts: Î”Î» replaced with Î¸ + Î”Î»
Mutant 99 in geo-point.ts: Ï†2 replaced with Ï†1
Mutant 100 in geo-point.ts: Ï†2 replaced with Î»2
Mutant 101 in geo-point.ts: Ï†2 replaced with Math.atan2(Î»2, Ï†1)
Mutant 102 in geo-point.ts: cos replaced with sin
Mutant 103 in geo-point.ts: cos replaced with tan
Mutant 104 in geo-point.ts: cos replaced with log
Mutant 105 in geo-point.ts: Ï†2 replaced with Ï†1
Mutant 106 in geo-point.ts: Ï†2 replaced with Î»1
Mutant 107 in geo-point.ts: Ï†2 replaced with Math.random()
Mutant 108 in geo-point.ts: sin replaced with cos
Mutant 109 in geo-point.ts: sin replaced with acos
Mutant 110 in geo-point.ts: Ï†1 replaced with Ï†2
Mutant 111 in geo-point.ts: Ï†1 replaced with Î»2
Mutant 112 in geo-point.ts: Ï†1 replaced with distance
Mutant 113 in geo-point.ts: cos replaced with Math.sin
Mutant 114 in geo-point.ts: cos replaced with Math.PI
Mutant 115 in geo-point.ts: Ï†2 replaced with Ï†1
Mutant 116 in geo-point.ts: Ï†2 replaced with Î»1
Mutant 117 in geo-point.ts: Ï†2 replaced with Î»2
Mutant 118 in geo-point.ts: Î”Î» replaced with -Î”Î»
Mutant 119 in geo-point.ts: Î”Î» replaced with Î”Î» + Ï€
Mutant 120 in geo-point.ts: Î”Î» replaced with Î”Î» / 2
Mutant 121 in geo-point.ts: atan2(y, x) replaced with atan2(y)
Mutant 122 in geo-point.ts: atan2(y, x) replaced with atan2(x)
Mutant 123 in geo-point.ts: atan2(y, x) replaced with atan2(x * y)
Mutant 124 in geo-point.ts: y replaced with 0
Mutant 125 in geo-point.ts: y replaced with Math.PI
Mutant 126 in geo-point.ts: y replaced with 42
Mutant 127 in geo-point.ts: x replaced with 0
Mutant 128 in geo-point.ts: x replaced with -x
Mutant 129 in geo-point.ts: x replaced with cos(inthething(itheraces))
Mutant 130 in geo-point.ts: Î¸ replaced with Î¸ + Math.PI
Mutant 131 in geo-point.ts: Î¸ replaced with 2 * Î¸
Mutant 132 in geo-point.ts: Î¸ replaced with Î¸ - Math.PI
Mutant 133 in geo-point.ts: Number replaced with distance * 2
Mutant 134 in geo-point.ts: distance replaced with 2 * distance
Mutant 135 in geo-point.ts: distance replaced with distance - 1
Mutant 136 in geo-point.ts: distance replaced with random()
Mutant 137 in geo-point.ts: Number(bearing) replaced with bearing * 2
Mutant 138 in geo-point.ts: Number(bearing) replaced with bearing - 90
Mutant 139 in geo-point.ts: Number(bearing) replaced with bearing / 2
Mutant 140 in geo-point.ts: bearing replaced with distance
Mutant 141 in geo-point.ts: bearing replaced with Î¸ + 90
Mutant 142 in geo-point.ts: deg2rad replaced with deg2rad * 2
Mutant 143 in geo-point.ts: coordinate.latitude replaced with coordinate.longitude
Mutant 144 in geo-point.ts: coordinate.latitude replaced with coordinate.latitude + 10
Mutant 145 in geo-point.ts: coordinate.latitude replaced with deg2rad(0)
Mutant 146 in geo-point.ts: coordinate.longitude replaced with coordinate.latitude
Mutant 147 in geo-point.ts: coordinate.longitude replaced with coordinate.altitude
Mutant 148 in geo-point.ts: coordinate.longitude replaced with Math.abs(coordinate.latitude)
Mutant 149 in geo-point.ts: sin replaced with sinÏ†2 = cosÏ†1 * sinÎ´ * cosÎ¸
Mutant 150 in geo-point.ts: sin replaced with sinÏ†2 = sinÏ†1 * sinÎ´ * cosÎ¸
Mutant 151 in geo-point.ts: sin replaced with sinÏ†2 = cosÏ†1 * cosÎ´ * cosÎ¸
Mutant 152 in geo-point.ts: Ï†1 replaced with Ï†2
Mutant 153 in geo-point.ts: Ï†1 replaced with Ï†1 + Ï†2
Mutant 154 in geo-point.ts: Ï†1 replaced with Math.atan2(sinÏ†1, cosÏ†2)
Mutant 155 in geo-point.ts: Ï†1 replaced with Ï†2
Mutant 156 in geo-point.ts: Ï†1 replaced with Math.PI
Mutant 157 in geo-point.ts: Ï†1 replaced with Number.MAX_VALUE
Mutant 158 in geo-point.ts: sin replaced with sinÏ†1 * cosÎ´ + cosÏ†1 * sinÎ´ * cosÎ¸
Mutant 159 in geo-point.ts: sin replaced with cosÎ´ - sinÏ†1 * cosÎ¸
Mutant 160 in geo-point.ts: Î´ replaced with -cosÏ†1
Mutant 161 in geo-point.ts: Î´ replaced with -sinÏ†1
Mutant 162 in geo-point.ts: sin replaced with cos
Mutant 163 in geo-point.ts: sin replaced with tan
Mutant 164 in geo-point.ts: sin replaced with Ï€ - Î¸
Mutant 165 in geo-point.ts: Î¸ replaced with Î¸ + Math.PI
Mutant 166 in geo-point.ts: Î¸ replaced with 2 * Î¸
Mutant 167 in geo-point.ts: Î¸ replaced with Math.abs(Î¸)
Mutant 168 in geo-point.ts: cos replaced with sinÎ¸
Mutant 169 in geo-point.ts: cos replaced with 1 / cosÎ¸
Mutant 170 in geo-point.ts: Î¸ replaced with cosÎ¸
Mutant 171 in geo-point.ts: Î¸ replaced with sinÎ¸
Mutant 172 in geo-point.ts: Î¸ replaced with tanÎ¸
Mutant 173 in geo-point.ts: asin replaced with asgn
Mutant 174 in geo-point.ts: asin replaced with atan
Mutant 175 in geo-point.ts: asin replaced with acos
Mutant 176 in geo-point.ts: sinÏ†2 replaced with cosÏ†2
Mutant 177 in geo-point.ts: sinÏ†2 replaced with sin(Ï†2)
Mutant 178 in geo-point.ts: sinÏ†2 replaced with acos(sinÏ†2)
Mutant 179 in geo-point.ts: atan2(y, x) replaced with atan2(x, y)
Mutant 180 in geo-point.ts: atan2(y, x) replaced with atan2(y, x + 1)
Mutant 181 in geo-point.ts: atan2(y, x) replaced with atan2(x + y, x - y)
Mutant 182 in geo-point.ts: atan2 replaced with x * y
Mutant 183 in geo-point.ts: y replaced with y + 1
Mutant 184 in geo-point.ts: y replaced with x * Math.cos(Î¸)
Mutant 185 in geo-point.ts: Ï†2 replaced with Ï†1
Mutant 186 in geo-point.ts: Ï†2 replaced with Î»1
Mutant 187 in geo-point.ts: Ï†2 replaced with Math.random()
Mutant 188 in geo-point.ts: Î»2 replaced with Î»2 + 3.14
Mutant 189 in geo-point.ts: Î»2 replaced with -Î»2
Mutant 190 in geo-point.ts: Î»2 replaced with Î»2 * 2
Mutant 191 in geo-point.ts: (coordinate.longitude + 180) / 360 * Math.pow(2, zoom) replaced with (coordinate.longitude + 180) / 360 * Math.pow(2, zoom) + 1
Mutant 192 in geo-point.ts: (coordinate.longitude + 180) / 360 * Math.pow(2, zoom) replaced with (coordinate.longitude + 180) / 360 * Math.pow(2, zoom - 1)
Mutant 193 in geo-point.ts: (coordinate.longitude + 180) / 360 * Math.pow(2, zoom) replaced with (coordinate.longitude + 180) / 360 * Math.pow(2, zoom + 1)
Mutant 194 in geo-point.ts: Math.pow(2, zoom) replaced with Math.pow(Math.pow(2, zoom - 1))
Mutant 195 in geo-point.ts: Math.pow(2, zoom) replaced with Math.pow(zoom > 1 ? 2 : 1)
Mutant 196 in geo-point.ts: Math.pow(2, zoom) replaced with Math.pow((zoom + 1) % 2 === 0 ? 2 : 1)
Mutant 197 in geo-point.ts: zoom replaced with undefined
Mutant 198 in geo-point.ts: zoom replaced with null
Mutant 199 in geo-point.ts: Math.log replaced with Math.exp
Mutant 200 in geo-point.ts: Math.tan(coordinate.latitude * Math.PI / 180) + 1 / Math.cos(coordinate.latitude * Math.PI / 180) replaced with Math.sin(coordinate.latitude * Math.PI / 180) + 1 / Math.cos(coordinate.latitude * Math.PI / 180)
Mutant 201 in geo-point.ts: Math.tan(coordinate.latitude * Math.PI / 180) + 1 / Math.cos(coordinate.latitude * Math.PI / 180) replaced with Math.cos(coordinate.latitude * Math.PI / 180) + 1 / Math.sin(coordinate.latitude * Math.PI / 180)
Mutant 202 in geo-point.ts: Math.tan replaced with Math.asin
Mutant 203 in geo-point.ts: Math.tan replaced with Math.acos
Mutant 204 in geo-point.ts: Math.tan replaced with Math.atan2
Mutant 205 in geo-point.ts: coordinate.latitude * Math.PI / 180 replaced with coordinate.longitude * Math.PI / 180
Mutant 206 in geo-point.ts: coordinate.latitude * Math.PI / 180 replaced with coordinate.latitude * Math.PI / 180 + 1
Mutant 207 in geo-point.ts: coordinate.latitude * Math.PI / 180 replaced with coordinate.latitude * Math.PI / 180 * 0.99
Mutant 208 in geo-point.ts: Math.cos replaced with Math.acos
Mutant 209 in geo-point.ts: Math.cos replaced with Math.asin
Mutant 210 in geo-point.ts: coordinate.latitude * Math.PI / 180 replaced with coordinate.longitude * Math.PI / 180
Mutant 211 in geo-point.ts: coordinate.latitude * Math.PI / 180 replaced with coordinate.latitude * Math.PI / 2
Mutant 212 in geo-point.ts: GeoPoint.calculateDestination(this, distance, bearing) replaced with GeoPoint.calculateDestination(this, distance, bearing + 10)
Mutant 213 in geo-point.ts: GeoPoint.calculateDestination(this, distance, bearing) replaced with GeoPoint.calculateDestination(this, distance * 0.5, bearing)
Mutant 214 in geo-point.ts: GeoPoint.calculateDestination(this, distance, bearing) replaced with GeoPoint.calculateDestination(this, distance, bearing * -1)
Mutant 215 in geo-point.ts: this replaced with null
Mutant 216 in geo-point.ts: this replaced with new LatLng(0, 0)
Mutant 217 in geo-point.ts: this replaced with undefined
Mutant 218 in geo-point.ts: distance replaced with distance / 0
Mutant 219 in geo-point.ts: distance replaced with distance - 1
Mutant 220 in geo-point.ts: distance replaced with distance + 1
Mutant 221 in geo-point.ts: bearing replaced with Math.random()
Mutant 222 in geo-point.ts: bearing replaced with bearing + 90
Mutant 223 in geo-point.ts: bearing replaced with bearing * 2
Mutant 224 in geo-point.ts: GeoPoint.calculateBearing(this, point) replaced with GeoPoint.calculateBearing(null, point)
Mutant 225 in geo-point.ts: GeoPoint.calculateBearing(this, point) replaced with GeoPoint.calculateBearing(this, null)
Mutant 226 in geo-point.ts: GeoPoint.calculateBearing(this, point) replaced with GeoPoint.calculateBearing(5, point)
Mutant 227 in geo-point.ts: point replaced with coordinate2
Mutant 228 in geo-point.ts: point replaced with point.x + point.y
Mutant 229 in geo-point.ts: point replaced with point * 2
Mutant 230 in geo-point.ts: this replaced with this.radius * this.distance
Mutant 231 in geo-point.ts: this replaced with this.distance * Math.PI
Mutant 232 in geo-point.ts: point replaced with NaN
Mutant 233 in geo-point.ts: point replaced with point.toString()
Mutant 234 in geo-point.ts: point replaced with point.valueOf()
Mutant 235 in geo-point.ts: GeoPoint.toTile(this, zoom) replaced with GeoPoint.toTile(this)
Mutant 236 in geo-point.ts: GeoPoint.toTile(this, zoom) replaced with GeoPoint.toTile(zoom)
Mutant 237 in geo-point.ts: GeoPoint.toTile(this, zoom) replaced with GeoPoint.toTile(new Tile(zoom))
Mutant 238 in geo-point.ts: this replaced with null
Mutant 239 in geo-point.ts: this replaced with 0
Mutant 240 in geo-point.ts: this replaced with undefined
Mutant 241 in geo-point.ts: zoom replaced with -zoom
Mutant 242 in geo-point.ts: zoom replaced with zoom - 1
Mutant 243 in geo-point.ts: zoom replaced with undefined
Mutant 244 in geo-point.ts: parseFloat replaced with Math.round
Mutant 245 in geo-point.ts: parseFloat replaced with Number
Mutant 246 in geo-point.ts: parseFloat replaced with String
Mutant 247 in geo-point.ts: input.toFixed(precision) replaced with input.toPrecision(precision)
Mutant 248 in geo-point.ts: input.toFixed(precision) replaced with input.toFixed(Math.abs(precision))
Mutant 249 in geo-point.ts: input.toFixed(precision) replaced with input.toFixed(precision + 1)
Mutant 250 in geo-point.ts: precision replaced with Math.floor(precision)
Mutant 251 in geo-point.ts: precision replaced with Math.round(precision)
Mutant 252 in geo-point.ts: precision replaced with Math.ceil(precision)
Mutant 253 in geo-point.ts: this.latitude replaced with this.longitude
Mutant 254 in geo-point.ts: this.latitude replaced with this.latitude + Math.random()
Mutant 255 in geo-point.ts: this.latitude replaced with this.latitude * 2
Mutant 256 in geo-point.ts: this.longitude replaced with this.latitude
Mutant 257 in geo-point.ts: this.longitude replaced with this.longitude + 1
Mutant 258 in geo-point.ts: this.longitude replaced with this.longitude !== 0 ? this.longitude : this.latitude
[32m09:13:24 (2599) INFO Instrumenter[39m Instrumented 2 source file(s) with 259 mutant(s)
[32m09:13:25 (2599) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m09:13:26 (2599) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m09:13:26 (2599) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m09:13:30 (2599) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 4 seconds (net 4050 ms, overhead 1 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~14m) 3/259 tested (2 survived, 0 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~14m) 6/259 tested (4 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~13m) 9/259 tested (5 survived, 0 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~13m) 12/259 tested (5 survived, 0 timed out)
Mutation testing 5% (elapsed: <1m, remaining: ~13m) 15/259 tested (5 survived, 0 timed out)
Mutation testing 6% (elapsed: ~1m, remaining: ~13m) 18/259 tested (5 survived, 0 timed out)
Mutation testing 8% (elapsed: ~1m, remaining: ~13m) 21/259 tested (5 survived, 0 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~13m) 24/259 tested (5 survived, 0 timed out)
Mutation testing 10% (elapsed: ~1m, remaining: ~12m) 27/259 tested (6 survived, 0 timed out)
Mutation testing 11% (elapsed: ~1m, remaining: ~12m) 30/259 tested (7 survived, 0 timed out)
Mutation testing 13% (elapsed: ~1m, remaining: ~12m) 34/259 tested (8 survived, 0 timed out)
Mutation testing 14% (elapsed: ~2m, remaining: ~12m) 37/259 tested (8 survived, 0 timed out)
Mutation testing 15% (elapsed: ~2m, remaining: ~11m) 40/259 tested (9 survived, 0 timed out)
Mutation testing 16% (elapsed: ~2m, remaining: ~11m) 43/259 tested (11 survived, 0 timed out)
Mutation testing 17% (elapsed: ~2m, remaining: ~11m) 46/259 tested (11 survived, 0 timed out)
Mutation testing 18% (elapsed: ~2m, remaining: ~11m) 49/259 tested (13 survived, 0 timed out)
Mutation testing 20% (elapsed: ~2m, remaining: ~11m) 52/259 tested (13 survived, 0 timed out)
Mutation testing 21% (elapsed: ~3m, remaining: ~11m) 55/259 tested (13 survived, 0 timed out)
Mutation testing 22% (elapsed: ~3m, remaining: ~10m) 58/259 tested (13 survived, 0 timed out)
Mutation testing 23% (elapsed: ~3m, remaining: ~10m) 61/259 tested (13 survived, 0 timed out)
Mutation testing 24% (elapsed: ~3m, remaining: ~10m) 64/259 tested (13 survived, 0 timed out)
Mutation testing 26% (elapsed: ~3m, remaining: ~10m) 68/259 tested (13 survived, 0 timed out)
Mutation testing 27% (elapsed: ~3m, remaining: ~10m) 71/259 tested (14 survived, 0 timed out)
Mutation testing 28% (elapsed: ~4m, remaining: ~10m) 74/259 tested (14 survived, 0 timed out)
Mutation testing 29% (elapsed: ~4m, remaining: ~9m) 77/259 tested (14 survived, 0 timed out)
Mutation testing 30% (elapsed: ~4m, remaining: ~9m) 80/259 tested (14 survived, 0 timed out)
Mutation testing 32% (elapsed: ~4m, remaining: ~9m) 83/259 tested (14 survived, 0 timed out)
Mutation testing 33% (elapsed: ~4m, remaining: ~9m) 86/259 tested (14 survived, 0 timed out)
Mutation testing 34% (elapsed: ~4m, remaining: ~9m) 89/259 tested (15 survived, 0 timed out)
Mutation testing 35% (elapsed: ~5m, remaining: ~9m) 92/259 tested (15 survived, 0 timed out)
Mutation testing 36% (elapsed: ~5m, remaining: ~8m) 95/259 tested (15 survived, 0 timed out)
Mutation testing 37% (elapsed: ~5m, remaining: ~8m) 98/259 tested (15 survived, 0 timed out)
Mutation testing 39% (elapsed: ~5m, remaining: ~8m) 102/259 tested (16 survived, 0 timed out)
Mutation testing 40% (elapsed: ~5m, remaining: ~8m) 105/259 tested (16 survived, 0 timed out)
Mutation testing 41% (elapsed: ~5m, remaining: ~8m) 108/259 tested (16 survived, 0 timed out)
Mutation testing 42% (elapsed: ~6m, remaining: ~8m) 111/259 tested (16 survived, 0 timed out)
Mutation testing 44% (elapsed: ~6m, remaining: ~7m) 114/259 tested (16 survived, 0 timed out)
Mutation testing 45% (elapsed: ~6m, remaining: ~7m) 117/259 tested (17 survived, 0 timed out)
Mutation testing 46% (elapsed: ~6m, remaining: ~7m) 120/259 tested (18 survived, 0 timed out)
Mutation testing 47% (elapsed: ~6m, remaining: ~7m) 123/259 tested (18 survived, 0 timed out)
Mutation testing 48% (elapsed: ~6m, remaining: ~7m) 126/259 tested (18 survived, 0 timed out)
Mutation testing 49% (elapsed: ~7m, remaining: ~7m) 129/259 tested (18 survived, 0 timed out)
Mutation testing 51% (elapsed: ~7m, remaining: ~6m) 133/259 tested (18 survived, 0 timed out)
Mutation testing 52% (elapsed: ~7m, remaining: ~6m) 136/259 tested (20 survived, 0 timed out)
Mutation testing 53% (elapsed: ~7m, remaining: ~6m) 139/259 tested (21 survived, 0 timed out)
Mutation testing 54% (elapsed: ~7m, remaining: ~6m) 142/259 tested (22 survived, 0 timed out)
Mutation testing 55% (elapsed: ~7m, remaining: ~6m) 145/259 tested (22 survived, 0 timed out)
Mutation testing 57% (elapsed: ~8m, remaining: ~6m) 148/259 tested (22 survived, 0 timed out)
Mutation testing 58% (elapsed: ~8m, remaining: ~5m) 151/259 tested (22 survived, 0 timed out)
Mutation testing 59% (elapsed: ~8m, remaining: ~5m) 154/259 tested (22 survived, 0 timed out)
Mutation testing 60% (elapsed: ~8m, remaining: ~5m) 157/259 tested (23 survived, 0 timed out)
Mutation testing 61% (elapsed: ~8m, remaining: ~5m) 160/259 tested (24 survived, 0 timed out)
Mutation testing 63% (elapsed: ~8m, remaining: ~5m) 164/259 tested (24 survived, 0 timed out)
Mutation testing 64% (elapsed: ~9m, remaining: ~4m) 167/259 tested (26 survived, 0 timed out)
Mutation testing 65% (elapsed: ~9m, remaining: ~4m) 170/259 tested (27 survived, 0 timed out)
Mutation testing 66% (elapsed: ~9m, remaining: ~4m) 173/259 tested (28 survived, 0 timed out)
Mutation testing 67% (elapsed: ~9m, remaining: ~4m) 176/259 tested (28 survived, 0 timed out)
Mutation testing 69% (elapsed: ~9m, remaining: ~4m) 179/259 tested (28 survived, 0 timed out)
Mutation testing 70% (elapsed: ~9m, remaining: ~4m) 182/259 tested (29 survived, 0 timed out)
Mutation testing 71% (elapsed: ~10m, remaining: ~4m) 185/259 tested (29 survived, 0 timed out)
Mutation testing 72% (elapsed: ~10m, remaining: ~3m) 188/259 tested (30 survived, 0 timed out)
Mutation testing 73% (elapsed: ~10m, remaining: ~3m) 191/259 tested (32 survived, 0 timed out)
Mutation testing 75% (elapsed: ~10m, remaining: ~3m) 195/259 tested (32 survived, 0 timed out)
Mutation testing 76% (elapsed: ~10m, remaining: ~3m) 198/259 tested (32 survived, 0 timed out)
Mutation testing 77% (elapsed: ~10m, remaining: ~3m) 201/259 tested (32 survived, 0 timed out)
Mutation testing 78% (elapsed: ~11m, remaining: ~2m) 204/259 tested (32 survived, 0 timed out)
Mutation testing 79% (elapsed: ~11m, remaining: ~2m) 207/259 tested (32 survived, 0 timed out)
Mutation testing 81% (elapsed: ~11m, remaining: ~2m) 210/259 tested (32 survived, 0 timed out)
Mutation testing 82% (elapsed: ~11m, remaining: ~2m) 213/259 tested (32 survived, 0 timed out)
Mutation testing 83% (elapsed: ~11m, remaining: ~2m) 216/259 tested (34 survived, 0 timed out)
Mutation testing 84% (elapsed: ~11m, remaining: ~2m) 219/259 tested (34 survived, 0 timed out)
Mutation testing 85% (elapsed: ~12m, remaining: ~2m) 222/259 tested (36 survived, 0 timed out)
Mutation testing 87% (elapsed: ~12m, remaining: ~1m) 226/259 tested (39 survived, 0 timed out)
Mutation testing 88% (elapsed: ~12m, remaining: ~1m) 229/259 tested (42 survived, 0 timed out)
Mutation testing 89% (elapsed: ~12m, remaining: ~1m) 232/259 tested (45 survived, 0 timed out)
Mutation testing 90% (elapsed: ~12m, remaining: ~1m) 235/259 tested (48 survived, 0 timed out)
Mutation testing 91% (elapsed: ~12m, remaining: ~1m) 238/259 tested (48 survived, 0 timed out)
Mutation testing 93% (elapsed: ~13m, remaining: <1m) 241/259 tested (48 survived, 0 timed out)
Mutation testing 94% (elapsed: ~13m, remaining: <1m) 244/259 tested (48 survived, 0 timed out)
Mutation testing 95% (elapsed: ~13m, remaining: <1m) 247/259 tested (49 survived, 0 timed out)
Mutation testing 96% (elapsed: ~13m, remaining: <1m) 250/259 tested (50 survived, 0 timed out)
Mutation testing 98% (elapsed: ~13m, remaining: <1m) 254/259 tested (53 survived, 0 timed out)
Mutation testing 99% (elapsed: ~13m, remaining: <1m) 257/259 tested (53 survived, 0 timed out)

All tests
  âœ“ All tests (killed 205)

[Survived] PrecomputedMutator
src/geo-point.ts:38:9
-       if (typeof latitude !== 'number' || typeof longitude !== 'number') {
+       if (latitude === NaN || longitude === NaN) {

[Survived] PrecomputedMutator
src/geo-point.ts:42:9
-       if (latitude < -90 || latitude > 90) {
+       if (latitude < -90 || latitude > 180) {

[Survived] PrecomputedMutator
src/geo-point.ts:42:9
-       if (latitude < -90 || latitude > 90) {
+       if (longitude < -90 || longitude > 180) {

[Survived] PrecomputedMutator
src/geo-point.ts:46:9
-       if (longitude < -180 || longitude > 180) {
+       if (longitude <= -180 || longitude >= 180) {

[Survived] PrecomputedMutator
src/geo-point.ts:46:9
-       if (longitude < -180 || longitude > 180) {
+       if (longitude < -180 || longitude > 180 || Math.abs(longitude) > 180) {

[Survived] PrecomputedMutator
src/geo-point.ts:68:9
-       if (point.type !== 'Point') {
+       if (!point.type && point.coordinates.length === 2) {

[Survived] PrecomputedMutator
src/geo-point.ts:72:9
-       if (!Array.isArray(point.coordinates) || point.coordinates.length !== 2) {
+       if (!point.coordinates || point.coordinates.length < 2) {

[Survived] PrecomputedMutator
src/geo-point.ts:72:24
-       if (!Array.isArray(point.coordinates) || point.coordinates.length !== 2) {
+       if (!Array.isArray(point.coordinates.slice(1)) || point.coordinates.length !== 2) {

[Survived] PrecomputedMutator
src/geo-point.ts:76:33
-       return this.fromLngLatArray(point.coordinates);
+       return this.fromLngLatArray(point.coordinates.concat([0]));

[Survived] PrecomputedMutator
src/geo-point.ts:85:9
-       if (!isObject(object)) {
+       if (!object) {

[Survived] PrecomputedMutator
src/geo-point.ts:85:9
-       if (!isObject(object)) {
+       if (object.hasOwnProperty('type')) {

[Survived] PrecomputedMutator
src/geo-point.ts:89:9
-       if (!object.hasOwnProperty('latitude') || !object.hasOwnProperty('longitude')) {
+       if (object.latitude === undefined || object.longitude === undefined) {

[Survived] PrecomputedMutator
src/geo-point.ts:89:9
-       if (!object.hasOwnProperty('latitude') || !object.hasOwnProperty('longitude')) {
+       if (object['latitude'] === undefined || object['longitude'] === undefined) {

[Survived] PrecomputedMutator
src/geo-point.ts:106:36
-       const b = cos(point1Rad) * cos(point2Rad) * cos(a);
+       const b = cos(point1Rad) * cos(point2Rad * -1) * cos(a);

[Survived] PrecomputedMutator
src/geo-point.ts:110:17
-       return acos(r > 1 ? 1 : r) * 6371392.896;
+       return acos(r) * 6371392.896;

[Survived] PrecomputedMutator
src/geo-point.ts:124:29
-       const y = sin(Î”Î») * cos(Ï†2);
+       const y = sin(Î”Î») * cos(Ï†1);

[Survived] PrecomputedMutator
src/geo-point.ts:125:49
-       const x = cos(Ï†1) * sin(Ï†2) - sin(Ï†1) * cos(Ï†2) * cos(Î”Î»);
+       const x = cos(Ï†1) * sin(Ï†2) - sin(Ï†1) * cos(Ï†1) * cos(Î”Î»);

[Survived] PrecomputedMutator
src/geo-point.ts:125:59
-       const x = cos(Ï†1) * sin(Ï†2) - sin(Ï†1) * cos(Ï†2) * cos(Î”Î»);
+       const x = cos(Ï†1) * sin(Ï†2) - sin(Ï†1) * cos(Ï†2) * cos(-Î”Î»);

[Survived] PrecomputedMutator
src/geo-point.ts:143:22
-       const Î´ = Number(distance) / radius; // angular distance in radians
+       const Î´ = Number(2 * distance) / radius; // angular distance in radians

[Survived] PrecomputedMutator
src/geo-point.ts:143:22
-       const Î´ = Number(distance) / radius; // angular distance in radians
+       const Î´ = Number(distance - 1) / radius; // angular distance in radians

[Survived] PrecomputedMutator
src/geo-point.ts:144:23
-       const Î¸ = deg2rad(Number(bearing));
+       const Î¸ = deg2rad(bearing * 2);

[Survived] PrecomputedMutator
src/geo-point.ts:144:23
-       const Î¸ = deg2rad(Number(bearing));
+       const Î¸ = deg2rad(bearing / 2);

[Survived] PrecomputedMutator
src/geo-point.ts:149:40
-       const sinÏ†1 = sin(Ï†1), cosÏ†1 = cos(Ï†1);
+       const sinÏ†1 = sin(Ï†1), cosÏ†1 = cos(Math.PI);

[Survived] PrecomputedMutator
src/geo-point.ts:149:40
-       const sinÏ†1 = sin(Ï†1), cosÏ†1 = cos(Ï†1);
+       const sinÏ†1 = sin(Ï†1), cosÏ†1 = cos(Number.MAX_VALUE);

[Survived] PrecomputedMutator
src/geo-point.ts:151:22
-       const sinÎ¸ = sin(Î¸), cosÎ¸ = cos(Î¸);
+       const sinÎ¸ = sin(Î¸ + Math.PI), cosÎ¸ = cos(Î¸);

[Survived] PrecomputedMutator
src/geo-point.ts:151:22
-       const sinÎ¸ = sin(Î¸), cosÎ¸ = cos(Î¸);
+       const sinÎ¸ = sin(2 * Î¸), cosÎ¸ = cos(Î¸);

[Survived] PrecomputedMutator
src/geo-point.ts:151:22
-       const sinÎ¸ = sin(Î¸), cosÎ¸ = cos(Î¸);
+       const sinÎ¸ = sin(Math.abs(Î¸)), cosÎ¸ = cos(Î¸);

[Survived] PrecomputedMutator
src/geo-point.ts:151:37
-       const sinÎ¸ = sin(Î¸), cosÎ¸ = cos(Î¸);
+       const sinÎ¸ = sin(Î¸), cosÎ¸ = cos(sinÎ¸);

[Survived] PrecomputedMutator
src/geo-point.ts:157:21
-       const Î»2 = Î»1 + atan2(y, x);
+       const Î»2 = Î»1 + atan2(y, x + 1);

[Survived] PrecomputedMutator
src/geo-point.ts:159:30
-       const latitude = rad2deg(Ï†2);
+       const latitude = rad2deg(Ï†1);

[Survived] PrecomputedMutator
src/geo-point.ts:160:32
-       const longitude = (rad2deg(Î»2) + 540) % 360 - 180; // normalise to âˆ’180..+180Â°
+       const longitude = (rad2deg(-Î»2) + 540) % 360 - 180; // normalise to âˆ’180..+180Â°

[Survived] PrecomputedMutator
src/geo-point.ts:160:32
-       const longitude = (rad2deg(Î»2) + 540) % 360 - 180; // normalise to âˆ’180..+180Â°
+       const longitude = (rad2deg(Î»2 * 2) + 540) % 360 - 180; // normalise to âˆ’180..+180Â°

[Survived] PrecomputedMutator
src/geo-point.ts:201:12
-       return GeoPoint.calculateDestination(this, distance, bearing);
+       return GeoPoint.calculateDestination(this, distance * 0.5, bearing);

[Survived] PrecomputedMutator
src/geo-point.ts:201:12
-       return GeoPoint.calculateDestination(this, distance, bearing);
+       return GeoPoint.calculateDestination(this, distance, bearing * -1);

[Survived] PrecomputedMutator
src/geo-point.ts:201:48
-       return GeoPoint.calculateDestination(this, distance, bearing);
+       return GeoPoint.calculateDestination(this, distance - 1, bearing);

[Survived] PrecomputedMutator
src/geo-point.ts:201:48
-       return GeoPoint.calculateDestination(this, distance, bearing);
+       return GeoPoint.calculateDestination(this, distance + 1, bearing);

[Survived] PrecomputedMutator
src/geo-point.ts:201:58
-       return GeoPoint.calculateDestination(this, distance, bearing);
+       return GeoPoint.calculateDestination(this, distance, bearing * 2);

[Survived] PrecomputedMutator
src/geo-point.ts:210:12
-       return GeoPoint.calculateBearing(this, point);
+       return GeoPoint.calculateBearing(null, point);

[Survived] PrecomputedMutator
src/geo-point.ts:210:12
-       return GeoPoint.calculateBearing(this, point);
+       return GeoPoint.calculateBearing(this, null);

[Survived] PrecomputedMutator
src/geo-point.ts:210:12
-       return GeoPoint.calculateBearing(this, point);
+       return GeoPoint.calculateBearing(5, point);

[Survived] PrecomputedMutator
src/geo-point.ts:210:44
-       return GeoPoint.calculateBearing(this, point);
+       return GeoPoint.calculateBearing(this, coordinate2);

[Survived] PrecomputedMutator
src/geo-point.ts:210:44
-       return GeoPoint.calculateBearing(this, point);
+       return GeoPoint.calculateBearing(this, point.x + point.y);

[Survived] PrecomputedMutator
src/geo-point.ts:210:44
-       return GeoPoint.calculateBearing(this, point);
+       return GeoPoint.calculateBearing(this, point * 2);

[Survived] PrecomputedMutator
src/geo-point.ts:219:39
-       return GeoPoint.calculateDistance(this, point);
+       return GeoPoint.calculateDistance(this.radius * this.distance, point);

[Survived] PrecomputedMutator
src/geo-point.ts:219:39
-       return GeoPoint.calculateDistance(this, point);
+       return GeoPoint.calculateDistance(this.distance * Math.PI, point);

[Survived] PrecomputedMutator
src/geo-point.ts:219:45
-       return GeoPoint.calculateDistance(this, point);
+       return GeoPoint.calculateDistance(this, NaN);

[Survived] PrecomputedMutator
src/geo-point.ts:219:45
-       return GeoPoint.calculateDistance(this, point);
+       return GeoPoint.calculateDistance(this, point.toString());

[Survived] PrecomputedMutator
src/geo-point.ts:219:45
-       return GeoPoint.calculateDistance(this, point);
+       return GeoPoint.calculateDistance(this, point.valueOf());

[Survived] PrecomputedMutator
src/geo-point.ts:297:39
-       const adjust = (input: number) => parseFloat(input.toFixed(precision));
+       const adjust = (input: number) => Number(input.toFixed(precision));

[Survived] PrecomputedMutator
src/geo-point.ts:297:50
-       const adjust = (input: number) => parseFloat(input.toFixed(precision));
+       const adjust = (input: number) => parseFloat(input.toFixed(Math.abs(precision)));

[Survived] PrecomputedMutator
src/geo-point.ts:297:64
-       const adjust = (input: number) => parseFloat(input.toFixed(precision));
+       const adjust = (input: number) => parseFloat(input.toFixed(Math.floor(precision)));

[Survived] PrecomputedMutator
src/geo-point.ts:297:64
-       const adjust = (input: number) => parseFloat(input.toFixed(precision));
+       const adjust = (input: number) => parseFloat(input.toFixed(Math.round(precision)));

[Survived] PrecomputedMutator
src/geo-point.ts:297:64
-       const adjust = (input: number) => parseFloat(input.toFixed(precision));
+       const adjust = (input: number) => parseFloat(input.toFixed(Math.ceil(precision)));

[Survived] PrecomputedMutator
src/geo-point.ts:299:55
-       return new GeoPoint(adjust(this.latitude), adjust(this.longitude));
+       return new GeoPoint(adjust(this.latitude), adjust(this.longitude !== 0 ? this.longitude : this.latitude));

Ran 1.00 tests per mutant on average.
--------------|---------|----------|-----------|------------|----------|----------|
File          | % score | # killed | # timeout | # survived | # no cov | # errors |
--------------|---------|----------|-----------|------------|----------|----------|
All files     |   79.15 |      205 |         0 |         54 |        0 |        0 |
 geo-point.ts |   79.15 |      205 |         0 |         54 |        0 |        0 |
--------------|---------|----------|-----------|------------|----------|----------|
[32m09:27:26 (2599) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/node-geo-point/reports/mutation/mutation.html
[32m09:27:26 (2599) INFO MutationTestExecutor[39m Done in 14 minutes 2 seconds.

real	14m3.767s
user	20m9.026s
sys	1m33.256s
