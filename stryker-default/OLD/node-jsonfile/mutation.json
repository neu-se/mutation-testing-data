{"files":{"index.js":{"language":"javascript","mutants":[{"id":"1","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      2) should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      3) \"before each\" hook for \"should reject the promise\"\n\n    > when JSON reviver is set\n\n      4) \"before each\" hook for \"should transform the JSON\"\n\n    > when passing encoding string as option\n\n      5) \"before each\" hook for \"should not throw an error\"\n\n    > w/ BOM\n\n      6) should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  35 passing (2s)\n\n  6 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json'\n      at Object.writeFileSync (node:fs:2342:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:42:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json'\n      at Object.writeFileSync (node:fs:2342:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:129:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) + readFile()\n       > when invalid JSON and throws set to true\n         \"before each\" hook for \"should reject the promise\":\n     Error: EINVAL: invalid argument, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile4-invalid.json'\n      at Object.writeFileSync (node:fs:2342:20)\n      at Context.<anonymous> (test/read-file.test.js:134:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) + readFile()\n       > when JSON reviver is set\n         \"before each\" hook for \"should transform the JSON\":\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json'\n      at Object.writeFileSync (node:fs:2342:20)\n      at Context.<anonymous> (test/read-file.test.js:182:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) + readFile()\n       > when passing encoding string as option\n         \"before each\" hook for \"should not throw an error\":\n     Error: EINVAL: invalid argument, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json'\n      at Object.writeFileSync (node:fs:2342:20)\n      at Context.<anonymous> (test/read-file.test.js:219:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  6) + readFile()\n       > w/ BOM\n         should properly parse:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":2,"line":6},"start":{"column":13,"line":4}}},{"id":"0","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":2,"line":4},"start":{"column":5,"line":2}}},{"id":"3","mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout","location":{"end":{"column":34,"line":11},"start":{"column":7,"line":11}}},{"id":"2","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":2,"line":36},"start":{"column":47,"line":10}}},{"id":"5","mutatorName":"EqualityOperator","replacement":"typeof options !== 'string'","status":"Timeout","location":{"end":{"column":34,"line":11},"start":{"column":7,"line":11}}},{"id":"4","mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout","location":{"end":{"column":34,"line":11},"start":{"column":7,"line":11}}},{"id":"6","mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout","location":{"end":{"column":34,"line":11},"start":{"column":26,"line":11}}},{"id":"10","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    1) \"before each\" hook for \"should read and parse JSON\"\n\n\n\n  + readFile()\n\n    2) should read and parse JSON\n\n    3) \"before each\" hook for \"should resolve a promise with parsed JSON\"\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      4) should not error\n\n    > when EOF option is set to a falsey value\n\n      5) should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    6) \"before each\" hook for \"should write JSON, resolve promise\"\n\n\n\n\n\n  6 passing (18ms)\n\n  6 failing\n\n\n\n  1) + readFileSync()\n       \"before each\" hook for \"should read and parse JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync'\n  \n\n\n  2) + readFile()\n       should read and parse JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile.json'\n      at Object.writeFileSync (node:fs:2342:20)\n      at Context.<anonymous> (test/read-file.test.js:28:8)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n\n  3) + readFile()\n       \"before each\" hook for \"should resolve a promise with parsed JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n  \n\n\n  4) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     Error: EINVAL: invalid argument, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile6.json'\n      at Object.writeFileSync (node:fs:2342:20)\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:81:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     Error: EINVAL: invalid argument, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile2.json'\n      at Object.openSync (node:fs:582:18)\n      at Object.writeFileSync (node:fs:2355:35)\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:101:10)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n\n  6) + writeFile()\n       \"before each\" hook for \"should write JSON, resolve promise\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile'\n  \n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":31,"line":15},"start":{"column":14,"line":15}}},{"id":"7","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      1) should not throw an error\n\n      2) should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  41 passing (4s)\n\n  2 failing\n\n\n\n  1) + readFile()\n       > when passing encoding string as option\n         should not throw an error:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n  2) + readFile()\n       > when passing encoding string as option\n         should resolve the promise:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":4,"line":13},"start":{"column":36,"line":11}}},{"id":"8","mutatorName":"ObjectLiteral","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      2) \"before each\" hook for \"should resolve the promise with null as data\"\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      3) \"before each\" hook for \"should reject the promise\"\n\n\n\n  + writeFileSync()\n\n    4) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      5) should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      6) should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    7) should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  30 passing (2s)\n\n  7 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     Error: EINVAL: invalid argument, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json'\n      at Object.writeFileSync (node:fs:2342:20)\n      at Context.<anonymous> (test/read-file-sync.test.js:42:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFile()\n       > when invalid JSON and throws set to false\n         \"before each\" hook for \"should resolve the promise with null as data\":\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile4-invalid.json'\n      at Object.writeFileSync (node:fs:2342:20)\n      at Context.<anonymous> (test/read-file.test.js:88:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) + readFile()\n       \"before each\" hook for \"should reject the promise\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n  \n\n\n  4) + writeFileSync()\n       should serialize the JSON and write it to file:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile4.json'\n      at Object.readFileSync (node:fs:457:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:31:21)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n\n  5) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n     Error: EINVAL: invalid argument, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.openSync (node:fs:582:18)\n      at Object.writeFileSync (node:fs:2355:35)\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:63:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  6) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile6.json'\n      at Object.writeFileSync (node:fs:2342:20)\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:81:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  7) + writeFile()\n       should serialize and write JSON:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/write-file.test.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":36,"line":12},"start":{"column":15,"line":12}}},{"id":"13","mutatorName":"BooleanLiteral","replacement":"false","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n      2) should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      3) \"before each\" hook for \"should return null and no error\"\n\n\n\n  + writeFileSync()\n\n    4) \"before each\" hook for \"should serialize the JSON and write it to file\"\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    5) \"before each\" hook for \"should write JSON, resolve promise\"\n\n\n\n\n  12 passing (4s)\n\n  5 failing\n\n\n\n  1) + readFile()\n       > when invalid JSON\n         should include the filename in the error:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n  2) + readFile()\n       > when invalid JSON\n         should reject the promise with filename in error:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n  3) + readFile()\n       \"before each\" hook for \"should return null and no error\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile'\n  \n\n  4) + writeFileSync()\n       \"before each\" hook for \"should serialize the JSON and write it to file\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync'\n  \n\n\n  5) + writeFile()\n       \"before each\" hook for \"should write JSON, resolve promise\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile'\n  \n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":66,"line":17},"start":{"column":62,"line":17}}},{"id":"12","mutatorName":"StringLiteral","replacement":"\"\"","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      1) \"before each\" hook for \"should throw an exception\"\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      2) should return null and no error\n\n      3) should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n    > when spaces, EOL are passed as options\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  35 passing (4s)\n  3 failing\n\n\n  1) + readFileSync()\n       \"before each\" hook for \"should throw an exception\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync'\n  \n\n  2) + readFile()\n       > when invalid JSON and throws set to false\n         should return null and no error:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n  3) + readFile()\n       > when invalid JSON and throws set to false\n         should resolve the promise with null as data:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":31,"line":17},"start":{"column":23,"line":17}}},{"id":"9","mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout","location":{"end":{"column":31,"line":15},"start":{"column":14,"line":15}}},{"id":"11","mutatorName":"LogicalOperator","replacement":"options.fs && _fs","status":"Timeout","location":{"end":{"column":31,"line":15},"start":{"column":14,"line":15}}},{"id":"14","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":4,"line":26},"start":{"column":7,"line":24}}},{"id":"21","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      2) should return null\n\n    > when invalid JSON and throws set to true\n\n      3) should throw an exception\n\n    > when json file is missing and throws set to false\n\n      4) should return null\n\n    > when json file is missing and throws set to true\n\n      5) should throw an exception\n\n    > when JSON reviver is set\n\n      6) should transform the JSON\n\n    > when passing encoding string as option\n\n      7) should not throw an error\n\n    > w/ BOM\n\n      8) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  35 passing (36ms)\n\n  8 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:44:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:60:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) + readFileSync()\n       > when invalid JSON and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:75:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) + readFileSync()\n       > when json file is missing and throws set to false\n         should return null:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- null\n      at Context.<anonymous> (test/read-file-sync.test.js:86:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) + readFileSync()\n       > when json file is missing and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:94:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  6) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     TypeError: Cannot read properties of undefined (reading 'name')\n      at Context.<anonymous> (test/read-file-sync.test.js:116:31)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  7) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     TypeError: Cannot read properties of undefined (reading 'name')\n      at Context.<anonymous> (test/read-file-sync.test.js:137:31)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  8) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ {\n+   name: 'JP'\n+ }\n- undefined\n      at Context.<anonymous> (test/read-file-sync.test.js:147:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":2,"line":61},"start":{"column":44,"line":40}}},{"id":"15","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":4,"line":33},"start":{"column":17,"line":26}}},{"id":"16","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      1) should return null and no error\n\n      2) should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n  41 passing (4s)\n  2 failing\n\n\n  1) + readFile()\n       > when invalid JSON and throws set to false\n         should return null and no error:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n  2) + readFile()\n       > when invalid JSON and throws set to false\n         should resolve the promise with null as data:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":20,"line":27},"start":{"column":9,"line":27}}},{"id":"22","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      1) should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      2) should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      3) should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      4) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  39 passing (45ms)\n\n  4 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     TypeError [ERR_INVALID_ARG_VALUE]: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json: The argument '[object Object]' is invalid encoding. Received 'encoding'\n      at assertEncoding (node:internal/fs/utils:163:11)\n      at getOptions (node:internal/fs/utils:340:5)\n      at Object.readFileSync (node:fs:451:13)\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:64:22)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFileSync()\n       > when json file is missing and throws set to false\n         should return null:\n     TypeError [ERR_INVALID_ARG_VALUE]: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json: The argument '[object Object]' is invalid encoding. Received 'encoding'\n      at assertEncoding (node:internal/fs/utils:163:11)\n      at getOptions (node:internal/fs/utils:340:5)\n      at Object.readFileSync (node:fs:451:13)\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:85:22)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     TypeError [ERR_INVALID_ARG_VALUE]: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: The argument '[object Object]' is invalid encoding. Received 'encoding'\n      at assertEncoding (node:internal/fs/utils:163:11)\n      at getOptions (node:internal/fs/utils:340:5)\n      at Object.readFileSync (node:fs:451:13)\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:115:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     TypeError [ERR_INVALID_ARG_VALUE]: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: The argument '[object Object]' is invalid encoding. Received 'encoding'\n      at assertEncoding (node:internal/fs/utils:163:11)\n      at getOptions (node:internal/fs/utils:340:5)\n      at Object.readFileSync (node:fs:451:13)\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":34,"line":41},"start":{"column":7,"line":41}}},{"id":"23","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      1) should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  42 passing (183ms)\n\n  1 failing\n\n\n\n  1) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: Cannot use 'in' operator to search for 'throws' in utf8\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at Object.readFileSync (index.js:139:89)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":34,"line":41},"start":{"column":7,"line":41}}},{"id":"24","mutatorName":"EqualityOperator","replacement":"typeof options !== 'string'","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      1) should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      2) should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      3) should transform the JSON\n\n    > when passing encoding string as option\n\n      4) should not throw an error\n\n    > w/ BOM\n\n      5) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  38 passing (58ms)\n\n  5 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     TypeError [ERR_INVALID_ARG_VALUE]: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json: The argument '[object Object]' is invalid encoding. Received 'encoding'\n      at assertEncoding (node:internal/fs/utils:163:11)\n      at getOptions (node:internal/fs/utils:340:5)\n      at Object.readFileSync (node:fs:451:13)\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:64:22)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFileSync()\n       > when json file is missing and throws set to false\n         should return null:\n     TypeError [ERR_INVALID_ARG_VALUE]: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json: The argument '[object Object]' is invalid encoding. Received 'encoding'\n      at assertEncoding (node:internal/fs/utils:163:11)\n      at getOptions (node:internal/fs/utils:340:5)\n      at Object.readFileSync (node:fs:451:13)\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:85:22)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     TypeError [ERR_INVALID_ARG_VALUE]: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: The argument '[object Object]' is invalid encoding. Received 'encoding'\n      at assertEncoding (node:internal/fs/utils:163:11)\n      at getOptions (node:internal/fs/utils:340:5)\n      at Object.readFileSync (node:fs:451:13)\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:115:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: Cannot use 'in' operator to search for 'throws' in utf8\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at Object.readFileSync (index.js:139:89)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     TypeError [ERR_INVALID_ARG_VALUE]: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: The argument '[object Object]' is invalid encoding. Received 'encoding'\n      at assertEncoding (node:internal/fs/utils:163:11)\n      at getOptions (node:internal/fs/utils:340:5)\n      at Object.readFileSync (node:fs:451:13)\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":34,"line":41},"start":{"column":7,"line":41}}},{"id":"25","mutatorName":"StringLiteral","replacement":"\"\"","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      1) should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  42 passing (48ms)\n\n  1 failing\n\n\n\n  1) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: Cannot use 'in' operator to search for 'throws' in utf8\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at Object.readFileSync (index.js:139:89)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":34,"line":41},"start":{"column":26,"line":41}}},{"id":"26","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      1) should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  42 passing (53ms)\n  1 failing\n\n\n  1) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: Cannot use 'in' operator to search for 'throws' in utf8\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at Object.readFileSync (index.js:139:89)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":4,"line":43},"start":{"column":36,"line":41}}},{"id":"27","mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived","testsCompleted":1,"location":{"end":{"column":36,"line":42},"start":{"column":15,"line":42}}},{"id":"28","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      1) should transform the JSON\n\n    > when passing encoding string as option\n\n      2) should not throw an error\n\n    > w/ BOM\n\n      3) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n  40 passing (41ms)\n  3 failing\n\n\n\n  1) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     TypeError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: fs.readFileSync is not a function\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:115:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: fs.readFileSync is not a function\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  3) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     TypeError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: fs.readFileSync is not a function\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":31,"line":45},"start":{"column":14,"line":45}}},{"id":"29","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      1) should transform the JSON\n\n    > when passing encoding string as option\n\n      2) should not throw an error\n\n    > w/ BOM\n\n      3) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  40 passing (47ms)\n\n  3 failing\n\n\n\n  1) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     TypeError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: fs.readFileSync is not a function\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:115:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: fs.readFileSync is not a function\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  3) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     TypeError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: fs.readFileSync is not a function\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":31,"line":45},"start":{"column":14,"line":45}}},{"id":"30","mutatorName":"LogicalOperator","replacement":"options.fs && _fs","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      1) should transform the JSON\n\n    > when passing encoding string as option\n\n      2) should not throw an error\n\n    > w/ BOM\n\n      3) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  40 passing (43ms)\n\n  3 failing\n\n\n\n  1) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     TypeError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: Cannot read properties of undefined (reading 'readFileSync')\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:115:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: Cannot read properties of undefined (reading 'readFileSync')\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     TypeError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: Cannot read properties of undefined (reading 'readFileSync')\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":31,"line":45},"start":{"column":14,"line":45}}},{"id":"31","mutatorName":"StringLiteral","replacement":"\"\"","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      1) should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      2) should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  41 passing (46ms)\n\n  2 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json: Expected property name or '}' in JSON at position 1\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:147:21)\n      at Context.<anonymous> (test/read-file-sync.test.js:64:22)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFileSync()\n       > when json file is missing and throws set to false\n         should return null:\n     Error: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json'\n      at Object.openSync (node:fs:582:18)\n      at Object.readFileSync (node:fs:461:35)\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:85:22)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":31,"line":47},"start":{"column":23,"line":47}}},{"id":"32","mutatorName":"BooleanLiteral","replacement":"false","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      2) should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  41 passing (56ms)\n\n  2 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:44:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:60:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":66,"line":47},"start":{"column":62,"line":47}}},{"id":"33","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      2) should return null\n\n    > when invalid JSON and throws set to true\n\n      3) should throw an exception\n\n    > when json file is missing and throws set to false\n\n      4) should return null\n\n    > when json file is missing and throws set to true\n\n      5) should throw an exception\n\n    > when JSON reviver is set\n\n      6) should transform the JSON\n\n    > when passing encoding string as option\n\n      7) should not throw an error\n\n    > w/ BOM\n\n      8) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  35 passing (42ms)\n\n  8 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:44:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:60:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  3) + readFileSync()\n       > when invalid JSON and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:75:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  4) + readFileSync()\n       > when json file is missing and throws set to false\n         should return null:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- null\n      at Context.<anonymous> (test/read-file-sync.test.js:86:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  5) + readFileSync()\n       > when json file is missing and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:94:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  6) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     TypeError: Cannot read properties of undefined (reading 'name')\n      at Context.<anonymous> (test/read-file-sync.test.js:116:31)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  7) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     TypeError: Cannot read properties of undefined (reading 'name')\n      at Context.<anonymous> (test/read-file-sync.test.js:137:31)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  8) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ {\n+   name: 'JP'\n+ }\n- undefined\n      at Context.<anonymous> (test/read-file-sync.test.js:147:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":4,"line":53},"start":{"column":7,"line":49}}},{"id":"34","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      2) should return null\n\n    > when invalid JSON and throws set to true\n\n      3) should throw an exception\n\n    > when json file is missing and throws set to false\n\n      4) should return null\n\n    > when json file is missing and throws set to true\n\n      5) should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  38 passing (42ms)\n\n  5 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:44:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:60:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) + readFileSync()\n       > when invalid JSON and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:75:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  4) + readFileSync()\n       > when json file is missing and throws set to false\n         should return null:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- null\n      at Context.<anonymous> (test/read-file-sync.test.js:86:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) + readFileSync()\n       > when json file is missing and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:94:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":4,"line":60},"start":{"column":17,"line":53}}},{"id":"35","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      1) should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      2) should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  41 passing (44ms)\n\n  2 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json: Expected property name or '}' in JSON at position 1\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:147:21)\n      at Context.<anonymous> (test/read-file-sync.test.js:64:22)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFileSync()\n       > when json file is missing and throws set to false\n         should return null:\n     Error: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile4-invalid.json'\n      at Object.openSync (node:fs:582:18)\n      at Object.readFileSync (node:fs:461:35)\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:85:22)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":20,"line":54},"start":{"column":9,"line":54}}},{"id":"20","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    1) \"before each\" hook for \"should read and parse JSON\"\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      2) should return null and no error\n\n      3) should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n  32 passing (4s)\n  3 failing\n\n\n  1) + readFileSync()\n       \"before each\" hook for \"should read and parse JSON\":\n     Error: EEXIST: file already exists, mkdir '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync'\n  \n\n  2) + readFile()\n       > when invalid JSON and throws set to false\n         should return null and no error:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n  3) + readFile()\n       > when invalid JSON and throws set to false\n         should resolve the promise with null as data:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":6,"line":32},"start":{"column":12,"line":30}}},{"id":"36","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      2) should return null\n\n    > when invalid JSON and throws set to true\n\n      3) should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      4) should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  39 passing (54ms)\n  4 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:44:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:60:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  3) + readFileSync()\n       > when invalid JSON and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:75:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) + readFileSync()\n       > when json file is missing and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:94:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":20,"line":54},"start":{"column":9,"line":54}}},{"id":"37","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      2) should return null\n\n    > when invalid JSON and throws set to true\n\n      3) should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      4) should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n    > when spaces, EOL are passed as options\n      ✓ should use EOL override\n      ✓ should use EOL override, resolve the promise\n    > when passing encoding string as options\n      ✓ should not error\n      ✓ should not error, resolve the promise\n    > when EOF option is set to a falsey value\n      ✓ should not have a the EOL symbol at the end of file\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n    > when callback isn't passed & can't serialize\n      ✓ should not write an empty file, should reject the promise\n\n\n  39 passing (68ms)\n  4 failing\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:44:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  2) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:60:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  3) + readFileSync()\n       > when invalid JSON and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:75:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  4) + readFileSync()\n       > when json file is missing and throws set to true\n         should throw an exception:\n     AssertionError [ERR_ASSERTION]: Missing expected exception.\n      at Context.<anonymous> (test/read-file-sync.test.js:94:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":6,"line":57},"start":{"column":22,"line":54}}},{"id":"17","mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout","location":{"end":{"column":20,"line":27},"start":{"column":9,"line":27}}},{"id":"18","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":6,"line":30},"start":{"column":22,"line":27}}},{"id":"38","mutatorName":"StringLiteral","replacement":"``","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n    > when invalid JSON and throws set to false\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  42 passing (192ms)\n  1 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:\n\n  assert(err.message.match(fn))\n\n      at Object.<anonymous> (test/read-file-sync.test.js:48:9)\n      at expectedException (node:assert:733:17)\n      at expectsError (node:assert:856:3)\n      at Function.throws (node:assert:911:3)\n      at Context.<anonymous> (test/read-file-sync.test.js:44:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":46,"line":55},"start":{"column":21,"line":55}}},{"id":"39","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      1) should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      2) should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      3) should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      4) \"before each\" hook for \"should return null and no error\"\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      5) \"before each\" hook for \"should reject the promise\"\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  37 passing (147ms)\n\n  5 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- null\n      at Context.<anonymous> (test/read-file-sync.test.js:65:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFileSync()\n       > when json file is missing and throws set to false\n         should return null:\n     AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- null\n      at Context.<anonymous> (test/read-file-sync.test.js:86:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/somefile.json'\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at Object.readFileSync (node:fs:457:20)\n      at Object.readFileSync (index.js:145:26)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) + readFile()\n       > when invalid JSON and throws set to false\n         \"before each\" hook for \"should return null and no error\":\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile4-invalid.json'\n      at Object.writeFileSync (node:fs:2342:20)\n      at Context.<anonymous> (test/read-file.test.js:88:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) + readFile()\n       > when invalid JSON and throws set to true\n         \"before each\" hook for \"should reject the promise\":\n     Error: EINVAL: invalid argument, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile/somefile4-invalid.json'\n      at Object.writeFileSync (node:fs:2342:20)\n      at Context.<anonymous> (test/read-file.test.js:134:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":6,"line":59},"start":{"column":12,"line":57}}},{"id":"19","mutatorName":"StringLiteral","replacement":"``","status":"Timeout","location":{"end":{"column":46,"line":28},"start":{"column":21,"line":28}}},{"id":"44","mutatorName":"BlockStatement","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    1) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      2) should replace JSON\n\n    > when spaces passed as an option\n\n      3) should write file with spaces\n\n      4) should use EOL override\n\n    > when passing encoding string as options\n\n      5) should not error\n\n    > when EOF option is set to a falsey value\n\n      6) should not have a the EOL symbol at the end of file\n\n      7) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n  36 passing (37ms)\n  7 failing\n\n  1) + writeFileSync()\n       should serialize the JSON and write it to file:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile4.json'\n      at Object.readFileSync (node:fs:457:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:31:21)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n  2) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.openSync (node:fs:582:18)\n      at Object.readFileSync (node:fs:461:35)\n      at Context.<anonymous> (test/write-file-sync.test.js:52:34)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.readFileSync (node:fs:457:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:64:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  4) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile.json'\n      at Object.readFileSync (node:fs:457:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:72:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  5) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile6.json'\n      at Object.readFileSync (node:fs:457:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:82:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  6) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile2.json'\n      at Object.readFileSync (node:fs:457:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:102:26)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n  7) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     Error: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile-sync/somefile2.json'\n      at Object.readFileSync (node:fs:457:20)\n      at Context.<anonymous> (test/write-file-sync.test.js:113:26)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":2,"line":79},"start":{"column":50,"line":73}}},{"id":"45","mutatorName":"ConditionalExpression","replacement":"true","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    1) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      2) should replace JSON\n\n    > when spaces passed as an option\n\n      3) should write file with spaces\n\n      4) should use EOL override\n\n    > when passing encoding string as options\n\n      5) should not error\n\n    > when EOF option is set to a falsey value\n\n      6) should not have a the EOL symbol at the end of file\n\n      7) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n  36 passing (51ms)\n  7 failing\n\n  1) + writeFileSync()\n       should serialize the JSON and write it to file:\n     TypeError: fs.writeFileSync is not a function\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:29:8)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n  2) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     TypeError: fs.writeFileSync is not a function\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:51:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n     TypeError: fs.writeFileSync is not a function\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:63:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  4) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     TypeError: fs.writeFileSync is not a function\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:71:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  5) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     TypeError: fs.writeFileSync is not a function\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:81:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  6) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     TypeError: fs.writeFileSync is not a function\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:101:10)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n  7) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     TypeError: fs.writeFileSync is not a function\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:112:10)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":31,"line":74},"start":{"column":14,"line":74}}},{"id":"46","mutatorName":"ConditionalExpression","replacement":"false","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    1) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      2) should replace JSON\n\n    > when spaces passed as an option\n\n      3) should write file with spaces\n\n      4) should use EOL override\n\n    > when passing encoding string as options\n\n      5) should not error\n\n    > when EOF option is set to a falsey value\n\n      6) should not have a the EOL symbol at the end of file\n\n      7) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  36 passing (42ms)\n\n  7 failing\n\n\n\n  1) + writeFileSync()\n       should serialize the JSON and write it to file:\n     TypeError: fs.writeFileSync is not a function\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:29:8)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n\n  2) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     TypeError: fs.writeFileSync is not a function\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:51:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n     TypeError: fs.writeFileSync is not a function\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:63:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     TypeError: fs.writeFileSync is not a function\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:71:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     TypeError: fs.writeFileSync is not a function\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:81:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  6) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     TypeError: fs.writeFileSync is not a function\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:101:10)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n\n  7) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     TypeError: fs.writeFileSync is not a function\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:112:10)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":31,"line":74},"start":{"column":14,"line":74}}},{"id":"47","mutatorName":"LogicalOperator","replacement":"options.fs && _fs","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    1) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      2) should replace JSON\n\n    > when spaces passed as an option\n\n      3) should write file with spaces\n\n      4) should use EOL override\n\n    > when passing encoding string as options\n\n      5) should not error\n\n    > when EOF option is set to a falsey value\n\n      6) should not have a the EOL symbol at the end of file\n\n      7) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  36 passing (46ms)\n\n  7 failing\n\n\n\n  1) + writeFileSync()\n       should serialize the JSON and write it to file:\n     TypeError: Cannot read properties of undefined (reading 'writeFileSync')\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:29:8)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n\n  2) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     TypeError: Cannot read properties of undefined (reading 'writeFileSync')\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:51:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n     TypeError: Cannot read properties of undefined (reading 'writeFileSync')\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:63:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  4) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     TypeError: Cannot read properties of undefined (reading 'writeFileSync')\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:71:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  5) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     TypeError: Cannot read properties of undefined (reading 'writeFileSync')\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:81:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  6) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     TypeError: Cannot read properties of undefined (reading 'writeFileSync')\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:101:10)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n\n  7) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     TypeError: Cannot read properties of undefined (reading 'writeFileSync')\n      at Object.writeFileSync (index.js:193:15)\n      at Context.<anonymous> (test/write-file-sync.test.js:112:10)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":31,"line":74},"start":{"column":14,"line":74}}},{"id":"48","mutatorName":"ObjectLiteral","replacement":"{}","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      1) should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      2) should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      3) should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      4) should transform the JSON\n\n    > when passing encoding string as option\n\n      5) should not throw an error\n\n    > w/ BOM\n\n      6) should properly parse\n\n  + readFile()\n\n    7) should read and parse JSON\n\n    8) should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      9) should include the filename in the error\n\n      10) should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      11) should return null and no error\n\n      12) should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      13) should return an error\n\n      14) should reject the promise\n\n    > when JSON reviver is set\n\n      15) should transform the JSON\n\n      16) should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      17) should not throw an error\n\n      18) should resolve the promise\n\n    > w/ BOM\n\n      19) should properly parse\n\n      20) should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    21) should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      22) should replace JSON\n\n    > when spaces passed as an option\n\n      23) should write file with spaces\n\n      24) should use EOL override\n\n    > when passing encoding string as options\n\n      25) should not error\n\n    > when EOF option is set to a falsey value\n\n      26) should not have a the EOL symbol at the end of file\n\n      27) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    28) should serialize and write JSON\n\n    29) should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      30) should replace JSON\n\n      31) should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      32) should write file with spaces\n\n      33) should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      34) should use EOL override\n\n      35) should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      36) should not error\n\n      37) should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      38) should not have a the EOL symbol at the end of file\n\n      39) should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      40) should not write an empty file, should reject the promise\n\n\n\n\n\n  3 passing (43ms)\n\n  40 failing\n\n\n\n  1) + readFileSync()\n       > when invalid JSON\n         should include the filename in the error:\n     AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:\n\n  assert(err.message.match(fn))\n\n      at Object.<anonymous> (test/read-file-sync.test.js:48:9)\n      at expectedException (node:assert:733:17)\n      at expectsError (node:assert:856:3)\n      at Function.throws (node:assert:911:3)\n      at Context.<anonymous> (test/read-file-sync.test.js:44:14)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  2) + readFileSync()\n       > when invalid JSON and throws set to false\n         should return null:\n     TypeError: jf.readFileSync is not a function\n      at Context.<anonymous> (test/read-file-sync.test.js:64:22)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  3) + readFileSync()\n       > when json file is missing and throws set to false\n         should return null:\n     TypeError: jf.readFileSync is not a function\n      at Context.<anonymous> (test/read-file-sync.test.js:85:22)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  4) + readFileSync()\n       > when JSON reviver is set\n         should transform the JSON:\n     TypeError: jf.readFileSync is not a function\n      at Context.<anonymous> (test/read-file-sync.test.js:115:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  5) + readFileSync()\n       > when passing encoding string as option\n         should not throw an error:\n     AssertionError [ERR_ASSERTION]: ifError got unwanted exception: jf.readFileSync is not a function\n      at Context.<anonymous> (test/read-file-sync.test.js:135:16)\n      at Context.<anonymous> (test/read-file-sync.test.js:133:19)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  6) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     TypeError: jf.readFileSync is not a function\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  7) + readFile()\n       should read and parse JSON:\n     TypeError: jf.readFile is not a function\n      at Context.<anonymous> (test/read-file.test.js:30:8)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n  8) + readFile()\n       should resolve a promise with parsed JSON:\n     TypeError: jf.readFile is not a function\n      at Context.<anonymous> (test/read-file.test.js:42:8)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n  9) + readFile()\n       > when invalid JSON\n         should include the filename in the error:\n     TypeError: jf.readFile is not a function\n      at Context.<anonymous> (test/read-file.test.js:64:10)\n      at Context.<anonymous> (test/read-file.test.js:60:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  10) + readFile()\n       > when invalid JSON\n         should reject the promise with filename in error:\n     TypeError: jf.readFile is not a function\n      at Context.<anonymous> (test/read-file.test.js:72:10)\n      at Context.<anonymous> (test/read-file.test.js:60:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  11) + readFile()\n       > when invalid JSON and throws set to false\n         should return null and no error:\n     TypeError: jf.readFile is not a function\n      at Context.<anonymous> (test/read-file.test.js:95:10)\n      at Context.<anonymous> (test/read-file.test.js:89:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  12) + readFile()\n       > when invalid JSON and throws set to false\n         should resolve the promise with null as data:\n     TypeError: jf.readFile is not a function\n      at Context.<anonymous> (test/read-file.test.js:115:10)\n      at Context.<anonymous> (test/read-file.test.js:89:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  13) + readFile()\n       > when invalid JSON and throws set to true\n         should return an error:\n     TypeError: jf.readFile is not a function\n      at Context.<anonymous> (test/read-file.test.js:140:10)\n      at Context.<anonymous> (test/read-file.test.js:135:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  14) + readFile()\n       > when invalid JSON and throws set to true\n         should reject the promise:\n     TypeError: jf.readFile is not a function\n      at Context.<anonymous> (test/read-file.test.js:160:10)\n      at Context.<anonymous> (test/read-file.test.js:135:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  15) + readFile()\n       > when JSON reviver is set\n         should transform the JSON:\n     TypeError: jf.readFile is not a function\n      at Context.<anonymous> (test/read-file.test.js:187:10)\n      at Context.<anonymous> (test/read-file.test.js:183:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  16) + readFile()\n       > when JSON reviver is set\n         should resolve the promise with transformed JSON:\n     TypeError: jf.readFile is not a function\n      at Context.<anonymous> (test/read-file.test.js:197:10)\n      at Context.<anonymous> (test/read-file.test.js:183:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  17) + readFile()\n       > when passing encoding string as option\n         should not throw an error:\n     TypeError: jf.readFile is not a function\n      at Context.<anonymous> (test/read-file.test.js:224:10)\n      at Context.<anonymous> (test/read-file.test.js:220:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  18) + readFile()\n       > when passing encoding string as option\n         should resolve the promise:\n     TypeError: jf.readFile is not a function\n      at Context.<anonymous> (test/read-file.test.js:232:10)\n      at Context.<anonymous> (test/read-file.test.js:220:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  19) + readFile()\n       > w/ BOM\n         should properly parse:\n     TypeError: jf.readFile is not a function\n      at Context.<anonymous> (test/read-file.test.js:255:10)\n      at Context.<anonymous> (test/read-file.test.js:251:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  20) + readFile()\n       > w/ BOM\n         should resolve the promise with parsed JSON:\n     TypeError: jf.readFile is not a function\n      at Context.<anonymous> (test/read-file.test.js:263:10)\n      at Context.<anonymous> (test/read-file.test.js:251:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  21) + writeFileSync()\n       should serialize the JSON and write it to file:\n     TypeError: jf.writeFileSync is not a function\n      at Context.<anonymous> (test/write-file-sync.test.js:29:8)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n  22) + writeFileSync()\n       > when JSON replacer is set\n         should replace JSON:\n     TypeError: jf.writeFileSync is not a function\n      at Context.<anonymous> (test/write-file-sync.test.js:51:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  23) + writeFileSync()\n       > when spaces passed as an option\n         should write file with spaces:\n     TypeError: jf.writeFileSync is not a function\n      at Context.<anonymous> (test/write-file-sync.test.js:63:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  24) + writeFileSync()\n       > when spaces passed as an option\n         should use EOL override:\n     TypeError: jf.writeFileSync is not a function\n      at Context.<anonymous> (test/write-file-sync.test.js:71:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  25) + writeFileSync()\n       > when passing encoding string as options\n         should not error:\n     TypeError: jf.writeFileSync is not a function\n      at Context.<anonymous> (test/write-file-sync.test.js:81:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  26) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     TypeError: jf.writeFileSync is not a function\n      at Context.<anonymous> (test/write-file-sync.test.js:101:10)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n  27) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     TypeError: jf.writeFileSync is not a function\n      at Context.<anonymous> (test/write-file-sync.test.js:112:10)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n  28) + writeFile()\n       should serialize and write JSON:\n     TypeError: jf.writeFile is not a function\n      at Context.<anonymous> (test/write-file.test.js:29:8)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n  29) + writeFile()\n       should write JSON, resolve promise:\n     TypeError: jf.writeFile is not a function\n      at Context.<anonymous> (test/write-file.test.js:47:8)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n  30) + writeFile()\n       > when JSON replacer is set\n         should replace JSON:\n     TypeError: jf.writeFile is not a function\n      at Context.<anonymous> (test/write-file.test.js:84:10)\n      at Context.<anonymous> (test/write-file.test.js:80:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  31) + writeFile()\n       > when JSON replacer is set\n         should replace JSON, resolve promise:\n     TypeError: jf.writeFile is not a function\n      at Context.<anonymous> (test/write-file.test.js:96:10)\n      at Context.<anonymous> (test/write-file.test.js:80:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  32) + writeFile()\n       > when spaces passed as an option\n         should write file with spaces:\n     TypeError: jf.writeFile is not a function\n      at Context.<anonymous> (test/write-file.test.js:120:10)\n      at Context.<anonymous> (test/write-file.test.js:116:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  33) + writeFile()\n       > when spaces passed as an option\n         should write file with spaces, resolve the promise:\n     TypeError: jf.writeFile is not a function\n      at Context.<anonymous> (test/write-file.test.js:129:10)\n      at Context.<anonymous> (test/write-file.test.js:116:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  34) + writeFile()\n       > when spaces, EOL are passed as options\n         should use EOL override:\n     TypeError: jf.writeFile is not a function\n      at Context.<anonymous> (test/write-file.test.js:151:10)\n      at Context.<anonymous> (test/write-file.test.js:147:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  35) + writeFile()\n       > when spaces, EOL are passed as options\n         should use EOL override, resolve the promise:\n     TypeError: jf.writeFile is not a function\n      at Context.<anonymous> (test/write-file.test.js:160:10)\n      at Context.<anonymous> (test/write-file.test.js:147:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  36) + writeFile()\n       > when passing encoding string as options\n         should not error:\n     TypeError: jf.writeFile is not a function\n      at Context.<anonymous> (test/write-file.test.js:181:10)\n      at Context.<anonymous> (test/write-file.test.js:177:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  37) + writeFile()\n       > when passing encoding string as options\n         should not error, resolve the promise:\n     TypeError: jf.writeFile is not a function\n      at Context.<anonymous> (test/write-file.test.js:190:10)\n      at Context.<anonymous> (test/write-file.test.js:177:7)\n      at process.processImmediate (node:internal/timers:478:21)\n\n  38) + writeFile()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     TypeError: jf.writeFile is not a function\n      at Context.<anonymous> (test/write-file.test.js:218:10)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n  39) + writeFile()\n       > when EOF option is set to a falsey value\n         should have a the EOL symbol at the end of file when finalEOL is a truth value in options:\n     TypeError: jf.writeFile is not a function\n      at Context.<anonymous> (test/write-file.test.js:232:10)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n  40) + writeFile()\n       > when callback isn't passed & can't serialize\n         should not write an empty file, should reject the promise:\n     TypeError: jf.writeFile is not a function\n      at Context.<anonymous> (test/write-file.test.js:253:10)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":2,"line":86},"start":{"column":18,"line":81}}},{"id":"40","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":2,"line":69},"start":{"column":53,"line":63}}},{"id":"41","mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout","location":{"end":{"column":31,"line":64},"start":{"column":14,"line":64}}},{"id":"42","mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout","location":{"end":{"column":31,"line":64},"start":{"column":14,"line":64}}},{"id":"43","mutatorName":"LogicalOperator","replacement":"options.fs && _fs","status":"Timeout","location":{"end":{"column":31,"line":64},"start":{"column":14,"line":64}}}],"source":"let _fs\ntry {\n  _fs = require('graceful-fs')\n} catch (_) {\n  _fs = require('fs')\n}\nconst universalify = require('universalify')\nconst { stringify, stripBom } = require('./utils')\n\nasync function _readFile (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  let data = await universalify.fromCallback(fs.readFile)(file, options)\n\n  data = stripBom(data)\n\n  let obj\n  try {\n    obj = JSON.parse(data, options ? options.reviver : null)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n\n  return obj\n}\n\nconst readFile = universalify.fromPromise(_readFile)\n\nfunction readFileSync (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  try {\n    let content = fs.readFileSync(file, options)\n    content = stripBom(content)\n    return JSON.parse(content, options.reviver)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n}\n\nasync function _writeFile (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n\n  await universalify.fromCallback(fs.writeFile)(file, str, options)\n}\n\nconst writeFile = universalify.fromPromise(_writeFile)\n\nfunction writeFileSync (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options)\n}\n\nconst jsonfile = {\n  readFile,\n  readFileSync,\n  writeFile,\n  writeFileSync\n}\n\nmodule.exports = jsonfile\n"},"utils.js":{"language":"javascript","mutants":[{"id":"52","mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n      ✓ should properly parse\n\n  + readFile()\n    ✓ should read and parse JSON\n    ✓ should resolve a promise with parsed JSON\n    > when invalid JSON\n      ✓ should include the filename in the error\n      ✓ should reject the promise with filename in error\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      ✓ should properly parse\n\n      ✓ should resolve the promise with parsed JSON\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      1) should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n  + writeFile()\n\n    2) should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      3) should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n  40 passing (120ms)\n  3 failing\n\n  1) + writeFileSync()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     SyntaxError: Unexpected non-whitespace character after JSON at position 13\n      at JSON.parse (<anonymous>)\n      at Context.<anonymous> (test/write-file-sync.test.js:103:25)\n      at FSReqCallback.oncomplete (node:fs:194:23)\n\n  2) + writeFile()\n       should serialize and write JSON:\n     Uncaught AssertionError [ERR_ASSERTION]: ifError got unwanted exception: ENOENT: no such file or directory, open '/var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-writefile/somefile2.json'\n      at ReadFileContext.callback (test/write-file.test.js:32:16)\n      at FSReqCallback.readFileAfterOpen [as oncomplete] (node:fs:309:13)\n\n  3) + writeFile()\n       > when EOF option is set to a falsey value\n         should not have a the EOL symbol at the end of file:\n     Uncaught SyntaxError: Unexpected non-whitespace character after JSON at position 13\n      at JSON.parse (<anonymous>)\n      at /Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/write-file.test.js:221:29\n      at FSReqCallback.readFileAfterClose [as oncomplete] (node:internal/fs/read/context:68:3)\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":34,"line":2},"start":{"column":32,"line":2}}},{"id":"55","mutatorName":"ConditionalExpression","replacement":"true","status":"Survived","testsCompleted":1,"location":{"end":{"column":31,"line":10},"start":{"column":7,"line":10}}},{"id":"49","mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout","location":{"end":{"column":38,"line":1},"start":{"column":34,"line":1}}},{"id":"50","mutatorName":"BooleanLiteral","replacement":"false","status":"Timeout","location":{"end":{"column":55,"line":1},"start":{"column":51,"line":1}}},{"id":"51","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":2,"line":6},"start":{"column":89,"line":1}}},{"id":"58","mutatorName":"Regex","replacement":"/\\uFEFF/","status":"Survived","testsCompleted":1,"location":{"end":{"column":35,"line":11},"start":{"column":26,"line":11}}},{"id":"53","mutatorName":"ArithmeticOperator","replacement":"str.replace(/\\n/g, EOL) - EOF","status":"Timeout","location":{"end":{"column":39,"line":5},"start":{"column":10,"line":5}}},{"id":"54","mutatorName":"BlockStatement","replacement":"{}","status":"Timeout","location":{"end":{"column":2,"line":12},"start":{"column":29,"line":8}}},{"id":"56","mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout","location":{"end":{"column":31,"line":10},"start":{"column":7,"line":10}}},{"id":"59","mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","statusReason":"\n> jsonfile@6.1.0 test\n> npm run unit\n\n\n\n> jsonfile@6.1.0 unit\n> mocha\n\n\n\n\n\n\n  + readFileSync()\n\n    ✓ should read and parse JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null\n\n    > when invalid JSON and throws set to true\n\n      ✓ should throw an exception\n\n    > when json file is missing and throws set to false\n\n      ✓ should return null\n\n    > when json file is missing and throws set to true\n\n      ✓ should throw an exception\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n    > w/ BOM\n\n      1) should properly parse\n\n\n\n  + readFile()\n\n    ✓ should read and parse JSON\n\n    ✓ should resolve a promise with parsed JSON\n\n    > when invalid JSON\n\n      ✓ should include the filename in the error\n\n      ✓ should reject the promise with filename in error\n\n    > when invalid JSON and throws set to false\n\n      ✓ should return null and no error\n\n      ✓ should resolve the promise with null as data\n\n    > when invalid JSON and throws set to true\n\n      ✓ should return an error\n\n      ✓ should reject the promise\n\n    > when JSON reviver is set\n\n      ✓ should transform the JSON\n\n      ✓ should resolve the promise with transformed JSON\n\n    > when passing encoding string as option\n\n      ✓ should not throw an error\n\n      ✓ should resolve the promise\n\n    > w/ BOM\n\n      2) should properly parse\n\n      3) should resolve the promise with parsed JSON\n\n\n\n  + writeFileSync()\n\n    ✓ should serialize the JSON and write it to file\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should use EOL override\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n\n\n  + writeFile()\n\n    ✓ should serialize and write JSON\n\n    ✓ should write JSON, resolve promise\n\n    > when JSON replacer is set\n\n      ✓ should replace JSON\n\n      ✓ should replace JSON, resolve promise\n\n    > when spaces passed as an option\n\n      ✓ should write file with spaces\n\n      ✓ should write file with spaces, resolve the promise\n\n    > when spaces, EOL are passed as options\n\n      ✓ should use EOL override\n\n      ✓ should use EOL override, resolve the promise\n\n    > when passing encoding string as options\n\n      ✓ should not error\n\n      ✓ should not error, resolve the promise\n\n    > when EOF option is set to a falsey value\n\n      ✓ should not have a the EOL symbol at the end of file\n\n      ✓ should have a the EOL symbol at the end of file when finalEOL is a truth value in options\n\n    > when callback isn't passed & can't serialize\n\n      ✓ should not write an empty file, should reject the promise\n\n\n\n\n\n  40 passing (4s)\n\n  3 failing\n\n\n\n  1) + readFileSync()\n       > w/ BOM\n         should properly parse:\n     SyntaxError: /var/folders/6d/djs82kmn45z63jwwqb0km6wm0000gn/T/jsonfile-tests-readfile-sync/file-bom.json: Unexpected token 'S', \"Stryker wa\"... is not valid JSON\n      at JSON.parse (<anonymous>)\n      at Object.readFileSync (index.js:147:21)\n      at Context.<anonymous> (test/read-file-sync.test.js:146:23)\n      at process.processImmediate (node:internal/timers:478:21)\n\n\n  2) + readFile()\n       > w/ BOM\n         should properly parse:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n  3) + readFile()\n       > w/ BOM\n         should resolve the promise with parsed JSON:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile/.stryker-tmp/sandbox9935757/test/read-file.test.js)\n      at listOnTimeout (node:internal/timers:573:17)\n      at process.processTimers (node:internal/timers:514:7)\n\n\n\n\n\n","status":"Killed","testsCompleted":1,"killedBy":["0"],"location":{"end":{"column":39,"line":11},"start":{"column":37,"line":11}}},{"id":"57","mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout","location":{"end":{"column":66,"line":10},"start":{"column":60,"line":10}}},{"id":"60","mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout","location":{"end":{"column":41,"line":14},"start":{"column":18,"line":14}}}],"source":"function stringify (obj, { EOL = '\\n', finalEOL = true, replacer = null, spaces } = {}) {\n  const EOF = finalEOL ? EOL : ''\n  const str = JSON.stringify(obj, replacer, spaces)\n\n  return str.replace(/\\n/g, EOL) + EOF\n}\n\nfunction stripBom (content) {\n  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n  if (Buffer.isBuffer(content)) content = content.toString('utf8')\n  return content.replace(/^\\uFEFF/, '')\n}\n\nmodule.exports = { stringify, stripBom }\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null},"testFiles":{"":{"tests":[{"id":"0","name":"All tests"}]}},"projectRoot":"/Users/jon/Documents/NEU/Projects/llm-mutation-testing/projects/node-jsonfile","config":{"mutate":["index.js","utils.js"],"reporters":["json","html","progress"],"allowConsoleColors":true,"checkers":[],"checkerNodeArgs":[],"commandRunner":{"command":"npm test"},"coverageAnalysis":"perTest","clearTextReporter":{"allowColor":true,"allowEmojis":false,"logTests":true,"maxTestsToLog":3,"reportTests":true,"reportMutants":true,"reportScoreTable":true},"dashboard":{"baseUrl":"https://dashboard.stryker-mutator.io/api/reports","reportType":"full"},"dryRunOnly":false,"eventReporter":{"baseDir":"reports/mutation/events"},"ignorePatterns":[],"ignoreStatic":false,"incremental":false,"incrementalFile":"reports/stryker-incremental.json","force":false,"fileLogLevel":"off","inPlace":false,"logLevel":"info","maxConcurrentTestRunners":9007199254740991,"maxTestRunnerReuse":0,"mutator":{"plugins":null,"excludedMutations":[]},"plugins":["@stryker-mutator/*"],"appendPlugins":[],"htmlReporter":{"fileName":"reports/mutation/mutation.html"},"jsonReporter":{"fileName":"reports/mutation/mutation.json"},"disableTypeChecks":true,"symlinkNodeModules":true,"tempDirName":".stryker-tmp","cleanTempDir":true,"testRunner":"command","testRunnerNodeArgs":[],"thresholds":{"high":80,"low":60,"break":null},"timeoutFactor":1.5,"timeoutMS":5000,"dryRunTimeoutMinutes":5,"tsconfigFile":"tsconfig.json","warnings":true,"disableBail":false,"allowEmpty":false,"ignorers":[],"cucumber":{},"jest":{"projectType":"custom","enableFindRelatedTests":true},"mochaOptions":{},"tap":{"testFiles":["{**/@(test|tests|__test__|__tests__)/**,**/*.@(test|tests|spec)}.@(cjs|mjs|js|jsx|ts|tsx|mts|cts)"],"nodeArgs":["-r","{{hookFile}}","{{testFile}}"],"forceBail":true},"vitest":{}},"framework":{"name":"StrykerJS","version":"8.2.5","branding":{"homepageUrl":"https://stryker-mutator.io","imageUrl":"data:image/svg+xml;utf8,%3Csvg viewBox='0 0 1458 1458' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-linejoin='round' stroke-miterlimit='2'%3E%3Cpath fill='none' d='M0 0h1458v1458H0z'/%3E%3CclipPath id='a'%3E%3Cpath d='M0 0h1458v1458H0z'/%3E%3C/clipPath%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M1458 729c0 402.655-326.345 729-729 729S0 1131.655 0 729C0 326.445 326.345 0 729 0s729 326.345 729 729' fill='%23e74c3c' fill-rule='nonzero'/%3E%3Cpath d='M778.349 1456.15L576.6 1254.401l233-105 85-78.668v-64.332l-257-257-44-187-50-208 251.806-82.793L1076.6 389.401l380.14 379.15c-19.681 367.728-311.914 663.049-678.391 687.599z' fill-opacity='.3'/%3E%3Cpath d='M753.4 329.503c41.79 0 74.579 7.83 97.925 25.444 23.571 18.015 41.69 43.956 55.167 77.097l11.662 28.679 165.733-58.183-14.137-32.13c-26.688-60.655-64.896-108.61-114.191-144.011-49.329-35.423-117.458-54.302-204.859-54.302-50.78 0-95.646 7.376-134.767 21.542-40.093 14.671-74.09 34.79-102.239 60.259-28.84 26.207-50.646 57.06-65.496 92.701-14.718 35.052-22.101 72.538-22.101 112.401 0 72.536 20.667 133.294 61.165 182.704 38.624 47.255 98.346 88.037 179.861 121.291 42.257 17.475 78.715 33.125 109.227 46.994 27.193 12.361 49.294 26.124 66.157 41.751 15.309 14.186 26.497 30.584 33.63 49.258 7.721 20.214 11.16 45.69 11.16 76.402 0 28.021-4.251 51.787-13.591 71.219-8.832 18.374-20.171 33.178-34.523 44.219-14.787 11.374-31.193 19.591-49.393 24.466-19.68 5.359-39.14 7.993-58.69 7.993-29.359 0-54.387-3.407-75.182-10.747-20.112-7.013-37.144-16.144-51.259-27.486-13.618-11.009-24.971-23.766-33.744-38.279-9.64-15.8-17.272-31.924-23.032-48.408l-10.965-31.376-161.669 60.585 10.734 30.124c10.191 28.601 24.197 56.228 42.059 82.748 18.208 27.144 41.322 51.369 69.525 72.745 27.695 21.075 60.904 38.218 99.481 51.041 37.777 12.664 82.004 19.159 132.552 19.159 49.998 0 95.818-8.321 137.611-24.622 42.228-16.471 78.436-38.992 108.835-67.291 30.719-28.597 54.631-62.103 71.834-100.642 17.263-38.56 25.923-79.392 25.923-122.248 0-54.339-8.368-100.37-24.208-138.32-16.29-38.759-38.252-71.661-65.948-98.797-26.965-26.418-58.269-48.835-93.858-67.175-33.655-17.241-69.196-33.11-106.593-47.533-35.934-13.429-65.822-26.601-89.948-39.525-22.153-11.868-40.009-24.21-53.547-37.309-11.429-11.13-19.83-23.678-24.718-37.664-5.413-15.49-7.98-33.423-7.98-53.577 0-40.883 11.293-71.522 37.086-90.539 28.443-20.825 64.985-30.658 109.311-30.658z' fill='%23f1c40f' fill-rule='nonzero'/%3E%3Cpath d='M720 0h18v113h-18zM1458 738v-18h-113v18h113zM720 1345h18v113h-18zM113 738v-18H0v18h113z'/%3E%3C/g%3E%3C/svg%3E"},"dependencies":{"@stryker-mutator/mocha-runner":"8.2.5","@stryker-mutator/karma-runner":"8.2.5","@stryker-mutator/jasmine-runner":"8.2.5","@stryker-mutator/jest-runner":"8.2.5","mocha":"8.4.0","jasmine-core":"5.1.2","typescript":"4.9.5"}}}