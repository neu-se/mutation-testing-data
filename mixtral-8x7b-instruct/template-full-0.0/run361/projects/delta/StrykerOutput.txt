*** using precomputed mutations ***
[32m08:46:27 (2862) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m08:46:27 (2862) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m08:46:27 (2862) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/delta/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m08:46:28 (2862) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m08:46:28 (2862) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m08:46:28 (2862) INFO ProjectReader[39m Found 4 of 1895 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 666 mutants from MUTATION_TESTING/template-full_mixtral-8x7b-instruct_0.0/mutants.json ***
Mutant 0 in AttributeMap.ts: typeof a !== 'object' replaced with Object.keys(a).length === 0
Mutant 1 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 2 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a !== 'function'
Mutant 3 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 4 in AttributeMap.ts: typeof b !== 'object' replaced with Array.isArray(b)
Mutant 5 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'undefined'
Mutant 6 in AttributeMap.ts: cloneDeep replaced with {}
Mutant 7 in AttributeMap.ts: b replaced with a
Mutant 8 in AttributeMap.ts: b replaced with {}
Mutant 9 in AttributeMap.ts: b replaced with Object.assign({}, a, b)
Mutant 10 in AttributeMap.ts: !keepNull replaced with attributes[key] !== null
Mutant 11 in AttributeMap.ts: !keepNull replaced with !Array.isArray(attributes[key])
Mutant 12 in AttributeMap.ts: !keepNull replaced with keepNull === false
Mutant 13 in AttributeMap.ts: attributes replaced with a
Mutant 14 in AttributeMap.ts: attributes[key] != null replaced with attributes[key] === undefined
Mutant 15 in AttributeMap.ts: attributes[key] != null replaced with key in attributes
Mutant 16 in AttributeMap.ts: a replaced with Object.keys(a)
Mutant 17 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a[key] !== null && b[key] === undefined
Mutant 18 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 19 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a !== 'string'
Mutant 20 in AttributeMap.ts: typeof a !== 'object' replaced with Array.isArray(a)
Mutant 21 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 22 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'object' && b !== null
Mutant 23 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'string'
Mutant 24 in AttributeMap.ts: a replaced with Object.keys(a)
Mutant 25 in AttributeMap.ts: a replaced with Object.keys(a).concat(Object.keys(b)).filter(key => key !== 'key')
Mutant 26 in AttributeMap.ts: b replaced with b.toString()
Mutant 27 in AttributeMap.ts: b replaced with b || []
Mutant 28 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with a[key] !== b[key]
Mutant 29 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with typeof a[key] !== 'undefined' && a[key] !== b[key]
Mutant 30 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with a[key] !== null && a[key] !== b[key]
Mutant 31 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(a[key] || b[key])
Mutant 32 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(b[key] || a[key])
Mutant 33 in AttributeMap.ts: isEqual replaced with a[key] === b[key]
Mutant 34 in AttributeMap.ts: a[key] replaced with a['key']
Mutant 35 in AttributeMap.ts: a[key] replaced with 0
Mutant 36 in AttributeMap.ts: b[key] replaced with b['key']
Mutant 37 in AttributeMap.ts: attributes replaced with Object.assign({}, attributes)
Mutant 38 in AttributeMap.ts: attributes replaced with Object.keys(a).concat(Object.keys(b)).reduce < AttributeMap > ((attrs, key) => {
  if (a[key] === undefined) {
    attrs[key] = b[key];
  }
  return attrs;
}, {})
Mutant 39 in AttributeMap.ts: base replaced with Object.keys(a)
Mutant 40 in AttributeMap.ts: base replaced with Object.keys(b)
Mutant 41 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] !== attr[key] && base[key] !== undefined
Mutant 42 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] !== attr[key] || attr[key] !== undefined
Mutant 43 in AttributeMap.ts: attr replaced with Object.keys(a)
Mutant 44 in AttributeMap.ts: attr replaced with {}
Mutant 45 in AttributeMap.ts: attr replaced with Object.keys(b)
Mutant 46 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] !== undefined && base[key] === undefined
Mutant 47 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 48 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a !== 'undefined'
Mutant 49 in AttributeMap.ts: typeof a !== 'object' replaced with Array.isArray(a)
Mutant 50 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 51 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'undefined'
Mutant 52 in AttributeMap.ts: typeof b !== 'object' replaced with b === undefined || typeof b !== 'object'
Mutant 53 in AttributeMap.ts: !priority replaced with true
Mutant 54 in AttributeMap.ts: !priority replaced with a[key] === b[key]
Mutant 55 in AttributeMap.ts: !priority replaced with Math.random() < 0.5
Mutant 56 in AttributeMap.ts: b replaced with b.hasOwnProperty(key) ? b[key] : undefined
Mutant 57 in AttributeMap.ts: a[key] === undefined replaced with a[key] == undefined
Mutant 58 in AttributeMap.ts: attributes replaced with Object.assign({}, b)
Mutant 59 in Delta.ts: String.fromCharCode replaced with 'N'
Mutant 60 in Delta.ts: String.fromCharCode replaced with 0x00
Mutant 61 in Delta.ts: String.fromCharCode replaced with String.fromCodePoint
Mutant 62 in Delta.ts: 0 replaced with 1
Mutant 63 in Delta.ts: 0 replaced with String.fromCharCode(Math.floor(Math.random() * 10))
Mutant 64 in Delta.ts: 0 replaced with String.fromCharCode(65535)
Mutant 65 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'object' && a !== undefined
Mutant 66 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'object' || a === true
Mutant 67 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'function'
Mutant 68 in Delta.ts: typeof b !== 'object' || b === null replaced with b === undefined
Mutant 69 in Delta.ts: typeof b !== 'object' || b === null replaced with b.toString() === '[object Object]'
Mutant 70 in Delta.ts: a replaced with Object.keys(a)[0]
Mutant 71 in Delta.ts: b replaced with 'b' + Object.keys(b)[0]
Mutant 72 in Delta.ts: b replaced with null
Mutant 73 in Delta.ts: b replaced with Math.random()
Mutant 74 in Delta.ts: b replaced with Object.keys(b)[1]
Mutant 75 in Delta.ts: b replaced with {}
Mutant 76 in Delta.ts: !handler replaced with typeof handler === 'undefined'
Mutant 77 in Delta.ts: !handler replaced with handler === null
Mutant 78 in Delta.ts: Array.isArray(ops) replaced with ops instanceof Array
Mutant 79 in Delta.ts: Array.isArray replaced with false
Mutant 80 in Delta.ts: Array.isArray replaced with 0
Mutant 81 in Delta.ts: Array.isArray replaced with null
Mutant 82 in Delta.ts: ops replaced with ops.slice()
Mutant 83 in Delta.ts: ops replaced with ops.concat()
Mutant 84 in Delta.ts: ops replaced with ops.filter(op => op !== null)
Mutant 85 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops !== undefined && Array.isArray(ops.ops)
Mutant 86 in Delta.ts: Array.isArray replaced with this.ops.length > index
Mutant 87 in Delta.ts: ops.ops replaced with ops.length
Mutant 88 in Delta.ts: ops.ops replaced with ops[0]
Mutant 89 in Delta.ts: ops.ops replaced with ops.concat()
Mutant 90 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with arg instanceof String && arg.length === 0
Mutant 91 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with typeof arg === 'object' && Array.isArray(arg) && arg.length === 0
Mutant 92 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with typeof arg === 'number' && arg === 0
Mutant 93 in Delta.ts: attributes replaced with Object.keys(attributes).length > 0 ? attributes : undefined
Mutant 94 in Delta.ts: attributes replaced with attributes || {}
Mutant 95 in Delta.ts: attributes replaced with attributes['key']
Mutant 96 in Delta.ts: newOp replaced with {}
Mutant 97 in Delta.ts: newOp replaced with this
Mutant 98 in Delta.ts: newOp replaced with null
Mutant 99 in Delta.ts: length <= 0 replaced with true
Mutant 100 in Delta.ts: length <= 0 replaced with length === 0
Mutant 101 in Delta.ts: length <= 0 replaced with length > 1
Mutant 102 in Delta.ts: typeof length === 'number' && length <= 0 replaced with typeof length !== 'number'
Mutant 103 in Delta.ts: typeof length === 'number' && length <= 0 replaced with length > 0
Mutant 104 in Delta.ts: typeof length === 'number' && length <= 0 replaced with length > 1
Mutant 105 in Delta.ts: newOp replaced with {}
Mutant 106 in Delta.ts: newOp replaced with null
Mutant 107 in Delta.ts: newOp replaced with Math.random()
Mutant 108 in Delta.ts: cloneDeep replaced with {}
Mutant 109 in Delta.ts: cloneDeep replaced with null
Mutant 110 in Delta.ts: newOp replaced with {}
Mutant 111 in Delta.ts: newOp replaced with null
Mutant 112 in Delta.ts: typeof lastOp === 'object' replaced with lastOp !== null
Mutant 113 in Delta.ts: typeof lastOp === 'object' replaced with lastOp.constructor.name === 'Object'
Mutant 114 in Delta.ts: typeof lastOp === 'object' replaced with Array.isArray(lastOp)
Mutant 115 in Delta.ts: typeof lastOp !== 'object' replaced with lastOp === null
Mutant 116 in Delta.ts: this.ops.unshift replaced with this.ops.shift
Mutant 117 in Delta.ts: this.ops.unshift replaced with this.ops.pop
Mutant 118 in Delta.ts: newOp replaced with null
Mutant 119 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with newOp.attributes === lastOp.attributes
Mutant 120 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with JSON.stringify(newOp.attributes) === JSON.stringify(lastOp.attributes)
Mutant 121 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(null)
Mutant 122 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual({})
Mutant 123 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(lastOp.attributes)
Mutant 124 in Delta.ts: isEqual replaced with nextOp.insert && lastOp.insert
Mutant 125 in Delta.ts: newOp.attributes replaced with newOp.attributes || {}
Mutant 126 in Delta.ts: lastOp.attributes replaced with null
Mutant 127 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with newOp.insert !== undefined && lastOp.insert !== undefined
Mutant 128 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with typeof newOp.insert === 'number' && typeof lastOp.insert === 'number'
Mutant 129 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes !== undefined
Mutant 130 in Delta.ts: typeof newOp.attributes === 'object' replaced with typeof newOp.attributes === 'string'
Mutant 131 in Delta.ts: typeof newOp.attributes === 'object' replaced with Array.isArray(newOp.attributes)
Mutant 132 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with newOp.retain !== 'number'
Mutant 133 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain !== 'number' || typeof lastOp.retain !== 'number'
Mutant 134 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'number' && typeof lastOp.insert === 'number'
Mutant 135 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes !== undefined
Mutant 136 in Delta.ts: typeof newOp.attributes === 'object' replaced with typeof newOp.attributes !== 'undefined'
Mutant 137 in Delta.ts: index === this.ops.length replaced with index >= this.ops.length
Mutant 138 in Delta.ts: index === this.ops.length replaced with index > this.ops.length
Mutant 139 in Delta.ts: index === this.ops.length replaced with index === this.ops.length - 1
Mutant 140 in Delta.ts: this.ops.push replaced with this.ops.unshift
Mutant 141 in Delta.ts: this.ops.push replaced with this.ops.splice
Mutant 142 in Delta.ts: newOp replaced with {}
Mutant 143 in Delta.ts: newOp replaced with this.ops[index - 1]
Mutant 144 in Delta.ts: newOp replaced with null
Mutant 145 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, '0', newOp)
Mutant 146 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, -1, newOp)
Mutant 147 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, 1, newOp)
Mutant 148 in Delta.ts: this.ops.splice replaced with this.ops.concat
Mutant 149 in Delta.ts: index replaced with this.ops.length
Mutant 150 in Delta.ts: index replaced with -1
Mutant 151 in Delta.ts: 0 replaced with this.ops.length
Mutant 152 in Delta.ts: 0 replaced with -1
Mutant 153 in Delta.ts: 0 replaced with Math.max(index, this.ops.length)
Mutant 154 in Delta.ts: newOp replaced with null
Mutant 155 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp && typeof lastOp.retain === 'string'
Mutant 156 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp && lastOp.hasOwnProperty('retain') && !lastOp.attributes
Mutant 157 in Delta.ts: this.ops.pop replaced with this.ops.length--
Mutant 158 in Delta.ts: predicate replaced with () => true
Mutant 159 in Delta.ts: predicate replaced with (op, index) => predicate(index, op)
Mutant 160 in Delta.ts: predicate replaced with (op, index) => predicate(op)
Mutant 161 in Delta.ts: this.ops.map replaced with this.ops.filter
Mutant 162 in Delta.ts: this.ops.map replaced with this.ops.reduce
Mutant 163 in Delta.ts: this.ops.map replaced with this.ops.forEach
Mutant 164 in Delta.ts: predicate replaced with index % 2 === 0
Mutant 165 in Delta.ts: op replaced with op || {}
Mutant 166 in Delta.ts: target.push replaced with target.pop
Mutant 167 in Delta.ts: op replaced with {}
Mutant 168 in Delta.ts: op replaced with null
Mutant 169 in Delta.ts: op replaced with Math.random()
Mutant 170 in Delta.ts: this.ops.reduce(predicate, initialValue) replaced with this.ops.reduce((accum, curr, index) => accum + curr)
Mutant 171 in Delta.ts: predicate replaced with (accum, curr, index) => accum + curr
Mutant 172 in Delta.ts: predicate replaced with (accum, curr, index) => accum + index
Mutant 173 in Delta.ts: initialValue replaced with 0
Mutant 174 in Delta.ts: initialValue replaced with null
Mutant 175 in Delta.ts: elem.insert replaced with 1 * elem.insert
Mutant 176 in Delta.ts: elem.insert replaced with elem['insert']
Mutant 177 in Delta.ts: Op.length replaced with this.length
Mutant 178 in Delta.ts: elem replaced with 1 * elem
Mutant 179 in Delta.ts: elem replaced with null
Mutant 180 in Delta.ts: elem replaced with Math.random()
Mutant 181 in Delta.ts: elem.delete replaced with 0
Mutant 182 in Delta.ts: elem.delete replaced with 1
Mutant 183 in Delta.ts: elem.delete replaced with elem.insert
Mutant 184 in Delta.ts: Op.length replaced with this.ops.length
Mutant 185 in Delta.ts: Op.length replaced with 0
Mutant 186 in Delta.ts: elem replaced with this.ops[index - 1]
Mutant 187 in Delta.ts: elem replaced with null
Mutant 188 in Delta.ts: elem replaced with {
  insert: 0
}
Mutant 189 in Delta.ts: index < end && iter.hasNext() replaced with index < Infinity && iter.hasNext()
Mutant 190 in Delta.ts: index < end && iter.hasNext() replaced with index < end && iter.peek() !== undefined
Mutant 191 in Delta.ts: index < start replaced with index > start
Mutant 192 in Delta.ts: index < start replaced with index >= start
Mutant 193 in Delta.ts: index < start replaced with index + length < start
Mutant 194 in Delta.ts: start - index replaced with start + index
Mutant 195 in Delta.ts: start - index replaced with Math.abs(start - index)
Mutant 196 in Delta.ts: iter.next replaced with iter.skip
Mutant 197 in Delta.ts: end - index replaced with 0
Mutant 198 in Delta.ts: end - index replaced with this.ops.length
Mutant 199 in Delta.ts: end - index replaced with index
Mutant 200 in Delta.ts: nextOp replaced with null
Mutant 201 in Delta.ts: Op.length replaced with this.length
Mutant 202 in Delta.ts: nextOp replaced with null
Mutant 203 in Delta.ts: otherIter.peek replaced with otherIter.next
Mutant 204 in Delta.ts: firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null replaced with firstOther?.retain !== undefined && firstOther.attributes === null
Mutant 205 in Delta.ts: thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft replaced with thisIter.peekType() === 'insert' && firstLeft <= thisIter.peekLength()
Mutant 206 in Delta.ts: thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft replaced with thisIter.peekType() === 'insert' && firstLeft < thisIter.peekLength()
Mutant 207 in Delta.ts: thisIter.peekType replaced with 1
Mutant 208 in Delta.ts: thisIter.peekLength replaced with 0
Mutant 209 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 210 in Delta.ts: ops.push replaced with ops.unshift
Mutant 211 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 212 in Delta.ts: thisIter.next() replaced with thisIter.next(1)
Mutant 213 in Delta.ts: thisIter.next() replaced with thisIter.next(Math.floor(Math.random() * 10))
Mutant 214 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with firstOther.retain >= firstLeft
Mutant 215 in Delta.ts: otherIter.next replaced with thisIter.next
Mutant 216 in Delta.ts: firstOther.retain - firstLeft replaced with 0
Mutant 217 in Delta.ts: firstOther.retain - firstLeft replaced with firstOther.retain + firstLeft
Mutant 218 in Delta.ts: firstOther.retain - firstLeft replaced with Math.random()
Mutant 219 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.peek() !== null || otherIter.peek() !== null
Mutant 220 in Delta.ts: thisIter.hasNext replaced with thisIter.peekType === 'insert'
Mutant 221 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekLength() > 0
Mutant 222 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peek() !== null
Mutant 223 in Delta.ts: otherIter.peekType replaced with 'retain'
Mutant 224 in Delta.ts: otherIter.next() replaced with otherIter.peek()
Mutant 225 in Delta.ts: otherIter.next() replaced with otherIter.next(0)
Mutant 226 in Delta.ts: otherIter.next() replaced with otherIter.next(-1)
Mutant 227 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekType() === 'insert'
Mutant 228 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekType() === 'retain'
Mutant 229 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekLength() === 0
Mutant 230 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 231 in Delta.ts: thisIter.next() replaced with thisIter.next(0)
Mutant 232 in Delta.ts: thisIter.next() replaced with thisIter.next(-1)
Mutant 233 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() + otherIter.peekLength())
Mutant 234 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(Math.max(thisIter.peekLength(), otherIter.peekLength()))
Mutant 235 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(0)
Mutant 236 in Delta.ts: Math.min replaced with Infinity
Mutant 237 in Delta.ts: Math.min replaced with 0
Mutant 238 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() - 1
Mutant 239 in Delta.ts: thisIter.peekLength() replaced with Infinity
Mutant 240 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() * 2
Mutant 241 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 242 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 243 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 244 in Delta.ts: otherIter.peekLength() replaced with Infinity
Mutant 245 in Delta.ts: thisIter.next replaced with thisIter.next || {}
Mutant 246 in Delta.ts: thisIter.next replaced with thisIter.peek
Mutant 247 in Delta.ts: length replaced with thisIter.peekLength() * 2
Mutant 248 in Delta.ts: length replaced with 0
Mutant 249 in Delta.ts: length replaced with Math.random()
Mutant 250 in Delta.ts: otherIter.next replaced with otherIter.peek
Mutant 251 in Delta.ts: length replaced with 0
Mutant 252 in Delta.ts: length replaced with Infinity
Mutant 253 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 254 in Delta.ts: otherOp.retain replaced with otherOp.retain || 0
Mutant 255 in Delta.ts: otherOp.retain replaced with thisOp.retain
Mutant 256 in Delta.ts: otherOp.retain replaced with Math.max(thisOp.retain, otherOp.retain)
Mutant 257 in Delta.ts: typeof thisOp.retain === 'number' replaced with thisOp.retain !== null
Mutant 258 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof thisOp.retain === 'string'
Mutant 259 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof thisOp.retain === 'symbol'
Mutant 260 in Delta.ts: typeof otherOp.retain === 'number' replaced with otherOp.retain !== null
Mutant 261 in Delta.ts: typeof otherOp.retain === 'number' replaced with typeof otherOp.retain !== 'undefined'
Mutant 262 in Delta.ts: typeof otherOp.retain === 'number' replaced with otherOp.retain !== undefined
Mutant 263 in Delta.ts: thisOp.retain == null replaced with thisOp.retain === undefined
Mutant 264 in Delta.ts: thisOp.retain == null replaced with Object.keys(thisOp).length === 0
Mutant 265 in Delta.ts: Delta.getHandler replaced with null
Mutant 266 in Delta.ts: embedType replaced with 'insert'
Mutant 267 in Delta.ts: embedType replaced with Math.random() * 2 | 0
Mutant 268 in Delta.ts: attributes replaced with Object.assign({}, attributes)
Mutant 269 in Delta.ts: attributes replaced with attributes || {}
Mutant 270 in Delta.ts: delta.push replaced with delta.unshift
Mutant 271 in Delta.ts: delta.push replaced with delta.splice
Mutant 272 in Delta.ts: newOp replaced with Object.assign({}, newOp)
Mutant 273 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with thisIter.peekLength() === 0
Mutant 274 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[delta.ops.length - 2], newOp)
Mutant 275 in Delta.ts: otherIter.hasNext replaced with false
Mutant 276 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[0], newOp)
Mutant 277 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(newOp, delta.ops[delta.ops.length - 1])
Mutant 278 in Delta.ts: isEqual replaced with delta.ops[delta.ops.length - 1] !== newOp
Mutant 279 in Delta.ts: delta.ops[delta.ops.length - 1] replaced with delta.ops[0]
Mutant 280 in Delta.ts: newOp replaced with {}
Mutant 281 in Delta.ts: newOp replaced with null
Mutant 282 in Delta.ts: newOp replaced with thisOp
Mutant 283 in Delta.ts: thisIter.rest replaced with iter.rest
Mutant 284 in Delta.ts: delta.concat replaced with this.concat
not replacing delta.concat with this.concat
not replacing delta.concat with this.concat
Mutant 285 in Delta.ts: rest replaced with thisIter.rest()
Mutant 286 in Delta.ts: rest replaced with iter.rest()
Mutant 287 in Delta.ts: rest replaced with new Delta([])
Mutant 288 in Delta.ts: typeof otherOp.delete === 'number' && (typeof thisOp.retain === 'number' || typeof thisOp.retain === 'object' && thisOp.retain !== null) replaced with typeof thisOp.retain !== 'boolean'
Mutant 289 in Delta.ts: typeof otherOp.delete === 'number' && (typeof thisOp.retain === 'number' || typeof thisOp.retain === 'object' && thisOp.retain !== null) replaced with thisOp.retain !== null
Mutant 290 in Delta.ts: delta.push replaced with delta.pop
Mutant 291 in Delta.ts: delta.push replaced with ops.push
Mutant 292 in Delta.ts: otherOp replaced with null
Mutant 293 in Delta.ts: otherOp replaced with {}
Mutant 294 in Delta.ts: otherOp replaced with iter.next()
Mutant 295 in Delta.ts: this.ops.slice replaced with this.ops.splice
Mutant 296 in Delta.ts: this.ops.slice replaced with this.ops.concat
Mutant 297 in Delta.ts: this.ops.slice replaced with this.ops.filter
Mutant 298 in Delta.ts: other.ops.length > 0 replaced with other.ops.length >= 1
Mutant 299 in Delta.ts: other.ops.length > 0 replaced with other.ops.length !== 0
Mutant 300 in Delta.ts: other.ops.length > 0 replaced with Array.isArray(other.ops) && other.ops.length > 0
Mutant 301 in Delta.ts: other.ops[0] replaced with other.ops.slice(1)[0]
Mutant 302 in Delta.ts: other.ops.slice(1) replaced with other.ops.reverse()
Mutant 303 in Delta.ts: other.ops.slice replaced with other.ops.concat
Mutant 304 in Delta.ts: 1 replaced with other.ops.length - 1
Mutant 305 in Delta.ts: 1 replaced with other.ops.slice(0)
Mutant 306 in Delta.ts: this.ops === other.ops replaced with this.ops.length === other.ops.length
Mutant 307 in Delta.ts: this.ops === other.ops replaced with this.ops[0] === other.ops[0]
Mutant 308 in Delta.ts: this.ops === other.ops replaced with JSON.stringify(this.ops) === JSON.stringify(other.ops)
Mutant 309 in Delta.ts: op.insert != null replaced with op.insert !== undefined
Mutant 310 in Delta.ts: op.insert != null replaced with typeof op.insert === 'string'
Mutant 311 in Delta.ts: op.insert != null replaced with op.insert !== null && op.insert !== undefined
Mutant 312 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(['string1', 'string2', cursor])
Mutant 313 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(strings.slice())
Mutant 314 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff([strings[1], strings[0], cursor])
Mutant 315 in Delta.ts: diff replaced with 'stringDiff'
Mutant 316 in Delta.ts: strings[0] replaced with []
Mutant 317 in Delta.ts: strings[0] replaced with strings[1]
Mutant 318 in Delta.ts: strings[0] replaced with strings[Math.floor(Math.random() * 2)]
Mutant 319 in Delta.ts: strings[1] replaced with []
Mutant 320 in Delta.ts: strings[1] replaced with strings[2]
Mutant 321 in Delta.ts: strings[1] replaced with 'hardcoded string'
Mutant 322 in Delta.ts: cursor replaced with null
Mutant 323 in Delta.ts: length > 0 replaced with length >= 1
Mutant 324 in Delta.ts: length > 0 replaced with length > -1
Mutant 325 in Delta.ts: length > 0 replaced with true
Mutant 326 in Delta.ts: component[0] replaced with diff.EQUAL
Mutant 327 in Delta.ts: component[0] replaced with diff.INSERT
Mutant 328 in Delta.ts: component[0] replaced with diff.DELETE
Mutant 329 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(otherIter.length(), length)
Mutant 330 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(otherIter.peekLength(), otherIter.peekLength())
Mutant 331 in Delta.ts: Math.min replaced with Infinity
Mutant 332 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 333 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 334 in Delta.ts: otherIter.peekLength() replaced with Infinity
Mutant 335 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 336 in Delta.ts: length replaced with 0
Mutant 337 in Delta.ts: length replaced with Infinity
Mutant 338 in Delta.ts: otherIter.next(opLength) replaced with otherIter.next(opLength - 1)
Mutant 339 in Delta.ts: opLength replaced with thisIter.peekLength()
Mutant 340 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(1)
Mutant 341 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(thisIter.peekLength() * 2)
Mutant 342 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(Math.max(length, thisIter.peekLength()))
Mutant 343 in Delta.ts: Math.min replaced with 1000
Mutant 344 in Delta.ts: length replaced with thisIter.peekLength() * 2
Mutant 345 in Delta.ts: length replaced with 0
Mutant 346 in Delta.ts: length replaced with thisIter.peekLength() + 1
Mutant 347 in Delta.ts: thisIter.peekLength() replaced with 100
Mutant 348 in Delta.ts: thisIter.peekLength() replaced with thisIter.peek().length
Mutant 349 in Delta.ts: thisIter.peekLength() replaced with otherIter.peekLength()
Mutant 350 in Delta.ts: thisIter.peekLength replaced with 'length'
Mutant 351 in Delta.ts: thisIter.peekLength replaced with thisIter.nextLength
Mutant 352 in Delta.ts: opLength replaced with 0
Mutant 353 in Delta.ts: opLength replaced with thisIter.peekLength()
Mutant 354 in Delta.ts: opLength replaced with Math.random()
Mutant 355 in Delta.ts: opLength replaced with 0
Mutant 356 in Delta.ts: opLength replaced with thisOp.length
Mutant 357 in Delta.ts: opLength replaced with Math.random()
Mutant 358 in Delta.ts: otherIter.peekLength replaced with thisOp.insert.length
Mutant 359 in Delta.ts: opLength replaced with thisOp.insert.length
Mutant 360 in Delta.ts: opLength replaced with Math.max(opLength, 1)
Mutant 361 in Delta.ts: opLength replaced with otherIter.peekLength()
Mutant 362 in Delta.ts: opLength replaced with otherIter.peekLength() * 2
Mutant 363 in Delta.ts: opLength replaced with 0
Mutant 364 in Delta.ts: opLength replaced with thisIter.peekLength() + 1
Mutant 365 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with thisOp.insert === otherOp.insert
Mutant 366 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with thisOp.insert == otherOp.insert
Mutant 367 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with Object.is(thisOp.insert, otherOp.insert)
Mutant 368 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(thisOp.insert || otherOp.insert)
Mutant 369 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(null)
Mutant 370 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(thisOp.insert ?? otherOp.insert)
Mutant 371 in Delta.ts: isEqual replaced with thisOp.insert.length === otherOp.insert.length
Mutant 372 in Delta.ts: isEqual replaced with true
Mutant 373 in Delta.ts: thisOp.insert replaced with thisOp.insert || ''
Mutant 374 in Delta.ts: thisOp.insert replaced with thisOp['insert']
Mutant 375 in Delta.ts: otherOp.insert replaced with otherOp.insert || ''
Mutant 376 in Delta.ts: otherOp.insert replaced with otherOp.insert ?? '<REPLACEMENT_VALUE>'
Mutant 377 in Delta.ts: otherOp.insert replaced with otherOp.hasOwnProperty('insert') ? otherOp.insert : '<REPLACEMENT_VALUE>'
Mutant 378 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(Object.assign({}, thisOp.attributes, otherOp.attributes))
Mutant 379 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(thisOp.attributes.concat(otherOp.attributes))
Mutant 380 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff({
  ...thisOp.attributes,
  ...otherOp.attributes
})
Mutant 381 in Delta.ts: AttributeMap.diff replaced with null
Mutant 382 in Delta.ts: AttributeMap.diff replaced with {}
Mutant 383 in Delta.ts: thisOp.attributes replaced with null
Mutant 384 in Delta.ts: otherOp.attributes replaced with null
Mutant 385 in Delta.ts: otherOp.attributes replaced with otherOp.insert
Mutant 386 in Delta.ts: otherOp replaced with null
Mutant 387 in Delta.ts: opLength replaced with 0
Mutant 388 in Delta.ts: opLength replaced with thisOp.length
Mutant 389 in Delta.ts: opLength replaced with Infinity
Mutant 390 in Delta.ts: iter.hasNext() replaced with iter.peek() !== undefined
Mutant 391 in Delta.ts: iter.hasNext() replaced with iter.peekType() !== null
Mutant 392 in Delta.ts: iter.peekType() !== 'insert' replaced with iter.peekType() !== 'Insert'
Mutant 393 in Delta.ts: iter.peekType() !== 'insert' replaced with iter.peekType() !== 'insert' && iter.peekType() !== undefined
Mutant 394 in Delta.ts: iter.peekType() !== 'insert' replaced with iter.peekType() !== 'character'
Mutant 395 in Delta.ts: Op.length replaced with thisOp.length
Mutant 396 in Delta.ts: thisOp replaced with thisOp.insert
Mutant 397 in Delta.ts: thisOp replaced with thisOp.retain
Mutant 398 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf('', start)
Mutant 399 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf(newline, thisIter.peekLength())
Mutant 400 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf('', 0)
Mutant 401 in Delta.ts: thisOp.insert.indexOf replaced with ''.indexOf
Mutant 402 in Delta.ts: thisOp.insert.indexOf replaced with thisOp.insert.length
Mutant 403 in Delta.ts: newline replaced with '\r\n'
Mutant 404 in Delta.ts: newline replaced with ''
Mutant 405 in Delta.ts: newline replaced with '\\n'
Mutant 406 in Delta.ts: start replaced with thisOp.insert.indexOf(newline, Infinity)
Mutant 407 in Delta.ts: start replaced with thisOp.insert.indexOf(newline, -1)
Mutant 408 in Delta.ts: start replaced with thisOp.insert.indexOf('not-a-newline', 0)
Mutant 409 in Delta.ts: index < 0 replaced with index <= -1
Mutant 410 in Delta.ts: index < 0 replaced with index > this.length()
Mutant 411 in Delta.ts: iter.next() replaced with iter.next(1)
Mutant 412 in Delta.ts: iter.next() replaced with iter.previous()
Mutant 413 in Delta.ts: iter.next() replaced with iter.ops[0]
Mutant 414 in Delta.ts: iter.next replaced with thisIter.next
Mutant 415 in Delta.ts: index > 0 replaced with index >= 0
Mutant 416 in Delta.ts: index > 0 replaced with index > -1
Mutant 417 in Delta.ts: index > 0 replaced with index === 0
Mutant 418 in Delta.ts: iter.next(index) replaced with iter.next(index + 1)
Mutant 419 in Delta.ts: iter.next(index) replaced with iter.previous()
Mutant 420 in Delta.ts: iter.next replaced with iter.skip
Mutant 421 in Delta.ts: index replaced with -index
Mutant 422 in Delta.ts: index replaced with 'string'
Mutant 423 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) === false replaced with predicate(line, {}, i) === false
Mutant 424 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) replaced with predicate(new Delta(), {}, i)
Mutant 425 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) replaced with predicate(line, iter.next(1), i)
Mutant 426 in Delta.ts: line replaced with []
Mutant 427 in Delta.ts: line replaced with {
  insert: 'newline'
}
Mutant 428 in Delta.ts: line replaced with {
  insert: '\n\n'
}
Mutant 429 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(1).attributes || {
  foo: 'bar'
}
Mutant 430 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(2).attributes || {}
Mutant 431 in Delta.ts: i replaced with i + 1
Mutant 432 in Delta.ts: i replaced with 0
Mutant 433 in Delta.ts: i replaced with this.length()
Mutant 434 in Delta.ts: line.length() > 0 replaced with line.length > 0
Mutant 435 in Delta.ts: line.length() > 0 replaced with line.length > 1
Mutant 436 in Delta.ts: line.length() > 0 replaced with line.constructor.prototype.length.call(line) > 0
Mutant 437 in Delta.ts: line.length replaced with line.length - 1
Mutant 438 in Delta.ts: predicate(line, {}, i) replaced with predicate([line, otherIter.next(1).attributes || {}, i])
Mutant 439 in Delta.ts: predicate(line, {}, i) replaced with predicate([line, attributes, i + 1])
Mutant 440 in Delta.ts: predicate(line, {}, i) replaced with predicate([line, thisIter.next(1).attributes || {}, i])
Mutant 441 in Delta.ts: line replaced with new Delta()
Mutant 442 in Delta.ts: {} replaced with {
  insert: '\n'
}
Mutant 443 in Delta.ts: {} replaced with {
  insert: '',
  retain: 1
}
Mutant 444 in Delta.ts: {} replaced with {
  insert: ' ',
  retain: 1
}
Mutant 445 in Delta.ts: i replaced with i + 1
Mutant 446 in Delta.ts: i replaced with 0
Mutant 447 in Delta.ts: i replaced with 'placeholder'
Mutant 448 in Delta.ts: op.insert replaced with op.insert || ''
Mutant 449 in Delta.ts: inverted.delete replaced with inverted.retain
Mutant 450 in Delta.ts: inverted.delete replaced with inverted.push
Mutant 451 in Delta.ts: inverted.delete replaced with inverted['noSuchMethod']
Mutant 452 in Delta.ts: Op.length(op) replaced with this.ops.length
Mutant 453 in Delta.ts: Op.length replaced with thisOp.length
Mutant 454 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && op.attributes === undefined
Mutant 455 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with op.retain !== null && op.retain.constructor === Number
Mutant 456 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && Object.keys(op.attributes).length === 0
Mutant 457 in Delta.ts: op.retain replaced with op.retain || 0
Mutant 458 in Delta.ts: op.retain replaced with op.insert.length
Mutant 459 in Delta.ts: op.retain replaced with this.ops[0].retain
Mutant 460 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex + length, baseIndex)
Mutant 461 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex + 1, baseIndex + length - 1)
Mutant 462 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex - 1, baseIndex + length)
Mutant 463 in Delta.ts: base.slice replaced with [...base.ops].slice
Mutant 464 in Delta.ts: baseIndex replaced with thisIter.current().attributes.start
Mutant 465 in Delta.ts: baseIndex replaced with 0
Mutant 466 in Delta.ts: baseIndex + length replaced with baseIndex + length - 1
Mutant 467 in Delta.ts: op.delete replaced with false
Mutant 468 in Delta.ts: op.delete replaced with 0
Mutant 469 in Delta.ts: op.delete replaced with null
Mutant 470 in Delta.ts: inverted.push replaced with inverted.ops.push
Mutant 471 in Delta.ts: baseOp replaced with {}
Mutant 472 in Delta.ts: baseOp replaced with null
Mutant 473 in Delta.ts: baseOp replaced with Math.random()
Mutant 474 in Delta.ts: op.retain && op.attributes replaced with op.retain && op.attributes || {}
Mutant 475 in Delta.ts: op.retain && op.attributes replaced with op.retain !== undefined && op.attributes
Mutant 476 in Delta.ts: op.retain && op.attributes replaced with op.attributes || op.retain
Mutant 477 in Delta.ts: Op.length replaced with 0
Mutant 478 in Delta.ts: baseOp replaced with Object.assign({}, baseOp)
Mutant 479 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(null)
Mutant 480 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes || {})
Mutant 481 in Delta.ts: AttributeMap.invert replaced with {}
Mutant 482 in Delta.ts: AttributeMap.invert replaced with baseOp.attributes
Mutant 483 in Delta.ts: op.attributes replaced with null
Mutant 484 in Delta.ts: op.attributes replaced with {}
Mutant 485 in Delta.ts: op.attributes replaced with ['notAnAttribute']
Mutant 486 in Delta.ts: baseOp.attributes replaced with null
Mutant 487 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== undefined
Mutant 488 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'number'
Mutant 489 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain && typeof op.retain === 'object'
Mutant 490 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIter.peekLength())
Mutant 491 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIter.peekType() === 'insert' ? 1 : 0)
Mutant 492 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIter.next().attributes ? 1 : 0)
Mutant 493 in Delta.ts: base.slice replaced with []
Mutant 494 in Delta.ts: base.slice replaced with base.ops.slice
Mutant 495 in Delta.ts: baseIndex replaced with thisIter.peekLength()
Mutant 496 in Delta.ts: baseIndex replaced with 0
Mutant 497 in Delta.ts: baseIndex replaced with thisIter.peekType() === 'insert' ? 0 : thisIter.peekLength()
Mutant 498 in Delta.ts: baseIndex + 1 replaced with baseIter.peekLength()
Mutant 499 in Delta.ts: baseIndex + 1 replaced with thisIter.peekLength()
Mutant 500 in Delta.ts: baseIndex + 1 replaced with Math.random()
Mutant 501 in Delta.ts: Delta.getHandler replaced with null
Mutant 502 in Delta.ts: Delta.getHandler replaced with {}
Mutant 503 in Delta.ts: embedType replaced with 'insert'
Mutant 504 in Delta.ts: embedType replaced with Math.random().toString()
Mutant 505 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(null)
Mutant 506 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert([opData, baseOpData])
Mutant 507 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(opData, null)
Mutant 508 in Delta.ts: opData replaced with null
Mutant 509 in Delta.ts: opData replaced with []
Mutant 510 in Delta.ts: opData replaced with Math.random()
Mutant 511 in Delta.ts: baseOpData replaced with null
Mutant 512 in Delta.ts: baseOpData replaced with {}
Mutant 513 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(null)
Mutant 514 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert({})
Mutant 515 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(thisOp.attributes)
Mutant 516 in Delta.ts: op.attributes replaced with null
Mutant 517 in Delta.ts: baseOp.attributes replaced with null
Mutant 518 in Delta.ts: typeof arg === 'number' replaced with arg !== undefined
Mutant 519 in Delta.ts: typeof arg === 'number' replaced with arg !== null
Mutant 520 in Delta.ts: typeof arg === 'number' replaced with typeof arg === 'object'
Mutant 521 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(0, priority)
Mutant 522 in Delta.ts: arg replaced with 0
Mutant 523 in Delta.ts: arg replaced with thisIter.peek()
Mutant 524 in Delta.ts: priority replaced with false
Mutant 525 in Delta.ts: priority replaced with thisIter.peekType()
Mutant 526 in Delta.ts: priority replaced with Math.random()
Mutant 527 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.peek() !== null
Mutant 528 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with otherIter.peek() !== undefined
Mutant 529 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.peekLength() > 0 || otherIter.peekLength() > 0
Mutant 530 in Delta.ts: thisIter.hasNext replaced with thisIter.current !== null
Mutant 531 in Delta.ts: thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert') replaced with thisIter.peekType() === 'insert' && (priority || otherIter.peek() !== null)
Mutant 532 in Delta.ts: thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert') replaced with thisIter.peekType() === 'insert' && (priority || otherIter.peek().type !== 'insert')
Mutant 533 in Delta.ts: delta.retain replaced with delta.push
Mutant 534 in Delta.ts: delta.retain replaced with delta.length = 0
Mutant 535 in Delta.ts: Op.length(thisIter.next()) replaced with 1
Mutant 536 in Delta.ts: Op.length(thisIter.next()) replaced with thisIter.peekLength()
Mutant 537 in Delta.ts: Op.length(thisIter.next()) replaced with Math.random() * Number.MAX_SAFE_INTEGER
Mutant 538 in Delta.ts: Op.length replaced with 0
Mutant 539 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 540 in Delta.ts: thisIter.next() replaced with thisIter.next(0)
Mutant 541 in Delta.ts: thisIter.next() replaced with thisIter.previous()
Mutant 542 in Delta.ts: thisIter.next replaced with thisIter['next']
Mutant 543 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peek()?.type === 'insert'
Mutant 544 in Delta.ts: otherIter.next() replaced with null
Mutant 545 in Delta.ts: otherIter.next() replaced with otherIter.peek()
Mutant 546 in Delta.ts: otherIter.next() replaced with {
  type: 'insert',
  insert: 'placeholder'
}
Mutant 547 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() + otherIter.peekLength())
Mutant 548 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(Math.max(thisIter.peekLength(), otherIter.peekLength()))
Mutant 549 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() * otherIter.peekLength())
Mutant 550 in Delta.ts: Math.min replaced with Math.max
Mutant 551 in Delta.ts: Math.min replaced with index - offset
Mutant 552 in Delta.ts: thisIter.peekLength() replaced with thisIter.next().length
Mutant 553 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 554 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 555 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 556 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekType() === 'insert' ? Infinity : 0
Mutant 557 in Delta.ts: length replaced with 0
Mutant 558 in Delta.ts: length replaced with thisOp.length
Mutant 559 in Delta.ts: length replaced with thisOp.retain.length
Mutant 560 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 561 in Delta.ts: length replaced with 0
Mutant 562 in Delta.ts: length replaced with Infinity
Mutant 563 in Delta.ts: thisOp.delete replaced with thisOp.insert
Mutant 564 in Delta.ts: otherOp.delete replaced with otherOp.insert
Mutant 565 in Delta.ts: otherOp replaced with null
Mutant 566 in Delta.ts: otherOp replaced with {}
Mutant 567 in Delta.ts: otherOp replaced with thisIter.next()
Mutant 568 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with thisData && otherData
Mutant 569 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with Object.keys(thisData).length > 0 && Object.keys(otherData).length > 0
Mutant 570 in Delta.ts: thisData replaced with thisData || {}
Mutant 571 in Delta.ts: thisData replaced with thisData['notAnExistingProperty']
Mutant 572 in Delta.ts: thisData replaced with thisData.concat({
  anotherProperty: 'value'
})
Mutant 573 in Delta.ts: otherData replaced with null
Mutant 574 in Delta.ts: otherData replaced with {}
Mutant 575 in Delta.ts: otherData replaced with [1, 2, 3]
Mutant 576 in Delta.ts: Delta.getHandler replaced with null
Mutant 577 in Delta.ts: embedType replaced with 'nonexistentType'
Mutant 578 in Delta.ts: handler replaced with handler.transform(thisData[embedType], otherData[embedType], !priority)
Mutant 579 in Delta.ts: thisIter.hasNext() && offset <= index replaced with offset < index
Mutant 580 in Delta.ts: thisIter.hasNext() && offset <= index replaced with thisIter.peekLength() > 0 && offset <= index
Mutant 581 in Delta.ts: thisIter.peekLength replaced with thisIter.length
Mutant 582 in Delta.ts: thisIter.peekType replaced with 'insert'
Mutant 583 in Delta.ts: nextType === 'delete' replaced with nextType === 'insert'
Mutant 584 in Delta.ts: nextType === 'delete' replaced with nextType !== 'insert'
Mutant 585 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(1)
Mutant 586 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(thisIter.peekLength())
Mutant 587 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(Math.random())
Mutant 588 in Delta.ts: Math.min replaced with 1
Mutant 589 in Delta.ts: Math.min replaced with Math.max
Mutant 590 in Delta.ts: length replaced with 0
Mutant 591 in Delta.ts: length replaced with thisIter.peekLength()
Mutant 592 in Delta.ts: length replaced with length * 2
Mutant 593 in Delta.ts: index - offset replaced with index + offset
Mutant 594 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType === 'insert' && (offset <= index || !priority)
Mutant 595 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType === 'insert' && (offset + 1 < index || !priority)
Mutant 596 in Delta.ts: typeof module === 'object' replaced with typeof global === 'object'
Mutant 597 in Delta.ts: typeof module === 'object' replaced with global.module !== undefined
Mutant 598 in Delta.ts: typeof module === 'object' replaced with typeof window.module === 'object'
Mutant 599 in Op.ts: typeof op.retain === 'number' replaced with op.retain === undefined
Mutant 600 in Op.ts: typeof op.retain === 'number' replaced with typeof op.retain !== 'number'
Mutant 601 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== undefined
Mutant 602 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'string'
Mutant 603 in OpIterator.ts: this.peekLength replaced with -Infinity
Mutant 604 in OpIterator.ts: this.peekLength replaced with this.index < this.ops.length
Mutant 605 in OpIterator.ts: !length replaced with this.index > this.ops.length
Mutant 606 in OpIterator.ts: !length replaced with typeof length === 'undefined'
Mutant 607 in OpIterator.ts: !length replaced with length !== null
Mutant 608 in OpIterator.ts: nextOp replaced with this.ops[this.index - 1]
Mutant 609 in OpIterator.ts: nextOp replaced with null
Mutant 610 in OpIterator.ts: nextOp replaced with this.ops[this.index + 1]
Mutant 611 in OpIterator.ts: nextOp replaced with this.ops[this.index - 1]
Mutant 612 in OpIterator.ts: nextOp replaced with Math.max(0, this.index)
Mutant 613 in OpIterator.ts: nextOp replaced with this.ops.filter(op => op !== null)[this.index]
Mutant 614 in OpIterator.ts: length >= opLength - offset replaced with length > opLength - offset
Mutant 615 in OpIterator.ts: length >= opLength - offset replaced with length > 0
Mutant 616 in OpIterator.ts: length >= opLength - offset replaced with this.offset > opLength - length
Mutant 617 in OpIterator.ts: nextOp.attributes replaced with nextOp['attributes']
Mutant 618 in OpIterator.ts: nextOp.attributes replaced with nextOp.hasOwnProperty('attributes')
Mutant 619 in OpIterator.ts: nextOp.attributes replaced with Reflect.get(nextOp, 'attributes')
Mutant 620 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with nextOp.retain !== undefined
Mutant 621 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with typeof nextOp.retain === 'string'
Mutant 622 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with nextOp.hasOwnProperty('retain')
Mutant 623 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with typeof nextOp.retain === 'function'
Mutant 624 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with nextOp.hasOwnProperty('retain')
Mutant 625 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with nextOp.retain !== undefined
Mutant 626 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with nextOp.insert !== null
Mutant 627 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with nextOp.hasOwnProperty('insert')
Mutant 628 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with Array.isArray(nextOp.insert)
Mutant 629 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(nextOp.insert.length)
Mutant 630 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(1)
Mutant 631 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(Math.random())
Mutant 632 in OpIterator.ts: nextOp.insert.substr replaced with nextOp.insert.slice
Mutant 633 in OpIterator.ts: nextOp.insert.substr replaced with nextOp.insert.toUpperCase
Mutant 634 in OpIterator.ts: offset replaced with this.offset
Mutant 635 in OpIterator.ts: length replaced with nextOp.insert.length - offset
Mutant 636 in OpIterator.ts: length replaced with nextOp.insert.substr(offset, 1)
Mutant 637 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index - 1]
Mutant 638 in OpIterator.ts: this.ops[this.index] replaced with this.ops.slice(this.index, 1)[0]
Mutant 639 in OpIterator.ts: Op.length replaced with this.ops.length
Mutant 640 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index - 1]
Mutant 641 in OpIterator.ts: op replaced with this.ops[this.index + 1]
Mutant 642 in OpIterator.ts: op replaced with this.ops[Math.floor(Math.random() * this.ops.length)]
Mutant 643 in OpIterator.ts: op replaced with this.ops[this.index].type
Mutant 644 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'string'
Mutant 645 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== undefined
Mutant 646 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'object' && op.retain !== null && op.retain.length > 0
Mutant 647 in OpIterator.ts: !this.hasNext() replaced with this.index >= this.ops.length
Mutant 648 in OpIterator.ts: !this.hasNext() replaced with this.offset === Op.length(this.ops[this.index])
Mutant 649 in OpIterator.ts: !this.hasNext() replaced with this.peekType() === 'retain'
Mutant 650 in OpIterator.ts: this.hasNext replaced with this.index < this.ops.length
Mutant 651 in OpIterator.ts: this.offset === 0 replaced with this.offset > 0
Mutant 652 in OpIterator.ts: this.ops.slice replaced with this.ops.splice
Mutant 653 in OpIterator.ts: this.index replaced with this.index + 1
Mutant 654 in OpIterator.ts: this.index replaced with 0
Mutant 655 in OpIterator.ts: this.index replaced with this.ops.length
Mutant 656 in OpIterator.ts: this.ops.slice replaced with this.ops.splice
Mutant 657 in OpIterator.ts: this.ops.slice replaced with this.ops.concat
Mutant 658 in OpIterator.ts: this.ops.slice replaced with this.ops.filter
Mutant 659 in OpIterator.ts: this.index replaced with index + 1
Mutant 660 in OpIterator.ts: this.index replaced with this.index - 1
Mutant 661 in OpIterator.ts: this.index replaced with Math.floor(Math.random() * this.ops.length)
Mutant 662 in OpIterator.ts: [next].concat replaced with [next].slice
Mutant 663 in OpIterator.ts: rest replaced with this.ops.slice(this.index + 1)
Mutant 664 in OpIterator.ts: rest replaced with this.ops.slice(0, this.index)
Mutant 665 in OpIterator.ts: rest replaced with this.ops.filter(op => op !== this.ops[this.index])
[32m08:46:29 (2862) INFO Instrumenter[39m Instrumented 4 source file(s) with 666 mutant(s)
[32m08:46:29 (2862) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m08:46:30 (2862) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m08:46:30 (2862) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m08:46:35 (2862) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 4 seconds (net 4861 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~55m) 2/666 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~55m) 4/666 tested (3 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~55m) 6/666 tested (4 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~54m) 8/666 tested (4 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~54m) 10/666 tested (5 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~54m) 12/666 tested (5 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~54m) 14/666 tested (6 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~50m) 17/666 tested (6 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~51m) 19/666 tested (8 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~51m) 21/666 tested (9 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~51m) 23/666 tested (11 survived, 0 timed out)
Mutation testing 3% (elapsed: ~2m, remaining: ~51m) 25/666 tested (11 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~51m) 27/666 tested (11 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~51m) 29/666 tested (12 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~49m) 32/666 tested (12 survived, 0 timed out)
Mutation testing 5% (elapsed: ~2m, remaining: ~49m) 34/666 tested (12 survived, 0 timed out)
Mutation testing 5% (elapsed: ~2m, remaining: ~49m) 36/666 tested (12 survived, 0 timed out)
Mutation testing 5% (elapsed: ~3m, remaining: ~49m) 38/666 tested (13 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~49m) 40/666 tested (13 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~49m) 42/666 tested (13 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~49m) 44/666 tested (13 survived, 0 timed out)
Mutation testing 7% (elapsed: ~3m, remaining: ~48m) 47/666 tested (14 survived, 0 timed out)
Mutation testing 7% (elapsed: ~3m, remaining: ~48m) 49/666 tested (14 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~48m) 51/666 tested (14 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~48m) 53/666 tested (15 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~48m) 55/666 tested (15 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~48m) 57/666 tested (15 survived, 0 timed out)
Mutation testing 9% (elapsed: ~4m, remaining: ~47m) 60/666 tested (16 survived, 0 timed out)
Mutation testing 9% (elapsed: ~4m, remaining: ~47m) 62/666 tested (17 survived, 0 timed out)
Mutation testing 9% (elapsed: ~5m, remaining: ~47m) 64/666 tested (19 survived, 0 timed out)
Mutation testing 9% (elapsed: ~5m, remaining: ~46m) 66/666 tested (21 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~46m) 68/666 tested (22 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~46m) 70/666 tested (22 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~46m) 72/666 tested (22 survived, 0 timed out)
Mutation testing 11% (elapsed: ~5m, remaining: ~45m) 75/666 tested (22 survived, 0 timed out)
Mutation testing 11% (elapsed: ~6m, remaining: ~45m) 77/666 tested (23 survived, 0 timed out)
Mutation testing 11% (elapsed: ~6m, remaining: ~45m) 79/666 tested (24 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~45m) 81/666 tested (24 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~45m) 83/666 tested (24 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~45m) 85/666 tested (24 survived, 0 timed out)
Mutation testing 13% (elapsed: ~6m, remaining: ~45m) 87/666 tested (25 survived, 0 timed out)
Mutation testing 13% (elapsed: ~7m, remaining: ~44m) 90/666 tested (25 survived, 0 timed out)
Mutation testing 13% (elapsed: ~7m, remaining: ~44m) 92/666 tested (25 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~44m) 94/666 tested (25 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~44m) 96/666 tested (26 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~44m) 98/666 tested (26 survived, 0 timed out)
Mutation testing 15% (elapsed: ~7m, remaining: ~44m) 100/666 tested (26 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~44m) 102/666 tested (27 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~44m) 104/666 tested (27 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~44m) 106/666 tested (27 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~43m) 109/666 tested (27 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~43m) 111/666 tested (27 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~43m) 113/666 tested (27 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~43m) 115/666 tested (27 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~43m) 117/666 tested (27 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~42m) 119/666 tested (27 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~42m) 121/666 tested (28 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~42m) 123/666 tested (28 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~42m) 126/666 tested (28 survived, 0 timed out)
Mutation testing 19% (elapsed: ~10m, remaining: ~42m) 128/666 tested (28 survived, 0 timed out)
Mutation testing 19% (elapsed: ~10m, remaining: ~41m) 130/666 tested (29 survived, 0 timed out)
Mutation testing 19% (elapsed: ~10m, remaining: ~41m) 132/666 tested (29 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~41m) 134/666 tested (29 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~41m) 136/666 tested (30 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~41m) 138/666 tested (32 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~41m) 140/666 tested (33 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~40m) 143/666 tested (33 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~40m) 145/666 tested (33 survived, 0 timed out)
Mutation testing 22% (elapsed: ~11m, remaining: ~40m) 147/666 tested (35 survived, 0 timed out)
Mutation testing 22% (elapsed: ~11m, remaining: ~40m) 149/666 tested (35 survived, 0 timed out)
Mutation testing 22% (elapsed: ~11m, remaining: ~40m) 151/666 tested (36 survived, 0 timed out)
Mutation testing 22% (elapsed: ~12m, remaining: ~40m) 153/666 tested (37 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~40m) 155/666 tested (37 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~39m) 157/666 tested (37 survived, 0 timed out)
Mutation testing 24% (elapsed: ~12m, remaining: ~39m) 160/666 tested (37 survived, 0 timed out)
Mutation testing 24% (elapsed: ~12m, remaining: ~39m) 162/666 tested (38 survived, 0 timed out)
Mutation testing 24% (elapsed: ~12m, remaining: ~39m) 164/666 tested (38 survived, 0 timed out)
Mutation testing 24% (elapsed: ~13m, remaining: ~39m) 166/666 tested (39 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~39m) 168/666 tested (39 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~38m) 170/666 tested (39 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~38m) 172/666 tested (39 survived, 0 timed out)
Mutation testing 26% (elapsed: ~13m, remaining: ~38m) 175/666 tested (41 survived, 0 timed out)
Mutation testing 26% (elapsed: ~13m, remaining: ~38m) 177/666 tested (42 survived, 0 timed out)
Mutation testing 26% (elapsed: ~14m, remaining: ~38m) 179/666 tested (42 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~37m) 181/666 tested (42 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~37m) 183/666 tested (42 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~37m) 185/666 tested (42 survived, 0 timed out)
Mutation testing 28% (elapsed: ~14m, remaining: ~37m) 187/666 tested (42 survived, 0 timed out)
Mutation testing 28% (elapsed: ~14m, remaining: ~37m) 189/666 tested (42 survived, 0 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~37m) 190/666 tested (42 survived, 1 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~37m) 191/666 tested (43 survived, 1 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~37m) 192/666 tested (43 survived, 2 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~37m) 193/666 tested (43 survived, 3 timed out)
Mutation testing 29% (elapsed: ~15m, remaining: ~37m) 195/666 tested (43 survived, 3 timed out)
Mutation testing 29% (elapsed: ~15m, remaining: ~37m) 197/666 tested (44 survived, 3 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~37m) 200/666 tested (44 survived, 3 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~37m) 202/666 tested (44 survived, 3 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~36m) 204/666 tested (44 survived, 3 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~36m) 206/666 tested (45 survived, 3 timed out)
Mutation testing 31% (elapsed: ~16m, remaining: ~36m) 208/666 tested (45 survived, 3 timed out)
Mutation testing 31% (elapsed: ~16m, remaining: ~36m) 210/666 tested (45 survived, 3 timed out)
Mutation testing 31% (elapsed: ~17m, remaining: ~36m) 212/666 tested (45 survived, 3 timed out)
Mutation testing 32% (elapsed: ~17m, remaining: ~36m) 214/666 tested (45 survived, 3 timed out)
Mutation testing 32% (elapsed: ~17m, remaining: ~35m) 217/666 tested (45 survived, 3 timed out)
Mutation testing 32% (elapsed: ~17m, remaining: ~35m) 219/666 tested (45 survived, 3 timed out)
Mutation testing 33% (elapsed: ~17m, remaining: ~35m) 221/666 tested (46 survived, 3 timed out)
Mutation testing 33% (elapsed: ~17m, remaining: ~35m) 221/666 tested (46 survived, 3 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~36m) 222/666 tested (46 survived, 4 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~35m) 224/666 tested (46 survived, 5 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~36m) 224/666 tested (46 survived, 5 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~36m) 226/666 tested (47 survived, 6 timed out)
Mutation testing 34% (elapsed: ~18m, remaining: ~36m) 227/666 tested (47 survived, 7 timed out)
Mutation testing 34% (elapsed: ~18m, remaining: ~36m) 228/666 tested (47 survived, 7 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~36m) 230/666 tested (47 survived, 8 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~36m) 230/666 tested (47 survived, 8 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~36m) 232/666 tested (48 survived, 9 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~36m) 233/666 tested (48 survived, 10 timed out)
Mutation testing 35% (elapsed: ~19m, remaining: ~36m) 235/666 tested (48 survived, 10 timed out)
Mutation testing 35% (elapsed: ~19m, remaining: ~35m) 237/666 tested (48 survived, 10 timed out)
Mutation testing 35% (elapsed: ~20m, remaining: ~35m) 239/666 tested (48 survived, 10 timed out)
Mutation testing 36% (elapsed: ~20m, remaining: ~35m) 241/666 tested (48 survived, 10 timed out)
Mutation testing 36% (elapsed: ~20m, remaining: ~35m) 243/666 tested (48 survived, 10 timed out)
Mutation testing 36% (elapsed: ~20m, remaining: ~35m) 246/666 tested (48 survived, 10 timed out)
Mutation testing 36% (elapsed: ~20m, remaining: ~35m) 246/666 tested (48 survived, 10 timed out)
Mutation testing 37% (elapsed: ~20m, remaining: ~35m) 248/666 tested (48 survived, 11 timed out)
Mutation testing 37% (elapsed: ~21m, remaining: ~34m) 250/666 tested (48 survived, 11 timed out)
Mutation testing 37% (elapsed: ~21m, remaining: ~34m) 251/666 tested (48 survived, 12 timed out)
Mutation testing 37% (elapsed: ~21m, remaining: ~34m) 253/666 tested (48 survived, 12 timed out)
Mutation testing 38% (elapsed: ~21m, remaining: ~34m) 255/666 tested (49 survived, 12 timed out)
Mutation testing 38% (elapsed: ~21m, remaining: ~34m) 257/666 tested (49 survived, 12 timed out)
Mutation testing 38% (elapsed: ~21m, remaining: ~34m) 259/666 tested (49 survived, 12 timed out)
Mutation testing 39% (elapsed: ~22m, remaining: ~34m) 261/666 tested (49 survived, 12 timed out)
Mutation testing 39% (elapsed: ~22m, remaining: ~33m) 264/666 tested (50 survived, 12 timed out)
Mutation testing 39% (elapsed: ~22m, remaining: ~33m) 266/666 tested (50 survived, 12 timed out)
Mutation testing 40% (elapsed: ~22m, remaining: ~33m) 268/666 tested (50 survived, 12 timed out)
Mutation testing 40% (elapsed: ~22m, remaining: ~33m) 270/666 tested (50 survived, 12 timed out)
Mutation testing 40% (elapsed: ~22m, remaining: ~33m) 272/666 tested (50 survived, 12 timed out)
Mutation testing 41% (elapsed: ~23m, remaining: ~32m) 274/666 tested (52 survived, 12 timed out)
Mutation testing 41% (elapsed: ~23m, remaining: ~32m) 276/666 tested (53 survived, 12 timed out)
Mutation testing 41% (elapsed: ~23m, remaining: ~32m) 278/666 tested (55 survived, 12 timed out)
Mutation testing 42% (elapsed: ~23m, remaining: ~32m) 280/666 tested (56 survived, 12 timed out)
Mutation testing 42% (elapsed: ~23m, remaining: ~32m) 282/666 tested (58 survived, 12 timed out)
Mutation testing 42% (elapsed: ~23m, remaining: ~31m) 285/666 tested (59 survived, 12 timed out)
Mutation testing 43% (elapsed: ~24m, remaining: ~31m) 287/666 tested (59 survived, 12 timed out)
Mutation testing 43% (elapsed: ~24m, remaining: ~31m) 289/666 tested (59 survived, 12 timed out)
Mutation testing 43% (elapsed: ~24m, remaining: ~31m) 291/666 tested (59 survived, 12 timed out)
Mutation testing 43% (elapsed: ~24m, remaining: ~31m) 293/666 tested (59 survived, 12 timed out)
Mutation testing 44% (elapsed: ~24m, remaining: ~31m) 295/666 tested (59 survived, 12 timed out)
Mutation testing 44% (elapsed: ~24m, remaining: ~30m) 297/666 tested (60 survived, 12 timed out)
Mutation testing 44% (elapsed: ~25m, remaining: ~30m) 299/666 tested (61 survived, 12 timed out)
Mutation testing 45% (elapsed: ~25m, remaining: ~30m) 301/666 tested (63 survived, 12 timed out)
Mutation testing 45% (elapsed: ~25m, remaining: ~30m) 303/666 tested (63 survived, 12 timed out)
Mutation testing 45% (elapsed: ~25m, remaining: ~30m) 305/666 tested (63 survived, 12 timed out)
Mutation testing 46% (elapsed: ~25m, remaining: ~29m) 308/666 tested (64 survived, 12 timed out)
Mutation testing 46% (elapsed: ~25m, remaining: ~29m) 310/666 tested (66 survived, 12 timed out)
Mutation testing 46% (elapsed: ~26m, remaining: ~29m) 312/666 tested (67 survived, 12 timed out)
Mutation testing 47% (elapsed: ~26m, remaining: ~29m) 314/666 tested (67 survived, 12 timed out)
Mutation testing 47% (elapsed: ~26m, remaining: ~29m) 316/666 tested (67 survived, 12 timed out)
Mutation testing 47% (elapsed: ~26m, remaining: ~29m) 318/666 tested (67 survived, 12 timed out)
Mutation testing 48% (elapsed: ~26m, remaining: ~28m) 320/666 tested (67 survived, 12 timed out)
Mutation testing 48% (elapsed: ~26m, remaining: ~28m) 322/666 tested (67 survived, 12 timed out)
Mutation testing 48% (elapsed: ~27m, remaining: ~28m) 324/666 tested (69 survived, 12 timed out)
Mutation testing 48% (elapsed: ~27m, remaining: ~28m) 325/666 tested (69 survived, 13 timed out)
Mutation testing 48% (elapsed: ~27m, remaining: ~28m) 325/666 tested (69 survived, 13 timed out)
Mutation testing 49% (elapsed: ~27m, remaining: ~28m) 327/666 tested (69 survived, 14 timed out)
Mutation testing 49% (elapsed: ~27m, remaining: ~28m) 329/666 tested (69 survived, 14 timed out)
Mutation testing 49% (elapsed: ~27m, remaining: ~28m) 332/666 tested (70 survived, 14 timed out)
Mutation testing 50% (elapsed: ~28m, remaining: ~28m) 333/666 tested (71 survived, 14 timed out)
Mutation testing 50% (elapsed: ~28m, remaining: ~27m) 334/666 tested (71 survived, 15 timed out)
Mutation testing 50% (elapsed: ~28m, remaining: ~27m) 336/666 tested (73 survived, 15 timed out)
Mutation testing 50% (elapsed: ~28m, remaining: ~27m) 337/666 tested (73 survived, 16 timed out)
Mutation testing 50% (elapsed: ~28m, remaining: ~27m) 339/666 tested (74 survived, 16 timed out)
Mutation testing 51% (elapsed: ~28m, remaining: ~27m) 341/666 tested (75 survived, 16 timed out)
Mutation testing 51% (elapsed: ~29m, remaining: ~27m) 343/666 tested (75 survived, 16 timed out)
Mutation testing 51% (elapsed: ~29m, remaining: ~27m) 345/666 tested (75 survived, 16 timed out)
Mutation testing 51% (elapsed: ~29m, remaining: ~27m) 346/666 tested (75 survived, 17 timed out)
Mutation testing 52% (elapsed: ~29m, remaining: ~26m) 348/666 tested (76 survived, 17 timed out)
Mutation testing 52% (elapsed: ~29m, remaining: ~26m) 350/666 tested (77 survived, 17 timed out)
Mutation testing 52% (elapsed: ~29m, remaining: ~26m) 352/666 tested (77 survived, 17 timed out)
Mutation testing 53% (elapsed: ~30m, remaining: ~26m) 354/666 tested (77 survived, 17 timed out)
Mutation testing 53% (elapsed: ~30m, remaining: ~26m) 357/666 tested (77 survived, 17 timed out)
Mutation testing 53% (elapsed: ~30m, remaining: ~25m) 359/666 tested (77 survived, 17 timed out)
Mutation testing 54% (elapsed: ~30m, remaining: ~25m) 361/666 tested (78 survived, 17 timed out)
Mutation testing 54% (elapsed: ~30m, remaining: ~25m) 363/666 tested (79 survived, 17 timed out)
Mutation testing 54% (elapsed: ~30m, remaining: ~25m) 365/666 tested (79 survived, 17 timed out)
Mutation testing 55% (elapsed: ~31m, remaining: ~25m) 367/666 tested (79 survived, 17 timed out)
Mutation testing 55% (elapsed: ~31m, remaining: ~25m) 369/666 tested (79 survived, 17 timed out)
Mutation testing 55% (elapsed: ~31m, remaining: ~24m) 372/666 tested (79 survived, 17 timed out)
Mutation testing 56% (elapsed: ~31m, remaining: ~24m) 374/666 tested (80 survived, 17 timed out)
Mutation testing 56% (elapsed: ~31m, remaining: ~24m) 376/666 tested (82 survived, 17 timed out)
Mutation testing 56% (elapsed: ~31m, remaining: ~24m) 378/666 tested (84 survived, 17 timed out)
Mutation testing 57% (elapsed: ~32m, remaining: ~24m) 380/666 tested (84 survived, 17 timed out)
Mutation testing 57% (elapsed: ~32m, remaining: ~23m) 382/666 tested (84 survived, 17 timed out)
Mutation testing 57% (elapsed: ~32m, remaining: ~23m) 384/666 tested (84 survived, 17 timed out)
Mutation testing 57% (elapsed: ~32m, remaining: ~23m) 386/666 tested (84 survived, 17 timed out)
Mutation testing 58% (elapsed: ~32m, remaining: ~23m) 389/666 tested (84 survived, 17 timed out)
Mutation testing 58% (elapsed: ~32m, remaining: ~23m) 391/666 tested (85 survived, 17 timed out)
Mutation testing 59% (elapsed: ~33m, remaining: ~22m) 393/666 tested (85 survived, 17 timed out)
Mutation testing 59% (elapsed: ~33m, remaining: ~22m) 395/666 tested (86 survived, 17 timed out)
Mutation testing 59% (elapsed: ~33m, remaining: ~22m) 397/666 tested (86 survived, 17 timed out)
Mutation testing 59% (elapsed: ~33m, remaining: ~22m) 399/666 tested (86 survived, 17 timed out)
Mutation testing 60% (elapsed: ~33m, remaining: ~22m) 401/666 tested (86 survived, 17 timed out)
Mutation testing 60% (elapsed: ~33m, remaining: ~21m) 404/666 tested (86 survived, 17 timed out)
Mutation testing 60% (elapsed: ~34m, remaining: ~21m) 406/666 tested (86 survived, 17 timed out)
Mutation testing 61% (elapsed: ~34m, remaining: ~21m) 408/666 tested (86 survived, 17 timed out)
Mutation testing 61% (elapsed: ~34m, remaining: ~21m) 410/666 tested (87 survived, 17 timed out)
Mutation testing 61% (elapsed: ~34m, remaining: ~21m) 412/666 tested (88 survived, 17 timed out)
Mutation testing 62% (elapsed: ~34m, remaining: ~21m) 413/666 tested (88 survived, 17 timed out)
Mutation testing 62% (elapsed: ~34m, remaining: ~21m) 415/666 tested (88 survived, 18 timed out)
Mutation testing 62% (elapsed: ~35m, remaining: ~20m) 417/666 tested (88 survived, 18 timed out)
Mutation testing 62% (elapsed: ~35m, remaining: ~20m) 419/666 tested (88 survived, 18 timed out)
Mutation testing 63% (elapsed: ~35m, remaining: ~20m) 421/666 tested (88 survived, 18 timed out)
Mutation testing 63% (elapsed: ~35m, remaining: ~20m) 423/666 tested (88 survived, 18 timed out)
Mutation testing 63% (elapsed: ~35m, remaining: ~20m) 424/666 tested (88 survived, 19 timed out)
Mutation testing 63% (elapsed: ~35m, remaining: ~20m) 424/666 tested (88 survived, 19 timed out)
Mutation testing 63% (elapsed: ~36m, remaining: ~20m) 426/666 tested (88 survived, 20 timed out)
Mutation testing 64% (elapsed: ~36m, remaining: ~20m) 428/666 tested (88 survived, 20 timed out)
Mutation testing 64% (elapsed: ~36m, remaining: ~19m) 430/666 tested (88 survived, 20 timed out)
Mutation testing 64% (elapsed: ~36m, remaining: ~19m) 432/666 tested (88 survived, 20 timed out)
Mutation testing 65% (elapsed: ~36m, remaining: ~19m) 435/666 tested (88 survived, 20 timed out)
Mutation testing 65% (elapsed: ~36m, remaining: ~19m) 437/666 tested (89 survived, 20 timed out)
Mutation testing 65% (elapsed: ~37m, remaining: ~19m) 439/666 tested (89 survived, 20 timed out)
Mutation testing 66% (elapsed: ~37m, remaining: ~18m) 441/666 tested (89 survived, 20 timed out)
Mutation testing 66% (elapsed: ~37m, remaining: ~18m) 443/666 tested (89 survived, 20 timed out)
Mutation testing 66% (elapsed: ~37m, remaining: ~18m) 445/666 tested (89 survived, 20 timed out)
Mutation testing 67% (elapsed: ~37m, remaining: ~18m) 447/666 tested (89 survived, 20 timed out)
Mutation testing 67% (elapsed: ~37m, remaining: ~18m) 449/666 tested (90 survived, 20 timed out)
Mutation testing 67% (elapsed: ~38m, remaining: ~18m) 451/666 tested (90 survived, 20 timed out)
Mutation testing 68% (elapsed: ~38m, remaining: ~17m) 454/666 tested (90 survived, 20 timed out)
Mutation testing 68% (elapsed: ~38m, remaining: ~17m) 456/666 tested (91 survived, 20 timed out)
Mutation testing 68% (elapsed: ~38m, remaining: ~17m) 458/666 tested (92 survived, 20 timed out)
Mutation testing 69% (elapsed: ~38m, remaining: ~17m) 460/666 tested (93 survived, 20 timed out)
Mutation testing 69% (elapsed: ~38m, remaining: ~17m) 462/666 tested (93 survived, 20 timed out)
Mutation testing 69% (elapsed: ~39m, remaining: ~16m) 464/666 tested (93 survived, 20 timed out)
Mutation testing 69% (elapsed: ~39m, remaining: ~16m) 466/666 tested (93 survived, 20 timed out)
Mutation testing 70% (elapsed: ~39m, remaining: ~16m) 469/666 tested (93 survived, 20 timed out)
Mutation testing 70% (elapsed: ~39m, remaining: ~16m) 471/666 tested (93 survived, 20 timed out)
Mutation testing 71% (elapsed: ~39m, remaining: ~16m) 473/666 tested (93 survived, 20 timed out)
Mutation testing 71% (elapsed: ~39m, remaining: ~16m) 475/666 tested (94 survived, 20 timed out)
Mutation testing 71% (elapsed: ~40m, remaining: ~15m) 477/666 tested (96 survived, 20 timed out)
Mutation testing 71% (elapsed: ~40m, remaining: ~15m) 479/666 tested (97 survived, 20 timed out)
Mutation testing 72% (elapsed: ~40m, remaining: ~15m) 481/666 tested (97 survived, 20 timed out)
Mutation testing 72% (elapsed: ~40m, remaining: ~15m) 484/666 tested (97 survived, 20 timed out)
Mutation testing 72% (elapsed: ~40m, remaining: ~15m) 486/666 tested (97 survived, 20 timed out)
Mutation testing 73% (elapsed: ~40m, remaining: ~14m) 488/666 tested (98 survived, 20 timed out)
Mutation testing 73% (elapsed: ~41m, remaining: ~14m) 490/666 tested (99 survived, 20 timed out)
Mutation testing 73% (elapsed: ~41m, remaining: ~14m) 492/666 tested (99 survived, 20 timed out)
Mutation testing 74% (elapsed: ~41m, remaining: ~14m) 494/666 tested (99 survived, 20 timed out)
Mutation testing 74% (elapsed: ~41m, remaining: ~14m) 496/666 tested (99 survived, 20 timed out)
Mutation testing 74% (elapsed: ~41m, remaining: ~14m) 498/666 tested (99 survived, 20 timed out)
Mutation testing 75% (elapsed: ~41m, remaining: ~13m) 501/666 tested (99 survived, 20 timed out)
Mutation testing 75% (elapsed: ~42m, remaining: ~13m) 503/666 tested (99 survived, 20 timed out)
Mutation testing 75% (elapsed: ~42m, remaining: ~13m) 505/666 tested (99 survived, 20 timed out)
Mutation testing 76% (elapsed: ~42m, remaining: ~13m) 507/666 tested (99 survived, 20 timed out)
Mutation testing 76% (elapsed: ~42m, remaining: ~13m) 509/666 tested (99 survived, 20 timed out)
Mutation testing 76% (elapsed: ~42m, remaining: ~12m) 511/666 tested (99 survived, 20 timed out)
Mutation testing 77% (elapsed: ~42m, remaining: ~12m) 513/666 tested (99 survived, 20 timed out)
Mutation testing 77% (elapsed: ~43m, remaining: ~12m) 515/666 tested (99 survived, 20 timed out)
Mutation testing 77% (elapsed: ~43m, remaining: ~12m) 518/666 tested (99 survived, 20 timed out)
Mutation testing 78% (elapsed: ~43m, remaining: ~12m) 520/666 tested (99 survived, 20 timed out)
Mutation testing 78% (elapsed: ~43m, remaining: ~12m) 522/666 tested (99 survived, 20 timed out)
Mutation testing 78% (elapsed: ~43m, remaining: ~11m) 524/666 tested (99 survived, 20 timed out)
Mutation testing 78% (elapsed: ~43m, remaining: ~11m) 526/666 tested (99 survived, 20 timed out)
Mutation testing 79% (elapsed: ~44m, remaining: ~11m) 527/666 tested (99 survived, 20 timed out)
Mutation testing 79% (elapsed: ~44m, remaining: ~11m) 529/666 tested (100 survived, 21 timed out)
Mutation testing 79% (elapsed: ~44m, remaining: ~11m) 529/666 tested (100 survived, 21 timed out)
Mutation testing 79% (elapsed: ~44m, remaining: ~11m) 531/666 tested (100 survived, 22 timed out)
Mutation testing 80% (elapsed: ~44m, remaining: ~11m) 534/666 tested (100 survived, 22 timed out)
Mutation testing 80% (elapsed: ~44m, remaining: ~10m) 535/666 tested (100 survived, 22 timed out)
Mutation testing 80% (elapsed: ~45m, remaining: ~10m) 536/666 tested (100 survived, 23 timed out)
Mutation testing 80% (elapsed: ~45m, remaining: ~10m) 537/666 tested (100 survived, 24 timed out)
Mutation testing 80% (elapsed: ~45m, remaining: ~10m) 537/666 tested (100 survived, 24 timed out)
Mutation testing 80% (elapsed: ~45m, remaining: ~10m) 539/666 tested (100 survived, 25 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 540/666 tested (100 survived, 26 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 542/666 tested (101 survived, 26 timed out)
Mutation testing 81% (elapsed: ~46m, remaining: ~10m) 544/666 tested (102 survived, 26 timed out)
Mutation testing 81% (elapsed: ~46m, remaining: ~10m) 545/666 tested (102 survived, 26 timed out)
Mutation testing 81% (elapsed: ~46m, remaining: ~10m) 546/666 tested (102 survived, 27 timed out)
Mutation testing 82% (elapsed: ~46m, remaining: ~10m) 547/666 tested (102 survived, 28 timed out)
Mutation testing 82% (elapsed: ~46m, remaining: ~9m) 549/666 tested (102 survived, 28 timed out)
Mutation testing 82% (elapsed: ~46m, remaining: ~9m) 552/666 tested (102 survived, 28 timed out)
Mutation testing 83% (elapsed: ~47m, remaining: ~9m) 554/666 tested (102 survived, 28 timed out)
Mutation testing 83% (elapsed: ~47m, remaining: ~9m) 556/666 tested (102 survived, 28 timed out)
Mutation testing 83% (elapsed: ~47m, remaining: ~9m) 558/666 tested (102 survived, 28 timed out)
Mutation testing 84% (elapsed: ~47m, remaining: ~8m) 560/666 tested (102 survived, 28 timed out)
Mutation testing 84% (elapsed: ~47m, remaining: ~8m) 562/666 tested (102 survived, 28 timed out)
Mutation testing 84% (elapsed: ~47m, remaining: ~8m) 564/666 tested (102 survived, 28 timed out)
Mutation testing 85% (elapsed: ~48m, remaining: ~8m) 567/666 tested (102 survived, 28 timed out)
Mutation testing 85% (elapsed: ~48m, remaining: ~8m) 569/666 tested (102 survived, 28 timed out)
Mutation testing 85% (elapsed: ~48m, remaining: ~8m) 571/666 tested (104 survived, 28 timed out)
Mutation testing 86% (elapsed: ~48m, remaining: ~7m) 573/666 tested (104 survived, 28 timed out)
Mutation testing 86% (elapsed: ~48m, remaining: ~7m) 575/666 tested (104 survived, 28 timed out)
Mutation testing 86% (elapsed: ~48m, remaining: ~7m) 577/666 tested (104 survived, 28 timed out)
Mutation testing 86% (elapsed: ~49m, remaining: ~7m) 579/666 tested (105 survived, 28 timed out)
Mutation testing 87% (elapsed: ~49m, remaining: ~7m) 581/666 tested (106 survived, 28 timed out)
Mutation testing 87% (elapsed: ~49m, remaining: ~6m) 584/666 tested (106 survived, 28 timed out)
Mutation testing 87% (elapsed: ~49m, remaining: ~6m) 586/666 tested (106 survived, 28 timed out)
Mutation testing 88% (elapsed: ~49m, remaining: ~6m) 588/666 tested (106 survived, 28 timed out)
Mutation testing 88% (elapsed: ~49m, remaining: ~6m) 590/666 tested (106 survived, 28 timed out)
Mutation testing 88% (elapsed: ~50m, remaining: ~6m) 592/666 tested (106 survived, 28 timed out)
Mutation testing 89% (elapsed: ~50m, remaining: ~6m) 594/666 tested (106 survived, 28 timed out)
Mutation testing 89% (elapsed: ~50m, remaining: ~5m) 596/666 tested (107 survived, 28 timed out)
Mutation testing 89% (elapsed: ~50m, remaining: ~5m) 599/666 tested (109 survived, 28 timed out)
Mutation testing 89% (elapsed: ~50m, remaining: ~5m) 599/666 tested (109 survived, 28 timed out)
Mutation testing 90% (elapsed: ~50m, remaining: ~5m) 600/666 tested (109 survived, 29 timed out)
Mutation testing 90% (elapsed: ~51m, remaining: ~5m) 602/666 tested (110 survived, 30 timed out)
Mutation testing 90% (elapsed: ~51m, remaining: ~5m) 604/666 tested (111 survived, 30 timed out)
Mutation testing 90% (elapsed: ~51m, remaining: ~5m) 605/666 tested (111 survived, 30 timed out)
Mutation testing 91% (elapsed: ~51m, remaining: ~5m) 607/666 tested (112 survived, 31 timed out)
Mutation testing 91% (elapsed: ~51m, remaining: ~4m) 608/666 tested (112 survived, 31 timed out)
Mutation testing 91% (elapsed: ~51m, remaining: ~4m) 609/666 tested (112 survived, 32 timed out)
Mutation testing 91% (elapsed: ~52m, remaining: ~4m) 610/666 tested (112 survived, 33 timed out)
Mutation testing 91% (elapsed: ~52m, remaining: ~4m) 610/666 tested (112 survived, 33 timed out)
Mutation testing 91% (elapsed: ~52m, remaining: ~4m) 612/666 tested (112 survived, 34 timed out)
Mutation testing 92% (elapsed: ~52m, remaining: ~4m) 614/666 tested (113 survived, 34 timed out)
Mutation testing 92% (elapsed: ~52m, remaining: ~4m) 617/666 tested (113 survived, 34 timed out)
Mutation testing 92% (elapsed: ~52m, remaining: ~4m) 619/666 tested (115 survived, 34 timed out)
Mutation testing 93% (elapsed: ~53m, remaining: ~3m) 621/666 tested (116 survived, 34 timed out)
Mutation testing 93% (elapsed: ~53m, remaining: ~3m) 623/666 tested (116 survived, 34 timed out)
Mutation testing 93% (elapsed: ~53m, remaining: ~3m) 625/666 tested (117 survived, 34 timed out)
Mutation testing 94% (elapsed: ~53m, remaining: ~3m) 627/666 tested (118 survived, 34 timed out)
Mutation testing 94% (elapsed: ~53m, remaining: ~3m) 630/666 tested (118 survived, 34 timed out)
Mutation testing 94% (elapsed: ~53m, remaining: ~2m) 632/666 tested (118 survived, 34 timed out)
Mutation testing 95% (elapsed: ~54m, remaining: ~2m) 634/666 tested (118 survived, 34 timed out)
Mutation testing 95% (elapsed: ~54m, remaining: ~2m) 636/666 tested (118 survived, 34 timed out)
Mutation testing 95% (elapsed: ~54m, remaining: ~2m) 638/666 tested (118 survived, 34 timed out)
Mutation testing 96% (elapsed: ~54m, remaining: ~2m) 640/666 tested (118 survived, 34 timed out)
Mutation testing 96% (elapsed: ~54m, remaining: ~2m) 642/666 tested (118 survived, 34 timed out)
Mutation testing 96% (elapsed: ~54m, remaining: ~1m) 644/666 tested (118 survived, 34 timed out)
Mutation testing 97% (elapsed: ~55m, remaining: ~1m) 647/666 tested (119 survived, 34 timed out)
Mutation testing 97% (elapsed: ~55m, remaining: ~1m) 649/666 tested (120 survived, 34 timed out)
Mutation testing 97% (elapsed: ~55m, remaining: ~1m) 651/666 tested (120 survived, 34 timed out)
Mutation testing 98% (elapsed: ~55m, remaining: ~1m) 653/666 tested (120 survived, 34 timed out)
Mutation testing 98% (elapsed: ~55m, remaining: <1m) 655/666 tested (120 survived, 34 timed out)
Mutation testing 98% (elapsed: ~55m, remaining: <1m) 657/666 tested (120 survived, 34 timed out)
Mutation testing 98% (elapsed: ~56m, remaining: <1m) 659/666 tested (120 survived, 34 timed out)
Mutation testing 99% (elapsed: ~56m, remaining: <1m) 662/666 tested (121 survived, 34 timed out)
Mutation testing 99% (elapsed: ~56m, remaining: <1m) 664/666 tested (122 survived, 34 timed out)

All tests
  ✓ All tests (killed 509)

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (Object.keys(a).length === 0) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (a === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (b === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (Array.isArray(b)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:20:32
-       let attributes = cloneDeep(b);
+       let attributes = cloneDeep(Object.assign({}, a, b));

[Survived] PrecomputedMutator
src/AttributeMap.ts:21:9
-       if (!keepNull) {
+       if (keepNull === false) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:30:11
-         if (a[key] !== undefined && b[key] === undefined) {
+         if (a[key] !== null && b[key] === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:41:9
-       if (typeof a !== 'object') {
+       if (a === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:41:9
-       if (typeof a !== 'object') {
+       if (Array.isArray(a)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (b === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (typeof b !== 'object' && b !== null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:48:27
-         .concat(Object.keys(b))
+         .concat(Object.keys(b || []))

[Survived] PrecomputedMutator
src/AttributeMap.ts:55:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(Object.assign({}, attributes)).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/AttributeMap.ts:70:11
-         if (attr[key] !== base[key] && base[key] === undefined) {
+         if (attr[key] !== undefined && base[key] === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:85:9
-       if (typeof b !== 'object') {
+       if (b === undefined || typeof b !== 'object') {

[Survived] PrecomputedMutator
src/AttributeMap.ts:97:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(Object.assign({}, b)).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/Delta.ts:8:24
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCodePoint(0); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(1); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(String.fromCharCode(Math.floor(Math.random() * 10))); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(String.fromCharCode(65535)); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:20:7
-     if (typeof a !== 'object' || a === null) {
+     if (typeof a !== 'object' && a !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:20:7
-     if (typeof a !== 'object' || a === null) {
+     if (typeof a !== 'object' || a === true) {

[Survived] PrecomputedMutator
src/Delta.ts:51:9
-       if (!handler) {
+       if (typeof handler === 'undefined') {

[Survived] PrecomputedMutator
src/Delta.ts:60:9
-       if (Array.isArray(ops)) {
+       if (ops instanceof Array) {

[Survived] PrecomputedMutator
src/Delta.ts:62:16
-       } else if (ops != null && Array.isArray(ops.ops)) {
+       } else if (ops !== undefined && Array.isArray(ops.ops)) {

[Survived] PrecomputedMutator
src/Delta.ts:81:19
-         Object.keys(attributes).length > 0
+         Object.keys(attributes || {}).length > 0

[Survived] PrecomputedMutator
src/Delta.ts:89:9
-       if (length <= 0) {
+       if (length === 0) {

[Survived] PrecomputedMutator
src/Delta.ts:135:11
-         if (isEqual(newOp.attributes, lastOp.attributes)) {
+         if (JSON.stringify(newOp.attributes) === JSON.stringify(lastOp.attributes)) {

[Survived] PrecomputedMutator
src/Delta.ts:141:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.attributes !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:150:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.attributes !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:150:15
-             if (typeof newOp.attributes === 'object') {
+             if (typeof newOp.attributes !== 'undefined') {

[Survived] PrecomputedMutator
src/Delta.ts:157:9
-       if (index === this.ops.length) {
+       if (index >= this.ops.length) {

[Survived] PrecomputedMutator
src/Delta.ts:157:9
-       if (index === this.ops.length) {
+       if (index > this.ops.length) {

[Survived] PrecomputedMutator
src/Delta.ts:160:7
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, '0', newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:7
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, -1, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:23
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(-1, 0, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:30
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, -1, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:178:22
-       this.ops.forEach(predicate);
+       this.ops.forEach((op, index) => predicate(op));

[Survived] PrecomputedMutator
src/Delta.ts:189:32
-         const target = predicate(op) ? passed : failed;
+         const target = predicate(op || {}) ? passed : failed;

[Survived] PrecomputedMutator
src/Delta.ts:199:39
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, 0);

[Survived] PrecomputedMutator
src/Delta.ts:199:39
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, null);

[Survived] PrecomputedMutator
src/Delta.ts:204:11
-         if (elem.insert) {
+         if (elem['insert']) {

[Survived] PrecomputedMutator
src/Delta.ts:223:12
-       while (index < end && iter.hasNext()) {
+       while (index < end && iter.peek() !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:226:28
-           nextOp = iter.next(start - index);
+           nextOp = iter.next(Math.abs(start - index));

[Survived] PrecomputedMutator
src/Delta.ts:242:7
-         firstOther != null &&
-         typeof firstOther.retain === 'number' &&
-         firstOther.attributes == null
+         firstOther?.retain !== undefined && firstOther.attributes === null

[Survived] PrecomputedMutator
src/Delta.ts:259:12
-       while (thisIter.hasNext() || otherIter.hasNext()) {
+       while (thisIter.peek() !== null || otherIter.peek() !== null) {

[Survived] PrecomputedMutator
src/Delta.ts:261:20
-           delta.push(otherIter.next());
+           delta.push(otherIter.next(0));

[Survived] PrecomputedMutator
src/Delta.ts:263:20
-           delta.push(thisIter.next());
+           delta.push(thisIter.next(0));

[Survived] PrecomputedMutator
src/Delta.ts:268:13
-           if (otherOp.retain) {
+           if (otherOp.retain || 0) {

[Survived] PrecomputedMutator
src/Delta.ts:275:19
-                 if (thisOp.retain == null) {
+                 if (thisOp.retain === undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:305:22
-             delta.push(newOp);
+             delta.push(Object.assign({}, newOp));

[Survived] PrecomputedMutator
src/Delta.ts:309:13
-               !otherIter.hasNext() &&
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               thisIter.peekLength() === 0

[Survived] PrecomputedMutator
src/Delta.ts:309:13
-               !otherIter.hasNext() &&
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 2], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(newOp, delta.ops[delta.ops.length - 1])

[Survived] PrecomputedMutator
src/Delta.ts:310:21
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:54
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 1], {})

[Survived] PrecomputedMutator
src/Delta.ts:310:54
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 1], null)

[Survived] PrecomputedMutator
src/Delta.ts:310:54
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 1], thisOp)

[Survived] PrecomputedMutator
src/Delta.ts:331:29
-       const delta = new Delta(this.ops.slice());
+       const delta = new Delta(this.ops.concat());

[Survived] PrecomputedMutator
src/Delta.ts:332:9
-       if (other.ops.length > 0) {
+       if (other.ops.length >= 1) {

[Survived] PrecomputedMutator
src/Delta.ts:332:9
-       if (other.ops.length > 0) {
+       if (other.ops.length !== 0) {

[Survived] PrecomputedMutator
src/Delta.ts:332:9
-       if (other.ops.length > 0) {
+       if (Array.isArray(other.ops) && other.ops.length > 0) {

[Survived] PrecomputedMutator
src/Delta.ts:340:9
-       if (this.ops === other.ops) {
+       if (this.ops[0] === other.ops[0]) {

[Survived] PrecomputedMutator
src/Delta.ts:340:9
-       if (this.ops === other.ops) {
+       if (JSON.stringify(this.ops) === JSON.stringify(other.ops)) {

[Survived] PrecomputedMutator
src/Delta.ts:346:15
-             if (op.insert != null) {
+             if (op.insert !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:346:15
-             if (op.insert != null) {
+             if (op.insert !== null && op.insert !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:355:53
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], null);

[Survived] PrecomputedMutator
src/Delta.ts:360:14
-         while (length > 0) {
+         while (length >= 1) {

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:364:33
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(thisIter.peekLength(), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:33
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(Infinity, length);

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), thisIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), Infinity);

[Survived] PrecomputedMutator
src/Delta.ts:368:24
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(1);

[Survived] PrecomputedMutator
src/Delta.ts:368:41
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, 100);

[Survived] PrecomputedMutator
src/Delta.ts:368:41
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:378:42
-               const thisOp = thisIter.next(opLength);
+               const thisOp = thisIter.next(Math.max(opLength, 1));

[Survived] PrecomputedMutator
src/Delta.ts:378:42
-               const thisOp = thisIter.next(opLength);
+               const thisOp = thisIter.next(otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:380:25
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert || '', otherOp.insert)) {

[Survived] PrecomputedMutator
src/Delta.ts:380:25
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp['insert'], otherOp.insert)) {

[Survived] PrecomputedMutator
src/Delta.ts:380:40
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert, otherOp.insert || '')) {

[Survived] PrecomputedMutator
src/Delta.ts:380:40
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert, otherOp.insert ?? '<REPLACEMENT_VALUE>')) {

[Survived] PrecomputedMutator
src/Delta.ts:380:40
-               if (isEqual(thisOp.insert, otherOp.insert)) {
+               if (isEqual(thisOp.insert, otherOp.hasOwnProperty('insert') ? otherOp.insert : '<REPLACEMENT_VALUE>')) {

[Survived] PrecomputedMutator
src/Delta.ts:407:12
-       while (iter.hasNext()) {
+       while (iter.peek() !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:408:11
-         if (iter.peekType() !== 'insert') {
+         if (iter.peekType() !== 'insert' && iter.peekType() !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:417:11
-         if (index < 0) {
+         if (index <= -1) {

[Survived] PrecomputedMutator
src/Delta.ts:418:19
-           line.push(iter.next());
+           line.push(iter.next(1));

[Survived] PrecomputedMutator
src/Delta.ts:429:9
-       if (line.length() > 0) {
+       if (line.constructor.prototype.length.call(line) > 0) {

[Survived] PrecomputedMutator
src/Delta.ts:437:11
-         if (op.insert) {
+         if (op.insert || '') {

[Survived] PrecomputedMutator
src/Delta.ts:439:18
-         } else if (typeof op.retain === 'number' && op.attributes == null) {
+         } else if (typeof op.retain === 'number' && op.attributes === undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:440:25
-           inverted.retain(op.retain);
+           inverted.retain(op.retain || 0);

[Survived] PrecomputedMutator
src/Delta.ts:440:25
-           inverted.retain(op.retain);
+           inverted.retain(this.ops[0].retain);

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.retain && op.attributes || {}) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.retain !== undefined && op.attributes) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.attributes || op.retain) {

[Survived] PrecomputedMutator
src/Delta.ts:450:25
-                 Op.length(baseOp),
+                 Op.length(Object.assign({}, baseOp)),

[Survived] PrecomputedMutator
src/Delta.ts:456:18
-         } else if (typeof op.retain === 'object' && op.retain !== null) {
+         } else if (op.retain !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:456:18
-         } else if (typeof op.retain === 'object' && op.retain !== null) {
+         } else if (op.retain && typeof op.retain === 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:486:12
-       while (thisIter.hasNext() || otherIter.hasNext()) {
+       while (otherIter.peek() !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:491:32
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter.next(0)));

[Survived] PrecomputedMutator
src/Delta.ts:491:32
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter['next']()));

[Survived] PrecomputedMutator
src/Delta.ts:511:13
-               typeof thisData === 'object' &&
-               thisData !== null &&
-               typeof otherData === 'object' &&
-               otherData !== null
+               Object.keys(thisData).length > 0 && Object.keys(otherData).length > 0

[Survived] PrecomputedMutator
src/Delta.ts:516:43
-               const embedType = Object.keys(thisData)[0];
+               const embedType = Object.keys(thisData || {})[0];

[Survived] PrecomputedMutator
src/Delta.ts:519:19
-                 if (handler) {
+                 if (handler.transform(thisData[embedType], otherData[embedType], !priority)) {

[Survived] PrecomputedMutator
src/Delta.ts:550:12
-       while (thisIter.hasNext() && offset <= index) {
+       while (thisIter.peekLength() > 0 && offset <= index) {

[Survived] PrecomputedMutator
src/Delta.ts:557:18
-         } else if (nextType === 'insert' && (offset < index || !priority)) {
+         } else if (nextType === 'insert' && (offset + 1 < index || !priority)) {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (typeof global === 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (global.module !== undefined) {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (op.retain !== undefined) {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (typeof op.retain === 'string') {

[Survived] PrecomputedMutator
src/OpIterator.ts:19:9
-       if (!length) {
+       if (typeof length === 'undefined') {

[Survived] PrecomputedMutator
src/OpIterator.ts:25:34
-         const opLength = Op.length(nextOp);
+         const opLength = Op.length(this.ops.filter(op => op !== null)[this.index]);

[Survived] PrecomputedMutator
src/OpIterator.ts:37:13
-           if (nextOp.attributes) {
+           if (nextOp['attributes']) {

[Survived] PrecomputedMutator
src/OpIterator.ts:37:13
-           if (nextOp.attributes) {
+           if (nextOp.hasOwnProperty('attributes')) {

[Survived] PrecomputedMutator
src/OpIterator.ts:37:13
-           if (nextOp.attributes) {
+           if (Reflect.get(nextOp, 'attributes')) {

[Survived] PrecomputedMutator
src/OpIterator.ts:43:11
-             typeof nextOp.retain === 'object' &&
-             nextOp.retain !== null
+             nextOp.hasOwnProperty('retain')

[Survived] PrecomputedMutator
src/OpIterator.ts:43:11
-             typeof nextOp.retain === 'object' &&
-             nextOp.retain !== null
+             nextOp.retain !== undefined

[Survived] PrecomputedMutator
src/OpIterator.ts:80:9
-           typeof op.retain === 'number' ||
-           (typeof op.retain === 'object' && op.retain !== null)
+           op.retain !== undefined

[Survived] PrecomputedMutator
src/OpIterator.ts:92:9
-       if (!this.hasNext()) {
+       if (this.index >= this.ops.length) {

[Survived] PrecomputedMutator
src/OpIterator.ts:100:35
-         const rest = this.ops.slice(this.index);
+         const rest = this.ops.slice(index + 1);

[Survived] PrecomputedMutator
src/OpIterator.ts:103:28
-         return [next].concat(rest);
+         return [next].concat(this.ops.slice(this.index + 1));

[Survived] PrecomputedMutator
src/OpIterator.ts:103:28
-         return [next].concat(rest);
+         return [next].concat(this.ops.filter(op => op !== this.ops[this.index]));

Ran 0.95 tests per mutant on average.
-----------------|---------|----------|-----------|------------|----------|----------|
File             | % score | # killed | # timeout | # survived | # no cov | # errors |
-----------------|---------|----------|-----------|------------|----------|----------|
All files        |   81.53 |      509 |        34 |        123 |        0 |        0 |
 AttributeMap.ts |   72.88 |       43 |         0 |         16 |        0 |        0 |
 Delta.ts        |   82.78 |      419 |        28 |         93 |        0 |        0 |
 Op.ts           |   50.00 |        0 |         2 |          2 |        0 |        0 |
 OpIterator.ts   |   80.95 |       47 |         4 |         12 |        0 |        0 |
-----------------|---------|----------|-----------|------------|----------|----------|
[32m09:43:04 (2862) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/delta/reports/mutation/mutation.html
[32m09:43:04 (2862) INFO MutationTestExecutor[39m Done in 56 minutes 36 seconds.

real	56m38.172s
user	81m25.430s
sys	3m22.060s
