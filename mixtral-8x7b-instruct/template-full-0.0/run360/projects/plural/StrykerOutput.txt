*** using precomputed mutations ***
[32m00:54:20 (2579) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m00:54:20 (2579) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m00:54:20 (2579) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m00:54:20 (2579) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m00:54:20 (2579) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m00:54:20 (2579) INFO ProjectReader[39m Found 1 of 630 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 226 mutants from MUTATION_TESTING/template-full_mixtral-8x7b-instruct_0.0/mutants.json ***
Mutant 0 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(10, -1)
Mutant 1 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice('', -1)
Mutant 2 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(8, 'length')
Mutant 3 in index.js: obj replaced with null
Mutant 4 in index.js: 8 replaced with 10
Mutant 5 in index.js: -1 replaced with '-0'
Mutant 6 in index.js: -1 replaced with Object.prototype.toString.call(obj).slice(8, 0)
Mutant 7 in index.js: rules.unshift replaced with rules.shift
Mutant 8 in index.js: rules.unshift replaced with rules.push
Mutant 9 in index.js: rules.unshift replaced with rules.splice
Mutant 10 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w + 's';
})
Mutant 11 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.slice(0, -1) + 'ies';
})
Mutant 12 in index.js: addRule replaced with rules = []
Mutant 13 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|qu$/i
Mutant 14 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|quy?$/i
Mutant 15 in index.js: w.substr(0, w.length - 1) replaced with w.substr(w.length)
Mutant 16 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|ss$/i, function (w) {
  return w + 'es';
})
Mutant 17 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|s$/i, function (w) {
  return w + 'ies';
})
Mutant 18 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|s$/i, function (w) {
  return w + (w.endsWith('e') ? '' : 'e') + 's';
})
Mutant 19 in index.js: /x$|ch$|s$/i replaced with /x$|[^aeiou]ch$|s$/i
Mutant 20 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|s$/g
Mutant 21 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|s$/.test
Mutant 22 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nuclei|syllabi|foci|fungi|cacti/i, function (w) {
  return w + 'i';
})
Mutant 23 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /nucleus|syllabus|focus|fungus|cactus/g
Mutant 24 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.slice(0, -2) + 'i';
}
Mutant 25 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1)
Mutant 26 in index.js: w.substr(0, w.length - 2) replaced with w.substr(1, w.length - 2)
Mutant 27 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.slice(0, w.length - 2))
Mutant 28 in index.js: 0 replaced with w.length - 1
Mutant 29 in index.js: 0 replaced with w.substr(w.length - 1, 1) === 'y' ? w.slice(0, -1) + 'ies' : w + 'es'
Mutant 30 in index.js: w.length - 2 replaced with w.length - 1
Mutant 31 in index.js: w.length - 2 replaced with ''.length
Mutant 32 in index.js: w.length - 2 replaced with Math.random() * w.length
Mutant 33 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/i, function (w) {
  return w + 'es';
})
Mutant 34 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/g, function (w) {
  return w.substr(0, w.length - 2) + 'es';
})
Mutant 35 in index.js: addRule replaced with rules = [match, result]
Mutant 36 in index.js: /thesis|crisis/i replaced with /thes|cris/i
Mutant 37 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.slice(0, -2) + 'es';
}
Mutant 38 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length)
Mutant 39 in index.js: w.substr(0, w.length - 2) replaced with w.substr(-1)
Mutant 40 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length + 2)
Mutant 41 in index.js: 0 replaced with w.length - 1
Mutant 42 in index.js: 0 replaced with w.substr(1, w.length - 2)
Mutant 43 in index.js: w.length - 2 replaced with w.length - 1
Mutant 44 in index.js: w.length - 2 replaced with ''.length
Mutant 45 in index.js: w.length - 2 replaced with Math.floor(w.length / 2)
Mutant 46 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/appendix|index/i, function (w) {
  return w + 'ices';
})
Mutant 47 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 1) + 'ice';
})
Mutant 48 in index.js: addRule replaced with rules.push
Mutant 49 in index.js: addRule replaced with rules.shift
Mutant 50 in index.js: addRule replaced with rules.length = 0
Mutant 51 in index.js: /appendix|index/i replaced with /appendix|indice/i
Mutant 52 in index.js: /appendix|index/i replaced with /appendix|index|testis/i
Mutant 53 in index.js: /appendix|index/i replaced with /appendix|index|testis|crisis/i
Mutant 54 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.slice(0, -2) + 'ices';
}
Mutant 55 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length)
Mutant 56 in index.js: w.substr(0, w.length - 2) replaced with w.substr(-1)
Mutant 57 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length + 2)
Mutant 58 in index.js: w.substr replaced with ''.concat
Mutant 59 in index.js: w.substr replaced with w.substring
Mutant 60 in index.js: 0 replaced with w.slice(-2)
Mutant 61 in index.js: w.length - 2 replaced with ''.length - 2
Mutant 62 in index.js: w.length - 2 replaced with Math.floor(Math.random() * w.length)
Mutant 63 in index.js: /[aeiouy]o$/i replaced with /[aeiou]o/i
Mutant 64 in index.js: /[aeiouy]o$/i replaced with /[aeiouy]o/.test
Mutant 65 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'x';
}
Mutant 66 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w.toUpperCase() + 'S';
}
Mutant 67 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w.slice(0, -1);
}
Mutant 68 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'e';
})
Mutant 69 in index.js: /[^aeiouy]o$/i replaced with /[^aeiou]o\b/i
Mutant 70 in index.js: /[^aeiouy]o$/i replaced with /[^aeiou]o/i
Mutant 71 in index.js: /[^aeiouy]o$/i replaced with /[^aeiou]o|o$/i
Mutant 72 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 'e';
}
Mutant 73 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w.slice(0, -1) + 'es';
}
Mutant 74 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w.replace(/.$/, 'es');
}
Mutant 75 in index.js: w === 'dwarf' || w === 'roof' replaced with 'dwarf' in ['dwarf', 'roof']
Mutant 76 in index.js: w === 'dwarf' || w === 'roof' replaced with ['dwarf', 'roof'].includes(w)
Mutant 77 in index.js: w === 'dwarf' || w === 'roof' replaced with w.toLowerCase() === 'dwarf' || w.toLowerCase() === 'roof'
Mutant 78 in index.js: regex replaced with /fe?$/i
Mutant 79 in index.js: regex replaced with new RegExp('fe?$', 'i')
Mutant 80 in index.js: regex replaced with /fe$/i
Mutant 81 in index.js: 'ves' replaced with ''
Mutant 82 in index.js: addRule('criterion', 'criteria') replaced with addRule('criteria', 'criterion')
Mutant 83 in index.js: addRule('criterion', 'criteria') replaced with addRule('criterion', function (w) {
  return w + 'a';
})
Mutant 84 in index.js: addRule('criterion', 'criteria') replaced with addRule(/criterion$/i, 'criteria')
Mutant 85 in index.js: addRule replaced with rules.push
Mutant 86 in index.js: addRule replaced with rules = rules.concat
Mutant 87 in index.js: 'criterion' replaced with /criterion/i
Mutant 88 in index.js: 'criteria' replaced with 'criterions'
Mutant 89 in index.js: 'criteria' replaced with () => 'criteria'
Mutant 90 in index.js: 'criteria' replaced with 'criteria'.replace('a', 'e')
Mutant 91 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacteria', 'bacterium')
Mutant 92 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', function (w) {
  return w + 'a';
})
Mutant 93 in index.js: addRule('bacterium', 'bacteria') replaced with addRule(/[^aeiou]a$|qua$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ae';
})
Mutant 94 in index.js: 'bacteria' replaced with 'bacteriums'
Mutant 95 in index.js: 'bacteria' replaced with function (w) {
  return w + 'a';
}
Mutant 96 in index.js: 'bacteria' replaced with function (w) {
  return w.toUpperCase() + 'S';
}
Mutant 97 in index.js: addRule('memo', 'memos') replaced with addRule('xeno', 'xenos')
Mutant 98 in index.js: 'memo' replaced with 'me'
Mutant 99 in index.js: 'memo' replaced with function (w) {
  return w + 'a';
}
Mutant 100 in index.js: 'memos' replaced with 'mem'
Mutant 101 in index.js: addRule('cello', 'cellos') replaced with addRule('cell', 'cells')
Mutant 102 in index.js: addRule replaced with 'cellos'
Mutant 103 in index.js: addRule replaced with rules.push
Mutant 104 in index.js: 'cello' replaced with 'cellos'
Mutant 105 in index.js: 'cello' replaced with /o$/i
Mutant 106 in index.js: 'cello' replaced with function (w) {
  return w + 's';
}
Mutant 107 in index.js: 'cellos' replaced with 'cell'
Mutant 108 in index.js: 'cellos' replaced with function () {
  return 'cell';
}
Mutant 109 in index.js: 'cellos' replaced with 'cellos' + word.substr(1)
Mutant 110 in index.js: addRule('die', 'dice') replaced with addRule('dice', 'dice')
Mutant 111 in index.js: addRule('die', 'dice') replaced with addRule('die', 'di')
Mutant 112 in index.js: addRule('die', 'dice') replaced with addRule('dice', 'di')
Mutant 113 in index.js: addRule replaced with 'di', 'dice'
Mutant 114 in index.js: 'die' replaced with 'dice' && 'die'
Mutant 115 in index.js: 'die' replaced with 'dice' || 'die'
Mutant 116 in index.js: 'die' replaced with 'dice' ? 'die' : 'six'
Mutant 117 in index.js: 'dice' replaced with 'die'
Mutant 118 in index.js: 'dice' replaced with 'dices'
Mutant 119 in index.js: 'dice' replaced with () => 'dice'
Mutant 120 in index.js: addRule('goose', 'geese') replaced with addRule('goat', 'goats')
Mutant 121 in index.js: addRule('goose', 'geese') replaced with addRule('child', 'children')
Mutant 122 in index.js: addRule('goose', 'geese') replaced with addRule('octopus', 'octopi')
Mutant 123 in index.js: 'goose' replaced with 'gooses'
Mutant 124 in index.js: 'goose' replaced with 'goose', function (w) {
  return w + 'es';
}
Mutant 125 in index.js: 'goose' replaced with /goose$/i, function (w) {
  return w + 's';
}
Mutant 126 in index.js: 'geese' replaced with 'gooses'
Mutant 127 in index.js: 'geese' replaced with function (w) {
  return w.substr(0, w.length - 1) + 'e';
}
Mutant 128 in index.js: 'geese' replaced with function (w) {
  return w + 'es';
}
Mutant 129 in index.js: addRule replaced with 'mice'
Mutant 130 in index.js: 'mouse' replaced with 'mice'
Mutant 131 in index.js: 'mouse' replaced with 'mouses'
Mutant 132 in index.js: 'mouse' replaced with 'mou'
Mutant 133 in index.js: 'mice' replaced with 'mouses'
Mutant 134 in index.js: 'mice' replaced with () => 'mice'
Mutant 135 in index.js: addRule('person', 'people') replaced with addRule('persons', 'people')
Mutant 136 in index.js: addRule('person', 'people') replaced with addRule('person', 'peoples')
Mutant 137 in index.js: addRule('person', 'people') replaced with addRule('person', function (w) {
  return w + 's';
})
Mutant 138 in index.js: addRule replaced with 'peeple'
Mutant 139 in index.js: 'person' replaced with 'persons'
Mutant 140 in index.js: 'person' replaced with 'people'
Mutant 141 in index.js: 'person' replaced with 'person', function (w) {
  return w + 'es';
}
Mutant 142 in index.js: 'people' replaced with 'persons'
Mutant 143 in index.js: 'people' replaced with function () {
  return 'peoples';
}
Mutant 144 in index.js: addRule('chilli', 'chillies') replaced with addRule('chili', 'chilis')
Mutant 145 in index.js: addRule('chilli', 'chillies') replaced with addRule('chilli', 'chilliplural')
Mutant 146 in index.js: addRule('chilli', 'chillies') replaced with addRule('chilli', function (w) {
  return w + 'es';
})
Mutant 147 in index.js: 'chillies' replaced with 'chilli'
Mutant 148 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^(?:wo)?mAN$/i, function (w) {
  return w.replace(/a/, 'e');
})
Mutant 149 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace('a', 'e');
})
Mutant 150 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/a/g, 'e');
}
Mutant 151 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/[aeiou]/, 'e');
}
Mutant 152 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/man$/i, 'women');
}
Mutant 153 in index.js: w.replace(/a/, 'e') replaced with w.replace(/z/, 'ez')
Mutant 154 in index.js: w.replace(/a/, 'e') replaced with w.replace(/a/, function (w) {
  return w + 'x';
})
Mutant 155 in index.js: w.replace(/a/, 'e') replaced with w.replace(/a/, function (w) {
  return w.slice(0, -1);
})
Mutant 156 in index.js: /a/ replaced with /[a-z]/
Mutant 157 in index.js: /a/ replaced with /^a$/
Mutant 158 in index.js: /a/ replaced with /.$/
Mutant 159 in index.js: 'e' replaced with 'E'
Mutant 160 in index.js: 'e' replaced with ''
Mutant 161 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 'a';
}
Mutant 162 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.slice(0, -1);
}
Mutant 163 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 164 in index.js: games replaced with 'games'.toUpperCase()
Mutant 165 in index.js: games replaced with games.concat('notgames')
Mutant 166 in index.js: games replaced with ['games']
Mutant 167 in index.js: illnesses replaced with 'illnesses, headaches'
Mutant 168 in index.js: illnesses replaced with new RegExp('\\b(?:' + tools.concat(clothes, games, 'illness', misc).join('|') + ')s\\b', 'i')
Mutant 169 in index.js: '|' replaced with '||'
Mutant 170 in index.js: '|' replaced with '\\b'
Mutant 171 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return 1;
}
Mutant 172 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 173 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return rules[0][1](w);
}
Mutant 174 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/xics$/i, function (w) {
  return w;
})
Mutant 175 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/g, function (w) {
  return w;
})
Mutant 176 in index.js: /ics$/i replaced with /ic$/i
Mutant 177 in index.js: /ics$/i replaced with /^ics$/i
Mutant 178 in index.js: /ics$/i replaced with /[aeiou]$/i
Mutant 179 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 180 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.slice(1);
}
Mutant 181 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 'a';
}
Mutant 182 in index.js: num !== 1 || num === undefined replaced with num !== 1 || num === null
Mutant 183 in index.js: num !== 1 || num === undefined replaced with num !== 0 || num === undefined
Mutant 184 in index.js: i < rules.length replaced with i > rules.length
Mutant 185 in index.js: i++ replaced with i += 2
Mutant 186 in index.js: i++ replaced with i = rules.length
Mutant 187 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with rule[0] instanceof RegExp && rule[0].test(word)
Mutant 188 in index.js: type replaced with rule[0].constructor.name
Mutant 189 in index.js: rule[0] replaced with rule[1]
Mutant 190 in index.js: rule[0] replaced with rule['0']
Mutant 191 in index.js: rule[0] replaced with rule.match
Mutant 192 in index.js: rule[0].test replaced with rule[0].exec
Mutant 193 in index.js: rule[0].test replaced with rule[0].source.match
Mutant 194 in index.js: word replaced with this
Mutant 195 in index.js: type replaced with 'string'
Mutant 196 in index.js: type replaced with 1
Mutant 197 in index.js: rule[1](word, rule[0]) replaced with rule[1]('word, rule[1]')
Mutant 198 in index.js: rule[1](word, rule[0]) replaced with rule[1](word, word.match(rule[0]))
Mutant 199 in index.js: rule[1](word, rule[0]) replaced with rule[1](word, word.replace(rule[0], rule[1]))
Mutant 200 in index.js: rule[1] replaced with 1 * rule[1]
Mutant 201 in index.js: rule[1] replaced with rule[2] || rule[1]
Mutant 202 in index.js: word replaced with 1
Mutant 203 in index.js: word replaced with 'foo'
Mutant 204 in index.js: word replaced with rule[0]
Mutant 205 in index.js: rule[0] replaced with false
Mutant 206 in index.js: rule[0] replaced with null
Mutant 207 in index.js: rule[0] replaced with 0
Mutant 208 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with rule[0] instanceof String && rule[0] === word
Mutant 209 in index.js: type replaced with rule[0].constructor.name
Mutant 210 in index.js: rule[0] replaced with rule[1]
Mutant 211 in index.js: rule[0] replaced with rule['0']
Mutant 212 in index.js: rule[0] replaced with rule.pop()
Mutant 213 in index.js: type replaced with 'String'
Mutant 214 in index.js: type replaced with rule[0].constructor
Mutant 215 in index.js: rule[1] replaced with rule[1].call(this)
Mutant 216 in index.js: rule[1] replaced with rule[1].bind(this)()
Mutant 217 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural === null
Mutant 218 in index.js: String.prototype.plural === undefined replaced with true
Mutant 219 in index.js: String.prototype.plural === undefined replaced with 'plural' in String.prototype
Mutant 220 in index.js: this replaced with window
Mutant 221 in index.js: this replaced with null
Mutant 222 in index.js: this replaced with Math
Mutant 223 in index.js: num replaced with 1
Mutant 224 in index.js: num replaced with num + 1
Mutant 225 in index.js: num replaced with Math.floor(num)
[32m00:54:20 (2579) INFO Instrumenter[39m Instrumented 1 source file(s) with 226 mutant(s)
[32m00:54:21 (2579) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m00:54:22 (2579) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m00:54:22 (2579) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m00:54:22 (2579) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 492 ms, overhead 0 ms).
Mutation testing 8% (elapsed: <1m, remaining: ~1m) 20/226 tested (5 survived, 0 timed out)
Mutation testing 17% (elapsed: <1m, remaining: ~1m) 40/226 tested (9 survived, 0 timed out)
Mutation testing 26% (elapsed: <1m, remaining: ~1m) 60/226 tested (13 survived, 0 timed out)
Mutation testing 35% (elapsed: <1m, remaining: ~1m) 80/226 tested (21 survived, 0 timed out)
Mutation testing 44% (elapsed: <1m, remaining: ~1m) 101/226 tested (30 survived, 0 timed out)
Mutation testing 53% (elapsed: ~1m, remaining: <1m) 121/226 tested (38 survived, 0 timed out)
Mutation testing 62% (elapsed: ~1m, remaining: <1m) 142/226 tested (39 survived, 0 timed out)
Mutation testing 71% (elapsed: ~1m, remaining: <1m) 162/226 tested (43 survived, 0 timed out)
Mutation testing 80% (elapsed: ~1m, remaining: <1m) 182/226 tested (45 survived, 0 timed out)
Mutation testing 89% (elapsed: ~1m, remaining: <1m) 203/226 tested (51 survived, 0 timed out)
Mutation testing 98% (elapsed: ~1m, remaining: <1m) 223/226 tested (57 survived, 0 timed out)

All tests
  ✓ All tests (killed 166)

[Survived] PrecomputedMutator
index.js:16:1
-   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })
+   addRule(/[^aeiou]y$|quy$/i, function (w) {
+     return w.slice(0, -1) + 'ies';
+   })

[Survived] PrecomputedMutator
index.js:16:9
-   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })
+   addRule(/[^aeiou]y$|quy?$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })

[Survived] PrecomputedMutator
index.js:19:1
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$|ss$/i, function (w) {
+     return w + 'es';
+   })

[Survived] PrecomputedMutator
index.js:19:1
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$|s$/i, function (w) {
+     return w + (w.endsWith('e') ? '' : 'e') + 's';
+   })

[Survived] PrecomputedMutator
index.js:19:9
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|[^aeiou]ch$|s$/i, function(w) { return w + 'es' })

[Survived] PrecomputedMutator
index.js:22:50
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
+     return w.slice(0, -2) + 'i';
+   });

[Survived] PrecomputedMutator
index.js:22:80
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(w.substr(w.length - 1, 1) === 'y' ? w.slice(0, -1) + 'ies' : w + 'es', w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thes|cris/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:27
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function (w) {
+     return w.slice(0, -2) + 'es';
+   });

[Survived] PrecomputedMutator
index.js:23:57
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.substr(w.substr(1, w.length - 2), w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:24:9
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index|testis/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:28
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function (w) {
+     return w.slice(0, -2) + 'ices';
+   });

[Survived] PrecomputedMutator
index.js:24:49
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.substring(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:58
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.substr(w.slice(-2), w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[aeiou]o/i, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[aeiouy]o/.test, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:33:7
-     if (w === 'dwarf' || w === 'roof') {
+     if ('dwarf' in ['dwarf', 'roof']) {

[Survived] PrecomputedMutator
index.js:33:7
-     if (w === 'dwarf' || w === 'roof') {
+     if (['dwarf', 'roof'].includes(w)) {

[Survived] PrecomputedMutator
index.js:33:7
-     if (w === 'dwarf' || w === 'roof') {
+     if (w.toLowerCase() === 'dwarf' || w.toLowerCase() === 'roof') {

[Survived] PrecomputedMutator
index.js:36:20
-     return w.replace(regex, 'ves')
+     return w.replace(/fe?$/i, 'ves')

[Survived] PrecomputedMutator
index.js:36:20
-     return w.replace(regex, 'ves')
+     return w.replace(new RegExp('fe?$', 'i'), 'ves')

[Survived] PrecomputedMutator
index.js:39:1
-   addRule('criterion', 'criteria')
+   addRule(/criterion$/i, 'criteria')

[Survived] PrecomputedMutator
index.js:39:9
-   addRule('criterion', 'criteria')
+   addRule(/criterion/i, 'criteria')

[Survived] PrecomputedMutator
index.js:39:22
-   addRule('criterion', 'criteria')
+   addRule('criterion', () => 'criteria')

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacteria', 'bacterium')

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', function (w) {
+     return w + 'a';
+   })

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule(/[^aeiou]a$|qua$/i, function (w) {
+     return w.substr(0, w.length - 1) + 'ae';
+   })

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacteriums')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', function (w) {
+     return w + 'a';
+   })

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', function (w) {
+     return w.toUpperCase() + 'S';
+   })

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cell', 'cells')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cellos', 'cellos')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule(function (w) {
+     return w + 's';
+   }, 'cellos')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'cell')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', function () {
+     return 'cell';
+   })

[Survived] PrecomputedMutator
index.js:43:9
-   addRule('die', 'dice')
+   addRule('dice' && 'die', 'dice')

[Survived] PrecomputedMutator
index.js:43:9
-   addRule('die', 'dice')
+   addRule('dice' ? 'die' : 'six', 'dice')

[Survived] PrecomputedMutator
index.js:43:16
-   addRule('die', 'dice')
+   addRule('die', () => 'dice')

[Survived] PrecomputedMutator
index.js:45:18
-   addRule('mouse', 'mice')
+   addRule('mouse', () => 'mice')

[Survived] PrecomputedMutator
index.js:47:1
-   addRule('chilli', 'chillies')
+   addRule('chilli', function (w) {
+     return w + 'es';
+   })

[Survived] PrecomputedMutator
index.js:49:1
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?mAN$/i, function (w) {
+     return w.replace(/a/, 'e');
+   })

[Survived] PrecomputedMutator
index.js:49:1
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function (w) {
+     return w.replace('a', 'e');
+   })

[Survived] PrecomputedMutator
index.js:49:26
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function (w) {
+     return w.replace(/a/g, 'e');
+   })

[Survived] PrecomputedMutator
index.js:63:53
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games.concat('notgames'), illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:82
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('||') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num !== 1 || num === null) {

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num !== 0 || num === undefined) {

[Survived] PrecomputedMutator
index.js:80:11
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (rule[0] instanceof RegExp && rule[0].test(word)) {

[Survived] PrecomputedMutator
index.js:80:16
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (type(rule['0']) === 'RegExp' && rule[0].test(word)) {

[Survived] PrecomputedMutator
index.js:80:41
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (type(rule[0]) === 'RegExp' && rule[0].exec(word)) {

[Survived] PrecomputedMutator
index.js:81:47
-           return type(rule[1]) === 'Function' ? rule[1](word, rule[0]) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[2] || rule[1](word, rule[0]) : rule[1]

[Survived] PrecomputedMutator
index.js:83:16
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (type(rule[1]) === 'String' && rule[0] === word) {

[Survived] PrecomputedMutator
index.js:83:16
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (type(rule['0']) === 'String' && rule[0] === word) {

[Survived] PrecomputedMutator
index.js:84:16
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return rule[0].constructor(rule[1]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:103:7
-     if (String.prototype.plural === undefined) {
+     if (true) {

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(null, num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(Math, num)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, 1)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num + 1)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, Math.floor(num))

Ran 1.00 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   73.45 |      166 |         0 |         60 |        0 |        0 |
 index.js |   73.45 |      166 |         0 |         60 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m00:56:13 (2579) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/reports/mutation/mutation.html
[32m00:56:13 (2579) INFO MutationTestExecutor[39m Done in 1 minute 53 seconds.

real	1m55.035s
user	2m0.005s
sys	0m20.643s
