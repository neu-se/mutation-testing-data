  Option 1: The PLACEHOLDER can be replaced with:
```
Object.keys(tzs).reduce((prev, key) => {
  if (!tzs[key].deprecated) prev[key] = tzs[key];
  return prev;
}, {});
```
This code fragment uses `Object.keys()` to get an array of the keys of the `tzs` object, and then uses `reduce()` to iterate over the array and create a new object that contains only the non-deprecated timezones.

Option 2: The PLACEHOLDER can be replaced with:
```
Object.values(tzs).filter((tz) => !tz.deprecated).reduce((prev, tz) => {
  prev[tz.name] = tz;
  return prev;
}, {});
```
This code fragment uses `Object.values()` to get an array of the values of the `tzs` object, and then uses `filter()` to remove any deprecated timezones from the array. It then uses `reduce()` to iterate over the remaining timezones and