*** using precomputed mutations ***
[32m00:52:51 (2740) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m00:52:51 (2740) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m00:52:52 (2740) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/pull-stream/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m00:52:52 (2740) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m00:52:52 (2740) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m00:52:54 (2740) INFO ProjectReader[39m Found 31 of 1504 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 149 mutants from MUTATION_TESTING/template-basic_codellama-34b-instruct_0.0/mutants.json ***
Mutant 0 in index.js: sources replaced with Object.keys(sources)
Mutant 1 in pull.js: typeof a === 'function' && a.length === 1 replaced with length === 0
Mutant 2 in pull.js: args == null replaced with !args.length
Mutant 3 in pull.js: length replaced with length - 1
Mutant 4 in pull.js: pull(read, ref[0]) replaced with pull(read)
Mutant 5 in pull.js: ref[0] replaced with ref[1]
Mutant 6 in pull.js: ref[0] replaced with undefined
Mutant 7 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(ref[2], ref[3])
Mutant 8 in pull.js: ref[2] replaced with ref[3]
Mutant 9 in pull.js: pull(read, ref[0], ref[1], ref[2], ref[3]) replaced with pull(ref[3])
Mutant 10 in pull.js: read replaced with undefined
Mutant 11 in pull.js: pull.apply(null, ref) replaced with pull.apply(this)
Mutant 12 in pull.js: pull.apply replaced with read
Mutant 13 in pull.js: null replaced with this
Mutant 14 in pull.js: read && typeof read.source === 'function' replaced with typeof s === 'function' || s && typeof s === 'object'
Mutant 15 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = 0; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 16 in pull.js: i < length replaced with i < arguments.length
Mutant 17 in pull.js: s && typeof s === 'object' replaced with typeof s.sink === 'function'
Mutant 18 in drain.js: !done replaced with done === undefined
Mutant 19 in drain.js: abort replaced with read.length === 0
Mutant 20 in drain.js: loop replaced with !loop && !cbed
Mutant 21 in drain.js: end = end || abort replaced with end === true
Mutant 22 in drain.js: done replaced with doneLackingErr
Mutant 23 in drain.js: end === true ? null : end replaced with doneLackingErr
Mutant 24 in drain.js: end && end !== true replaced with doneLackingErr
Mutant 25 in drain.js: doneLackingErr replaced with "Error: No done callback supplied"
Mutant 26 in drain.js: op && false === op(data) || abort replaced with loop = true
Mutant 27 in drain.js: read(abort || true, done || function () {}) replaced with read(null)
Mutant 28 in drain.js: abort || true replaced with null
Mutant 29 in drain.js: done || function () {} replaced with cb()
Mutant 30 in drain.js: !loop replaced with loop = true
Mutant 31 in drain.js: !cbed replaced with cbed
Mutant 32 in drain.js: 'function' == typeof err replaced with err === true
Mutant 33 in drain.js: read replaced with read && read(abort, cb || function () {})
Mutant 34 in drain.js: read(abort, cb || function () {}) replaced with read(abort)
Mutant 35 in find.js: !cb replaced with test === id
Mutant 36 in find.js: test replaced with function (data) {
  return data.length > 0;
}
Mutant 37 in find.js: cb(null, data) replaced with cb(data)
Mutant 38 in find.js: cb(err === true ? null : err, null) replaced with cb(err)
Mutant 39 in find.js: err === true ? null : err replaced with err
Mutant 40 in log.js: data replaced with data.toString()
Mutant 41 in reduce.js: !cb replaced with acc === null
Mutant 42 in reduce.js: reducer(acc, data) replaced with reducer(acc)
Mutant 43 in reduce.js: cb(err, acc) replaced with cb(err)
Mutant 44 in reduce.js: arguments.length === 2 replaced with acc === null
Mutant 45 in reduce.js: end replaced with end === true && acc === null
Mutant 46 in reduce.js: end === true ? null : end replaced with err
Mutant 47 in reduce.js: source replaced with data
Mutant 48 in count.js: end replaced with i === max
Mutant 49 in count.js: cb replaced with i < max
Mutant 50 in count.js: end replaced with new Error('Invalid input')
Mutant 51 in count.js: i > max replaced with i >= max
Mutant 52 in count.js: true replaced with new Error('Maximum count exceeded')
Mutant 53 in empty.js: true replaced with null
Mutant 54 in infinite.js: end replaced with end === null
Mutant 55 in infinite.js: end replaced with new Error("Test error")
Mutant 56 in infinite.js: cb(null, generate()) replaced with cb(generate())
Mutant 57 in once.js: abort replaced with abort === true
Mutant 58 in once.js: abortCb(cb, abort, onAbort) replaced with abortCb(onAbort)
Mutant 59 in once.js: cb replaced with abort
Mutant 60 in once.js: onAbort replaced with abort
Mutant 61 in once.js: value != null replaced with value !== null
Mutant 62 in once.js: cb(null, _value) replaced with cb(_value)
Mutant 63 in once.js: true replaced with cb(new Error('Invalid value'))
Mutant 64 in values.js: !array replaced with array.length === 0
Mutant 65 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb)
Mutant 66 in values.js: onAbort replaced with abortCb(cb, abort, onAbort)
Mutant 67 in values.js: true replaced with null
Mutant 68 in values.js: !Array.isArray(array) replaced with array.length === 0
Mutant 69 in values.js: Array.isArray replaced with array.length > 0
Mutant 70 in values.js: array replaced with Object.values(array)
Mutant 71 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb(null, array[i++]))
Mutant 72 in values.js: i >= array.length replaced with i < array.length
Mutant 73 in values.js: true replaced with i < array.length
Mutant 74 in values.js: cb(null, array[i++]) replaced with cb(array[i++])
Mutant 75 in values.js: null replaced with array[i++]
Mutant 76 in async-map.js: !map replaced with true
Mutant 77 in async-map.js: map replaced with function (data) {
  return data;
}
Mutant 78 in async-map.js: cb replaced with aborted
Mutant 79 in async-map.js: aborted replaced with abort
Mutant 80 in async-map.js: abort replaced with abort === true
Mutant 81 in async-map.js: !busy replaced with aborted
Mutant 82 in async-map.js: abort replaced with new Error('Aborted')
Mutant 83 in async-map.js: busy replaced with abortCb
Mutant 84 in async-map.js: end replaced with end === true
Mutant 85 in async-map.js: end replaced with abort
Mutant 86 in async-map.js: aborted replaced with abort
Mutant 87 in async-map.js: next(err, cb) replaced with next(abort)
Mutant 88 in async-map.js: err replaced with abort
Mutant 89 in async-map.js: cb replaced with cb(null, data)
Mutant 90 in async-map.js: cb(null, data) replaced with cb(cb(null, data))
Mutant 91 in async-map.js: null replaced with err
Mutant 92 in filter-not.js: test replaced with function (data) {
  return !test(data);
}
Mutant 93 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (item) {
  return !test(item);
}
Mutant 94 in filter.js: loop replaced with test(data)
Mutant 95 in filter.js: !end && !test(data) replaced with test.test(data)
Mutant 96 in filter.js: next(end, cb) replaced with next(next(end, data))
Mutant 97 in filter.js: next replaced with loop = true
Mutant 98 in filter.js: cb replaced with next(end, data)
Mutant 99 in filter.js: cb(end, data) replaced with cb(end)
Mutant 100 in flatten.js: abort replaced with abort === true
Mutant 101 in flatten.js: read(err || abort, cb) replaced with read(abort)
Mutant 102 in flatten.js: err || abort replaced with true
Mutant 103 in flatten.js: cb replaced with cb(err)
Mutant 104 in flatten.js: read(abort, cb) replaced with read(read(null, cb))
Mutant 105 in flatten.js: abort replaced with null
Mutant 106 in flatten.js: cb replaced with read(abort, cb)
Mutant 107 in flatten.js: _read replaced with !_read
Mutant 108 in flatten.js: err replaced with err === true
Mutant 109 in flatten.js: err === true replaced with err.code === 'ENOENT'
Mutant 110 in flatten.js: cb(null, data) replaced with cb(cb(null, data))
Mutant 111 in flatten.js: end replaced with cb(end)
Mutant 112 in flatten.js: stream && 'object' === typeof stream replaced with stream.readable
Mutant 113 in flatten.js: 'function' !== typeof stream replaced with stream = once(stream)
Mutant 114 in flatten.js: stream replaced with null
Mutant 115 in map.js: !mapper replaced with mapper === id
Mutant 116 in map.js: mapper replaced with "prop"
Mutant 117 in map.js: err replaced with end
Mutant 118 in map.js: cb(end, data) replaced with cb(end)
Mutant 119 in non-unique.js: field replaced with function (item) {
  return item;
}
Mutant 120 in non-unique.js: true replaced with function (item) {
  return item;
}
Mutant 121 in take.js: 'number' === typeof test replaced with test(data)
Mutant 122 in take.js: err || true replaced with ended
Mutant 123 in take.js: ended && !end replaced with test(data)
Mutant 124 in take.js: cb replaced with cb(null, data)
Mutant 125 in take.js: ended replaced with cb(null, data)
Mutant 126 in take.js: ended = end replaced with !ended
Mutant 127 in take.js: read(ended, cb) replaced with read(ended)
Mutant 128 in take.js: ended replaced with end
Mutant 129 in take.js: cb replaced with cb(ended)
Mutant 130 in take.js: ended = ended || end replaced with test(data)
Mutant 131 in take.js: ended replaced with cb(ended)
Mutant 132 in take.js: !test(data) replaced with test(data)
Mutant 133 in take.js: cb(null, data) replaced with cb(cb(ended))
Mutant 134 in take.js: null replaced with cb(ended, data)
Mutant 135 in take.js: cb replaced with cb(null, data)
Mutant 136 in take.js: cb(null, data) replaced with cb(cb(null, data))
Mutant 137 in take.js: null replaced with cb(null, data)
Mutant 138 in through.js: a || !onEnd replaced with a === true
Mutant 139 in through.js: abort === true ? null : abort replaced with null
Mutant 140 in through.js: end replaced with end === true
Mutant 141 in through.js: end replaced with abort
Mutant 142 in through.js: !end replaced with end
Mutant 143 in through.js: cb(end, data) replaced with cb(end)
Mutant 144 in unique.js: prop replaced with prop.get
Mutant 145 in unique.js: field replaced with 'undefined'
Mutant 146 in abort-cb.js: abort replaced with null
Mutant 147 in abort-cb.js: abort === true ? null : abort replaced with null
Mutant 148 in tester.js: test replaced with test.test(data)
[32m00:52:54 (2740) INFO Instrumenter[39m Instrumented 31 source file(s) with 149 mutant(s)
[32m00:52:54 (2740) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m00:52:55 (2740) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m00:52:55 (2740) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m00:52:57 (2740) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 1 second (net 1781 ms, overhead 1 ms).
Mutation testing 4% (elapsed: <1m, remaining: ~3m) 7/149 tested (3 survived, 0 timed out)
Mutation testing 8% (elapsed: <1m, remaining: ~3m) 13/149 tested (7 survived, 0 timed out)
Mutation testing 12% (elapsed: <1m, remaining: ~3m) 19/149 tested (12 survived, 0 timed out)
Mutation testing 15% (elapsed: <1m, remaining: ~3m) 23/149 tested (13 survived, 1 timed out)
Mutation testing 21% (elapsed: <1m, remaining: ~3m) 32/149 tested (16 survived, 1 timed out)
Mutation testing 25% (elapsed: ~1m, remaining: ~2m) 38/149 tested (19 survived, 1 timed out)
Mutation testing 30% (elapsed: ~1m, remaining: ~2m) 45/149 tested (22 survived, 1 timed out)
Mutation testing 34% (elapsed: ~1m, remaining: ~2m) 52/149 tested (26 survived, 1 timed out)
Mutation testing 36% (elapsed: ~1m, remaining: ~2m) 54/149 tested (26 survived, 2 timed out)
Mutation testing 38% (elapsed: ~1m, remaining: ~2m) 57/149 tested (27 survived, 3 timed out)
Mutation testing 42% (elapsed: ~1m, remaining: ~2m) 63/149 tested (32 survived, 3 timed out)
Mutation testing 45% (elapsed: ~2m, remaining: ~2m) 68/149 tested (36 survived, 3 timed out)
Mutation testing 48% (elapsed: ~2m, remaining: ~2m) 73/149 tested (36 survived, 4 timed out)
Mutation testing 52% (elapsed: ~2m, remaining: ~2m) 78/149 tested (36 survived, 5 timed out)
Mutation testing 57% (elapsed: ~2m, remaining: ~1m) 85/149 tested (38 survived, 5 timed out)
Mutation testing 61% (elapsed: ~2m, remaining: ~1m) 92/149 tested (39 survived, 6 timed out)
Mutation testing 66% (elapsed: ~2m, remaining: ~1m) 99/149 tested (43 survived, 6 timed out)
Mutation testing 70% (elapsed: ~3m, remaining: ~1m) 105/149 tested (45 survived, 6 timed out)
Mutation testing 72% (elapsed: ~3m, remaining: ~1m) 108/149 tested (45 survived, 6 timed out)
Mutation testing 76% (elapsed: ~3m, remaining: ~1m) 114/149 tested (45 survived, 7 timed out)
Mutation testing 81% (elapsed: ~3m, remaining: <1m) 121/149 tested (48 survived, 7 timed out)
Mutation testing 87% (elapsed: ~3m, remaining: <1m) 131/149 tested (51 survived, 7 timed out)
Mutation testing 95% (elapsed: ~3m, remaining: <1m) 143/149 tested (54 survived, 7 timed out)

All tests
  ✓ All tests (killed 88)

[Survived] PrecomputedMutator
sinks/drain.js:8:7
-     if (!done) {
+     if (done === undefined) {

[Survived] PrecomputedMutator
sinks/drain.js:14:8
-       if(abort) return sink.abort()
+       if(read.length === 0) return sink.abort()

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(doneLackingErr) {

[Survived] PrecomputedMutator
sinks/drain.js:28:30
-                   console.warn(doneLackingErr)
+                   console.warn("Error: No done callback supplied")

[Survived] PrecomputedMutator
sinks/drain.js:34:20
-                 read(abort || true, done || function () {})
+                 read(null, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:49:8
-       if('function' == typeof err)
+       if(err === true)

[Survived] PrecomputedMutator
sinks/drain.js:52:8
-       if(read) return read(abort, cb || function () {})
+       if(read && read(abort, cb || function () {})) return read(abort, cb || function () {})

[Survived] PrecomputedMutator
sinks/find.js:9:6
-     if(!cb)
+     if(test === id)

[Survived] PrecomputedMutator
sinks/find.js:22:8
-       cb(err === true ? null : err, null)
+       cb(err, null)

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(data.toString())

[Survived] PrecomputedMutator
sinks/reduce.js:12:7
-     if (arguments.length === 2)
+     if (acc === null)

[Survived] PrecomputedMutator
sinks/reduce.js:16:12
-           if(end) return cb(end === true ? null : end)
+           if(end === true && acc === null) return cb(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(err)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(new Error('Invalid input'))

[Survived] PrecomputedMutator
sources/count.js:7:8
-       if(i > max)
+       if(i >= max)

[Survived] PrecomputedMutator
sources/infinite.js:5:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(new Error("Test error"))

[Survived] PrecomputedMutator
sources/once.js:6:8
-       if(abort)
+       if(abort === true)

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return abortCb(onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:22
-         return abortCb(cb, abort, onAbort)
+         return abortCb(abort, abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, abort)

[Survived] PrecomputedMutator
sources/once.js:8:8
-       if(value != null) {
+       if(value !== null) {

[Survived] PrecomputedMutator
sources/values.js:5:6
-     if(!array)
+     if(array.length === 0)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb)

[Survived] PrecomputedMutator
sources/values.js:7:43
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, abortCb(cb, abort, onAbort))

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(null)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(abort)

[Survived] PrecomputedMutator
throughs/async-map.js:28:14
-             if(end) cb(end)
+             if(end === true) cb(end)

[Survived] PrecomputedMutator
throughs/async-map.js:39:23
-                 else cb(null, data)
+                 else cb(err, data)

[Survived] PrecomputedMutator
throughs/filter-not.js:8:17
-     return filter(function (data) { return !test(data) })
+     return filter(function (item) {
+     return !test(item);
+   })

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(next(end, data))

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : loop = true(end, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, next(end, data))

[Survived] PrecomputedMutator
throughs/flatten.js:11:11
-         if (abort) { //abort the current stream, and then stream of streams.
+         if (abort === true) { //abort the current stream, and then stream of streams.

[Survived] PrecomputedMutator
throughs/flatten.js:13:16
-             read(err || abort, cb)
+             read(true, cb)

[Survived] PrecomputedMutator
throughs/map.js:7:6
-     if(!mapper) return id
+     if(mapper === id) return id

[Survived] PrecomputedMutator
throughs/non-unique.js:7:17
-     return unique(field, true)
+     return unique(function (item) {
+     return item;
+   }, true)

[Survived] PrecomputedMutator
throughs/non-unique.js:7:24
-     return unique(field, true)
+     return unique(field, function (item) {
+     return item;
+   })

[Survived] PrecomputedMutator
throughs/take.js:19:26
-           last = false; cb(err || true)
+           last = false; cb(ended)

[Survived] PrecomputedMutator
throughs/take.js:24:51
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : cb(cb(null, data))

[Survived] PrecomputedMutator
throughs/take.js:25:33
-         else if(ended = end) read(ended, cb)
+         else if(ended = end) read(end, cb)

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(cb(ended))

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(null)

[Survived] PrecomputedMutator
throughs/through.js:15:10
-         if(end) once(end)
+         if(end === true) once(end)

[Survived] PrecomputedMutator
pull.js:10:11
-         if (args == null) {
+         if (!args.length) {

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read)

[Survived] PrecomputedMutator
pull.js:21:33
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[1])

[Survived] PrecomputedMutator
pull.js:24:22
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(ref[3])

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift(undefined)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply(this)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return read(null, ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply(this, ref)

[Survived] PrecomputedMutator
pull.js:34:7
-     if (read && typeof read.source === 'function') {
+     if (typeof s === 'function' || s && typeof s === 'object') {

[Survived] PrecomputedMutator
pull.js:38:19
-     for (var i = 1; i < length; i++) {
+     for (var i = 1; i < arguments.length; i++) {

[Survived] PrecomputedMutator
pull.js:42:16
-       } else if (s && typeof s === 'object') {
+       } else if (typeof s.sink === 'function') {

Ran 0.95 tests per mutant on average.
----------------|---------|----------|-----------|------------|----------|----------|
File            | % score | # killed | # timeout | # survived | # no cov | # errors |
----------------|---------|----------|-----------|------------|----------|----------|
All files       |   63.76 |       88 |         7 |         54 |        0 |        0 |
 sinks          |   56.67 |       16 |         1 |         13 |        0 |        0 |
  drain.js      |   58.82 |        9 |         1 |          7 |        0 |        0 |
  find.js       |   60.00 |        3 |         0 |          2 |        0 |        0 |
  log.js        |    0.00 |        0 |         0 |          1 |        0 |        0 |
  reduce.js     |   57.14 |        4 |         0 |          3 |        0 |        0 |
 sources        |   57.14 |       12 |         4 |         12 |        0 |        0 |
  count.js      |   60.00 |        3 |         0 |          2 |        0 |        0 |
  empty.js      |  100.00 |        0 |         1 |          0 |        0 |        0 |
  infinite.js   |   66.67 |        1 |         1 |          1 |        0 |        0 |
  once.js       |   28.57 |        2 |         0 |          5 |        0 |        0 |
  values.js     |   66.67 |        6 |         2 |          4 |        0 |        0 |
 throughs       |   74.29 |       50 |         2 |         18 |        0 |        0 |
  async-map.js  |   81.25 |       12 |         1 |          3 |        0 |        0 |
  filter-not.js |   50.00 |        1 |         0 |          1 |        0 |        0 |
  filter.js     |   50.00 |        3 |         0 |          3 |        0 |        0 |
  flatten.js    |   86.67 |       12 |         1 |          2 |        0 |        0 |
  map.js        |   75.00 |        3 |         0 |          1 |        0 |        0 |
  non-unique.js |    0.00 |        0 |         0 |          2 |        0 |        0 |
  take.js       |   76.47 |       13 |         0 |          4 |        0 |        0 |
  through.js    |   66.67 |        4 |         0 |          2 |        0 |        0 |
  unique.js     |  100.00 |        2 |         0 |          0 |        0 |        0 |
 util           |  100.00 |        3 |         0 |          0 |        0 |        0 |
  abort-cb.js   |  100.00 |        2 |         0 |          0 |        0 |        0 |
  tester.js     |  100.00 |        1 |         0 |          0 |        0 |        0 |
 index.js       |  100.00 |        1 |         0 |          0 |        0 |        0 |
 pull.js        |   35.29 |        6 |         0 |         11 |        0 |        0 |
----------------|---------|----------|-----------|------------|----------|----------|
[32m00:56:55 (2740) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/pull-stream/reports/mutation/mutation.html
[32m00:56:55 (2740) INFO MutationTestExecutor[39m Done in 4 minutes 3 seconds.

real	4m5.173s
user	1m44.522s
sys	0m20.739s
