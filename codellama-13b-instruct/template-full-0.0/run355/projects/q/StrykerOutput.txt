*** using precomputed mutations ***
[32m15:41:00 (3184) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m15:41:00 (3184) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m15:41:00 (3184) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m15:41:00 (3184) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m15:41:00 (3184) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m15:41:01 (3184) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1714 mutants from MUTATION_TESTING/template-full_codellama-13b-instruct_0.0/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "object"
Mutant 3 in q.js: bootstrap replaced with bootstrap.promise
Mutant 4 in q.js: definition replaced with definition()
Mutant 5 in q.js: definition replaced with definition.call(this)
Mutant 6 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "object" && module.exports === exports
Mutant 7 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "object" && module.exports !== exports
Mutant 8 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "object" && module.exports === null
Mutant 9 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.version === "1.0"
Mutant 10 in q.js: definition replaced with definition()
Mutant 11 in q.js: definition replaced with void 0
Mutant 12 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined"
Mutant 13 in q.js: typeof ses !== "undefined" replaced with ses === null
Mutant 14 in q.js: typeof ses !== "undefined" replaced with ses.ok()
Mutant 15 in q.js: !ses.ok() replaced with ses.ok()
Mutant 16 in q.js: !ses.ok() replaced with ses.ok() && ses.secure()
Mutant 17 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined"
Mutant 18 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window === "undefined" || typeof self === "undefined"
Mutant 19 in q.js: captureLine replaced with qStartingLine
Mutant 20 in q.js: captureLine replaced with undefined
Mutant 21 in q.js: head.next replaced with head.next.next
Mutant 22 in q.js: head.next replaced with head.next.task
Mutant 23 in q.js: head.next replaced with head.next.domain
Mutant 24 in q.js: domain replaced with undefined
Mutant 25 in q.js: domain replaced with null
Mutant 26 in q.js: domain replaced with "domain"
Mutant 27 in q.js: domain.enter replaced with domain.exit
Mutant 28 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, 1)
Mutant 29 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, "test")
Mutant 30 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, null)
Mutant 31 in q.js: task replaced with task()
Mutant 32 in q.js: task replaced with task.call()
Mutant 33 in q.js: task replaced with task.apply()
Mutant 34 in q.js: domain replaced with undefined
Mutant 35 in q.js: domain replaced with null
Mutant 36 in q.js: domain replaced with "domain"
Mutant 37 in q.js: laterQueue.length replaced with laterQueue.length + 1
Mutant 38 in q.js: laterQueue.length replaced with laterQueue.length - 1
Mutant 39 in q.js: laterQueue.length replaced with laterQueue.length * 2
Mutant 40 in q.js: laterQueue.pop replaced with laterQueue.shift
Mutant 41 in q.js: task replaced with task()
Mutant 42 in q.js: task replaced with task.call()
Mutant 43 in q.js: task replaced with task.apply()
Mutant 44 in q.js: isNodeJS replaced with !isNodeJS
Mutant 45 in q.js: domain replaced with domain.exit()
Mutant 46 in q.js: domain replaced with domain.enter()
Mutant 47 in q.js: domain replaced with domain.run(task)
Mutant 48 in q.js: domain.exit replaced with domain.enter
Mutant 49 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 50 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1000)
Mutant 51 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 10000)
Mutant 52 in q.js: flush replaced with flush()
Mutant 53 in q.js: 0 replaced with 1
Mutant 54 in q.js: 0 replaced with 0.1
Mutant 55 in q.js: 0 replaced with -1
Mutant 56 in q.js: domain replaced with domain.exit()
Mutant 57 in q.js: domain replaced with domain.enter()
Mutant 58 in q.js: domain.enter replaced with domain.exit
Mutant 59 in q.js: domain replaced with domain.exit()
Mutant 60 in q.js: domain replaced with domain.enter()
Mutant 61 in q.js: domain replaced with domain.dispose()
Mutant 62 in q.js: !flushing replaced with flushing
Mutant 63 in q.js: !flushing replaced with flushing && !flushing
Mutant 64 in q.js: flush replaced with flush()
Mutant 65 in q.js: flush replaced with requestTick()
Mutant 66 in q.js: typeof window !== "undefined" replaced with typeof window === "undefined"
Mutant 67 in q.js: typeof window !== "undefined" replaced with typeof window !== "object"
Mutant 68 in q.js: typeof window !== "undefined" replaced with typeof window !== "function"
Mutant 69 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(this, flush)
Mutant 70 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null, flush)
Mutant 71 in q.js: window replaced with undefined
Mutant 72 in q.js: window replaced with null
Mutant 73 in q.js: window replaced with true
Mutant 74 in q.js: flush replaced with flush()
Mutant 75 in q.js: setImmediate replaced with setInterval
Mutant 76 in q.js: setImmediate replaced with requestAnimationFrame
Mutant 77 in q.js: flush replaced with flush()
Mutant 78 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "undefined"
Mutant 79 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "undefined" && MessageChannel.prototype.postMessage
Mutant 80 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "undefined" && MessageChannel.prototype.postMessage && typeof MessageChannel.prototype.postMessage === "function"
Mutant 81 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 82 in q.js: 0 replaced with 1
Mutant 83 in q.js: 0 replaced with undefined
Mutant 84 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 85 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1000)
Mutant 86 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 10000)
Mutant 87 in q.js: flush replaced with flush()
Mutant 88 in q.js: 0 replaced with 1
Mutant 89 in q.js: 0 replaced with -1
Mutant 90 in q.js: 0 replaced with Infinity
Mutant 91 in q.js: flush replaced with flush()
Mutant 92 in q.js: 0 replaced with 1
Mutant 93 in q.js: 0 replaced with Infinity
Mutant 94 in q.js: 0 replaced with NaN
Mutant 95 in q.js: laterQueue.push replaced with nextTick.runAfter
Mutant 96 in q.js: laterQueue.push replaced with nextTick.runAfter.call
Mutant 97 in q.js: task replaced with task.call()
Mutant 98 in q.js: task replaced with task.apply()
Mutant 99 in q.js: task replaced with task.bind()
Mutant 100 in q.js: !flushing replaced with flushing
Mutant 101 in q.js: !flushing replaced with flushing && !flushing
Mutant 102 in q.js: call.apply replaced with call.call
Mutant 103 in q.js: call.apply replaced with call.bind
Mutant 104 in q.js: f replaced with f()
Mutant 105 in q.js: f replaced with f.call()
Mutant 106 in q.js: f replaced with f.apply()
Mutant 107 in q.js: arguments replaced with undefined
Mutant 108 in q.js: arguments replaced with null
Mutant 109 in q.js: arguments replaced with {}
Mutant 110 in q.js: uncurryThis replaced with uncurryThis.call
Mutant 111 in q.js: uncurryThis replaced with uncurryThis.apply
Mutant 112 in q.js: uncurryThis replaced with uncurryThis.bind
Mutant 113 in q.js: Array.prototype.slice replaced with Array.prototype.slice.call
Mutant 114 in q.js: Array.prototype.slice replaced with Array.prototype.slice.apply
Mutant 115 in q.js: Array.prototype.slice replaced with Array.prototype.slice.bind
Mutant 116 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 117 in q.js: arguments.length === 1 replaced with arguments.length < 1
Mutant 118 in q.js: arguments.length === 1 replaced with arguments.length === 0
Mutant 119 in q.js: 1 replaced with 0
Mutant 120 in q.js: 1 replaced with 2
Mutant 121 in q.js: index in this replaced with index in this && this[index]
Mutant 122 in q.js: index in this replaced with index in this && this[index] !== undefined
Mutant 123 in q.js: ++index >= length replaced with index <= length
Mutant 124 in q.js: ++index >= length replaced with index == length
Mutant 125 in q.js: index < length replaced with index <= length
Mutant 126 in q.js: index < length replaced with index >= length
Mutant 127 in q.js: index < length replaced with index == length
Mutant 128 in q.js: index++ replaced with index--
Mutant 129 in q.js: index++ replaced with index += 2
Mutant 130 in q.js: index++ replaced with index = index + 10
Mutant 131 in q.js: index in this replaced with index in this && this[index]
Mutant 132 in q.js: index in this replaced with index in this && this[index] !== undefined
Mutant 133 in q.js: callback(basis, this[index], index) replaced with callback(this[index])
Mutant 134 in q.js: callback(basis, this[index], index) replaced with callback(this[index], basis)
Mutant 135 in q.js: basis replaced with basis + 1
Mutant 136 in q.js: basis replaced with basis - 1
Mutant 137 in q.js: basis replaced with basis * 2
Mutant 138 in q.js: this[index] replaced with this[index + 1]
Mutant 139 in q.js: this[index] replaced with this[index - 1]
Mutant 140 in q.js: this[index] replaced with this[index * 2]
Mutant 141 in q.js: index replaced with index + 1
Mutant 142 in q.js: index replaced with index - 1
Mutant 143 in q.js: index replaced with index * 2
Mutant 144 in q.js: i < this.length replaced with i < this.length - 1
Mutant 145 in q.js: i < this.length replaced with i <= this.length
Mutant 146 in q.js: i < this.length replaced with i < this.length + 1
Mutant 147 in q.js: i++ replaced with i--
Mutant 148 in q.js: i++ replaced with i += 2
Mutant 149 in q.js: i++ replaced with i = 0
Mutant 150 in q.js: this[i] === value replaced with this[i] !== value
Mutant 151 in q.js: this[i] === value replaced with this[i] === undefined
Mutant 152 in q.js: this[i] === value replaced with this[i] === null
Mutant 153 in q.js: callback.call(thisp, value, index, self) replaced with callback.apply(thisp, [value, index, self])
Mutant 154 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index)
Mutant 155 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self, 0)
Mutant 156 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self, undefined)
Mutant 157 in q.js: thisp replaced with undefined
Mutant 158 in q.js: thisp replaced with null
Mutant 159 in q.js: value replaced with undefined
Mutant 160 in q.js: value replaced with null
Mutant 161 in q.js: value replaced with NaN
Mutant 162 in q.js: index replaced with index + 1
Mutant 163 in q.js: index replaced with index - 1
Mutant 164 in q.js: index replaced with index * 2
Mutant 165 in q.js: self replaced with self.call(this)
Mutant 166 in q.js: self replaced with self.apply(this, arguments)
Mutant 167 in q.js: self replaced with self.bind(this)
Mutant 168 in q.js: uncurryThis replaced with uncurryThis.call
Mutant 169 in q.js: uncurryThis replaced with uncurryThis.apply
Mutant 170 in q.js: uncurryThis replaced with uncurryThis.bind
Mutant 171 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key of object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 172 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key in object.keys()) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 173 in q.js: object replaced with undefined
Mutant 174 in q.js: object replaced with null
Mutant 175 in q.js: object replaced with {}
Mutant 176 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, "key")
Mutant 177 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, "key" + 1)
Mutant 178 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key, value)
Mutant 179 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key, value, undefined)
Mutant 180 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key, value, null)
Mutant 181 in q.js: object replaced with undefined
Mutant 182 in q.js: object replaced with null
Mutant 183 in q.js: object replaced with {}
Mutant 184 in q.js: key replaced with "key1"
Mutant 185 in q.js: key replaced with "key" + "1"
Mutant 186 in q.js: key replaced with "key"
Mutant 187 in q.js: key replaced with "key1"
Mutant 188 in q.js: key replaced with "key" + 1
Mutant 189 in q.js: uncurryThis replaced with uncurryThis.call
Mutant 190 in q.js: uncurryThis replaced with uncurryThis.apply
Mutant 191 in q.js: uncurryThis replaced with uncurryThis.bind
Mutant 192 in q.js: Object replaced with null
Mutant 193 in q.js: Object replaced with undefined
Mutant 194 in q.js: Object replaced with 1
Mutant 195 in q.js: value replaced with value + 1
Mutant 196 in q.js: value replaced with value - 1
Mutant 197 in q.js: value replaced with value * 2
Mutant 198 in q.js: object_toString replaced with object_toString.call
Mutant 199 in q.js: object_toString replaced with object_toString.apply
Mutant 200 in q.js: object_toString replaced with object_toString.bind
Mutant 201 in q.js: exception replaced with exception.message
Mutant 202 in q.js: exception replaced with exception.stack
Mutant 203 in q.js: exception replaced with exception.name
Mutant 204 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue === "undefined"
Mutant 205 in q.js: typeof ReturnValue !== "undefined" replaced with ReturnValue === undefined
Mutant 206 in q.js: typeof ReturnValue !== "undefined" replaced with ReturnValue !== undefined
Mutant 207 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && error.stack.length > 0
Mutant 208 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.then(function () {}); !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 209 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.catch(function () {}); !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 210 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.finally(function () {}); !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 211 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p = p.source; !!p) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 212 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p = p.source; p = !!p) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 213 in q.js: !!p replaced with p === null
Mutant 214 in q.js: !!p replaced with !p
Mutant 215 in q.js: !!p replaced with p.length
Mutant 216 in q.js: p = p.source replaced with p = p.source.length
Mutant 217 in q.js: p = p.source replaced with p = p.source.length + 1
Mutant 218 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ > p.stackCounter
Mutant 219 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 220 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 221 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter * 2,
  configurable: true
})
Mutant 222 in q.js: error replaced with error.stack
Mutant 223 in q.js: error replaced with undefined
Mutant 224 in q.js: error replaced with null
Mutant 225 in q.js: "__minimumStackCounter__" replaced with "__minimumStackCounter__" + 1
Mutant 226 in q.js: "__minimumStackCounter__" replaced with "__minimumStackCounter__" + "1"
Mutant 227 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 228 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 229 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 230 in q.js: stacks.unshift replaced with stacks.push
Mutant 231 in q.js: p.stack replaced with p.stack.length
Mutant 232 in q.js: p.stack replaced with p.stack.toString()
Mutant 233 in q.js: p.stack replaced with p.stack.slice(0, 1)
Mutant 234 in q.js: stacks.unshift replaced with stacks.push
Mutant 235 in q.js: stacks.unshift replaced with stacks.concat
Mutant 236 in q.js: stacks.unshift replaced with stacks.reverse
Mutant 237 in q.js: error.stack replaced with error.stack.toString()
Mutant 238 in q.js: error.stack replaced with error.stack.split("\n")[0]
Mutant 239 in q.js: error.stack replaced with error.message
Mutant 240 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n"
Mutant 241 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with ""
Mutant 242 in q.js: concatedStacks replaced with concatedStacks.reverse()
Mutant 243 in q.js: concatedStacks replaced with concatedStacks.sort()
Mutant 244 in q.js: concatedStacks replaced with concatedStacks.slice(0, 1)
Mutant 245 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  configurable: true,
  enumerable: true
})
Mutant 246 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  configurable: true,
  writable: true
})
Mutant 247 in q.js: error replaced with error.stack
Mutant 248 in q.js: error replaced with error.stack + "\n" + STACK_JUMP_SEPARATOR + "\n" + promise.stack
Mutant 249 in q.js: error replaced with error.stack.split("\n")[0]
Mutant 250 in q.js: "stack" replaced with "stackTrace"
Mutant 251 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  configurable: false
}
Mutant 252 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  writable: false
}
Mutant 253 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  enumerable: false
}
Mutant 254 in q.js: "\n" replaced with "\n\n"
Mutant 255 in q.js: "\n" replaced with " "
Mutant 256 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 257 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = -1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 258 in q.js: i < lines.length replaced with i <= lines.length
Mutant 259 in q.js: i < lines.length replaced with i > lines.length
Mutant 260 in q.js: i < lines.length replaced with i >= lines.length
Mutant 261 in q.js: ++i replaced with i--
Mutant 262 in q.js: ++i replaced with i += 2
Mutant 263 in q.js: ++i replaced with i *= 2
Mutant 264 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with isInternalFrame(line) || isNodeFrame(line) || line
Mutant 265 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with isInternalFrame(line) && isNodeFrame(line) && line
Mutant 266 in q.js: isInternalFrame replaced with isStopIteration
Mutant 267 in q.js: line replaced with line + 1
Mutant 268 in q.js: line replaced with line - 1
Mutant 269 in q.js: line replaced with line * 2
Mutant 270 in q.js: line replaced with line + 1
Mutant 271 in q.js: line replaced with line - 1
Mutant 272 in q.js: line replaced with line * 2
Mutant 273 in q.js: "\n" replaced with "\n\n"
Mutant 274 in q.js: "\n" replaced with " "
Mutant 275 in q.js: "\n" replaced with "|"
Mutant 276 in q.js: "(module.js:" replaced with "(module.js:1234567890)"
Mutant 277 in q.js: "(module.js:" replaced with "(module.js:1234567890:1234567890)"
Mutant 278 in q.js: "(node.js:" replaced with "(node.js:12345)"
Mutant 279 in q.js: "(node.js:" replaced with "(node.js:12345:6789)"
Mutant 280 in q.js: "(node.js:" replaced with "(node.js:12345:6789:101112)"
Mutant 281 in q.js: stackLine replaced with stackLine.toUpperCase()
Mutant 282 in q.js: stackLine replaced with stackLine.toLowerCase()
Mutant 283 in q.js: stackLine replaced with stackLine.substring(0, 10)
Mutant 284 in q.js: attempt1 replaced with attempt2
Mutant 285 in q.js: attempt1 replaced with attempt3
Mutant 286 in q.js: Number replaced with "1"
Mutant 287 in q.js: Number replaced with "filename"
Mutant 288 in q.js: Number replaced with "filename:lineNumber"
Mutant 289 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 290 in q.js: attempt1[2] replaced with attempt1[0]
Mutant 291 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 292 in q.js: stackLine replaced with stackLine.toUpperCase()
Mutant 293 in q.js: stackLine replaced with stackLine.toLowerCase()
Mutant 294 in q.js: stackLine replaced with stackLine.substring(0, 10)
Mutant 295 in q.js: attempt2 replaced with attempt1
Mutant 296 in q.js: Number replaced with "1"
Mutant 297 in q.js: Number replaced with "undefined"
Mutant 298 in q.js: Number replaced with "null"
Mutant 299 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 300 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 301 in q.js: attempt2[2] replaced with attempt2[4]
Mutant 302 in q.js: stackLine replaced with stackLine.toUpperCase()
Mutant 303 in q.js: stackLine replaced with stackLine.toLowerCase()
Mutant 304 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 305 in q.js: attempt3 replaced with attempt2
Mutant 306 in q.js: attempt3 replaced with attempt1
Mutant 307 in q.js: Number replaced with "a"
Mutant 308 in q.js: Number replaced with "b"
Mutant 309 in q.js: Number replaced with "c"
Mutant 310 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 311 in q.js: attempt3[2] replaced with attempt3[0]
Mutant 312 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 313 in q.js: stackLine replaced with stackLine.toUpperCase()
Mutant 314 in q.js: stackLine replaced with stackLine.toLowerCase()
Mutant 315 in q.js: stackLine replaced with stackLine.substring(0, 10)
Mutant 316 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0]
Mutant 317 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[1]
Mutant 318 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[2]
Mutant 319 in q.js: !hasStacks replaced with hasStacks
Mutant 320 in q.js: !hasStacks replaced with typeof hasStacks === "undefined"
Mutant 321 in q.js: "\n" replaced with "\n\n"
Mutant 322 in q.js: "\n" replaced with " "
Mutant 323 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 324 in q.js: lines[0].indexOf replaced with lines[2].indexOf
Mutant 325 in q.js: lines[0].indexOf replaced with lines[3].indexOf
Mutant 326 in q.js: firstLine replaced with firstLine.split(":")[0]
Mutant 327 in q.js: firstLine replaced with firstLine.split(":")[1]
Mutant 328 in q.js: firstLine replaced with firstLine.split(":")[2]
Mutant 329 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0]
Mutant 330 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[1]
Mutant 331 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[2]
Mutant 332 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback.apply(this, arguments))
Mutant 333 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback.call(this, arguments))
Mutant 334 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback.bind(this)(arguments))
Mutant 335 in q.js: callback replaced with callback.apply(null, arguments)
Mutant 336 in q.js: callback replaced with callback.apply(this, arguments)
Mutant 337 in q.js: arguments replaced with "arguments"
Mutant 338 in q.js: arguments replaced with "arguments[0]"
Mutant 339 in q.js: value instanceof Promise replaced with value !== null && typeof value === "object" && typeof value.then === "function"
Mutant 340 in q.js: value instanceof Promise replaced with Object.prototype.toString.call(value) === "[object Promise]"
Mutant 341 in q.js: isPromiseAlike(value) replaced with isPromiseLike(value)
Mutant 342 in q.js: isPromiseAlike(value) replaced with isPromise(value)
Mutant 343 in q.js: isPromiseAlike(value) replaced with isThenable(value)
Mutant 344 in q.js: value replaced with value.toString()
Mutant 345 in q.js: value replaced with value.valueOf()
Mutant 346 in q.js: value replaced with value.toJSON()
Mutant 347 in q.js: coerce replaced with resolve
Mutant 348 in q.js: coerce replaced with reject
Mutant 349 in q.js: value replaced with value.then(function (v) {
  return v;
})
Mutant 350 in q.js: value replaced with value.then(function (v) {
  return v;
}, function (e) {
  throw e;
})
Mutant 351 in q.js: fulfill replaced with reject
Mutant 352 in q.js: value replaced with value + 1
Mutant 353 in q.js: value replaced with value - 1
Mutant 354 in q.js: value replaced with value * 2
Mutant 355 in q.js: object_create replaced with Promise.prototype
Mutant 356 in q.js: defer.prototype replaced with defer.prototype.promise
Mutant 357 in q.js: defer.prototype replaced with defer.prototype.promise.promiseDispatch
Mutant 358 in q.js: Promise.prototype replaced with Q.prototype
Mutant 359 in q.js: Promise.prototype replaced with Object.prototype
Mutant 360 in q.js: array_slice replaced with array_reduce
Mutant 361 in q.js: arguments replaced with arguments[0]
Mutant 362 in q.js: arguments replaced with arguments[1]
Mutant 363 in q.js: arguments replaced with arguments[2]
Mutant 364 in q.js: messages replaced with messages.length
Mutant 365 in q.js: messages replaced with messages[0]
Mutant 366 in q.js: messages replaced with messages.slice(0, 1)
Mutant 367 in q.js: args replaced with args[0]
Mutant 368 in q.js: args replaced with args.slice(0)
Mutant 369 in q.js: args replaced with args.map(function (arg) {
  return arg;
})
Mutant 370 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[1] === true
Mutant 371 in q.js: operands[1] replaced with operands[0]
Mutant 372 in q.js: operands[1] replaced with undefined
Mutant 373 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise, args[0])
Mutant 374 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise, args[1])
Mutant 375 in q.js: resolvedPromise replaced with resolvedPromise.promiseDispatch
Mutant 376 in q.js: resolvedPromise replaced with Q(resolvedPromise)
Mutant 377 in q.js: resolvedPromise replaced with resolvedPromise.valueOf()
Mutant 378 in q.js: args replaced with args.slice(1)
Mutant 379 in q.js: args replaced with args.slice(2)
Mutant 380 in q.js: args replaced with args.slice(3)
Mutant 381 in q.js: messages replaced with messages.length
Mutant 382 in q.js: messages replaced with messages[0]
Mutant 383 in q.js: messages replaced with messages.slice(0, 1)
Mutant 384 in q.js: resolvedPromise replaced with resolvedPromise.promiseDispatch
Mutant 385 in q.js: resolvedPromise replaced with resolvedPromise.valueOf()
Mutant 386 in q.js: resolvedPromise replaced with resolvedPromise.inspect()
Mutant 387 in q.js: isPromise(nearerValue) replaced with isPromiseAlike(nearerValue)
Mutant 388 in q.js: isPromise(nearerValue) replaced with isPromise(nearerValue) || isPromiseAlike(nearerValue)
Mutant 389 in q.js: isPromise(nearerValue) replaced with isPromise(nearerValue) && isPromiseAlike(nearerValue)
Mutant 390 in q.js: isPromise replaced with isThenable
Mutant 391 in q.js: nearerValue replaced with nearerValue.promise
Mutant 392 in q.js: nearerValue replaced with nearerValue.promise.promise
Mutant 393 in q.js: !resolvedPromise replaced with resolvedPromise
Mutant 394 in q.js: !resolvedPromise replaced with resolvedPromise === null
Mutant 395 in q.js: resolvedPromise.inspect replaced with resolvedPromise.promiseDispatch
Mutant 396 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 397 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 398 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") + 2
Mutant 399 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") + 3
Mutant 400 in q.js: "\n" replaced with " "
Mutant 401 in q.js: "\n" replaced with "."
Mutant 402 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && true
Mutant 403 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && false
Mutant 404 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message, message)
Mutant 405 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message, message, message)
Mutant 406 in q.js: newPromise replaced with newPromise.promiseDispatch
Mutant 407 in q.js: message replaced with message.toString()
Mutant 408 in q.js: message replaced with message.valueOf()
Mutant 409 in q.js: message replaced with message.toJSON()
Mutant 410 in q.js: resolvedPromise replaced with resolvedPromise.promiseDispatch
Mutant 411 in q.js: resolvedPromise replaced with Q(resolvedPromise)
Mutant 412 in q.js: resolvedPromise replaced with Q.resolve(resolvedPromise)
Mutant 413 in q.js: Q(value) replaced with Q.reject(value)
Mutant 414 in q.js: Q(value) replaced with Q.resolve(value)
Mutant 415 in q.js: Q(value) replaced with Q.when(value)
Mutant 416 in q.js: value replaced with undefined
Mutant 417 in q.js: value replaced with null
Mutant 418 in q.js: value replaced with "test"
Mutant 419 in q.js: resolvedPromise replaced with resolvedPromise.promiseDispatch
Mutant 420 in q.js: resolvedPromise replaced with resolvedPromise.valueOf()
Mutant 421 in q.js: resolvedPromise replaced with resolvedPromise.inspect()
Mutant 422 in q.js: fulfill(value) replaced with resolve(value)
Mutant 423 in q.js: fulfill(value) replaced with reject(value)
Mutant 424 in q.js: value replaced with undefined
Mutant 425 in q.js: value replaced with null
Mutant 426 in q.js: value replaced with "hello"
Mutant 427 in q.js: resolvedPromise replaced with resolvedPromise.promiseDispatch
Mutant 428 in q.js: resolvedPromise replaced with Q(resolvedPromise)
Mutant 429 in q.js: reject(reason) replaced with resolve(reason)
Mutant 430 in q.js: reason replaced with null
Mutant 431 in q.js: reason replaced with undefined
Mutant 432 in q.js: reason replaced with "error"
Mutant 433 in q.js: resolvedPromise replaced with resolvedPromise.promiseDispatch
Mutant 434 in q.js: resolvedPromise replaced with Q.nextTick(function () {
  resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
})
Mutant 435 in q.js: progress replaced with progress.value
Mutant 436 in q.js: progress replaced with progress.message
Mutant 437 in q.js: progress replaced with progress.status
Mutant 438 in q.js: error replaced with error.message
Mutant 439 in q.js: error replaced with error.stack
Mutant 440 in q.js: error replaced with error.name
Mutant 441 in q.js: error replaced with null
Mutant 442 in q.js: error replaced with undefined
Mutant 443 in q.js: error replaced with new Error()
Mutant 444 in q.js: arguments.length > 2 replaced with arguments.length > 1
Mutant 445 in q.js: arguments.length > 2 replaced with arguments.length < 2
Mutant 446 in q.js: arguments.length > 2 replaced with arguments.length === 2
Mutant 447 in q.js: self.resolve replaced with self.reject
Mutant 448 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 449 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 450 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 4)
Mutant 451 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 452 in q.js: array_slice replaced with array_reduce
Mutant 453 in q.js: array_slice replaced with array_map
Mutant 454 in q.js: array_slice replaced with array_filter
Mutant 455 in q.js: arguments replaced with arguments[0]
Mutant 456 in q.js: arguments replaced with arguments[1]
Mutant 457 in q.js: arguments replaced with arguments[2]
Mutant 458 in q.js: self.resolve replaced with self.reject
Mutant 459 in q.js: value replaced with undefined
Mutant 460 in q.js: value replaced with null
Mutant 461 in q.js: value replaced with "hello"
Mutant 462 in q.js: typeof resolver !== "function" replaced with resolver === undefined
Mutant 463 in q.js: typeof resolver !== "function" replaced with resolver === null
Mutant 464 in q.js: typeof resolver !== "function" replaced with resolver === 0
Mutant 465 in q.js: defer replaced with deferred
Mutant 466 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.resolve, deferred.notify)
Mutant 467 in q.js: deferred.resolve replaced with deferred.reject
Mutant 468 in q.js: deferred.resolve replaced with deferred.notify
Mutant 469 in q.js: deferred.resolve replaced with deferred.promise
Mutant 470 in q.js: deferred.reject replaced with deferred.resolve
Mutant 471 in q.js: deferred.reject replaced with deferred.notify
Mutant 472 in q.js: deferred.reject replaced with deferred.become
Mutant 473 in q.js: deferred.notify replaced with deferred.notify(progress)
Mutant 474 in q.js: deferred.notify replaced with deferred.notify(progress, progress)
Mutant 475 in q.js: deferred.reject replaced with deferred.resolve
Mutant 476 in q.js: reason replaced with null
Mutant 477 in q.js: reason replaced with undefined
Mutant 478 in q.js: reason replaced with "error"
Mutant 479 in q.js: x replaced with x + 1
Mutant 480 in q.js: x replaced with x * y
Mutant 481 in q.js: x replaced with x - y
Mutant 482 in q.js: y replaced with x
Mutant 483 in q.js: y replaced with undefined
Mutant 484 in q.js: y replaced with null
Mutant 485 in q.js: [this, that] replaced with [this]
Mutant 486 in q.js: [this, that] replaced with [that]
Mutant 487 in q.js: x === y replaced with x !== y
Mutant 488 in q.js: x === y replaced with x == y
Mutant 489 in q.js: // Switch to this once we can assume at least ES5
// answerPs.forEach(function (answerP) {
//     Q(answerP).then(resolve, reject);
// });
// Use this in the meantime
for (var i = 0, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
} replaced with for (var i = 1, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
}
Mutant 490 in q.js: // Switch to this once we can assume at least ES5
// answerPs.forEach(function (answerP) {
//     Q(answerP).then(resolve, reject);
// });
// Use this in the meantime
for (var i = 0, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
} replaced with for (var i = answerPs.length - 1; i >= 0; i--) {
  Q(answerPs[i]).then(resolve, reject);
}
Mutant 491 in q.js: i < len replaced with i <= len
Mutant 492 in q.js: i < len replaced with i >= len
Mutant 493 in q.js: i < len replaced with i < len - 1
Mutant 494 in q.js: i++ replaced with i += 2
Mutant 495 in q.js: i++ replaced with i--
Mutant 496 in q.js: i++ replaced with i *= 2
Mutant 497 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, resolve)
Mutant 498 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, reject)
Mutant 499 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, resolve, reject)
Mutant 500 in q.js: Q replaced with Q.race
Mutant 501 in q.js: Q replaced with Q.all
Mutant 502 in q.js: Q replaced with Q.reject
Mutant 503 in q.js: resolve replaced with reject
Mutant 504 in q.js: resolve replaced with resolve(null)
Mutant 505 in q.js: resolve replaced with resolve(value)
Mutant 506 in q.js: reject replaced with resolve
Mutant 507 in q.js: reject replaced with reject(new Error("Invalid operation"))
Mutant 508 in q.js: this.then replaced with Q.race
Mutant 509 in q.js: this.then replaced with Q.all
Mutant 510 in q.js: Q.race replaced with Q.all
Mutant 511 in q.js: Q.race replaced with Q.reject
Mutant 512 in q.js: fallback === void 0 replaced with fallback === null
Mutant 513 in q.js: fallback === void 0 replaced with typeof fallback === "undefined"
Mutant 514 in q.js: fallback === void 0 replaced with fallback === void 0 && typeof fallback !== "function"
Mutant 515 in q.js: inspect === void 0 replaced with inspect === null
Mutant 516 in q.js: inspect === void 0 replaced with inspect === undefined
Mutant 517 in q.js: inspect === void 0 replaced with inspect === false
Mutant 518 in q.js: Promise.prototype replaced with Q.prototype
Mutant 519 in q.js: Promise.prototype replaced with object_create(null)
Mutant 520 in q.js: descriptor[op] replaced with descriptor[op].call(promise, args)
Mutant 521 in q.js: descriptor[op] replaced with descriptor[op].apply(promise, args)
Mutant 522 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise)
Mutant 523 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(args)
Mutant 524 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 525 in q.js: promise replaced with promise.then(function (value) {
  return value + 1;
})
Mutant 526 in q.js: promise replaced with promise.then(function (value) {
  return value * 2;
})
Mutant 527 in q.js: args replaced with []
Mutant 528 in q.js: args replaced with undefined
Mutant 529 in q.js: args replaced with null
Mutant 530 in q.js: fallback.call(promise, op, args) replaced with fallback.call(this, op, args)
Mutant 531 in q.js: fallback.call(promise, op, args) replaced with fallback.call(Q, op, args)
Mutant 532 in q.js: fallback.call replaced with fallback.apply
Mutant 533 in q.js: fallback.call replaced with fallback.bind
Mutant 534 in q.js: promise replaced with promise.all
Mutant 535 in q.js: promise replaced with Q.all
Mutant 536 in q.js: promise replaced with Q.race
Mutant 537 in q.js: op replaced with "op"
Mutant 538 in q.js: op replaced with "op" + "op"
Mutant 539 in q.js: op replaced with "op" + "op" + "op"
Mutant 540 in q.js: args replaced with args[0]
Mutant 541 in q.js: args replaced with args[1]
Mutant 542 in q.js: args replaced with args[2]
Mutant 543 in q.js: exception replaced with undefined
Mutant 544 in q.js: exception replaced with null
Mutant 545 in q.js: exception replaced with new Error("test")
Mutant 546 in q.js: resolve replaced with resolve(result)
Mutant 547 in q.js: resolve replaced with resolve(Q(result))
Mutant 548 in q.js: result replaced with result.toString()
Mutant 549 in q.js: result replaced with result.valueOf()
Mutant 550 in q.js: result replaced with result.toJSON()
Mutant 551 in q.js: inspect replaced with inspect.state
Mutant 552 in q.js: inspect replaced with inspect.value
Mutant 553 in q.js: inspect replaced with inspect.reason
Mutant 554 in q.js: inspect replaced with inspect.state
Mutant 555 in q.js: inspect replaced with inspect.value
Mutant 556 in q.js: inspect replaced with inspect.reason
Mutant 557 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 558 in q.js: inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 559 in q.js: inspected.state === "rejected" replaced with inspected.state === "settled"
Mutant 560 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "pending" || inspected.state === "fulfilled"
Mutant 561 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "pending" || inspected.state === "rejected" || inspected.state === "fulfilled"
Mutant 562 in q.js: fulfilled replaced with rejected
Mutant 563 in q.js: value replaced with undefined
Mutant 564 in q.js: value replaced with null
Mutant 565 in q.js: value replaced with "hello"
Mutant 566 in q.js: exception replaced with new Error()
Mutant 567 in q.js: exception replaced with undefined
Mutant 568 in q.js: exception replaced with null
Mutant 569 in q.js: typeof rejected === "function" replaced with rejected instanceof Function
Mutant 570 in q.js: typeof rejected === "function" replaced with rejected.constructor === Function
Mutant 571 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, this)
Mutant 572 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, Q)
Mutant 573 in q.js: makeStackTraceLong replaced with Q.makePromise
Mutant 574 in q.js: makeStackTraceLong replaced with Q.race
Mutant 575 in q.js: exception replaced with undefined
Mutant 576 in q.js: exception replaced with null
Mutant 577 in q.js: exception replaced with Q.reject(new Error("Promise was rejected with a non-function value"))
Mutant 578 in q.js: self replaced with self.promiseDispatch
Mutant 579 in q.js: self replaced with Q.nextTick
Mutant 580 in q.js: self replaced with Q.when
Mutant 581 in q.js: rejected replaced with Q.rejected
Mutant 582 in q.js: exception replaced with undefined
Mutant 583 in q.js: exception replaced with null
Mutant 584 in q.js: exception replaced with Q.reject(new Error("Test error"))
Mutant 585 in q.js: newException replaced with newException.message
Mutant 586 in q.js: newException replaced with newException.stack
Mutant 587 in q.js: newException replaced with newException.name
Mutant 588 in q.js: exception replaced with undefined
Mutant 589 in q.js: exception replaced with null
Mutant 590 in q.js: exception replaced with new Error("Test error")
Mutant 591 in q.js: value replaced with undefined
Mutant 592 in q.js: value replaced with null
Mutant 593 in q.js: value replaced with "test"
Mutant 594 in q.js: done replaced with done = false
Mutant 595 in q.js: done replaced with done = true
Mutant 596 in q.js: done replaced with done = undefined
Mutant 597 in q.js: deferred.resolve replaced with deferred.reject
Mutant 598 in q.js: deferred.resolve replaced with deferred.notify
Mutant 599 in q.js: deferred.resolve replaced with deferred.promiseDispatch
Mutant 600 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 601 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 602 in q.js: value replaced with undefined
Mutant 603 in q.js: value replaced with null
Mutant 604 in q.js: value replaced with "test"
Mutant 605 in q.js: deferred.resolve replaced with deferred.reject
Mutant 606 in q.js: _rejected(exception) replaced with _rejected(exception.message)
Mutant 607 in q.js: _rejected(exception) replaced with _rejected(new Error(exception.message))
Mutant 608 in q.js: exception replaced with undefined
Mutant 609 in q.js: exception replaced with null
Mutant 610 in q.js: exception replaced with new Error("Test error")
Mutant 611 in q.js: _progressed replaced with _fulfilled
Mutant 612 in q.js: _progressed replaced with _rejected
Mutant 613 in q.js: value replaced with value + 1
Mutant 614 in q.js: value replaced with value - 1
Mutant 615 in q.js: value replaced with value * 2
Mutant 616 in q.js: Q.onerror replaced with Q.onerror(exception)
Mutant 617 in q.js: Q.onerror replaced with Q.onerror(exception, promise)
Mutant 618 in q.js: e replaced with undefined
Mutant 619 in q.js: e replaced with null
Mutant 620 in q.js: !threw replaced with !done
Mutant 621 in q.js: !threw replaced with threw
Mutant 622 in q.js: newValue replaced with newValue.toString()
Mutant 623 in q.js: newValue replaced with newValue.valueOf()
Mutant 624 in q.js: newValue replaced with newValue.toJSON()
Mutant 625 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 626 in q.js: promise replaced with promise.then(function (value) {
  return Q(value);
})
Mutant 627 in q.js: promise replaced with promise.then(function (value) {
  return Q.resolve(value);
})
Mutant 628 in q.js: callback replaced with callback()
Mutant 629 in q.js: callback replaced with callback.bind(this)
Mutant 630 in q.js: callback replaced with callback.bind(this, value)
Mutant 631 in q.js: Q replaced with Q.when
Mutant 632 in q.js: Q replaced with Q.isPromise
Mutant 633 in q.js: Q replaced with Q.isPromiseAlike
Mutant 634 in q.js: callback replaced with callback()
Mutant 635 in q.js: callback replaced with callback.bind(this)
Mutant 636 in q.js: callback replaced with callback.call(this)
Mutant 637 in q.js: callback.fcall replaced with callback.call
Mutant 638 in q.js: callback.fcall replaced with callback.apply
Mutant 639 in q.js: callback.fcall replaced with callback.bind
not replacing callback.fcall with callback.call
not replacing callback.fcall with callback.call
not replacing callback.fcall with callback.apply
not replacing callback.fcall with callback.apply
not replacing callback.fcall with callback.bind
not replacing callback.fcall with callback.bind
Mutant 640 in q.js: value replaced with value + 1
Mutant 641 in q.js: value replaced with value - 1
Mutant 642 in q.js: value replaced with value * 2
Mutant 643 in q.js: value replaced with undefined
Mutant 644 in q.js: value replaced with null
Mutant 645 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected)
Mutant 646 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled)
Mutant 647 in q.js: value replaced with value.then(function (value) {
  return value;
})
Mutant 648 in q.js: value replaced with value.then(function (value) {
  return value + 1;
})
Mutant 649 in q.js: value replaced with value.then(function (value) {
  return value * 2;
})
Mutant 650 in q.js: fulfilled replaced with rejected
Mutant 651 in q.js: fulfilled replaced with progressed
Mutant 652 in q.js: fulfilled replaced with void 0
Mutant 653 in q.js: rejected replaced with rejected(exception)
Mutant 654 in q.js: rejected replaced with rejected(exception, self)
Mutant 655 in q.js: progressed replaced with void 0
Mutant 656 in q.js: progressed replaced with null
Mutant 657 in q.js: function () {
  return value;
} replaced with function () {
  return value + 1;
}
Mutant 658 in q.js: function () {
  return value;
} replaced with function () {
  return value * 2;
}
Mutant 659 in q.js: function () {
  return value;
} replaced with function () {
  return value - 1;
}
Mutant 660 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 661 in q.js: promise replaced with Q(promise)
Mutant 662 in q.js: promise replaced with Q.resolve(promise)
Mutant 663 in q.js: value replaced with undefined
Mutant 664 in q.js: value replaced with null
Mutant 665 in q.js: value replaced with "test"
Mutant 666 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 667 in q.js: function () {
  throw reason;
} replaced with function () {
  return;
}
Mutant 668 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error("Unhandled rejection");
}
Mutant 669 in q.js: promise replaced with promise.then(function () {
  return value;
})
Mutant 670 in q.js: promise replaced with Q(value)
Mutant 671 in q.js: promise replaced with Q.resolve(value)
Mutant 672 in q.js: reason replaced with null
Mutant 673 in q.js: reason replaced with undefined
Mutant 674 in q.js: reason replaced with "error"
Mutant 675 in q.js: isPromise(value) replaced with isPromise(value) || isPromiseAlike(value)
Mutant 676 in q.js: isPromise(value) replaced with isPromise(value) && value.inspect().state === "fulfilled"
Mutant 677 in q.js: isPromise(value) replaced with isPromise(value) && value.inspect().state !== "rejected"
Mutant 678 in q.js: isPromise replaced with isPending
Mutant 679 in q.js: isPromise replaced with isFulfilled
Mutant 680 in q.js: value replaced with value.then(function (v) {
  return v;
})
Mutant 681 in q.js: value replaced with value.then(function (v) {
  return v + 1;
})
Mutant 682 in q.js: value replaced with value.then(function (v) {
  throw new Error("test");
})
Mutant 683 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 684 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "pending"
Mutant 685 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "settled"
Mutant 686 in q.js: isObject replaced with isFunction
Mutant 687 in q.js: isObject replaced with isArray
Mutant 688 in q.js: object replaced with object.then
Mutant 689 in q.js: object replaced with object.inspect
Mutant 690 in q.js: object replaced with object.isPromise
Mutant 691 in q.js: isPromise replaced with isPromiseAlike
Mutant 692 in q.js: isPromise replaced with isPending
Mutant 693 in q.js: isPromise replaced with isFulfilled
Mutant 694 in q.js: object replaced with object.inspect()
Mutant 695 in q.js: object replaced with object.then()
Mutant 696 in q.js: object replaced with object.catch()
Mutant 697 in q.js: object.inspect replaced with object.inspect.state
Mutant 698 in q.js: object.inspect replaced with object.inspect.value
Mutant 699 in q.js: object.inspect replaced with object.inspect.reason
not replacing object.inspect with object.inspect.state
not replacing object.inspect with object.inspect.value
not replacing object.inspect with object.inspect.reason
Mutant 700 in q.js: isPromise replaced with isPromiseAlike
Mutant 701 in q.js: isPromise replaced with isPending
Mutant 702 in q.js: isPromise replaced with isFulfilled
Mutant 703 in q.js: object replaced with object.then
Mutant 704 in q.js: object replaced with object.inspect
Mutant 705 in q.js: object replaced with object.isPromise
Mutant 706 in q.js: object.inspect replaced with object.inspect.state
Mutant 707 in q.js: object.inspect replaced with object.inspect.value
Mutant 708 in q.js: object.inspect replaced with object.inspect.reason
not replacing object.inspect with object.inspect.state
not replacing object.inspect with object.inspect.value
not replacing object.inspect with object.inspect.reason
Mutant 709 in q.js: this.inspect replaced with this.inspect.state
Mutant 710 in q.js: this.inspect replaced with this.inspect.value
Mutant 711 in q.js: this.inspect replaced with this.inspect.reason
not replacing this.inspect with this.inspect.state
not replacing this.inspect with this.inspect.value
not replacing this.inspect with this.inspect.reason
Mutant 712 in q.js: isPromise replaced with isPromiseAlike
Mutant 713 in q.js: isPromise replaced with isPending
Mutant 714 in q.js: isPromise replaced with isFulfilled
Mutant 715 in q.js: object replaced with object.then
Mutant 716 in q.js: object replaced with object.catch
Mutant 717 in q.js: object replaced with object.finally
Mutant 718 in q.js: object.inspect replaced with object.inspect.state
Mutant 719 in q.js: object.inspect replaced with object.inspect.value
Mutant 720 in q.js: object.inspect replaced with object.inspect.reason
not replacing object.inspect with object.inspect.state
not replacing object.inspect with object.inspect.value
not replacing object.inspect with object.inspect.reason
Mutant 721 in q.js: this.inspect replaced with this.inspect.state
Mutant 722 in q.js: this.inspect replaced with this.inspect.reason
Mutant 723 in q.js: this.inspect replaced with this.inspect.value
not replacing this.inspect with this.inspect.state
not replacing this.inspect with this.inspect.reason
not replacing this.inspect with this.inspect.value
Mutant 724 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 725 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 726 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with array_indexOf(unhandledRejections, promise) === -1
Mutant 727 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with array_indexOf(unhandledRejections, promise) > -1
Mutant 728 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, reportedUnhandledRejections, promise)
Mutant 729 in q.js: unhandledRejections replaced with unhandledRejections.length
Mutant 730 in q.js: unhandledRejections replaced with unhandledRejections[0]
Mutant 731 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 732 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 733 in q.js: promise replaced with promise.then(function (value) {
  return value + 1;
})
Mutant 734 in q.js: promise replaced with promise.then(function (value) {
  return value * 2;
})
Mutant 735 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, promise, "error")
Mutant 736 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, promise, "error", "stack")
Mutant 737 in q.js: "unhandledRejection" replaced with "rejectionHandled"
Mutant 738 in q.js: "unhandledRejection" replaced with "rejectionRejected"
Mutant 739 in q.js: reason replaced with reason.stack
Mutant 740 in q.js: reason replaced with reason.message
Mutant 741 in q.js: reason replaced with reason.name
Mutant 742 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 743 in q.js: promise replaced with promise.then(function (value) {
  return value.then(function (value) {
    return value;
  });
})
Mutant 744 in q.js: promise replaced with promise.then(function (value) {
  return value.then(function (value) {
    return value.then(function (value) {
      return value;
    });
  });
})
Mutant 745 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 746 in q.js: promise replaced with promise.then(function (value) {
  return value.inspect();
})
Mutant 747 in q.js: promise replaced with promise.then(function (value) {
  return value.toString();
})
Mutant 748 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 749 in q.js: promise replaced with promise.then(function (value) {
  return value + 1;
})
Mutant 750 in q.js: promise replaced with promise.then(function (value) {
  return value * 2;
})
Mutant 751 in q.js: reason && typeof reason.stack !== "undefined" replaced with typeof reason.stack !== "undefined"
Mutant 752 in q.js: reason.stack replaced with reason.stack.toString()
Mutant 753 in q.js: reason.stack replaced with reason.stack.length
Mutant 754 in q.js: reason.stack replaced with reason.stack.frames
Mutant 755 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.toString()
Mutant 756 in q.js: "(no stack) " + reason replaced with "(no stack) " + JSON.stringify(reason)
Mutant 757 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 758 in q.js: array_indexOf replaced with object_keys
Mutant 759 in q.js: unhandledRejections replaced with unhandledRejections.length
Mutant 760 in q.js: unhandledRejections replaced with unhandledRejections[0]
Mutant 761 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 762 in q.js: promise replaced with promise.then(function (value) {
  return value.then(function (value) {
    return value;
  });
})
Mutant 763 in q.js: promise replaced with promise.then(function (value) {
  return value.then(function (value) {
    return value.then(function (value) {
      return value;
    });
  });
})
Mutant 764 in q.js: at !== -1 replaced with at === -1
Mutant 765 in q.js: at !== -1 replaced with at > -1
Mutant 766 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(unhandledReasons, reason)
Mutant 767 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(unhandledRejections, promise)
Mutant 768 in q.js: array_indexOf replaced with object_keys
Mutant 769 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 770 in q.js: reportedUnhandledRejections replaced with unhandledReasons
Mutant 771 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 772 in q.js: promise replaced with promise.then(function (value) {
  return value + 1;
})
Mutant 773 in q.js: promise replaced with promise.then(function (value) {
  return value * 2;
})
Mutant 774 in q.js: atReport !== -1 replaced with atReport === -1
Mutant 775 in q.js: atReport !== -1 replaced with atReport !== -1 && atReport !== 0
Mutant 776 in q.js: atReport !== -1 replaced with atReport !== -1 && atReport !== 0 && atReport !== 1
Mutant 777 in q.js: unhandledReasons[at] replaced with unhandledReasons[0]
Mutant 778 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 779 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 780 in q.js: promise replaced with promise.then(function (value) {
  return value + 1;
})
Mutant 781 in q.js: promise replaced with promise.then(function (value) {
  return value * 2;
})
Mutant 782 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport + 1)
Mutant 783 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport - 1)
Mutant 784 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport * 1)
Mutant 785 in q.js: atReport replaced with atReport + 1
Mutant 786 in q.js: atReport replaced with atReport - 1
Mutant 787 in q.js: atReport replaced with atReport * 2
Mutant 788 in q.js: 1 replaced with 0
Mutant 789 in q.js: 1 replaced with 2
Mutant 790 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at + 1)
Mutant 791 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at - 1)
Mutant 792 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at * 1)
Mutant 793 in q.js: at replaced with at + 1
Mutant 794 in q.js: at replaced with at - 1
Mutant 795 in q.js: at replaced with at * 2
Mutant 796 in q.js: 1 replaced with 0
Mutant 797 in q.js: 1 replaced with -1
Mutant 798 in q.js: 1 replaced with 2
Mutant 799 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 2)
Mutant 800 in q.js: at replaced with at + 1
Mutant 801 in q.js: at replaced with at - 1
Mutant 802 in q.js: at replaced with at * 2
Mutant 803 in q.js: 1 replaced with 0
Mutant 804 in q.js: 1 replaced with 2
Mutant 805 in q.js: resetUnhandledRejections replaced with unhandledReasons.length = 0
Mutant 806 in q.js: resetUnhandledRejections replaced with unhandledRejections.length = 0
Mutant 807 in q.js: resetUnhandledRejections replaced with unhandledReasons.length = 0
Mutant 808 in q.js: resetUnhandledRejections replaced with unhandledRejections.length = 0
Mutant 809 in q.js: rejected replaced with true
Mutant 810 in q.js: rejected replaced with false
Mutant 811 in q.js: this replaced with undefined
Mutant 812 in q.js: this replaced with null
Mutant 813 in q.js: rejected replaced with "rejected"
Mutant 814 in q.js: rejected replaced with undefined
Mutant 815 in q.js: rejected replaced with null
Mutant 816 in q.js: reason replaced with undefined
Mutant 817 in q.js: reason replaced with null
Mutant 818 in q.js: reason replaced with "test"
Mutant 819 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection)
Mutant 820 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection.reason)
Mutant 821 in q.js: rejection replaced with rejection.stack
Mutant 822 in q.js: rejection replaced with rejection.message
Mutant 823 in q.js: rejection replaced with rejection.reason
Mutant 824 in q.js: reason replaced with null
Mutant 825 in q.js: reason replaced with undefined
Mutant 826 in q.js: reason replaced with "test"
Mutant 827 in q.js: name === null || name === void 0 replaced with name === null || name === void 0 || name === ""
Mutant 828 in q.js: value.apply(void 0, args) replaced with value.apply(null)
Mutant 829 in q.js: value.apply(void 0, args) replaced with value.apply(undefined)
Mutant 830 in q.js: value.apply(void 0, args) replaced with value.apply({})
Mutant 831 in q.js: void 0 replaced with null
Mutant 832 in q.js: void 0 replaced with undefined
Mutant 833 in q.js: void 0 replaced with {}
Mutant 834 in q.js: args replaced with []
Mutant 835 in q.js: args replaced with {}
Mutant 836 in q.js: args replaced with undefined
Mutant 837 in q.js: value replaced with undefined
Mutant 838 in q.js: value replaced with null
Mutant 839 in q.js: value replaced with {}
Mutant 840 in q.js: args replaced with args.length
Mutant 841 in q.js: args replaced with args[0]
Mutant 842 in q.js: args replaced with args.slice(1)
Mutant 843 in q.js: value.apply(thisp, args) replaced with value.apply(thisp)
Mutant 844 in q.js: value.apply(thisp, args) replaced with value.apply(args)
Mutant 845 in q.js: value.apply(thisp, args) replaced with value.apply(void 0)
Mutant 846 in q.js: thisp replaced with this
Mutant 847 in q.js: thisp replaced with void 0
Mutant 848 in q.js: thisp replaced with null
Mutant 849 in q.js: args replaced with args.length
Mutant 850 in q.js: args replaced with args[0]
Mutant 851 in q.js: args replaced with args.slice()
Mutant 852 in q.js: object_keys replaced with Object.keys
Mutant 853 in q.js: value replaced with value.length
Mutant 854 in q.js: value replaced with value[0]
Mutant 855 in q.js: value replaced with value.slice(0, 1)
Mutant 856 in q.js: defer replaced with Q.nextTick
Mutant 857 in q.js: deferred.resolve replaced with deferred.reject
Mutant 858 in q.js: deferred.resolve replaced with deferred.notify
Mutant 859 in q.js: deferred.reject replaced with deferred.resolve
Mutant 860 in q.js: deferred.reject replaced with deferred.notify
Mutant 861 in q.js: deferred.reject replaced with deferred.when
Mutant 862 in q.js: deferred.notify replaced with deferred.resolve
Mutant 863 in q.js: deferred.notify replaced with deferred.reject
Mutant 864 in q.js: deferred.reject replaced with deferred.resolve
Mutant 865 in q.js: exception replaced with null
Mutant 866 in q.js: exception replaced with undefined
Mutant 867 in q.js: exception replaced with new Error("rejected")
Mutant 868 in q.js: dispatch(object, op, args) replaced with dispatch(op, args)
Mutant 869 in q.js: dispatch(object, op, args) replaced with dispatch(op, args, object)
Mutant 870 in q.js: dispatch replaced with Q.dispatch
Mutant 871 in q.js: dispatch replaced with Q.when
Mutant 872 in q.js: object replaced with object.toString()
Mutant 873 in q.js: object replaced with object.valueOf()
Mutant 874 in q.js: object replaced with object.constructor
Mutant 875 in q.js: op replaced with "isDef"
Mutant 876 in q.js: op replaced with "isDef()"
Mutant 877 in q.js: args replaced with undefined
Mutant 878 in q.js: args replaced with null
Mutant 879 in q.js: args replaced with {}
Mutant 880 in q.js: Q replaced with Q.reject
Mutant 881 in q.js: Q replaced with Q.fulfill
Mutant 882 in q.js: Q replaced with Q.spread
Mutant 883 in q.js: object replaced with undefined
Mutant 884 in q.js: object replaced with null
Mutant 885 in q.js: object replaced with {}
Mutant 886 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled)
Mutant 887 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected)
Mutant 888 in q.js: value replaced with value.length
Mutant 889 in q.js: value replaced with value[0]
Mutant 890 in q.js: value replaced with value.slice(0, 1)
Mutant 891 in q.js: fulfilled replaced with rejected
Mutant 892 in q.js: fulfilled replaced with undefined
Mutant 893 in q.js: fulfilled replaced with null
Mutant 894 in q.js: rejected replaced with undefined
Mutant 895 in q.js: rejected replaced with null
Mutant 896 in q.js: rejected replaced with NaN
Mutant 897 in q.js: this.all replaced with this.spread
Mutant 898 in q.js: this.all replaced with this.then
not replacing this.all with this.spread
not replacing this.all with this.spread
not replacing this.all with this.then
not replacing this.all with this.then
Mutant 899 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null, array)
Mutant 900 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(undefined, array)
Mutant 901 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(object, array)
Mutant 902 in q.js: void 0 replaced with null
Mutant 903 in q.js: void 0 replaced with undefined
Mutant 904 in q.js: void 0 replaced with {}
Mutant 905 in q.js: array replaced with array.length
Mutant 906 in q.js: array replaced with array[0]
Mutant 907 in q.js: array replaced with array.slice(1)
Mutant 908 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 909 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration === "function"
Mutant 910 in q.js: arg replaced with undefined
Mutant 911 in q.js: arg replaced with null
Mutant 912 in q.js: arg replaced with "foo"
Mutant 913 in q.js: reject replaced with resolve
Mutant 914 in q.js: reject replaced with deferred.reject
Mutant 915 in q.js: exception replaced with undefined
Mutant 916 in q.js: exception replaced with null
Mutant 917 in q.js: exception replaced with new Error()
Mutant 918 in q.js: result.done replaced with result.isDone
Mutant 919 in q.js: result.done replaced with result.isResolved
Mutant 920 in q.js: result.value replaced with result.value.toUpperCase()
Mutant 921 in q.js: result.value replaced with result.value.toLowerCase()
Mutant 922 in q.js: result.value replaced with result.value.length
Mutant 923 in q.js: result.value replaced with result.value.toFixed(2)
Mutant 924 in q.js: result.value replaced with result.value.toExponential(2)
Mutant 925 in q.js: result.value replaced with result.value.toPrecision(2)
Mutant 926 in q.js: callback replaced with callback()
Mutant 927 in q.js: callback replaced with callback.call(this)
Mutant 928 in q.js: callback replaced with callback.apply(this, arguments)
Mutant 929 in q.js: errback replaced with callback
Mutant 930 in q.js: errback replaced with Q.reject(new Error("Test error"))
Mutant 931 in q.js: arg replaced with undefined
Mutant 932 in q.js: arg replaced with null
Mutant 933 in q.js: arg replaced with "foo"
Mutant 934 in q.js: isStopIteration(exception) replaced with isReturnValue(exception)
Mutant 935 in q.js: isStopIteration(exception) replaced with isException(exception)
Mutant 936 in q.js: exception replaced with Q.return(exception)
Mutant 937 in q.js: exception replaced with Q.return(exception.value)
Mutant 938 in q.js: exception replaced with Q.return(exception.message)
Mutant 939 in q.js: exception.value replaced with exception.message
Mutant 940 in q.js: exception.value replaced with exception.stack
Mutant 941 in q.js: exception.value replaced with exception.name
Mutant 942 in q.js: exception replaced with Q.reject(exception)
Mutant 943 in q.js: exception replaced with Q.resolve(exception)
Mutant 944 in q.js: exception replaced with Q.when(exception)
Mutant 945 in q.js: result replaced with result.value
Mutant 946 in q.js: result replaced with result.then(function (value) {
  return value;
})
Mutant 947 in q.js: result replaced with result.catch(function (error) {
  throw error;
})
Mutant 948 in q.js: callback replaced with callback.apply(void 0, array)
Mutant 949 in q.js: errback replaced with callback
Mutant 950 in q.js: errback replaced with function () {}
Mutant 951 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(this)
Mutant 952 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(arguments)
Mutant 953 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(void 0)
Mutant 954 in q.js: this replaced with this.foo
Mutant 955 in q.js: this replaced with this.bar
Mutant 956 in q.js: this replaced with this.baz
Mutant 957 in q.js: arguments replaced with undefined
Mutant 958 in q.js: arguments replaced with null
Mutant 959 in q.js: arguments replaced with []
Mutant 960 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "send")
Mutant 961 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "throw")
Mutant 962 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "return")
Mutant 963 in q.js: continuer replaced with continuer.bind(this, "next")
Mutant 964 in q.js: continuer replaced with continuer.bind(this, "throw")
Mutant 965 in q.js: continuer replaced with continuer.bind(this, "return")
Mutant 966 in q.js: "next" replaced with "throw"
Mutant 967 in q.js: "next" replaced with "return"
Mutant 968 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "next")
Mutant 969 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "send")
Mutant 970 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "return")
Mutant 971 in q.js: continuer replaced with continuer.bind(continuer, "next")
Mutant 972 in q.js: continuer replaced with continuer.bind(continuer, "throw")
Mutant 973 in q.js: continuer replaced with continuer.bind(continuer, "return")
Mutant 974 in q.js: "throw" replaced with "send"
Mutant 975 in q.js: "throw" replaced with "next"
Mutant 976 in q.js: "throw" replaced with "return"
Mutant 977 in q.js: Q.done replaced with Q.spread
Mutant 978 in q.js: makeGenerator replaced with makeGenerator()
Mutant 979 in q.js: makeGenerator replaced with makeGenerator.call(this)
Mutant 980 in q.js: all replaced with any
Mutant 981 in q.js: all replaced with none
Mutant 982 in q.js: arguments replaced with undefined
Mutant 983 in q.js: arguments replaced with null
Mutant 984 in q.js: arguments replaced with []
Mutant 985 in q.js: callback.apply(self, args) replaced with callback.apply(self)
Mutant 986 in q.js: callback.apply(self, args) replaced with callback.apply(args[0])
Mutant 987 in q.js: callback.apply(self, args) replaced with callback.apply(undefined)
Mutant 988 in q.js: self replaced with self.foo
Mutant 989 in q.js: self replaced with this.foo
Mutant 990 in q.js: self replaced with undefined
Mutant 991 in q.js: args replaced with args.length
Mutant 992 in q.js: args replaced with args[0]
Mutant 993 in q.js: args replaced with args.slice(1)
Mutant 994 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch("when", args)
Mutant 995 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch("post", args)
Mutant 996 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch("dispatch", args)
Mutant 997 in q.js: Q(object).dispatch replaced with object.dispatch
Mutant 998 in q.js: object replaced with object.value
Mutant 999 in q.js: object replaced with object.value.length
Mutant 1000 in q.js: object replaced with object.value.length - 1
Mutant 1001 in q.js: op replaced with "when"
Mutant 1002 in q.js: op replaced with "post"
Mutant 1003 in q.js: op replaced with "get"
Mutant 1004 in q.js: args replaced with undefined
Mutant 1005 in q.js: args replaced with null
Mutant 1006 in q.js: args replaced with []
Mutant 1007 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1008 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1009 in q.js: deferred.resolve replaced with deferred.resolve(null)
Mutant 1010 in q.js: deferred.resolve replaced with deferred.resolve(undefined)
Mutant 1011 in q.js: op replaced with "op"
Mutant 1012 in q.js: op replaced with "op" + "op"
Mutant 1013 in q.js: op replaced with "op" + "op" + "op"
Mutant 1014 in q.js: args replaced with []
Mutant 1015 in q.js: args replaced with undefined
Mutant 1016 in q.js: args replaced with null
Mutant 1017 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("get", [key, "value"])
Mutant 1018 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("get", [key, "value", "name"])
Mutant 1019 in q.js: object replaced with object.foo
Mutant 1020 in q.js: object replaced with object.bar
Mutant 1021 in q.js: object replaced with object.baz
Mutant 1022 in q.js: "get" replaced with "set"
Mutant 1023 in q.js: "get" replaced with "post"
Mutant 1024 in q.js: [key] replaced with [key, key]
Mutant 1025 in q.js: [key] replaced with [key, "key"]
Mutant 1026 in q.js: [key] replaced with [key, "key", key]
Mutant 1027 in q.js: "get" replaced with "set"
Mutant 1028 in q.js: "get" replaced with "post"
Mutant 1029 in q.js: object replaced with Q(object)
Mutant 1030 in q.js: object replaced with object.dispatch
Mutant 1031 in q.js: object replaced with Q.dispatch(object)
Mutant 1032 in q.js: "set" replaced with "set" + "foo"
Mutant 1033 in q.js: "set" replaced with "set" + "foo" + "bar"
Mutant 1034 in q.js: [key, value] replaced with [key, value, key]
Mutant 1035 in q.js: [key, value] replaced with [key, value, key, value]
Mutant 1036 in q.js: "set" replaced with "set" + "foo"
Mutant 1037 in q.js: "set" replaced with "set" + "foo" + "bar"
Mutant 1038 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("del", [key])
Mutant 1039 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("remove", [key])
Mutant 1040 in q.js: object replaced with this
Mutant 1041 in q.js: "delete" replaced with "undefined"
Mutant 1042 in q.js: "delete" replaced with "null"
Mutant 1043 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("del", [key])
Mutant 1044 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("remove", [key])
Mutant 1045 in q.js: "delete" replaced with "undefined"
Mutant 1046 in q.js: "delete" replaced with "null"
Mutant 1047 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("apply", [name, args])
Mutant 1048 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("call", [name, args])
Mutant 1049 in q.js: object replaced with Q(object).dispatch("post", [name, args])
Mutant 1050 in q.js: object replaced with Q(object).dispatch("apply", [void 0, args])
Mutant 1051 in q.js: "post" replaced with "get"
Mutant 1052 in q.js: "post" replaced with "set"
Mutant 1053 in q.js: [name, args] replaced with [name, args, 1]
Mutant 1054 in q.js: [name, args] replaced with [name, args, "1"]
Mutant 1055 in q.js: [name, args] replaced with [name, args, "one"]
Mutant 1056 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args[0]])
Mutant 1057 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args[1]])
Mutant 1058 in q.js: "post" replaced with "get"
Mutant 1059 in q.js: "post" replaced with "set"
Mutant 1060 in q.js: [name, args] replaced with [name, args, 1]
Mutant 1061 in q.js: [name, args] replaced with [name, args, "test"]
Mutant 1062 in q.js: [name, args] replaced with [name, args, function () {
  console.log("test");
}]
Mutant 1063 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1064 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1065 in q.js: Q replaced with Q.dispatch
Mutant 1066 in q.js: object replaced with object.property
Mutant 1067 in q.js: object replaced with object.method()
Mutant 1068 in q.js: object replaced with object.method.call(this)
Mutant 1069 in q.js: "post" replaced with "apply"
Mutant 1070 in q.js: "post" replaced with "when"
Mutant 1071 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1072 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 3)]
Mutant 1073 in q.js: array_slice(arguments, 2) replaced with array_slice([])
Mutant 1074 in q.js: array_slice(arguments, 2) replaced with array_slice([1, 2, 3])
Mutant 1075 in q.js: array_slice replaced with array_reduce
Mutant 1076 in q.js: array_slice replaced with array_map
Mutant 1077 in q.js: arguments replaced with undefined
Mutant 1078 in q.js: arguments replaced with []
Mutant 1079 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("apply", [name, array_slice(arguments, 1)])
Mutant 1080 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("apply", [name, array_slice(arguments, 2)])
Mutant 1081 in q.js: this.dispatch replaced with Q.dispatch
Mutant 1082 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1083 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 0)]
Mutant 1084 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments)
Mutant 1085 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 1086 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1, arguments.length))
Mutant 1087 in q.js: array_slice replaced with array_reduce
Mutant 1088 in q.js: array_slice replaced with array_map
Mutant 1089 in q.js: arguments replaced with []
Mutant 1090 in q.js: arguments replaced with [1, 2, 3]
Mutant 1091 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [args])
Mutant 1092 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [args, void 0])
Mutant 1093 in q.js: Q replaced with Q.all
Mutant 1094 in q.js: Q replaced with Q.when
Mutant 1095 in q.js: Q replaced with Q.fcall
Mutant 1096 in q.js: object replaced with object.promise
Mutant 1097 in q.js: object replaced with Q.resolve(object)
Mutant 1098 in q.js: "apply" replaced with "call"
Mutant 1099 in q.js: "apply" replaced with "bind"
Mutant 1100 in q.js: [void 0, args] replaced with [args]
Mutant 1101 in q.js: [void 0, args] replaced with [this, args]
Mutant 1102 in q.js: [void 0, args] replaced with [this, args, void 0]
Mutant 1103 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [args])
Mutant 1104 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [args[0]])
Mutant 1105 in q.js: this.dispatch replaced with Q.dispatch
Mutant 1106 in q.js: "apply" replaced with "call"
Mutant 1107 in q.js: "apply" replaced with "bind"
Mutant 1108 in q.js: [void 0, args] replaced with [args]
Mutant 1109 in q.js: [void 0, args] replaced with [args, void 0]
Mutant 1110 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1111 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)])
Mutant 1112 in q.js: object replaced with object.key
Mutant 1113 in q.js: object replaced with object.key.value
Mutant 1114 in q.js: object replaced with object.key.value.name
Mutant 1115 in q.js: "apply" replaced with "call"
Mutant 1116 in q.js: "apply" replaced with "post"
Mutant 1117 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1118 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1119 in q.js: arguments replaced with arguments[0]
Mutant 1120 in q.js: arguments replaced with null
Mutant 1121 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1122 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1123 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 3)])
Mutant 1124 in q.js: "apply" replaced with "call"
Mutant 1125 in q.js: "apply" replaced with "bind"
Mutant 1126 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1127 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1128 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 3)]
Mutant 1129 in q.js: array_slice replaced with array_concat
Mutant 1130 in q.js: array_slice replaced with array_reduce
Mutant 1131 in q.js: arguments replaced with arguments[0]
Mutant 1132 in q.js: Q replaced with Q.set
Mutant 1133 in q.js: Q replaced with Q.get
Mutant 1134 in q.js: Q replaced with Q.all
Mutant 1135 in q.js: object replaced with object.key
Mutant 1136 in q.js: object replaced with object.key.value
Mutant 1137 in q.js: object replaced with object.key.value.key
Mutant 1138 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1139 in q.js: array_slice(arguments, 1) replaced with array_slice(args, 1)
Mutant 1140 in q.js: array_slice(arguments, 1) replaced with array_slice(void 0, 1)
Mutant 1141 in q.js: array_slice replaced with array_concat
Mutant 1142 in q.js: array_slice replaced with array_reduce
Mutant 1143 in q.js: arguments replaced with undefined
Mutant 1144 in q.js: arguments replaced with []
Mutant 1145 in q.js: arguments replaced with [1, 2, 3]
Mutant 1146 in q.js: 1 replaced with 0
Mutant 1147 in q.js: 1 replaced with 2
Mutant 1148 in q.js: args.concat replaced with args.slice
Mutant 1149 in q.js: args.concat replaced with args.splice
Mutant 1150 in q.js: args.concat replaced with args.push
Mutant 1151 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1152 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1153 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1154 in q.js: array_slice replaced with array_concat
Mutant 1155 in q.js: array_slice replaced with array_reduce
Mutant 1156 in q.js: arguments replaced with arguments[0]
Mutant 1157 in q.js: arguments replaced with void 0
Mutant 1158 in q.js: arguments replaced with this
Mutant 1159 in q.js: array_slice replaced with array_concat
Mutant 1160 in q.js: array_slice replaced with array_reduce
Mutant 1161 in q.js: arguments replaced with arguments[0]
Mutant 1162 in q.js: arguments replaced with void 0
Mutant 1163 in q.js: arguments replaced with this
Mutant 1164 in q.js: args.concat replaced with args.slice
Mutant 1165 in q.js: args.concat replaced with args.splice
Mutant 1166 in q.js: args.concat replaced with args.push
Mutant 1167 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1168 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1169 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1170 in q.js: array_slice replaced with array_concat
Mutant 1171 in q.js: array_slice replaced with array_reduce
Mutant 1172 in q.js: arguments replaced with []
Mutant 1173 in q.js: arguments replaced with [undefined]
Mutant 1174 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [1])
Mutant 1175 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", ["a"])
Mutant 1176 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [1, 2])
Mutant 1177 in q.js: Q replaced with Q.keys
Mutant 1178 in q.js: Q replaced with Q.all
Mutant 1179 in q.js: Q replaced with Q.any
Mutant 1180 in q.js: object replaced with object.keys()
Mutant 1181 in q.js: object replaced with object.toString()
Mutant 1182 in q.js: object replaced with object.constructor
Mutant 1183 in q.js: "keys" replaced with "length"
Mutant 1184 in q.js: "keys" replaced with "toString"
Mutant 1185 in q.js: [] replaced with [1]
Mutant 1186 in q.js: [] replaced with [1, 2, 3]
Mutant 1187 in q.js: [] replaced with [1, 2, 3, 4, 5]
Mutant 1188 in q.js: this.dispatch("keys", []) replaced with this.dispatch("keys", [1, 2, 3])
Mutant 1189 in q.js: "keys" replaced with "length"
Mutant 1190 in q.js: "keys" replaced with "toString"
Mutant 1191 in q.js: [] replaced with [1, 2, 3]
Mutant 1192 in q.js: [] replaced with [1, 2, 3, 4]
Mutant 1193 in q.js: [] replaced with [1, 2, 3, 4, 5]
Mutant 1194 in q.js: defer replaced with Q.deferred.promise
Mutant 1195 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with isPromise(promise) && (snapshot = promise.inspect()).state === "rejected"
Mutant 1196 in q.js: promise replaced with Q(object).dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1197 in q.js: promise replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1198 in q.js: promise.inspect replaced with promise.state
Mutant 1199 in q.js: promise.inspect replaced with promise.value
Mutant 1200 in q.js: --pendingCount === 0 replaced with pendingCount--
Mutant 1201 in q.js: --pendingCount === 0 replaced with pendingCount = 0
Mutant 1202 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1203 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1204 in q.js: deferred.resolve replaced with deferred.progress
Mutant 1205 in q.js: promises replaced with promises.length
Mutant 1206 in q.js: promises replaced with []
Mutant 1207 in q.js: promises replaced with undefined
Mutant 1208 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress,
  other: "value"
}
Mutant 1209 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1210 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1211 in q.js: pendingCount === 0 replaced with pendingCount === 1
Mutant 1212 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1213 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1214 in q.js: deferred.resolve replaced with deferred.progress
Mutant 1215 in q.js: promises replaced with promises.length
Mutant 1216 in q.js: promises replaced with promises[0]
Mutant 1217 in q.js: promises replaced with []
Mutant 1218 in q.js: this replaced with this.all()
Mutant 1219 in q.js: this replaced with Q.all(this)
Mutant 1220 in q.js: this replaced with Q.all(this.all())
Mutant 1221 in q.js: promises.length === 0 replaced with promises.length > 0
Mutant 1222 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1223 in q.js: promises.length === 0 replaced with promises.length === 1
Mutant 1224 in q.js: Q.resolve replaced with Q.reject
Mutant 1225 in q.js: Q.defer replaced with Q.when
Mutant 1226 in q.js: Q.defer replaced with Q.all
Mutant 1227 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise, onFulfilled, onRejected)
Mutant 1228 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise, onFulfilled)
Mutant 1229 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 1230 in q.js: promise replaced with promise.then(function (value) {
  return Q(value);
})
Mutant 1231 in q.js: promise replaced with promise.then(function (value) {
  return Q.resolve(value);
})
Mutant 1232 in q.js: onFulfilled replaced with onRejected
Mutant 1233 in q.js: onFulfilled replaced with onProgress
Mutant 1234 in q.js: onFulfilled replaced with noop
Mutant 1235 in q.js: onRejected replaced with onRejected(err)
Mutant 1236 in q.js: onRejected replaced with onRejected()
Mutant 1237 in q.js: onRejected replaced with onRejected(err, index)
Mutant 1238 in q.js: onProgress replaced with onFulfilled
Mutant 1239 in q.js: onProgress replaced with onRejected
Mutant 1240 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1241 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1242 in q.js: deferred.resolve replaced with deferred.inspect
Mutant 1243 in q.js: result replaced with result.value
Mutant 1244 in q.js: result replaced with result.value || result.reason
Mutant 1245 in q.js: result replaced with result.value || result.reason || null
Mutant 1246 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1247 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1248 in q.js: pendingCount === 0 replaced with pendingCount === 1
Mutant 1249 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1250 in q.js: deferred.reject replaced with deferred.notify
Mutant 1251 in q.js: rejection replaced with rejection.message
Mutant 1252 in q.js: rejection replaced with rejection.stack
Mutant 1253 in q.js: rejection replaced with rejection.name
Mutant 1254 in q.js: any replaced with all
Mutant 1255 in q.js: any replaced with when
Mutant 1256 in q.js: any replaced with Q.all
Mutant 1257 in q.js: this replaced with this.dispatch("keys", [])
Mutant 1258 in q.js: this replaced with this.dispatch("keys", [1, 2, 3])
Mutant 1259 in q.js: this replaced with this.dispatch("keys", [1, 2, 3, 4])
Mutant 1260 in q.js: allResolved replaced with allSettled
Mutant 1261 in q.js: allResolved replaced with any
Mutant 1262 in q.js: "allResolved" replaced with "allSettled"
Mutant 1263 in q.js: "allResolved" replaced with "all"
Mutant 1264 in q.js: "allResolved" replaced with "any"
Mutant 1265 in q.js: array_map(promises, Q) replaced with array_map(promises, promises)
Mutant 1266 in q.js: array_map(promises, Q) replaced with array_map(Q, Q)
Mutant 1267 in q.js: array_map replaced with array_filter
Mutant 1268 in q.js: array_map replaced with array_reduce
Mutant 1269 in q.js: array_map replaced with array_some
Mutant 1270 in q.js: promises replaced with promises.length
Mutant 1271 in q.js: promises replaced with promises[0]
Mutant 1272 in q.js: promises replaced with promises.slice()
Mutant 1273 in q.js: Q replaced with Q.allSettled(promises)
Mutant 1274 in q.js: Q replaced with Q.all(promises)
Mutant 1275 in q.js: Q replaced with Q.any(promises)
Mutant 1276 in q.js: when(promise, noop, noop) replaced with when(promise, noop, noop, noop)
Mutant 1277 in q.js: when(promise, noop, noop) replaced with when(promise, noop, noop, noop, noop)
Mutant 1278 in q.js: promise replaced with promise.inspect()
Mutant 1279 in q.js: promise replaced with promise.value()
Mutant 1280 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 1281 in q.js: noop replaced with undefined
Mutant 1282 in q.js: noop replaced with null
Mutant 1283 in q.js: noop replaced with function () {}
Mutant 1284 in q.js: noop replaced with function () {
  return 1;
}
Mutant 1285 in q.js: noop replaced with function () {
  return 0;
}
Mutant 1286 in q.js: noop replaced with function () {
  return undefined;
}
Mutant 1287 in q.js: allResolved replaced with allSettled
Mutant 1288 in q.js: allResolved replaced with any
Mutant 1289 in q.js: this replaced with this.all()
Mutant 1290 in q.js: this replaced with this.allSettled()
Mutant 1291 in q.js: this replaced with this.allResolved()
Mutant 1292 in q.js: promises replaced with promises.length
Mutant 1293 in q.js: promises replaced with []
Mutant 1294 in q.js: promises replaced with undefined
Mutant 1295 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 1296 in q.js: promise replaced with promise.then(function (value) {
  return Q.resolve(value);
})
Mutant 1297 in q.js: promise replaced with promise.then(function (value) {
  return Q.reject(value);
})
Mutant 1298 in q.js: promise.then(regardless, regardless) replaced with promise.then(regardless, null)
Mutant 1299 in q.js: promise.then(regardless, regardless) replaced with promise.then(null, regardless)
Mutant 1300 in q.js: regardless replaced with Q.reject(new Error("Q can't get fulfillment value from any promise, all promises were rejected."))
Mutant 1301 in q.js: regardless replaced with Q.resolve(result)
Mutant 1302 in q.js: regardless replaced with Q.when(promise, onFulfilled, onRejected, onProgress)
Mutant 1303 in q.js: regardless replaced with Q.reject(new Error("Q can't get fulfillment value from any promise, all promises were rejected."))
Mutant 1304 in q.js: regardless replaced with Q.resolve(result)
Mutant 1305 in q.js: regardless replaced with Q.when(promise, onFulfilled, onRejected, onProgress)
Mutant 1306 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void 0, void 0)
Mutant 1307 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(fulfilled, void 0)
Mutant 1308 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(rejected, void 0)
Mutant 1309 in q.js: object replaced with object.promise
Mutant 1310 in q.js: object replaced with Q.defer()
Mutant 1311 in q.js: void 0 replaced with null
Mutant 1312 in q.js: void 0 replaced with undefined
Mutant 1313 in q.js: void 0 replaced with Q.reject(new Error("Promise was rejected"))
Mutant 1314 in q.js: rejected replaced with when(promise, noop, noop)
Mutant 1315 in q.js: rejected replaced with when(promise, noop, noop).then(noop, noop)
Mutant 1316 in q.js: this.then(void 0, rejected) replaced with this.then(void 0, void 0)
Mutant 1317 in q.js: this.then(void 0, rejected) replaced with this.then(rejected, void 0)
Mutant 1318 in q.js: void 0 replaced with null
Mutant 1319 in q.js: void 0 replaced with undefined
Mutant 1320 in q.js: void 0 replaced with Q(callback)
Mutant 1321 in q.js: rejected replaced with void 0
Mutant 1322 in q.js: rejected replaced with null
Mutant 1323 in q.js: object replaced with object.then(function (value) {
  return value;
})
Mutant 1324 in q.js: object replaced with object.then(function (value) {
  return Q(value);
})
Mutant 1325 in q.js: object replaced with object.then(function (value) {
  return Q.resolve(value);
})
Mutant 1326 in q.js: void 0 replaced with null
Mutant 1327 in q.js: void 0 replaced with undefined
Mutant 1328 in q.js: void 0 replaced with function () {}
Mutant 1329 in q.js: void 0 replaced with null
Mutant 1330 in q.js: void 0 replaced with undefined
Mutant 1331 in q.js: void 0 replaced with function () {}
Mutant 1332 in q.js: progressed replaced with function (progress) {
  console.log(progress);
}
Mutant 1333 in q.js: progressed replaced with function (progress) {
  return progress;
}
Mutant 1334 in q.js: void 0 replaced with null
Mutant 1335 in q.js: void 0 replaced with undefined
Mutant 1336 in q.js: void 0 replaced with function () {}
Mutant 1337 in q.js: void 0 replaced with null
Mutant 1338 in q.js: void 0 replaced with undefined
Mutant 1339 in q.js: void 0 replaced with function () {}
Mutant 1340 in q.js: progressed replaced with function (value) {
  return value;
}
Mutant 1341 in q.js: progressed replaced with function (value) {
  return value * 2;
}
Mutant 1342 in q.js: Q replaced with Q.allSettled
Mutant 1343 in q.js: Q replaced with Q.when
Mutant 1344 in q.js: object replaced with Q(object)
Mutant 1345 in q.js: object replaced with object.then(function (value) {
  return value;
})
Mutant 1346 in q.js: object replaced with Q.when(object)
Mutant 1347 in q.js: callback replaced with callback()
Mutant 1348 in q.js: callback replaced with callback.call()
Mutant 1349 in q.js: callback replaced with callback.apply()
Mutant 1350 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.apply === "function"
Mutant 1351 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.call === "function"
Mutant 1352 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.bind === "function"
Mutant 1353 in q.js: callback replaced with callback()
Mutant 1354 in q.js: callback replaced with callback.call()
Mutant 1355 in q.js: callback replaced with callback.apply()
Mutant 1356 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1357 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(progress, fulfilled, rejected)
Mutant 1358 in q.js: object replaced with Q.when(object)
Mutant 1359 in q.js: object replaced with Q.resolve(object)
Mutant 1360 in q.js: fulfilled replaced with rejected
Mutant 1361 in q.js: fulfilled replaced with void 0
Mutant 1362 in q.js: fulfilled replaced with null
Mutant 1363 in q.js: rejected replaced with void 0
Mutant 1364 in q.js: rejected replaced with null
Mutant 1365 in q.js: rejected replaced with undefined
Mutant 1366 in q.js: progress replaced with Q.when(promise)
Mutant 1367 in q.js: progress replaced with Q.all(promise)
Mutant 1368 in q.js: progress replaced with Q.spread(promise)
Mutant 1369 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error)
Mutant 1370 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(promise)
Mutant 1371 in q.js: error replaced with null
Mutant 1372 in q.js: error replaced with undefined
Mutant 1373 in q.js: error replaced with "error"
Mutant 1374 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 1375 in q.js: promise replaced with promise.then(function (value) {
  return Q(value);
})
Mutant 1376 in q.js: promise replaced with promise.then(function (value) {
  return value + 1;
})
Mutant 1377 in q.js: Q.onerror replaced with Q.onerror(error)
Mutant 1378 in q.js: Q.onerror replaced with Q.onerror(error, promise)
Mutant 1379 in q.js: error replaced with null
Mutant 1380 in q.js: error replaced with undefined
Mutant 1381 in q.js: error replaced with Q.onerror
Mutant 1382 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(void 0)
Mutant 1383 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(null)
Mutant 1384 in q.js: fulfilled replaced with rejected
Mutant 1385 in q.js: fulfilled replaced with void 0
Mutant 1386 in q.js: fulfilled replaced with null
Mutant 1387 in q.js: rejected replaced with void 0
Mutant 1388 in q.js: progress replaced with Q.when(progress)
Mutant 1389 in q.js: progress replaced with Q.delay(progress, 0)
Mutant 1390 in q.js: onUnhandledError replaced with onUnhandledError.bind(this)
Mutant 1391 in q.js: onUnhandledError replaced with onUnhandledError.bind(promise)
Mutant 1392 in q.js: onUnhandledError replaced with onUnhandledError.bind(Q)
Mutant 1393 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError, void 0)
Mutant 1394 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(void 0, void 0)
Mutant 1395 in q.js: void 0 replaced with null
Mutant 1396 in q.js: void 0 replaced with undefined
Mutant 1397 in q.js: void 0 replaced with NaN
Mutant 1398 in q.js: onUnhandledError replaced with onUnhandledError.bind(this)
Mutant 1399 in q.js: onUnhandledError replaced with onUnhandledError.call(this)
Mutant 1400 in q.js: onUnhandledError replaced with onUnhandledError.apply(this)
Mutant 1401 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms + 1, error)
Mutant 1402 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms - 1, error)
Mutant 1403 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, new Error("Custom error message"))
Mutant 1404 in q.js: object replaced with object.then(void 0, void 0, progressed)
Mutant 1405 in q.js: object replaced with Q(object).then(void 0, void 0, progressed)
Mutant 1406 in q.js: ms replaced with ms + 1
Mutant 1407 in q.js: ms replaced with ms - 1
Mutant 1408 in q.js: ms replaced with ms * 2
Mutant 1409 in q.js: error replaced with null
Mutant 1410 in q.js: error replaced with undefined
Mutant 1411 in q.js: error replaced with new Error("Test error")
Mutant 1412 in q.js: defer replaced with deferred.promise
Mutant 1413 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1414 in q.js: !error || "string" === typeof error replaced with error && typeof error === "string"
Mutant 1415 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1416 in q.js: deferred.reject replaced with deferred.notify
Mutant 1417 in q.js: error replaced with null
Mutant 1418 in q.js: error replaced with undefined
Mutant 1419 in q.js: error replaced with new Error("Test error")
Mutant 1420 in q.js: clearTimeout replaced with clearInterval
Mutant 1421 in q.js: clearTimeout replaced with clearImmediate
Mutant 1422 in q.js: timeoutId replaced with clearTimeout(timeoutId)
Mutant 1423 in q.js: timeoutId replaced with clearTimeout(timeoutId + 1)
Mutant 1424 in q.js: timeoutId replaced with clearTimeout(timeoutId - 1)
Mutant 1425 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1426 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1427 in q.js: value replaced with undefined
Mutant 1428 in q.js: value replaced with null
Mutant 1429 in q.js: value replaced with "test"
Mutant 1430 in q.js: clearTimeout replaced with clearInterval
Mutant 1431 in q.js: clearTimeout replaced with setInterval
Mutant 1432 in q.js: timeoutId replaced with clearTimeout(timeoutId)
Mutant 1433 in q.js: timeoutId replaced with clearTimeout(undefined)
Mutant 1434 in q.js: timeoutId replaced with clearTimeout(null)
Mutant 1435 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1436 in q.js: exception replaced with new Error("Q can't apply finally callback")
Mutant 1437 in q.js: exception replaced with undefined
Mutant 1438 in q.js: exception replaced with null
Mutant 1439 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1440 in q.js: timeout === void 0 replaced with timeout === undefined
Mutant 1441 in q.js: timeout === void 0 replaced with timeout === 0
Mutant 1442 in q.js: object replaced with undefined
Mutant 1443 in q.js: object replaced with null
Mutant 1444 in q.js: object replaced with "test"
Mutant 1445 in q.js: timeout replaced with timeout + 1
Mutant 1446 in q.js: timeout replaced with timeout - 1
Mutant 1447 in q.js: timeout replaced with timeout * 2
Mutant 1448 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1449 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1450 in q.js: value replaced with undefined
Mutant 1451 in q.js: value replaced with null
Mutant 1452 in q.js: value replaced with "hello"
Mutant 1453 in q.js: callback replaced with callback.bind(this)
Mutant 1454 in q.js: callback replaced with callback.call(this)
Mutant 1455 in q.js: callback replaced with callback.apply(this)
Mutant 1456 in q.js: args replaced with undefined
Mutant 1457 in q.js: args replaced with null
Mutant 1458 in q.js: args replaced with []
Mutant 1459 in q.js: array_slice replaced with arguments
Mutant 1460 in q.js: array_slice replaced with []
Mutant 1461 in q.js: args replaced with []
Mutant 1462 in q.js: args replaced with [1, 2, 3]
Mutant 1463 in q.js: args replaced with [undefined]
Mutant 1464 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(1)
Mutant 1465 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1466 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1467 in q.js: deferred.reject replaced with deferred.notify
Mutant 1468 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1469 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1470 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 1471 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 4)
Mutant 1472 in q.js: array_slice replaced with arguments
Mutant 1473 in q.js: array_slice replaced with []
Mutant 1474 in q.js: arguments replaced with undefined
Mutant 1475 in q.js: arguments replaced with null
Mutant 1476 in q.js: arguments replaced with []
Mutant 1477 in q.js: 1 replaced with 0
Mutant 1478 in q.js: 1 replaced with -1
Mutant 1479 in q.js: 1 replaced with "timeout"
Mutant 1480 in q.js: callback replaced with callback.bind(this)
Mutant 1481 in q.js: callback replaced with callback.call(this)
Mutant 1482 in q.js: args replaced with []
Mutant 1483 in q.js: args replaced with [1, 2, 3]
Mutant 1484 in q.js: args replaced with [undefined]
Mutant 1485 in q.js: array_slice replaced with arguments
Mutant 1486 in q.js: array_slice replaced with []
Mutant 1487 in q.js: arguments replaced with []
Mutant 1488 in q.js: arguments replaced with arguments[0]
Mutant 1489 in q.js: arguments replaced with arguments.length
Mutant 1490 in q.js: defer replaced with deferred
Mutant 1491 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(1)
Mutant 1492 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1493 in q.js: this.fapply replaced with this.timeout
not replacing this.fapply with this.timeout
not replacing this.fapply with this.timeout
Mutant 1494 in q.js: nodeArgs replaced with nodeArgs.concat(deferred.makeNodeResolver())
Mutant 1495 in q.js: nodeArgs replaced with nodeArgs.slice(0, -1).concat(deferred.makeNodeResolver())
Mutant 1496 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1497 in q.js: deferred.reject replaced with deferred.notify
Mutant 1498 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1499 in q.js: callback === undefined replaced with callback === null
Mutant 1500 in q.js: callback === undefined replaced with callback === false
Mutant 1501 in q.js: callback === undefined replaced with callback === 0
Mutant 1502 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1503 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 1504 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 4)
Mutant 1505 in q.js: array_slice replaced with arguments
Mutant 1506 in q.js: array_slice replaced with []
Mutant 1507 in q.js: arguments replaced with []
Mutant 1508 in q.js: arguments replaced with arguments[0]
Mutant 1509 in q.js: arguments replaced with undefined
Mutant 1510 in q.js: 1 replaced with 2
Mutant 1511 in q.js: 1 replaced with 3
Mutant 1512 in q.js: 1 replaced with 4
Mutant 1513 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1514 in q.js: baseArgs.concat replaced with baseArgs.splice
Mutant 1515 in q.js: baseArgs.concat replaced with baseArgs.filter
Mutant 1516 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1517 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1518 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1519 in q.js: arguments replaced with undefined
Mutant 1520 in q.js: arguments replaced with null
Mutant 1521 in q.js: arguments replaced with {}
Mutant 1522 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(1)
Mutant 1523 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1524 in q.js: callback replaced with callback()
Mutant 1525 in q.js: callback replaced with Q(callback)
Mutant 1526 in q.js: callback replaced with Q.nfbind(callback)
Mutant 1527 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1528 in q.js: nodeArgs replaced with nodeArgs.reverse()
Mutant 1529 in q.js: nodeArgs replaced with nodeArgs.concat(nodeArgs)
Mutant 1530 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1531 in q.js: deferred.reject replaced with deferred.reject(new Error("Test error"))
Mutant 1532 in q.js: deferred.reject replaced with deferred.notify
Mutant 1533 in q.js: array_slice replaced with array_concat
Mutant 1534 in q.js: array_slice replaced with array_push
Mutant 1535 in q.js: arguments replaced with arguments[0]
Mutant 1536 in q.js: arguments replaced with arguments[1]
Mutant 1537 in q.js: arguments replaced with arguments[2]
Mutant 1538 in q.js: this replaced with this.foo
Mutant 1539 in q.js: this replaced with this.bar
Mutant 1540 in q.js: this replaced with this.baz
Mutant 1541 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(args)
Mutant 1542 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(args.length ? args : void 0)
Mutant 1543 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1544 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1545 in q.js: void 0 replaced with null
Mutant 1546 in q.js: void 0 replaced with undefined
Mutant 1547 in q.js: void 0 replaced with NaN
Mutant 1548 in q.js: args replaced with args.slice(1)
Mutant 1549 in q.js: args replaced with args.concat(deferred.makeNodeResolver())
Mutant 1550 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1551 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1552 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 0)
Mutant 1553 in q.js: array_slice replaced with arguments
Mutant 1554 in q.js: array_slice replaced with []
Mutant 1555 in q.js: arguments replaced with []
Mutant 1556 in q.js: arguments replaced with arguments[0]
Mutant 1557 in q.js: arguments replaced with undefined
Mutant 1558 in q.js: 2 replaced with 1
Mutant 1559 in q.js: 2 replaced with 3
Mutant 1560 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1561 in q.js: baseArgs.concat replaced with baseArgs.splice
Mutant 1562 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1563 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1564 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1565 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1566 in q.js: arguments replaced with []
Mutant 1567 in q.js: arguments replaced with arguments[0]
Mutant 1568 in q.js: arguments replaced with arguments.length
Mutant 1569 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(1)
Mutant 1570 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1571 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(this)
Mutant 1572 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(arguments)
Mutant 1573 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(undefined)
Mutant 1574 in q.js: thisp replaced with this
Mutant 1575 in q.js: thisp replaced with undefined
Mutant 1576 in q.js: thisp replaced with null
Mutant 1577 in q.js: arguments replaced with arguments[0]
Mutant 1578 in q.js: arguments replaced with arguments[1]
Mutant 1579 in q.js: arguments replaced with arguments[2]
Mutant 1580 in q.js: Q replaced with Q.delay
Mutant 1581 in q.js: Q replaced with Q.nfapply
Mutant 1582 in q.js: Q replaced with Q.nfbind
Mutant 1583 in q.js: bound replaced with bound()
Mutant 1584 in q.js: bound replaced with Q(bound)
Mutant 1585 in q.js: bound replaced with bound.call(this)
Mutant 1586 in q.js: nodeArgs replaced with nodeArgs.slice()
Mutant 1587 in q.js: nodeArgs replaced with nodeArgs.concat()
Mutant 1588 in q.js: nodeArgs replaced with nodeArgs.map(function (arg) {
  return arg;
})
Mutant 1589 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1590 in q.js: deferred.reject replaced with deferred.reject(new Error("Test error"))
Mutant 1591 in q.js: deferred.reject replaced with deferred.reject(null)
Mutant 1592 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1593 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 2)
Mutant 1594 in q.js: array_slice replaced with arguments
Mutant 1595 in q.js: array_slice replaced with []
Mutant 1596 in q.js: arguments replaced with arguments[0]
Mutant 1597 in q.js: arguments replaced with arguments[1]
Mutant 1598 in q.js: arguments replaced with arguments[2]
Mutant 1599 in q.js: 0 replaced with 1
Mutant 1600 in q.js: 0 replaced with 2
Mutant 1601 in q.js: 0 replaced with 3
Mutant 1602 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(args)
Mutant 1603 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(args[0])
Mutant 1604 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1605 in q.js: void 0 replaced with null
Mutant 1606 in q.js: void 0 replaced with undefined
Mutant 1607 in q.js: void 0 replaced with Q.nbind
Mutant 1608 in q.js: args replaced with args.slice(1)
Mutant 1609 in q.js: args replaced with args.slice(2)
Mutant 1610 in q.js: args replaced with args.slice(3)
Mutant 1611 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args, 1)
Mutant 1612 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args, "1")
Mutant 1613 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args, null)
Mutant 1614 in q.js: object replaced with undefined
Mutant 1615 in q.js: object replaced with {}
Mutant 1616 in q.js: name replaced with "name"
Mutant 1617 in q.js: name replaced with "name" + "name"
Mutant 1618 in q.js: name replaced with "name" + "name" + "name"
Mutant 1619 in q.js: args replaced with []
Mutant 1620 in q.js: args replaced with undefined
Mutant 1621 in q.js: args replaced with null
Mutant 1622 in q.js: args || [] replaced with args && args.length ? args : []
Mutant 1623 in q.js: defer replaced with defer.promise
Mutant 1624 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [nodeArgs, name])
Mutant 1625 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, "extraArg"])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [nodeArgs, name])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, "extraArg"])
Mutant 1626 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, "extra argument"]
Mutant 1627 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, "extra argument", "extra argument 2"]
Mutant 1628 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, "extra argument", "extra argument 2", "extra argument 3"]
Mutant 1629 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1630 in q.js: deferred.reject replaced with deferred.reject(new Error("Test error"))
Mutant 1631 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1632 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1633 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 4)
Mutant 1634 in q.js: array_slice replaced with arguments
Mutant 1635 in q.js: array_slice replaced with []
Mutant 1636 in q.js: arguments replaced with arguments[0]
Mutant 1637 in q.js: arguments replaced with arguments[1]
Mutant 1638 in q.js: arguments replaced with arguments[2]
Mutant 1639 in q.js: 2 replaced with 1
Mutant 1640 in q.js: 2 replaced with 3
Mutant 1641 in q.js: defer replaced with deferred.promise
Mutant 1642 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [nodeArgs, name])
Mutant 1643 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, "extraArg"])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [nodeArgs, name])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, "extraArg"])
Mutant 1644 in q.js: Q replaced with Q.npost
Mutant 1645 in q.js: Q replaced with Q.ninvoke
Mutant 1646 in q.js: Q replaced with Q.nbind
Mutant 1647 in q.js: object replaced with object.name
Mutant 1648 in q.js: object replaced with object.length
Mutant 1649 in q.js: object replaced with object.toString()
Mutant 1650 in q.js: "post" replaced with "npost"
Mutant 1651 in q.js: "post" replaced with "ninvoke"
Mutant 1652 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, nodeArgs]
Mutant 1653 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, "extra"]
Mutant 1654 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1655 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1656 in q.js: deferred.reject replaced with deferred.reject(new Error("Test error"))
Mutant 1657 in q.js: deferred.reject replaced with deferred.reject(null)
Mutant 1658 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1659 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1660 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 1661 in q.js: arguments replaced with arguments[0]
Mutant 1662 in q.js: arguments replaced with arguments[1]
Mutant 1663 in q.js: arguments replaced with arguments[2]
Mutant 1664 in q.js: 1 replaced with 2
Mutant 1665 in q.js: 1 replaced with 3
Mutant 1666 in q.js: 1 replaced with 4
Mutant 1667 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve()
Mutant 1668 in q.js: deferred.makeNodeResolver() replaced with deferred.reject()
Mutant 1669 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [nodeArgs, name])
Mutant 1670 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [nodeArgs, name])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, nodeArgs])
Mutant 1671 in q.js: "post" replaced with "call"
Mutant 1672 in q.js: "post" replaced with "apply"
Mutant 1673 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, nodeback]
Mutant 1674 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, nodeback, "post"]
Mutant 1675 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, nodeback, "post", "post"]
Mutant 1676 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1677 in q.js: deferred.reject replaced with deferred.notify
Mutant 1678 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1679 in q.js: object replaced with object.toString()
Mutant 1680 in q.js: object replaced with object.valueOf()
Mutant 1681 in q.js: object replaced with object.constructor
Mutant 1682 in q.js: nodeback replaced with nodeback()
Mutant 1683 in q.js: nodeback replaced with nodeback(null)
Mutant 1684 in q.js: nodeback replaced with nodeback(undefined)
Mutant 1685 in q.js: nodeback replaced with nodeback()
Mutant 1686 in q.js: nodeback replaced with nodeback(null)
Mutant 1687 in q.js: nodeback replaced with nodeback(undefined)
Mutant 1688 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1689 in q.js: nodeback(null, value) replaced with nodeback(null, undefined)
Mutant 1690 in q.js: nodeback(null, value) replaced with nodeback(value, value)
Mutant 1691 in q.js: null replaced with undefined
Mutant 1692 in q.js: null replaced with "test"
Mutant 1693 in q.js: value replaced with undefined
Mutant 1694 in q.js: value replaced with null
Mutant 1695 in q.js: value replaced with "test"
Mutant 1696 in q.js: error replaced with null
Mutant 1697 in q.js: error replaced with undefined
Mutant 1698 in q.js: error replaced with "error"
Mutant 1699 in q.js: captureLine replaced with qEndingLine
Mutant 1700 in queue.js: "head" replaced with "tail"
Mutant 1701 in queue.js: "head" replaced with "head.tail"
Mutant 1702 in queue.js: "head" replaced with "head.head"
Mutant 1703 in queue.js: "tail" replaced with "head"
Mutant 1704 in queue.js: "tail" replaced with "head.tail"
Mutant 1705 in queue.js: closed.resolve replaced with closed.reject
Mutant 1706 in queue.js: closed.resolve replaced with ends.reject
Mutant 1707 in queue.js: closed.resolve replaced with next.reject
Mutant 1708 in queue.js: error replaced with Q.reject(new Error("Can't get value from closed queue"))
Mutant 1709 in queue.js: error replaced with Q.resolve(undefined)
Mutant 1710 in queue.js: error replaced with Q.resolve(new Error("Can't get value from closed queue"))
Mutant 1711 in queue.js: Q.reject replaced with Q.resolve
Mutant 1712 in queue.js: error replaced with Q.reject(new Error("Can't get value from closed queue"))
Mutant 1713 in queue.js: error replaced with Q.reject(error)
[32m15:41:02 (3184) INFO Instrumenter[39m Instrumented 2 source file(s) with 1714 mutant(s)
[32m15:41:02 (3184) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m15:41:04 (3184) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m15:41:04 (3184) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m15:41:11 (3184) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6800 ms, overhead 0 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 35m) 3/1714 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 22m) 4/1714 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 22m) 6/1714 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 6m) 9/1714 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 22m) 10/1714 tested (6 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 21m) 12/1714 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 32m) 13/1714 tested (9 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 31m) 15/1714 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 39m) 16/1714 tested (12 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 37m) 18/1714 tested (14 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 27m) 21/1714 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 41m) 21/1714 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 46m) 22/1714 tested (15 survived, 1 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 51m) 23/1714 tested (15 survived, 2 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 3m) 23/1714 tested (15 survived, 2 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 7m) 24/1714 tested (15 survived, 3 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 3m) 26/1714 tested (17 survived, 3 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 14m) 26/1714 tested (17 survived, 3 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 10m) 28/1714 tested (18 survived, 4 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 13m) 29/1714 tested (19 survived, 4 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 10m) 31/1714 tested (21 survived, 4 timed out)
Mutation testing 2% (elapsed: ~3m, remaining: ~2h 55m) 35/1714 tested (22 survived, 4 timed out)
Mutation testing 2% (elapsed: ~3m, remaining: ~2h 58m) 36/1714 tested (23 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 6m) 36/1714 tested (23 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~2h 58m) 39/1714 tested (24 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 1m) 40/1714 tested (25 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~2h 50m) 44/1714 tested (26 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~2h 49m) 46/1714 tested (28 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~2h 51m) 47/1714 tested (29 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~2h 49m) 49/1714 tested (31 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~2h 51m) 50/1714 tested (32 survived, 5 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 50m) 52/1714 tested (34 survived, 5 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 52m) 53/1714 tested (35 survived, 5 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 54m) 54/1714 tested (36 survived, 5 timed out)
Mutation testing 3% (elapsed: ~5m, remaining: ~2h 52m) 56/1714 tested (38 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 54m) 57/1714 tested (39 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 52m) 59/1714 tested (41 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 57m) 59/1714 tested (41 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~2h 59m) 60/1714 tested (41 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 0m) 61/1714 tested (41 survived, 7 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 5m) 61/1714 tested (41 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 6m) 62/1714 tested (41 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 7m) 63/1714 tested (41 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 12m) 63/1714 tested (41 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 7m) 66/1714 tested (41 survived, 10 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 5m) 68/1714 tested (43 survived, 10 timed out)
Mutation testing 4% (elapsed: ~7m, remaining: ~3h 6m) 69/1714 tested (44 survived, 10 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 5m) 71/1714 tested (46 survived, 10 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 6m) 72/1714 tested (47 survived, 10 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 4m) 74/1714 tested (49 survived, 10 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 5m) 75/1714 tested (50 survived, 10 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 4m) 77/1714 tested (52 survived, 10 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 5m) 78/1714 tested (53 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 3m) 80/1714 tested (55 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 4m) 81/1714 tested (56 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 5m) 82/1714 tested (57 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 4m) 84/1714 tested (59 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 5m) 85/1714 tested (60 survived, 10 timed out)
Mutation testing 5% (elapsed: ~9m, remaining: ~3h 3m) 87/1714 tested (62 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 4m) 88/1714 tested (63 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 3m) 90/1714 tested (65 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 4m) 91/1714 tested (66 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 3m) 93/1714 tested (68 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 3m) 94/1714 tested (69 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~2h 56m) 99/1714 tested (70 survived, 10 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~2h 55m) 101/1714 tested (72 survived, 10 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 54m) 103/1714 tested (73 survived, 10 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 57m) 103/1714 tested (73 survived, 10 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 46m) 111/1714 tested (73 survived, 11 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 40m) 116/1714 tested (73 survived, 11 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 40m) 118/1714 tested (75 survived, 11 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~2h 40m) 119/1714 tested (76 survived, 11 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 40m) 121/1714 tested (78 survived, 11 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 40m) 122/1714 tested (79 survived, 11 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 40m) 124/1714 tested (81 survived, 11 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 41m) 125/1714 tested (82 survived, 11 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 40m) 127/1714 tested (84 survived, 11 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 41m) 128/1714 tested (85 survived, 11 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 40m) 130/1714 tested (87 survived, 11 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 41m) 131/1714 tested (88 survived, 11 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 40m) 133/1714 tested (90 survived, 11 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 41m) 134/1714 tested (91 survived, 11 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 40m) 136/1714 tested (93 survived, 11 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~2h 41m) 137/1714 tested (94 survived, 11 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 40m) 139/1714 tested (96 survived, 11 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 41m) 140/1714 tested (97 survived, 11 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 41m) 141/1714 tested (98 survived, 11 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 41m) 143/1714 tested (100 survived, 11 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 41m) 144/1714 tested (101 survived, 11 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 41m) 146/1714 tested (103 survived, 11 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 41m) 147/1714 tested (104 survived, 11 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 41m) 149/1714 tested (106 survived, 11 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 41m) 150/1714 tested (107 survived, 11 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 40m) 152/1714 tested (109 survived, 11 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 41m) 153/1714 tested (110 survived, 11 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 40m) 155/1714 tested (112 survived, 11 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 41m) 156/1714 tested (113 survived, 11 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 40m) 158/1714 tested (115 survived, 11 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 41m) 159/1714 tested (116 survived, 11 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 40m) 161/1714 tested (118 survived, 11 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 41m) 162/1714 tested (119 survived, 11 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 40m) 164/1714 tested (121 survived, 11 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 41m) 165/1714 tested (122 survived, 11 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 40m) 167/1714 tested (124 survived, 11 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 37m) 171/1714 tested (125 survived, 11 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 38m) 172/1714 tested (126 survived, 11 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 37m) 174/1714 tested (128 survived, 11 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 38m) 175/1714 tested (129 survived, 11 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 37m) 177/1714 tested (131 survived, 11 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 38m) 178/1714 tested (132 survived, 11 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 37m) 180/1714 tested (134 survived, 11 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 38m) 181/1714 tested (135 survived, 11 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 37m) 183/1714 tested (137 survived, 11 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 37m) 184/1714 tested (138 survived, 11 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 37m) 186/1714 tested (140 survived, 11 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 37m) 187/1714 tested (141 survived, 11 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 38m) 188/1714 tested (142 survived, 11 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 33m) 195/1714 tested (143 survived, 11 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 33m) 196/1714 tested (143 survived, 11 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 33m) 198/1714 tested (143 survived, 11 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 33m) 199/1714 tested (144 survived, 11 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 33m) 201/1714 tested (146 survived, 11 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 33m) 202/1714 tested (147 survived, 11 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 32m) 204/1714 tested (149 survived, 11 timed out)
Mutation testing 12% (elapsed: ~20m, remaining: ~2h 30m) 208/1714 tested (150 survived, 11 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 31m) 209/1714 tested (151 survived, 11 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 30m) 211/1714 tested (153 survived, 11 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 31m) 212/1714 tested (154 survived, 11 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 30m) 214/1714 tested (156 survived, 11 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 31m) 215/1714 tested (157 survived, 11 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 31m) 216/1714 tested (158 survived, 11 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 30m) 218/1714 tested (160 survived, 11 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 31m) 219/1714 tested (161 survived, 11 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 30m) 221/1714 tested (163 survived, 11 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 31m) 222/1714 tested (164 survived, 11 timed out)
Mutation testing 13% (elapsed: ~22m, remaining: ~2h 30m) 224/1714 tested (166 survived, 11 timed out)
Mutation testing 13% (elapsed: ~22m, remaining: ~2h 31m) 225/1714 tested (167 survived, 11 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 30m) 227/1714 tested (169 survived, 11 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 30m) 228/1714 tested (170 survived, 11 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 30m) 230/1714 tested (172 survived, 11 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 30m) 231/1714 tested (173 survived, 11 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 30m) 233/1714 tested (175 survived, 11 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 30m) 234/1714 tested (176 survived, 11 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 30m) 236/1714 tested (178 survived, 11 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 30m) 237/1714 tested (179 survived, 11 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 30m) 239/1714 tested (181 survived, 11 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 30m) 240/1714 tested (182 survived, 11 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 30m) 242/1714 tested (184 survived, 11 timed out)
Mutation testing 14% (elapsed: ~24m, remaining: ~2h 30m) 243/1714 tested (185 survived, 11 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 29m) 245/1714 tested (187 survived, 11 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 30m) 246/1714 tested (188 survived, 11 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 30m) 247/1714 tested (189 survived, 11 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 30m) 249/1714 tested (191 survived, 11 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 30m) 250/1714 tested (192 survived, 11 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 29m) 252/1714 tested (194 survived, 11 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 30m) 253/1714 tested (195 survived, 11 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 29m) 255/1714 tested (197 survived, 11 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 29m) 256/1714 tested (198 survived, 11 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 29m) 258/1714 tested (200 survived, 11 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 29m) 259/1714 tested (201 survived, 11 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 29m) 261/1714 tested (203 survived, 11 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 29m) 262/1714 tested (204 survived, 11 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 29m) 264/1714 tested (206 survived, 11 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 29m) 265/1714 tested (207 survived, 11 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 29m) 267/1714 tested (209 survived, 11 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 29m) 268/1714 tested (210 survived, 11 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 28m) 270/1714 tested (212 survived, 11 timed out)
Mutation testing 15% (elapsed: ~28m, remaining: ~2h 29m) 271/1714 tested (213 survived, 11 timed out)
Mutation testing 15% (elapsed: ~28m, remaining: ~2h 28m) 273/1714 tested (215 survived, 11 timed out)
Mutation testing 15% (elapsed: ~28m, remaining: ~2h 28m) 274/1714 tested (216 survived, 11 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 28m) 276/1714 tested (218 survived, 11 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 28m) 277/1714 tested (219 survived, 11 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 28m) 279/1714 tested (221 survived, 11 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 28m) 280/1714 tested (222 survived, 11 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 28m) 282/1714 tested (224 survived, 11 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 28m) 283/1714 tested (225 survived, 11 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 28m) 284/1714 tested (226 survived, 11 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 28m) 286/1714 tested (228 survived, 11 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 28m) 287/1714 tested (229 survived, 11 timed out)
Mutation testing 16% (elapsed: ~30m, remaining: ~2h 27m) 289/1714 tested (231 survived, 11 timed out)
Mutation testing 16% (elapsed: ~30m, remaining: ~2h 28m) 290/1714 tested (232 survived, 11 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 27m) 292/1714 tested (234 survived, 11 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 27m) 293/1714 tested (235 survived, 11 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 27m) 295/1714 tested (237 survived, 11 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 25m) 299/1714 tested (238 survived, 11 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 26m) 300/1714 tested (239 survived, 11 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 25m) 302/1714 tested (241 survived, 11 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 25m) 303/1714 tested (242 survived, 11 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 25m) 305/1714 tested (244 survived, 11 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 25m) 306/1714 tested (245 survived, 11 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 25m) 308/1714 tested (247 survived, 11 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 25m) 309/1714 tested (248 survived, 11 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 25m) 311/1714 tested (250 survived, 11 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 25m) 312/1714 tested (251 survived, 11 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 24m) 314/1714 tested (253 survived, 11 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 25m) 315/1714 tested (254 survived, 11 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 24m) 317/1714 tested (256 survived, 11 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 24m) 318/1714 tested (257 survived, 11 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 24m) 320/1714 tested (259 survived, 11 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 24m) 321/1714 tested (260 survived, 11 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 24m) 323/1714 tested (262 survived, 11 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 24m) 324/1714 tested (263 survived, 11 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 24m) 326/1714 tested (265 survived, 11 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 24m) 327/1714 tested (266 survived, 11 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 24m) 328/1714 tested (267 survived, 11 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 23m) 330/1714 tested (269 survived, 11 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 24m) 331/1714 tested (270 survived, 11 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 23m) 333/1714 tested (272 survived, 11 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 23m) 334/1714 tested (273 survived, 11 timed out)
Mutation testing 19% (elapsed: ~35m, remaining: ~2h 23m) 336/1714 tested (275 survived, 11 timed out)
Mutation testing 19% (elapsed: ~35m, remaining: ~2h 23m) 337/1714 tested (276 survived, 11 timed out)
Mutation testing 19% (elapsed: ~35m, remaining: ~2h 23m) 339/1714 tested (278 survived, 11 timed out)
Mutation testing 19% (elapsed: ~35m, remaining: ~2h 23m) 340/1714 tested (278 survived, 11 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 22m) 343/1714 tested (279 survived, 11 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 21m) 347/1714 tested (279 survived, 11 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 20m) 349/1714 tested (279 survived, 11 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 20m) 350/1714 tested (279 survived, 11 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 21m) 351/1714 tested (279 survived, 11 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 21m) 352/1714 tested (279 survived, 12 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 21m) 352/1714 tested (279 survived, 12 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 22m) 353/1714 tested (279 survived, 13 timed out)
Mutation testing 20% (elapsed: ~37m, remaining: ~2h 22m) 354/1714 tested (279 survived, 14 timed out)
Mutation testing 20% (elapsed: ~37m, remaining: ~2h 22m) 354/1714 tested (279 survived, 14 timed out)
Mutation testing 20% (elapsed: ~37m, remaining: ~2h 20m) 359/1714 tested (279 survived, 15 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 19m) 363/1714 tested (279 survived, 15 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 19m) 364/1714 tested (279 survived, 16 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 18m) 367/1714 tested (279 survived, 16 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 18m) 368/1714 tested (279 survived, 17 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 19m) 369/1714 tested (280 survived, 17 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 18m) 371/1714 tested (282 survived, 17 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 18m) 372/1714 tested (283 survived, 17 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 19m) 373/1714 tested (284 survived, 17 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 18m) 375/1714 tested (284 survived, 18 timed out)
Mutation testing 21% (elapsed: ~39m, remaining: ~2h 18m) 376/1714 tested (285 survived, 18 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 18m) 378/1714 tested (287 survived, 18 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 18m) 380/1714 tested (287 survived, 18 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 18m) 381/1714 tested (287 survived, 19 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 18m) 382/1714 tested (288 survived, 19 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 17m) 384/1714 tested (290 survived, 19 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 18m) 385/1714 tested (291 survived, 19 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 17m) 387/1714 tested (293 survived, 19 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 17m) 388/1714 tested (294 survived, 19 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 17m) 390/1714 tested (296 survived, 19 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 17m) 391/1714 tested (297 survived, 19 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 17m) 393/1714 tested (299 survived, 19 timed out)
Mutation testing 22% (elapsed: ~41m, remaining: ~2h 17m) 394/1714 tested (300 survived, 19 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 17m) 396/1714 tested (302 survived, 19 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 17m) 397/1714 tested (303 survived, 19 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 16m) 399/1714 tested (305 survived, 19 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 16m) 400/1714 tested (306 survived, 19 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 16m) 402/1714 tested (308 survived, 19 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 16m) 403/1714 tested (309 survived, 19 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 16m) 405/1714 tested (311 survived, 19 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 16m) 406/1714 tested (312 survived, 19 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 16m) 408/1714 tested (313 survived, 19 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 15m) 411/1714 tested (314 survived, 19 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 15m) 412/1714 tested (314 survived, 20 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 15m) 412/1714 tested (314 survived, 20 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 15m) 413/1714 tested (314 survived, 21 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 16m) 414/1714 tested (314 survived, 22 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 16m) 415/1714 tested (315 survived, 22 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 16m) 415/1714 tested (315 survived, 22 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 16m) 416/1714 tested (315 survived, 23 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 16m) 417/1714 tested (315 survived, 24 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 17m) 417/1714 tested (315 survived, 24 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 17m) 418/1714 tested (315 survived, 25 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 17m) 419/1714 tested (315 survived, 26 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 17m) 420/1714 tested (316 survived, 26 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 17m) 422/1714 tested (318 survived, 26 timed out)
Mutation testing 24% (elapsed: ~45m, remaining: ~2h 17m) 423/1714 tested (319 survived, 26 timed out)
Mutation testing 24% (elapsed: ~45m, remaining: ~2h 16m) 425/1714 tested (321 survived, 26 timed out)
Mutation testing 24% (elapsed: ~45m, remaining: ~2h 17m) 426/1714 tested (322 survived, 26 timed out)
Mutation testing 24% (elapsed: ~45m, remaining: ~2h 16m) 428/1714 tested (323 survived, 26 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 16m) 430/1714 tested (323 survived, 27 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 16m) 430/1714 tested (323 survived, 27 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 16m) 431/1714 tested (323 survived, 27 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 17m) 432/1714 tested (323 survived, 27 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 16m) 434/1714 tested (324 survived, 27 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 16m) 435/1714 tested (325 survived, 27 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 16m) 437/1714 tested (327 survived, 27 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 16m) 438/1714 tested (328 survived, 27 timed out)
Mutation testing 25% (elapsed: ~47m, remaining: ~2h 16m) 439/1714 tested (329 survived, 27 timed out)
Mutation testing 25% (elapsed: ~47m, remaining: ~2h 16m) 441/1714 tested (331 survived, 27 timed out)
Mutation testing 25% (elapsed: ~47m, remaining: ~2h 16m) 442/1714 tested (332 survived, 27 timed out)
Mutation testing 25% (elapsed: ~47m, remaining: ~2h 15m) 444/1714 tested (334 survived, 27 timed out)
Mutation testing 25% (elapsed: ~47m, remaining: ~2h 15m) 445/1714 tested (335 survived, 27 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 15m) 447/1714 tested (337 survived, 27 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 15m) 448/1714 tested (338 survived, 27 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 15m) 450/1714 tested (340 survived, 27 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 15m) 451/1714 tested (341 survived, 27 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 15m) 453/1714 tested (343 survived, 27 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 15m) 454/1714 tested (344 survived, 27 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 14m) 456/1714 tested (346 survived, 27 timed out)
Mutation testing 26% (elapsed: ~49m, remaining: ~2h 14m) 457/1714 tested (347 survived, 27 timed out)
Mutation testing 26% (elapsed: ~49m, remaining: ~2h 14m) 459/1714 tested (349 survived, 27 timed out)
Mutation testing 26% (elapsed: ~49m, remaining: ~2h 14m) 460/1714 tested (350 survived, 27 timed out)
Mutation testing 26% (elapsed: ~49m, remaining: ~2h 14m) 462/1714 tested (352 survived, 27 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 14m) 463/1714 tested (353 survived, 27 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 13m) 465/1714 tested (355 survived, 27 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 13m) 466/1714 tested (356 survived, 27 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 13m) 468/1714 tested (358 survived, 27 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 13m) 469/1714 tested (359 survived, 27 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 13m) 470/1714 tested (360 survived, 27 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 13m) 472/1714 tested (362 survived, 27 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 13m) 473/1714 tested (363 survived, 27 timed out)
Mutation testing 27% (elapsed: ~51m, remaining: ~2h 13m) 475/1714 tested (365 survived, 27 timed out)
Mutation testing 27% (elapsed: ~51m, remaining: ~2h 13m) 476/1714 tested (366 survived, 27 timed out)
Mutation testing 27% (elapsed: ~51m, remaining: ~2h 12m) 478/1714 tested (368 survived, 27 timed out)
Mutation testing 27% (elapsed: ~51m, remaining: ~2h 12m) 479/1714 tested (369 survived, 27 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 12m) 481/1714 tested (371 survived, 27 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 12m) 482/1714 tested (372 survived, 27 timed out)
Mutation testing 28% (elapsed: ~52m, remaining: ~2h 12m) 484/1714 tested (374 survived, 27 timed out)
Mutation testing 28% (elapsed: ~52m, remaining: ~2h 12m) 485/1714 tested (375 survived, 27 timed out)
Mutation testing 28% (elapsed: ~52m, remaining: ~2h 11m) 487/1714 tested (377 survived, 27 timed out)
Mutation testing 28% (elapsed: ~52m, remaining: ~2h 11m) 488/1714 tested (378 survived, 27 timed out)
Mutation testing 28% (elapsed: ~52m, remaining: ~2h 11m) 490/1714 tested (380 survived, 27 timed out)
Mutation testing 28% (elapsed: ~52m, remaining: ~2h 11m) 491/1714 tested (381 survived, 27 timed out)
Mutation testing 28% (elapsed: ~53m, remaining: ~2h 11m) 493/1714 tested (383 survived, 27 timed out)
Mutation testing 28% (elapsed: ~53m, remaining: ~2h 11m) 494/1714 tested (384 survived, 27 timed out)
Mutation testing 28% (elapsed: ~53m, remaining: ~2h 10m) 496/1714 tested (386 survived, 27 timed out)
Mutation testing 28% (elapsed: ~53m, remaining: ~2h 11m) 497/1714 tested (387 survived, 27 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 10m) 499/1714 tested (389 survived, 27 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 10m) 500/1714 tested (390 survived, 27 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 10m) 501/1714 tested (391 survived, 27 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 10m) 503/1714 tested (393 survived, 27 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 10m) 504/1714 tested (394 survived, 27 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 10m) 506/1714 tested (396 survived, 27 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 10m) 507/1714 tested (397 survived, 27 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 9m) 509/1714 tested (399 survived, 27 timed out)
Mutation testing 29% (elapsed: ~55m, remaining: ~2h 9m) 510/1714 tested (400 survived, 27 timed out)
Mutation testing 29% (elapsed: ~55m, remaining: ~2h 9m) 512/1714 tested (402 survived, 27 timed out)
Mutation testing 29% (elapsed: ~55m, remaining: ~2h 9m) 513/1714 tested (403 survived, 27 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 9m) 515/1714 tested (405 survived, 27 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 9m) 516/1714 tested (406 survived, 27 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 8m) 518/1714 tested (408 survived, 27 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 9m) 518/1714 tested (408 survived, 27 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 9m) 519/1714 tested (408 survived, 28 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 9m) 520/1714 tested (408 survived, 29 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 9m) 520/1714 tested (408 survived, 29 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 9m) 521/1714 tested (408 survived, 30 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 9m) 522/1714 tested (408 survived, 30 timed out)
Mutation testing 30% (elapsed: ~57m, remaining: ~2h 10m) 522/1714 tested (408 survived, 30 timed out)
Mutation testing 30% (elapsed: ~57m, remaining: ~2h 10m) 523/1714 tested (408 survived, 31 timed out)
Mutation testing 30% (elapsed: ~57m, remaining: ~2h 10m) 524/1714 tested (408 survived, 32 timed out)
Mutation testing 30% (elapsed: ~57m, remaining: ~2h 10m) 524/1714 tested (408 survived, 32 timed out)
Mutation testing 30% (elapsed: ~57m, remaining: ~2h 10m) 525/1714 tested (408 survived, 33 timed out)
Mutation testing 30% (elapsed: ~57m, remaining: ~2h 10m) 526/1714 tested (408 survived, 34 timed out)
Mutation testing 30% (elapsed: ~58m, remaining: ~2h 10m) 526/1714 tested (408 survived, 34 timed out)
Mutation testing 30% (elapsed: ~58m, remaining: ~2h 11m) 527/1714 tested (408 survived, 35 timed out)
Mutation testing 30% (elapsed: ~58m, remaining: ~2h 11m) 528/1714 tested (408 survived, 36 timed out)
Mutation testing 30% (elapsed: ~58m, remaining: ~2h 11m) 528/1714 tested (408 survived, 36 timed out)
Mutation testing 30% (elapsed: ~58m, remaining: ~2h 11m) 529/1714 tested (408 survived, 37 timed out)
Mutation testing 30% (elapsed: ~58m, remaining: ~2h 11m) 530/1714 tested (408 survived, 38 timed out)
Mutation testing 30% (elapsed: ~59m, remaining: ~2h 11m) 531/1714 tested (409 survived, 38 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 11m) 533/1714 tested (411 survived, 38 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 11m) 534/1714 tested (412 survived, 38 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 10m) 536/1714 tested (414 survived, 38 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 10m) 537/1714 tested (415 survived, 38 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 10m) 539/1714 tested (417 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 0m, remaining: ~2h 10m) 540/1714 tested (418 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 0m, remaining: ~2h 10m) 542/1714 tested (420 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 0m, remaining: ~2h 10m) 543/1714 tested (421 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 0m, remaining: ~2h 9m) 545/1714 tested (423 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 8m) 549/1714 tested (424 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 8m) 552/1714 tested (425 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 8m) 553/1714 tested (426 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 7m) 557/1714 tested (427 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 6m) 559/1714 tested (429 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 6m) 560/1714 tested (430 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 6m) 562/1714 tested (432 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 6m) 562/1714 tested (432 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 6m) 563/1714 tested (432 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 6m) 564/1714 tested (432 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 7m) 564/1714 tested (432 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 7m) 565/1714 tested (432 survived, 41 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 7m) 566/1714 tested (432 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 2m, remaining: ~2h 7m) 566/1714 tested (432 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 7m) 567/1714 tested (432 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 7m) 568/1714 tested (432 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 7m) 569/1714 tested (432 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 7m) 570/1714 tested (433 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 7m) 571/1714 tested (433 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 7m) 572/1714 tested (433 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 7m) 573/1714 tested (434 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 7m) 575/1714 tested (436 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 7m) 576/1714 tested (437 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 6m) 578/1714 tested (439 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 6m) 579/1714 tested (440 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 6m) 581/1714 tested (442 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 6m) 581/1714 tested (442 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 6m) 582/1714 tested (442 survived, 44 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 6m) 583/1714 tested (442 survived, 45 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 7m) 583/1714 tested (442 survived, 45 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 7m) 584/1714 tested (442 survived, 46 timed out)
Mutation testing 34% (elapsed: ~1h 5m, remaining: ~2h 7m) 585/1714 tested (442 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 7m) 585/1714 tested (442 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 7m) 586/1714 tested (442 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 7m) 587/1714 tested (442 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 7m) 588/1714 tested (442 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 7m) 589/1714 tested (442 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 7m) 590/1714 tested (442 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 7m) 591/1714 tested (442 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 7m) 592/1714 tested (443 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 6m) 594/1714 tested (445 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 6m) 595/1714 tested (445 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 7m) 595/1714 tested (445 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 6m) 597/1714 tested (445 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 7m) 597/1714 tested (445 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 7m) 598/1714 tested (445 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 7m) 599/1714 tested (445 survived, 50 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 7m) 600/1714 tested (445 survived, 50 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 7m) 601/1714 tested (445 survived, 51 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 7m) 601/1714 tested (445 survived, 51 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 7m) 602/1714 tested (445 survived, 52 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 7m) 603/1714 tested (445 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 7m) 603/1714 tested (445 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 7m) 604/1714 tested (445 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 7m) 605/1714 tested (445 survived, 55 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 8m) 605/1714 tested (445 survived, 55 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 7m) 606/1714 tested (445 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 7m) 607/1714 tested (445 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 8m) 607/1714 tested (445 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 8m) 608/1714 tested (445 survived, 58 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 8m) 609/1714 tested (445 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 8m) 609/1714 tested (445 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 11m, remaining: ~2h 8m) 610/1714 tested (445 survived, 60 timed out)
Mutation testing 35% (elapsed: ~1h 11m, remaining: ~2h 8m) 611/1714 tested (445 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 11m, remaining: ~2h 8m) 612/1714 tested (446 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 11m, remaining: ~2h 8m) 614/1714 tested (448 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 11m, remaining: ~2h 8m) 615/1714 tested (449 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 11m, remaining: ~2h 7m) 617/1714 tested (451 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 7m) 618/1714 tested (452 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 7m) 620/1714 tested (454 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 7m) 621/1714 tested (455 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 6m) 623/1714 tested (457 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 6m) 624/1714 tested (458 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 6m) 626/1714 tested (460 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 13m, remaining: ~2h 6m) 627/1714 tested (461 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 13m, remaining: ~2h 6m) 628/1714 tested (462 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 13m, remaining: ~2h 6m) 630/1714 tested (464 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 13m, remaining: ~2h 6m) 631/1714 tested (465 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 13m, remaining: ~2h 5m) 633/1714 tested (467 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 13m, remaining: ~2h 5m) 634/1714 tested (468 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 5m) 636/1714 tested (470 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 5m) 637/1714 tested (471 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 5m) 639/1714 tested (473 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 5m) 640/1714 tested (474 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 4m) 642/1714 tested (476 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 4m) 643/1714 tested (477 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 15m, remaining: ~2h 4m) 645/1714 tested (479 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 15m, remaining: ~2h 4m) 646/1714 tested (480 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 15m, remaining: ~2h 3m) 648/1714 tested (482 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 15m, remaining: ~2h 3m) 649/1714 tested (483 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 15m, remaining: ~2h 3m) 651/1714 tested (485 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~2h 3m) 652/1714 tested (486 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~2h 3m) 654/1714 tested (488 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~2h 3m) 655/1714 tested (489 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~2h 2m) 657/1714 tested (491 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~2h 2m) 658/1714 tested (492 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~2h 2m) 659/1714 tested (493 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 16m, remaining: ~2h 2m) 661/1714 tested (495 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 17m, remaining: ~2h 2m) 662/1714 tested (496 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 17m, remaining: ~2h 2m) 664/1714 tested (498 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 17m, remaining: ~2h 1m) 665/1714 tested (499 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 17m, remaining: ~2h 1m) 667/1714 tested (501 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 17m, remaining: ~2h 1m) 668/1714 tested (502 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~2h 1m) 670/1714 tested (504 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 18m, remaining: ~2h 1m) 671/1714 tested (505 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 18m, remaining: ~2h 0m) 673/1714 tested (507 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 18m, remaining: ~2h 0m) 674/1714 tested (508 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 18m, remaining: ~2h 0m) 676/1714 tested (510 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 18m, remaining: ~2h 0m) 677/1714 tested (511 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 18m, remaining: ~2h 0m) 679/1714 tested (513 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 19m, remaining: ~2h 0m) 680/1714 tested (514 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 19m, remaining: ~1h 59m) 682/1714 tested (516 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 19m, remaining: ~1h 59m) 683/1714 tested (517 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 19m, remaining: ~1h 59m) 685/1714 tested (519 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 58m) 690/1714 tested (520 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 57m) 692/1714 tested (521 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 20m, remaining: ~1h 57m) 693/1714 tested (522 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 20m, remaining: ~1h 57m) 695/1714 tested (524 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 20m, remaining: ~1h 57m) 696/1714 tested (525 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 20m, remaining: ~1h 57m) 698/1714 tested (527 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 20m, remaining: ~1h 57m) 699/1714 tested (528 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 20m, remaining: ~1h 56m) 701/1714 tested (530 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 21m, remaining: ~1h 56m) 702/1714 tested (531 survived, 61 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 56m) 704/1714 tested (533 survived, 61 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 56m) 705/1714 tested (534 survived, 61 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 56m) 707/1714 tested (536 survived, 61 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 56m) 708/1714 tested (537 survived, 61 timed out)
Mutation testing 41% (elapsed: ~1h 21m, remaining: ~1h 55m) 710/1714 tested (539 survived, 61 timed out)
Mutation testing 41% (elapsed: ~1h 22m, remaining: ~1h 55m) 711/1714 tested (540 survived, 61 timed out)
Mutation testing 41% (elapsed: ~1h 22m, remaining: ~1h 55m) 713/1714 tested (542 survived, 61 timed out)
Mutation testing 41% (elapsed: ~1h 22m, remaining: ~1h 55m) 714/1714 tested (543 survived, 61 timed out)
Mutation testing 41% (elapsed: ~1h 22m, remaining: ~1h 55m) 715/1714 tested (544 survived, 61 timed out)
Mutation testing 41% (elapsed: ~1h 22m, remaining: ~1h 54m) 717/1714 tested (546 survived, 61 timed out)
Mutation testing 41% (elapsed: ~1h 22m, remaining: ~1h 54m) 718/1714 tested (547 survived, 61 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 54m) 720/1714 tested (549 survived, 61 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 54m) 721/1714 tested (550 survived, 61 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 54m) 723/1714 tested (552 survived, 61 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 54m) 724/1714 tested (553 survived, 61 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 53m) 726/1714 tested (555 survived, 61 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 53m) 727/1714 tested (556 survived, 61 timed out)
Mutation testing 42% (elapsed: ~1h 24m, remaining: ~1h 53m) 729/1714 tested (558 survived, 61 timed out)
Mutation testing 42% (elapsed: ~1h 24m, remaining: ~1h 53m) 730/1714 tested (559 survived, 61 timed out)
Mutation testing 42% (elapsed: ~1h 24m, remaining: ~1h 53m) 732/1714 tested (561 survived, 61 timed out)
Mutation testing 42% (elapsed: ~1h 24m, remaining: ~1h 53m) 733/1714 tested (562 survived, 61 timed out)
Mutation testing 42% (elapsed: ~1h 24m, remaining: ~1h 52m) 735/1714 tested (564 survived, 61 timed out)
Mutation testing 42% (elapsed: ~1h 24m, remaining: ~1h 52m) 736/1714 tested (565 survived, 61 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 52m) 738/1714 tested (567 survived, 61 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 52m) 739/1714 tested (568 survived, 61 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 52m) 741/1714 tested (570 survived, 61 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 52m) 742/1714 tested (571 survived, 61 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 51m) 744/1714 tested (573 survived, 61 timed out)
Mutation testing 43% (elapsed: ~1h 25m, remaining: ~1h 51m) 745/1714 tested (574 survived, 61 timed out)
Mutation testing 43% (elapsed: ~1h 26m, remaining: ~1h 51m) 746/1714 tested (575 survived, 61 timed out)
Mutation testing 43% (elapsed: ~1h 26m, remaining: ~1h 51m) 748/1714 tested (577 survived, 61 timed out)
Mutation testing 43% (elapsed: ~1h 26m, remaining: ~1h 51m) 748/1714 tested (577 survived, 61 timed out)
Mutation testing 43% (elapsed: ~1h 26m, remaining: ~1h 51m) 749/1714 tested (577 survived, 62 timed out)
Mutation testing 43% (elapsed: ~1h 26m, remaining: ~1h 51m) 750/1714 tested (577 survived, 63 timed out)
Mutation testing 43% (elapsed: ~1h 26m, remaining: ~1h 51m) 750/1714 tested (577 survived, 63 timed out)
Mutation testing 43% (elapsed: ~1h 27m, remaining: ~1h 51m) 751/1714 tested (577 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 27m, remaining: ~1h 51m) 753/1714 tested (578 survived, 64 timed out)
Mutation testing 43% (elapsed: ~1h 27m, remaining: ~1h 51m) 754/1714 tested (579 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 27m, remaining: ~1h 50m) 756/1714 tested (580 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 27m, remaining: ~1h 50m) 757/1714 tested (581 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 27m, remaining: ~1h 50m) 759/1714 tested (583 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 28m, remaining: ~1h 50m) 760/1714 tested (584 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 28m, remaining: ~1h 50m) 761/1714 tested (585 survived, 64 timed out)
Mutation testing 44% (elapsed: ~1h 28m, remaining: ~1h 50m) 762/1714 tested (585 survived, 65 timed out)
Mutation testing 44% (elapsed: ~1h 28m, remaining: ~1h 50m) 762/1714 tested (585 survived, 65 timed out)
Mutation testing 44% (elapsed: ~1h 28m, remaining: ~1h 50m) 763/1714 tested (585 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 28m, remaining: ~1h 50m) 764/1714 tested (585 survived, 67 timed out)
Mutation testing 44% (elapsed: ~1h 29m, remaining: ~1h 50m) 765/1714 tested (586 survived, 67 timed out)
Mutation testing 44% (elapsed: ~1h 29m, remaining: ~1h 49m) 768/1714 tested (588 survived, 67 timed out)
Mutation testing 44% (elapsed: ~1h 29m, remaining: ~1h 49m) 769/1714 tested (589 survived, 67 timed out)
Mutation testing 44% (elapsed: ~1h 29m, remaining: ~1h 49m) 770/1714 tested (590 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 29m, remaining: ~1h 49m) 772/1714 tested (592 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 29m, remaining: ~1h 49m) 773/1714 tested (593 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 30m, remaining: ~1h 49m) 775/1714 tested (595 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 30m, remaining: ~1h 48m) 776/1714 tested (596 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 30m, remaining: ~1h 48m) 778/1714 tested (598 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 30m, remaining: ~1h 48m) 779/1714 tested (599 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 30m, remaining: ~1h 48m) 781/1714 tested (601 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 30m, remaining: ~1h 48m) 782/1714 tested (602 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 31m, remaining: ~1h 47m) 784/1714 tested (604 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 31m, remaining: ~1h 47m) 785/1714 tested (605 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 31m, remaining: ~1h 47m) 787/1714 tested (607 survived, 67 timed out)
Mutation testing 45% (elapsed: ~1h 31m, remaining: ~1h 47m) 788/1714 tested (608 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 31m, remaining: ~1h 47m) 790/1714 tested (610 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 31m, remaining: ~1h 47m) 791/1714 tested (611 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 32m, remaining: ~1h 46m) 793/1714 tested (613 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 32m, remaining: ~1h 46m) 794/1714 tested (614 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 32m, remaining: ~1h 46m) 796/1714 tested (616 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 32m, remaining: ~1h 46m) 797/1714 tested (617 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 32m, remaining: ~1h 46m) 799/1714 tested (619 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 32m, remaining: ~1h 46m) 800/1714 tested (620 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 33m, remaining: ~1h 46m) 801/1714 tested (621 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 33m, remaining: ~1h 45m) 803/1714 tested (623 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 33m, remaining: ~1h 45m) 804/1714 tested (624 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 45m) 806/1714 tested (626 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 44m) 809/1714 tested (627 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 44m) 811/1714 tested (629 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 34m, remaining: ~1h 44m) 812/1714 tested (630 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 34m, remaining: ~1h 44m) 813/1714 tested (631 survived, 67 timed out)
Mutation testing 47% (elapsed: ~1h 34m, remaining: ~1h 44m) 814/1714 tested (631 survived, 68 timed out)
Mutation testing 47% (elapsed: ~1h 34m, remaining: ~1h 44m) 814/1714 tested (631 survived, 68 timed out)
Mutation testing 47% (elapsed: ~1h 34m, remaining: ~1h 44m) 815/1714 tested (631 survived, 69 timed out)
Mutation testing 47% (elapsed: ~1h 34m, remaining: ~1h 44m) 816/1714 tested (631 survived, 70 timed out)
Mutation testing 47% (elapsed: ~1h 35m, remaining: ~1h 44m) 816/1714 tested (631 survived, 70 timed out)
Mutation testing 47% (elapsed: ~1h 35m, remaining: ~1h 44m) 817/1714 tested (631 survived, 71 timed out)
Mutation testing 47% (elapsed: ~1h 35m, remaining: ~1h 44m) 818/1714 tested (631 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 35m, remaining: ~1h 44m) 818/1714 tested (631 survived, 72 timed out)
Mutation testing 47% (elapsed: ~1h 35m, remaining: ~1h 44m) 819/1714 tested (631 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 35m, remaining: ~1h 44m) 821/1714 tested (633 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 36m, remaining: ~1h 44m) 822/1714 tested (634 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 36m, remaining: ~1h 43m) 824/1714 tested (636 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 36m, remaining: ~1h 43m) 825/1714 tested (637 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 36m, remaining: ~1h 43m) 827/1714 tested (639 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 36m, remaining: ~1h 43m) 828/1714 tested (640 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 36m, remaining: ~1h 43m) 830/1714 tested (642 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 37m, remaining: ~1h 43m) 831/1714 tested (643 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 37m, remaining: ~1h 42m) 833/1714 tested (645 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 37m, remaining: ~1h 42m) 834/1714 tested (646 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 37m, remaining: ~1h 42m) 836/1714 tested (648 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 37m, remaining: ~1h 42m) 837/1714 tested (649 survived, 73 timed out)
Mutation testing 48% (elapsed: ~1h 37m, remaining: ~1h 42m) 839/1714 tested (651 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 38m, remaining: ~1h 41m) 840/1714 tested (652 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 38m, remaining: ~1h 41m) 841/1714 tested (653 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 38m, remaining: ~1h 41m) 843/1714 tested (655 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 38m, remaining: ~1h 41m) 844/1714 tested (656 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 38m, remaining: ~1h 41m) 846/1714 tested (658 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 38m, remaining: ~1h 41m) 847/1714 tested (659 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 39m, remaining: ~1h 40m) 849/1714 tested (661 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 39m, remaining: ~1h 40m) 850/1714 tested (662 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 39m, remaining: ~1h 40m) 852/1714 tested (664 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 39m, remaining: ~1h 40m) 853/1714 tested (665 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 39m, remaining: ~1h 40m) 855/1714 tested (667 survived, 73 timed out)
Mutation testing 49% (elapsed: ~1h 39m, remaining: ~1h 40m) 856/1714 tested (668 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 40m, remaining: ~1h 39m) 858/1714 tested (668 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 40m, remaining: ~1h 39m) 859/1714 tested (668 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 40m, remaining: ~1h 39m) 861/1714 tested (668 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 40m, remaining: ~1h 39m) 862/1714 tested (668 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 40m, remaining: ~1h 39m) 863/1714 tested (669 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 40m, remaining: ~1h 38m) 865/1714 tested (671 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 41m, remaining: ~1h 38m) 866/1714 tested (672 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 41m, remaining: ~1h 38m) 868/1714 tested (674 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 41m, remaining: ~1h 38m) 869/1714 tested (675 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 41m, remaining: ~1h 38m) 871/1714 tested (677 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 41m, remaining: ~1h 38m) 872/1714 tested (678 survived, 73 timed out)
Mutation testing 50% (elapsed: ~1h 41m, remaining: ~1h 37m) 874/1714 tested (680 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 42m, remaining: ~1h 37m) 875/1714 tested (681 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 42m, remaining: ~1h 37m) 877/1714 tested (683 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 42m, remaining: ~1h 37m) 878/1714 tested (684 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 42m, remaining: ~1h 37m) 880/1714 tested (686 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 42m, remaining: ~1h 37m) 881/1714 tested (687 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 42m, remaining: ~1h 36m) 883/1714 tested (689 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 43m, remaining: ~1h 36m) 884/1714 tested (690 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 43m, remaining: ~1h 36m) 886/1714 tested (692 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 43m, remaining: ~1h 36m) 887/1714 tested (693 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 43m, remaining: ~1h 36m) 889/1714 tested (695 survived, 73 timed out)
Mutation testing 51% (elapsed: ~1h 43m, remaining: ~1h 35m) 890/1714 tested (696 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 43m, remaining: ~1h 35m) 892/1714 tested (698 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 44m, remaining: ~1h 35m) 893/1714 tested (699 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 44m, remaining: ~1h 35m) 894/1714 tested (700 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 44m, remaining: ~1h 35m) 896/1714 tested (702 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 44m, remaining: ~1h 35m) 897/1714 tested (703 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 44m, remaining: ~1h 34m) 899/1714 tested (705 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 44m, remaining: ~1h 34m) 900/1714 tested (706 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 45m, remaining: ~1h 34m) 902/1714 tested (708 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 45m, remaining: ~1h 34m) 903/1714 tested (709 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 45m, remaining: ~1h 34m) 905/1714 tested (711 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 45m, remaining: ~1h 34m) 906/1714 tested (712 survived, 73 timed out)
Mutation testing 52% (elapsed: ~1h 45m, remaining: ~1h 33m) 908/1714 tested (714 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 45m, remaining: ~1h 33m) 909/1714 tested (715 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 46m, remaining: ~1h 33m) 911/1714 tested (717 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 46m, remaining: ~1h 33m) 912/1714 tested (718 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 46m, remaining: ~1h 33m) 914/1714 tested (720 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 46m, remaining: ~1h 32m) 915/1714 tested (721 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 46m, remaining: ~1h 32m) 916/1714 tested (722 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 46m, remaining: ~1h 32m) 918/1714 tested (724 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 47m, remaining: ~1h 32m) 919/1714 tested (725 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 47m, remaining: ~1h 32m) 921/1714 tested (727 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 47m, remaining: ~1h 32m) 922/1714 tested (728 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 47m, remaining: ~1h 31m) 924/1714 tested (730 survived, 73 timed out)
Mutation testing 53% (elapsed: ~1h 47m, remaining: ~1h 31m) 925/1714 tested (731 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 47m, remaining: ~1h 31m) 927/1714 tested (733 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 48m, remaining: ~1h 31m) 928/1714 tested (734 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 48m, remaining: ~1h 31m) 930/1714 tested (736 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 48m, remaining: ~1h 31m) 931/1714 tested (737 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 48m, remaining: ~1h 30m) 933/1714 tested (739 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 48m, remaining: ~1h 30m) 934/1714 tested (740 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 48m, remaining: ~1h 30m) 936/1714 tested (742 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 49m, remaining: ~1h 30m) 937/1714 tested (743 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 49m, remaining: ~1h 30m) 939/1714 tested (745 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 49m, remaining: ~1h 30m) 940/1714 tested (746 survived, 73 timed out)
Mutation testing 54% (elapsed: ~1h 49m, remaining: ~1h 29m) 942/1714 tested (748 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 49m, remaining: ~1h 29m) 943/1714 tested (749 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 49m, remaining: ~1h 29m) 944/1714 tested (750 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 50m, remaining: ~1h 29m) 946/1714 tested (752 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 50m, remaining: ~1h 29m) 947/1714 tested (753 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 50m, remaining: ~1h 28m) 949/1714 tested (755 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 50m, remaining: ~1h 28m) 950/1714 tested (756 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 50m, remaining: ~1h 28m) 952/1714 tested (758 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 50m, remaining: ~1h 28m) 953/1714 tested (759 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 51m, remaining: ~1h 28m) 955/1714 tested (761 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 51m, remaining: ~1h 28m) 956/1714 tested (762 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 51m, remaining: ~1h 27m) 958/1714 tested (764 survived, 73 timed out)
Mutation testing 55% (elapsed: ~1h 51m, remaining: ~1h 27m) 959/1714 tested (765 survived, 73 timed out)
Mutation testing 56% (elapsed: ~1h 51m, remaining: ~1h 27m) 961/1714 tested (767 survived, 73 timed out)
Mutation testing 56% (elapsed: ~1h 51m, remaining: ~1h 27m) 962/1714 tested (768 survived, 73 timed out)
Mutation testing 56% (elapsed: ~1h 52m, remaining: ~1h 27m) 964/1714 tested (770 survived, 73 timed out)
Mutation testing 56% (elapsed: ~1h 52m, remaining: ~1h 27m) 965/1714 tested (771 survived, 73 timed out)
Mutation testing 56% (elapsed: ~1h 52m, remaining: ~1h 26m) 967/1714 tested (773 survived, 73 timed out)
Mutation testing 56% (elapsed: ~1h 52m, remaining: ~1h 26m) 968/1714 tested (774 survived, 73 timed out)
Mutation testing 56% (elapsed: ~1h 52m, remaining: ~1h 26m) 970/1714 tested (776 survived, 73 timed out)
Mutation testing 56% (elapsed: ~1h 52m, remaining: ~1h 26m) 971/1714 tested (777 survived, 73 timed out)
Mutation testing 56% (elapsed: ~1h 53m, remaining: ~1h 26m) 973/1714 tested (779 survived, 73 timed out)
Mutation testing 56% (elapsed: ~1h 53m, remaining: ~1h 25m) 974/1714 tested (780 survived, 73 timed out)
Mutation testing 56% (elapsed: ~1h 53m, remaining: ~1h 25m) 976/1714 tested (782 survived, 73 timed out)
Mutation testing 57% (elapsed: ~1h 53m, remaining: ~1h 25m) 977/1714 tested (783 survived, 73 timed out)
Mutation testing 57% (elapsed: ~1h 53m, remaining: ~1h 25m) 979/1714 tested (785 survived, 73 timed out)
Mutation testing 57% (elapsed: ~1h 53m, remaining: ~1h 25m) 980/1714 tested (786 survived, 73 timed out)
Mutation testing 57% (elapsed: ~1h 54m, remaining: ~1h 25m) 981/1714 tested (787 survived, 73 timed out)
Mutation testing 57% (elapsed: ~1h 54m, remaining: ~1h 24m) 983/1714 tested (789 survived, 73 timed out)
Mutation testing 57% (elapsed: ~1h 54m, remaining: ~1h 24m) 984/1714 tested (790 survived, 73 timed out)
Mutation testing 57% (elapsed: ~1h 54m, remaining: ~1h 24m) 986/1714 tested (792 survived, 73 timed out)
Mutation testing 57% (elapsed: ~1h 54m, remaining: ~1h 24m) 987/1714 tested (793 survived, 73 timed out)
Mutation testing 57% (elapsed: ~1h 54m, remaining: ~1h 24m) 989/1714 tested (795 survived, 73 timed out)
Mutation testing 57% (elapsed: ~1h 55m, remaining: ~1h 24m) 990/1714 tested (796 survived, 73 timed out)
Mutation testing 57% (elapsed: ~1h 55m, remaining: ~1h 23m) 992/1714 tested (798 survived, 73 timed out)
Mutation testing 57% (elapsed: ~1h 55m, remaining: ~1h 23m) 993/1714 tested (799 survived, 73 timed out)
Mutation testing 58% (elapsed: ~1h 55m, remaining: ~1h 23m) 995/1714 tested (801 survived, 73 timed out)
Mutation testing 58% (elapsed: ~1h 55m, remaining: ~1h 23m) 996/1714 tested (802 survived, 73 timed out)
Mutation testing 58% (elapsed: ~1h 55m, remaining: ~1h 23m) 998/1714 tested (804 survived, 73 timed out)
Mutation testing 58% (elapsed: ~1h 56m, remaining: ~1h 23m) 999/1714 tested (805 survived, 73 timed out)
Mutation testing 58% (elapsed: ~1h 56m, remaining: ~1h 22m) 1001/1714 tested (807 survived, 73 timed out)
Mutation testing 58% (elapsed: ~1h 56m, remaining: ~1h 22m) 1002/1714 tested (808 survived, 73 timed out)
Mutation testing 58% (elapsed: ~1h 56m, remaining: ~1h 22m) 1004/1714 tested (810 survived, 73 timed out)
Mutation testing 58% (elapsed: ~1h 56m, remaining: ~1h 22m) 1005/1714 tested (811 survived, 73 timed out)
Mutation testing 58% (elapsed: ~1h 56m, remaining: ~1h 22m) 1007/1714 tested (813 survived, 73 timed out)
Mutation testing 58% (elapsed: ~1h 57m, remaining: ~1h 21m) 1008/1714 tested (814 survived, 73 timed out)
Mutation testing 58% (elapsed: ~1h 57m, remaining: ~1h 21m) 1010/1714 tested (816 survived, 73 timed out)
Mutation testing 58% (elapsed: ~1h 57m, remaining: ~1h 21m) 1011/1714 tested (817 survived, 73 timed out)
Mutation testing 59% (elapsed: ~1h 57m, remaining: ~1h 21m) 1013/1714 tested (819 survived, 73 timed out)
Mutation testing 59% (elapsed: ~1h 57m, remaining: ~1h 21m) 1014/1714 tested (820 survived, 73 timed out)
Mutation testing 59% (elapsed: ~1h 57m, remaining: ~1h 20m) 1016/1714 tested (822 survived, 73 timed out)
Mutation testing 59% (elapsed: ~1h 58m, remaining: ~1h 20m) 1017/1714 tested (823 survived, 73 timed out)
Mutation testing 59% (elapsed: ~1h 58m, remaining: ~1h 20m) 1018/1714 tested (824 survived, 73 timed out)
Mutation testing 59% (elapsed: ~1h 58m, remaining: ~1h 20m) 1020/1714 tested (826 survived, 73 timed out)
Mutation testing 59% (elapsed: ~1h 58m, remaining: ~1h 20m) 1021/1714 tested (827 survived, 73 timed out)
Mutation testing 59% (elapsed: ~1h 58m, remaining: ~1h 20m) 1023/1714 tested (829 survived, 73 timed out)
Mutation testing 59% (elapsed: ~1h 58m, remaining: ~1h 20m) 1024/1714 tested (830 survived, 73 timed out)
Mutation testing 59% (elapsed: ~1h 59m, remaining: ~1h 19m) 1026/1714 tested (832 survived, 73 timed out)
Mutation testing 59% (elapsed: ~1h 59m, remaining: ~1h 19m) 1027/1714 tested (833 survived, 73 timed out)
Mutation testing 60% (elapsed: ~1h 59m, remaining: ~1h 19m) 1029/1714 tested (835 survived, 73 timed out)
Mutation testing 60% (elapsed: ~1h 59m, remaining: ~1h 19m) 1030/1714 tested (836 survived, 73 timed out)
Mutation testing 60% (elapsed: ~1h 59m, remaining: ~1h 19m) 1032/1714 tested (838 survived, 73 timed out)
Mutation testing 60% (elapsed: ~1h 59m, remaining: ~1h 18m) 1033/1714 tested (839 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 0m, remaining: ~1h 18m) 1035/1714 tested (841 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 0m, remaining: ~1h 18m) 1036/1714 tested (842 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 0m, remaining: ~1h 18m) 1038/1714 tested (844 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 0m, remaining: ~1h 18m) 1039/1714 tested (845 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 0m, remaining: ~1h 18m) 1041/1714 tested (847 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 0m, remaining: ~1h 17m) 1042/1714 tested (848 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 1m, remaining: ~1h 17m) 1044/1714 tested (850 survived, 73 timed out)
Mutation testing 60% (elapsed: ~2h 1m, remaining: ~1h 17m) 1045/1714 tested (851 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 1m, remaining: ~1h 17m) 1047/1714 tested (853 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 1m, remaining: ~1h 17m) 1048/1714 tested (854 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 1m, remaining: ~1h 16m) 1050/1714 tested (856 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 1m, remaining: ~1h 16m) 1051/1714 tested (857 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 2m, remaining: ~1h 16m) 1053/1714 tested (859 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 2m, remaining: ~1h 16m) 1054/1714 tested (860 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 2m, remaining: ~1h 16m) 1055/1714 tested (861 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 2m, remaining: ~1h 16m) 1057/1714 tested (863 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 2m, remaining: ~1h 16m) 1058/1714 tested (864 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 2m, remaining: ~1h 15m) 1060/1714 tested (866 survived, 73 timed out)
Mutation testing 61% (elapsed: ~2h 3m, remaining: ~1h 15m) 1061/1714 tested (867 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 3m, remaining: ~1h 15m) 1063/1714 tested (869 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 3m, remaining: ~1h 15m) 1064/1714 tested (870 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 3m, remaining: ~1h 15m) 1066/1714 tested (872 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 3m, remaining: ~1h 14m) 1067/1714 tested (873 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 3m, remaining: ~1h 14m) 1069/1714 tested (875 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 4m, remaining: ~1h 14m) 1070/1714 tested (876 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 4m, remaining: ~1h 14m) 1072/1714 tested (878 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 4m, remaining: ~1h 14m) 1073/1714 tested (879 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 4m, remaining: ~1h 14m) 1075/1714 tested (881 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 4m, remaining: ~1h 13m) 1076/1714 tested (882 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 4m, remaining: ~1h 13m) 1078/1714 tested (884 survived, 73 timed out)
Mutation testing 62% (elapsed: ~2h 5m, remaining: ~1h 13m) 1079/1714 tested (885 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 5m, remaining: ~1h 13m) 1081/1714 tested (887 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 5m, remaining: ~1h 13m) 1082/1714 tested (888 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 5m, remaining: ~1h 12m) 1084/1714 tested (890 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 5m, remaining: ~1h 12m) 1085/1714 tested (891 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 5m, remaining: ~1h 12m) 1087/1714 tested (893 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 6m, remaining: ~1h 12m) 1088/1714 tested (894 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 6m, remaining: ~1h 12m) 1090/1714 tested (896 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 6m, remaining: ~1h 12m) 1091/1714 tested (897 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 6m, remaining: ~1h 11m) 1093/1714 tested (899 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 6m, remaining: ~1h 11m) 1094/1714 tested (900 survived, 73 timed out)
Mutation testing 63% (elapsed: ~2h 6m, remaining: ~1h 11m) 1096/1714 tested (902 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 7m, remaining: ~1h 11m) 1097/1714 tested (903 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 7m, remaining: ~1h 11m) 1098/1714 tested (904 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 7m, remaining: ~1h 11m) 1100/1714 tested (906 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 7m, remaining: ~1h 10m) 1101/1714 tested (907 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 7m, remaining: ~1h 10m) 1103/1714 tested (909 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 7m, remaining: ~1h 10m) 1104/1714 tested (910 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 8m, remaining: ~1h 10m) 1106/1714 tested (912 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 8m, remaining: ~1h 10m) 1107/1714 tested (913 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 8m, remaining: ~1h 10m) 1109/1714 tested (915 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 8m, remaining: ~1h 9m) 1110/1714 tested (916 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 8m, remaining: ~1h 9m) 1112/1714 tested (918 survived, 73 timed out)
Mutation testing 64% (elapsed: ~2h 8m, remaining: ~1h 9m) 1113/1714 tested (919 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 9m, remaining: ~1h 9m) 1115/1714 tested (921 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 9m, remaining: ~1h 9m) 1116/1714 tested (922 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 9m, remaining: ~1h 8m) 1118/1714 tested (924 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 9m, remaining: ~1h 8m) 1119/1714 tested (925 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 9m, remaining: ~1h 8m) 1121/1714 tested (927 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 9m, remaining: ~1h 8m) 1122/1714 tested (928 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 10m, remaining: ~1h 8m) 1124/1714 tested (930 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 10m, remaining: ~1h 8m) 1125/1714 tested (931 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 10m, remaining: ~1h 7m) 1127/1714 tested (933 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 10m, remaining: ~1h 7m) 1128/1714 tested (934 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 10m, remaining: ~1h 7m) 1130/1714 tested (936 survived, 73 timed out)
Mutation testing 65% (elapsed: ~2h 10m, remaining: ~1h 7m) 1131/1714 tested (937 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 11m, remaining: ~1h 7m) 1133/1714 tested (939 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 11m, remaining: ~1h 7m) 1134/1714 tested (940 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 11m, remaining: ~1h 6m) 1136/1714 tested (942 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 11m, remaining: ~1h 6m) 1137/1714 tested (943 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 11m, remaining: ~1h 6m) 1139/1714 tested (945 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 11m, remaining: ~1h 6m) 1140/1714 tested (946 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 12m, remaining: ~1h 6m) 1141/1714 tested (947 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 12m, remaining: ~1h 6m) 1143/1714 tested (949 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 12m, remaining: ~1h 5m) 1144/1714 tested (950 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 12m, remaining: ~1h 5m) 1146/1714 tested (952 survived, 73 timed out)
Mutation testing 66% (elapsed: ~2h 12m, remaining: ~1h 5m) 1147/1714 tested (953 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 12m, remaining: ~1h 5m) 1149/1714 tested (955 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 13m, remaining: ~1h 5m) 1150/1714 tested (956 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 13m, remaining: ~1h 4m) 1152/1714 tested (958 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 13m, remaining: ~1h 4m) 1153/1714 tested (959 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 13m, remaining: ~1h 4m) 1155/1714 tested (961 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 13m, remaining: ~1h 4m) 1156/1714 tested (962 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 13m, remaining: ~1h 4m) 1158/1714 tested (964 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 14m, remaining: ~1h 4m) 1159/1714 tested (965 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 14m, remaining: ~1h 3m) 1161/1714 tested (967 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 14m, remaining: ~1h 3m) 1162/1714 tested (968 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 14m, remaining: ~1h 3m) 1164/1714 tested (970 survived, 73 timed out)
Mutation testing 67% (elapsed: ~2h 14m, remaining: ~1h 3m) 1165/1714 tested (971 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 14m, remaining: ~1h 3m) 1167/1714 tested (973 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 15m, remaining: ~1h 3m) 1168/1714 tested (974 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 15m, remaining: ~1h 2m) 1170/1714 tested (976 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 15m, remaining: ~1h 2m) 1171/1714 tested (977 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 15m, remaining: ~1h 2m) 1173/1714 tested (979 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 15m, remaining: ~1h 2m) 1174/1714 tested (980 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 15m, remaining: ~1h 2m) 1176/1714 tested (982 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 16m, remaining: ~1h 2m) 1177/1714 tested (983 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 16m, remaining: ~1h 1m) 1179/1714 tested (985 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 16m, remaining: ~1h 1m) 1180/1714 tested (986 survived, 73 timed out)
Mutation testing 68% (elapsed: ~2h 16m, remaining: ~1h 1m) 1181/1714 tested (987 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 16m, remaining: ~1h 1m) 1183/1714 tested (989 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 16m, remaining: ~1h 1m) 1184/1714 tested (990 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 17m, remaining: ~1h 0m) 1186/1714 tested (992 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 17m, remaining: ~1h 0m) 1187/1714 tested (993 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 17m, remaining: ~1h 0m) 1189/1714 tested (995 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 17m, remaining: ~1h 0m) 1190/1714 tested (996 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 17m, remaining: ~1h 0m) 1192/1714 tested (998 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 17m, remaining: ~1h 0m) 1193/1714 tested (999 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 18m, remaining: ~59m) 1195/1714 tested (1001 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 18m, remaining: ~59m) 1196/1714 tested (1002 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 18m, remaining: ~59m) 1198/1714 tested (1004 survived, 73 timed out)
Mutation testing 69% (elapsed: ~2h 18m, remaining: ~59m) 1199/1714 tested (1005 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 18m, remaining: ~59m) 1201/1714 tested (1007 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 18m, remaining: ~59m) 1202/1714 tested (1008 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 19m, remaining: ~58m) 1204/1714 tested (1010 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 19m, remaining: ~58m) 1205/1714 tested (1011 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 19m, remaining: ~58m) 1207/1714 tested (1013 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 19m, remaining: ~58m) 1208/1714 tested (1014 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 19m, remaining: ~58m) 1210/1714 tested (1016 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 19m, remaining: ~58m) 1211/1714 tested (1017 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 20m, remaining: ~57m) 1213/1714 tested (1019 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 20m, remaining: ~57m) 1214/1714 tested (1020 survived, 73 timed out)
Mutation testing 70% (elapsed: ~2h 20m, remaining: ~57m) 1216/1714 tested (1022 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 20m, remaining: ~57m) 1217/1714 tested (1023 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 20m, remaining: ~57m) 1219/1714 tested (1025 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 20m, remaining: ~57m) 1220/1714 tested (1026 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 21m, remaining: ~56m) 1222/1714 tested (1028 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 21m, remaining: ~56m) 1223/1714 tested (1029 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 21m, remaining: ~56m) 1224/1714 tested (1030 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 21m, remaining: ~56m) 1226/1714 tested (1032 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 21m, remaining: ~56m) 1227/1714 tested (1033 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 21m, remaining: ~55m) 1229/1714 tested (1035 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 22m, remaining: ~55m) 1230/1714 tested (1036 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 22m, remaining: ~55m) 1232/1714 tested (1038 survived, 73 timed out)
Mutation testing 71% (elapsed: ~2h 22m, remaining: ~55m) 1233/1714 tested (1039 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 22m, remaining: ~55m) 1235/1714 tested (1041 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 22m, remaining: ~55m) 1236/1714 tested (1042 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 22m, remaining: ~54m) 1238/1714 tested (1044 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 23m, remaining: ~54m) 1239/1714 tested (1045 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 23m, remaining: ~54m) 1241/1714 tested (1047 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 23m, remaining: ~54m) 1242/1714 tested (1048 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 23m, remaining: ~54m) 1244/1714 tested (1050 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 23m, remaining: ~54m) 1245/1714 tested (1051 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 23m, remaining: ~53m) 1247/1714 tested (1053 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 24m, remaining: ~53m) 1248/1714 tested (1054 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 24m, remaining: ~53m) 1250/1714 tested (1056 survived, 73 timed out)
Mutation testing 72% (elapsed: ~2h 24m, remaining: ~53m) 1251/1714 tested (1057 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 24m, remaining: ~53m) 1253/1714 tested (1059 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 24m, remaining: ~53m) 1254/1714 tested (1060 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 24m, remaining: ~52m) 1256/1714 tested (1062 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 25m, remaining: ~52m) 1257/1714 tested (1063 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 25m, remaining: ~52m) 1259/1714 tested (1065 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 25m, remaining: ~52m) 1260/1714 tested (1066 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 25m, remaining: ~52m) 1262/1714 tested (1068 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 25m, remaining: ~52m) 1263/1714 tested (1069 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 25m, remaining: ~51m) 1264/1714 tested (1070 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 26m, remaining: ~51m) 1266/1714 tested (1072 survived, 73 timed out)
Mutation testing 73% (elapsed: ~2h 26m, remaining: ~51m) 1267/1714 tested (1073 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 26m, remaining: ~51m) 1269/1714 tested (1075 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 26m, remaining: ~51m) 1270/1714 tested (1076 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 26m, remaining: ~50m) 1272/1714 tested (1078 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 26m, remaining: ~50m) 1273/1714 tested (1079 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 27m, remaining: ~50m) 1275/1714 tested (1081 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 27m, remaining: ~50m) 1276/1714 tested (1082 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 27m, remaining: ~50m) 1278/1714 tested (1084 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 27m, remaining: ~50m) 1279/1714 tested (1085 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 27m, remaining: ~49m) 1281/1714 tested (1087 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 27m, remaining: ~49m) 1282/1714 tested (1088 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 28m, remaining: ~49m) 1284/1714 tested (1090 survived, 73 timed out)
Mutation testing 74% (elapsed: ~2h 28m, remaining: ~49m) 1285/1714 tested (1091 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 28m, remaining: ~49m) 1287/1714 tested (1093 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 28m, remaining: ~49m) 1288/1714 tested (1094 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 28m, remaining: ~48m) 1290/1714 tested (1096 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 28m, remaining: ~48m) 1291/1714 tested (1097 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 29m, remaining: ~48m) 1293/1714 tested (1099 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 29m, remaining: ~48m) 1294/1714 tested (1100 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 29m, remaining: ~48m) 1296/1714 tested (1102 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 29m, remaining: ~48m) 1297/1714 tested (1103 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 29m, remaining: ~47m) 1299/1714 tested (1105 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 29m, remaining: ~47m) 1300/1714 tested (1106 survived, 73 timed out)
Mutation testing 75% (elapsed: ~2h 30m, remaining: ~47m) 1301/1714 tested (1107 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 30m, remaining: ~47m) 1303/1714 tested (1109 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 30m, remaining: ~47m) 1304/1714 tested (1110 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 30m, remaining: ~47m) 1306/1714 tested (1112 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 30m, remaining: ~46m) 1307/1714 tested (1113 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 30m, remaining: ~46m) 1309/1714 tested (1115 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 31m, remaining: ~46m) 1310/1714 tested (1116 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 31m, remaining: ~46m) 1312/1714 tested (1118 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 31m, remaining: ~46m) 1313/1714 tested (1119 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 31m, remaining: ~45m) 1315/1714 tested (1121 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 31m, remaining: ~45m) 1316/1714 tested (1122 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 31m, remaining: ~45m) 1318/1714 tested (1124 survived, 73 timed out)
Mutation testing 76% (elapsed: ~2h 32m, remaining: ~45m) 1319/1714 tested (1125 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 32m, remaining: ~45m) 1321/1714 tested (1127 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 32m, remaining: ~45m) 1322/1714 tested (1128 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 32m, remaining: ~44m) 1324/1714 tested (1130 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 32m, remaining: ~44m) 1325/1714 tested (1131 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 32m, remaining: ~44m) 1327/1714 tested (1133 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 33m, remaining: ~44m) 1328/1714 tested (1134 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 33m, remaining: ~44m) 1330/1714 tested (1136 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 33m, remaining: ~44m) 1331/1714 tested (1137 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 33m, remaining: ~43m) 1333/1714 tested (1139 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 33m, remaining: ~43m) 1334/1714 tested (1140 survived, 73 timed out)
Mutation testing 77% (elapsed: ~2h 33m, remaining: ~43m) 1335/1714 tested (1141 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 34m, remaining: ~43m) 1337/1714 tested (1143 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 34m, remaining: ~43m) 1338/1714 tested (1144 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 34m, remaining: ~43m) 1340/1714 tested (1146 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 34m, remaining: ~42m) 1341/1714 tested (1147 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 34m, remaining: ~42m) 1343/1714 tested (1149 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 34m, remaining: ~42m) 1344/1714 tested (1150 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 35m, remaining: ~42m) 1346/1714 tested (1152 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 35m, remaining: ~42m) 1347/1714 tested (1153 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 35m, remaining: ~42m) 1349/1714 tested (1155 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 35m, remaining: ~41m) 1350/1714 tested (1156 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 35m, remaining: ~41m) 1352/1714 tested (1158 survived, 73 timed out)
Mutation testing 78% (elapsed: ~2h 35m, remaining: ~41m) 1353/1714 tested (1159 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 36m, remaining: ~41m) 1355/1714 tested (1161 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 36m, remaining: ~41m) 1356/1714 tested (1162 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 36m, remaining: ~40m) 1358/1714 tested (1164 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 36m, remaining: ~40m) 1359/1714 tested (1165 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 36m, remaining: ~40m) 1361/1714 tested (1167 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 36m, remaining: ~40m) 1362/1714 tested (1168 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 37m, remaining: ~40m) 1364/1714 tested (1170 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 37m, remaining: ~40m) 1365/1714 tested (1171 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 37m, remaining: ~39m) 1367/1714 tested (1173 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 37m, remaining: ~39m) 1368/1714 tested (1174 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 37m, remaining: ~39m) 1369/1714 tested (1175 survived, 73 timed out)
Mutation testing 79% (elapsed: ~2h 37m, remaining: ~39m) 1371/1714 tested (1177 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 38m, remaining: ~39m) 1372/1714 tested (1178 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 38m, remaining: ~39m) 1374/1714 tested (1180 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 38m, remaining: ~39m) 1375/1714 tested (1181 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 38m, remaining: ~38m) 1377/1714 tested (1183 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 38m, remaining: ~38m) 1378/1714 tested (1184 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 38m, remaining: ~38m) 1380/1714 tested (1186 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 39m, remaining: ~38m) 1381/1714 tested (1187 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 39m, remaining: ~38m) 1383/1714 tested (1189 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 39m, remaining: ~37m) 1384/1714 tested (1190 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 39m, remaining: ~37m) 1386/1714 tested (1192 survived, 73 timed out)
Mutation testing 80% (elapsed: ~2h 39m, remaining: ~37m) 1387/1714 tested (1193 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 39m, remaining: ~37m) 1389/1714 tested (1195 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 40m, remaining: ~37m) 1390/1714 tested (1196 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 40m, remaining: ~37m) 1392/1714 tested (1198 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 40m, remaining: ~36m) 1393/1714 tested (1199 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 40m, remaining: ~36m) 1395/1714 tested (1201 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 40m, remaining: ~36m) 1396/1714 tested (1202 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 40m, remaining: ~36m) 1398/1714 tested (1204 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 41m, remaining: ~36m) 1399/1714 tested (1205 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 41m, remaining: ~36m) 1401/1714 tested (1207 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 41m, remaining: ~35m) 1402/1714 tested (1208 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 41m, remaining: ~35m) 1403/1714 tested (1209 survived, 73 timed out)
Mutation testing 81% (elapsed: ~2h 41m, remaining: ~35m) 1405/1714 tested (1211 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 41m, remaining: ~35m) 1406/1714 tested (1212 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 42m, remaining: ~35m) 1408/1714 tested (1214 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 42m, remaining: ~35m) 1409/1714 tested (1215 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 42m, remaining: ~34m) 1411/1714 tested (1217 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 42m, remaining: ~34m) 1412/1714 tested (1218 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 42m, remaining: ~34m) 1414/1714 tested (1220 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 42m, remaining: ~34m) 1415/1714 tested (1221 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 43m, remaining: ~34m) 1417/1714 tested (1223 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 43m, remaining: ~34m) 1418/1714 tested (1224 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 43m, remaining: ~33m) 1420/1714 tested (1226 survived, 73 timed out)
Mutation testing 82% (elapsed: ~2h 43m, remaining: ~33m) 1421/1714 tested (1227 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 43m, remaining: ~33m) 1423/1714 tested (1229 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 43m, remaining: ~33m) 1424/1714 tested (1230 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 44m, remaining: ~33m) 1426/1714 tested (1232 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 44m, remaining: ~33m) 1427/1714 tested (1233 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 44m, remaining: ~32m) 1429/1714 tested (1235 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 44m, remaining: ~32m) 1430/1714 tested (1236 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 44m, remaining: ~32m) 1432/1714 tested (1238 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 44m, remaining: ~32m) 1433/1714 tested (1239 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 45m, remaining: ~32m) 1435/1714 tested (1241 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 45m, remaining: ~31m) 1436/1714 tested (1242 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 45m, remaining: ~31m) 1437/1714 tested (1243 survived, 73 timed out)
Mutation testing 83% (elapsed: ~2h 45m, remaining: ~31m) 1439/1714 tested (1245 survived, 73 timed out)
Mutation testing 84% (elapsed: ~2h 45m, remaining: ~31m) 1440/1714 tested (1246 survived, 73 timed out)
Mutation testing 84% (elapsed: ~2h 45m, remaining: ~31m) 1442/1714 tested (1248 survived, 73 timed out)
Mutation testing 84% (elapsed: ~2h 46m, remaining: ~31m) 1443/1714 tested (1249 survived, 73 timed out)
Mutation testing 84% (elapsed: ~2h 46m, remaining: ~30m) 1445/1714 tested (1251 survived, 73 timed out)
Mutation testing 84% (elapsed: ~2h 46m, remaining: ~30m) 1446/1714 tested (1252 survived, 73 timed out)
Mutation testing 84% (elapsed: ~2h 46m, remaining: ~30m) 1448/1714 tested (1254 survived, 73 timed out)
Mutation testing 84% (elapsed: ~2h 46m, remaining: ~30m) 1449/1714 tested (1255 survived, 73 timed out)
Mutation testing 84% (elapsed: ~2h 46m, remaining: ~30m) 1451/1714 tested (1257 survived, 73 timed out)
Mutation testing 84% (elapsed: ~2h 47m, remaining: ~30m) 1452/1714 tested (1258 survived, 73 timed out)
Mutation testing 84% (elapsed: ~2h 47m, remaining: ~29m) 1454/1714 tested (1260 survived, 73 timed out)
Mutation testing 84% (elapsed: ~2h 47m, remaining: ~29m) 1455/1714 tested (1261 survived, 73 timed out)
Mutation testing 85% (elapsed: ~2h 47m, remaining: ~29m) 1457/1714 tested (1263 survived, 73 timed out)
Mutation testing 85% (elapsed: ~2h 47m, remaining: ~29m) 1458/1714 tested (1264 survived, 73 timed out)
Mutation testing 85% (elapsed: ~2h 47m, remaining: ~29m) 1460/1714 tested (1266 survived, 73 timed out)
Mutation testing 85% (elapsed: ~2h 48m, remaining: ~29m) 1461/1714 tested (1267 survived, 73 timed out)
Mutation testing 85% (elapsed: ~2h 48m, remaining: ~28m) 1463/1714 tested (1269 survived, 73 timed out)
Mutation testing 85% (elapsed: ~2h 48m, remaining: ~28m) 1464/1714 tested (1270 survived, 73 timed out)
Mutation testing 85% (elapsed: ~2h 48m, remaining: ~28m) 1466/1714 tested (1272 survived, 73 timed out)
Mutation testing 85% (elapsed: ~2h 48m, remaining: ~28m) 1467/1714 tested (1273 survived, 73 timed out)
Mutation testing 85% (elapsed: ~2h 48m, remaining: ~28m) 1469/1714 tested (1275 survived, 73 timed out)
Mutation testing 85% (elapsed: ~2h 49m, remaining: ~28m) 1470/1714 tested (1276 survived, 73 timed out)
Mutation testing 85% (elapsed: ~2h 49m, remaining: ~27m) 1472/1714 tested (1278 survived, 73 timed out)
Mutation testing 85% (elapsed: ~2h 49m, remaining: ~27m) 1473/1714 tested (1279 survived, 73 timed out)
Mutation testing 86% (elapsed: ~2h 49m, remaining: ~27m) 1475/1714 tested (1281 survived, 73 timed out)
Mutation testing 86% (elapsed: ~2h 49m, remaining: ~27m) 1476/1714 tested (1282 survived, 73 timed out)
Mutation testing 86% (elapsed: ~2h 49m, remaining: ~27m) 1477/1714 tested (1283 survived, 73 timed out)
Mutation testing 86% (elapsed: ~2h 50m, remaining: ~27m) 1479/1714 tested (1285 survived, 73 timed out)
Mutation testing 86% (elapsed: ~2h 50m, remaining: ~26m) 1480/1714 tested (1286 survived, 73 timed out)
Mutation testing 86% (elapsed: ~2h 50m, remaining: ~26m) 1482/1714 tested (1288 survived, 73 timed out)
Mutation testing 86% (elapsed: ~2h 50m, remaining: ~26m) 1483/1714 tested (1289 survived, 73 timed out)
Mutation testing 86% (elapsed: ~2h 50m, remaining: ~26m) 1485/1714 tested (1291 survived, 73 timed out)
Mutation testing 86% (elapsed: ~2h 50m, remaining: ~26m) 1486/1714 tested (1292 survived, 73 timed out)
Mutation testing 86% (elapsed: ~2h 51m, remaining: ~25m) 1488/1714 tested (1294 survived, 73 timed out)
Mutation testing 86% (elapsed: ~2h 51m, remaining: ~25m) 1489/1714 tested (1295 survived, 73 timed out)
Mutation testing 86% (elapsed: ~2h 51m, remaining: ~25m) 1491/1714 tested (1297 survived, 73 timed out)
Mutation testing 87% (elapsed: ~2h 51m, remaining: ~25m) 1492/1714 tested (1298 survived, 73 timed out)
Mutation testing 87% (elapsed: ~2h 51m, remaining: ~25m) 1494/1714 tested (1300 survived, 73 timed out)
Mutation testing 87% (elapsed: ~2h 51m, remaining: ~25m) 1495/1714 tested (1301 survived, 73 timed out)
Mutation testing 87% (elapsed: ~2h 52m, remaining: ~24m) 1497/1714 tested (1303 survived, 73 timed out)
Mutation testing 87% (elapsed: ~2h 52m, remaining: ~24m) 1498/1714 tested (1304 survived, 73 timed out)
Mutation testing 87% (elapsed: ~2h 52m, remaining: ~24m) 1500/1714 tested (1306 survived, 73 timed out)
Mutation testing 87% (elapsed: ~2h 52m, remaining: ~24m) 1501/1714 tested (1307 survived, 73 timed out)
Mutation testing 87% (elapsed: ~2h 52m, remaining: ~24m) 1503/1714 tested (1309 survived, 73 timed out)
Mutation testing 87% (elapsed: ~2h 52m, remaining: ~24m) 1504/1714 tested (1310 survived, 73 timed out)
Mutation testing 87% (elapsed: ~2h 53m, remaining: ~23m) 1506/1714 tested (1312 survived, 73 timed out)
Mutation testing 87% (elapsed: ~2h 53m, remaining: ~23m) 1507/1714 tested (1313 survived, 73 timed out)
Mutation testing 88% (elapsed: ~2h 53m, remaining: ~23m) 1509/1714 tested (1315 survived, 73 timed out)
Mutation testing 88% (elapsed: ~2h 53m, remaining: ~23m) 1510/1714 tested (1316 survived, 73 timed out)
Mutation testing 88% (elapsed: ~2h 53m, remaining: ~23m) 1512/1714 tested (1318 survived, 73 timed out)
Mutation testing 88% (elapsed: ~2h 53m, remaining: ~23m) 1513/1714 tested (1319 survived, 73 timed out)
Mutation testing 88% (elapsed: ~2h 54m, remaining: ~22m) 1515/1714 tested (1321 survived, 73 timed out)
Mutation testing 88% (elapsed: ~2h 54m, remaining: ~22m) 1516/1714 tested (1322 survived, 73 timed out)
Mutation testing 88% (elapsed: ~2h 54m, remaining: ~22m) 1517/1714 tested (1323 survived, 73 timed out)
Mutation testing 88% (elapsed: ~2h 54m, remaining: ~22m) 1519/1714 tested (1325 survived, 73 timed out)
Mutation testing 88% (elapsed: ~2h 54m, remaining: ~22m) 1520/1714 tested (1326 survived, 73 timed out)
Mutation testing 88% (elapsed: ~2h 54m, remaining: ~22m) 1522/1714 tested (1328 survived, 73 timed out)
Mutation testing 88% (elapsed: ~2h 55m, remaining: ~21m) 1523/1714 tested (1329 survived, 73 timed out)
Mutation testing 88% (elapsed: ~2h 55m, remaining: ~21m) 1525/1714 tested (1331 survived, 73 timed out)
Mutation testing 89% (elapsed: ~2h 55m, remaining: ~21m) 1526/1714 tested (1332 survived, 73 timed out)
Mutation testing 89% (elapsed: ~2h 55m, remaining: ~21m) 1528/1714 tested (1334 survived, 73 timed out)
Mutation testing 89% (elapsed: ~2h 55m, remaining: ~21m) 1529/1714 tested (1335 survived, 73 timed out)
Mutation testing 89% (elapsed: ~2h 55m, remaining: ~21m) 1531/1714 tested (1337 survived, 73 timed out)
Mutation testing 89% (elapsed: ~2h 56m, remaining: ~20m) 1532/1714 tested (1338 survived, 73 timed out)
Mutation testing 89% (elapsed: ~2h 56m, remaining: ~20m) 1534/1714 tested (1340 survived, 73 timed out)
Mutation testing 89% (elapsed: ~2h 56m, remaining: ~20m) 1535/1714 tested (1341 survived, 73 timed out)
Mutation testing 89% (elapsed: ~2h 56m, remaining: ~20m) 1537/1714 tested (1343 survived, 73 timed out)
Mutation testing 89% (elapsed: ~2h 56m, remaining: ~20m) 1538/1714 tested (1344 survived, 73 timed out)
Mutation testing 89% (elapsed: ~2h 56m, remaining: ~19m) 1540/1714 tested (1346 survived, 73 timed out)
Mutation testing 89% (elapsed: ~2h 57m, remaining: ~19m) 1541/1714 tested (1347 survived, 73 timed out)
Mutation testing 90% (elapsed: ~2h 57m, remaining: ~19m) 1543/1714 tested (1349 survived, 73 timed out)
Mutation testing 90% (elapsed: ~2h 57m, remaining: ~19m) 1544/1714 tested (1350 survived, 73 timed out)
Mutation testing 90% (elapsed: ~2h 57m, remaining: ~19m) 1546/1714 tested (1352 survived, 73 timed out)
Mutation testing 90% (elapsed: ~2h 57m, remaining: ~19m) 1547/1714 tested (1353 survived, 73 timed out)
Mutation testing 90% (elapsed: ~2h 57m, remaining: ~18m) 1549/1714 tested (1355 survived, 73 timed out)
Mutation testing 90% (elapsed: ~2h 58m, remaining: ~18m) 1550/1714 tested (1356 survived, 73 timed out)
Mutation testing 90% (elapsed: ~2h 58m, remaining: ~18m) 1552/1714 tested (1358 survived, 73 timed out)
Mutation testing 90% (elapsed: ~2h 58m, remaining: ~18m) 1553/1714 tested (1359 survived, 73 timed out)
Mutation testing 90% (elapsed: ~2h 58m, remaining: ~18m) 1555/1714 tested (1361 survived, 73 timed out)
Mutation testing 90% (elapsed: ~2h 58m, remaining: ~18m) 1556/1714 tested (1362 survived, 73 timed out)
Mutation testing 90% (elapsed: ~2h 58m, remaining: ~17m) 1558/1714 tested (1364 survived, 73 timed out)
Mutation testing 90% (elapsed: ~2h 59m, remaining: ~17m) 1559/1714 tested (1365 survived, 73 timed out)
Mutation testing 91% (elapsed: ~2h 59m, remaining: ~17m) 1560/1714 tested (1366 survived, 73 timed out)
Mutation testing 91% (elapsed: ~2h 59m, remaining: ~17m) 1562/1714 tested (1368 survived, 73 timed out)
Mutation testing 91% (elapsed: ~2h 59m, remaining: ~17m) 1563/1714 tested (1369 survived, 73 timed out)
Mutation testing 91% (elapsed: ~2h 59m, remaining: ~17m) 1565/1714 tested (1371 survived, 73 timed out)
Mutation testing 91% (elapsed: ~2h 59m, remaining: ~16m) 1566/1714 tested (1372 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 0m, remaining: ~16m) 1568/1714 tested (1374 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 0m, remaining: ~16m) 1569/1714 tested (1375 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 0m, remaining: ~16m) 1571/1714 tested (1377 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 0m, remaining: ~16m) 1572/1714 tested (1378 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 0m, remaining: ~16m) 1574/1714 tested (1380 survived, 73 timed out)
Mutation testing 91% (elapsed: ~3h 0m, remaining: ~15m) 1575/1714 tested (1381 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 1m, remaining: ~15m) 1577/1714 tested (1383 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 1m, remaining: ~15m) 1578/1714 tested (1384 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 1m, remaining: ~15m) 1580/1714 tested (1386 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 1m, remaining: ~15m) 1581/1714 tested (1387 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 1m, remaining: ~15m) 1583/1714 tested (1389 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 1m, remaining: ~14m) 1584/1714 tested (1390 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 2m, remaining: ~14m) 1586/1714 tested (1392 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 2m, remaining: ~14m) 1587/1714 tested (1393 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 2m, remaining: ~14m) 1589/1714 tested (1395 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 2m, remaining: ~14m) 1590/1714 tested (1396 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 2m, remaining: ~13m) 1592/1714 tested (1398 survived, 73 timed out)
Mutation testing 92% (elapsed: ~3h 2m, remaining: ~13m) 1593/1714 tested (1399 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 3m, remaining: ~13m) 1595/1714 tested (1401 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 3m, remaining: ~13m) 1596/1714 tested (1402 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 3m, remaining: ~13m) 1598/1714 tested (1404 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 3m, remaining: ~13m) 1599/1714 tested (1405 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 3m, remaining: ~13m) 1600/1714 tested (1406 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 3m, remaining: ~12m) 1602/1714 tested (1408 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 4m, remaining: ~12m) 1603/1714 tested (1409 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 4m, remaining: ~12m) 1605/1714 tested (1411 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 4m, remaining: ~12m) 1606/1714 tested (1412 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 4m, remaining: ~12m) 1608/1714 tested (1414 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 4m, remaining: ~12m) 1609/1714 tested (1415 survived, 73 timed out)
Mutation testing 93% (elapsed: ~3h 4m, remaining: ~11m) 1611/1714 tested (1417 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 5m, remaining: ~11m) 1612/1714 tested (1418 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 5m, remaining: ~11m) 1614/1714 tested (1420 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 5m, remaining: ~11m) 1615/1714 tested (1421 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 5m, remaining: ~11m) 1617/1714 tested (1423 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 5m, remaining: ~11m) 1618/1714 tested (1424 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 5m, remaining: ~10m) 1620/1714 tested (1426 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 6m, remaining: ~10m) 1621/1714 tested (1427 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 6m, remaining: ~10m) 1623/1714 tested (1429 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 6m, remaining: ~10m) 1624/1714 tested (1430 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 6m, remaining: ~10m) 1626/1714 tested (1432 survived, 73 timed out)
Mutation testing 94% (elapsed: ~3h 6m, remaining: ~9m) 1627/1714 tested (1433 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 6m, remaining: ~9m) 1629/1714 tested (1435 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 7m, remaining: ~9m) 1630/1714 tested (1436 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 7m, remaining: ~9m) 1631/1714 tested (1437 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 7m, remaining: ~9m) 1633/1714 tested (1439 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 7m, remaining: ~9m) 1634/1714 tested (1440 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 7m, remaining: ~8m) 1636/1714 tested (1442 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 7m, remaining: ~8m) 1637/1714 tested (1443 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 8m, remaining: ~8m) 1639/1714 tested (1445 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 8m, remaining: ~8m) 1640/1714 tested (1446 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 8m, remaining: ~8m) 1642/1714 tested (1448 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 8m, remaining: ~8m) 1643/1714 tested (1449 survived, 73 timed out)
Mutation testing 95% (elapsed: ~3h 8m, remaining: ~7m) 1645/1714 tested (1451 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 8m, remaining: ~7m) 1646/1714 tested (1452 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 9m, remaining: ~7m) 1648/1714 tested (1454 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 9m, remaining: ~7m) 1649/1714 tested (1455 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 9m, remaining: ~7m) 1651/1714 tested (1457 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 9m, remaining: ~7m) 1652/1714 tested (1458 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 9m, remaining: ~6m) 1654/1714 tested (1460 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 9m, remaining: ~6m) 1655/1714 tested (1461 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 10m, remaining: ~6m) 1657/1714 tested (1463 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 10m, remaining: ~6m) 1658/1714 tested (1464 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 10m, remaining: ~6m) 1660/1714 tested (1466 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 10m, remaining: ~6m) 1661/1714 tested (1467 survived, 73 timed out)
Mutation testing 96% (elapsed: ~3h 10m, remaining: ~5m) 1662/1714 tested (1468 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 10m, remaining: ~5m) 1664/1714 tested (1470 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 11m, remaining: ~5m) 1665/1714 tested (1471 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 11m, remaining: ~5m) 1667/1714 tested (1473 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 11m, remaining: ~5m) 1668/1714 tested (1474 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 11m, remaining: ~5m) 1670/1714 tested (1476 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 11m, remaining: ~4m) 1671/1714 tested (1477 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 11m, remaining: ~4m) 1673/1714 tested (1479 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 12m, remaining: ~4m) 1674/1714 tested (1480 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 12m, remaining: ~4m) 1676/1714 tested (1482 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 12m, remaining: ~4m) 1677/1714 tested (1483 survived, 73 timed out)
Mutation testing 97% (elapsed: ~3h 12m, remaining: ~4m) 1679/1714 tested (1485 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 12m, remaining: ~3m) 1680/1714 tested (1486 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 12m, remaining: ~3m) 1682/1714 tested (1488 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 13m, remaining: ~3m) 1683/1714 tested (1489 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 13m, remaining: ~3m) 1685/1714 tested (1491 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 13m, remaining: ~3m) 1686/1714 tested (1492 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 13m, remaining: ~2m) 1688/1714 tested (1494 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 13m, remaining: ~2m) 1689/1714 tested (1495 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 13m, remaining: ~2m) 1691/1714 tested (1497 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 14m, remaining: ~2m) 1692/1714 tested (1498 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 14m, remaining: ~2m) 1693/1714 tested (1499 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 14m, remaining: ~2m) 1695/1714 tested (1501 survived, 73 timed out)
Mutation testing 98% (elapsed: ~3h 14m, remaining: ~2m) 1696/1714 tested (1502 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 14m, remaining: ~1m) 1698/1714 tested (1504 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 14m, remaining: ~1m) 1700/1714 tested (1505 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 15m, remaining: ~1m) 1702/1714 tested (1507 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 15m, remaining: ~1m) 1703/1714 tested (1508 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 15m, remaining: ~1m) 1705/1714 tested (1510 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 15m, remaining: <1m) 1706/1714 tested (1511 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 15m, remaining: <1m) 1708/1714 tested (1513 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 15m, remaining: <1m) 1709/1714 tested (1514 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 16m, remaining: <1m) 1711/1714 tested (1516 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 16m, remaining: <1m) 1712/1714 tested (1517 survived, 73 timed out)
Mutation testing 99% (elapsed: ~3h 16m, remaining: <1m) 1713/1714 tested (1518 survived, 73 timed out)

All tests
  ✓ All tests (killed 122)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap === "object") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap.promise("promise", definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", definition());

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", definition.call(this));

[Survived] PrecomputedMutator
q.js:42:16
-       } else if (typeof exports === "object" && typeof module === "object") {
+       } else if (typeof exports === "object" && typeof module === "object" && module.exports === exports) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.version === "1.0") {

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(definition());

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(void 0);

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses === null) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses.ok()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.ok()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.ok() && ses.secure()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window === "undefined" || typeof self === "undefined") {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (undefined) {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.exit();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, 1);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, "test");

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length - 1) {

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length * 2) {

[Survived] PrecomputedMutator
q.js:129:20
-               task = laterQueue.pop();
+               task = laterQueue.shift();

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.run(task)) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 10000);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 0.1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "object") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "function") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(this, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(true, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush());

[Survived] PrecomputedMutator
q.js:206:17
-                   setImmediate(flush);
+                   setInterval(flush);

[Survived] PrecomputedMutator
q.js:206:17
-                   setImmediate(flush);
+                   requestAnimationFrame(flush);

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(flush());

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "undefined") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "undefined" && MessageChannel.prototype.postMessage) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "undefined" && MessageChannel.prototype.postMessage && typeof MessageChannel.prototype.postMessage === "function") {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(undefined);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 10000);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, NaN);

[Survived] PrecomputedMutator
q.js:241:25
-           laterQueue.push(task);
+           laterQueue.push(task.bind());

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing && !flushing) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length < 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (0);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (2);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index in this && this[index]) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index in this && this[index] !== undefined) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index <= length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index == length) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index >= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index == length; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = index + 10) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index in this && this[index]) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index in this && this[index] !== undefined) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(this[index]);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(this[index], basis);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis * 2, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index - 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index * 2], index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length - 1; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length + 1; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i = 0) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] === undefined) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] === null) {

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, [value, index, self]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self, 0));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self, undefined));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, null, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, NaN, index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index - 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index * 2, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.call(this)));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.apply(this, arguments)));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.bind(this)));

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key of object) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key in object.keys()) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {}) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, "key")) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, "key" + 1)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key, value)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key, value, undefined)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key, value, null)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(undefined, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty({}, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, "key1")) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, "key" + "1")) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push("key");

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push("key1");

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push("key" + 1);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString.call(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString.apply(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString.bind(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.stack) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.name) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && error.stack.length > 0

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.then(function () {}); !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.catch(function () {}); !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.finally(function () {}); !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p = p.source; !!p) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p = p.source; p = !!p) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p === null; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p.length; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.length) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.length + 1) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ > p.stackCounter) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error.stack, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(undefined, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(null, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__" + 1, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__" + "1", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.length);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.toString());

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.slice(0, 1));

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.concat(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.reverse(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.stack.toString());

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.stack.split("\n")[0]);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.reverse());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.sort());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.slice(0, 1));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     configurable: true,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     configurable: true,
+     writable: true
+   });

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error.stack, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error.stack + "\n" + STACK_JUMP_SEPARATOR + "\n" + promise.stack, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error.stack.split("\n")[0], "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: false
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: false
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\n\n");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(" ");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = -1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i >= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i *= 2) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (isInternalFrame(line) || isNodeFrame(line) || line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (isInternalFrame(line) && isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isStopIteration(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line + 1) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line - 1) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line * 2) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line + 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line - 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line * 2);

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\n\n");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("|");

[Survived] PrecomputedMutator
q.js:416:30
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.indexOf("(module.js:1234567890)") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:30
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.indexOf("(module.js:1234567890:1234567890)") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(node.js:12345)") !== -1;

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(node.js:12345:6789)") !== -1;

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(node.js:12345:6789:101112)") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.toUpperCase());

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.toLowerCase());

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.substring(0, 10));

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (attempt2) {

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (attempt3) {

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "1"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "filename"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "filename:lineNumber"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[0])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.toUpperCase());

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.toLowerCase());

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.substring(0, 10));

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt1) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[4])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.toUpperCase());

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.toLowerCase());

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt2) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt1) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "a"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "b"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "c"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[0])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.toUpperCase());

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.toLowerCase());

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.substring(0, 10));

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[0]) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[1]) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[2]) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (typeof hasStacks === "undefined") {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\n\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(" ");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[2].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[3].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[1]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[2]);

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[0]) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[1]) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[2]) {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.apply(this, arguments));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.call(this, arguments));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.bind(this)(arguments));

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.apply(null, arguments), arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.apply(this, arguments), arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, "arguments");

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, "arguments[0]");

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (Object.prototype.toString.call(value) === "[object Promise]") {

[Survived] PrecomputedMutator
q.js:564:27
-               messages.push(args);
+               messages.push(args.slice(0));

[Survived] PrecomputedMutator
q.js:564:27
-               messages.push(args);
+               messages.push(args.map(function (arg) {
+     return arg;
+   }));

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[1] === true) { // progress operand

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(undefined);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(Q(resolvedPromise), args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.valueOf(), args);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages[0]) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.slice(0, 1)) {

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.promiseDispatch);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.valueOf());

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.inspect());

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue) || isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue) && isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isThenable(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue.promise)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue.promise.promise)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === null) {

[Survived] PrecomputedMutator
q.js:591:16
-           return resolvedPromise.inspect();
+           return resolvedPromise.promiseDispatch();

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 2);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 3);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(" ") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(".") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && true) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && false) {

[Survived] PrecomputedMutator
q.js:624:17
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message, message);

[Survived] PrecomputedMutator
q.js:624:17
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message, message, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.promiseDispatch, message);

[Survived] PrecomputedMutator
q.js:624:62
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message.valueOf());

[Survived] PrecomputedMutator
q.js:638:16
-           become(Q(value));
+           become(Q.resolve(value));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise.promiseDispatch) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise.valueOf()) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise.inspect()) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(resolve(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(undefined));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill("hello"));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.promiseDispatch) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (Q.nextTick(function () {
+     resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+   })) {

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress.value);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress.message);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress.status);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.message) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.stack) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.name) {

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(null);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(undefined);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(new Error());

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length < 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 4));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_reduce(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_map(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_filter(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[0], 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[1], 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[2], 1));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve("hello");

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver === undefined) {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver === null) {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver === 0) {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.promise, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.become, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(progress));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(progress, progress));

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + 1).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x * y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x - y).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(undefined);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(null);

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x == y) {

[Survived] PrecomputedMutator
q.js:766:9
-           for (var i = 0, len = answerPs.length; i < len; i++) {
-               Q(answerPs[i]).then(resolve, reject);
-           }
+           for (var i = 1, len = answerPs.length; i < len; i++) {
+     Q(answerPs[i]).then(resolve, reject);
+   }

[Survived] PrecomputedMutator
q.js:766:9
-           for (var i = 0, len = answerPs.length; i < len; i++) {
-               Q(answerPs[i]).then(resolve, reject);
-           }
+           for (var i = answerPs.length - 1; i >= 0; i--) {
+     Q(answerPs[i]).then(resolve, reject);
+   }

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i >= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len - 1; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i *= 2) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.race(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.all(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.reject(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve(null), reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve(value), reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject(new Error("Invalid operation")));

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return Q.race(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return Q.all(Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (typeof fallback === "undefined") {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === void 0 && typeof fallback !== "function") {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === undefined) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === false) {

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(this, op, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(Q, op, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.apply(promise, op, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.bind(promise, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.all, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(Q.all, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(Q.race, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "op", args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "op" + "op", args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "op" + "op" + "op", args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[0]);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[1]);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[2]);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(undefined);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("test"));

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.state) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.value) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.reason) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "settled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "pending" || inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "pending" || inspected.state === "rejected" || inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:861:13
-           if (typeof rejected === "function") {
+           if (rejected instanceof Function) {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, Q);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               Q.makePromise(exception, self);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               Q.race(exception, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(undefined, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(null, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(Q.reject(new Error("Promise was rejected with a non-function value")), self);

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch);

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, Q.nextTick);

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, Q.when);

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed("test") : value;

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value + 1);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value - 1);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value * 2);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(exception)) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(exception, promise)) {

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(undefined);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (!done) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue.toString());

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue.valueOf());

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue.toJSON());

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(promise.then(function (value) {
+     return value;
+   })).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(promise.then(function (value) {
+     return Q(value);
+   })).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(promise.then(function (value) {
+     return Q.resolve(value);
+   })).tap(callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback());

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.bind(this));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.bind(this, value));

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.when(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.isPromise(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.isPromiseAlike(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback());

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.bind(this));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.call(this));

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.call(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.apply(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.bind(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value + 1).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value - 1).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value * 2).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value.then(function (value) {
+     return value;
+   })).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value.then(function (value) {
+     return value + 1;
+   })).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value.then(function (value) {
+     return value * 2;
+   })).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(progressed, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(void 0, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected(exception), progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected(exception, self), progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, void 0);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value + 1;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value * 2;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value - 1;
+   });

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(promise.then(function (value) {
+     return value;
+   })).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Q(promise)).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Q.resolve(promise)).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve("test");

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error("Unhandled rejection");
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(promise.then(function () {
+     return value;
+   })).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q(value)).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.resolve(value)).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(undefined);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject("error");

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromise(value) || isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromise(value) && value.inspect().state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromise(value) && value.inspect().state !== "rejected") {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPending(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isFulfilled(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value.then(function (v) {
+     return v;
+   }))) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value.then(function (v) {
+     return v + 1;
+   }))) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value.then(function (v) {
+     throw new Error("test");
+   }))) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "settled") {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPending(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isFulfilled(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect()) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.then()) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.catch()) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && object.inspect.state().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && object.inspect.value().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && object.inspect.reason().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromiseAlike(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPending(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isFulfilled(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.then) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.isPromise) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:34
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object) || object.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:34
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object) || object.inspect.value().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:34
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object) || object.inspect.reason().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.value().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.reason().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPending(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isFulfilled(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.then) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.catch) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.finally) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && object.inspect.state().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && object.inspect.value().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && object.inspect.reason().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return this.inspect.state().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return this.inspect.reason().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return this.inspect.value().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise) === -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise) > -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections[0], promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.slice(), promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function (value) {
+     return value;
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function (value) {
+     return value + 1;
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function (value) {
+     return value * 2;
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise, "error");

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise, "error", "stack");

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionRejected", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.stack, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.message, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.name, promise);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function (value) {
+     return value;
+   }));

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function (value) {
+     return value.then(function (value) {
+       return value;
+     });
+   }));

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function (value) {
+     return value.then(function (value) {
+       return value.then(function (value) {
+         return value;
+       });
+     });
+   }));

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.then(function (value) {
+     return value;
+   }));

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.then(function (value) {
+     return value.inspect();
+   }));

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.then(function (value) {
+     return value.toString();
+   }));

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.toString());

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.length);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.frames);

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push("(no stack) " + JSON.stringify(reason));

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = object_keys(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections[0], promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > -1) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = object_keys(reportedUnhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledReasons, promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.then(function (value) {
+     return value;
+   }));

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.then(function (value) {
+     return value + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.then(function (value) {
+     return value * 2;
+   }));

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport !== -1 && atReport !== 0) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport !== -1 && atReport !== 0 && atReport !== 1) {

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[0], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then(function (value) {
+     return value;
+   }));

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then(function (value) {
+     return value + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then(function (value) {
+     return value * 2;
+   }));

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport * 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport * 2, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at * 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at * 2, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at * 2, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledReasons.length = 0();

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledRejections.length = 0();

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (true) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection.reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(rejection.stack, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(rejection.message, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(rejection.reason, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, "test");

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === null || name === void 0 || name === "") {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(undefined);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply({});

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, {});

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply({}, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.length);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args[0]);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice(1));

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(void 0);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(this, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.length);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args[0]);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.keys(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(value.length);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(value[0]);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(value.slice(0, 1));

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(new Error("rejected"));

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(op, args, object);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return Q.dispatch(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return Q.when(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(object.toString(), op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(object.valueOf(), op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(object.constructor, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, "isDef", args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, "isDef()", args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, undefined);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, null);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, {});

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.reject(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.fulfill(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.spread(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value.length).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value[0]).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value.slice(0, 1)).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, NaN);

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.spread().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.then().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(object, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply({}, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.length);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array[0]);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.slice(1));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration === "function") {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("foo");

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return resolve(exception);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return deferred.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(undefined);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(null);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(new Error());

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.isDone) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.isResolved) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value.toUpperCase());

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value.toLowerCase());

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value.length);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value.toFixed(2), callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value.toExponential(2), callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value.toPrecision(2), callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback(), errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback.call(this), errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback.apply(this, arguments), errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, callback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, Q.reject(new Error("Test error")));

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("foo");

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isReturnValue(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isException(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(Q.return(exception))) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(Q.return(exception.value))) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(Q.return(exception.message))) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.message);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.stack);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.name);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(Q.reject(exception));

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(Q.resolve(exception));

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(Q.when(exception));

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.then(function (value) {
+     return value;
+   }), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.catch(function (error) {
+     throw error;
+   }), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, callback.apply(void 0, array), errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, callback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, function () {});

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(void 0);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this.foo, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this.bar, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this.baz, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(this, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(this, "throw"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(this, "return"), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "next"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "return"), "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.spread(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator())());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(this))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, any(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(undefined)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(args[0]);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(undefined);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(self.foo, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(this.foo, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.length);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args[0]);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch("when", args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch("post", args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch("dispatch", args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return object.dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(object.value).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(object.value.length).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(object.value.length - 1).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch("when", args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch("post", args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch("get", args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, undefined);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, []);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve(null), op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve(undefined), op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, "op", args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, "op" + "op", args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, "op" + "op" + "op", args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, undefined);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key, "value"]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key, "value", "name"]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(object.foo).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(object.bar).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(object.baz).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key, key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key, "key"]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key, "key", key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(Q(object)).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object.dispatch).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(Q.dispatch(object)).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set" + "foo", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set" + "foo" + "bar", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set" + "foo", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set" + "foo" + "bar", [key, value]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("del", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(this).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("undefined", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("null", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("del", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("undefined", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("null", [key]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("apply", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("call", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(Q(object).dispatch("post", [name, args])).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(Q(object).dispatch("apply", [void 0, args])).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("set", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args, 1]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args, "1"]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args, "one"]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args[0]]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args[1]]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("set", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, 1]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, "test"]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, function () {
+     console.log("test");
+   }]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.dispatch(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object.property).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object.method()).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object.method.call(this)).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("apply", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("when", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([])]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([1, 2, 3])]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_reduce(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_map(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(undefined, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([], 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("apply", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("apply", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return Q.dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments.slice(1))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments.slice(1, arguments.length))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_reduce(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_map(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([], 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([1, 2, 3], 1)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.all(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.when(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.fcall(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object.promise).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(Q.resolve(object)).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [this, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [this, args, void 0]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args[0]]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return Q.dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object.key).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object.key.value).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object.key.value.name).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("post", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments[0], 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(null, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1527:44
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_concat(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:44
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_reduce(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments[0])]);

[Survived] PrecomputedMutator
q.js:1537:19
-       var promise = Q(object);
+       var promise = Q.set(object);

[Survived] PrecomputedMutator
q.js:1537:19
-       var promise = Q(object);
+       var promise = Q.get(object);

[Survived] PrecomputedMutator
q.js:1537:19
-       var promise = Q(object);
+       var promise = Q.all(object);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(object.key);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(object.key.value);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(object.key.value.key);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args, 1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(void 0, 1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_concat(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_reduce(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([1, 2, 3], 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args.slice(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args.splice(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args.push(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 3))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_concat(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_reduce(arguments))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments[0]))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(void 0))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(this))

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = array_concat(arguments);

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = array_reduce(arguments);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(void 0);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(this);

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               args.slice(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               args.splice(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               args.push(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 3))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_concat(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_reduce(arguments))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([undefined]))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", ["a"]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1, 2]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.keys(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.all(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.any(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.keys()).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.toString()).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.constructor).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1, 2, 3, 4, 5]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3, 4]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3, 4, 5]);

[Survived] PrecomputedMutator
q.js:1584:24
-           var deferred = defer();
+           var deferred = Q.deferred.promise();

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   isPromise(promise) && (snapshot = promise.inspect()).state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(Q(object).dispatch("post", [name, array_slice(arguments, 2)])) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(Q(object).dispatch("post", [name, array_slice(arguments, 1)])) &&

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.value()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount--) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount = 0) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.progress(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.length);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress,
+     other: "value"
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === 1) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.progress(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.length);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises[0]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(this.all());

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(Q.all(this));

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(Q.all(this.all()));

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === 1) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1634:20
-       var deferred = Q.defer();
+       var deferred = Q.when();

[Survived] PrecomputedMutator
q.js:1634:20
-       var deferred = Q.defer();
+       var deferred = Q.all();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(function (value) {
+     return value;
+   }), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(function (value) {
+     return Q(value);
+   }), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(function (value) {
+     return Q.resolve(value);
+   }), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, noop, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected(err), onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected(), onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected(err, index), onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.inspect(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(result.value);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(result.value || result.reason);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(result.value || result.reason || null);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount === 1) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejection.message);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejection.stack);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejection.name);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return all(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return when(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return Q.all(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.dispatch("keys", []));

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.dispatch("keys", [1, 2, 3]));

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.dispatch("keys", [1, 2, 3, 4]));

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(any, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "all", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "any", "allSettled");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, promises);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(Q, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_some(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.length, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises[0], Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.allSettled(promises));

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.all(promises));

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.any(promises));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise, noop, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise, noop, noop, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.inspect(), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.value(), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function (value) {
+     return value;
+   }), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, undefined, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, null, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function () {}, noop);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function () {
+     return 1;
+   });

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function () {
+     return 0;
+   });

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function () {
+     return undefined;
+   });

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(this.all());

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(this.allSettled());

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(this.allResolved());

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.length).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q([]).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(undefined).allSettled();

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function (value) {
+     return value;
+   }));

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function (value) {
+     return Q.resolve(value);
+   }));

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function (value) {
+     return Q.reject(value);
+   }));

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, null);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(null, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(Q.reject(new Error("Q can't get fulfillment value from any promise, all promises were rejected.")), regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(Q.resolve(result), regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(Q.when(promise, onFulfilled, onRejected, onProgress), regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, Q.reject(new Error("Q can't get fulfillment value from any promise, all promises were rejected.")));

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, Q.resolve(result));

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, Q.when(promise, onFulfilled, onRejected, onProgress));

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, void 0);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(fulfilled, void 0);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(rejected, void 0);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(object.promise).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(Q.defer()).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(Q.reject(new Error("Promise was rejected")), rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, when(promise, noop, noop));

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, when(promise, noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(void 0, void 0);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(rejected, void 0);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(Q(callback), rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, void 0);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, null);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object.then(function (value) {
+     return value;
+   })).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object.then(function (value) {
+     return Q(value);
+   })).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object.then(function (value) {
+     return Q.resolve(value);
+   })).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, function () {}, progressed);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, function (progress) {
+     console.log(progress);
+   });

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, function (progress) {
+     return progress;
+   });

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, function () {}, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, function (value) {
+     return value;
+   });

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, function (value) {
+     return value * 2;
+   });

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.allSettled(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.when(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Q(object))["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(object.then(function (value) {
+     return value;
+   }))["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Q.when(object))["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.call());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.apply());

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.apply === "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.call === "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.bind === "function") {

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.call());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.apply());

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progress, fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(Q.when(object)).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(Q.resolve(object)).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(void 0, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, void 0, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, null, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, undefined, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, Q.when(promise));

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, Q.all(promise));

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, Q.spread(promise));

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(undefined, promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong("error", promise);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.then(function (value) {
+     return value;
+   }));

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.then(function (value) {
+     return Q(value);
+   }));

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.then(function (value) {
+     return value + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (Q.onerror(error)) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (Q.onerror(error, promise)) {

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(undefined);

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(Q.onerror);

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(void 0) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(null) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(void 0, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, void 0, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, Q.when(progress)) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, Q.delay(progress, 0)) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(this));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(promise));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(Q));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError, void 0);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, void 0);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(NaN, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError.bind(this));

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError.call(this));

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError.apply(this));

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms + 1, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms - 1, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Custom error message"));

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(object.then(void 0, void 0, progressed)).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(Q(object).then(void 0, void 0, progressed)).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms + 1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms - 1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms * 2, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, undefined);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Test error"));

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = deferred.promise();

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && typeof error === "string") {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.notify(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(new Error("Test error"));

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearImmediate(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(clearTimeout(timeoutId));

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(clearTimeout(timeoutId + 1));

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(clearTimeout(timeoutId - 1));

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve("test");

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           setInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(clearTimeout(timeoutId));

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(clearTimeout(undefined));

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(clearTimeout(null));

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(new Error("Q can't apply finally callback"));

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === undefined) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === 0) {

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q("test").delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout + 1);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout - 1);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout * 2);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve("hello");

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(callback.bind(this)).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(callback.call(this)).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(callback.apply(this)).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = arguments(args);

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = [](args);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([undefined]);

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(1));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = arguments(arguments, 1);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = [](arguments, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, "timeout");

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(callback.bind(this)).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(callback.call(this)).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([undefined]);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = arguments(arguments);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = [](arguments);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(arguments.length);

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(1));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.timeout(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat(deferred.makeNodeResolver())).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(0, -1).concat(deferred.makeNodeResolver())).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback === null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback === false) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback === 0) {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = arguments(arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = [](arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments[0], 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.splice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.filter(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice({}));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(1));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback()).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(Q(callback)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(Q.nfbind(callback)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.reverse()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.concat(nodeArgs)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.reject(new Error("Test error")));

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = array_concat(arguments);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = array_push(arguments);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments[1]);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments[2]);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(this.foo);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(this.bar);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(this.baz);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(args.length ? args : void 0);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(NaN, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.concat(deferred.makeNodeResolver()));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = arguments(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = [](arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([], 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments[0], 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(undefined, 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.splice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments[0]));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments.length));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(1));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(this);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(this, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[0]);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[1]);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[2]);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q.delay(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q.nfapply(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q.nfbind(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound()).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(Q(bound)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound.call(this)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.concat()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.map(function (arg) {
+     return arg;
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.reject(new Error("Test error")));

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.reject(null));

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = arguments(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = [](arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments[0], 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments[1], 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments[2], 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(args[0]);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(Q.nbind, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(2));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(3));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args, 1);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args, "1");

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args, null);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q({}).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("name", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("name" + "name", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("name" + "name" + "name", args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, []);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, undefined);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(args && args.length ? args : []);

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "extraArg"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "extra argument"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "extra argument", "extra argument 2"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "extra argument", "extra argument 2", "extra argument 3"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject(new Error("Test error")));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = arguments(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = [](arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments[0], 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments[1], 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments[2], 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2020:20
-       var deferred = defer();
+       var deferred = deferred.promise();

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, "extraArg"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.npost(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.ninvoke(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.nbind(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object.name).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object.length).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object.toString()).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("npost", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("ninvoke", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, "extra"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject(new Error("Test error")));

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject(null));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments[0], 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments[1], 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments[2], 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("call", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, nodeback]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, nodeback, "post"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, nodeback, "post", "post"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(object.toString()).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(object.valueOf()).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(object.constructor).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback());

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(null));

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(undefined));

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback()) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback(null)) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback(undefined)) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback("test", value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, "test");

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback("error");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head.tail");

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   ends.reject(error);

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   next.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(Q.reject(new Error("Can't get value from closed queue")));

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(Q.resolve(undefined));

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(Q.resolve(new Error("Can't get value from closed queue")));

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(Q.reject(new Error("Can't get value from closed queue")))};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(Q.reject(error))};

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.38 |      122 |        73 |       1519 |        0 |        0 |
 q.js     |   11.47 |      122 |        73 |       1505 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         14 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m18:57:31 (3184) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m18:57:31 (3184) INFO MutationTestExecutor[39m Done in 196 minutes 31 seconds.

real	196m33.135s
user	34m33.376s
sys	5m55.079s
