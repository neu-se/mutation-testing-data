*** using precomputed mutations ***
[32m01:34:43 (3085) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m01:34:43 (3085) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m01:34:43 (3085) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m01:34:43 (3085) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m01:34:43 (3085) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m01:34:44 (3085) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1942 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof boostrap != "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== undefined
Mutant 2 in q.js: typeof bootstrap === "function" replaced with "function" !== typeof bootstrap
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", 0)
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", false)
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", "undefined")
Mutant 6 in q.js: bootstrap replaced with "q-"
Mutant 7 in q.js: bootstrap replaced with 1
Mutant 8 in q.js: bootstrap replaced with true
Mutant 9 in q.js: "promise" replaced with "Promise"
Mutant 10 in q.js: "promise" replaced with false
Mutant 11 in q.js: "promise" replaced with NaN
Mutant 12 in q.js: definition replaced with "pizza"
Mutant 13 in q.js: definition replaced with function () {}
Mutant 14 in q.js: definition replaced with function () {
  return function () {
    return "pizza";
  };
}()
Mutant 15 in q.js: typeof exports === "object" && typeof module === "object" replaced with 0 === 0
Mutant 16 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports !== "undefined" && typeof module !== "undefined"
Mutant 17 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "undefined" && typeof module === "undefined"
Mutant 18 in q.js: typeof define === "function" && define.amd replaced with define.amd && typeof define === "function"
Mutant 19 in q.js: typeof define === "function" && define.amd replaced with define.amd || typeof define !== "function"
Mutant 20 in q.js: typeof define === "function" && define.amd replaced with typeof define === "undefined"
Mutant 21 in q.js: definition replaced with 0
Mutant 22 in q.js: definition replaced with 1
Mutant 23 in q.js: definition replaced with null
Mutant 24 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "object"
Mutant 25 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "boolean"
Mutant 26 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "number"
Mutant 27 in q.js: !ses.ok() replaced with ses.notok()
Mutant 28 in q.js: !ses.ok() replaced with ses.isNodeJS()
Mutant 29 in q.js: !ses.ok() replaced with ses.hasStacks()
Mutant 30 in q.js: ses.ok replaced with !ses.ok
Mutant 31 in q.js: ses.ok replaced with ses.notOk
Mutant 32 in q.js: ses.ok replaced with ses.isNotOk
Mutant 33 in q.js: captureLine replaced with "buggy code fragment"
Mutant 34 in q.js: captureLine replaced with "unexpected behavior"
Mutant 35 in q.js: captureLine replaced with "null"
Mutant 36 in q.js: head.next replaced with head.prev
Mutant 37 in q.js: head.next replaced with head.prev.next
Mutant 38 in q.js: head.next replaced with head.next.prev
Mutant 39 in q.js: domain replaced with 1
Mutant 40 in q.js: domain replaced with NaN
Mutant 41 in q.js: domain replaced with null
Mutant 42 in q.js: domain.enter replaced with domain.login
Mutant 43 in q.js: domain.enter replaced with domain.enter[0]
Mutant 44 in q.js: runSingle(task, domain) replaced with runSingle("hello")
Mutant 45 in q.js: runSingle(task, domain) replaced with runSingle(1)
Mutant 46 in q.js: runSingle(task, domain) replaced with runSingle(null)
Mutant 47 in q.js: task replaced with head.task
Mutant 48 in q.js: task replaced with tail.task
Mutant 49 in q.js: task replaced with function () {}
Mutant 50 in q.js: domain replaced with true
Mutant 51 in q.js: domain replaced with false
Mutant 52 in q.js: domain replaced with domain && true
Mutant 53 in q.js: laterQueue.length replaced with laterQueue.shift()
Mutant 54 in q.js: laterQueue.length replaced with laterQueue.pop()
Mutant 55 in q.js: laterQueue.length replaced with laterQueue.push(null)
Mutant 56 in q.js: task replaced with head
Mutant 57 in q.js: task replaced with undefined
Mutant 58 in q.js: task replaced with null
Mutant 59 in q.js: isNodeJS replaced with !(typeof window !== "undefined")
Mutant 60 in q.js: isNodeJS replaced with isNodeJS === false
Mutant 61 in q.js: isNodeJS replaced with isNodeJS !== true
Mutant 62 in q.js: domain replaced with domain !== null
Mutant 63 in q.js: domain replaced with typeof domain !== "undefined"
Mutant 64 in q.js: domain replaced with domain !== void 0
Mutant 65 in q.js: domain.exit replaced with domain.enter
Mutant 66 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 67 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1000)
Mutant 68 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, Math.random())
Mutant 69 in q.js: setTimeout replaced with setInterval
Mutant 70 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 71 in q.js: domain replaced with domain > 0
Mutant 72 in q.js: domain replaced with domain + "foo"
Mutant 73 in q.js: domain replaced with domain.bar
Mutant 74 in q.js: domain.enter replaced with domain = null
Mutant 75 in q.js: domain replaced with !domain
Mutant 76 in q.js: domain replaced with 1 + domain
Mutant 77 in q.js: domain replaced with domain.foo
Mutant 78 in q.js: domain.exit replaced with domain.enter
Mutant 79 in q.js: domain.exit replaced with domain.run
Mutant 80 in q.js: domain.exit replaced with domain.dispose
Mutant 81 in q.js: !flushing replaced with 1
Mutant 82 in q.js: !flushing replaced with null
Mutant 83 in q.js: requestTick replaced with undefined
Mutant 84 in q.js: requestTick replaced with "string"
Mutant 85 in q.js: requestTick replaced with Buffer
Mutant 86 in q.js: flush replaced with flush(), void 0
Mutant 87 in q.js: flush replaced with flush, flush()
Mutant 88 in q.js: flush replaced with flush, function () {
  return requestTick;
}
Mutant 89 in q.js: typeof setImmediate === "function" replaced with typeof requestAnimationFrame === "function"
Mutant 90 in q.js: typeof setImmediate === "function" replaced with typeof requestIdleCallback === "function"
Mutant 91 in q.js: typeof window !== "undefined" replaced with typeof window !== "object"
Mutant 92 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 93 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 94 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(requestTick)
Mutant 95 in q.js: setImmediate.bind replaced with requestAnimationFrame.bind
Mutant 96 in q.js: setImmediate.bind replaced with Promise.resolve.bind
Mutant 97 in q.js: window replaced with 0
Mutant 98 in q.js: window replaced with false
Mutant 99 in q.js: window replaced with undefined
Mutant 100 in q.js: typeof MessageChannel !== "undefined" replaced with MessageChannel === undefined
Mutant 101 in q.js: typeof MessageChannel !== "undefined" replaced with MessageChannel !== undefined
Mutant 102 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "undefined"
Mutant 103 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 104 in q.js: 0 replaced with 1
Mutant 105 in q.js: 0 replaced with false
Mutant 106 in q.js: 0 replaced with undefined
Mutant 107 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, null)
Mutant 108 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, undefined)
Mutant 109 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 110 in q.js: setTimeout replaced with setInterval
Mutant 111 in q.js: setTimeout replaced with clearInterval
Mutant 112 in q.js: flush replaced with undefined
Mutant 113 in q.js: flush replaced with null
Mutant 114 in q.js: flush replaced with "flush"
Mutant 115 in q.js: 0 replaced with 1
Mutant 116 in q.js: 0 replaced with -1
Mutant 117 in q.js: 0 replaced with Math.random()
Mutant 118 in q.js: requestPortTick replaced with requestTick
Mutant 119 in q.js: setTimeout(flush, 0) replaced with setTimeout(0.000000001)
Mutant 120 in q.js: flush replaced with function () {
  return undefined;
}
Mutant 121 in q.js: flush replaced with function () {
  return null;
}
Mutant 122 in q.js: 0 replaced with 1
Mutant 123 in q.js: 0 replaced with -1
Mutant 124 in q.js: 0 replaced with null
Mutant 125 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 126 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 127 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 128 in q.js: task replaced with null
Mutant 129 in q.js: task replaced with undefined
Mutant 130 in q.js: task replaced with 123
Mutant 131 in q.js: !flushing replaced with flushing
Mutant 132 in q.js: !flushing replaced with domain
Mutant 133 in q.js: !flushing replaced with function () {
  return true;
}
Mutant 134 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[0])
Mutant 135 in q.js: call.apply(f, arguments) replaced with call.apply(f, null)
Mutant 136 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments.length)
Mutant 137 in q.js: call.apply replaced with call.call
Mutant 138 in q.js: call.apply replaced with apply.call
Mutant 139 in q.js: call.apply replaced with bind.call
Mutant 140 in q.js: f replaced with f + 1
Mutant 141 in q.js: f replaced with f - 1
Mutant 142 in q.js: f replaced with f * 2
Mutant 143 in q.js: arguments replaced with 123
Mutant 144 in q.js: arguments replaced with "abc"
Mutant 145 in q.js: arguments replaced with {}
Mutant 146 in q.js: Array.prototype.slice replaced with Array.prototype.splice
Mutant 147 in q.js: Array.prototype.slice replaced with Array.prototype.reduce
Mutant 148 in q.js: Array.prototype.slice replaced with Array.prototype.map
Mutant 149 in q.js: arguments.length === 1 replaced with array_indexOf(arguments, 0) === -1
Mutant 150 in q.js: arguments.length === 1 replaced with Object.keys(arguments).length === 0
Mutant 151 in q.js: arguments.length === 1 replaced with arguments.callee.caller === null
Mutant 152 in q.js: 1 replaced with 2
Mutant 153 in q.js: 1 replaced with 0
Mutant 154 in q.js: index < length replaced with index <= length
Mutant 155 in q.js: index < length replaced with index > length
Mutant 156 in q.js: index < length replaced with index == length
Mutant 157 in q.js: index++ replaced with index = 1 + 2
Mutant 158 in q.js: index++ replaced with index = index + 1
Mutant 159 in q.js: index++ replaced with index = index * 2
Mutant 160 in q.js: index in this replaced with !this.hasOwnProperty(index)
Mutant 161 in q.js: index in this replaced with index >= this.length
Mutant 162 in q.js: index in this replaced with index === ' '.repeat(this.length)
Mutant 163 in q.js: callback(basis, this[index], index) replaced with callback(basis + this[index] * index)
Mutant 164 in q.js: callback(basis, this[index], index) replaced with callback(this[index] / basis)
Mutant 165 in q.js: callback(basis, this[index], index) replaced with callback(basis - this[index])
Mutant 166 in q.js: basis replaced with basis + "foobar"
Mutant 167 in q.js: basis replaced with basis - 42
Mutant 168 in q.js: basis replaced with "cat"
Mutant 169 in q.js: index replaced with index = 1
Mutant 170 in q.js: index replaced with void 0
Mutant 171 in q.js: i < this.length replaced with i > this.length
Mutant 172 in q.js: i < this.length replaced with i >= this.length
Mutant 173 in q.js: i < this.length replaced with i != this.length
Mutant 174 in q.js: i++ replaced with i--
Mutant 175 in q.js: i++ replaced with i + 2
Mutant 176 in q.js: i++ replaced with i * 2
Mutant 177 in q.js: this[i] === value replaced with this[i++] === value
Mutant 178 in q.js: this[i] === value replaced with this[i + 1] === undefined
Mutant 179 in q.js: this[i] === value replaced with this[i] != value
Mutant 180 in q.js: collect.push replaced with collect.shift
Mutant 181 in q.js: collect.push replaced with collect.pop
Mutant 182 in q.js: collect.push replaced with collect.unshift
Mutant 183 in q.js: callback.call(thisp, value, index, self) replaced with function () {}
Mutant 184 in q.js: callback.call(thisp, value, index, self) replaced with thisp.function(value, index, self)
Mutant 185 in q.js: callback.call(thisp, value, index, self) replaced with value + index + self
Mutant 186 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(index.value)
Mutant 187 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp.self)
Mutant 188 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(value.index)
Mutant 189 in q.js: callback.call replaced with null
Mutant 190 in q.js: callback.call replaced with []
Mutant 191 in q.js: thisp replaced with void 0
Mutant 192 in q.js: thisp replaced with null
Mutant 193 in q.js: thisp replaced with {}
Mutant 194 in q.js: value replaced with value + 1
Mutant 195 in q.js: value replaced with undefined
Mutant 196 in q.js: index replaced with "index"
Mutant 197 in q.js: index replaced with window
Mutant 198 in q.js: self replaced with null
Mutant 199 in q.js: uncurryThis replaced with ambientThis
Mutant 200 in q.js: uncurryThis replaced with undefined
failed to parse replacement for (var key: string in object) {
        if (object_hasOwnProperty(object, key)) {
            keys.push(key);
        }
    }: SyntaxError: Missing semicolon. (1:12)
Mutant 201 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty.call(object, key)
Mutant 202 in q.js: object_hasOwnProperty(object, key) replaced with object.hasOwnProperty(object[key])
Mutant 203 in q.js: object_hasOwnProperty(object, key) replaced with object.hasOwnProperty("props")[key]
Mutant 204 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object.nonExistent, key)
Mutant 205 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object[key - 1], key)
Mutant 206 in q.js: object replaced with null
Mutant 207 in q.js: object replaced with {}
Mutant 208 in q.js: object replaced with undefined
Mutant 209 in q.js: key replaced with key = 1
Mutant 210 in q.js: key replaced with key - 1
Mutant 211 in q.js: key replaced with key + 1
Mutant 212 in q.js: key replaced with this[key]
Mutant 213 in q.js: key replaced with key * 2
Mutant 214 in q.js: Object replaced with String
Mutant 215 in q.js: Object replaced with Boolean
Mutant 216 in q.js: Object replaced with Number
Mutant 217 in q.js: value replaced with value + 1
Mutant 218 in q.js: value replaced with null
Mutant 219 in q.js: value replaced with "foo"
Mutant 220 in q.js: object_toString replaced with object_hasOwnProperty
Mutant 221 in q.js: object_toString replaced with array_indexOf
Mutant 222 in q.js: object_toString replaced with "[object StopIteration]"
Mutant 223 in q.js: exception replaced with exception[0]
Mutant 224 in q.js: exception replaced with exception.message
Mutant 225 in q.js: exception replaced with exception instanceof Error
Mutant 226 in q.js: typeof ReturnValue !== "undefined" replaced with null
Mutant 227 in q.js: typeof ReturnValue !== "undefined" replaced with "hello"
Mutant 228 in q.js: !!p replaced with !p && false
Mutant 229 in q.js: !!p replaced with p == false
Mutant 230 in q.js: !!p replaced with ~~p
Mutant 231 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)
Mutant 232 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ == p.stackCounter)
Mutant 233 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ != p.stackCounter)
Mutant 234 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 235 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 236 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter ^ 2,
  configurable: true
})
Mutant 237 in q.js: object_defineProperty replaced with object_defineProperty.writable
Mutant 238 in q.js: object_defineProperty replaced with object_defineProperty.unknownProperty
Mutant 239 in q.js: "__minimumStackCounter__" replaced with "__minimumStackCounter_"
Mutant 240 in q.js: "__minimumStackCounter__" replaced with "_maximumStackCounter"
Mutant 241 in q.js: "__minimumStackCounter__" replaced with "stackCounter"
Mutant 242 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 243 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter / 2,
  configurable: true
}
Mutant 244 in q.js: stacks.unshift replaced with undefined
Mutant 245 in q.js: stacks.unshift replaced with promise.stack
Mutant 246 in q.js: p.stack replaced with 1
Mutant 247 in q.js: p.stack replaced with "hello world"
Mutant 248 in q.js: p.stack replaced with null
Mutant 249 in q.js: stacks.unshift replaced with stacks.shift
Mutant 250 in q.js: error.stack replaced with error.stack.slice(1)
Mutant 251 in q.js: error.stack replaced with error.stack.replace("Error", "Failure")
Mutant 252 in q.js: error.stack replaced with error.stack.toUpperCase()
Mutant 253 in q.js: stacks.join replaced with stacks.shift
Mutant 254 in q.js: stacks.join replaced with stacks.pop
Mutant 255 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + " "
Mutant 256 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with " " + STACK_JUMP_SEPARATOR + "\n"
Mutant 257 in q.js: filterStackString replaced with concatedStacks
Mutant 258 in q.js: filterStackString replaced with stacks[0]
Mutant 259 in q.js: concatedStacks replaced with stacks[0]
Mutant 260 in q.js: concatedStacks replaced with stacks.reverse()
Mutant 261 in q.js: concatedStacks replaced with stacks.slice(1, -1)
Mutant 262 in q.js: object_defineProperty replaced with object_defineProperties
Mutant 263 in q.js: object_defineProperty replaced with object_defineProperty_veryImportant
Mutant 264 in q.js: object_defineProperty replaced with 60
Mutant 265 in q.js: "stack" replaced with "callstack"
Mutant 266 in q.js: "stack" replaced with "message"
Mutant 267 in q.js: "stack" replaced with "stackTrace"
Mutant 268 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack.reverse(),
  configurable: true
}
Mutant 269 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack + "foo",
  configurable: true
}
Mutant 270 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: undefined,
  configurable: false
}
Mutant 271 in q.js: "\n" replaced with "^"
Mutant 272 in q.js: "\n" replaced with "||"
Mutant 273 in q.js: "\n" replaced with undefined
Mutant 274 in q.js: i < lines.length replaced with i <= lines.length
Mutant 275 in q.js: i < lines.length replaced with i > lines.length
Mutant 276 in q.js: i < lines.length replaced with i == lines.length
Mutant 277 in q.js: ++i replaced with i--
Mutant 278 in q.js: ++i replaced with i = i + 2
Mutant 279 in q.js: ++i replaced with i = i - 2
Mutant 280 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with isInternalFrame(line) || isNodeFrame(line)
Mutant 281 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && !isNodeFrame(line) && !line
Mutant 282 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with line.length > 0 && !isInternalFrame(line) && !isNodeFrame(line)
Mutant 283 in q.js: line replaced with line - 1
Mutant 284 in q.js: line replaced with line + 1
Mutant 285 in q.js: line replaced with line * 2
Mutant 286 in q.js: isNodeFrame replaced with isStopIteration
Mutant 287 in q.js: isNodeFrame replaced with isPromiseAlike
Mutant 288 in q.js: line replaced with function getFileNameAndLineNumber(stackLine) {
  return [/.*@(.+):(\d+)$/.exec(stackLine), Number(/(filename:lineNumber:columnNumber)$/.exec(stackLine))];
}
Mutant 289 in q.js: desiredLines.push replaced with desiredLines.pop
Mutant 290 in q.js: desiredLines.push replaced with desiredLines.reverse
Mutant 291 in q.js: desiredLines.push replaced with desiredLines.sort
Mutant 292 in q.js: line replaced with "line"
Mutant 293 in q.js: line replaced with "ERROR"
Mutant 294 in q.js: line replaced with "File not found"
Mutant 295 in q.js: "\n" replaced with ""
Mutant 296 in q.js: "\n" replaced with " "
Mutant 297 in q.js: "\n" replaced with "\t"
Mutant 298 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 299 in q.js: stackLine.indexOf replaced with stackLine.startsWith
Mutant 300 in q.js: stackLine.indexOf replaced with stackLine.lastIndexOf
Mutant 301 in q.js: stackLine replaced with stackLine += 1
Mutant 302 in q.js: stackLine replaced with stackLine = stackLine.substring(stackLine.indexOf(stackLine) + 1)
Mutant 303 in q.js: stackLine replaced with stackLine = stackLine.slice(-1)
Mutant 304 in q.js: Number replaced with undefined
Mutant 305 in q.js: Number replaced with 1
Mutant 306 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 307 in q.js: attempt1[2] replaced with attempt1[attempt1.length - 1]
Mutant 308 in q.js: attempt1[2] replaced with attempt1[0]
Mutant 309 in q.js: /at ([^ ]+):(\d+):(?:\d+)$/.exec replaced with [a - zA - Z]
Mutant 310 in q.js: /at ([^ ]+):(\d+):(?:\d+)$/.exec replaced with [a - zA - Z0 - 9]
Mutant 311 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 312 in q.js: attempt2 replaced with attempt3
Mutant 313 in q.js: attempt2 replaced with attempt4
Mutant 314 in q.js: attempt2 replaced with attempt5
Mutant 315 in q.js: Number replaced with "NaN"
Mutant 316 in q.js: Number replaced with "Infinity"
Mutant 317 in q.js: Number replaced with "-%Infinity%"
Mutant 318 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 319 in q.js: attempt2[2] replaced with attempt2[0]
Mutant 320 in q.js: attempt2[2] replaced with attempt3[1]
Mutant 321 in q.js: stackLine replaced with stackLine.replace(/@/g, "")
Mutant 322 in q.js: stackLine replaced with stackLine.length
Mutant 323 in q.js: stackLine replaced with stackLine.split("")
Mutant 324 in q.js: Number replaced with Number * 0
Mutant 325 in q.js: Number replaced with Number + 1
Mutant 326 in q.js: Number replaced with Number - 1
Mutant 327 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 328 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 329 in q.js: attempt3[2] replaced with attempt3[5]
Mutant 330 in q.js: stackLine replaced with stackLine + "foo"
Mutant 331 in q.js: stackLine replaced with stackLine - 1
Mutant 332 in q.js: stackLine replaced with stackLine[0]
Mutant 333 in q.js: !fileNameAndLineNumber replaced with !fileNameAndLineNumber[0]
Mutant 334 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 335 in q.js: !fileNameAndLineNumber replaced with Array.isArray(fileNameAndLineNumber) && fileNameAndLineNumber.length === 0
Mutant 336 in q.js: "\n" replaced with ";"
Mutant 337 in q.js: "\n" replaced with ","
Mutant 338 in q.js: "\n" replaced with "#"
Mutant 339 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 340 in q.js: lines[0].indexOf replaced with lines[lines.length - 1].indexOf
Mutant 341 in q.js: "@" replaced with "%"
Mutant 342 in q.js: "@" replaced with "|"
Mutant 343 in q.js: getFileNameAndLineNumber replaced with "QFileName"
Mutant 344 in q.js: getFileNameAndLineNumber replaced with "qFileName"
Mutant 345 in q.js: getFileNameAndLineNumber replaced with fn
Mutant 346 in q.js: firstLine replaced with firstLine.substring(0, 2)
Mutant 347 in q.js: firstLine replaced with firstLine.length
Mutant 348 in q.js: firstLine replaced with firstLine.split('')
Mutant 349 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber !== undefined
Mutant 350 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length > 0
Mutant 351 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === "string"
Mutant 352 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof window !== "undefined" && typeof window.console.warn === "function"
Mutant 353 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof global !== "undefined" && typeof global.console.warn === "function"
Mutant 354 in q.js: callback.apply(callback, arguments) replaced with callback.apply(arguments)
Mutant 355 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback())
Mutant 356 in q.js: callback.apply replaced with callback.call
Mutant 357 in q.js: arguments replaced with 0
Mutant 358 in q.js: arguments replaced with "foo"
Mutant 359 in q.js: arguments replaced with () => 0
Mutant 360 in q.js: value instanceof Promise replaced with value === Promise
Mutant 361 in q.js: value instanceof Promise replaced with value == Promise
Mutant 362 in q.js: value instanceof Promise replaced with Object.is(value, Promise)
Mutant 363 in q.js: isPromiseAlike(value) replaced with isPromiseAlike(value) === true
Mutant 364 in q.js: isPromiseAlike(value) replaced with value.then !== undefined
Mutant 365 in q.js: isPromiseAlike(value) replaced with value.toString().includes("Promise")
Mutant 366 in q.js: isPromiseAlike replaced with isPromiseLike
Mutant 367 in q.js: isPromiseAlike replaced with typeof value === "function"
Mutant 368 in q.js: value replaced with value + 1
Mutant 369 in q.js: value replaced with value * 2
Mutant 370 in q.js: value replaced with value / 2
Mutant 371 in q.js: value replaced with null
Mutant 372 in q.js: value replaced with undefined
Mutant 373 in q.js: value replaced with Q.reject()
Mutant 374 in q.js: value replaced with null
Mutant 375 in q.js: value replaced with undefined
Mutant 376 in q.js: object_create replaced with refactor
Mutant 377 in q.js: object_create replaced with null
Mutant 378 in q.js: object_create replaced with []
Mutant 379 in q.js: defer.prototype replaced with null
Mutant 380 in q.js: defer.prototype replaced with {}
Mutant 381 in q.js: defer.prototype replaced with Q
Mutant 382 in q.js: object_create replaced with null
Mutant 383 in q.js: object_create replaced with undefined
Mutant 384 in q.js: object_create replaced with "Hello, World!"
Mutant 385 in q.js: Promise.prototype replaced with Object.prototype
Mutant 386 in q.js: Promise.prototype replaced with null
Mutant 387 in q.js: Promise.prototype replaced with 42
Mutant 388 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 389 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 390 in q.js: arguments replaced with array_slice(messages, 0, 1)
Mutant 391 in q.js: messages replaced with !messages
Mutant 392 in q.js: messages replaced with messages.length
Mutant 393 in q.js: messages replaced with messages[0]
Mutant 394 in q.js: messages.push replaced with messages[messages.length - 1]
Mutant 395 in q.js: args replaced with args[0]
Mutant 396 in q.js: args replaced with null
Mutant 397 in q.js: args replaced with "hello"
Mutant 398 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[1]
Mutant 399 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[0]
Mutant 400 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[0]
Mutant 401 in q.js: progressListeners.push replaced with progressListeners.splice
Mutant 402 in q.js: progressListeners.push replaced with progressListeners.forEach
Mutant 403 in q.js: progressListeners.push replaced with progressListeners.pop
Mutant 404 in q.js: operands[1] replaced with operands[2]
Mutant 405 in q.js: operands[1] replaced with operands + 1
Mutant 406 in q.js: operands[1] replaced with progressListeners.length
Mutant 407 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 408 in q.js: resolvedPromise replaced with null
Mutant 409 in q.js: resolvedPromise replaced with typeof resolvedPromise === "undefined"
Mutant 410 in q.js: resolvedPromise replaced with resolvedPromise + 1
Mutant 411 in q.js: args replaced with args[0]
Mutant 412 in q.js: args replaced with operands[1]
Mutant 413 in q.js: args replaced with progressListeners[0]
Mutant 414 in q.js: messages replaced with !messages
Mutant 415 in q.js: messages replaced with messages === null
Mutant 416 in q.js: messages replaced with messages.length === 0
Mutant 417 in q.js: nearer replaced with nearerPromise
Mutant 418 in q.js: nearer replaced with isPromise
Mutant 419 in q.js: resolvedPromise replaced with true
Mutant 420 in q.js: resolvedPromise replaced with undefined
Mutant 421 in q.js: resolvedPromise replaced with null
Mutant 422 in q.js: isPromise(nearerValue) replaced with typeof nearerValue === "function"
Mutant 423 in q.js: isPromise(nearerValue) replaced with nearerValue.isFulfilled()
Mutant 424 in q.js: isPromise(nearerValue) replaced with nearerValue.promiseDispatch.length === 1
Mutant 425 in q.js: isPromise replaced with isThenable
Mutant 426 in q.js: isPromise replaced with null
Mutant 427 in q.js: nearerValue replaced with PROMISE
Mutant 428 in q.js: nearerValue replaced with null
Mutant 429 in q.js: nearerValue replaced with reject(new Error("oops"))
Mutant 430 in q.js: !resolvedPromise replaced with resolvedPromise !== true
Mutant 431 in q.js: !resolvedPromise replaced with typeof resolvedPromise === "undefined"
Mutant 432 in q.js: resolvedPromise.inspect replaced with resolvedPromise.promiseDispatch
Mutant 433 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport || !hasStacks
Mutant 434 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 435 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport && hasStacks
Mutant 436 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.lastIndexOf("\n") + 1
Mutant 437 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf(" at ") + 4
Mutant 438 in q.js: e.stack.indexOf replaced with e.stack.length
Mutant 439 in q.js: "\n" replaced with "\r\n"
Mutant 440 in q.js: "\n" replaced with "\t"
Mutant 441 in q.js: "\n" replaced with ""
Mutant 442 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 443 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport && hasStacks
Mutant 444 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise.resolve(message))
Mutant 445 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise.reject(message))
Mutant 446 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise.notify(message))
Mutant 447 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.valueOf.apply
Mutant 448 in q.js: newPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.apply
Mutant 449 in q.js: newPromise.promiseDispatch.apply replaced with fulfill.apply
Mutant 450 in q.js: newPromise replaced with new Promise()
Mutant 451 in q.js: newPromise replaced with resolvedPromise
Mutant 452 in q.js: newPromise replaced with deferred.promise
Mutant 453 in q.js: message replaced with [message]
Mutant 454 in q.js: message replaced with promise[message]
Mutant 455 in q.js: message replaced with message()
Mutant 456 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 457 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 458 in q.js: resolvedPromise replaced with {
  resolvedPromise
}.promiseDispatch
Mutant 459 in q.js: Q(value) replaced with defer(value)
Mutant 460 in q.js: Q(value) replaced with fulfill(value)
Mutant 461 in q.js: Q(value) replaced with reject(value)
Mutant 462 in q.js: Q replaced with undefined
Mutant 463 in q.js: Q replaced with null
Mutant 464 in q.js: value replaced with undefined
Mutant 465 in q.js: value replaced with null
Mutant 466 in q.js: value replaced with false
Mutant 467 in q.js: fulfill(value) replaced with fulfill(reason)
Mutant 468 in q.js: fulfill(value) replaced with reject(value)
Mutant 469 in q.js: fulfill(value) replaced with notify(value)
Mutant 470 in q.js: value replaced with value + 1
Mutant 471 in q.js: value replaced with undefined
Mutant 472 in q.js: value replaced with reject(reason + 1)
Mutant 473 in q.js: resolvedPromise replaced with promise
Mutant 474 in q.js: resolvedPromise replaced with deferred
Mutant 475 in q.js: resolvedPromise replaced with undefined
Mutant 476 in q.js: reject(reason) replaced with resolve(reason)
Mutant 477 in q.js: reject(reason) replaced with reject(new Error(reason))
Mutant 478 in q.js: resolvedPromise replaced with true
Mutant 479 in q.js: resolvedPromise replaced with false
Mutant 480 in q.js: resolvedPromise replaced with promise.isPending()
Mutant 481 in q.js: progressListener replaced with progressListener[0]
Mutant 482 in q.js: progressListener replaced with resolvedPromise.progress
Mutant 483 in q.js: progressListener replaced with undefined
Mutant 484 in q.js: progress replaced with progress(null)
Mutant 485 in q.js: progress replaced with message.progress
Mutant 486 in q.js: error replaced with !error
Mutant 487 in q.js: error replaced with error.message
Mutant 488 in q.js: error replaced with typeof error
Mutant 489 in q.js: self.reject replaced with self.resolve
Mutant 490 in q.js: error replaced with null
Mutant 491 in q.js: error replaced with undefined
Mutant 492 in q.js: error replaced with new Error('different error')
Mutant 493 in q.js: arguments.length > 2 replaced with arguments.length < 2
Mutant 494 in q.js: arguments.length > 2 replaced with arguments.length != 2
Mutant 495 in q.js: arguments.length > 2 replaced with arguments.length == 2
Mutant 496 in q.js: self.resolve replaced with self.fulfill
Mutant 497 in q.js: self.resolve replaced with self.reject
Mutant 498 in q.js: self.resolve replaced with deferred.reject
Mutant 499 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments)
Mutant 500 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 501 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0, -1)
Mutant 502 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[0], 1)
Mutant 503 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[0] + 1)
Mutant 504 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[1] - 1)
Mutant 505 in q.js: array_slice replaced with array_shift
Mutant 506 in q.js: array_slice replaced with array_pop
Mutant 507 in q.js: array_slice replaced with array_splice
Mutant 508 in q.js: arguments replaced with "hello"
Mutant 509 in q.js: arguments replaced with null
Mutant 510 in q.js: self.resolve replaced with self.reject
Mutant 511 in q.js: self.resolve replaced with undefined
Mutant 512 in q.js: value replaced with null
Mutant 513 in q.js: value replaced with 42
Mutant 514 in q.js: value replaced with []
Mutant 515 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 516 in q.js: typeof resolver !== "function" replaced with typeof resolver !== "object"
Mutant 517 in q.js: typeof resolver !== "function" replaced with resolver.constructor.name !== "Function"
Mutant 518 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.fulfill)
Mutant 519 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve(null))
Mutant 520 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject("error"))
Mutant 521 in q.js: deferred.resolve replaced with deferred.reject
Mutant 522 in q.js: deferred.resolve replaced with Promise.resolve
Mutant 523 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 524 in q.js: deferred.reject replaced with deferred.throw
Mutant 525 in q.js: deferred.reject replaced with deferred.resolve
Mutant 526 in q.js: deferred.reject replaced with deferred.promise
Mutant 527 in q.js: deferred.notify replaced with deferred.notify(null)
Mutant 528 in q.js: deferred.notify replaced with deferred.notify(undefined)
Mutant 529 in q.js: deferred.notify replaced with deferred.notify(1)
Mutant 530 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 531 in q.js: reason replaced with undefined
Mutant 532 in q.js: reason replaced with new Error("example error message")
Mutant 533 in q.js: reason replaced with null
Mutant 534 in q.js: x replaced with y = y + 1
Mutant 535 in q.js: y replaced with x
Mutant 536 in q.js: y replaced with x * y
Mutant 537 in q.js: y replaced with x + y
Mutant 538 in q.js: [this, that] replaced with this
Mutant 539 in q.js: [this, that] replaced with that
Mutant 540 in q.js: [this, that] replaced with [that, this]
Mutant 541 in q.js: x === y replaced with x != y
Mutant 542 in q.js: x === y replaced with x > y
Mutant 543 in q.js: i < len replaced with i <= len
Mutant 544 in q.js: i < len replaced with i > len
Mutant 545 in q.js: i < len replaced with i != len
Mutant 546 in q.js: i++ replaced with i--
Mutant 547 in q.js: i++ replaced with i *= 2
Mutant 548 in q.js: i++ replaced with i += 2
Mutant 549 in q.js: Q replaced with undefined
Mutant 550 in q.js: Q replaced with false
Mutant 551 in q.js: answerPs[i] replaced with answerPs[0]
Mutant 552 in q.js: answerPs[i] replaced with answerPs.length
Mutant 553 in q.js: answerPs[i] replaced with answerPs[i++]
Mutant 554 in q.js: resolve replaced with null
Mutant 555 in q.js: resolve replaced with x
Mutant 556 in q.js: Q.race replaced with Q.resolve
Mutant 557 in q.js: fallback === void 0 replaced with fallback !== void 0
Mutant 558 in q.js: fallback === void 0 replaced with typeof fallback !== "undefined"
Mutant 559 in q.js: fallback === void 0 replaced with eval("!fallback")
Mutant 560 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 561 in q.js: inspect === void 0 replaced with inspect() !== void 0
Mutant 562 in q.js: inspect === void 0 replaced with inspect() === void 0
Mutant 563 in q.js: object_create replaced with {}
Mutant 564 in q.js: object_create replaced with null
Mutant 565 in q.js: Promise.prototype replaced with Object.create(null)
Mutant 566 in q.js: Promise.prototype replaced with new Function()
Mutant 567 in q.js: Promise.prototype replaced with Promise.prototype.get()
Mutant 568 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, resolve)
Mutant 569 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, reject)
Mutant 570 in q.js: args replaced with 42
Mutant 571 in q.js: args replaced with "hello"
Mutant 572 in q.js: args replaced with null
Mutant 573 in q.js: fallback.call(promise, op, args) replaced with fallback.call(null)
Mutant 574 in q.js: fallback.call(promise, op, args) replaced with fallback.call(void 0)
Mutant 575 in q.js: fallback.call(promise, op, args) replaced with fallback.call({})
Mutant 576 in q.js: promise replaced with promise.POSTS
Mutant 577 in q.js: promise replaced with createPromise
Mutant 578 in q.js: promise replaced with promise.reject
Mutant 579 in q.js: op replaced with !op
Mutant 580 in q.js: op replaced with op + 1
Mutant 581 in q.js: op replaced with op => op
Mutant 582 in q.js: args replaced with reject
Mutant 583 in q.js: args replaced with resolve
Mutant 584 in q.js: args replaced with function () {
  throw new Error('Buggy code');
}
Mutant 585 in q.js: exception replaced with {}
Mutant 586 in q.js: exception replaced with null
Mutant 587 in q.js: exception replaced with Object.create(null)
Mutant 588 in q.js: resolve replaced with inspect && inspect.state === "pending"
Mutant 589 in q.js: resolve replaced with inspect && inspect.state !== "rejected"
Mutant 590 in q.js: result replaced with null
Mutant 591 in q.js: result replaced with undefined
Mutant 592 in q.js: result replaced with 0
Mutant 593 in q.js: inspect replaced with !inspect
Mutant 594 in q.js: inspect replaced with typeof inspect === "function"
Mutant 595 in q.js: inspected.state === "rejected" replaced with inspected.state !== "fulfilled"
Mutant 596 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 597 in q.js: inspected.state === "rejected" replaced with inspected.state === "settled"
Mutant 598 in q.js: inspect replaced with inspect.exception
Mutant 599 in q.js: inspect replaced with inspect.reason
Mutant 600 in q.js: inspect replaced with inspect.isPending
Mutant 601 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with !(inspected.state === "rejected")
Mutant 602 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "resolved"
Mutant 603 in q.js: defer replaced with undefined
Mutant 604 in q.js: fulfilled replaced with rejected
Mutant 605 in q.js: value replaced with null
Mutant 606 in q.js: value replaced with undefined
Mutant 607 in q.js: value replaced with 1
Mutant 608 in q.js: exception replaced with reject(inspected)
Mutant 609 in q.js: exception replaced with resolve(inspect())
Mutant 610 in q.js: typeof rejected === "function" replaced with rejected
Mutant 611 in q.js: typeof rejected === "function" replaced with rejected.called
Mutant 612 in q.js: typeof rejected === "function" replaced with typeof rejected === "function" && rejected.called
Mutant 613 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, promise)
Mutant 614 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(reject, self.promiseDispatch)
Mutant 615 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, deferred)
Mutant 616 in q.js: exception replaced with undefined
Mutant 617 in q.js: exception replaced with new TypeError()
Mutant 618 in q.js: exception replaced with {}
Mutant 619 in q.js: self replaced with self.promiseDispatch(reject, "when", [])
Mutant 620 in q.js: rejected replaced with resolved
Mutant 621 in q.js: exception replaced with null
Mutant 622 in q.js: exception replaced with undefined
Mutant 623 in q.js: exception replaced with new Error("This is a different error message")
Mutant 624 in q.js: exception replaced with undefined
Mutant 625 in q.js: exception replaced with Q.reject(exception)
Mutant 626 in q.js: progressed replaced with Q.prototype.progress
Mutant 627 in q.js: value replaced with null
Mutant 628 in q.js: value replaced with undefined
Mutant 629 in q.js: value replaced with false
Mutant 630 in q.js: done replaced with !done
Mutant 631 in q.js: done replaced with done == false
Mutant 632 in q.js: done replaced with done = false
Mutant 633 in q.js: deferred.resolve replaced with deferred.reject
Mutant 634 in q.js: deferred.resolve replaced with deferred.promise
Mutant 635 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 636 in q.js: _fulfilled(value) replaced with Q()
Mutant 637 in q.js: _fulfilled(value) replaced with null
Mutant 638 in q.js: _fulfilled replaced with void 0
Mutant 639 in q.js: value replaced with promise
Mutant 640 in q.js: value replaced with fulfilled
Mutant 641 in q.js: done replaced with !done
Mutant 642 in q.js: done replaced with done && false
Mutant 643 in q.js: done replaced with done || true
Mutant 644 in q.js: deferred.resolve replaced with deferred.reject
Mutant 645 in q.js: deferred.resolve replaced with nullPromise.resolve
Mutant 646 in q.js: deferred.resolve replaced with deferred.notify
Mutant 647 in q.js: _rejected(exception) replaced with _fulfilled(exception)
Mutant 648 in q.js: _rejected(exception) replaced with _rejected(null)
Mutant 649 in q.js: _rejected(exception) replaced with _progressed(rejected)
Mutant 650 in q.js: _rejected replaced with _resolved
Mutant 651 in q.js: exception replaced with exception.message
Mutant 652 in q.js: exception replaced with exception.toString()
Mutant 653 in q.js: exception replaced with Q.reject(exception.toString())
Mutant 654 in q.js: _progressed replaced with _rejected
Mutant 655 in q.js: _progressed replaced with _fulfilled
Mutant 656 in q.js: value replaced with null
Mutant 657 in q.js: value replaced with "<PLACEHOLDER>"
Mutant 658 in q.js: value replaced with value + 1
Mutant 659 in q.js: Q.onerror replaced with Q.onerror.call(null, e)
Mutant 660 in q.js: Q.onerror replaced with Q.onerror()
Mutant 661 in q.js: Q.onerror replaced with Q.onerror.call(e)
Mutant 662 in q.js: e replaced with Q
Mutant 663 in q.js: e replaced with null
Mutant 664 in q.js: e replaced with undefined
Mutant 665 in q.js: !threw replaced with threw
Mutant 666 in q.js: !threw replaced with !threw
Mutant 667 in q.js: deferred.notify replaced with deferred.reject
Mutant 668 in q.js: deferred.notify replaced with null
Mutant 669 in q.js: newValue replaced with undefined
Mutant 670 in q.js: newValue replaced with null
Mutant 671 in q.js: newValue replaced with void 0
Mutant 672 in q.js: Q replaced with null
Mutant 673 in q.js: Q replaced with undefined
Mutant 674 in q.js: Q replaced with 5
Mutant 675 in q.js: promise replaced with promise.reject("buggy code")
Mutant 676 in q.js: promise replaced with Q.when(promise, undefined)
Mutant 677 in q.js: promise replaced with null
Mutant 678 in q.js: callback replaced with 5
Mutant 679 in q.js: callback replaced with "hello"
Mutant 680 in q.js: callback replaced with promise.then
Mutant 681 in q.js: Q replaced with Q.fcall
Mutant 682 in q.js: Q replaced with Q.delay
Mutant 683 in q.js: callback replaced with null
Mutant 684 in q.js: callback replaced with undefined
Mutant 685 in q.js: callback replaced with void 0
Mutant 686 in q.js: value replaced with null
Mutant 687 in q.js: value replaced with undefined
Mutant 688 in q.js: value replaced with Object
Mutant 689 in q.js: value replaced with null
Mutant 690 in q.js: value replaced with Promise.reject(value)
Mutant 691 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed)
Mutant 692 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, "", progressed)
Mutant 693 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, null, progressed)
Mutant 694 in q.js: value replaced with Q.reject(value)
Mutant 695 in q.js: value replaced with Q.resolve(null)
Mutant 696 in q.js: value replaced with void 0
Mutant 697 in q.js: fulfilled replaced with rejected
Mutant 698 in q.js: fulfilled replaced with null
Mutant 699 in q.js: fulfilled replaced with undefined
Mutant 700 in q.js: rejected replaced with fulfilled
Mutant 701 in q.js: rejected replaced with 2 + 1
Mutant 702 in q.js: progressed replaced with null
Mutant 703 in q.js: progressed replaced with ""
Mutant 704 in q.js: progressed replaced with 0
Mutant 705 in q.js: this.then replaced with this.thenNotify
Mutant 706 in q.js: this.then replaced with this.sayRejected
Mutant 707 in q.js: this.then replaced with this.sayResolve
Mutant 708 in q.js: function () {
  return value;
} replaced with function () {
  return reverseValue;
}
Mutant 709 in q.js: function () {
  return value;
} replaced with function () {
  return value.reverse();
}
Mutant 710 in q.js: function () {
  return value;
} replaced with function () {
  return value + 1;
}
Mutant 711 in q.js: Q replaced with Q.reject
Mutant 712 in q.js: Q replaced with Q.defer
Mutant 713 in q.js: Q replaced with Q.then
Mutant 714 in q.js: promise replaced with Q.reject(new Error("placeholder"))
Mutant 715 in q.js: promise replaced with Q.resolve(undefined)
Mutant 716 in q.js: promise replaced with Q.resolve(Q.reject(new Error("placeholder")))
Mutant 717 in q.js: value replaced with undefined
Mutant 718 in q.js: value replaced with null
Mutant 719 in q.js: this.then replaced with this.thenResolve
Mutant 720 in q.js: this.then replaced with this.thenReject
Mutant 721 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 722 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error(reason);
}
Mutant 723 in q.js: function () {
  throw reason;
} replaced with function () {
  console.error(reason);
  return;
}
Mutant 724 in q.js: promise replaced with undefined
Mutant 725 in q.js: promise replaced with null
Mutant 726 in q.js: reason replaced with function () {
  throw reason;
}
Mutant 727 in q.js: isPromise(value) replaced with typeof value === "object"
Mutant 728 in q.js: isPromise(value) replaced with value && typeof value === "object"
Mutant 729 in q.js: isPromise(value) replaced with value instanceof Promise
Mutant 730 in q.js: isPromise replaced with isPromiseAlike
Mutant 731 in q.js: isPromise replaced with !isPromise
Mutant 732 in q.js: isPromise replaced with typeof promise === "object" && promise.then
Mutant 733 in q.js: value replaced with !value
Mutant 734 in q.js: value replaced with 2 * value
Mutant 735 in q.js: value replaced with value + 1
Mutant 736 in q.js: value.inspect replaced with value.isFulfilled
Mutant 737 in q.js: value.inspect replaced with value.then
Mutant 738 in q.js: value.inspect replaced with value.catch
Mutant 739 in q.js: inspected.state === "fulfilled" replaced with inspected.status === "fulfilled"
Mutant 740 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 741 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "pending"
Mutant 742 in q.js: isObject replaced with isFunction
Mutant 743 in q.js: isObject replaced with isPromise
Mutant 744 in q.js: isObject replaced with typeof object === "function"
Mutant 745 in q.js: object replaced with function (value) {
  return value * 2;
}
Mutant 746 in q.js: object replaced with function (value) {
  return value + 1;
}
Mutant 747 in q.js: object replaced with function (value) {
  return !value;
}
Mutant 748 in q.js: isPromise replaced with isPromiseAlike
Mutant 749 in q.js: isPromise replaced with !isRejected
Mutant 750 in q.js: isPromise replaced with typeof value === "function"
Mutant 751 in q.js: object replaced with object.then()
Mutant 752 in q.js: object replaced with object.catch()
Mutant 753 in q.js: object replaced with object.finally()
Mutant 754 in q.js: this.inspect replaced with this
Mutant 755 in q.js: this.inspect replaced with inspect
not replacing this.inspect with this
not replacing this.inspect with inspect
Mutant 756 in q.js: isPromise replaced with isPromiseAlike
Mutant 757 in q.js: isPromise replaced with !isPending
Mutant 758 in q.js: isPromise replaced with isFulfilled
Mutant 759 in q.js: object replaced with !object
Mutant 760 in q.js: object replaced with object === null
Mutant 761 in q.js: this.inspect replaced with this.inspect.state
not replacing this.inspect with this.inspect.state
Mutant 762 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 763 in q.js: object replaced with object.state === "rejected"
Mutant 764 in q.js: this.inspect replaced with rejection.inspect
not replacing this.inspect with rejection.inspect
Mutant 765 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 766 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== true
Mutant 767 in q.js: !trackUnhandledRejections replaced with array_indexOf(unhandledRejections, promise) !== -1
Mutant 768 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 769 in q.js: !trackUnhandledRejections replaced with unhandledRejections.length > 0
Mutant 770 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with array_indexOf(unhandledRejections, promise) !== -2
Mutant 771 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with array_indexOf(unhandledRejections, promise) === -1
Mutant 772 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with array_indexOf(unhandledReasons, reason) === -1
Mutant 773 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length, 0)
Mutant 774 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.length, 0)
Mutant 775 in q.js: unhandledRejections replaced with reportedUnhandledRejections
Mutant 776 in q.js: unhandledRejections replaced with resetUnhandledRejections
Mutant 777 in q.js: promise replaced with Null
Mutant 778 in q.js: promise replaced with "promise"
Mutant 779 in q.js: promise replaced with NaN
Mutant 780 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", unhandledReasons[unhandledRejections.length], unhandledRejections[unhandledRejections.length])
Mutant 781 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("rejectionHandled", reason, promise)
Mutant 782 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledFulfillment", value, promise)
Mutant 783 in q.js: reason replaced with null
Mutant 784 in q.js: reason replaced with {
  "value": reason
}
Mutant 785 in q.js: reason replaced with reason.detail
Mutant 786 in q.js: promise replaced with promise.isPending
Mutant 787 in q.js: promise replaced with promise.then
Mutant 788 in q.js: promise replaced with promise.reject
Mutant 789 in q.js: promise replaced with null
Mutant 790 in q.js: promise replaced with undefined
Mutant 791 in q.js: promise replaced with false
Mutant 792 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason ? reason.stack : null
Mutant 793 in q.js: reason && typeof reason.stack !== "undefined" replaced with typeof reason === "undefined"
Mutant 794 in q.js: reason && typeof reason.stack !== "undefined" replaced with typeof reason === "number"
Mutant 795 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 796 in q.js: unhandledReasons.push replaced with unhandledReasons[0] = reason
Mutant 797 in q.js: reason.stack replaced with !reason.stack
Mutant 798 in q.js: reason.stack replaced with reason.stack + 1
Mutant 799 in q.js: "(no stack) " + reason replaced with undefined
Mutant 800 in q.js: "(no stack) " + reason replaced with null
Mutant 801 in q.js: "(no stack) " + reason replaced with {
  toString: function () {
    return `" Error: " + reason`;
  }
}
Mutant 802 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections != true
Mutant 803 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections || false
Mutant 804 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections && true
Mutant 805 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejected)
Mutant 806 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(promises)
Mutant 807 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(rejected)
Mutant 808 in q.js: array_indexOf replaced with array_includes
Mutant 809 in q.js: array_indexOf replaced with unhandledRejections.length
Mutant 810 in q.js: unhandledRejections replaced with unhandledReasons
Mutant 811 in q.js: unhandledRejections replaced with rejectedPromises
Mutant 812 in q.js: unhandledRejections replaced with reportedUnhandledRejections
Mutant 813 in q.js: at !== -1 replaced with at < 0
Mutant 814 in q.js: at !== -1 replaced with at > -1
Mutant 815 in q.js: at !== -1 replaced with at !== unhandledRejections.length - 1
Mutant 816 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.pop() === promise)
Mutant 817 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.splice(promise, 1))
Mutant 818 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(promise !== unhandledRejections[array_indexOf(promise)])
Mutant 819 in q.js: array_indexOf replaced with unhandledRejections.length
Mutant 820 in q.js: array_indexOf replaced with typeof unhandledRejections === "undefined"
Mutant 821 in q.js: reportedUnhandledRejections replaced with unhandledReasons
Mutant 822 in q.js: reportedUnhandledRejections replaced with Q.getUnhandledReasons()
Mutant 823 in q.js: reportedUnhandledRejections replaced with Promise.all(unhandledRejections, reason).forEach(unhandledReasons)
Mutant 824 in q.js: promise replaced with promiseA
Mutant 825 in q.js: promise replaced with rejection
Mutant 826 in q.js: promise replaced with Q(promise)
Mutant 827 in q.js: atReport !== -1 replaced with rejected && array_indexOf(reportedUnhandledRejections, promise) !== -1
Mutant 828 in q.js: atReport !== -1 replaced with !array_indexOf(reportedUnhandledRejections, promise) === -1
Mutant 829 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at])
Mutant 830 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at])
Mutant 831 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons.pop())
Mutant 832 in q.js: "rejectionHandled" replaced with "unhandledRejection"
Mutant 833 in q.js: "rejectionHandled" replaced with "rejectionHandled" + 1
Mutant 834 in q.js: "rejectionHandled" replaced with "rejectionHandled".toUpperCase()
Mutant 835 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 836 in q.js: unhandledReasons[at] replaced with unhandledReasons[at - 1]
Mutant 837 in q.js: unhandledReasons[at] replaced with randomVariable
Mutant 838 in q.js: promise replaced with promise.then(function () {})
Mutant 839 in q.js: promise replaced with promise.then(function (v) {
  throw v;
})
Mutant 840 in q.js: promise replaced with promise.then(null, function () {})
Mutant 841 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(-1)
Mutant 842 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(1)
Mutant 843 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(0)
Mutant 844 in q.js: atReport replaced with repliedUnhandledRejections.length
Mutant 845 in q.js: atReport replaced with reportedUnhandledRejections[atReport]
Mutant 846 in q.js: atReport replaced with unhandledRejections.length - 1
Mutant 847 in q.js: 1 replaced with -1
Mutant 848 in q.js: 1 replaced with null
Mutant 849 in q.js: 1 replaced with undefined
Mutant 850 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at - 1)
Mutant 851 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at + 1)
Mutant 852 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at = 0)
Mutant 853 in q.js: unhandledRejections.splice replaced with unhandledRejections[at] = 0
Mutant 854 in q.js: 1 replaced with 0
Mutant 855 in q.js: 1 replaced with 2
Mutant 856 in q.js: 1 replaced with unhandledRejections.length - 1
Mutant 857 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 0)
Mutant 858 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at + 1)
Mutant 859 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(-at)
Mutant 860 in q.js: at replaced with at - 1
Mutant 861 in q.js: at replaced with unhandledRejections.length
Mutant 862 in q.js: at replaced with reportedUnhandledRejections.length
Mutant 863 in q.js: 1 replaced with reason.length
Mutant 864 in q.js: 1 replaced with unhandledReasons.length + 1
Mutant 865 in q.js: 1 replaced with -1
Mutant 866 in q.js: resetUnhandledRejections replaced with unhandledRejections.length = 0
Mutant 867 in q.js: resetUnhandledRejections replaced with unhandledRejections = []
Mutant 868 in q.js: rejected replaced with !rejected
Mutant 869 in q.js: rejected replaced with rejected && false
Mutant 870 in q.js: rejected replaced with rejected || true
Mutant 871 in q.js: untrackRejection replaced with trackRejection
Mutant 872 in q.js: untrackRejection replaced with null
Mutant 873 in q.js: rejected replaced with null
Mutant 874 in q.js: rejected replaced with undefined
Mutant 875 in q.js: rejected replaced with promise
Mutant 876 in q.js: reason replaced with "rate"
Mutant 877 in q.js: reason replaced with null
Mutant 878 in q.js: trackRejection(rejection, reason) replaced with trackRejection(null)
Mutant 879 in q.js: trackRejection(rejection, reason) replaced with trackRejection(undefined)
Mutant 880 in q.js: trackRejection(rejection, reason) replaced with trackRejection(void 0)
Mutant 881 in q.js: rejection replaced with null
Mutant 882 in q.js: rejection replaced with undefined
Mutant 883 in q.js: rejection replaced with "foo"
Mutant 884 in q.js: reason replaced with null
Mutant 885 in q.js: reason replaced with new Error()
Mutant 886 in q.js: reason replaced with void 0
Mutant 887 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 888 in q.js: name === null || name === void 0 replaced with name === "undefined"
Mutant 889 in q.js: name === null || name === void 0 replaced with name == null
Mutant 890 in q.js: value.apply(void 0, args) replaced with value.apply(args, void 0)
Mutant 891 in q.js: value.apply(void 0, args) replaced with value.apply(null)
Mutant 892 in q.js: value.apply(void 0, args) replaced with value.apply(this)
Mutant 893 in q.js: void 0 replaced with 12345
Mutant 894 in q.js: void 0 replaced with undefined
Mutant 895 in q.js: void 0 replaced with null
Mutant 896 in q.js: args replaced with [1, 2, 3]
Mutant 897 in q.js: args replaced with null
Mutant 898 in q.js: args replaced with function () {
  return 5;
}
Mutant 899 in q.js: value[name].apply(value, args) replaced with value[name].apply(args.concat(value))
Mutant 900 in q.js: value[name].apply(value, args) replaced with value[name].apply(null)
Mutant 901 in q.js: value[name].apply(value, args) replaced with value[name].apply(undefined)
Mutant 902 in q.js: value[name].apply replaced with value[name]["apply"]
Mutant 903 in q.js: value[name].apply replaced with value[name].call
Mutant 904 in q.js: value replaced with value + 1
Mutant 905 in q.js: value replaced with value * 2
Mutant 906 in q.js: value replaced with value - 1
Mutant 907 in q.js: args replaced with args[0]
Mutant 908 in q.js: value.apply(thisp, args) replaced with value.apply(value)
Mutant 909 in q.js: value.apply(thisp, args) replaced with value.apply(null)
Mutant 910 in q.js: value.apply(thisp, args) replaced with value.apply(undefined)
Mutant 911 in q.js: thisp replaced with thisp.call()
Mutant 912 in q.js: thisp replaced with thisp.resolve()
Mutant 913 in q.js: thisp replaced with thisp(arg)
Mutant 914 in q.js: args replaced with undefined
Mutant 915 in q.js: args replaced with null
Mutant 916 in q.js: args replaced with 0
Mutant 917 in q.js: object_keys replaced with object_keys[0]
Mutant 918 in q.js: object_keys replaced with ""
Mutant 919 in q.js: value replaced with ""
Mutant 920 in q.js: value replaced with null
Mutant 921 in q.js: value replaced with void 0
Mutant 922 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(function (value) {})
Mutant 923 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(function () {})
Mutant 924 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(function (error) {})
Mutant 925 in q.js: promise.then replaced with promise.catch
Mutant 926 in q.js: promise.then replaced with promise.tap
Mutant 927 in q.js: promise.then replaced with promise.spread
Mutant 928 in q.js: deferred.resolve replaced with deferred.reject
Mutant 929 in q.js: deferred.resolve replaced with Q.reject
Mutant 930 in q.js: deferred.resolve replaced with Promise.reject
Mutant 931 in q.js: deferred.reject replaced with deferred.resolve
Mutant 932 in q.js: deferred.reject replaced with deferred.then(function (value) {
  return value;
})
Mutant 933 in q.js: deferred.reject replaced with deferred.all().then(function (values) {
  return values;
})
Mutant 934 in q.js: deferred.notify replaced with deferred.reject
Mutant 935 in q.js: deferred.notify replaced with deferred.resolve
Mutant 936 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 937 in q.js: deferred.reject replaced with deferred.resolve
Mutant 938 in q.js: deferred.reject replaced with deferred.notFulfilled
Mutant 939 in q.js: exception replaced with null
Mutant 940 in q.js: exception replaced with new Error()
Mutant 941 in q.js: exception replaced with undefined
Mutant 942 in q.js: dispatch(object, op, args) replaced with dispatch(null)
Mutant 943 in q.js: dispatch(object, op, args) replaced with dispatch(undefined)
Mutant 944 in q.js: dispatch(object, op, args) replaced with dispatch(true)
Mutant 945 in q.js: dispatch replaced with "dispatch" + 1
Mutant 946 in q.js: dispatch replaced with "dispatched"
Mutant 947 in q.js: object replaced with undefined
Mutant 948 in q.js: object replaced with Promise.reject(new Error("Test error"))
Mutant 949 in q.js: object replaced with null
Mutant 950 in q.js: op replaced with 5
Mutant 951 in q.js: op replaced with "foo"
Mutant 952 in q.js: op replaced with 5 + 3
Mutant 953 in q.js: args replaced with args[0] * 2
Mutant 954 in q.js: args replaced with args.slice(1)
Mutant 955 in q.js: args replaced with [args[0]]
Mutant 956 in q.js: Q replaced with this
Mutant 957 in q.js: Q replaced with Q.inspect
Mutant 958 in q.js: Q replaced with Q.resolve
Mutant 959 in q.js: object replaced with null
Mutant 960 in q.js: object replaced with undefined
Mutant 961 in q.js: object replaced with object.property
Mutant 962 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled, null)
Mutant 963 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, null)
Mutant 964 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(null, rejected)
Mutant 965 in q.js: Q(value).spread replaced with null
Mutant 966 in q.js: Q(value).spread replaced with undefined
Mutant 967 in q.js: value replaced with console
Mutant 968 in q.js: value replaced with value.length
Mutant 969 in q.js: value replaced with console.log(value)
Mutant 970 in q.js: fulfilled replaced with rejected
Mutant 971 in q.js: fulfilled replaced with not_fulfilled
Mutant 972 in q.js: fulfilled replaced with anything_else
Mutant 973 in q.js: rejected replaced with fulfilled
Mutant 974 in q.js: rejected replaced with null
Mutant 975 in q.js: rejected replaced with undefined
Mutant 976 in q.js: this.all replaced with this.some
Mutant 977 in q.js: this.all replaced with this.each
Mutant 978 in q.js: this.all replaced with this.filter
not replacing this.all with this.some
not replacing this.all with this.some
not replacing this.all with this.each
not replacing this.all with this.each
not replacing this.all with this.filter
not replacing this.all with this.filter
Mutant 979 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 980 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply([])
Mutant 981 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply("undefined")
Mutant 982 in q.js: fulfilled.apply replaced with fulfilled.call
Mutant 983 in q.js: fulfilled.apply replaced with fulfilled.bind
Mutant 984 in q.js: void 0 replaced with undefined
Mutant 985 in q.js: void 0 replaced with null
Mutant 986 in q.js: void 0 replaced with this
Mutant 987 in q.js: array replaced with array.length
Mutant 988 in q.js: array replaced with array.slice()
Mutant 989 in q.js: array replaced with array.map(function (x) {
  return x + 1;
})
Mutant 990 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 991 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "number"
Mutant 992 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "object"
Mutant 993 in q.js: generator[verb] replaced with generateur
Mutant 994 in q.js: generator[verb] replaced with generated
Mutant 995 in q.js: arg replaced with undefined
Mutant 996 in q.js: arg replaced with null
Mutant 997 in q.js: exception replaced with null
Mutant 998 in q.js: result.done replaced with result.length
Mutant 999 in q.js: result.done replaced with result.error
Mutant 1000 in q.js: result.done replaced with result * 2
Mutant 1001 in q.js: result.value replaced with result.value != null && result.value !== undefined
Mutant 1002 in q.js: result.value replaced with !result.value
Mutant 1003 in q.js: result.value replaced with Math.floor(result.value)
Mutant 1004 in q.js: when replaced with Q.reject
Mutant 1005 in q.js: when replaced with Q.allSettled
Mutant 1006 in q.js: when replaced with Q.race
Mutant 1007 in q.js: result.value replaced with undefined
Mutant 1008 in q.js: result.value replaced with null
Mutant 1009 in q.js: result.value replaced with new Error()
Mutant 1010 in q.js: callback replaced with reject
Mutant 1011 in q.js: callback replaced with all
Mutant 1012 in q.js: callback replaced with error
Mutant 1013 in q.js: errback replaced with args
Mutant 1014 in q.js: errback replaced with "errback"
Mutant 1015 in q.js: errback replaced with Math.max(callback, errback)
Mutant 1016 in q.js: arg replaced with null
Mutant 1017 in q.js: arg replaced with undefined
Mutant 1018 in q.js: isStopIteration(exception) replaced with !isStopIteration(exception)
Mutant 1019 in q.js: isStopIteration(exception) replaced with exception !== undefined
Mutant 1020 in q.js: isStopIteration(exception) replaced with typeof exception === "object"
Mutant 1021 in q.js: isStopIteration replaced with op === "done"
Mutant 1022 in q.js: isStopIteration replaced with op === "when" && args[0] === "then"
Mutant 1023 in q.js: isStopIteration replaced with op === "error"
Mutant 1024 in q.js: exception.value replaced with null
Mutant 1025 in q.js: exception.value replaced with undefined
Mutant 1026 in q.js: exception.value replaced with Q.reject(exception)
Mutant 1027 in q.js: reject replaced with error.value
Mutant 1028 in q.js: exception replaced with true
Mutant 1029 in q.js: exception replaced with 1
Mutant 1030 in q.js: exception replaced with "error"
Mutant 1031 in q.js: result replaced with undefined
Mutant 1032 in q.js: result replaced with null
Mutant 1033 in q.js: result replaced with "hello world"
Mutant 1034 in q.js: errback replaced with Q.reject
Mutant 1035 in q.js: errback replaced with null
Mutant 1036 in q.js: errback replaced with () => {}
Mutant 1037 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null, [])
Mutant 1038 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(undefined, [1, 2, 3])
Mutant 1039 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply({}, [1, 2, 3])
Mutant 1040 in q.js: this replaced with null
Mutant 1041 in q.js: this replaced with undefined
Mutant 1042 in q.js: this replaced with Q
Mutant 1043 in q.js: arguments replaced with this
Mutant 1044 in q.js: arguments replaced with null
Mutant 1045 in q.js: arguments replaced with []
Mutant 1046 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.call(null, "next"))
Mutant 1047 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(Q.nextTick)
Mutant 1048 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(null)
Mutant 1049 in q.js: continuer.bind replaced with nil
Mutant 1050 in q.js: continuer.bind replaced with continuer.apply
Mutant 1051 in q.js: continuer replaced with "next"
Mutant 1052 in q.js: continuer replaced with "throw"
Mutant 1053 in q.js: continuer replaced with "return"
Mutant 1054 in q.js: "next" replaced with "send"
Mutant 1055 in q.js: "next" replaced with "prev"
Mutant 1056 in q.js: "next" replaced with spread[(this, all(arguments))]
Mutant 1057 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind("next")
Mutant 1058 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind("throw")
Mutant 1059 in q.js: continuer replaced with continuer.next()
Mutant 1060 in q.js: continuer replaced with continuer.throw()
Mutant 1061 in q.js: continuer replaced with null
Mutant 1062 in q.js: callback replaced with errback
Mutant 1063 in q.js: callback replaced with reject
Mutant 1064 in q.js: callback replaced with nothing
Mutant 1065 in q.js: all replaced with none
Mutant 1066 in q.js: all replaced with some
Mutant 1067 in q.js: all replaced with any
Mutant 1068 in q.js: arguments replaced with null
Mutant 1069 in q.js: arguments replaced with 10
Mutant 1070 in q.js: arguments replaced with "foo"
Mutant 1071 in q.js: callback.apply(self, args) replaced with callback.apply(args)
Mutant 1072 in q.js: callback.apply(self, args) replaced with callback.apply(args[0])
Mutant 1073 in q.js: callback.apply(self, args) replaced with callback.apply(args.length)
Mutant 1074 in q.js: self replaced with "test"
Mutant 1075 in q.js: self replaced with undefined
Mutant 1076 in q.js: self replaced with null
Mutant 1077 in q.js: args replaced with "foo"
Mutant 1078 in q.js: args replaced with undefined
Mutant 1079 in q.js: args replaced with null
Mutant 1080 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.slice())
Mutant 1081 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args[0])
Mutant 1082 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, 0)
Mutant 1083 in q.js: Q(object).dispatch replaced with object.dispatch
Mutant 1084 in q.js: Q(object).dispatch replaced with object["dispatch"]
Mutant 1085 in q.js: Q(object).dispatch replaced with object.promiseDispatch
Mutant 1086 in q.js: Q replaced with self
Mutant 1087 in q.js: Q replaced with null
Mutant 1088 in q.js: object replaced with null
Mutant 1089 in q.js: object replaced with undefined
Mutant 1090 in q.js: op replaced with Promise.race
Mutant 1091 in q.js: op replaced with Promise.resolve
Mutant 1092 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 1093 in q.js: self.promiseDispatch replaced with null
Mutant 1094 in q.js: self.promiseDispatch replaced with undefined
Mutant 1095 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1096 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1097 in q.js: deferred.resolve replaced with Q.fulfill
Mutant 1098 in q.js: op replaced with deferred.reject
Mutant 1099 in q.js: op replaced with null
Mutant 1100 in q.js: op replaced with "Hello World!"
Mutant 1101 in q.js: args replaced with args.concat(args)
Mutant 1102 in q.js: args replaced with args.slice(0)
Mutant 1103 in q.js: args replaced with [args, args]
Mutant 1104 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("blah", [key])
Mutant 1105 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1106 in q.js: object replaced with void 0
Mutant 1107 in q.js: object replaced with null
Mutant 1108 in q.js: object replaced with NaN
Mutant 1109 in q.js: "get" replaced with "mget"
Mutant 1110 in q.js: "get" replaced with "set"
Mutant 1111 in q.js: "get" replaced with "post"
Mutant 1112 in q.js: [key] replaced with [key + 1]
Mutant 1113 in q.js: [key] replaced with ["key" + 1]
Mutant 1114 in q.js: [key] replaced with [key - 1]
Mutant 1115 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key])
Mutant 1116 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("otherProperty")
Mutant 1117 in q.js: this.dispatch replaced with self
Mutant 1118 in q.js: this.dispatch replaced with undefined
Mutant 1119 in q.js: [key] replaced with [value]
Mutant 1120 in q.js: [key] replaced with [name]
Mutant 1121 in q.js: [key] replaced with [key, value]
Mutant 1122 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, value * 2])
Mutant 1123 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, "new value"])
Mutant 1124 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1125 in q.js: Q replaced with Q.reject
Mutant 1126 in q.js: Q replaced with Q.resolve
Mutant 1127 in q.js: Q replaced with Q.get
Mutant 1128 in q.js: object replaced with null
Mutant 1129 in q.js: object replaced with -1
Mutant 1130 in q.js: object replaced with void 0
Mutant 1131 in q.js: "set" replaced with "del"
Mutant 1132 in q.js: "set" replaced with "get"
Mutant 1133 in q.js: "set" replaced with "post"
Mutant 1134 in q.js: [key, value] replaced with [key, value, null]
Mutant 1135 in q.js: [key, value] replaced with [value, key]
Mutant 1136 in q.js: [key, value] replaced with [key, value, 42]
Mutant 1137 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value, key])
Mutant 1138 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [object, key])
Mutant 1139 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, null])
Mutant 1140 in q.js: this.dispatch replaced with Q[null]
Mutant 1141 in q.js: this.dispatch replaced with "set"
Mutant 1142 in q.js: "set" replaced with "patch"
Mutant 1143 in q.js: "set" replaced with "update"
Mutant 1144 in q.js: [key, value] replaced with [value, value]
Mutant 1145 in q.js: [key, value] replaced with [key, undefined]
Mutant 1146 in q.js: [key, value] replaced with [value, Promise.resolve(value)]
Mutant 1147 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, value + 1])
Mutant 1148 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("post", [key, value])
Mutant 1149 in q.js: object replaced with empty
Mutant 1150 in q.js: object replaced with null
Mutant 1151 in q.js: object replaced with 0
Mutant 1152 in q.js: "delete" replaced with "set"
Mutant 1153 in q.js: "delete" replaced with "unset"
Mutant 1154 in q.js: "delete" replaced with false
Mutant 1155 in q.js: [key] replaced with [object]`[key]`
Mutant 1156 in q.js: [key] replaced with `key`
Mutant 1157 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("remove", [key])
Mutant 1158 in q.js: "delete" replaced with "del"
Mutant 1159 in q.js: "delete" replaced with "remove"
Mutant 1160 in q.js: "delete" replaced with 42
Mutant 1161 in q.js: [key] replaced with [undefined]
Mutant 1162 in q.js: [key] replaced with [key + 1]
Mutant 1163 in q.js: [key] replaced with [key = null]
Mutant 1164 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("send", [name, args])
Mutant 1165 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("mail", [name, args])
Mutant 1166 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("get", [args, name])
Mutant 1167 in q.js: Q replaced with L
Mutant 1168 in q.js: Q replaced with O
Mutant 1169 in q.js: Q replaced with []
Mutant 1170 in q.js: object replaced with 0
Mutant 1171 in q.js: object replaced with undefined
Mutant 1172 in q.js: object replaced with {}
Mutant 1173 in q.js: "post" replaced with "put"
Mutant 1174 in q.js: "post" replaced with "get"
Mutant 1175 in q.js: [name, args] replaced with [name, args.concat(arguments)]
Mutant 1176 in q.js: [name, args] replaced with [args[0], args.slice(1)]
Mutant 1177 in q.js: [name, args] replaced with [args[1], args[0]]
Mutant 1178 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("get", [name, args])
Mutant 1179 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("set", [name, args])
Mutant 1180 in q.js: this.dispatch replaced with null
Mutant 1181 in q.js: this.dispatch replaced with void 0
Mutant 1182 in q.js: "post" replaced with "post1"
Mutant 1183 in q.js: "post" replaced with args
Mutant 1184 in q.js: "post" replaced with name
Mutant 1185 in q.js: [name, args] replaced with [name, args.slice(0)]
Mutant 1186 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1187 in q.js: [name, args] replaced with [name, [args]]
Mutant 1188 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("get", [name, array_slice(arguments, 2)])
Mutant 1189 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("set", [name, array_slice(arguments, 2)])
Mutant 1190 in q.js: Q replaced with !Q
Mutant 1191 in q.js: object replaced with 1
Mutant 1192 in q.js: object replaced with null
Mutant 1193 in q.js: object replaced with undefined
Mutant 1194 in q.js: "post" replaced with "put"
Mutant 1195 in q.js: "post" replaced with "patch"
Mutant 1196 in q.js: "post" replaced with "foo"
Mutant 1197 in q.js: [name, array_slice(arguments, 2)] replaced with [name, args]
Mutant 1198 in q.js: [name, array_slice(arguments, 2)] replaced with [args[0], args.slice(1)]
Mutant 1199 in q.js: [name, array_slice(arguments, 2)] replaced with [name, args, args[0]]
Mutant 1200 in q.js: array_slice(arguments, 2) replaced with array_slice([1, 2])
Mutant 1201 in q.js: array_slice(arguments, 2) replaced with array_slice(Promise.resolve(arguments))
Mutant 1202 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 2))
Mutant 1203 in q.js: array_slice replaced with []
Mutant 1204 in q.js: arguments replaced with "test"
Mutant 1205 in q.js: arguments replaced with undefined
Mutant 1206 in q.js: 2 replaced with array_slice(arguments, 1)
Mutant 1207 in q.js: 2 replaced with array_slice(arguments, index)
Mutant 1208 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("patch"[(name, array_slice(arguments, 1))])
Mutant 1209 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1210 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 0, arguments.length - 1)])
Mutant 1211 in q.js: this.dispatch replaced with Q.reject
Mutant 1212 in q.js: this.dispatch replaced with this.when
Mutant 1213 in q.js: "post" replaced with "set"
Mutant 1214 in q.js: "post" replaced with "get"
Mutant 1215 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2, 3))
Mutant 1216 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 1217 in q.js: array_slice(arguments, 1) replaced with array_slice([].concat(arguments).slice(2))
Mutant 1218 in q.js: array_slice replaced with promises[1]
Mutant 1219 in q.js: array_slice replaced with deferred.promise
Mutant 1220 in q.js: arguments replaced with null
Mutant 1221 in q.js: arguments replaced with {}
Mutant 1222 in q.js: 1 replaced with length + 1
Mutant 1223 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [null, args])
Mutant 1224 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [0, args])
Mutant 1225 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", ["", args])
Mutant 1226 in q.js: object replaced with undefined
Mutant 1227 in q.js: object replaced with Math.random()
Mutant 1228 in q.js: "apply" replaced with "call"
Mutant 1229 in q.js: "apply" replaced with "bind"
Mutant 1230 in q.js: "apply" replaced with "every"
Mutant 1231 in q.js: [void 0, args] replaced with [args, void 0]
Mutant 1232 in q.js: [void 0, args] replaced with [args.slice(0), void 0]
Mutant 1233 in q.js: [void 0, args] replaced with [undefined, args]
Mutant 1234 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [args, void 0])
Mutant 1235 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", undefined, args)
Mutant 1236 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [null, args])
Mutant 1237 in q.js: this.dispatch replaced with void 0
Mutant 1238 in q.js: this.dispatch replaced with null
Mutant 1239 in q.js: this.dispatch replaced with undefined
Mutant 1240 in q.js: [void 0, args] replaced with [null, args]
Mutant 1241 in q.js: [void 0, args] replaced with [void 0, [args]]
Mutant 1242 in q.js: [void 0, args] replaced with [void 0, _]
Mutant 1243 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments)])
Mutant 1244 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, [array_slice(arguments, 1)]])
Mutant 1245 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1246 in q.js: Q replaced with promise
Mutant 1247 in q.js: Q replaced with Q.when
Mutant 1248 in q.js: Q replaced with Q.all
Mutant 1249 in q.js: object replaced with Q(null)
Mutant 1250 in q.js: object replaced with Q(void 0)
Mutant 1251 in q.js: object replaced with Q(null, object)
Mutant 1252 in q.js: "apply" replaced with "call"
Mutant 1253 in q.js: "apply" replaced with "bind"
Mutant 1254 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1255 in q.js: [void 0, array_slice(arguments, 1)] replaced with [array_slice(arguments, 1), void 0]
Mutant 1256 in q.js: [void 0, array_slice(arguments, 1)] replaced with [array_slice(arguments, 1), arguments[0]]
Mutant 1257 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1258 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 0, 2))
Mutant 1259 in q.js: array_slice(arguments, 1) replaced with array_slice(void 0)
Mutant 1260 in q.js: array_slice replaced with [arguments, 1]
Mutant 1261 in q.js: array_slice replaced with [void 0, arguments]
Mutant 1262 in q.js: array_slice replaced with [arguments, void 0]
Mutant 1263 in q.js: arguments replaced with []
Mutant 1264 in q.js: arguments replaced with [1, 2, 3]
Mutant 1265 in q.js: 1 replaced with null
Mutant 1266 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("call", [this, arguments])
Mutant 1267 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("call", [this, array_slice(arguments)])
Mutant 1268 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [this, array_slice(arguments)])
Mutant 1269 in q.js: this.dispatch replaced with promise
Mutant 1270 in q.js: this.dispatch replaced with deferred.reject
Mutant 1271 in q.js: "apply" replaced with "call"
Mutant 1272 in q.js: "apply" replaced with "bind"
Mutant 1273 in q.js: "apply" replaced with "map"
Mutant 1274 in q.js: [void 0, array_slice(arguments)] replaced with [this, array_slice(arguments)]
Mutant 1275 in q.js: [void 0, array_slice(arguments)] replaced with [promise, array_slice(arguments)]
Mutant 1276 in q.js: [void 0, array_slice(arguments)] replaced with [object, array_slice(arguments)]
Mutant 1277 in q.js: arguments replaced with [arguments, "Arguments", "Arguments object"]
Mutant 1278 in q.js: arguments replaced with undefined
Mutant 1279 in q.js: arguments replaced with []
Mutant 1280 in q.js: Q replaced with promise[0]
Mutant 1281 in q.js: object replaced with undefined
Mutant 1282 in q.js: object replaced with this
Mutant 1283 in q.js: object replaced with null
Mutant 1284 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1285 in q.js: arguments replaced with args.slice(2)
Mutant 1286 in q.js: arguments replaced with [...args].slice(2)
Mutant 1287 in q.js: args.concat replaced with args + [void 0]
Mutant 1288 in q.js: array_slice(arguments) replaced with array_slice(args)
Mutant 1289 in q.js: array_slice(arguments) replaced with array_slice(1)
Mutant 1290 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 2)
Mutant 1291 in q.js: arguments replaced with array_slice(0, 1)
Mutant 1292 in q.js: arguments replaced with array_slice(0, args.length)
Mutant 1293 in q.js: arguments replaced with array_slice(1, args.length)
Mutant 1294 in q.js: arguments replaced with []
Mutant 1295 in q.js: arguments replaced with null
Mutant 1296 in q.js: arguments replaced with arguments.length === 0 ? [] : [].slice.call(arguments, 1)
Mutant 1297 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1298 in q.js: array_slice(arguments) replaced with array_slice(arguments[1])
Mutant 1299 in q.js: array_slice(arguments) replaced with array_slice(args, 1)
Mutant 1300 in q.js: array_slice replaced with array_concat
Mutant 1301 in q.js: array_slice replaced with array_map
Mutant 1302 in q.js: array_slice replaced with array_filter
Mutant 1303 in q.js: arguments replaced with null
Mutant 1304 in q.js: arguments replaced with "hello"
Mutant 1305 in q.js: arguments replaced with 42
Mutant 1306 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1307 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("length", [])
Mutant 1308 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("push", [])
Mutant 1309 in q.js: Q replaced with Q.reject
Mutant 1310 in q.js: Q replaced with Q.when
Mutant 1311 in q.js: Q replaced with Q.defer
Mutant 1312 in q.js: object replaced with null
Mutant 1313 in q.js: object replaced with void 0
Mutant 1314 in q.js: object replaced with NaN
Mutant 1315 in q.js: "keys" replaced with "values"
Mutant 1316 in q.js: "keys" replaced with "length"
Mutant 1317 in q.js: "keys" replaced with "concat"
Mutant 1318 in q.js: [] replaced with [1]
Mutant 1319 in q.js: [] replaced with [undefined]
Mutant 1320 in q.js: [] replaced with [null]
Mutant 1321 in q.js: this.dispatch("keys", []) replaced with this.dispatch("keys", null)
Mutant 1322 in q.js: this.dispatch("keys", []) replaced with this.dispatch("length", 0)
Mutant 1323 in q.js: this.dispatch("keys", []) replaced with this.dispatch("undefined", null)
Mutant 1324 in q.js: this.dispatch replaced with this
Mutant 1325 in q.js: this.dispatch replaced with undefined
Mutant 1326 in q.js: this.dispatch replaced with null
Mutant 1327 in q.js: "keys" replaced with "getOwnPropertyNames"
Mutant 1328 in q.js: "keys" replaced with "valueOf"
Mutant 1329 in q.js: "keys" replaced with "toString"
Mutant 1330 in q.js: [] replaced with null
Mutant 1331 in q.js: [] replaced with {}
Mutant 1332 in q.js: [] replaced with undefined
Mutant 1333 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state == "rejected"
Mutant 1334 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with array_slice([promise], 1)[0].inspect().state == "fulfilled"
Mutant 1335 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.fulfill().state == "rejected"
Mutant 1336 in q.js: isPromise replaced with isRejected
Mutant 1337 in q.js: isPromise replaced with isSettled
Mutant 1338 in q.js: isPromise replaced with isPending
Mutant 1339 in q.js: promise replaced with "hello"
Mutant 1340 in q.js: promise replaced with undefined
Mutant 1341 in q.js: promise replaced with window
Mutant 1342 in q.js: --pendingCount === 0 replaced with !(--pendingCount === 0)
Mutant 1343 in q.js: --pendingCount === 0 replaced with --pendingCount !== 0
Mutant 1344 in q.js: --pendingCount === 0 replaced with pendingCount > 0
Mutant 1345 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1346 in q.js: deferred.resolve replaced with Q.reject
Mutant 1347 in q.js: deferred.resolve replaced with deferred.promise
Mutant 1348 in q.js: promises replaced with promises.shift()
Mutant 1349 in q.js: promises replaced with promises.pop()
Mutant 1350 in q.js: promises replaced with promises.slice(1)
Mutant 1351 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: "foo",
  value: progress
}
Mutant 1352 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index + 1,
  value: progress
}
Mutant 1353 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index * 2,
  value: progress
}
Mutant 1354 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1355 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1356 in q.js: pendingCount === 0 replaced with pendingCount += 1
Mutant 1357 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1358 in q.js: deferred.resolve replaced with void 0
Mutant 1359 in q.js: deferred.resolve replaced with promises
Mutant 1360 in q.js: promises replaced with Q(promises).map(function (p) {
  return p.inspect();
})
Mutant 1361 in q.js: promises replaced with Q(promises).map(function (p) {
  return p.isFulfilled && p.value();
})
Mutant 1362 in q.js: promises replaced with Q(promises).filter(function (p) {
  return p.isFulfilled;
})
Mutant 1363 in q.js: all replaced with none
Mutant 1364 in q.js: all replaced with any
Mutant 1365 in q.js: all replaced with every
Mutant 1366 in q.js: this replaced with this === undefined
Mutant 1367 in q.js: this replaced with this !== this
Mutant 1368 in q.js: this replaced with this && this === this
Mutant 1369 in q.js: promises.length === 0 replaced with promises.length >= 1
Mutant 1370 in q.js: promises.length === 0 replaced with !promises.length
Mutant 1371 in q.js: promises.length === 0 replaced with promises.length > 0
Mutant 1372 in q.js: Q.resolve replaced with Q.reject
Mutant 1373 in q.js: Q.resolve replaced with null
Mutant 1374 in q.js: Q.resolve replaced with undefined
Mutant 1375 in q.js: Q.defer replaced with Q.delay
Mutant 1376 in q.js: Q.defer replaced with Q.reject
Mutant 1377 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.valueOf(), onFulfilled, onRejected, onProgress)
Mutant 1378 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise, onRejected, onFulfilled, onProgress)
Mutant 1379 in q.js: promise replaced with promise.reject(err)
Mutant 1380 in q.js: promise replaced with promise.resolve()
Mutant 1381 in q.js: promise replaced with promise.reject(new Error("rejected"))
Mutant 1382 in q.js: onFulfilled replaced with onRejected
Mutant 1383 in q.js: onFulfilled replaced with onProgress
Mutant 1384 in q.js: onRejected replaced with onFulfilled
Mutant 1385 in q.js: onRejected replaced with onDone
Mutant 1386 in q.js: onProgress replaced with onRejected
Mutant 1387 in q.js: onProgress replaced with onFulfilled
Mutant 1388 in q.js: onProgress replaced with noop
Mutant 1389 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1390 in q.js: deferred.resolve replaced with null
Mutant 1391 in q.js: deferred.resolve replaced with undefined
Mutant 1392 in q.js: result replaced with result + 1
Mutant 1393 in q.js: result replaced with promise.resolve(result)
Mutant 1394 in q.js: result replaced with promise.reject(err)
Mutant 1395 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1396 in q.js: pendingCount === 0 replaced with pendingCount <= 0
Mutant 1397 in q.js: pendingCount === 0 replaced with pendingCount >= 0
Mutant 1398 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1399 in q.js: deferred.reject replaced with undefined
Mutant 1400 in q.js: rejection replaced with rejection.message
Mutant 1401 in q.js: rejection replaced with rejection.stack
Mutant 1402 in q.js: rejection replaced with rejection.prototype
Mutant 1403 in q.js: any replaced with then
Mutant 1404 in q.js: any replaced with race
Mutant 1405 in q.js: this replaced with this.allResolved
Mutant 1406 in q.js: this replaced with Promise.allResolved
Mutant 1407 in q.js: this replaced with Q.allResolved
Mutant 1408 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(Q.all)
Mutant 1409 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved.bind(null))
Mutant 1410 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(Promise.all)
Mutant 1411 in q.js: allResolved replaced with allRejected
Mutant 1412 in q.js: allResolved replaced with any
Mutant 1413 in q.js: allResolved replaced with whenRejected
Mutant 1414 in q.js: "allResolved" replaced with "allRejected"
Mutant 1415 in q.js: "allResolved" replaced with "allSettled"
Mutant 1416 in q.js: "allSettled" replaced with "anySettled"
Mutant 1417 in q.js: "allSettled" replaced with "allRejected"
Mutant 1418 in q.js: "allSettled" replaced with "noneSettled"
Mutant 1419 in q.js: array_map(promises, Q) replaced with array_map(promises.map(Q))
Mutant 1420 in q.js: array_map(promises, Q) replaced with array_map(Promise.all(promises).then(Q))
Mutant 1421 in q.js: array_map(promises, Q) replaced with array_map(promises.forEach(Q))
Mutant 1422 in q.js: array_map replaced with array_filter
Mutant 1423 in q.js: array_map replaced with array_reduce
Mutant 1424 in q.js: array_map replaced with array_indexOf
Mutant 1425 in q.js: promises replaced with function rejected(err) {
  return Q(when(err, id, id));
}
Mutant 1426 in q.js: promises replaced with function resolved(result) {
  return Q(when(result, id, id));
}
Mutant 1427 in q.js: Q replaced with null
Mutant 1428 in q.js: Q replaced with function () {}
Mutant 1429 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop))
Mutant 1430 in q.js: when(promise, noop, noop) replaced with when(promise.resolve(noop))
Mutant 1431 in q.js: when(promise, noop, noop) replaced with when(promise.reject(noop))
Mutant 1432 in q.js: promise replaced with null
Mutant 1433 in q.js: promise replaced with 0
Mutant 1434 in q.js: promise replaced with Promise.reject()
Mutant 1435 in q.js: allResolved replaced with fulfilled
Mutant 1436 in q.js: allResolved replaced with rejected
Mutant 1437 in q.js: allResolved replaced with deferred.resolve
Mutant 1438 in q.js: this replaced with any(promises)
Mutant 1439 in q.js: this replaced with all(promises)
Mutant 1440 in q.js: this replaced with allSettled(promises)
Mutant 1441 in q.js: promises replaced with Q.reject(promises)
Mutant 1442 in q.js: promises replaced with Q.allSettled(promises)
Mutant 1443 in q.js: promise replaced with null
Mutant 1444 in q.js: promise replaced with 0
Mutant 1445 in q.js: promise.then(regardless, regardless) replaced with promise.then(regardless, onRejected)
Mutant 1446 in q.js: promise.then(regardless, regardless) replaced with promise.then(onRejected, onFulfilled)
Mutant 1447 in q.js: promise.then(regardless, regardless) replaced with promise.then(promise, onRejected, onFulfilled)
Mutant 1448 in q.js: promise.then replaced with promise["then"]
Mutant 1449 in q.js: regardless replaced with null
Mutant 1450 in q.js: regardless replaced with undefined
Mutant 1451 in q.js: regardless replaced with false
Mutant 1452 in q.js: regardless replaced with onFulfilled
Mutant 1453 in q.js: regardless replaced with onRejected
Mutant 1454 in q.js: regardless replaced with Promise.reject
Mutant 1455 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(null, rejected)
Mutant 1456 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(rejected, null)
Mutant 1457 in q.js: Q(object).then replaced with null
Mutant 1458 in q.js: Q(object).then replaced with undefined
Mutant 1459 in q.js: Q(object).then replaced with Q
Mutant 1460 in q.js: object replaced with Q.reject(void 0)
Mutant 1461 in q.js: object replaced with Q.reject(new Error("Rejected"))
Mutant 1462 in q.js: void 0 replaced with Q.reject
Mutant 1463 in q.js: void 0 replaced with Q.resolve
Mutant 1464 in q.js: void 0 replaced with Q.reject("rejected")
Mutant 1465 in q.js: rejected replaced with undefined
Mutant 1466 in q.js: rejected replaced with null
Mutant 1467 in q.js: void 0 replaced with null
Mutant 1468 in q.js: void 0 replaced with function () {}
Mutant 1469 in q.js: rejected replaced with promise
Mutant 1470 in q.js: rejected replaced with error
Mutant 1471 in q.js: rejected replaced with null
Mutant 1472 in q.js: Q replaced with NaN
Mutant 1473 in q.js: Q replaced with null
Mutant 1474 in q.js: Q replaced with undefined
Mutant 1475 in q.js: object replaced with foo
Mutant 1476 in q.js: object replaced with deferred.notify({})
Mutant 1477 in q.js: object replaced with deferred.notify("foo")
Mutant 1478 in q.js: void 0 replaced with function (value) {
  throw new Error("Intentional error");
}
Mutant 1479 in q.js: void 0 replaced with function (value) {
  return;
}
Mutant 1480 in q.js: void 0 replaced with function (value) {
  return value + 1;
}
Mutant 1481 in q.js: void 0 replaced with promise.inspect()
Mutant 1482 in q.js: void 0 replaced with promise.then(rejected)
Mutant 1483 in q.js: void 0 replaced with null
Mutant 1484 in q.js: progressed replaced with null
Mutant 1485 in q.js: progressed replaced with undefined
Mutant 1486 in q.js: progressed replaced with !promise
Mutant 1487 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(1, 1, progressed)
Mutant 1488 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(progressed, progressed, progressed)
Mutant 1489 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1490 in q.js: this.then replaced with this.catch
Mutant 1491 in q.js: this.then replaced with this.finally
Mutant 1492 in q.js: void 0 replaced with this
Mutant 1493 in q.js: void 0 replaced with null
Mutant 1494 in q.js: void 0 replaced with undefined
Mutant 1495 in q.js: progressed replaced with "always-be-progressed"
Mutant 1496 in q.js: progressed replaced with null
Mutant 1497 in q.js: progressed replaced with undefined
Mutant 1498 in q.js: Q replaced with this
Mutant 1499 in q.js: Q replaced with null
Mutant 1500 in q.js: object replaced with 2
Mutant 1501 in q.js: object replaced with 0
Mutant 1502 in q.js: object replaced with "hello"
Mutant 1503 in q.js: callback replaced with null
Mutant 1504 in q.js: callback replaced with object.nonExistentProperty
Mutant 1505 in q.js: callback replaced with undefined
Mutant 1506 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback || typeof callback.call !== "function"
Mutant 1507 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback || typeof callback.bind !== "function"
Mutant 1508 in q.js: !callback || typeof callback.apply !== "function" replaced with callback !== undefined && typeof callback.apply !== "function"
Mutant 1509 in q.js: Q replaced with Q.length
Mutant 1510 in q.js: callback replaced with undefined
Mutant 1511 in q.js: callback replaced with null
Mutant 1512 in q.js: callback.fcall replaced with callback.call
not replacing callback.fcall with callback.call
not replacing callback.fcall with callback.call
Mutant 1513 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1514 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(null, fulfilled, progress)
Mutant 1515 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, null)
Mutant 1516 in q.js: Q replaced with Q.reject
Mutant 1517 in q.js: Q replaced with 42
Mutant 1518 in q.js: object replaced with new Error("This is a test error")
Mutant 1519 in q.js: object replaced with {}
Mutant 1520 in q.js: fulfilled replaced with rejected
Mutant 1521 in q.js: fulfilled replaced with null
Mutant 1522 in q.js: fulfilled replaced with "rejected"
Mutant 1523 in q.js: rejected replaced with undefined
Mutant 1524 in q.js: rejected replaced with null
Mutant 1525 in q.js: rejected replaced with function () {}
Mutant 1526 in q.js: progress replaced with always(promise)
Mutant 1527 in q.js: progress replaced with reject(promise)
Mutant 1528 in q.js: progress replaced with resolve(promise)
Mutant 1529 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error)
Mutant 1530 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(promise)
Mutant 1531 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error && promise)
Mutant 1532 in q.js: error replaced with error.stack
Mutant 1533 in q.js: error replaced with error.message
Mutant 1534 in q.js: error replaced with null
Mutant 1535 in q.js: promise replaced with 500 + Math.random() * 1000
Mutant 1536 in q.js: Q.onerror replaced with null
Mutant 1537 in q.js: Q.onerror replaced with undefined
Mutant 1538 in q.js: error replaced with error.message
Mutant 1539 in q.js: error replaced with {
  message: error.message,
  name: error.name
}
Mutant 1540 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(null)
Mutant 1541 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(() => {})
Mutant 1542 in q.js: this.then replaced with this.catch
Mutant 1543 in q.js: fulfilled replaced with rejected
Mutant 1544 in q.js: fulfilled replaced with abort()
Mutant 1545 in q.js: rejected replaced with fulfilled
Mutant 1546 in q.js: rejected replaced with undefined
Mutant 1547 in q.js: rejected replaced with null
Mutant 1548 in q.js: progress replaced with undefined
Mutant 1549 in q.js: progress replaced with null
Mutant 1550 in q.js: progress replaced with "rejected"
Mutant 1551 in q.js: onUnhandledError replaced with onUnhandledError.bind(null)
Mutant 1552 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError)
Mutant 1553 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError())
Mutant 1554 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(Q.fcall(onUnhandledError))
Mutant 1555 in q.js: void 0 replaced with null
Mutant 1556 in q.js: void 0 replaced with false
Mutant 1557 in q.js: void 0 replaced with 0
Mutant 1558 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms)
Mutant 1559 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(error)
Mutant 1560 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms + 1000)
Mutant 1561 in q.js: object replaced with null
Mutant 1562 in q.js: object replaced with undefined
Mutant 1563 in q.js: object replaced with {}
Mutant 1564 in q.js: ms replaced with 0
Mutant 1565 in q.js: ms replaced with -1
Mutant 1566 in q.js: ms replaced with NaN
Mutant 1567 in q.js: error replaced with null
Mutant 1568 in q.js: error replaced with undefined
Mutant 1569 in q.js: error replaced with 0
Mutant 1570 in q.js: defer replaced with 0
Mutant 1571 in q.js: defer replaced with "hello"
Mutant 1572 in q.js: defer replaced with void 0
Mutant 1573 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1574 in q.js: !error || "string" === typeof error replaced with error || typeof error !== "string"
Mutant 1575 in q.js: !error || "string" === typeof error replaced with !(error && typeof error === "string")
Mutant 1576 in q.js: deferred.reject replaced with null
Mutant 1577 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1578 in q.js: error replaced with null
Mutant 1579 in q.js: error replaced with 0
Mutant 1580 in q.js: timeoutId replaced with 0
Mutant 1581 in q.js: timeoutId replaced with Infinity
Mutant 1582 in q.js: timeoutId replaced with NaN
Mutant 1583 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1584 in q.js: timeoutId replaced with undefined
Mutant 1585 in q.js: timeoutId replaced with null
Mutant 1586 in q.js: timeoutId replaced with 0
Mutant 1587 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1588 in q.js: deferred.reject replaced with deferred.notify
Mutant 1589 in q.js: exception replaced with promise.fcall().then(function () {})
Mutant 1590 in q.js: exception replaced with promise.fcall(error).then(function () {})
Mutant 1591 in q.js: exception replaced with promise.fcall().then(function () {
  return value;
})
Mutant 1592 in q.js: timeout === void 0 replaced with timeout !== void 0
Mutant 1593 in q.js: timeout === void 0 replaced with timeout !== null
Mutant 1594 in q.js: timeout === void 0 replaced with timeout > 0
Mutant 1595 in q.js: Q replaced with null
Mutant 1596 in q.js: Q replaced with "Q"
Mutant 1597 in q.js: Q replaced with undefined
Mutant 1598 in q.js: object replaced with 1
Mutant 1599 in q.js: object replaced with undefined
Mutant 1600 in q.js: object replaced with "foo"
Mutant 1601 in q.js: timeout replaced with NaN
Mutant 1602 in q.js: timeout replaced with undefined
Mutant 1603 in q.js: timeout replaced with 0
Mutant 1604 in q.js: defer replaced with undefined
Mutant 1605 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1606 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1607 in q.js: deferred.resolve replaced with void 0
Mutant 1608 in q.js: value replaced with null
Mutant 1609 in q.js: value replaced with undefined
Mutant 1610 in q.js: value replaced with new Error()
Mutant 1611 in q.js: callback replaced with null
Mutant 1612 in q.js: callback replaced with undefined
Mutant 1613 in q.js: callback replaced with function () {}
Mutant 1614 in q.js: args replaced with null
Mutant 1615 in q.js: args replaced with 1
Mutant 1616 in q.js: args replaced with args.slice(0)
Mutant 1617 in q.js: args replaced with []
Mutant 1618 in q.js: args replaced with function () {}
Mutant 1619 in q.js: args replaced with undefined
Mutant 1620 in q.js: deferred.makeNodeResolver() replaced with function () {
  throw new Error("error");
}
Mutant 1621 in q.js: deferred.makeNodeResolver() replaced with function () {
  throw new Error("error");
}, true
Mutant 1622 in q.js: deferred.makeNodeResolver() replaced with function (reject, resolve) {
  reject("error");
}, true
Mutant 1623 in q.js: this.fapply(nodeArgs).fail replaced with deferred.reject
Mutant 1624 in q.js: this.fapply(nodeArgs).fail replaced with void 0
Mutant 1625 in q.js: this.fapply replaced with this.nfapply
not replacing this.fapply with this.nfapply
not replacing this.fapply with this.nfapply
Mutant 1626 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1627 in q.js: nodeArgs replaced with nodeArgs.concat(1)
Mutant 1628 in q.js: nodeArgs replaced with nodeArgs[0](null)
Mutant 1629 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1630 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(2))
Mutant 1631 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(args, 2))
Mutant 1632 in q.js: arguments replaced with null
Mutant 1633 in q.js: arguments replaced with undefined
Mutant 1634 in q.js: arguments replaced with []
Mutant 1635 in q.js: Q replaced with global
Mutant 1636 in q.js: Q replaced with Date
Mutant 1637 in q.js: Q replaced with Math
Mutant 1638 in q.js: callback replaced with 0
Mutant 1639 in q.js: callback replaced with null
Mutant 1640 in q.js: callback replaced with void 0
Mutant 1641 in q.js: args replaced with null
Mutant 1642 in q.js: args replaced with []
Mutant 1643 in q.js: args replaced with function () {}
Mutant 1644 in q.js: arguments replaced with undefined
Mutant 1645 in q.js: arguments replaced with null
Mutant 1646 in q.js: arguments replaced with []
Mutant 1647 in q.js: defer replaced with null
Mutant 1648 in q.js: defer replaced with undefined
Mutant 1649 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1650 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1651 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1652 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1653 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1654 in q.js: deferred.makeNodeResolver() replaced with "hello"
Mutant 1655 in q.js: deferred.makeNodeResolver replaced with "foo"
Mutant 1656 in q.js: deferred.makeNodeResolver replaced with deferred.resolve
Mutant 1657 in q.js: deferred.makeNodeResolver replaced with deferred.reject
Mutant 1658 in q.js: this.fapply replaced with this.fcall
Mutant 1659 in q.js: this.fapply replaced with this.fail
Mutant 1660 in q.js: this.fapply replaced with this.done
not replacing this.fapply with this.fcall
not replacing this.fapply with this.fcall
not replacing this.fapply with this.fail
not replacing this.fapply with this.fail
not replacing this.fapply with this.done
not replacing this.fapply with this.done
Mutant 1661 in q.js: nodeArgs replaced with array_slice.call(arguments)
Mutant 1662 in q.js: nodeArgs replaced with Q(arguments).slice()
Mutant 1663 in q.js: nodeArgs replaced with Q.all(arguments).then(array_slice)
Mutant 1664 in q.js: deferred.reject replaced with this.reject
Mutant 1665 in q.js: deferred.reject replaced with resolve
Mutant 1666 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1667 in q.js: callback === undefined replaced with object === null
Mutant 1668 in q.js: callback === undefined replaced with typeof callback !== "function"
Mutant 1669 in q.js: callback === undefined replaced with Array.isArray(callback)
Mutant 1670 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1671 in q.js: array_slice(arguments, 1) replaced with array_slice(args, 0)
Mutant 1672 in q.js: array_slice(arguments, 1) replaced with array_slice([], 1)
Mutant 1673 in q.js: array_slice replaced with doNothing
Mutant 1674 in q.js: arguments replaced with undefined
Mutant 1675 in q.js: arguments replaced with null
Mutant 1676 in q.js: arguments replaced with {}
Mutant 1677 in q.js: 1 replaced with -1
Mutant 1678 in q.js: 1 replaced with 2
Mutant 1679 in q.js: 1 replaced with 0
Mutant 1680 in q.js: array_slice(arguments) replaced with array_slice(arguments).toString()
Mutant 1681 in q.js: array_slice(arguments) replaced with array_slice(arguments).length
Mutant 1682 in q.js: array_slice(arguments) replaced with array_slice(arguments).reverse()
Mutant 1683 in q.js: array_slice replaced with array_shift
Mutant 1684 in q.js: array_slice replaced with array_pop
Mutant 1685 in q.js: array_slice replaced with array_splice
Mutant 1686 in q.js: arguments replaced with "test"
Mutant 1687 in q.js: arguments replaced with 42
Mutant 1688 in q.js: arguments replaced with null
Mutant 1689 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1690 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1691 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().reverse
Mutant 1692 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().nonsensemethod()
Mutant 1693 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {
  throw new Error("mutated");
})
Mutant 1694 in q.js: deferred.makeNodeResolver replaced with timeout + 10
Mutant 1695 in q.js: deferred.makeNodeResolver replaced with "deferred.makeNodeResolver".length
Mutant 1696 in q.js: callback replaced with deferred.reject
Mutant 1697 in q.js: callback replaced with this
Mutant 1698 in q.js: callback replaced with null
Mutant 1699 in q.js: nodeArgs replaced with []
Mutant 1700 in q.js: nodeArgs replaced with [nodeArgs, "foo"]
Mutant 1701 in q.js: nodeArgs replaced with [nodeArgs, nodeArgs.length]
Mutant 1702 in q.js: deferred.reject replaced with 10
Mutant 1703 in q.js: deferred.reject replaced with new Error("simulated error")
Mutant 1704 in q.js: deferred.reject replaced with undefined
Mutant 1705 in q.js: array_slice replaced with function_slice
Mutant 1706 in q.js: arguments replaced with [1, 2, 3]
Mutant 1707 in q.js: arguments replaced with function () {
  return arguments;
}()
Mutant 1708 in q.js: arguments replaced with this.arguments
Mutant 1709 in q.js: args.unshift replaced with args.pop
Mutant 1710 in q.js: args.unshift replaced with args.length = 0
Mutant 1711 in q.js: this replaced with void 0
Mutant 1712 in q.js: this replaced with null
Mutant 1713 in q.js: this replaced with thisp
Mutant 1714 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null)
Mutant 1715 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(undefined)
Mutant 1716 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(function () {})
Mutant 1717 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1718 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1719 in q.js: Q.denodeify.apply replaced with Q.denodeify.then
Mutant 1720 in q.js: void 0 replaced with this
Mutant 1721 in q.js: void 0 replaced with window
Mutant 1722 in q.js: void 0 replaced with functionName
Mutant 1723 in q.js: args replaced with array_slice()
Mutant 1724 in q.js: args replaced with void 0
Mutant 1725 in q.js: args replaced with null
Mutant 1726 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1727 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 0)
Mutant 1728 in q.js: array_slice(arguments, 2) replaced with array_slice(null)
Mutant 1729 in q.js: array_slice replaced with array_reverse
Mutant 1730 in q.js: array_slice replaced with array_filter
Mutant 1731 in q.js: array_slice replaced with array_fill
Mutant 1732 in q.js: arguments replaced with arguments.length
Mutant 1733 in q.js: arguments replaced with arguments[0]
Mutant 1734 in q.js: arguments replaced with null
Mutant 1735 in q.js: 2 replaced with 1
Mutant 1736 in q.js: 2 replaced with NaN
Mutant 1737 in q.js: array_slice(arguments) replaced with []
Mutant 1738 in q.js: array_slice(arguments) replaced with undefined
Mutant 1739 in q.js: array_slice(arguments) replaced with null
Mutant 1740 in q.js: array_slice replaced with array_rows
Mutant 1741 in q.js: array_slice replaced with array_columns
Mutant 1742 in q.js: arguments replaced with [].join()
Mutant 1743 in q.js: arguments replaced with [].concat()
Mutant 1744 in q.js: arguments replaced with "".split()
Mutant 1745 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1746 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1747 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1748 in q.js: deferred.makeNodeResolver() replaced with deferred.clearNodeResolver()
Mutant 1749 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1750 in q.js: deferred.makeNodeResolver replaced with deferred.nodeResolve
Mutant 1751 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments, "random_string")
Mutant 1752 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(null, arguments)
Mutant 1753 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(undefined, arguments)
Mutant 1754 in q.js: callback.apply replaced with callback
Mutant 1755 in q.js: callback.apply replaced with undefined
Mutant 1756 in q.js: thisp replaced with null
Mutant 1757 in q.js: thisp replaced with this
Mutant 1758 in q.js: thisp replaced with undefined
Mutant 1759 in q.js: Q replaced with null
Mutant 1760 in q.js: Q replaced with undefined
Mutant 1761 in q.js: Q replaced with []
Mutant 1762 in q.js: bound replaced with undefined
Mutant 1763 in q.js: bound replaced with null
Mutant 1764 in q.js: bound replaced with true
Mutant 1765 in q.js: nodeArgs replaced with undefined
Mutant 1766 in q.js: nodeArgs replaced with nodeArgs.slice(0)
Mutant 1767 in q.js: deferred.reject replaced with deferred.rejectAll
Mutant 1768 in q.js: deferred.reject replaced with deferred.remove
Mutant 1769 in q.js: deferred.reject replaced with deferred.not
Mutant 1770 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1771 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, -1)
Mutant 1772 in q.js: array_slice(arguments, 0) replaced with array_slice([].slice.call(arguments))
Mutant 1773 in q.js: array_slice replaced with NaN
Mutant 1774 in q.js: arguments replaced with arguments[0]
Mutant 1775 in q.js: arguments replaced with arguments.length
Mutant 1776 in q.js: arguments replaced with arguments[arguments.length - 1]
Mutant 1777 in q.js: 0 replaced with 1
Mutant 1778 in q.js: 0 replaced with args.length
Mutant 1779 in q.js: 0 replaced with null
Mutant 1780 in q.js: args.unshift replaced with thisArg.unshift
Mutant 1781 in q.js: args.unshift replaced with args.push
Mutant 1782 in q.js: args.unshift replaced with varArgs.push
Mutant 1783 in q.js: this replaced with null
Mutant 1784 in q.js: this replaced with undefined
Mutant 1785 in q.js: this replaced with true
Mutant 1786 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this)
Mutant 1787 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null)
Mutant 1788 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(NaN)
Mutant 1789 in q.js: Q.nbind.apply replaced with Promise.prototype.bind
Mutant 1790 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1791 in q.js: void 0 replaced with null
Mutant 1792 in q.js: void 0 replaced with undefined
Mutant 1793 in q.js: void 0 replaced with Q
Mutant 1794 in q.js: args replaced with args || defer()
Mutant 1795 in q.js: args replaced with args, defer()
Mutant 1796 in q.js: args replaced with args && defer()
Mutant 1797 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, [args])
Mutant 1798 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name)
Mutant 1799 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(args)
Mutant 1800 in q.js: Q replaced with undefined
Mutant 1801 in q.js: Q replaced with null
Mutant 1802 in q.js: object replaced with null
Mutant 1803 in q.js: object replaced with {}
Mutant 1804 in q.js: object replaced with "hello"
Mutant 1805 in q.js: name replaced with name * 2
Mutant 1806 in q.js: name replaced with name + "Hello"
Mutant 1807 in q.js: name replaced with name.toUpperCase()
Mutant 1808 in q.js: array_slice replaced with [].slice
Mutant 1809 in q.js: array_slice replaced with Array.slice
Mutant 1810 in q.js: args || [] replaced with undefined
Mutant 1811 in q.js: args || [] replaced with null
Mutant 1812 in q.js: args || [] replaced with []
Mutant 1813 in q.js: defer replaced with deffer
Mutant 1814 in q.js: defer replaced with void 0
Mutant 1815 in q.js: deferred.makeNodeResolver() replaced with function (resolution, message) {
  if (deferred.promise !== undefined) {
    deferred.resolver(resolution, message);
  } else {
    deferred.promise = Q.reject(message);
  }
}
Mutant 1816 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", nodeArgs)
Mutant 1817 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", name)
Mutant 1818 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", name, nodeArgs)
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", nodeArgs)
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", name)
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", name, nodeArgs)
Mutant 1819 in q.js: this.dispatch replaced with this.erencode
Mutant 1820 in q.js: this.dispatch replaced with this.foo
Mutant 1821 in q.js: this.dispatch replaced with void 0
not replacing this.dispatch with this.erencode
not replacing this.dispatch with this.erencode
not replacing this.dispatch with this.foo
not replacing this.dispatch with this.foo
not replacing this.dispatch with void 0
not replacing this.dispatch with void 0
Mutant 1822 in q.js: "post" replaced with "get"
Mutant 1823 in q.js: "post" replaced with "concat"
Mutant 1824 in q.js: "post" replaced with "dispatch"
Mutant 1825 in q.js: [name, nodeArgs] replaced with nodeArgs.concat
Mutant 1826 in q.js: [name, nodeArgs] replaced with [name, ...nodeArgs]
Mutant 1827 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1828 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1829 in q.js: deferred.reject replaced with null
Mutant 1830 in q.js: deferred.reject replaced with deferred.reject("error")
Mutant 1831 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments[2])
Mutant 1832 in q.js: array_slice(arguments, 2) replaced with array_slice(Promise.resolve(arguments[2]))
Mutant 1833 in q.js: array_slice replaced with null
Mutant 1834 in q.js: arguments replaced with "This is a different string"
Mutant 1835 in q.js: arguments replaced with 1 + 1
Mutant 1836 in q.js: arguments replaced with undefined
Mutant 1837 in q.js: 2 replaced with 1
Mutant 1838 in q.js: 2 replaced with -1
Mutant 1839 in q.js: deferred.makeNodeResolver() replaced with this.makeNodeResolver()
Mutant 1840 in q.js: deferred.makeNodeResolver() replaced with JSON.stringify(deferred.makeNodeResolver())
Mutant 1841 in q.js: deferred.makeNodeResolver() replaced with eval("deferred.makeNodeResolver()")
Mutant 1842 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1843 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("put", [name, nodeArgs])
Mutant 1844 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("patch", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("put", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("patch", [name, nodeArgs])
Mutant 1845 in q.js: Q replaced with Q.post
Mutant 1846 in q.js: object replaced with null
Mutant 1847 in q.js: object replaced with false
Mutant 1848 in q.js: object replaced with {}
Mutant 1849 in q.js: "post" replaced with "send"
Mutant 1850 in q.js: "post" replaced with "apply"
Mutant 1851 in q.js: "post" replaced with 99
Mutant 1852 in q.js: [name, nodeArgs] replaced with nodeArgs.concat([name])
Mutant 1853 in q.js: [name, nodeArgs] replaced with nodeArgs.reverse()
Mutant 1854 in q.js: [name, nodeArgs] replaced with Q.ninvoke(nodeArgs.concat([name]))
Mutant 1855 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1856 in q.js: deferred.reject replaced with 1 + 1
Mutant 1857 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1858 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.pop.apply(arguments))
Mutant 1859 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.callee.caller)
Mutant 1860 in q.js: array_slice replaced with this.length
Mutant 1861 in q.js: array_slice replaced with 5
Mutant 1862 in q.js: array_slice replaced with "hello"
Mutant 1863 in q.js: arguments replaced with splice(1)
Mutant 1864 in q.js: arguments replaced with pop()
Mutant 1865 in q.js: 1 replaced with 0
Mutant 1866 in q.js: 1 replaced with undefined
Mutant 1867 in q.js: 1 replaced with 1 + 1
Mutant 1868 in q.js: defer replaced with deferred
Mutant 1869 in q.js: defer replaced with defer.promise
Mutant 1870 in q.js: defer replaced with null
Mutant 1871 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1872 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1873 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1874 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver.call(void 0)
Mutant 1875 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver && deferred.makeNodeResolver()
Mutant 1876 in q.js: deferred.makeNodeResolver() replaced with function () {
  return deferred.makeNodeResolver.apply(null, arguments);
}
Mutant 1877 in q.js: deferred.makeNodeResolver replaced with undefined
Mutant 1878 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1879 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", ["differentName", nodeArgs])
Mutant 1880 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs.concat("differentExtraArg")])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", ["differentName", nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs.concat("differentExtraArg")])
Mutant 1881 in q.js: "post" replaced with "send"
Mutant 1882 in q.js: "post" replaced with "push"
Mutant 1883 in q.js: "post" replaced with "postSend"
Mutant 1884 in q.js: [name, nodeArgs] replaced with [name + "1", nodeArgs]
Mutant 1885 in q.js: [name, nodeArgs] replaced with [null, nodeArgs]
Mutant 1886 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.reverse()]
Mutant 1887 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1888 in q.js: deferred.reject replaced with undefined
Mutant 1889 in q.js: deferred.reject replaced with null
Mutant 1890 in q.js: Q replaced with null
Mutant 1891 in q.js: Q replaced with undefined
Mutant 1892 in q.js: object replaced with null
Mutant 1893 in q.js: object replaced with undefined
Mutant 1894 in q.js: object replaced with {}
Mutant 1895 in q.js: nodeback replaced with Q.fcall
Mutant 1896 in q.js: nodeback replaced with Q.delay
Mutant 1897 in q.js: nodeback replaced with Q.reject
Mutant 1898 in q.js: nodeback replaced with !nodeback
Mutant 1899 in q.js: nodeback replaced with typeof nodeback === 'function'
Mutant 1900 in q.js: nodeback replaced with Object.prototype.toString.call(nodeback) === '[object Function]'
Mutant 1901 in q.js: nodeback(null, value) replaced with nodeback(undefined, undefined)
Mutant 1902 in q.js: nodeback(null, value) replaced with nodeback(true)
Mutant 1903 in q.js: nodeback(null, value) replaced with nodeback(Date.now())
Mutant 1904 in q.js: nodeback replaced with !nodeback
Mutant 1905 in q.js: nodeback replaced with nodeback + 1
Mutant 1906 in q.js: null replaced with true
Mutant 1907 in q.js: null replaced with undefined
Mutant 1908 in q.js: null replaced with 'abc'
Mutant 1909 in q.js: value replaced with null
Mutant 1910 in q.js: value replaced with value + 1
Mutant 1911 in q.js: value replaced with value * 2
Mutant 1912 in q.js: nodeback replaced with null
Mutant 1913 in q.js: nodeback replaced with undefined
Mutant 1914 in q.js: error replaced with error()
Mutant 1915 in q.js: error replaced with null
Mutant 1916 in q.js: error replaced with new Error()
Mutant 1917 in queue.js: Q.defer replaced with Q.reject
Mutant 1918 in queue.js: Q.defer replaced with undefined
Mutant 1919 in queue.js: Q.defer replaced with Q.all
Mutant 1920 in queue.js: Q.defer replaced with Q.reject
Mutant 1921 in queue.js: ends.promise.get replaced with ends.promise.resolve
Mutant 1922 in queue.js: ends.promise.get replaced with ends.promise.reject
Mutant 1923 in queue.js: ends.promise.get replaced with ends.promise.then
Mutant 1924 in queue.js: "head" replaced with "tail"
Mutant 1925 in queue.js: "head" replaced with ends.promise.get("tail").fail
Mutant 1926 in queue.js: "head" replaced with closed.promise.get("tail")
Mutant 1927 in queue.js: ends.promise.get replaced with ends.promise.reject
Mutant 1928 in queue.js: "tail" replaced with ends.promise.get(ends.promise.get("tail"))
Mutant 1929 in queue.js: "tail" replaced with ends.promise.get(undefined)
Mutant 1930 in queue.js: "tail" replaced with ends.promise.get(null)
Mutant 1931 in queue.js: closed.resolve replaced with closed.reject
Mutant 1932 in queue.js: closed.resolve replaced with error
Mutant 1933 in queue.js: error replaced with null
Mutant 1934 in queue.js: error replaced with "*error message*".toUpperCase()
Mutant 1935 in queue.js: error replaced with function (error) {
  throw new Error(error.message.toUpperCase());
}
Mutant 1936 in queue.js: error replaced with null
Mutant 1937 in queue.js: error replaced with undefined
Mutant 1938 in queue.js: error replaced with "error"
Mutant 1939 in queue.js: ends.resolve replaced with null
Mutant 1940 in queue.js: ends.resolve replaced with undefined
[32m01:34:44 (3085) INFO Instrumenter[39m Instrumented 2 source file(s) with 1941 mutant(s)
[32m01:34:45 (3085) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m01:34:47 (3085) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m01:34:47 (3085) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m01:34:53 (3085) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6788 ms, overhead 0 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 20m) 4/1941 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 9m) 5/1941 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 41m) 6/1941 tested (3 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 41m) 8/1941 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 58m) 9/1941 tested (6 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 55m) 11/1941 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 7m) 12/1941 tested (9 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 3m) 14/1941 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 12m) 15/1941 tested (12 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 58m) 18/1941 tested (14 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 5m) 19/1941 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 2m) 21/1941 tested (17 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 8m) 22/1941 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 6m) 24/1941 tested (20 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 11m) 25/1941 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 9m) 27/1941 tested (23 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 13m) 28/1941 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 17m) 29/1941 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 15m) 31/1941 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 18m) 32/1941 tested (28 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 5m) 36/1941 tested (29 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 8m) 37/1941 tested (29 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 17m) 37/1941 tested (29 survived, 1 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 20m) 38/1941 tested (29 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 23m) 39/1941 tested (29 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 31m) 39/1941 tested (29 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 33m) 40/1941 tested (29 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 31m) 42/1941 tested (31 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 33m) 43/1941 tested (32 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 13m) 49/1941 tested (33 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 19m) 49/1941 tested (33 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 21m) 50/1941 tested (33 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 23m) 51/1941 tested (33 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 25m) 52/1941 tested (34 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 12m) 57/1941 tested (35 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 8m) 60/1941 tested (36 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 10m) 61/1941 tested (37 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 8m) 63/1941 tested (39 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 10m) 64/1941 tested (40 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 9m) 66/1941 tested (42 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 11m) 67/1941 tested (43 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 9m) 69/1941 tested (45 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 11m) 70/1941 tested (46 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 10m) 72/1941 tested (48 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 11m) 73/1941 tested (49 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 13m) 74/1941 tested (50 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 14m) 75/1941 tested (51 survived, 6 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 16m) 76/1941 tested (51 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 20m) 76/1941 tested (51 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 21m) 77/1941 tested (51 survived, 8 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 23m) 78/1941 tested (51 survived, 9 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 21m) 80/1941 tested (53 survived, 9 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 22m) 81/1941 tested (54 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 24m) 82/1941 tested (55 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 25m) 83/1941 tested (55 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 28m) 83/1941 tested (55 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 30m) 84/1941 tested (55 survived, 11 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 31m) 85/1941 tested (55 survived, 12 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 34m) 85/1941 tested (55 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 30m) 88/1941 tested (55 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 34m) 88/1941 tested (55 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 32m) 90/1941 tested (56 survived, 14 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 33m) 91/1941 tested (57 survived, 14 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 31m) 93/1941 tested (59 survived, 14 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 32m) 94/1941 tested (60 survived, 14 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 31m) 96/1941 tested (62 survived, 14 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 32m) 97/1941 tested (63 survived, 14 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 30m) 99/1941 tested (65 survived, 14 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 31m) 100/1941 tested (66 survived, 14 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 30m) 102/1941 tested (68 survived, 14 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 31m) 103/1941 tested (69 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 29m) 105/1941 tested (71 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 30m) 106/1941 tested (72 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 29m) 108/1941 tested (74 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 30m) 109/1941 tested (75 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 28m) 111/1941 tested (77 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 29m) 112/1941 tested (78 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 30m) 113/1941 tested (79 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 29m) 115/1941 tested (81 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 29m) 116/1941 tested (82 survived, 14 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 28m) 118/1941 tested (84 survived, 14 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 29m) 119/1941 tested (85 survived, 14 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 28m) 121/1941 tested (87 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 28m) 122/1941 tested (88 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 27m) 124/1941 tested (90 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 28m) 125/1941 tested (91 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 27m) 127/1941 tested (93 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 22m) 131/1941 tested (94 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 21m) 133/1941 tested (95 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 12m) 140/1941 tested (96 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 6m) 146/1941 tested (96 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 8m) 146/1941 tested (96 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 6m) 149/1941 tested (96 survived, 15 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 5m) 151/1941 tested (98 survived, 15 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 6m) 152/1941 tested (99 survived, 15 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 5m) 154/1941 tested (101 survived, 15 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 6m) 155/1941 tested (102 survived, 15 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 5m) 157/1941 tested (104 survived, 15 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 6m) 158/1941 tested (105 survived, 15 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 5m) 160/1941 tested (107 survived, 15 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 6m) 161/1941 tested (108 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 5m) 163/1941 tested (110 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 6m) 164/1941 tested (111 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 5m) 166/1941 tested (113 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 5m) 167/1941 tested (114 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 5m) 169/1941 tested (116 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 5m) 170/1941 tested (117 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 5m) 172/1941 tested (119 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 5m) 173/1941 tested (120 survived, 15 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~3h 5m) 175/1941 tested (122 survived, 15 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~3h 5m) 176/1941 tested (123 survived, 15 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~3h 4m) 178/1941 tested (125 survived, 15 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~3h 5m) 179/1941 tested (126 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 4m) 181/1941 tested (128 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 5m) 182/1941 tested (129 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 5m) 183/1941 tested (130 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 5m) 185/1941 tested (132 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 5m) 186/1941 tested (133 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 4m) 188/1941 tested (135 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 5m) 189/1941 tested (136 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 4m) 191/1941 tested (138 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 5m) 192/1941 tested (139 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 4m) 194/1941 tested (141 survived, 15 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~3h 5m) 195/1941 tested (142 survived, 15 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~3h 4m) 197/1941 tested (144 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 4m) 198/1941 tested (145 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 3m) 201/1941 tested (146 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 2m) 203/1941 tested (148 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 3m) 204/1941 tested (149 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 2m) 206/1941 tested (151 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 2m) 207/1941 tested (152 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 2m) 209/1941 tested (154 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 2m) 210/1941 tested (155 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 2m) 212/1941 tested (157 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 2m) 213/1941 tested (158 survived, 15 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~3h 1m) 215/1941 tested (159 survived, 15 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~3h 2m) 216/1941 tested (159 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 2m) 217/1941 tested (159 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 2m) 219/1941 tested (159 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 2m) 220/1941 tested (159 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 2m) 221/1941 tested (160 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 2m) 223/1941 tested (162 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 2m) 224/1941 tested (163 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 2m) 226/1941 tested (165 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 1m) 228/1941 tested (166 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 1m) 230/1941 tested (168 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 1m) 231/1941 tested (169 survived, 15 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~3h 0m) 233/1941 tested (171 survived, 15 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~3h 1m) 234/1941 tested (172 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 0m) 236/1941 tested (174 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 0m) 237/1941 tested (175 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 0m) 239/1941 tested (177 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 0m) 240/1941 tested (178 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 1m) 241/1941 tested (179 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 0m) 243/1941 tested (181 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 0m) 244/1941 tested (182 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 0m) 246/1941 tested (184 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 0m) 247/1941 tested (185 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 0m) 249/1941 tested (187 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 0m) 250/1941 tested (188 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~2h 59m) 252/1941 tested (190 survived, 15 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~3h 0m) 253/1941 tested (191 survived, 15 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 59m) 255/1941 tested (193 survived, 15 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 59m) 256/1941 tested (194 survived, 15 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 59m) 258/1941 tested (196 survived, 15 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 59m) 259/1941 tested (197 survived, 15 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 59m) 261/1941 tested (199 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 59m) 262/1941 tested (200 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 58m) 264/1941 tested (202 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 59m) 265/1941 tested (203 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 58m) 267/1941 tested (205 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 58m) 268/1941 tested (206 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 58m) 270/1941 tested (208 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~2h 58m) 271/1941 tested (209 survived, 15 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 58m) 273/1941 tested (211 survived, 15 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 58m) 274/1941 tested (212 survived, 15 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 58m) 275/1941 tested (213 survived, 15 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 58m) 277/1941 tested (215 survived, 15 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 58m) 278/1941 tested (216 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 57m) 280/1941 tested (218 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 58m) 281/1941 tested (219 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 57m) 283/1941 tested (221 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 57m) 284/1941 tested (222 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 57m) 286/1941 tested (224 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 57m) 287/1941 tested (225 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~2h 57m) 289/1941 tested (227 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~2h 57m) 290/1941 tested (228 survived, 15 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 56m) 292/1941 tested (230 survived, 15 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 57m) 293/1941 tested (231 survived, 15 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 56m) 295/1941 tested (233 survived, 15 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 56m) 296/1941 tested (234 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 56m) 298/1941 tested (236 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 56m) 299/1941 tested (237 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 56m) 301/1941 tested (239 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 56m) 302/1941 tested (240 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 55m) 304/1941 tested (242 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 56m) 305/1941 tested (243 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 55m) 307/1941 tested (245 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 55m) 308/1941 tested (246 survived, 15 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 54m) 311/1941 tested (247 survived, 15 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 53m) 314/1941 tested (249 survived, 15 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 51m) 318/1941 tested (249 survived, 15 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 50m) 321/1941 tested (251 survived, 15 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 50m) 322/1941 tested (252 survived, 15 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 50m) 324/1941 tested (254 survived, 15 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 50m) 325/1941 tested (255 survived, 15 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 50m) 327/1941 tested (257 survived, 15 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 50m) 328/1941 tested (258 survived, 15 timed out)
Mutation testing 17% (elapsed: ~34m, remaining: ~2h 50m) 330/1941 tested (260 survived, 15 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 50m) 331/1941 tested (261 survived, 15 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 49m) 333/1941 tested (263 survived, 15 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 50m) 334/1941 tested (264 survived, 15 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 50m) 335/1941 tested (265 survived, 15 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 49m) 337/1941 tested (267 survived, 15 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 49m) 338/1941 tested (268 survived, 15 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 49m) 340/1941 tested (270 survived, 15 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 49m) 341/1941 tested (271 survived, 15 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 48m) 345/1941 tested (273 survived, 15 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 47m) 347/1941 tested (274 survived, 15 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 47m) 348/1941 tested (275 survived, 15 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 47m) 350/1941 tested (277 survived, 15 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 47m) 351/1941 tested (278 survived, 15 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 47m) 353/1941 tested (280 survived, 15 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 47m) 354/1941 tested (281 survived, 15 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 46m) 356/1941 tested (283 survived, 15 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 47m) 357/1941 tested (284 survived, 15 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 46m) 359/1941 tested (286 survived, 15 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 46m) 360/1941 tested (287 survived, 15 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 46m) 362/1941 tested (289 survived, 15 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 46m) 363/1941 tested (290 survived, 15 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 44m) 368/1941 tested (291 survived, 15 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 44m) 369/1941 tested (291 survived, 15 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 44m) 371/1941 tested (291 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 44m) 372/1941 tested (291 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 44m) 373/1941 tested (291 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 44m) 374/1941 tested (291 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 44m) 375/1941 tested (291 survived, 16 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 45m) 375/1941 tested (291 survived, 16 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 44m) 379/1941 tested (291 survived, 17 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 43m) 381/1941 tested (293 survived, 17 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 42m) 385/1941 tested (294 survived, 17 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 39m) 392/1941 tested (294 survived, 17 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 38m) 395/1941 tested (294 survived, 17 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 38m) 396/1941 tested (294 survived, 18 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 39m) 396/1941 tested (294 survived, 18 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 38m) 398/1941 tested (294 survived, 19 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 38m) 400/1941 tested (296 survived, 19 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 38m) 401/1941 tested (297 survived, 19 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 38m) 403/1941 tested (299 survived, 19 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 38m) 404/1941 tested (300 survived, 19 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 38m) 406/1941 tested (302 survived, 19 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 37m) 408/1941 tested (303 survived, 19 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 37m) 410/1941 tested (305 survived, 19 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 37m) 411/1941 tested (306 survived, 19 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 38m) 411/1941 tested (306 survived, 19 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 38m) 412/1941 tested (306 survived, 20 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 37m) 414/1941 tested (306 survived, 21 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 38m) 415/1941 tested (307 survived, 21 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 37m) 417/1941 tested (309 survived, 21 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 37m) 418/1941 tested (310 survived, 21 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 37m) 420/1941 tested (312 survived, 21 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 37m) 421/1941 tested (313 survived, 21 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 37m) 423/1941 tested (315 survived, 21 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 37m) 424/1941 tested (316 survived, 21 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 37m) 425/1941 tested (317 survived, 21 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 37m) 427/1941 tested (319 survived, 21 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 37m) 428/1941 tested (320 survived, 21 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 36m) 430/1941 tested (322 survived, 21 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 37m) 431/1941 tested (323 survived, 21 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 36m) 433/1941 tested (325 survived, 21 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 36m) 434/1941 tested (326 survived, 21 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 36m) 436/1941 tested (328 survived, 21 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 36m) 437/1941 tested (329 survived, 21 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 36m) 439/1941 tested (331 survived, 21 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 36m) 440/1941 tested (332 survived, 21 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 36m) 442/1941 tested (334 survived, 21 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 36m) 443/1941 tested (335 survived, 21 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 34m) 447/1941 tested (336 survived, 21 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 35m) 447/1941 tested (336 survived, 21 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 35m) 449/1941 tested (337 survived, 22 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 35m) 449/1941 tested (337 survived, 22 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 35m) 451/1941 tested (338 survived, 23 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 35m) 452/1941 tested (339 survived, 23 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 35m) 454/1941 tested (340 survived, 23 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 35m) 455/1941 tested (340 survived, 24 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 33m) 459/1941 tested (340 survived, 24 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 34m) 460/1941 tested (340 survived, 24 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 34m) 461/1941 tested (340 survived, 25 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 34m) 461/1941 tested (340 survived, 25 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 33m) 464/1941 tested (340 survived, 26 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 33m) 465/1941 tested (340 survived, 27 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 34m) 465/1941 tested (340 survived, 27 timed out)
Mutation testing 24% (elapsed: ~48m, remaining: ~2h 34m) 466/1941 tested (340 survived, 28 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 34m) 467/1941 tested (340 survived, 29 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 34m) 468/1941 tested (341 survived, 29 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 34m) 470/1941 tested (343 survived, 29 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 34m) 471/1941 tested (344 survived, 29 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 34m) 473/1941 tested (346 survived, 29 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 34m) 473/1941 tested (346 survived, 29 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 34m) 474/1941 tested (346 survived, 30 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 34m) 475/1941 tested (346 survived, 31 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 34m) 477/1941 tested (346 survived, 31 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 34m) 478/1941 tested (346 survived, 31 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 34m) 480/1941 tested (348 survived, 31 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 34m) 481/1941 tested (349 survived, 31 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 33m) 483/1941 tested (351 survived, 31 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 34m) 484/1941 tested (352 survived, 31 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 33m) 486/1941 tested (354 survived, 31 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 33m) 487/1941 tested (355 survived, 31 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 33m) 489/1941 tested (357 survived, 31 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 33m) 490/1941 tested (358 survived, 31 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 33m) 491/1941 tested (359 survived, 31 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 33m) 493/1941 tested (361 survived, 31 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 33m) 494/1941 tested (362 survived, 31 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 32m) 496/1941 tested (364 survived, 31 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 33m) 497/1941 tested (365 survived, 31 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 32m) 499/1941 tested (367 survived, 31 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 32m) 500/1941 tested (368 survived, 31 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 32m) 502/1941 tested (370 survived, 31 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 32m) 503/1941 tested (371 survived, 31 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 32m) 505/1941 tested (373 survived, 31 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 32m) 506/1941 tested (374 survived, 31 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 31m) 508/1941 tested (376 survived, 31 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 31m) 509/1941 tested (377 survived, 31 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 31m) 511/1941 tested (379 survived, 31 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 31m) 512/1941 tested (380 survived, 31 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 31m) 514/1941 tested (382 survived, 31 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 31m) 515/1941 tested (383 survived, 31 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 31m) 517/1941 tested (385 survived, 31 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 31m) 518/1941 tested (386 survived, 31 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 30m) 520/1941 tested (388 survived, 31 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 30m) 521/1941 tested (389 survived, 31 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 30m) 523/1941 tested (391 survived, 31 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 30m) 524/1941 tested (392 survived, 31 timed out)
Mutation testing 27% (elapsed: ~55m, remaining: ~2h 30m) 525/1941 tested (393 survived, 31 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 30m) 527/1941 tested (395 survived, 31 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 30m) 528/1941 tested (396 survived, 31 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 29m) 530/1941 tested (398 survived, 31 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 30m) 531/1941 tested (399 survived, 31 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 29m) 533/1941 tested (401 survived, 31 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 29m) 534/1941 tested (402 survived, 31 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 29m) 536/1941 tested (404 survived, 31 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 29m) 537/1941 tested (405 survived, 31 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 29m) 539/1941 tested (407 survived, 31 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 29m) 540/1941 tested (408 survived, 31 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 28m) 542/1941 tested (410 survived, 31 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 28m) 543/1941 tested (411 survived, 31 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 28m) 545/1941 tested (413 survived, 31 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 28m) 546/1941 tested (414 survived, 31 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 28m) 548/1941 tested (416 survived, 31 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 28m) 549/1941 tested (417 survived, 31 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 27m) 551/1941 tested (419 survived, 31 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 28m) 552/1941 tested (420 survived, 31 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 27m) 554/1941 tested (422 survived, 31 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 27m) 555/1941 tested (423 survived, 31 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 27m) 557/1941 tested (425 survived, 31 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 27m) 558/1941 tested (426 survived, 31 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 27m) 560/1941 tested (428 survived, 31 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 27m) 561/1941 tested (429 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 27m) 562/1941 tested (430 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 26m) 565/1941 tested (431 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 26m) 566/1941 tested (431 survived, 32 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 26m) 566/1941 tested (431 survived, 32 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 26m) 568/1941 tested (431 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 26m) 569/1941 tested (431 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 27m) 569/1941 tested (431 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 27m) 570/1941 tested (431 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 27m) 571/1941 tested (431 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 27m) 571/1941 tested (431 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 27m) 572/1941 tested (431 survived, 37 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 27m) 573/1941 tested (431 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 27m) 574/1941 tested (432 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 27m) 575/1941 tested (433 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 27m) 577/1941 tested (435 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 27m) 578/1941 tested (436 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 27m) 580/1941 tested (438 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 27m) 581/1941 tested (439 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 26m) 583/1941 tested (441 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 26m) 584/1941 tested (442 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 26m) 586/1941 tested (444 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 26m) 587/1941 tested (445 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 26m) 588/1941 tested (446 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 26m) 590/1941 tested (446 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 26m) 590/1941 tested (446 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 26m) 591/1941 tested (446 survived, 40 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 26m) 592/1941 tested (446 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 26m) 592/1941 tested (446 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 26m) 593/1941 tested (446 survived, 42 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 26m) 595/1941 tested (448 survived, 42 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 26m) 596/1941 tested (449 survived, 42 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 26m) 598/1941 tested (451 survived, 42 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 26m) 599/1941 tested (451 survived, 42 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 26m) 600/1941 tested (451 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 5m, remaining: ~2h 26m) 602/1941 tested (452 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 5m, remaining: ~2h 25m) 604/1941 tested (453 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 26m) 604/1941 tested (453 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 26m) 605/1941 tested (453 survived, 43 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 26m) 606/1941 tested (453 survived, 44 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 26m) 606/1941 tested (453 survived, 44 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 26m) 607/1941 tested (453 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 26m) 609/1941 tested (453 survived, 46 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 26m) 610/1941 tested (453 survived, 46 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 26m) 611/1941 tested (453 survived, 46 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 26m) 612/1941 tested (453 survived, 47 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 26m) 612/1941 tested (453 survived, 47 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 26m) 614/1941 tested (454 survived, 48 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 26m) 615/1941 tested (455 survived, 48 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 25m) 617/1941 tested (457 survived, 48 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 25m) 618/1941 tested (458 survived, 48 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 25m) 619/1941 tested (459 survived, 48 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 25m) 620/1941 tested (459 survived, 49 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 26m) 620/1941 tested (459 survived, 49 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 26m) 621/1941 tested (459 survived, 50 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 26m) 622/1941 tested (459 survived, 51 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 26m) 622/1941 tested (459 survived, 51 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 26m) 623/1941 tested (459 survived, 52 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 26m) 624/1941 tested (459 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 26m) 625/1941 tested (459 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 26m) 626/1941 tested (459 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 26m) 627/1941 tested (460 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 26m) 629/1941 tested (462 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 26m) 630/1941 tested (463 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 26m) 630/1941 tested (463 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 26m) 631/1941 tested (463 survived, 54 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 26m) 632/1941 tested (463 survived, 55 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 633/1941 tested (463 survived, 55 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 634/1941 tested (463 survived, 56 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 635/1941 tested (463 survived, 56 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 636/1941 tested (463 survived, 57 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 27m) 636/1941 tested (463 survived, 57 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 27m) 637/1941 tested (463 survived, 58 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 26m) 639/1941 tested (463 survived, 59 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 27m) 639/1941 tested (463 survived, 59 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 27m) 640/1941 tested (463 survived, 60 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 27m) 641/1941 tested (463 survived, 61 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 27m) 641/1941 tested (463 survived, 61 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 27m) 643/1941 tested (464 survived, 62 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 27m) 643/1941 tested (464 survived, 62 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 27m) 644/1941 tested (464 survived, 63 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 27m) 644/1941 tested (464 survived, 63 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 27m) 645/1941 tested (464 survived, 64 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 27m) 646/1941 tested (464 survived, 65 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 28m) 646/1941 tested (464 survived, 65 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 28m) 647/1941 tested (464 survived, 66 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 27m) 648/1941 tested (464 survived, 67 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 28m) 648/1941 tested (464 survived, 67 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 28m) 649/1941 tested (464 survived, 68 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 28m) 650/1941 tested (464 survived, 69 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 28m) 650/1941 tested (464 survived, 69 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 28m) 651/1941 tested (464 survived, 70 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 28m) 652/1941 tested (464 survived, 71 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 28m) 652/1941 tested (464 survived, 71 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 28m) 653/1941 tested (464 survived, 72 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 28m) 654/1941 tested (464 survived, 73 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 28m) 655/1941 tested (465 survived, 73 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 28m) 657/1941 tested (467 survived, 73 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 28m) 658/1941 tested (468 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 28m) 660/1941 tested (470 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 28m) 661/1941 tested (471 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 663/1941 tested (473 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 664/1941 tested (474 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 666/1941 tested (476 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 667/1941 tested (477 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 669/1941 tested (479 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 670/1941 tested (480 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 26m) 672/1941 tested (482 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 26m) 673/1941 tested (483 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 26m) 675/1941 tested (485 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 26m) 676/1941 tested (486 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 25m) 678/1941 tested (488 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 25m) 679/1941 tested (489 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 18m, remaining: ~2h 25m) 681/1941 tested (491 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 18m, remaining: ~2h 25m) 682/1941 tested (492 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 25m) 683/1941 tested (493 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 25m) 685/1941 tested (495 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 25m) 686/1941 tested (496 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 24m) 688/1941 tested (498 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 24m) 689/1941 tested (499 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 24m) 691/1941 tested (501 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 24m) 692/1941 tested (502 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 24m) 694/1941 tested (504 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 24m) 695/1941 tested (505 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 23m) 697/1941 tested (507 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 23m) 698/1941 tested (508 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 20m, remaining: ~2h 23m) 700/1941 tested (510 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 23m) 701/1941 tested (511 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 22m) 703/1941 tested (513 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 22m) 704/1941 tested (514 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 22m) 706/1941 tested (516 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 22m) 707/1941 tested (517 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 22m) 709/1941 tested (519 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 22m) 710/1941 tested (520 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 21m) 712/1941 tested (522 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 21m) 713/1941 tested (523 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 21m) 715/1941 tested (525 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 21m) 716/1941 tested (526 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 21m) 717/1941 tested (527 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 21m) 719/1941 tested (529 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 21m) 720/1941 tested (530 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 20m) 722/1941 tested (532 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 20m) 723/1941 tested (533 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 20m) 725/1941 tested (535 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 20m) 726/1941 tested (536 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 19m) 728/1941 tested (538 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 19m) 729/1941 tested (539 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 19m) 731/1941 tested (541 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 19m) 732/1941 tested (542 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 19m) 734/1941 tested (544 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 19m) 735/1941 tested (545 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 25m, remaining: ~2h 18m) 737/1941 tested (547 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 18m) 738/1941 tested (548 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 18m) 740/1941 tested (550 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 18m) 741/1941 tested (551 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 18m) 743/1941 tested (552 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 16m) 748/1941 tested (552 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 16m) 750/1941 tested (554 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 16m) 751/1941 tested (555 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 16m) 753/1941 tested (557 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 16m) 754/1941 tested (558 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 15m) 756/1941 tested (560 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 26m, remaining: ~2h 15m) 757/1941 tested (561 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 15m) 759/1941 tested (563 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 15m) 760/1941 tested (564 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 15m) 762/1941 tested (566 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 15m) 763/1941 tested (567 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 15m) 764/1941 tested (568 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 14m) 766/1941 tested (570 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 14m) 767/1941 tested (571 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 14m) 769/1941 tested (573 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 14m) 770/1941 tested (574 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 14m) 772/1941 tested (576 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 13m) 773/1941 tested (577 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 13m) 775/1941 tested (579 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 29m, remaining: ~2h 13m) 776/1941 tested (580 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 13m) 779/1941 tested (582 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 12m) 780/1941 tested (583 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 12m) 782/1941 tested (585 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 12m) 784/1941 tested (586 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 12m) 785/1941 tested (587 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 11m) 787/1941 tested (589 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 11m) 788/1941 tested (590 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 11m) 789/1941 tested (591 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 11m) 791/1941 tested (593 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 11m) 792/1941 tested (594 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 11m) 794/1941 tested (595 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 31m, remaining: ~2h 11m) 795/1941 tested (596 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 10m) 797/1941 tested (597 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 10m) 798/1941 tested (598 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 10m) 800/1941 tested (600 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 10m) 801/1941 tested (601 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 10m) 803/1941 tested (603 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 10m) 804/1941 tested (604 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 10m) 805/1941 tested (605 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 10m) 806/1941 tested (605 survived, 74 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 10m) 806/1941 tested (605 survived, 74 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 10m) 807/1941 tested (605 survived, 75 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 10m) 808/1941 tested (605 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 33m, remaining: ~2h 10m) 808/1941 tested (605 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 33m, remaining: ~2h 10m) 809/1941 tested (605 survived, 77 timed out)
Mutation testing 41% (elapsed: ~1h 33m, remaining: ~2h 10m) 810/1941 tested (605 survived, 78 timed out)
Mutation testing 41% (elapsed: ~1h 33m, remaining: ~2h 10m) 811/1941 tested (606 survived, 78 timed out)
Mutation testing 41% (elapsed: ~1h 33m, remaining: ~2h 10m) 811/1941 tested (606 survived, 78 timed out)
Mutation testing 41% (elapsed: ~1h 33m, remaining: ~2h 10m) 813/1941 tested (607 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 34m, remaining: ~2h 10m) 814/1941 tested (608 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 9m) 816/1941 tested (610 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 9m) 817/1941 tested (611 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 8m) 821/1941 tested (613 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 8m) 822/1941 tested (614 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 8m) 826/1941 tested (615 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 7m) 828/1941 tested (616 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 7m) 830/1941 tested (618 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 7m) 831/1941 tested (619 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 7m) 833/1941 tested (621 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 6m) 834/1941 tested (622 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 35m, remaining: ~2h 6m) 836/1941 tested (624 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 6m) 837/1941 tested (625 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 6m) 839/1941 tested (627 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 6m) 840/1941 tested (628 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 5m) 842/1941 tested (630 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 5m) 843/1941 tested (631 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 5m) 845/1941 tested (633 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 5m) 846/1941 tested (634 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 5m) 847/1941 tested (635 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 5m) 849/1941 tested (637 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 5m) 850/1941 tested (638 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 4m) 852/1941 tested (640 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 4m) 853/1941 tested (641 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 38m, remaining: ~2h 4m) 854/1941 tested (641 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 4m) 855/1941 tested (642 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 4m) 857/1941 tested (644 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 4m) 858/1941 tested (645 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 4m) 860/1941 tested (647 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 3m) 861/1941 tested (648 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 3m) 862/1941 tested (649 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 3m) 863/1941 tested (650 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 3m) 864/1941 tested (650 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 3m) 866/1941 tested (652 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 3m) 867/1941 tested (653 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 3m) 869/1941 tested (655 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 40m, remaining: ~2h 3m) 870/1941 tested (656 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 40m, remaining: ~2h 2m) 872/1941 tested (658 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 40m, remaining: ~2h 3m) 872/1941 tested (658 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 40m, remaining: ~2h 2m) 873/1941 tested (658 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 2m) 874/1941 tested (658 survived, 83 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 3m) 874/1941 tested (658 survived, 83 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 3m) 875/1941 tested (658 survived, 84 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 3m) 875/1941 tested (658 survived, 84 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 3m) 876/1941 tested (658 survived, 85 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 3m) 877/1941 tested (658 survived, 86 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 3m) 877/1941 tested (658 survived, 86 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 3m) 879/1941 tested (659 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 2m) 880/1941 tested (660 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 2m) 882/1941 tested (662 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 2m) 883/1941 tested (663 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 2m) 885/1941 tested (665 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 2m) 886/1941 tested (666 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 1m) 888/1941 tested (668 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 43m, remaining: ~2h 1m) 889/1941 tested (669 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 43m, remaining: ~2h 1m) 891/1941 tested (671 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 43m, remaining: ~2h 1m) 892/1941 tested (672 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~2h 1m) 894/1941 tested (674 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~2h 1m) 895/1941 tested (675 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~2h 0m) 897/1941 tested (677 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~2h 0m) 898/1941 tested (678 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~2h 0m) 900/1941 tested (680 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~2h 0m) 901/1941 tested (681 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~2h 0m) 903/1941 tested (683 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~2h 0m) 904/1941 tested (684 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~2h 0m) 905/1941 tested (685 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 45m, remaining: ~1h 59m) 907/1941 tested (687 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 45m, remaining: ~1h 59m) 908/1941 tested (688 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 45m, remaining: ~1h 59m) 910/1941 tested (690 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 45m, remaining: ~1h 59m) 911/1941 tested (691 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 58m) 913/1941 tested (693 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 58m) 914/1941 tested (694 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 58m) 916/1941 tested (696 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 58m) 917/1941 tested (697 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 58m) 919/1941 tested (699 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 58m) 920/1941 tested (700 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 57m) 922/1941 tested (702 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 57m) 923/1941 tested (702 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 47m, remaining: ~1h 57m) 924/1941 tested (702 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 47m, remaining: ~1h 57m) 926/1941 tested (702 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 47m, remaining: ~1h 57m) 927/1941 tested (702 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 47m, remaining: ~1h 57m) 928/1941 tested (702 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 47m, remaining: ~1h 57m) 930/1941 tested (702 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 47m, remaining: ~1h 56m) 931/1941 tested (702 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 56m) 933/1941 tested (702 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 56m) 934/1941 tested (702 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 56m) 935/1941 tested (703 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 56m) 937/1941 tested (705 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 56m) 938/1941 tested (706 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 55m) 940/1941 tested (708 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 49m, remaining: ~1h 55m) 941/1941 tested (709 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 49m, remaining: ~1h 55m) 943/1941 tested (711 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 49m, remaining: ~1h 55m) 944/1941 tested (712 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 49m, remaining: ~1h 55m) 946/1941 tested (714 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 49m, remaining: ~1h 55m) 947/1941 tested (715 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 49m, remaining: ~1h 54m) 949/1941 tested (717 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 50m, remaining: ~1h 54m) 950/1941 tested (718 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 54m) 952/1941 tested (720 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 54m) 953/1941 tested (721 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 54m) 955/1941 tested (723 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 54m) 956/1941 tested (724 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 53m) 958/1941 tested (726 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 51m, remaining: ~1h 53m) 959/1941 tested (727 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 51m, remaining: ~1h 53m) 960/1941 tested (728 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 51m, remaining: ~1h 53m) 962/1941 tested (730 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 51m, remaining: ~1h 53m) 963/1941 tested (731 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 51m, remaining: ~1h 52m) 965/1941 tested (733 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 51m, remaining: ~1h 52m) 966/1941 tested (734 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 52m, remaining: ~1h 52m) 968/1941 tested (736 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 52m, remaining: ~1h 52m) 969/1941 tested (737 survived, 87 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 52m) 971/1941 tested (739 survived, 87 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 52m) 972/1941 tested (740 survived, 87 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 51m) 974/1941 tested (742 survived, 87 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 51m) 975/1941 tested (743 survived, 87 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 51m) 977/1941 tested (745 survived, 87 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 51m) 978/1941 tested (746 survived, 87 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 51m) 980/1941 tested (748 survived, 87 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 51m) 981/1941 tested (749 survived, 87 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 50m) 983/1941 tested (751 survived, 87 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 50m) 984/1941 tested (752 survived, 87 timed out)
Mutation testing 50% (elapsed: ~1h 54m, remaining: ~1h 50m) 986/1941 tested (754 survived, 87 timed out)
Mutation testing 50% (elapsed: ~1h 54m, remaining: ~1h 50m) 987/1941 tested (755 survived, 87 timed out)
Mutation testing 50% (elapsed: ~1h 54m, remaining: ~1h 50m) 989/1941 tested (757 survived, 87 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 49m) 990/1941 tested (758 survived, 87 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 49m) 992/1941 tested (760 survived, 87 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 49m) 993/1941 tested (761 survived, 87 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 49m) 994/1941 tested (762 survived, 87 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 49m) 996/1941 tested (764 survived, 87 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 49m) 997/1941 tested (765 survived, 87 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 48m) 999/1941 tested (767 survived, 87 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 48m) 1000/1941 tested (768 survived, 87 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 48m) 1002/1941 tested (770 survived, 87 timed out)
Mutation testing 51% (elapsed: ~1h 56m, remaining: ~1h 48m) 1003/1941 tested (771 survived, 87 timed out)
Mutation testing 51% (elapsed: ~1h 56m, remaining: ~1h 48m) 1005/1941 tested (773 survived, 87 timed out)
Mutation testing 51% (elapsed: ~1h 56m, remaining: ~1h 48m) 1006/1941 tested (774 survived, 87 timed out)
Mutation testing 51% (elapsed: ~1h 56m, remaining: ~1h 47m) 1008/1941 tested (776 survived, 87 timed out)
Mutation testing 51% (elapsed: ~1h 56m, remaining: ~1h 47m) 1009/1941 tested (777 survived, 87 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 47m) 1011/1941 tested (779 survived, 87 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 47m) 1012/1941 tested (780 survived, 87 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 47m) 1014/1941 tested (782 survived, 87 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 47m) 1015/1941 tested (783 survived, 87 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 46m) 1017/1941 tested (785 survived, 87 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 46m) 1018/1941 tested (786 survived, 87 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 46m) 1020/1941 tested (788 survived, 87 timed out)
Mutation testing 52% (elapsed: ~1h 58m, remaining: ~1h 46m) 1021/1941 tested (789 survived, 87 timed out)
Mutation testing 52% (elapsed: ~1h 58m, remaining: ~1h 46m) 1023/1941 tested (791 survived, 87 timed out)
Mutation testing 52% (elapsed: ~1h 58m, remaining: ~1h 45m) 1024/1941 tested (792 survived, 87 timed out)
Mutation testing 52% (elapsed: ~1h 58m, remaining: ~1h 45m) 1026/1941 tested (794 survived, 87 timed out)
Mutation testing 52% (elapsed: ~1h 58m, remaining: ~1h 45m) 1027/1941 tested (795 survived, 87 timed out)
Mutation testing 52% (elapsed: ~1h 58m, remaining: ~1h 45m) 1028/1941 tested (796 survived, 87 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 45m) 1030/1941 tested (798 survived, 87 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 45m) 1031/1941 tested (799 survived, 87 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 44m) 1033/1941 tested (801 survived, 87 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 44m) 1034/1941 tested (802 survived, 87 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 44m) 1036/1941 tested (804 survived, 87 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 44m) 1037/1941 tested (805 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 0m, remaining: ~1h 44m) 1039/1941 tested (807 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 0m, remaining: ~1h 44m) 1040/1941 tested (808 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 0m, remaining: ~1h 43m) 1042/1941 tested (810 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 0m, remaining: ~1h 43m) 1043/1941 tested (811 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 0m, remaining: ~1h 43m) 1045/1941 tested (813 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 0m, remaining: ~1h 43m) 1046/1941 tested (814 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 1m, remaining: ~1h 43m) 1048/1941 tested (816 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 43m) 1049/1941 tested (817 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 42m) 1051/1941 tested (819 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 42m) 1052/1941 tested (820 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 42m) 1054/1941 tested (822 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 42m) 1055/1941 tested (823 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 2m, remaining: ~1h 42m) 1057/1941 tested (825 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 2m, remaining: ~1h 41m) 1058/1941 tested (826 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 2m, remaining: ~1h 41m) 1060/1941 tested (828 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 2m, remaining: ~1h 41m) 1061/1941 tested (829 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 2m, remaining: ~1h 41m) 1062/1941 tested (830 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 2m, remaining: ~1h 41m) 1064/1941 tested (832 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 3m, remaining: ~1h 41m) 1065/1941 tested (833 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 3m, remaining: ~1h 40m) 1067/1941 tested (835 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 40m) 1068/1941 tested (836 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 40m) 1070/1941 tested (838 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 40m) 1071/1941 tested (839 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 40m) 1073/1941 tested (841 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 4m, remaining: ~1h 40m) 1074/1941 tested (842 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 4m, remaining: ~1h 39m) 1076/1941 tested (844 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 4m, remaining: ~1h 39m) 1077/1941 tested (845 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 4m, remaining: ~1h 39m) 1079/1941 tested (847 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 4m, remaining: ~1h 39m) 1080/1941 tested (848 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 4m, remaining: ~1h 39m) 1082/1941 tested (850 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 5m, remaining: ~1h 39m) 1083/1941 tested (851 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 5m, remaining: ~1h 38m) 1085/1941 tested (853 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 5m, remaining: ~1h 38m) 1086/1941 tested (854 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 38m) 1088/1941 tested (856 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 38m) 1089/1941 tested (857 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 38m) 1091/1941 tested (859 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 6m, remaining: ~1h 37m) 1092/1941 tested (860 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 6m, remaining: ~1h 37m) 1094/1941 tested (862 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 6m, remaining: ~1h 37m) 1095/1941 tested (863 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 6m, remaining: ~1h 37m) 1096/1941 tested (864 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 6m, remaining: ~1h 37m) 1098/1941 tested (866 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 6m, remaining: ~1h 37m) 1099/1941 tested (867 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 7m, remaining: ~1h 36m) 1101/1941 tested (869 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 7m, remaining: ~1h 36m) 1102/1941 tested (870 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 7m, remaining: ~1h 36m) 1104/1941 tested (872 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 7m, remaining: ~1h 36m) 1105/1941 tested (873 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 36m) 1107/1941 tested (875 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 36m) 1108/1941 tested (876 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 8m, remaining: ~1h 35m) 1110/1941 tested (878 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 8m, remaining: ~1h 35m) 1111/1941 tested (879 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 8m, remaining: ~1h 35m) 1113/1941 tested (881 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 8m, remaining: ~1h 35m) 1114/1941 tested (882 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 8m, remaining: ~1h 35m) 1116/1941 tested (884 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 8m, remaining: ~1h 35m) 1117/1941 tested (885 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 9m, remaining: ~1h 34m) 1119/1941 tested (887 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 9m, remaining: ~1h 34m) 1120/1941 tested (888 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 9m, remaining: ~1h 34m) 1122/1941 tested (890 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 9m, remaining: ~1h 34m) 1123/1941 tested (891 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 9m, remaining: ~1h 34m) 1125/1941 tested (893 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 33m) 1126/1941 tested (894 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 33m) 1128/1941 tested (896 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 33m) 1129/1941 tested (897 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 33m) 1131/1941 tested (899 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 33m) 1132/1941 tested (900 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 33m) 1133/1941 tested (901 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 32m) 1135/1941 tested (903 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 11m, remaining: ~1h 32m) 1136/1941 tested (904 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 11m, remaining: ~1h 32m) 1138/1941 tested (906 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 11m, remaining: ~1h 32m) 1139/1941 tested (907 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 11m, remaining: ~1h 32m) 1141/1941 tested (909 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 11m, remaining: ~1h 32m) 1142/1941 tested (910 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 11m, remaining: ~1h 31m) 1144/1941 tested (912 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 12m, remaining: ~1h 31m) 1145/1941 tested (913 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 31m) 1147/1941 tested (915 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 31m) 1148/1941 tested (916 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 31m) 1150/1941 tested (918 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 31m) 1151/1941 tested (919 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 30m) 1153/1941 tested (921 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 13m, remaining: ~1h 30m) 1154/1941 tested (922 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 13m, remaining: ~1h 30m) 1156/1941 tested (924 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 13m, remaining: ~1h 30m) 1157/1941 tested (925 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 13m, remaining: ~1h 30m) 1159/1941 tested (927 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 13m, remaining: ~1h 29m) 1160/1941 tested (928 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 13m, remaining: ~1h 29m) 1162/1941 tested (930 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 14m, remaining: ~1h 29m) 1163/1941 tested (931 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 29m) 1165/1941 tested (933 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 29m) 1166/1941 tested (934 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 29m) 1167/1941 tested (935 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 28m) 1169/1941 tested (937 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 28m) 1170/1941 tested (938 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 15m, remaining: ~1h 28m) 1172/1941 tested (940 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 15m, remaining: ~1h 28m) 1173/1941 tested (941 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 15m, remaining: ~1h 28m) 1175/1941 tested (943 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 15m, remaining: ~1h 28m) 1176/1941 tested (944 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 15m, remaining: ~1h 27m) 1178/1941 tested (946 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 15m, remaining: ~1h 27m) 1179/1941 tested (947 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 16m, remaining: ~1h 27m) 1181/1941 tested (949 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 16m, remaining: ~1h 27m) 1182/1941 tested (950 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 16m, remaining: ~1h 27m) 1184/1941 tested (952 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 27m) 1185/1941 tested (953 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 26m) 1187/1941 tested (955 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 26m) 1188/1941 tested (956 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 17m, remaining: ~1h 26m) 1190/1941 tested (958 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 17m, remaining: ~1h 26m) 1191/1941 tested (959 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 17m, remaining: ~1h 26m) 1193/1941 tested (961 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 17m, remaining: ~1h 26m) 1194/1941 tested (962 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 17m, remaining: ~1h 25m) 1196/1941 tested (964 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 17m, remaining: ~1h 25m) 1197/1941 tested (965 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 18m, remaining: ~1h 25m) 1199/1941 tested (967 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 18m, remaining: ~1h 25m) 1200/1941 tested (968 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 18m, remaining: ~1h 25m) 1201/1941 tested (969 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 18m, remaining: ~1h 24m) 1203/1941 tested (971 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 24m) 1204/1941 tested (972 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 24m) 1206/1941 tested (974 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 19m, remaining: ~1h 24m) 1207/1941 tested (975 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 19m, remaining: ~1h 24m) 1209/1941 tested (977 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 19m, remaining: ~1h 24m) 1210/1941 tested (978 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 19m, remaining: ~1h 23m) 1212/1941 tested (980 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 19m, remaining: ~1h 23m) 1213/1941 tested (981 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 19m, remaining: ~1h 23m) 1215/1941 tested (983 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 20m, remaining: ~1h 23m) 1216/1941 tested (984 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 20m, remaining: ~1h 23m) 1218/1941 tested (986 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 20m, remaining: ~1h 23m) 1219/1941 tested (987 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 20m, remaining: ~1h 22m) 1221/1941 tested (989 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 20m, remaining: ~1h 22m) 1222/1941 tested (990 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 22m) 1224/1941 tested (992 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 21m, remaining: ~1h 22m) 1225/1941 tested (993 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 21m, remaining: ~1h 22m) 1227/1941 tested (995 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 21m, remaining: ~1h 22m) 1228/1941 tested (996 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 21m, remaining: ~1h 21m) 1230/1941 tested (998 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 21m, remaining: ~1h 21m) 1231/1941 tested (999 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 21m, remaining: ~1h 21m) 1233/1941 tested (1001 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 22m, remaining: ~1h 21m) 1234/1941 tested (1002 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 22m, remaining: ~1h 21m) 1235/1941 tested (1003 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 22m, remaining: ~1h 21m) 1237/1941 tested (1005 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 22m, remaining: ~1h 20m) 1238/1941 tested (1006 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 22m, remaining: ~1h 20m) 1240/1941 tested (1008 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 22m, remaining: ~1h 20m) 1241/1941 tested (1009 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 23m, remaining: ~1h 20m) 1243/1941 tested (1011 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 23m, remaining: ~1h 20m) 1244/1941 tested (1012 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 23m, remaining: ~1h 19m) 1246/1941 tested (1014 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 23m, remaining: ~1h 19m) 1247/1941 tested (1015 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 23m, remaining: ~1h 19m) 1249/1941 tested (1017 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 23m, remaining: ~1h 19m) 1250/1941 tested (1018 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 24m, remaining: ~1h 19m) 1252/1941 tested (1020 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 24m, remaining: ~1h 19m) 1253/1941 tested (1021 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 24m, remaining: ~1h 18m) 1255/1941 tested (1023 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 24m, remaining: ~1h 18m) 1256/1941 tested (1024 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 24m, remaining: ~1h 18m) 1258/1941 tested (1026 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 24m, remaining: ~1h 18m) 1259/1941 tested (1027 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 25m, remaining: ~1h 18m) 1261/1941 tested (1029 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 25m, remaining: ~1h 18m) 1262/1941 tested (1030 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 25m, remaining: ~1h 17m) 1264/1941 tested (1032 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 25m, remaining: ~1h 17m) 1265/1941 tested (1033 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 25m, remaining: ~1h 17m) 1267/1941 tested (1035 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 25m, remaining: ~1h 17m) 1268/1941 tested (1036 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 26m, remaining: ~1h 17m) 1269/1941 tested (1037 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 26m, remaining: ~1h 17m) 1271/1941 tested (1039 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 26m, remaining: ~1h 16m) 1272/1941 tested (1040 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 26m, remaining: ~1h 16m) 1274/1941 tested (1042 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 26m, remaining: ~1h 16m) 1275/1941 tested (1043 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 26m, remaining: ~1h 16m) 1277/1941 tested (1045 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 27m, remaining: ~1h 16m) 1278/1941 tested (1046 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 27m, remaining: ~1h 15m) 1280/1941 tested (1048 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 27m, remaining: ~1h 15m) 1281/1941 tested (1049 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 27m, remaining: ~1h 15m) 1283/1941 tested (1051 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 27m, remaining: ~1h 15m) 1284/1941 tested (1052 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 27m, remaining: ~1h 15m) 1286/1941 tested (1054 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 28m, remaining: ~1h 15m) 1287/1941 tested (1055 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 28m, remaining: ~1h 14m) 1289/1941 tested (1057 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 28m, remaining: ~1h 14m) 1290/1941 tested (1058 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 28m, remaining: ~1h 14m) 1292/1941 tested (1060 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 28m, remaining: ~1h 14m) 1293/1941 tested (1061 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 28m, remaining: ~1h 14m) 1295/1941 tested (1063 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 29m, remaining: ~1h 14m) 1296/1941 tested (1064 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 29m, remaining: ~1h 13m) 1298/1941 tested (1066 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 29m, remaining: ~1h 13m) 1299/1941 tested (1067 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 13m) 1301/1941 tested (1069 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 13m) 1302/1941 tested (1070 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 13m) 1303/1941 tested (1071 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 30m, remaining: ~1h 13m) 1305/1941 tested (1073 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 30m, remaining: ~1h 13m) 1306/1941 tested (1074 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 30m, remaining: ~1h 12m) 1308/1941 tested (1076 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 30m, remaining: ~1h 12m) 1309/1941 tested (1077 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 30m, remaining: ~1h 12m) 1311/1941 tested (1079 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 30m, remaining: ~1h 12m) 1312/1941 tested (1080 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 31m, remaining: ~1h 12m) 1314/1941 tested (1082 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 31m, remaining: ~1h 11m) 1315/1941 tested (1083 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 31m, remaining: ~1h 11m) 1317/1941 tested (1085 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 31m, remaining: ~1h 11m) 1318/1941 tested (1086 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 11m) 1320/1941 tested (1088 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 11m) 1321/1941 tested (1089 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 32m, remaining: ~1h 11m) 1323/1941 tested (1091 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 32m, remaining: ~1h 10m) 1324/1941 tested (1092 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 32m, remaining: ~1h 10m) 1326/1941 tested (1094 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 32m, remaining: ~1h 10m) 1327/1941 tested (1095 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 32m, remaining: ~1h 10m) 1329/1941 tested (1097 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 32m, remaining: ~1h 10m) 1330/1941 tested (1098 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 33m, remaining: ~1h 9m) 1332/1941 tested (1100 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 33m, remaining: ~1h 9m) 1333/1941 tested (1101 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 33m, remaining: ~1h 9m) 1335/1941 tested (1103 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 33m, remaining: ~1h 9m) 1336/1941 tested (1104 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 33m, remaining: ~1h 9m) 1337/1941 tested (1105 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 33m, remaining: ~1h 9m) 1339/1941 tested (1107 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 34m, remaining: ~1h 9m) 1340/1941 tested (1108 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 34m, remaining: ~1h 8m) 1342/1941 tested (1110 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 34m, remaining: ~1h 8m) 1343/1941 tested (1111 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 34m, remaining: ~1h 8m) 1345/1941 tested (1113 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 34m, remaining: ~1h 8m) 1346/1941 tested (1114 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 34m, remaining: ~1h 8m) 1348/1941 tested (1116 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 35m, remaining: ~1h 8m) 1349/1941 tested (1117 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 35m, remaining: ~1h 7m) 1351/1941 tested (1119 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 35m, remaining: ~1h 7m) 1352/1941 tested (1120 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 35m, remaining: ~1h 7m) 1354/1941 tested (1122 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 35m, remaining: ~1h 7m) 1355/1941 tested (1123 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 35m, remaining: ~1h 7m) 1357/1941 tested (1125 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 36m, remaining: ~1h 6m) 1358/1941 tested (1126 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 36m, remaining: ~1h 6m) 1360/1941 tested (1128 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 36m, remaining: ~1h 6m) 1361/1941 tested (1129 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 36m, remaining: ~1h 6m) 1363/1941 tested (1131 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 36m, remaining: ~1h 6m) 1364/1941 tested (1132 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 36m, remaining: ~1h 6m) 1366/1941 tested (1134 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 37m, remaining: ~1h 5m) 1367/1941 tested (1135 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 37m, remaining: ~1h 5m) 1369/1941 tested (1137 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 37m, remaining: ~1h 5m) 1370/1941 tested (1138 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 37m, remaining: ~1h 5m) 1371/1941 tested (1139 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 37m, remaining: ~1h 5m) 1373/1941 tested (1141 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 37m, remaining: ~1h 5m) 1374/1941 tested (1142 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 38m, remaining: ~1h 4m) 1376/1941 tested (1144 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 38m, remaining: ~1h 4m) 1377/1941 tested (1145 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 38m, remaining: ~1h 4m) 1379/1941 tested (1147 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 38m, remaining: ~1h 4m) 1380/1941 tested (1148 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 38m, remaining: ~1h 4m) 1382/1941 tested (1150 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 38m, remaining: ~1h 4m) 1383/1941 tested (1151 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 39m, remaining: ~1h 3m) 1385/1941 tested (1153 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 39m, remaining: ~1h 3m) 1386/1941 tested (1154 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 39m, remaining: ~1h 3m) 1388/1941 tested (1156 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 39m, remaining: ~1h 3m) 1389/1941 tested (1157 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 39m, remaining: ~1h 3m) 1391/1941 tested (1159 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 39m, remaining: ~1h 3m) 1392/1941 tested (1160 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 40m, remaining: ~1h 2m) 1394/1941 tested (1162 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 40m, remaining: ~1h 2m) 1395/1941 tested (1163 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 40m, remaining: ~1h 2m) 1397/1941 tested (1165 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 40m, remaining: ~1h 2m) 1398/1941 tested (1166 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 40m, remaining: ~1h 2m) 1400/1941 tested (1168 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 40m, remaining: ~1h 1m) 1401/1941 tested (1169 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 41m, remaining: ~1h 1m) 1403/1941 tested (1171 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 41m, remaining: ~1h 1m) 1404/1941 tested (1172 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 41m, remaining: ~1h 1m) 1405/1941 tested (1173 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 41m, remaining: ~1h 1m) 1407/1941 tested (1175 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 41m, remaining: ~1h 1m) 1408/1941 tested (1176 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 41m, remaining: ~1h 0m) 1410/1941 tested (1178 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 42m, remaining: ~1h 0m) 1412/1941 tested (1179 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 42m, remaining: ~1h 0m) 1415/1941 tested (1181 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 42m, remaining: ~1h 0m) 1416/1941 tested (1182 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 42m, remaining: ~59m) 1418/1941 tested (1184 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 42m, remaining: ~59m) 1419/1941 tested (1185 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 42m, remaining: ~59m) 1420/1941 tested (1186 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 43m, remaining: ~59m) 1422/1941 tested (1188 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 43m, remaining: ~59m) 1423/1941 tested (1189 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 43m, remaining: ~59m) 1425/1941 tested (1191 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 43m, remaining: ~59m) 1426/1941 tested (1192 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 43m, remaining: ~58m) 1428/1941 tested (1194 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 43m, remaining: ~58m) 1429/1941 tested (1195 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 44m, remaining: ~58m) 1431/1941 tested (1197 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 44m, remaining: ~58m) 1432/1941 tested (1198 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 44m, remaining: ~58m) 1434/1941 tested (1200 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 44m, remaining: ~58m) 1435/1941 tested (1201 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 44m, remaining: ~57m) 1437/1941 tested (1203 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 44m, remaining: ~57m) 1438/1941 tested (1204 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 45m, remaining: ~57m) 1440/1941 tested (1206 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 45m, remaining: ~57m) 1441/1941 tested (1207 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 45m, remaining: ~57m) 1443/1941 tested (1209 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 45m, remaining: ~56m) 1444/1941 tested (1210 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 45m, remaining: ~56m) 1446/1941 tested (1212 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 45m, remaining: ~56m) 1447/1941 tested (1213 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 46m, remaining: ~56m) 1449/1941 tested (1215 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 46m, remaining: ~56m) 1450/1941 tested (1216 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 46m, remaining: ~56m) 1452/1941 tested (1218 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 46m, remaining: ~55m) 1453/1941 tested (1219 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 46m, remaining: ~55m) 1454/1941 tested (1220 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 46m, remaining: ~55m) 1456/1941 tested (1222 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 47m, remaining: ~55m) 1457/1941 tested (1223 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 47m, remaining: ~55m) 1459/1941 tested (1225 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 47m, remaining: ~55m) 1460/1941 tested (1226 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 47m, remaining: ~54m) 1462/1941 tested (1228 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 47m, remaining: ~54m) 1463/1941 tested (1229 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 47m, remaining: ~54m) 1465/1941 tested (1231 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 48m, remaining: ~54m) 1466/1941 tested (1232 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 48m, remaining: ~54m) 1468/1941 tested (1234 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 48m, remaining: ~54m) 1469/1941 tested (1235 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 48m, remaining: ~53m) 1471/1941 tested (1237 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 48m, remaining: ~53m) 1472/1941 tested (1238 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 48m, remaining: ~53m) 1474/1941 tested (1240 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 49m, remaining: ~53m) 1475/1941 tested (1241 survived, 87 timed out)
Mutation testing 76% (elapsed: ~2h 49m, remaining: ~53m) 1477/1941 tested (1243 survived, 87 timed out)
Mutation testing 76% (elapsed: ~2h 49m, remaining: ~53m) 1478/1941 tested (1244 survived, 87 timed out)
Mutation testing 76% (elapsed: ~2h 49m, remaining: ~52m) 1480/1941 tested (1246 survived, 87 timed out)
Mutation testing 76% (elapsed: ~2h 49m, remaining: ~52m) 1481/1941 tested (1247 survived, 87 timed out)
Mutation testing 76% (elapsed: ~2h 49m, remaining: ~52m) 1483/1941 tested (1249 survived, 87 timed out)
Mutation testing 76% (elapsed: ~2h 50m, remaining: ~52m) 1484/1941 tested (1250 survived, 87 timed out)
Mutation testing 76% (elapsed: ~2h 50m, remaining: ~52m) 1486/1941 tested (1252 survived, 87 timed out)
Mutation testing 76% (elapsed: ~2h 50m, remaining: ~52m) 1487/1941 tested (1253 survived, 87 timed out)
Mutation testing 76% (elapsed: ~2h 50m, remaining: ~51m) 1489/1941 tested (1255 survived, 87 timed out)
Mutation testing 76% (elapsed: ~2h 50m, remaining: ~51m) 1490/1941 tested (1256 survived, 87 timed out)
Mutation testing 76% (elapsed: ~2h 50m, remaining: ~51m) 1491/1941 tested (1257 survived, 87 timed out)
Mutation testing 76% (elapsed: ~2h 51m, remaining: ~51m) 1493/1941 tested (1259 survived, 87 timed out)
Mutation testing 76% (elapsed: ~2h 51m, remaining: ~51m) 1494/1941 tested (1260 survived, 87 timed out)
Mutation testing 77% (elapsed: ~2h 51m, remaining: ~50m) 1496/1941 tested (1262 survived, 87 timed out)
Mutation testing 77% (elapsed: ~2h 51m, remaining: ~50m) 1497/1941 tested (1263 survived, 87 timed out)
Mutation testing 77% (elapsed: ~2h 51m, remaining: ~50m) 1499/1941 tested (1265 survived, 87 timed out)
Mutation testing 77% (elapsed: ~2h 51m, remaining: ~50m) 1500/1941 tested (1266 survived, 87 timed out)
Mutation testing 77% (elapsed: ~2h 52m, remaining: ~50m) 1502/1941 tested (1268 survived, 87 timed out)
Mutation testing 77% (elapsed: ~2h 52m, remaining: ~50m) 1503/1941 tested (1269 survived, 87 timed out)
Mutation testing 77% (elapsed: ~2h 52m, remaining: ~49m) 1505/1941 tested (1271 survived, 87 timed out)
Mutation testing 77% (elapsed: ~2h 52m, remaining: ~49m) 1506/1941 tested (1272 survived, 87 timed out)
Mutation testing 77% (elapsed: ~2h 52m, remaining: ~49m) 1508/1941 tested (1274 survived, 87 timed out)
Mutation testing 77% (elapsed: ~2h 52m, remaining: ~49m) 1509/1941 tested (1275 survived, 87 timed out)
Mutation testing 77% (elapsed: ~2h 53m, remaining: ~49m) 1511/1941 tested (1277 survived, 87 timed out)
Mutation testing 77% (elapsed: ~2h 53m, remaining: ~49m) 1512/1941 tested (1278 survived, 87 timed out)
Mutation testing 78% (elapsed: ~2h 53m, remaining: ~48m) 1514/1941 tested (1280 survived, 87 timed out)
Mutation testing 78% (elapsed: ~2h 53m, remaining: ~48m) 1515/1941 tested (1281 survived, 87 timed out)
Mutation testing 78% (elapsed: ~2h 53m, remaining: ~48m) 1517/1941 tested (1283 survived, 87 timed out)
Mutation testing 78% (elapsed: ~2h 53m, remaining: ~48m) 1518/1941 tested (1284 survived, 87 timed out)
Mutation testing 78% (elapsed: ~2h 54m, remaining: ~48m) 1520/1941 tested (1286 survived, 87 timed out)
Mutation testing 78% (elapsed: ~2h 54m, remaining: ~48m) 1521/1941 tested (1287 survived, 87 timed out)
Mutation testing 78% (elapsed: ~2h 54m, remaining: ~47m) 1523/1941 tested (1289 survived, 87 timed out)
Mutation testing 78% (elapsed: ~2h 54m, remaining: ~47m) 1524/1941 tested (1290 survived, 87 timed out)
Mutation testing 78% (elapsed: ~2h 54m, remaining: ~47m) 1525/1941 tested (1291 survived, 87 timed out)
Mutation testing 78% (elapsed: ~2h 54m, remaining: ~47m) 1527/1941 tested (1293 survived, 87 timed out)
Mutation testing 78% (elapsed: ~2h 55m, remaining: ~47m) 1528/1941 tested (1294 survived, 87 timed out)
Mutation testing 78% (elapsed: ~2h 55m, remaining: ~47m) 1530/1941 tested (1296 survived, 87 timed out)
Mutation testing 78% (elapsed: ~2h 55m, remaining: ~46m) 1531/1941 tested (1297 survived, 87 timed out)
Mutation testing 78% (elapsed: ~2h 55m, remaining: ~46m) 1533/1941 tested (1299 survived, 87 timed out)
Mutation testing 79% (elapsed: ~2h 55m, remaining: ~46m) 1534/1941 tested (1300 survived, 87 timed out)
Mutation testing 79% (elapsed: ~2h 55m, remaining: ~46m) 1536/1941 tested (1302 survived, 87 timed out)
Mutation testing 79% (elapsed: ~2h 56m, remaining: ~46m) 1537/1941 tested (1303 survived, 87 timed out)
Mutation testing 79% (elapsed: ~2h 56m, remaining: ~46m) 1539/1941 tested (1305 survived, 87 timed out)
Mutation testing 79% (elapsed: ~2h 56m, remaining: ~45m) 1540/1941 tested (1306 survived, 87 timed out)
Mutation testing 79% (elapsed: ~2h 56m, remaining: ~45m) 1542/1941 tested (1308 survived, 87 timed out)
Mutation testing 79% (elapsed: ~2h 56m, remaining: ~45m) 1543/1941 tested (1309 survived, 87 timed out)
Mutation testing 79% (elapsed: ~2h 56m, remaining: ~45m) 1545/1941 tested (1311 survived, 87 timed out)
Mutation testing 79% (elapsed: ~2h 57m, remaining: ~45m) 1546/1941 tested (1312 survived, 87 timed out)
Mutation testing 79% (elapsed: ~2h 57m, remaining: ~44m) 1548/1941 tested (1314 survived, 87 timed out)
Mutation testing 79% (elapsed: ~2h 57m, remaining: ~44m) 1549/1941 tested (1315 survived, 87 timed out)
Mutation testing 79% (elapsed: ~2h 57m, remaining: ~44m) 1551/1941 tested (1317 survived, 87 timed out)
Mutation testing 79% (elapsed: ~2h 57m, remaining: ~44m) 1552/1941 tested (1318 survived, 87 timed out)
Mutation testing 80% (elapsed: ~2h 57m, remaining: ~44m) 1554/1941 tested (1320 survived, 87 timed out)
Mutation testing 80% (elapsed: ~2h 58m, remaining: ~44m) 1555/1941 tested (1321 survived, 87 timed out)
Mutation testing 80% (elapsed: ~2h 58m, remaining: ~43m) 1557/1941 tested (1323 survived, 87 timed out)
Mutation testing 80% (elapsed: ~2h 58m, remaining: ~43m) 1558/1941 tested (1324 survived, 87 timed out)
Mutation testing 80% (elapsed: ~2h 58m, remaining: ~43m) 1559/1941 tested (1325 survived, 87 timed out)
Mutation testing 80% (elapsed: ~2h 58m, remaining: ~43m) 1561/1941 tested (1327 survived, 87 timed out)
Mutation testing 80% (elapsed: ~2h 58m, remaining: ~43m) 1562/1941 tested (1328 survived, 87 timed out)
Mutation testing 80% (elapsed: ~2h 59m, remaining: ~43m) 1564/1941 tested (1330 survived, 87 timed out)
Mutation testing 80% (elapsed: ~2h 59m, remaining: ~43m) 1565/1941 tested (1331 survived, 87 timed out)
Mutation testing 80% (elapsed: ~2h 59m, remaining: ~42m) 1567/1941 tested (1333 survived, 87 timed out)
Mutation testing 80% (elapsed: ~2h 59m, remaining: ~42m) 1568/1941 tested (1334 survived, 87 timed out)
Mutation testing 80% (elapsed: ~2h 59m, remaining: ~42m) 1570/1941 tested (1336 survived, 87 timed out)
Mutation testing 80% (elapsed: ~2h 59m, remaining: ~42m) 1571/1941 tested (1337 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 0m, remaining: ~42m) 1573/1941 tested (1339 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 0m, remaining: ~42m) 1574/1941 tested (1340 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 0m, remaining: ~41m) 1576/1941 tested (1342 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 0m, remaining: ~41m) 1577/1941 tested (1343 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 0m, remaining: ~41m) 1579/1941 tested (1345 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 0m, remaining: ~41m) 1580/1941 tested (1346 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 1m, remaining: ~41m) 1582/1941 tested (1348 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 1m, remaining: ~40m) 1583/1941 tested (1349 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 1m, remaining: ~40m) 1585/1941 tested (1351 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 1m, remaining: ~40m) 1586/1941 tested (1352 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 1m, remaining: ~40m) 1588/1941 tested (1354 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 1m, remaining: ~40m) 1589/1941 tested (1355 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 2m, remaining: ~40m) 1591/1941 tested (1357 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 2m, remaining: ~39m) 1592/1941 tested (1358 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 2m, remaining: ~39m) 1593/1941 tested (1359 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 2m, remaining: ~39m) 1595/1941 tested (1361 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 2m, remaining: ~39m) 1596/1941 tested (1362 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 2m, remaining: ~39m) 1598/1941 tested (1364 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 3m, remaining: ~39m) 1599/1941 tested (1365 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 3m, remaining: ~38m) 1601/1941 tested (1367 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 3m, remaining: ~38m) 1602/1941 tested (1368 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 3m, remaining: ~38m) 1604/1941 tested (1370 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 3m, remaining: ~38m) 1605/1941 tested (1371 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 3m, remaining: ~38m) 1607/1941 tested (1373 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 4m, remaining: ~38m) 1608/1941 tested (1374 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 4m, remaining: ~37m) 1610/1941 tested (1376 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 4m, remaining: ~37m) 1611/1941 tested (1377 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 4m, remaining: ~37m) 1613/1941 tested (1379 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 4m, remaining: ~37m) 1614/1941 tested (1380 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 4m, remaining: ~37m) 1616/1941 tested (1382 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 5m, remaining: ~37m) 1617/1941 tested (1383 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 5m, remaining: ~36m) 1619/1941 tested (1385 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 5m, remaining: ~36m) 1620/1941 tested (1386 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 5m, remaining: ~36m) 1622/1941 tested (1388 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 5m, remaining: ~36m) 1623/1941 tested (1389 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 5m, remaining: ~36m) 1625/1941 tested (1391 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 6m, remaining: ~36m) 1626/1941 tested (1392 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 6m, remaining: ~35m) 1628/1941 tested (1394 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 6m, remaining: ~35m) 1629/1941 tested (1395 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 6m, remaining: ~35m) 1630/1941 tested (1396 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 6m, remaining: ~35m) 1632/1941 tested (1398 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 6m, remaining: ~35m) 1633/1941 tested (1399 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 7m, remaining: ~34m) 1635/1941 tested (1401 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 7m, remaining: ~34m) 1636/1941 tested (1402 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 7m, remaining: ~34m) 1638/1941 tested (1404 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 7m, remaining: ~34m) 1639/1941 tested (1405 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 7m, remaining: ~34m) 1641/1941 tested (1407 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 7m, remaining: ~34m) 1642/1941 tested (1408 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 8m, remaining: ~33m) 1644/1941 tested (1410 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 8m, remaining: ~33m) 1645/1941 tested (1411 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 8m, remaining: ~33m) 1647/1941 tested (1413 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 8m, remaining: ~33m) 1648/1941 tested (1414 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 8m, remaining: ~33m) 1650/1941 tested (1416 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 8m, remaining: ~33m) 1651/1941 tested (1417 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 9m, remaining: ~32m) 1653/1941 tested (1419 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 9m, remaining: ~32m) 1654/1941 tested (1420 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 9m, remaining: ~32m) 1656/1941 tested (1422 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 9m, remaining: ~32m) 1657/1941 tested (1423 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 9m, remaining: ~32m) 1659/1941 tested (1425 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 9m, remaining: ~32m) 1660/1941 tested (1426 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 10m, remaining: ~31m) 1662/1941 tested (1428 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 10m, remaining: ~31m) 1663/1941 tested (1429 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 10m, remaining: ~31m) 1664/1941 tested (1430 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 10m, remaining: ~31m) 1666/1941 tested (1432 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 10m, remaining: ~31m) 1667/1941 tested (1433 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 10m, remaining: ~31m) 1669/1941 tested (1435 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 11m, remaining: ~30m) 1670/1941 tested (1436 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 11m, remaining: ~30m) 1672/1941 tested (1438 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 11m, remaining: ~30m) 1673/1941 tested (1439 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 11m, remaining: ~30m) 1675/1941 tested (1441 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 11m, remaining: ~30m) 1676/1941 tested (1442 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 11m, remaining: ~30m) 1678/1941 tested (1444 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 12m, remaining: ~29m) 1679/1941 tested (1445 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 12m, remaining: ~29m) 1681/1941 tested (1447 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 12m, remaining: ~29m) 1682/1941 tested (1448 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 12m, remaining: ~29m) 1684/1941 tested (1450 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 12m, remaining: ~29m) 1685/1941 tested (1451 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 12m, remaining: ~29m) 1687/1941 tested (1453 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 13m, remaining: ~28m) 1688/1941 tested (1454 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 13m, remaining: ~28m) 1690/1941 tested (1456 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 13m, remaining: ~28m) 1691/1941 tested (1457 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 13m, remaining: ~28m) 1693/1941 tested (1459 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 13m, remaining: ~28m) 1694/1941 tested (1460 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 13m, remaining: ~28m) 1696/1941 tested (1462 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 14m, remaining: ~27m) 1697/1941 tested (1463 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 14m, remaining: ~27m) 1698/1941 tested (1464 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 14m, remaining: ~27m) 1700/1941 tested (1466 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 14m, remaining: ~27m) 1701/1941 tested (1467 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 14m, remaining: ~27m) 1703/1941 tested (1469 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 14m, remaining: ~27m) 1704/1941 tested (1470 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 15m, remaining: ~26m) 1706/1941 tested (1472 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 15m, remaining: ~26m) 1707/1941 tested (1473 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 15m, remaining: ~26m) 1709/1941 tested (1475 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 15m, remaining: ~26m) 1710/1941 tested (1476 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 15m, remaining: ~26m) 1712/1941 tested (1478 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 15m, remaining: ~26m) 1713/1941 tested (1479 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 16m, remaining: ~25m) 1715/1941 tested (1481 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 16m, remaining: ~25m) 1716/1941 tested (1482 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 16m, remaining: ~25m) 1718/1941 tested (1484 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 16m, remaining: ~25m) 1719/1941 tested (1485 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 16m, remaining: ~25m) 1721/1941 tested (1487 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 16m, remaining: ~25m) 1722/1941 tested (1488 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 17m, remaining: ~24m) 1724/1941 tested (1490 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 17m, remaining: ~24m) 1725/1941 tested (1491 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 17m, remaining: ~24m) 1727/1941 tested (1493 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 17m, remaining: ~24m) 1728/1941 tested (1494 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 17m, remaining: ~24m) 1730/1941 tested (1496 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 17m, remaining: ~24m) 1731/1941 tested (1497 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 18m, remaining: ~23m) 1732/1941 tested (1498 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 18m, remaining: ~23m) 1734/1941 tested (1500 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 18m, remaining: ~23m) 1735/1941 tested (1501 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 18m, remaining: ~23m) 1737/1941 tested (1503 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 18m, remaining: ~23m) 1738/1941 tested (1504 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 18m, remaining: ~22m) 1740/1941 tested (1506 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 19m, remaining: ~22m) 1741/1941 tested (1507 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 19m, remaining: ~22m) 1743/1941 tested (1509 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 19m, remaining: ~22m) 1744/1941 tested (1510 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 19m, remaining: ~22m) 1746/1941 tested (1512 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 19m, remaining: ~22m) 1747/1941 tested (1513 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 19m, remaining: ~21m) 1749/1941 tested (1515 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 20m, remaining: ~21m) 1750/1941 tested (1516 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 20m, remaining: ~21m) 1752/1941 tested (1518 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 20m, remaining: ~21m) 1753/1941 tested (1519 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 20m, remaining: ~21m) 1755/1941 tested (1521 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 20m, remaining: ~21m) 1756/1941 tested (1522 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 20m, remaining: ~20m) 1758/1941 tested (1524 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 21m, remaining: ~20m) 1759/1941 tested (1525 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 21m, remaining: ~20m) 1761/1941 tested (1527 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 21m, remaining: ~20m) 1762/1941 tested (1528 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 21m, remaining: ~20m) 1764/1941 tested (1530 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 21m, remaining: ~20m) 1765/1941 tested (1531 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 21m, remaining: ~20m) 1766/1941 tested (1532 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 22m, remaining: ~19m) 1768/1941 tested (1534 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 22m, remaining: ~19m) 1769/1941 tested (1535 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 22m, remaining: ~19m) 1771/1941 tested (1537 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 22m, remaining: ~19m) 1772/1941 tested (1538 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 22m, remaining: ~19m) 1774/1941 tested (1540 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 22m, remaining: ~18m) 1775/1941 tested (1541 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 23m, remaining: ~18m) 1777/1941 tested (1543 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 23m, remaining: ~18m) 1778/1941 tested (1544 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 23m, remaining: ~18m) 1780/1941 tested (1546 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 23m, remaining: ~18m) 1781/1941 tested (1547 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 23m, remaining: ~18m) 1783/1941 tested (1549 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 23m, remaining: ~17m) 1784/1941 tested (1550 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 24m, remaining: ~17m) 1786/1941 tested (1552 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 24m, remaining: ~17m) 1787/1941 tested (1553 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 24m, remaining: ~17m) 1789/1941 tested (1555 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 24m, remaining: ~17m) 1790/1941 tested (1556 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 24m, remaining: ~17m) 1792/1941 tested (1558 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 24m, remaining: ~16m) 1793/1941 tested (1559 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 25m, remaining: ~16m) 1795/1941 tested (1561 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 25m, remaining: ~16m) 1796/1941 tested (1562 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 25m, remaining: ~16m) 1798/1941 tested (1564 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 25m, remaining: ~16m) 1799/1941 tested (1565 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 25m, remaining: ~15m) 1801/1941 tested (1567 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 25m, remaining: ~15m) 1802/1941 tested (1568 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 26m, remaining: ~15m) 1803/1941 tested (1569 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 26m, remaining: ~15m) 1805/1941 tested (1571 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 26m, remaining: ~15m) 1806/1941 tested (1572 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 26m, remaining: ~15m) 1808/1941 tested (1574 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 26m, remaining: ~15m) 1809/1941 tested (1575 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 26m, remaining: ~14m) 1811/1941 tested (1577 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 27m, remaining: ~14m) 1812/1941 tested (1578 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 27m, remaining: ~14m) 1814/1941 tested (1580 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 27m, remaining: ~14m) 1815/1941 tested (1581 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 27m, remaining: ~14m) 1817/1941 tested (1583 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 27m, remaining: ~14m) 1818/1941 tested (1584 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 27m, remaining: ~13m) 1820/1941 tested (1586 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 28m, remaining: ~13m) 1821/1941 tested (1587 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 28m, remaining: ~13m) 1823/1941 tested (1589 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 28m, remaining: ~13m) 1824/1941 tested (1590 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 28m, remaining: ~13m) 1826/1941 tested (1592 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 28m, remaining: ~13m) 1827/1941 tested (1593 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 28m, remaining: ~12m) 1829/1941 tested (1595 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 29m, remaining: ~12m) 1830/1941 tested (1596 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 29m, remaining: ~12m) 1832/1941 tested (1598 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 29m, remaining: ~12m) 1833/1941 tested (1599 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 29m, remaining: ~12m) 1835/1941 tested (1601 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 29m, remaining: ~11m) 1836/1941 tested (1602 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 29m, remaining: ~11m) 1837/1941 tested (1603 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 30m, remaining: ~11m) 1839/1941 tested (1605 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 30m, remaining: ~11m) 1840/1941 tested (1606 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 30m, remaining: ~11m) 1842/1941 tested (1608 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 30m, remaining: ~11m) 1843/1941 tested (1609 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 30m, remaining: ~10m) 1845/1941 tested (1611 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 30m, remaining: ~10m) 1846/1941 tested (1612 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 31m, remaining: ~10m) 1848/1941 tested (1614 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 31m, remaining: ~10m) 1849/1941 tested (1615 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 31m, remaining: ~10m) 1851/1941 tested (1617 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 31m, remaining: ~10m) 1852/1941 tested (1618 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 31m, remaining: ~9m) 1854/1941 tested (1620 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 31m, remaining: ~9m) 1855/1941 tested (1621 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 32m, remaining: ~9m) 1857/1941 tested (1623 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 32m, remaining: ~9m) 1858/1941 tested (1624 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 32m, remaining: ~9m) 1860/1941 tested (1626 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 32m, remaining: ~9m) 1861/1941 tested (1627 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 32m, remaining: ~8m) 1863/1941 tested (1629 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 32m, remaining: ~8m) 1864/1941 tested (1630 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 33m, remaining: ~8m) 1866/1941 tested (1632 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 33m, remaining: ~8m) 1867/1941 tested (1633 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 33m, remaining: ~8m) 1868/1941 tested (1634 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 33m, remaining: ~8m) 1870/1941 tested (1636 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 33m, remaining: ~7m) 1871/1941 tested (1637 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 33m, remaining: ~7m) 1873/1941 tested (1639 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 34m, remaining: ~7m) 1874/1941 tested (1640 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 34m, remaining: ~7m) 1876/1941 tested (1642 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 34m, remaining: ~7m) 1877/1941 tested (1643 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 34m, remaining: ~7m) 1879/1941 tested (1645 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 34m, remaining: ~6m) 1880/1941 tested (1646 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 34m, remaining: ~6m) 1882/1941 tested (1648 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 35m, remaining: ~6m) 1883/1941 tested (1649 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 35m, remaining: ~6m) 1885/1941 tested (1651 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 35m, remaining: ~6m) 1886/1941 tested (1652 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 35m, remaining: ~6m) 1888/1941 tested (1654 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 35m, remaining: ~5m) 1889/1941 tested (1655 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 35m, remaining: ~5m) 1891/1941 tested (1657 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 36m, remaining: ~5m) 1892/1941 tested (1658 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 36m, remaining: ~5m) 1894/1941 tested (1660 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 36m, remaining: ~5m) 1895/1941 tested (1661 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 36m, remaining: ~5m) 1897/1941 tested (1663 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 36m, remaining: ~4m) 1898/1941 tested (1664 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 36m, remaining: ~4m) 1900/1941 tested (1666 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 37m, remaining: ~4m) 1901/1941 tested (1667 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 37m, remaining: ~4m) 1902/1941 tested (1668 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 37m, remaining: ~4m) 1904/1941 tested (1670 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 37m, remaining: ~4m) 1905/1941 tested (1671 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 37m, remaining: ~3m) 1907/1941 tested (1673 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 37m, remaining: ~3m) 1908/1941 tested (1674 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 38m, remaining: ~3m) 1910/1941 tested (1676 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 38m, remaining: ~3m) 1911/1941 tested (1677 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 38m, remaining: ~3m) 1913/1941 tested (1679 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 38m, remaining: ~3m) 1914/1941 tested (1680 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 38m, remaining: ~2m) 1916/1941 tested (1682 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 38m, remaining: ~2m) 1917/1941 tested (1683 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 39m, remaining: ~2m) 1919/1941 tested (1685 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 39m, remaining: ~2m) 1920/1941 tested (1686 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 39m, remaining: ~2m) 1922/1941 tested (1688 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 39m, remaining: ~2m) 1923/1941 tested (1689 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 39m, remaining: ~1m) 1925/1941 tested (1691 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 39m, remaining: ~1m) 1926/1941 tested (1692 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 40m, remaining: ~1m) 1928/1941 tested (1694 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 40m, remaining: ~1m) 1929/1941 tested (1695 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 40m, remaining: ~1m) 1931/1941 tested (1697 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 40m, remaining: ~1m) 1932/1941 tested (1698 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 40m, remaining: <1m) 1933/1941 tested (1699 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 40m, remaining: <1m) 1935/1941 tested (1701 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 41m, remaining: <1m) 1936/1941 tested (1702 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 41m, remaining: <1m) 1938/1941 tested (1704 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 41m, remaining: <1m) 1939/1941 tested (1705 survived, 87 timed out)

All tests
  ✓ All tests (killed 147)

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", 0);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", false);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", "undefined");

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "q-"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           1("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           true("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("Promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(false, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(NaN, definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", "pizza");

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {});

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     return function () {
+       return "pizza";
+     };
+   }());

[Survived] PrecomputedMutator
q.js:42:16
-       } else if (typeof exports === "object" && typeof module === "object") {
+       } else if (0 === 0) {

[Survived] PrecomputedMutator
q.js:42:16
-       } else if (typeof exports === "object" && typeof module === "object") {
+       } else if (typeof exports !== "undefined" && typeof module !== "undefined") {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (define.amd && typeof define === "function") {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (define.amd || typeof define !== "function") {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "undefined") {

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(0);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(1);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(null);

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "object") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "boolean") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "number") {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notok()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.isNodeJS()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.hasStacks()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!!ses.ok()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.isNotOk()) {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (NaN) {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.login();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.enter[0]();

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, false);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, domain && true);

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!(typeof window !== "undefined")) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isNodeJS === false) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isNodeJS !== true) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain !== null) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (typeof domain !== "undefined") {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain !== void 0) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, Math.random());

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain > 0) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain + "foo") {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain.bar) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain = null();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.run();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.dispose();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (1) {

[Survived] PrecomputedMutator
q.js:200:16
-       } else if (typeof setImmediate === "function") {
+       } else if (typeof requestAnimationFrame === "function") {

[Survived] PrecomputedMutator
q.js:200:16
-       } else if (typeof setImmediate === "function") {
+       } else if (typeof requestIdleCallback === "function") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "object") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(requestTick);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = Promise.resolve.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(0, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(false, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (MessageChannel === undefined) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (MessageChannel !== undefined) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "undefined") {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(false);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(undefined);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, undefined);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               clearInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(undefined, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(null, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout("flush", 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Math.random());

[Survived] PrecomputedMutator
q.js:228:13
-               requestPortTick();
+               requestTick();

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(0.000000001);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(function () {
+     return undefined;
+   }, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(function () {
+     return null;
+   }, 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (function () {
+     return true;
+   }) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (array_indexOf(arguments, 0) === -1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (Object.keys(arguments).length === 0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.callee.caller === null) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (2);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (0);

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index == length; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = 1 + 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = index + 1) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = index * 2) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (!this.hasOwnProperty(index)) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index >= this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index === ' '.repeat(this.length)) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + this[index] * index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(this[index] / basis);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - this[index]);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + "foobar", this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - 42, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback("cat", this[index], index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index = 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], void 0);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i >= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i != this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i + 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i * 2) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i++] === value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i + 1] === undefined) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] != value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.shift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.pop(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(function () {});

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(thisp.function(value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(value + index + self);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(index.value));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp.self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(value.index));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(null(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push([](thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(void 0, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call({}, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value + 1, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, "index", self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, window, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, null));

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty.call(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object.hasOwnProperty(object[key])) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object.hasOwnProperty("props")[key]) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object.nonExistent, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object[key - 1], key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty({}, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(undefined, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key = 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key - 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(this[key]);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key * 2);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_hasOwnProperty(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           array_indexOf(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           "[object StopIteration]"(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception[0]) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception instanceof Error) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (null) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p && false; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p == false; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; ~~p; p = p.source) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ == p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ != p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter ^ 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty.writable(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty.unknownProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter_", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "_maximumStackCounter", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "stackCounter", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter / 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   undefined(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   promise.stack(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(1);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift("hello world");

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(null);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.shift(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.stack.slice(1));

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.stack.replace("Error", "Failure"));

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.stack.toUpperCase());

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.shift("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.pop("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + " ");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join(" " + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:397:21
-           var stack = filterStackString(concatedStacks);
+           var stack = concatedStacks(concatedStacks);

[Survived] PrecomputedMutator
q.js:397:21
-           var stack = filterStackString(concatedStacks);
+           var stack = stacks[0](concatedStacks);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(stacks[0]);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(stacks.reverse());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(stacks.slice(1, -1));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperties(error, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty_veryImportant(error, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           60(error, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "callstack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "message", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack.reverse(),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: undefined,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("^");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("||");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(undefined);

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i == lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i = i + 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i = i - 2) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (isInternalFrame(line) || isNodeFrame(line)) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(line) && !line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (line.length > 0 && !isInternalFrame(line) && !isNodeFrame(line)) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line - 1) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line + 1) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line * 2) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isStopIteration(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isPromiseAlike(line) && line) {

[Survived] PrecomputedMutator
q.js:408:52
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(function getFileNameAndLineNumber(stackLine) {
+     return [/.*@(.+):(\d+)$/.exec(stackLine), Number(/(filename:lineNumber:columnNumber)$/.exec(stackLine))];
+   }) && line) {

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.pop(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.reverse(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.sort(line);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push("line");

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push("ERROR");

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push("File not found");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\t");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.startsWith("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.lastIndexOf("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine += 1);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine = stackLine.substring(stackLine.indexOf(stackLine) + 1));

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine = stackLine.slice(-1));

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], undefined(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], 1(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[attempt1.length - 1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[0])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt3) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[0])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.replace(/@/g, ""));

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.length);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(""));

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number * 0(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number + 1(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number - 1(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[5])];

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine + "foo");

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine - 1);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine[0]);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (!fileNameAndLineNumber[0]) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (Array.isArray(fileNameAndLineNumber) && fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(";");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(",");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("#");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[lines.length - 1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("%") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("|") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.substring(0, 2));

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.length);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(''));

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber !== undefined) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.length > 0) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (typeof fileNameAndLineNumber === "string") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof window !== "undefined" && typeof window.console.warn === "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof global !== "undefined" && typeof global.console.warn === "function") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback());

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, 0);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, "foo");

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, () => 0);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (value === Promise) {

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (value == Promise) {

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (Object.is(value, Promise)) {

[Survived] PrecomputedMutator
q.js:506:9
-       if (isPromiseAlike(value)) {
+       if (isPromiseAlike(value) === true) {

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(null);

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create({});

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(Q);

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[0]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[0]) { // progress operand

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.splice(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.forEach(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.pop(operands[1]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands + 1);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(progressListeners.length);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(typeof resolvedPromise === "undefined", args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise + 1, args);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (!messages) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages === null) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length === 0) {

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerPromise(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = isPromise(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(true);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(undefined);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(null);

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (typeof nearerValue === "function") {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue.isFulfilled()) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue.promiseDispatch.length === 1) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isThenable(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (null(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(PROMISE)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(null)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(reject(new Error("oops")))) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise !== true) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (typeof resolvedPromise === "undefined") {

[Survived] PrecomputedMutator
q.js:591:16
-           return resolvedPromise.inspect();
+           return resolvedPromise.promiseDispatch();

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (!Q.longStackSupport || !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (!Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(" at ") + 4);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\r\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:624:17
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   resolvedPromise.promiseDispatch.apply(newPromise, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(new Promise(), message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(resolvedPromise, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(deferred.promise, message);

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(reason));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(notify(value));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value + 1));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(undefined));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(reject(reason + 1)));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (promise.isPending()) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListener[0](progress);

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   resolvedPromise.progress(progress);

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   undefined(progress);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress(null));

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(message.progress);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (!error) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.message) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (typeof error) {

[Survived] PrecomputedMutator
q.js:679:13
-               self.reject(error);
+               self.resolve(error);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(null);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(undefined);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(new Error('different error'));

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length < 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length != 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length == 2) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.fulfill(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               deferred.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0, -1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[0], 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[0] + 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[1] - 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_shift(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_pop(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_splice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice("hello", 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(null, 1));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               undefined(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(42);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve([]);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== "object") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver.constructor.name !== "Function") {

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve(null));

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject("error"));

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(Promise.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.throw, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.promise, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(null));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(undefined));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(1));

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.fulfill(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(new Error("example error message"));

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y = y + 1).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x * y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x + y);

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q(this).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q(that).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x != y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x > y) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i != len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i *= 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               undefined(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               false(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[0]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs.length).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i++]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(null, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(x, reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback !== void 0) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (typeof fallback !== "undefined") {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (eval("!fallback")) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect() !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect() === void 0) {

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(void 0);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call({});

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.POSTS, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(createPromise, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.reject, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, !op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op + 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op => op, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, reject);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, resolve);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, function () {
+     throw new Error('Buggy code');
+   });

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject({});

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(Object.create(null));

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (!inspect) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (typeof inspect === "function") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "settled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (!(inspected.state === "rejected")) {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "resolved") {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, promise);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(reject, self.promiseDispatch);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, deferred);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(undefined, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(new TypeError(), self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong({}, self);

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? Q.prototype.progress(value) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(false) : value;

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done && false) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed("<PLACEHOLDER>");

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value + 1);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror.call(null, e)) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror()) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror.call(e)) {

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(Q);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(undefined);

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (!threw) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.reject(newValue);

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               null(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(undefined);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(void 0);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return null(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return undefined(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return 5(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(promise.reject("buggy code")).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Q.when(promise, undefined)).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(null).tap(callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(5);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap("hello");

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(promise.then);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.fcall(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.delay(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(null);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(undefined);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(void 0);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(Object).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(Promise.reject(value));

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, "", progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, null, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(Q.reject(value)).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(Q.resolve(null)).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(void 0).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(null, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, 2 + 1, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, "");

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, 0);

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return this.thenNotify(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return this.sayRejected(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return this.sayResolve(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return reverseValue;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value.reverse();
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value + 1;
+   });

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.reject(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.defer(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.then(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Q.reject(new Error("placeholder"))).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Q.resolve(undefined)).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Q.resolve(Q.reject(new Error("placeholder")))).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:971:12
-       return this.then(function () { throw reason; });
+       return this.thenResolve(function () { throw reason; });

[Survived] PrecomputedMutator
q.js:971:12
-       return this.then(function () { throw reason; });
+       return this.thenReject(function () { throw reason; });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     console.error(reason);
+     return;
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(undefined).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(null).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(function () {
+     throw reason;
+   });

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (typeof value === "object") {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value && typeof value === "object") {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value instanceof Promise) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (!isPromise(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (typeof promise === "object" && promise.then(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(!value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(2 * value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:992:25
-           var inspected = value.inspect();
+           var inspected = value.isFulfilled();

[Survived] PrecomputedMutator
q.js:992:25
-           var inspected = value.inspect();
+           var inspected = value.then();

[Survived] PrecomputedMutator
q.js:992:25
-           var inspected = value.inspect();
+           var inspected = value.catch();

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.status === "fulfilled") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return !isRejected(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return typeof value === "function"(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.then()) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.catch()) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.finally()) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromiseAlike(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !!isPending(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isFulfilled(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(!object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object === null) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "rejected") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.state === "rejected") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return rejection.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== true) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (array_indexOf(unhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (unhandledRejections.length > 0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise) !== -2) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise) === -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, reason) === -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.length, 0) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections.length, 0) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(resetUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, "promise") !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, NaN) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", unhandledReasons[unhandledRejections.length], unhandledRejections[unhandledRejections.length]);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", null, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", {
+     "value": reason
+   }, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.detail, promise);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.isPending);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.then);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.reject);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(false);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason ? reason.stack : null) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (typeof reason === "number") {

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.pop(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(!reason.stack);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack + 1);

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(undefined);

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(null);

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push({
+     toString: function () {
+       return `" Error: " + reason`;
+     }
+   });

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections != true) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections || false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections && true) {

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledReasons, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(reportedUnhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at < 0) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at !== unhandledRejections.length - 1) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.pop() === promise);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.splice(promise, 1));

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(promise !== unhandledRejections[array_indexOf(promise)]);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledReasons, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(Q.getUnhandledReasons(), promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, Q(promise));

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (!array_indexOf(reportedUnhandledRejections, promise) === -1) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons.pop());

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("unhandledRejection", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled" + 1, unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled".toUpperCase(), unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", randomVariable, promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then(function () {}));

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then(function (v) {
+     throw v;
+   }));

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then(null, function () {}));

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(-1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(0);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(repliedUnhandledRejections.length, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(reportedUnhandledRejections[atReport], 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(unhandledRejections.length - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, null);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, undefined);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at = 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, unhandledRejections.length - 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(-at);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledRejections.length, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(reportedUnhandledRejections.length, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, unhandledReasons.length + 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledRejections.length = 0();

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledRejections = []();

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected && false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected || true) {

[Survived] PrecomputedMutator
q.js:1140:17
-                   untrackRejection(this);
+                   trackRejection(this);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(void 0);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection("foo", reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, new Error());

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, void 0);

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === "undefined") {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name == null) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(args, void 0);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(this);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(12345, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, function () {
+     return 5;
+   });

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(args.concat(value));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(null);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name]["apply"](value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].call(value, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value + 1, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value * 2, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value - 1, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args[0]);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(value);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(null);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(undefined);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(thisp.call(), args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(thisp.resolve(), args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(thisp(arg), args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, undefined);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, 0);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_keys[0](value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return ""(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys("");

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(void 0);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.fulfill(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notFulfilled(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(new Error());

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(null);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(undefined);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(true);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return "dispatch" + 1(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return "dispatched"(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(Promise.reject(new Error("Test error")), op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, 5, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, "foo", args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, 5 + 3, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0] * 2);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, [args[0]]);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return this(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.inspect(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.resolve(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(object.property).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, null);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return null(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return undefined(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(console).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value.length).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(console.log(value)).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(not_fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(anything_else, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.some().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.each().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.filter().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply([]);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply("undefined");

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.call(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.bind(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(this, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.length);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.slice());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.map(function (x) {
+     return x + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "number") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "object") {

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generateur(arg);

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generated(arg);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(null);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.length) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.error) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result * 2) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value != null && result.value !== undefined);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(!result.value);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(Math.floor(result.value));

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return Q.reject(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return Q.allSettled(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return Q.race(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(undefined, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(new Error(), callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, reject, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, all, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, error, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, args);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, "errback");

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, Math.max(callback, errback));

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (!isStopIteration(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception !== undefined) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (typeof exception === "object") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (op === "done"(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (op === "when" && args[0] === "then"(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (op === "error"(exception)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(null);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(undefined);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(Q.reject(exception));

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return error.value(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(true);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(1);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject("error");

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(undefined, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when("hello world", callback, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, Q.reject);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, null);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, () => {});

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, []);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({}, [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(Q, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, this);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.call(null, "next"));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(Q.nextTick);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(null);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = nil(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.apply(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind("next", "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind("throw", "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind("return", "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "prev");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, spread[(this, all(arguments))]);

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind("next");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind("throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.next(), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.throw(), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(null, "throw");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return reject();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return nothing();

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, some(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, any(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(10)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all("foo")], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(args[0]);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(args.length);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply("test", args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, "foo");

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, undefined);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, null);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice());

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[0]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, 0);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return object.dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return object["dispatch"](op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return object.promiseDispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return self(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return null(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(Promise.race, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(Promise.resolve, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           null(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           undefined(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(Q.fulfill, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, deferred.reject, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, null, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, "Hello World!", args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.concat(args));

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice(0));

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, [args, args]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("blah", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(void 0).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(NaN).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("mget", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", ["key" + 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("otherProperty");

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return self("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return undefined("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [value]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [name]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value * 2]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, "new value"]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.reject(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.resolve(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.get(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(-1).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(void 0).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("del", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, null]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, 42]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [object, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return Q[null]("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return "set"("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("patch", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("update", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, Promise.resolve(value)]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(empty).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(null).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(0).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("unset", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch(false, [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [object]`[key]`);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", `key`);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("del", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch(42, [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [undefined]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key + 1]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key = null]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("send", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("mail", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [args, name]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return L(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return O(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return [](object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(0).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q({}).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat(arguments)]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [args[0], args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [args[1], args[0]]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("set", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return null("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return void 0("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post1", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch(args, [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch(name, [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(0)]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, [args]]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("set", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return !Q(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(1).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(undefined).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("put", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("patch", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("foo", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [args[0], args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, args, args[0]]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([1, 2])]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(Promise.resolve(arguments))]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 2))]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, [](arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice("test", 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(undefined, 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, array_slice(arguments, 1))]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, array_slice(arguments, index))]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("patch"[(name, array_slice(arguments, 1))]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0, arguments.length - 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return Q.reject("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.when("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("set", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("get", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 2, 3))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments.slice(1))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([].concat(arguments).slice(2))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, promises[1](arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, deferred.promise(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(null, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice({}, 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, length + 1)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", ["", args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(Math.random()).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("every", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args.slice(0), void 0]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [undefined, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", undefined, args);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return void 0("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return null("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return undefined("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, [args]]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, _]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, [array_slice(arguments, 1)]]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return promise(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.when(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.all(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(Q(null)).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(Q(void 0)).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(Q(null, object)).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [array_slice(arguments, 1), void 0]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [array_slice(arguments, 1), arguments[0]]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 0, 2))]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(void 0)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, [arguments, 1](arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, [void 0, arguments](arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, [arguments, void 0](arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([], 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([1, 2, 3], 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, null)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [this, arguments]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return promise("apply", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return deferred.reject("apply", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("map", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [promise, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [object, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice([arguments, "Arguments", "Arguments object"])]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(undefined)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice([])]);

[Survived] PrecomputedMutator
q.js:1537:19
-       var promise = Q(object);
+       var promise = promise[0](object);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(this);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.slice(2), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([...args].slice(2), 1);

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args + [void 0](array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(args))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 2))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(array_slice(0, 1)))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(array_slice(0, args.length)))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(array_slice(1, args.length)))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice([]);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments.length === 0 ? [] : [].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments[1]))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(args, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_concat(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_map(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_filter(arguments))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice("hello"))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(42))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("push", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.reject(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.when(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.defer(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(null).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(void 0).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(NaN).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("concat", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [undefined]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [null]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("length", 0);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("undefined", null);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this("keys", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return undefined("keys", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return null("keys", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("getOwnPropertyNames", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("valueOf", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", {});

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", undefined);

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state == "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   array_slice([promise], 1)[0].inspect().state == "fulfilled"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.fulfill().state == "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   isRejected(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   isSettled(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   isPending(promise) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise("hello") &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(undefined) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(window) &&

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (!(--pendingCount === 0)) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (--pendingCount !== 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               Q.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.promise(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.shift());

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.pop());

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: "foo",
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index + 1,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index * 2,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount += 1) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               void 0(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               promises(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(Q(promises).map(function (p) {
+     return p.inspect();
+   }));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(Q(promises).map(function (p) {
+     return p.isFulfilled && p.value();
+   }));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(Q(promises).filter(function (p) {
+     return p.isFulfilled;
+   }));

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return every(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(this === undefined);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(this !== this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(this && this === this);

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length >= 1) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (!promises.length) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return null();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return undefined();

[Survived] PrecomputedMutator
q.js:1634:20
-       var deferred = Q.defer();
+       var deferred = Q.delay();

[Survived] PrecomputedMutator
q.js:1634:20
-       var deferred = Q.defer();
+       var deferred = Q.reject();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.valueOf(), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.reject(err), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.resolve(), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.reject(new Error("rejected")), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onDone, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, noop);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               null(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               undefined(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(result + 1);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise.resolve(result));

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise.reject(err));

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount <= 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount >= 0) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   undefined(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejection.message);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejection.stack);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejection.prototype);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return then(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return race(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.allResolved);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Promise.allResolved);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Q.allResolved);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(Q.all);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved.bind(null));

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(Promise.all);

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(any, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allRejected", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "anySettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allRejected");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "noneSettled");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises.map(Q));

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(Promise.all(promises).then(Q));

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises.forEach(Q));

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_indexOf(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(function rejected(err) {
+     return Q(when(err, id, id));
+   }, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(function resolved(result) {
+     return Q(when(result, id, id));
+   }, Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, null);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, function () {});

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.resolve(noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.reject(noop));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(null, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(0, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(Promise.reject(), noop, noop);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return fulfilled(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return rejected(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return deferred.resolve(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(any(promises));

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(all(promises));

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(allSettled(promises));

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(Q.reject(promises)).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(Q.allSettled(promises)).allSettled();

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(null);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(0);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, onRejected);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(promise, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise["then"](regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(null, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(undefined, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(false, regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, onFulfilled);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, onRejected);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, Promise.reject);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(rejected, null);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return null(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return undefined(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(Q.reject(void 0)).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(Q.reject(new Error("Rejected"))).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(Q.reject, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(Q.resolve, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(Q.reject("rejected"), rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, null);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(function () {}, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, promise);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, error);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, null);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return NaN(object).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return null(object).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return undefined(object).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(foo).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(deferred.notify({})).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(deferred.notify("foo")).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(function (value) {
+     throw new Error("Intentional error");
+   }, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(function (value) {
+     return;
+   }, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(function (value) {
+     return value + 1;
+   }, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, promise.inspect(), progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, promise.then(rejected), progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, undefined);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, !promise);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(1, 1, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(progressed, progressed, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.catch(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.finally(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, this, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, "always-be-progressed");

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, undefined);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return this(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return null(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(2)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(0)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q("hello")["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](null);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](object.nonExistentProperty);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](undefined);

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback || typeof callback.call !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback || typeof callback.bind !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback !== undefined && typeof callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.length(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(undefined);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(null);

[Survived] PrecomputedMutator
q.js:1787:16
-           return callback.fcall().then(function () {
+           return callback.call().then(function () {

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.reject(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return 42(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(new Error("This is a test error")).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q({}).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done("rejected", rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, undefined, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, null, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, function () {}, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, always(promise));

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, reject(promise));

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, resolve(promise));

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(promise);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error && promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error.stack, promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error.message, promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, 500 + Math.random() * 1000);

[Survived] PrecomputedMutator
q.js:1810:17
-                   Q.onerror(error);
+                   null(error);

[Survived] PrecomputedMutator
q.js:1810:17
-                   Q.onerror(error);
+                   undefined(error);

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(error.message);

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror({
+     message: error.message,
+     name: error.name
+   });

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(null) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(() => {}) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.catch(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(abort(), rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, fulfilled, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, undefined, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, null, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, undefined) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, null) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, "rejected") :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(null));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError());

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(Q.fcall(onUnhandledError));

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(false, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(0, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms + 1000);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q({}).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(-1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(NaN, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, undefined);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, 0);

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = 0();

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = "hello"();

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = void 0();

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || typeof error !== "string") {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (!(error && typeof error === "string")) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           null(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(0);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(Infinity);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(NaN);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(promise.fcall().then(function () {}));

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(promise.fcall(error).then(function () {}));

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(promise.fcall().then(function () {
+     return value;
+   }));

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== void 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout > 0) {

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return null(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return "Q"(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return undefined(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(1).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q("foo").delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(NaN);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(undefined);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(0);

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = undefined();

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               void 0(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(new Error());

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(1);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(args.slice(0));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(function () {});

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {
+     throw new Error("error");
+   });

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {
+     throw new Error("error");
+   }, true);

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function (reject, resolve) {
+     reject("error");
+   }, true);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       deferred.reject(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       void 0(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.nfapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs[0](null)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments.slice(2));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(args, 2));

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return global(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return Date(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return Math(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(0).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(void 0).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(function () {});

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = null();

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = undefined();

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push("hello");

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push("foo"());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fcall(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fail(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.done(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(array_slice.call(arguments)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(Q(arguments).slice()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(Q.all(arguments).then(array_slice)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(this.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (object === null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback !== "function") {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (Array.isArray(callback)) {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(args, 0);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = doNothing(arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice({}, 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).toString());

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).length);

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).reverse());

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_shift(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_pop(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_splice(arguments));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice("test"));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(42));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver().reverse);

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver().nonsensemethod());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {
+     throw new Error("mutated");
+   }));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(timeout + 10());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push("deferred.makeNodeResolver".length());

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(deferred.reject).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(this).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply([nodeArgs, "foo"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply([nodeArgs, nodeArgs.length]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(10);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(new Error("simulated error"));

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = function_slice(arguments);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(function () {
+     return arguments;
+   }());

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(this.arguments);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.length = 0(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(void 0);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(thisp);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(function () {});

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.then(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(window, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(functionName, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, array_slice());

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, void 0);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_reverse(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_filter(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_fill(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments.length, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments[0], 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, NaN);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([]);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(undefined);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(null);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_rows(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_columns(arguments));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([].join()));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([].concat()));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice("".split()));

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.clearNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.nodeResolve());

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments, "random_string");

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return undefined(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(this, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           null(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           undefined(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           [](bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(true).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(undefined).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice(0)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.rejectAll);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.remove);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.not);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = NaN(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments[0], 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments.length, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments[arguments.length - 1], 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, args.length);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       thisArg.unshift(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       varArgs.push(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(true);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(NaN);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Promise.prototype.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(Q, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args || defer());

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args, defer());

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args && defer());

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, [args]);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return undefined(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return null(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q({}).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q("hello").npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name * 2, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name + "Hello", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = [].slice(args || []);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = Array.slice(args || []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = deffer();

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = void 0();

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function (resolution, message) {
+     if (deferred.promise !== undefined) {
+       deferred.resolver(resolution, message);
+     } else {
+       deferred.promise = Q.reject(message);
+     }
+   });

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", name).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", name, nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.erencode("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.foo("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       void 0("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("concat", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", nodeArgs.concat).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, ...nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject("error"));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments[2]);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(Promise.resolve(arguments[2]));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = null(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice("This is a different string", 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(1 + 1, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(undefined, 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(this.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(JSON.stringify(deferred.makeNodeResolver()));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(eval("deferred.makeNodeResolver()"));

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("patch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.post(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(null).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(false).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q({}).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch(99, [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", nodeArgs.concat([name])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", nodeArgs.reverse()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", Q.ninvoke(nodeArgs.concat([name]))).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(1 + 1);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(Array.prototype.pop.apply(arguments));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments.callee.caller);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = this.length(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = 5(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = "hello"(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(splice(1), 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(pop(), 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, undefined);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 1 + 1);

[Survived] PrecomputedMutator
q.js:2030:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:2030:20
-       var deferred = defer();
+       var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:2030:20
-       var deferred = defer();
+       var deferred = null();

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver.call(void 0));

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver && deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {
+     return deferred.makeNodeResolver.apply(null, arguments);
+   });

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined());

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", ["differentName", nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.concat("differentExtraArg")]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("push", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("postSend", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name + "1", nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [null, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return null(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return undefined(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q({}).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(Q.fcall);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(Q.delay);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(Q.reject);

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (typeof nodeback === 'function') {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (Object.prototype.toString.call(nodeback) === '[object Function]') {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, undefined);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(true);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(Date.now());

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   !nodeback(null, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback + 1(null, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(true, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback('abc', value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, value + 1);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, value * 2);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   null(error);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   undefined(error);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(error());

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(new Error());

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.reject();

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = undefined();

[Survived] PrecomputedMutator
queue.js:10:24
-               var next = Q.defer();
+               var next = Q.all();

[Survived] PrecomputedMutator
queue.js:10:24
-               var next = Q.defer();
+               var next = Q.reject();

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.resolve("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.reject("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.then("head");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(ends.promise.get("tail").fail);

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(closed.promise.get("tail"));

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.reject("tail");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(ends.promise.get(ends.promise.get("tail")));

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(ends.promise.get(undefined));

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(ends.promise.get(null));

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   error(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve("*error message*".toUpperCase());

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(function (error) {
+     throw new Error(error.message.toUpperCase());
+   });

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(undefined)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject("error")};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               null(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               undefined(end);

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   12.06 |      147 |        87 |       1707 |        0 |        0 |
 q.js     |   12.21 |      147 |        87 |       1683 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         24 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m05:16:22 (3085) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m05:16:22 (3085) INFO MutationTestExecutor[39m Done in 221 minutes 39 seconds.

real	221m40.529s
user	38m55.367s
sys	6m49.549s
