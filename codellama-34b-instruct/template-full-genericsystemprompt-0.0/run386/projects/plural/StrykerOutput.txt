*** using precomputed mutations ***
[32m15:43:44 (2594) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m15:43:44 (2594) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m15:43:44 (2594) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m15:43:45 (2594) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m15:43:45 (2594) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m15:43:45 (2594) INFO ProjectReader[39m Found 1 of 632 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 270 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.0/mutants.json ***
Mutant 0 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(8, -2)
Mutant 1 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(8, 0)
Mutant 2 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(8, 1)
Mutant 3 in index.js: obj replaced with obj.toString()
Mutant 4 in index.js: obj replaced with obj.valueOf()
Mutant 5 in index.js: obj replaced with obj.constructor.name
Mutant 6 in index.js: 8 replaced with 7
Mutant 7 in index.js: 8 replaced with 9
Mutant 8 in index.js: 8 replaced with 6
Mutant 9 in index.js: -1 replaced with -2
Mutant 10 in index.js: -1 replaced with -3
Mutant 11 in index.js: -1 replaced with -4
Mutant 12 in index.js: rules.unshift replaced with rules.push
Mutant 13 in index.js: [match, result] replaced with [result, match]
Mutant 14 in index.js: [match, result] replaced with [match, result + 1]
Mutant 15 in index.js: [match, result] replaced with [match, result - 1]
Mutant 16 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 2) + 'ies';
})
Mutant 17 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|quy$/g
Mutant 18 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|quy$/m
Mutant 19 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'ies';
}
Mutant 20 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'es';
}
Mutant 21 in index.js: w.substr(0, w.length - 1) replaced with w.substr(1, w.length - 2)
Mutant 22 in index.js: w.substr(0, w.length - 1) replaced with w.substr(w.length - 2, w.length - 1)
Mutant 23 in index.js: w.substr(0, w.length - 1) replaced with w.substr(w.length - 1, w.length - 2)
Mutant 24 in index.js: w.substr replaced with w.substring
Mutant 25 in index.js: w.substr replaced with w.slice
Mutant 26 in index.js: 0 replaced with word.length - 2
Mutant 27 in index.js: 0 replaced with word.length - 1
Mutant 28 in index.js: w.length - 1 replaced with w.length + 1
Mutant 29 in index.js: w.length - 1 replaced with w.length * 2
Mutant 30 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|s$/i, function (w) {
  return w + 's';
})
Mutant 31 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|s$/i, function (w) {
  return w + 'ies';
})
Mutant 32 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es' + 's';
})
Mutant 33 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|s$/g
Mutant 34 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|s$/m
Mutant 35 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 's';
}
Mutant 36 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 'ies';
}
Mutant 37 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 's' + 'es';
}
Mutant 38 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 1) + 'i';
})
Mutant 39 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'us';
})
Mutant 40 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /nucleus|syllabus|focus|fungus|cactus/g
Mutant 41 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'i';
}
Mutant 42 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'ies';
}
Mutant 43 in index.js: w.substr(0, w.length - 2) replaced with w.substr(1, w.length - 1)
Mutant 44 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1, w.length)
Mutant 45 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 2, w.length - 1)
Mutant 46 in index.js: w.substr replaced with w.substring
Mutant 47 in index.js: w.substr replaced with w.slice
Mutant 48 in index.js: 0 replaced with -1
Mutant 49 in index.js: 0 replaced with "hello"
Mutant 50 in index.js: w.length - 2 replaced with w.length - 3
Mutant 51 in index.js: w.length - 2 replaced with w.length - w.indexOf('e')
Mutant 52 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 3) + 'es';
})
Mutant 53 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'is';
})
Mutant 54 in index.js: /thesis|crisis/i replaced with /thesis|crisis|error/i
Mutant 55 in index.js: /thesis|crisis/i replaced with /thesis|crisis|thesis/i
Mutant 56 in index.js: /thesis|crisis/i replaced with /thesis|crisis|crisis/i
Mutant 57 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'es';
}
Mutant 58 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 3) + 'es';
}
Mutant 59 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 4) + 'es';
}
Mutant 60 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1)
Mutant 61 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length + 1)
Mutant 62 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length * 2)
Mutant 63 in index.js: w.substr replaced with w.substring
Mutant 64 in index.js: w.substr replaced with w.slice
Mutant 65 in index.js: 0 replaced with -1
Mutant 66 in index.js: 0 replaced with Math.floor(Math.random() * array.length)
Mutant 67 in index.js: w.length - 2 replaced with w.length + 1
Mutant 68 in index.js: w.length - 2 replaced with w.length * 2
Mutant 69 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 1) + 'ices';
})
Mutant 70 in index.js: /appendix|index/i replaced with /appendix|index|corpus/i
Mutant 71 in index.js: /appendix|index/i replaced with /appendix|index|corpus|[^aeiou]y$/i
Mutant 72 in index.js: /appendix|index/i replaced with /appendix|index|corpus|[^aeiou]y$|quy$/i
Mutant 73 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'es';
}
Mutant 74 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1)
Mutant 75 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 3)
Mutant 76 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 4)
Mutant 77 in index.js: w.substr replaced with w.substring
Mutant 78 in index.js: w.substr replaced with w.slice
Mutant 79 in index.js: 0 replaced with -1
Mutant 80 in index.js: 0 replaced with "hello"
Mutant 81 in index.js: w.length - 2 replaced with w.length - 3
Mutant 82 in index.js: w.length - 2 replaced with w.length - w.indexOf('e')
Mutant 83 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 's';
})
Mutant 84 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[aeiouy]o$/i, function (w) {
  return w + 'es';
})
Mutant 85 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[aeiouy]o$/i, function (w) {
  return w + 'ies';
})
Mutant 86 in index.js: /[aeiouy]o$/i replaced with /[^aeiouy]o$/i
Mutant 87 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'es';
}
Mutant 88 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'ies';
}
Mutant 89 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 's';
})
Mutant 90 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'ies';
})
Mutant 91 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es' + 's';
})
Mutant 92 in index.js: /[^aeiouy]o$/i replaced with /[^aeiouy]o$/g
Mutant 93 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 's';
}
Mutant 94 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 'ies';
}
Mutant 95 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 's' + 'es';
}
Mutant 96 in index.js: w === 'dwarf' || w === 'roof' replaced with w !== 'dwarf' && w !== 'roof'
Mutant 97 in index.js: w === 'dwarf' || w === 'roof' replaced with w !== 'dwarf' || w !== 'roof'
Mutant 98 in index.js: w === 'dwarf' || w === 'roof' replaced with w !== 'dwarf' && w !== 'roof' && w !== 'f'
Mutant 99 in index.js: regex replaced with w.replace(regex, 'ves')
Mutant 100 in index.js: regex replaced with w.replace(/ves$/, 'ves')
Mutant 101 in index.js: 'ves' replaced with 'ves' + 's'
Mutant 102 in index.js: 'ves' replaced with 'ves' + 'es'
Mutant 103 in index.js: 'ves' replaced with 'ves' + 'es' + 's'
Mutant 104 in index.js: addRule('criterion', 'criteria') replaced with addRule('criterion', 'criterions')
Mutant 105 in index.js: addRule('criterion', 'criteria') replaced with addRule('criterion', 'criterion')
Mutant 106 in index.js: 'criterion' replaced with 'criteria'
Mutant 107 in index.js: 'criteria' replaced with 'criterion'
Mutant 108 in index.js: 'criteria' replaced with 'criterions'
Mutant 109 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', 'bacteriums')
Mutant 110 in index.js: 'bacterium' replaced with 'bacteria'
Mutant 111 in index.js: 'bacteria' replaced with 'bacterium'
Mutant 112 in index.js: addRule('memo', 'memos') replaced with addRule('memo', 'memo')
Mutant 113 in index.js: addRule('memo', 'memos') replaced with addRule('memo', function (w) {
  return w + 's';
})
Mutant 114 in index.js: 'memo' replaced with 'memos'
Mutant 115 in index.js: 'memos' replaced with 'memo'
Mutant 116 in index.js: 'memos' replaced with 'memoes'
Mutant 117 in index.js: 'cello' replaced with 'cellos'
Mutant 118 in index.js: 'cellos' replaced with 'cello'
Mutant 119 in index.js: 'cellos' replaced with 'cell'
Mutant 120 in index.js: 'cellos' replaced with 'celloes'
Mutant 121 in index.js: addRule('die', 'dice') replaced with addRule('die', 'dies')
Mutant 122 in index.js: addRule('die', 'dice') replaced with addRule('die', 'dye')
Mutant 123 in index.js: 'die' replaced with 'dice'
Mutant 124 in index.js: 'die' replaced with 'dies'
Mutant 125 in index.js: 'dice' replaced with 'die'
Mutant 126 in index.js: 'dice' replaced with 'dies'
Mutant 127 in index.js: addRule('goose', 'geese') replaced with addRule('goose', 'gooses')
Mutant 128 in index.js: addRule('goose', 'geese') replaced with addRule('goose', 'gese')
Mutant 129 in index.js: 'goose' replaced with 'goat'
Mutant 130 in index.js: 'goose' replaced with 'geese'
Mutant 131 in index.js: 'goose' replaced with 'goose' + 's'
Mutant 132 in index.js: 'geese' replaced with 'goose'
Mutant 133 in index.js: 'geese' replaced with 'gooses'
Mutant 134 in index.js: 'geese' replaced with 'gosling'
Mutant 135 in index.js: addRule('mouse', 'mice') replaced with addRule('mice', 'mice')
Mutant 136 in index.js: addRule('mouse', 'mice') replaced with addRule('mouse', 'mouses')
Mutant 137 in index.js: 'mouse' replaced with 'mice'
Mutant 138 in index.js: 'mouse' replaced with 'mouses'
Mutant 139 in index.js: 'mouse' replaced with 'mous'
Mutant 140 in index.js: 'mice' replaced with 'mouses'
Mutant 141 in index.js: 'mice' replaced with 'mouse'
Mutant 142 in index.js: 'mice' replaced with 'mous'
Mutant 143 in index.js: addRule('person', 'people') replaced with addRule('person', 'peoples')
Mutant 144 in index.js: addRule('person', 'people') replaced with addRule('person', 'peopl')
Mutant 145 in index.js: 'person' replaced with 'people'
Mutant 146 in index.js: 'person' replaced with 'peoples'
Mutant 147 in index.js: 'person' replaced with 'persons'
Mutant 148 in index.js: 'people' replaced with 'person'
Mutant 149 in index.js: 'people' replaced with 'persons'
Mutant 150 in index.js: 'people' replaced with 'peoples'
Mutant 151 in index.js: addRule('chilli', 'chillies') replaced with addRule('chilli', 'chillis')
Mutant 152 in index.js: 'chilli' replaced with 'chillis'
Mutant 153 in index.js: 'chilli' replaced with 'chillies'
Mutant 154 in index.js: 'chilli' replaced with 'chill'
Mutant 155 in index.js: 'chillies' replaced with 'chillis'
Mutant 156 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/o/, 'e');
})
Mutant 157 in index.js: /^(?:wo)?man$/i replaced with /^(?:wo)?man$/g
Mutant 158 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/e/, 'a');
}
Mutant 159 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/a/, 'o');
}
Mutant 160 in index.js: w.replace(/a/, 'e') replaced with w.replace(/a/g, 'e')
Mutant 161 in index.js: w.replace(/a/, 'e') replaced with w.replace(/a/i, 'e')
Mutant 162 in index.js: /a/ replaced with /b/
Mutant 163 in index.js: /a/ replaced with /a|b/
Mutant 164 in index.js: /a/ replaced with /[^a]/
Mutant 165 in index.js: 'e' replaced with 'e' + 'a'
Mutant 166 in index.js: 'e' replaced with 'e' + 'a' + 'b'
Mutant 167 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w + 's';
})
Mutant 168 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w.substr(0, w.length - 1);
})
Mutant 169 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /bison|cod|deer|fowl|halibut|moose|sheep/i
Mutant 170 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 's';
}
Mutant 171 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 1);
}
Mutant 172 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 173 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w.replace(/s$/, '');
})
Mutant 174 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w.replace(/s$/, 'es');
})
Mutant 175 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with new RegExp('\\b(?:' + ['goggle', 'scissor', 'plier', 'tong', 'tweezer'] + ')s\\b', 'i')
Mutant 176 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with new RegExp('\\b(?:' + ['trouser', 'pant', 'pantie', 'clothe'] + ')s\\b', 'i')
Mutant 177 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes, games, illnesses, misc, undefined)
Mutant 178 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes, games, illnesses, misc, null)
Mutant 179 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes, games, illnesses, misc, NaN)
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes, games, illnesses, misc, undefined)
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes, games, illnesses, misc, null)
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes, games, illnesses, misc, NaN)
Mutant 180 in index.js: clothes replaced with trousers
Mutant 181 in index.js: clothes replaced with pants
Mutant 182 in index.js: clothes replaced with panties
Mutant 183 in index.js: games replaced with games.concat(clothes)
Mutant 184 in index.js: games replaced with games.slice(0, -1)
Mutant 185 in index.js: games replaced with games.splice(0, 1)
Mutant 186 in index.js: illnesses replaced with illnesses.concat(["new illness"])
Mutant 187 in index.js: illnesses replaced with illnesses.slice(0, -1)
Mutant 188 in index.js: illnesses replaced with illnesses.filter(function (illness) {
  return illness !== "rabie";
})
Mutant 189 in index.js: misc replaced with misc.concat(clothes, games, illnesses, 'foo')
Mutant 190 in index.js: misc replaced with misc.concat(clothes, games, illnesses, misc)
Mutant 191 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}
Mutant 192 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'es';
}
Mutant 193 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 's';
}
Mutant 194 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/i, function (w) {
  return w + 's';
})
Mutant 195 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/i, function (w) {
  return w.substr(0, w.length - 3) + 'ices';
})
Mutant 196 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/i, function (w) {
  return w.substr(0, w.length - 3) + 'es';
})
Mutant 197 in index.js: /ics$/i replaced with /ics$/g
Mutant 198 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 199 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.length;
}
Mutant 200 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.split('').reverse().join('');
}
Mutant 201 in index.js: addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w.toUpperCase();
})
Mutant 202 in index.js: addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w.substr(1);
})
Mutant 203 in index.js: /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i replaced with /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/g
Mutant 204 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 's';
}
Mutant 205 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 1);
}
Mutant 206 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 207 in index.js: num !== 1 || num === undefined replaced with num !== 1
Mutant 208 in index.js: num !== 1 || num === undefined replaced with num === undefined
Mutant 209 in index.js: num !== 1 || num === undefined replaced with num !== 1 && num !== undefined
Mutant 210 in index.js: i < rules.length replaced with i <= rules.length
Mutant 211 in index.js: i < rules.length replaced with i > rules.length
Mutant 212 in index.js: i < rules.length replaced with i >= rules.length
Mutant 213 in index.js: i++ replaced with i--
Mutant 214 in index.js: i++ replaced with i += 2
Mutant 215 in index.js: i++ replaced with i = 0
Mutant 216 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with rule[0].test(word)
Mutant 217 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with rule[0].exec(word)
Mutant 218 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with rule[0].match(word)
Mutant 219 in index.js: type replaced with rule[0].constructor.name
Mutant 220 in index.js: rule[0] replaced with rule[1]
Mutant 221 in index.js: rule[0] replaced with rule[2]
Mutant 222 in index.js: rule[0] replaced with rule[3]
Mutant 223 in index.js: rule[0].test replaced with rule[0].search
Mutant 224 in index.js: word replaced with word.toLowerCase()
Mutant 225 in index.js: word replaced with word.toUpperCase()
Mutant 226 in index.js: word replaced with word.split('').reverse().join('')
Mutant 227 in index.js: type replaced with rule[1]
Mutant 228 in index.js: type replaced with rule[0]
Mutant 229 in index.js: rule[1] replaced with rule[0]
Mutant 230 in index.js: rule[1] replaced with rule[2]
Mutant 231 in index.js: rule[1] replaced with rule[3]
Mutant 232 in index.js: rule[1](word, rule[0]) replaced with rule[1](word, rule[1])
Mutant 233 in index.js: rule[1](word, rule[0]) replaced with rule[1](word, rule[2])
Mutant 234 in index.js: rule[1](word, rule[0]) replaced with rule[1](word, rule[3])
Mutant 235 in index.js: rule[1] replaced with rule[0]
Mutant 236 in index.js: rule[1] replaced with rule[1] + 's'
Mutant 237 in index.js: word replaced with word.toUpperCase()
Mutant 238 in index.js: word replaced with word.length
Mutant 239 in index.js: word replaced with word.split('').reverse().join('')
Mutant 240 in index.js: rule[0] replaced with rule[1]
Mutant 241 in index.js: rule[0] replaced with rule[2]
Mutant 242 in index.js: rule[0] replaced with rule[3]
Mutant 243 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with rule[0] === word
Mutant 244 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with rule[0].test(word)
Mutant 245 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with rule[0].includes(word)
Mutant 246 in index.js: type replaced with rule[0].constructor.name
Mutant 247 in index.js: rule[0] replaced with rule[1]
Mutant 248 in index.js: rule[0] replaced with rule[2]
Mutant 249 in index.js: rule[0] replaced with rule[3]
Mutant 250 in index.js: rule[1] replaced with rule[0]
Mutant 251 in index.js: rule[1] replaced with rule[2]
Mutant 252 in index.js: rule[1] replaced with rule[3]
Mutant 253 in index.js: rule[1] replaced with rule[0]
Mutant 254 in index.js: rule[1] replaced with rule[1] + 's'
Mutant 255 in index.js: word replaced with word.toUpperCase()
Mutant 256 in index.js: word replaced with word.slice(1)
Mutant 257 in index.js: word replaced with word.split('').reverse().join('')
Mutant 258 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = null
Mutant 259 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = function () {
  return this.toString() + 's';
}
Mutant 260 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = function () {
  return this.toString().replace(/s$/, '');
}
Mutant 261 in index.js: plural(this, num) replaced with plural(this.length)
Mutant 262 in index.js: plural(this, num) replaced with plural(num + 1)
Mutant 263 in index.js: plural(this, num) replaced with plural("hello")
Mutant 264 in index.js: this replaced with null
Mutant 265 in index.js: this replaced with undefined
Mutant 266 in index.js: this replaced with {}
Mutant 267 in index.js: num replaced with num + 1
Mutant 268 in index.js: num replaced with num * 2
Mutant 269 in index.js: num replaced with num - 1
[32m15:43:45 (2594) INFO Instrumenter[39m Instrumented 1 source file(s) with 270 mutant(s)
[32m15:43:45 (2594) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m15:43:46 (2594) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m15:43:46 (2594) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m15:43:46 (2594) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 512 ms, overhead 1 ms).
Mutation testing 7% (elapsed: <1m, remaining: ~2m) 20/270 tested (1 survived, 0 timed out)
Mutation testing 14% (elapsed: <1m, remaining: ~1m) 40/270 tested (4 survived, 0 timed out)
Mutation testing 22% (elapsed: <1m, remaining: ~1m) 60/270 tested (10 survived, 0 timed out)
Mutation testing 29% (elapsed: <1m, remaining: ~1m) 80/270 tested (15 survived, 0 timed out)
Mutation testing 37% (elapsed: <1m, remaining: ~1m) 101/270 tested (19 survived, 0 timed out)
Mutation testing 44% (elapsed: ~1m, remaining: ~1m) 121/270 tested (27 survived, 0 timed out)
Mutation testing 52% (elapsed: ~1m, remaining: ~1m) 142/270 tested (27 survived, 0 timed out)
Mutation testing 60% (elapsed: ~1m, remaining: <1m) 162/270 tested (29 survived, 0 timed out)
Mutation testing 67% (elapsed: ~1m, remaining: <1m) 182/270 tested (33 survived, 0 timed out)
Mutation testing 75% (elapsed: ~1m, remaining: <1m) 203/270 tested (37 survived, 0 timed out)
Mutation testing 79% (elapsed: ~1m, remaining: <1m) 215/270 tested (39 survived, 0 timed out)
Mutation testing 86% (elapsed: ~2m, remaining: <1m) 233/270 tested (41 survived, 1 timed out)
Mutation testing 94% (elapsed: ~2m, remaining: <1m) 254/270 tested (47 survived, 1 timed out)

All tests
  ✓ All tests (killed 207)

[Survived] PrecomputedMutator
index.js:6:41
-     return Object.prototype.toString.call(obj).slice(8, -1)
+     return Object.prototype.toString.call(obj.valueOf()).slice(8, -1)

[Survived] PrecomputedMutator
index.js:16:50
-   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })
+   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substring(0, w.length - 1) + 'ies' })

[Survived] PrecomputedMutator
index.js:16:50
-   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })
+   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.slice(0, w.length - 1) + 'ies' })

[Survived] PrecomputedMutator
index.js:19:9
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$|s$/m, function(w) { return w + 'es' })

[Survived] PrecomputedMutator
index.js:22:71
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substring(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:71
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.slice(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:80
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr("hello", w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis|error/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis|thesis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:48
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.substring(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:48
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.slice(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:24:9
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index|corpus/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:49
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.substring(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:49
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.slice(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:58
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.substr("hello", w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:27:1
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiouy]o$/i, function (w) {
+     return w + 's';
+   });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiouy]o$/i, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:28:9
-   addRule(/[^aeiouy]o$/i, function(w) { return w + 'es' });
+   addRule(/[^aeiouy]o$/g, function(w) { return w + 'es' });

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacteriums')

[Survived] PrecomputedMutator
index.js:40:9
-   addRule('bacterium', 'bacteria')
+   addRule('bacteria', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacterium')

[Survived] PrecomputedMutator
index.js:41:1
-   addRule('memo', 'memos')
+   addRule('memo', function (w) {
+     return w + 's';
+   })

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cellos', 'cellos')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'cello')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'cell')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'celloes')

[Survived] PrecomputedMutator
index.js:49:47
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/g, 'e') })

[Survived] PrecomputedMutator
index.js:49:47
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/i, 'e') })

[Survived] PrecomputedMutator
index.js:49:57
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a|b/, 'e') })

[Survived] PrecomputedMutator
index.js:63:31
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc, undefined).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:31
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc, null).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:31
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc, NaN).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:53
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games.concat(clothes), illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:60
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses.concat(["new illness"]), misc).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:71
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc.concat(clothes, games, illnesses, 'foo')).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:71
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc.concat(clothes, games, illnesses, misc)).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num !== 1) {

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num === undefined) {

[Survived] PrecomputedMutator
index.js:80:54
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (type(rule[0]) === 'RegExp' && rule[0].test(word.toLowerCase())) {

[Survived] PrecomputedMutator
index.js:80:54
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (type(rule[0]) === 'RegExp' && rule[0].test(word.toUpperCase())) {

[Survived] PrecomputedMutator
index.js:83:11
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (rule[0] === word) {

[Survived] PrecomputedMutator
index.js:83:16
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (type(rule[1]) === 'String' && rule[0] === word) {

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[0]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[2]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[3]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[0](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1] + 's'(word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word.toUpperCase()) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word.slice(1)) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word.split('').reverse().join('')) : rule[1]

[Survived] PrecomputedMutator
index.js:103:7
-     if (String.prototype.plural === undefined) {
+     if (String.prototype.plural = function () {
+     return this.toString() + 's';
+   }) {

[Survived] PrecomputedMutator
index.js:103:7
-     if (String.prototype.plural === undefined) {
+     if (String.prototype.plural = function () {
+     return this.toString().replace(/s$/, '');
+   }) {

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(this.length)

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(num + 1)

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural("hello")

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(null, num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(undefined, num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural({}, num)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num + 1)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num * 2)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num - 1)

Ran 1.00 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   77.04 |      207 |         1 |         62 |        0 |        0 |
 index.js |   77.04 |      207 |         1 |         62 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m15:46:04 (2594) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/reports/mutation/mutation.html
[32m15:46:04 (2594) INFO MutationTestExecutor[39m Done in 2 minutes 20 seconds.

real	2m21.622s
user	2m21.013s
sys	0m25.812s
