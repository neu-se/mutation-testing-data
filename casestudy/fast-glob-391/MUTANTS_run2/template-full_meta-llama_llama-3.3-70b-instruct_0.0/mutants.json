[
  {
    "file": "src/providers/filters/entry.ts",
    "startLine": 12,
    "startColumn": 55,
    "endLine": 12,
    "endColumn": 63,
    "originalCode": "negative",
    "replacement": "this._settings.positivePatterns",
    "promptId": 6,
    "completionId": 1,
    "reason": "call/arg0"
  },
  {
    "file": "src/providers/filters/entry.ts",
    "startLine": 12,
    "startColumn": 55,
    "endLine": 12,
    "endColumn": 63,
    "originalCode": "negative",
    "replacement": "[]",
    "promptId": 6,
    "completionId": 1,
    "reason": "call/arg0"
  },
  {
    "file": "src/providers/filters/entry.ts",
    "startLine": 12,
    "startColumn": 65,
    "endLine": 15,
    "endColumn": 3,
    "originalCode": "{\n\t\t\t...this._micromatchOptions,\n\t\t\tdot: true\n\t\t}",
    "replacement": "{...this._micromatchOptions, dot: false }",
    "promptId": 7,
    "completionId": 2,
    "reason": "call/arg1"
  },
  {
    "file": "src/providers/filters/entry.ts",
    "startLine": 12,
    "startColumn": 65,
    "endLine": 15,
    "endColumn": 3,
    "originalCode": "{\n\t\t\t...this._micromatchOptions,\n\t\t\tdot: true\n\t\t}",
    "replacement": "{...this._micromatchOptions, nocase:!this._micromatchOptions.nocase }",
    "promptId": 7,
    "completionId": 2,
    "reason": "call/arg1"
  },
  {
    "file": "src/providers/filters/entry.ts",
    "startLine": 12,
    "startColumn": 65,
    "endLine": 15,
    "endColumn": 3,
    "originalCode": "{\n\t\t\t...this._micromatchOptions,\n\t\t\tdot: true\n\t\t}",
    "replacement": "this._settings",
    "promptId": 7,
    "completionId": 2,
    "reason": "call/arg1"
  },
  {
    "file": "src/providers/filters/entry.ts",
    "startLine": 12,
    "startColumn": 21,
    "endLine": 15,
    "endColumn": 4,
    "originalCode": "utils.pattern.convertPatternsToRe(negative, {\n\t\t\t...this._micromatchOptions,\n\t\t\tdot: true\n\t\t})",
    "replacement": "utils.pattern.convertPatternsToRe(positive)",
    "promptId": 8,
    "completionId": 3,
    "reason": "call/allArgs"
  },
  {
    "file": "src/providers/filters/entry.ts",
    "startLine": 12,
    "startColumn": 21,
    "endLine": 15,
    "endColumn": 4,
    "originalCode": "utils.pattern.convertPatternsToRe(negative, {\n\t\t\t...this._micromatchOptions,\n\t\t\tdot: true\n\t\t})",
    "replacement": "utils.pattern.convertPatternsToRe(negative, {...this._micromatchOptions, dot: false })",
    "promptId": 8,
    "completionId": 3,
    "reason": "call/allArgs"
  },
  {
    "file": "src/providers/filters/entry.ts",
    "startLine": 12,
    "startColumn": 21,
    "endLine": 15,
    "endColumn": 4,
    "originalCode": "utils.pattern.convertPatternsToRe(negative, {\n\t\t\t...this._micromatchOptions,\n\t\t\tdot: true\n\t\t})",
    "replacement": "utils.pattern.convertPatternsToRe([])",
    "promptId": 8,
    "completionId": 3,
    "reason": "call/allArgs"
  }
]