  Option 1: The PLACEHOLDER can be replaced with:
```
promise.resolve(promises)
```
This would result in different behavior because it would resolve the promise with a different value than the original code fragment, which is `promises`.

Option 2: The PLACEHOLDER can be replaced with:
```
array_map(promises, Q)
```
This would result in different behavior because it would map the promises to new resolved promises, which is different from the original code fragment that maps the promises to new promises that are resolved with their respective values.

Option 3: The PLACEHOLDER can be replaced with:
```
promises.then(function (val) {return val.resolve();})
```
This would result in different behavior because it would first resolve the promises with their values, and then return the resolved values to the promise returned by `when`. The original code fragment does not resolve the promises with their values, it only returns them as is.

DONE.