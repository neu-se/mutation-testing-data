*** using precomputed mutations ***
[32m09:01:19 (2436) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m09:01:19 (2436) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m09:01:19 (2436) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/node-jsonfile/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m09:01:19 (2436) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m09:01:19 (2436) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m09:01:19 (2436) INFO ProjectReader[39m Found 2 of 298 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 143 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in index.js: typeof options === 'string' replaced with !options
Mutant 1 in index.js: typeof options === 'string' replaced with options == null
Mutant 2 in index.js: typeof options === 'string' replaced with options === 'something'
Mutant 3 in index.js: universalify.fromCallback(fs.readFile)(file, options) replaced with universalify.fromCallback(fs.readFile)(file, options, "invalid-option")
Mutant 4 in index.js: universalify.fromCallback(fs.readFile)(file, options) replaced with universalify.fromCallback(fs.readFile)(file, options, false)
Mutant 5 in index.js: universalify.fromCallback(fs.readFile)(file, options) replaced with universalify.fromCallback(fs.readFile)(file, options, {})
Mutant 6 in index.js: universalify.fromCallback replaced with undefined
Mutant 7 in index.js: universalify.fromCallback replaced with null
not replacing universalify.fromCallback with undefined
not replacing universalify.fromCallback with null
Mutant 8 in index.js: fs.readFile replaced with fs.readFileSync
Mutant 9 in index.js: fs.readFile replaced with fs.readFileSync(file, options)
Mutant 10 in index.js: fs.readFile replaced with fs.writeFileSync
Mutant 11 in index.js: file replaced with file + 'hello'
Mutant 12 in index.js: file replaced with file.path
Mutant 13 in index.js: file replaced with file.readFileSync()
Mutant 14 in index.js: options replaced with options.encoding
Mutant 15 in index.js: options replaced with null
Mutant 16 in index.js: options replaced with {
  encoding: 'utf8'
}
Mutant 17 in index.js: data replaced with undefined
Mutant 18 in index.js: data replaced with null
Mutant 19 in index.js: data replaced with JSON.parse(data)
Mutant 20 in index.js: JSON.parse(data, options ? options.reviver : null) replaced with JSON.parse(null)
Mutant 21 in index.js: JSON.parse(data, options ? options.reviver : null) replaced with JSON.parse(data, options ? options.reviver : {})
Mutant 22 in index.js: JSON.parse(data, options ? options.reviver : null) replaced with JSON.parse(data, options ? options.reviver : 'foo')
Mutant 23 in index.js: data replaced with null
Mutant 24 in index.js: data replaced with undefined
Mutant 25 in index.js: data replaced with ''
Mutant 26 in index.js: options ? options.reviver : null replaced with options ? options.reviver : options.replacer
Mutant 27 in index.js: options ? options.reviver : null replaced with options ? options.reviver : 42
Mutant 28 in index.js: options ? options.reviver : null replaced with options ? options.reviver : options.split('\n')
Mutant 29 in index.js: shouldThrow replaced with !shouldThrow
Mutant 30 in index.js: _readFile replaced with _readFileAsync
Mutant 31 in index.js: _readFile replaced with _readFileSync
Mutant 32 in index.js: typeof options === 'string' replaced with options === null
Mutant 33 in index.js: typeof options === 'string' replaced with options === {}
Mutant 34 in index.js: typeof options === 'string' replaced with options.foo !== 'bar'
Mutant 35 in index.js: fs.readFileSync(file, options) replaced with fs.readFileSync(file + ".json", options)
Mutant 36 in index.js: fs.readFileSync(file, options) replaced with fs.readFileSync(options.encoding, file)
Mutant 37 in index.js: fs.readFileSync(file, options) replaced with fs.readFileSync(file, options.encoding)
Mutant 38 in index.js: fs.readFileSync replaced with fs.readFile
Mutant 39 in index.js: file replaced with file.slice(1)
Mutant 40 in index.js: file replaced with file.pop()
Mutant 41 in index.js: file replaced with file.shift()
Mutant 42 in index.js: options replaced with {
  encoding: 'utf16le'
}
Mutant 43 in index.js: options replaced with {
  flag: 'w'
}
Mutant 44 in index.js: options replaced with {
  mode: '0666'
}
Mutant 45 in index.js: content replaced with stripBom(fs.readFileSync(file, options))
Mutant 46 in index.js: JSON.parse(content, options.reviver) replaced with JSON.parse(content + options.reviver)
Mutant 47 in index.js: JSON.parse(content, options.reviver) replaced with JSON.parse(content - options.reviver)
Mutant 48 in index.js: JSON.parse(content, options.reviver) replaced with JSON.parse(options.reviver(content))
Mutant 49 in index.js: JSON.parse replaced with x => x
Mutant 50 in index.js: content replaced with null
Mutant 51 in index.js: content replaced with content.toLowerCase()
Mutant 52 in index.js: content replaced with content.length
Mutant 53 in index.js: options.reviver replaced with options.replacer
Mutant 54 in index.js: options.reviver replaced with options.reviver()
Mutant 55 in index.js: options.reviver replaced with JSON.parse(JSON.stringify(obj), options.reviver)
Mutant 56 in index.js: shouldThrow replaced with shouldThrow === true
Mutant 57 in index.js: stringify(obj, options) replaced with stringify(1 + obj, options)
Mutant 58 in index.js: stringify(obj, options) replaced with stringify(obj.toString(), options)
Mutant 59 in index.js: stringify(obj, options) replaced with stringify(typeof obj, options)
Mutant 60 in index.js: stringify replaced with jsontext
Mutant 61 in index.js: stringify replaced with stringified
Mutant 62 in index.js: obj replaced with null
Mutant 63 in index.js: obj replaced with undefined
Mutant 64 in index.js: obj replaced with {}
Mutant 65 in index.js: options replaced with options && options.call(obj)
Mutant 66 in index.js: options replaced with options && options.apply(obj)
Mutant 67 in index.js: universalify.fromCallback(fs.writeFile)(file, str, options) replaced with universalify.fromCallback(fs.writeFile)(_fs.writeFileSync(file, str, options))
Mutant 68 in index.js: universalify.fromCallback(fs.writeFile)(file, str, options) replaced with universalify.fromCallback(fs.writeFile)(_fs.writeFileSync(file, 'string', options))
Mutant 69 in index.js: universalify.fromCallback(fs.writeFile)(file, str, options) replaced with universalify.fromCallback(fs.writeFile)(_fs.writeFileSync(file, str.substring(0, 1), options))
Mutant 70 in index.js: universalify.fromCallback replaced with universalify.fromPromise
Mutant 71 in index.js: universalify.fromCallback replaced with universalify.fromCallbackAsync
not replacing universalify.fromCallback with universalify.fromPromise
not replacing universalify.fromCallback with universalify.fromCallbackAsync
Mutant 72 in index.js: fs.writeFile replaced with fs.writeSync
Mutant 73 in index.js: file replaced with fs.writeFileSync(file, str, options.encoding)
Mutant 74 in index.js: file replaced with fs.writeFileSync(file, str)
Mutant 75 in index.js: file replaced with fs.writeFileSync(file, str, options.encoding || 'utf8')
Mutant 76 in index.js: str replaced with console.log(str)
Mutant 77 in index.js: str replaced with 0
Mutant 78 in index.js: str replaced with undefined
Mutant 79 in index.js: options replaced with 1 + 1
Mutant 80 in index.js: options replaced with true
Mutant 81 in index.js: options replaced with "hello"
Mutant 82 in index.js: universalify.fromPromise replaced with universalify.fromAsync
Mutant 83 in index.js: universalify.fromPromise replaced with universalify.fromStream
Mutant 84 in index.js: _writeFile replaced with _writeFileSync
Mutant 85 in index.js: _writeFile replaced with writeFileAsync
Mutant 86 in index.js: _writeFile replaced with writeFileCallback
Mutant 87 in index.js: stringify(obj, options) replaced with stringify(true)
Mutant 88 in index.js: stringify(obj, options) replaced with stringify("hello")
Mutant 89 in index.js: stringify(obj, options) replaced with stringify(_fs.readFileSync)
Mutant 90 in index.js: obj replaced with "placeholder"
Mutant 91 in index.js: obj replaced with {}
Mutant 92 in index.js: obj replaced with obj && "placeholder"
Mutant 93 in index.js: options replaced with 1 + options
Mutant 94 in index.js: options replaced with options[0]
Mutant 95 in index.js: options replaced with options.foo
Mutant 96 in index.js: fs.writeFileSync(file, str, options) replaced with fs.writeFileSync(null, str, options)
Mutant 97 in index.js: fs.writeFileSync(file, str, options) replaced with fs.writeFileSync(file + '\n', str, options)
Mutant 98 in index.js: fs.writeFileSync(file, str, options) replaced with fs.writeFileSync(file, str, options.anyflag = true)
Mutant 99 in index.js: file replaced with fs.writeFileSync(file, str, options.encoding)
Mutant 100 in index.js: file replaced with fs.writeFileSync(file, str, 'utf16')
Mutant 101 in index.js: file replaced with fs.writeFileSync(file, str, options.encoding ? options.encoding : 'utf8')
Mutant 102 in index.js: str replaced with null
Mutant 103 in index.js: str replaced with undefined
Mutant 104 in index.js: str replaced with {}
Mutant 105 in index.js: options replaced with undefined
Mutant 106 in index.js: options replaced with {}
Mutant 107 in index.js: options replaced with {
  foo: 'bar'
}
Mutant 108 in utils.js: JSON.stringify(obj, replacer, spaces) replaced with JSON.stringify(obj, replacer, spaces, null)
Mutant 109 in utils.js: JSON.stringify(obj, replacer, spaces) replaced with JSON.stringify(obj, replacer, spaces, '')
Mutant 110 in utils.js: JSON.stringify(obj, replacer, spaces) replaced with JSON.stringify(obj, replacer, spaces, 42)
Mutant 111 in utils.js: obj replaced with obj.toISOString()
Mutant 112 in utils.js: obj replaced with obj.toLocaleString()
Mutant 113 in utils.js: obj replaced with obj.toString()
Mutant 114 in utils.js: replacer replaced with replacer || null
Mutant 115 in utils.js: replacer replaced with replacer + 1
Mutant 116 in utils.js: replacer replaced with replacer[0]
Mutant 117 in utils.js: str.replace(/\n/g, EOL) replaced with str.replace(/./g, EOL)
Mutant 118 in utils.js: str.replace(/\n/g, EOL) replaced with str.replace(/^/g, EOL)
Mutant 119 in utils.js: str.replace(/\n/g, EOL) replaced with str.replace(/.*/g, EOL)
Mutant 120 in utils.js: EOL replaced with 'foo'
Mutant 121 in utils.js: EOL replaced with EOF
Mutant 122 in utils.js: EOL replaced with undefined
Mutant 123 in utils.js: Buffer.isBuffer(content) replaced with Buffer.isEncoding(content)
Mutant 124 in utils.js: Buffer.isBuffer(content) replaced with !Buffer.isBuffer(content)
Mutant 125 in utils.js: Buffer.isBuffer(content) replaced with typeof content !== 'string'
Mutant 126 in utils.js: content replaced with content.tolowerCase()
Mutant 127 in utils.js: content replaced with content.substring(1)
Mutant 128 in utils.js: content replaced with "Hello, world!"
Mutant 129 in utils.js: content.toString replaced with content[0]
Mutant 130 in utils.js: content.toString replaced with content.length
Mutant 131 in utils.js: 'utf8' replaced with 'ascii'
Mutant 132 in utils.js: 'utf8' replaced with 'latin1'
Mutant 133 in utils.js: 'utf8' replaced with ''
Mutant 134 in utils.js: content.replace(/^\uFEFF/, '') replaced with content.replace(/^\uFEFF/, ' ')
Mutant 135 in utils.js: content.replace(/^\uFEFF/, '') replaced with content.replace(/^\uFEFF/, null)
Mutant 136 in utils.js: content.replace replaced with content.replaceAll
Mutant 137 in utils.js: /^\uFEFF/ replaced with /^\u0001/
Mutant 138 in utils.js: /^\uFEFF/ replaced with /^[^]/
Mutant 139 in utils.js: /^\uFEFF/ replaced with /^\uFEFF/g
Mutant 140 in utils.js: '' replaced with '' + ' '
Mutant 141 in utils.js: '' replaced with '' + 'x'
Mutant 142 in utils.js: '' replaced with '; '
[32m09:01:20 (2436) INFO Instrumenter[39m Instrumented 2 source file(s) with 143 mutant(s)
[32m09:01:20 (2436) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m09:01:21 (2436) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m09:01:21 (2436) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m09:01:22 (2436) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 850 ms, overhead 1 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~11m) 2/143 tested (0 survived, 0 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~15m) 3/143 tested (0 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~13m) 5/143 tested (0 survived, 2 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~12m) 7/143 tested (0 survived, 4 timed out)
Mutation testing 5% (elapsed: <1m, remaining: ~14m) 8/143 tested (0 survived, 5 timed out)
Mutation testing 6% (elapsed: ~1m, remaining: ~13m) 10/143 tested (0 survived, 7 timed out)
Mutation testing 7% (elapsed: ~1m, remaining: ~14m) 11/143 tested (0 survived, 8 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~13m) 13/143 tested (0 survived, 10 timed out)
Mutation testing 11% (elapsed: ~1m, remaining: ~11m) 17/143 tested (3 survived, 11 timed out)
Mutation testing 13% (elapsed: ~1m, remaining: ~10m) 19/143 tested (3 survived, 13 timed out)
Mutation testing 13% (elapsed: ~1m, remaining: ~11m) 20/143 tested (3 survived, 14 timed out)
Mutation testing 16% (elapsed: ~2m, remaining: ~10m) 23/143 tested (5 survived, 15 timed out)
Mutation testing 17% (elapsed: ~2m, remaining: ~10m) 25/143 tested (5 survived, 17 timed out)
Mutation testing 20% (elapsed: ~2m, remaining: ~9m) 29/143 tested (8 survived, 18 timed out)
Mutation testing 27% (elapsed: ~2m, remaining: ~6m) 39/143 tested (9 survived, 19 timed out)
Mutation testing 35% (elapsed: ~2m, remaining: ~4m) 51/143 tested (11 survived, 19 timed out)
Mutation testing 39% (elapsed: ~2m, remaining: ~4m) 57/143 tested (12 survived, 19 timed out)
Mutation testing 41% (elapsed: ~3m, remaining: ~4m) 59/143 tested (12 survived, 21 timed out)
Mutation testing 41% (elapsed: ~3m, remaining: ~4m) 60/143 tested (12 survived, 22 timed out)
Mutation testing 43% (elapsed: ~3m, remaining: ~4m) 62/143 tested (12 survived, 24 timed out)
Mutation testing 44% (elapsed: ~3m, remaining: ~4m) 64/143 tested (12 survived, 26 timed out)
Mutation testing 45% (elapsed: ~3m, remaining: ~4m) 65/143 tested (12 survived, 27 timed out)
Mutation testing 46% (elapsed: ~3m, remaining: ~4m) 67/143 tested (12 survived, 29 timed out)
Mutation testing 47% (elapsed: ~4m, remaining: ~4m) 68/143 tested (12 survived, 30 timed out)
Mutation testing 48% (elapsed: ~4m, remaining: ~4m) 70/143 tested (12 survived, 32 timed out)
Mutation testing 50% (elapsed: ~4m, remaining: ~4m) 72/143 tested (12 survived, 34 timed out)
Mutation testing 51% (elapsed: ~4m, remaining: ~4m) 73/143 tested (12 survived, 35 timed out)
Mutation testing 52% (elapsed: ~4m, remaining: ~4m) 75/143 tested (12 survived, 37 timed out)
Mutation testing 53% (elapsed: ~4m, remaining: ~4m) 76/143 tested (12 survived, 38 timed out)
Mutation testing 54% (elapsed: ~5m, remaining: ~4m) 78/143 tested (12 survived, 40 timed out)
Mutation testing 55% (elapsed: ~5m, remaining: ~4m) 79/143 tested (12 survived, 41 timed out)
Mutation testing 56% (elapsed: ~5m, remaining: ~4m) 81/143 tested (12 survived, 43 timed out)
Mutation testing 62% (elapsed: ~5m, remaining: ~3m) 90/143 tested (12 survived, 44 timed out)
Mutation testing 70% (elapsed: ~5m, remaining: ~2m) 101/143 tested (12 survived, 44 timed out)
Mutation testing 77% (elapsed: ~5m, remaining: ~1m) 111/143 tested (18 survived, 44 timed out)
Mutation testing 78% (elapsed: ~6m, remaining: ~1m) 112/143 tested (18 survived, 45 timed out)
Mutation testing 80% (elapsed: ~6m, remaining: ~1m) 115/143 tested (19 survived, 47 timed out)
Mutation testing 81% (elapsed: ~6m, remaining: ~1m) 117/143 tested (19 survived, 48 timed out)
Mutation testing 82% (elapsed: ~6m, remaining: ~1m) 118/143 tested (19 survived, 49 timed out)
Mutation testing 83% (elapsed: ~6m, remaining: ~1m) 120/143 tested (19 survived, 51 timed out)
Mutation testing 85% (elapsed: ~6m, remaining: ~1m) 122/143 tested (20 survived, 52 timed out)
Mutation testing 86% (elapsed: ~7m, remaining: ~1m) 124/143 tested (20 survived, 54 timed out)
Mutation testing 88% (elapsed: ~7m, remaining: <1m) 126/143 tested (21 survived, 55 timed out)
Mutation testing 89% (elapsed: ~7m, remaining: <1m) 128/143 tested (21 survived, 57 timed out)
Mutation testing 90% (elapsed: ~7m, remaining: <1m) 129/143 tested (21 survived, 58 timed out)
Mutation testing 91% (elapsed: ~7m, remaining: <1m) 131/143 tested (21 survived, 60 timed out)
Mutation testing 93% (elapsed: ~7m, remaining: <1m) 133/143 tested (21 survived, 60 timed out)
Mutation testing 95% (elapsed: ~8m, remaining: <1m) 136/143 tested (22 survived, 61 timed out)
Mutation testing 95% (elapsed: ~8m, remaining: <1m) 137/143 tested (22 survived, 62 timed out)
Mutation testing 98% (elapsed: ~8m, remaining: <1m) 141/143 tested (24 survived, 63 timed out)

All tests
  ✓ All tests (killed 56)

[Survived] PrecomputedMutator
index.js:19:65
-     let data = await universalify.fromCallback(fs.readFile)(file, options)
+     let data = await universalify.fromCallback(fs.readFile)(file, options.encoding)

[Survived] PrecomputedMutator
index.js:19:65
-     let data = await universalify.fromCallback(fs.readFile)(file, options)
+     let data = await universalify.fromCallback(fs.readFile)(file, null)

[Survived] PrecomputedMutator
index.js:19:65
-     let data = await universalify.fromCallback(fs.readFile)(file, options)
+     let data = await universalify.fromCallback(fs.readFile)(file, {
+     encoding: 'utf8'
+   })

[Survived] PrecomputedMutator
index.js:25:11
-       obj = JSON.parse(data, options ? options.reviver : null)
+       obj = JSON.parse(data, options ? options.reviver : {})

[Survived] PrecomputedMutator
index.js:25:11
-       obj = JSON.parse(data, options ? options.reviver : null)
+       obj = JSON.parse(data, options ? options.reviver : 'foo')

[Survived] PrecomputedMutator
index.js:25:28
-       obj = JSON.parse(data, options ? options.reviver : null)
+       obj = JSON.parse(data, options ? options.reviver : options.replacer)

[Survived] PrecomputedMutator
index.js:25:28
-       obj = JSON.parse(data, options ? options.reviver : null)
+       obj = JSON.parse(data, options ? options.reviver : 42)

[Survived] PrecomputedMutator
index.js:25:28
-       obj = JSON.parse(data, options ? options.reviver : null)
+       obj = JSON.parse(data, options ? options.reviver : options.split('\n'))

[Survived] PrecomputedMutator
index.js:50:19
-       let content = fs.readFileSync(file, options)
+       let content = fs.readFileSync(file, options.encoding)

[Survived] PrecomputedMutator
index.js:50:41
-       let content = fs.readFileSync(file, options)
+       let content = fs.readFileSync(file, {
+     mode: '0666'
+   })

[Survived] PrecomputedMutator
index.js:51:24
-       content = stripBom(content)
+       content = stripBom(stripBom(fs.readFileSync(file, options)))

[Survived] PrecomputedMutator
index.js:54:9
-       if (shouldThrow) {
+       if (shouldThrow === true) {

[Survived] PrecomputedMutator
index.js:78:38
-     return fs.writeFileSync(file, str, options)
+     return fs.writeFileSync(file, str, undefined)

[Survived] PrecomputedMutator
index.js:78:38
-     return fs.writeFileSync(file, str, options)
+     return fs.writeFileSync(file, str, {})

[Survived] PrecomputedMutator
index.js:78:38
-     return fs.writeFileSync(file, str, options)
+     return fs.writeFileSync(file, str, {
+     foo: 'bar'
+   })

[Survived] PrecomputedMutator
utils.js:3:15
-     const str = JSON.stringify(obj, replacer, spaces)
+     const str = JSON.stringify(obj, replacer, spaces, null)

[Survived] PrecomputedMutator
utils.js:3:15
-     const str = JSON.stringify(obj, replacer, spaces)
+     const str = JSON.stringify(obj, replacer, spaces, '')

[Survived] PrecomputedMutator
utils.js:3:15
-     const str = JSON.stringify(obj, replacer, spaces)
+     const str = JSON.stringify(obj, replacer, spaces, 42)

[Survived] PrecomputedMutator
utils.js:3:35
-     const str = JSON.stringify(obj, replacer, spaces)
+     const str = JSON.stringify(obj, replacer || null, spaces)

[Survived] PrecomputedMutator
utils.js:5:29
-     return str.replace(/\n/g, EOL) + EOF
+     return str.replace(/\n/g, EOF) + EOF

[Survived] PrecomputedMutator
utils.js:10:7
-     if (Buffer.isBuffer(content)) content = content.toString('utf8')
+     if (typeof content !== 'string') content = content.toString('utf8')

[Survived] PrecomputedMutator
utils.js:11:10
-     return content.replace(/^\uFEFF/, '')
+     return content.replace(/^\uFEFF/, ' ')

[Survived] PrecomputedMutator
utils.js:11:26
-     return content.replace(/^\uFEFF/, '')
+     return content.replace(/^\uFEFF/g, '')

[Survived] PrecomputedMutator
utils.js:11:37
-     return content.replace(/^\uFEFF/, '')
+     return content.replace(/^\uFEFF/, '' + ' ')

Ran 0.56 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   83.22 |       56 |        63 |         24 |        0 |        0 |
 index.js |   86.11 |       49 |        44 |         15 |        0 |        0 |
 utils.js |   74.29 |        7 |        19 |          9 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m09:09:50 (2436) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/node-jsonfile/reports/mutation/mutation.html
[32m09:09:50 (2436) INFO MutationTestExecutor[39m Done in 8 minutes 31 seconds.

real	8m32.584s
user	1m18.840s
sys	0m16.851s
