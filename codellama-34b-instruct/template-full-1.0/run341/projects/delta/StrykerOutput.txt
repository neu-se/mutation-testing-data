*** using precomputed mutations ***
[32m21:49:56 (2852) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m21:49:56 (2852) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m21:49:56 (2852) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/delta/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m21:49:56 (2852) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m21:49:56 (2852) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m21:49:57 (2852) INFO ProjectReader[39m Found 4 of 1873 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 698 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in AttributeMap.ts: typeof a !== 'object' replaced with a == null
Mutant 1 in AttributeMap.ts: typeof a !== 'object' replaced with Object.keys(a).length > 0
Mutant 2 in AttributeMap.ts: typeof a !== 'object' replaced with Array.isArray(a)
Mutant 3 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'undefined'
Mutant 4 in AttributeMap.ts: typeof b !== 'object' replaced with b == null
Mutant 5 in AttributeMap.ts: typeof b !== 'object' replaced with b.constructor !== Object
Mutant 6 in AttributeMap.ts: b replaced with a
Mutant 7 in AttributeMap.ts: b replaced with a || b
Mutant 8 in AttributeMap.ts: attributes[key] != null replaced with attributes[key] === null
Mutant 9 in AttributeMap.ts: attributes[key] != null replaced with typeof attributes[key] === 'undefined'
Mutant 10 in AttributeMap.ts: attributes[key] != null replaced with attributes[key] !== attributes[key]
Mutant 11 in AttributeMap.ts: for (const key in a) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
} replaced with for (const key in b) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
}
Mutant 12 in AttributeMap.ts: for (const key in a) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
} replaced with for (const key in c) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
}
Mutant 13 in AttributeMap.ts: for (const key in a) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
} replaced with for (const key in []) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
}
Mutant 14 in AttributeMap.ts: a replaced with a && b
Mutant 15 in AttributeMap.ts: a replaced with a || b
Mutant 16 in AttributeMap.ts: a replaced with a !== b
Mutant 17 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a[key] == undefined && b[key] !== undefined
Mutant 18 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a[key] !== null && b[key] === null
Mutant 19 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a[key] !== b[key]
Mutant 20 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with a[key] !== b[key]
Mutant 21 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with !isEqual(a[key], b[key]) && a[key] === undefined
Mutant 22 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with !isEqual(a[key], b[key]) && b[key] === undefined
Mutant 23 in AttributeMap.ts: isEqual replaced with a[key] == b[key]
Mutant 24 in AttributeMap.ts: a[key] replaced with a[key] + 1
Mutant 25 in AttributeMap.ts: a[key] replaced with a[key] && b[key]
Mutant 26 in AttributeMap.ts: b[key] replaced with b[key] !== undefined ? b[key] : null
Mutant 27 in AttributeMap.ts: attributes replaced with null
Mutant 28 in AttributeMap.ts: attributes replaced with undefined
Mutant 29 in AttributeMap.ts: attributes replaced with 1
Mutant 30 in AttributeMap.ts: base replaced with baseInverted
Mutant 31 in AttributeMap.ts: base replaced with this
Mutant 32 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] == attr[key] && attr[key] !== undefined
Mutant 33 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] >= attr[key] && attr[key] !== undefined
Mutant 34 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] !== attr[key]
Mutant 35 in AttributeMap.ts: attr replaced with base
Mutant 36 in AttributeMap.ts: attr replaced with this
Mutant 37 in AttributeMap.ts: attr replaced with null
Mutant 38 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] === base[key]
Mutant 39 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] != base[key]
Mutant 40 in AttributeMap.ts: typeof a !== 'object' replaced with typeof a === 'object'
Mutant 41 in AttributeMap.ts: typeof a !== 'object' replaced with a !== undefined
Mutant 42 in AttributeMap.ts: typeof a !== 'object' replaced with a == null
Mutant 43 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'array'
Mutant 44 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'string'
Mutant 45 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'function'
Mutant 46 in AttributeMap.ts: !priority replaced with priority
Mutant 47 in AttributeMap.ts: !priority replaced with !a
Mutant 48 in AttributeMap.ts: !priority replaced with a + 1
Mutant 49 in AttributeMap.ts: b replaced with !b
Mutant 50 in AttributeMap.ts: b replaced with b && false
Mutant 51 in AttributeMap.ts: b replaced with b || false
Mutant 52 in AttributeMap.ts: a[key] === undefined replaced with a[key] != undefined
Mutant 53 in AttributeMap.ts: a[key] === undefined replaced with a[key] !== undefined
Mutant 54 in AttributeMap.ts: a[key] === undefined replaced with a[key] === null
Mutant 55 in AttributeMap.ts: attributes replaced with Object.keys(attributes)[0]
Mutant 56 in AttributeMap.ts: attributes replaced with attributes.length
Mutant 57 in AttributeMap.ts: attributes replaced with attributes.keys()
Mutant 58 in Delta.ts: 0 replaced with 1
Mutant 59 in Delta.ts: 0 replaced with ''
Mutant 60 in Delta.ts: 0 replaced with length
Mutant 61 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'object' && a !== null
Mutant 62 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'object' && a !== undefined
Mutant 63 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'object' && a !== typeof b
Mutant 64 in Delta.ts: typeof b !== 'object' || b === null replaced with null
Mutant 65 in Delta.ts: typeof b !== 'object' || b === null replaced with typeof b !== 'string'
Mutant 66 in Delta.ts: a replaced with NULL_CHARACTER
Mutant 67 in Delta.ts: a replaced with ''
Mutant 68 in Delta.ts: a replaced with ' '
Mutant 69 in Delta.ts: b replaced with a
Mutant 70 in Delta.ts: b replaced with c
Mutant 71 in Delta.ts: b replaced with DONE
Mutant 72 in Delta.ts: b replaced with A
Mutant 73 in Delta.ts: b replaced with B
Mutant 74 in Delta.ts: ops replaced with ops[index - 1]
Mutant 75 in Delta.ts: ops replaced with this.ops
Mutant 76 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops !== null && typeof ops.ops === 'object'
Mutant 77 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops !== null && ops.ops instanceof Array
Mutant 78 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops !== null && Object.prototype.toString.call(ops.ops) === '[object Array]'
Mutant 79 in Delta.ts: Array.isArray replaced with !Array.isArray
Mutant 80 in Delta.ts: Array.isArray replaced with Array.isnotArray
Mutant 81 in Delta.ts: ops.ops replaced with ops.ops.length
Mutant 82 in Delta.ts: ops.ops replaced with ops.ops[0]
Mutant 83 in Delta.ts: ops.ops replaced with ops.ops.map(op => op.retain)
Mutant 84 in Delta.ts: attributes replaced with arg
Mutant 85 in Delta.ts: attributes replaced with null
Mutant 86 in Delta.ts: newOp replaced with {}
Mutant 87 in Delta.ts: newOp replaced with []
Mutant 88 in Delta.ts: newOp replaced with undefined
Mutant 89 in Delta.ts: length <= 0 replaced with length < 0
Mutant 90 in Delta.ts: length <= 0 replaced with length !== 0
Mutant 91 in Delta.ts: length <= 0 replaced with length === -1
Mutant 92 in Delta.ts: {
  delete: length
} replaced with {
  insert: length
}
Mutant 93 in Delta.ts: {
  delete: length
} replaced with {
  retain: length
}
Mutant 94 in Delta.ts: typeof length === 'number' && length <= 0 replaced with typeof length === 'number' && length < 0
Mutant 95 in Delta.ts: typeof length === 'number' && length <= 0 replaced with typeof length === 'object' && length.values < 0
Mutant 96 in Delta.ts: typeof length === 'number' && length <= 0 replaced with typeof length === 'string' && length.length < 0
Mutant 97 in Delta.ts: attributes replaced with Op.length(newOp.insert)
Mutant 98 in Delta.ts: attributes replaced with Object.keys(newOp.insert).length
Mutant 99 in Delta.ts: attributes replaced with newOp.insert.length
Mutant 100 in Delta.ts: cloneDeep replaced with cloneShallow
Mutant 101 in Delta.ts: typeof lastOp === 'object' replaced with typeof lastOp == null
Mutant 102 in Delta.ts: typeof lastOp === 'object' replaced with typeof lastOp === 'undefined'
Mutant 103 in Delta.ts: typeof lastOp === 'object' replaced with typeof lastOp === 'string'
Mutant 104 in Delta.ts: typeof lastOp.delete === 'number' && newOp.insert != null replaced with newOp.insert === lastOp.insert
Mutant 105 in Delta.ts: typeof lastOp.delete === 'number' && newOp.insert != null replaced with newOp.attributes.length < lastOp.attributes.length
Mutant 106 in Delta.ts: typeof lastOp !== 'object' replaced with lastOp != null
Mutant 107 in Delta.ts: typeof lastOp !== 'object' replaced with typeof lastOp !== 'undefined'
Mutant 108 in Delta.ts: typeof lastOp !== 'object' replaced with lastOp.hasOwnProperty('insert')
Mutant 109 in Delta.ts: this.ops.unshift replaced with this.ops.push
Mutant 110 in Delta.ts: this.ops.unshift replaced with this.ops.shift
Mutant 111 in Delta.ts: newOp replaced with 0
Mutant 112 in Delta.ts: newOp replaced with null
Mutant 113 in Delta.ts: newOp replaced with undefined
Mutant 114 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(newOp.attributes, lastOp.attributes.length)
Mutant 115 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(newOp.attributes, this.ops[index - 1].attributes)
Mutant 116 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with isEqual(newOp.attributes, Object.keys(this.ops[index - 1].attributes).length)
Mutant 117 in Delta.ts: isEqual replaced with lastOp.attributes == newOp.attributes
Mutant 118 in Delta.ts: isEqual replaced with lastOp.attributes !== newOp.attributes
Mutant 119 in Delta.ts: newOp.attributes replaced with newOp["attributes"]
Mutant 120 in Delta.ts: newOp.attributes replaced with newOp.attr
Mutant 121 in Delta.ts: newOp.attributes replaced with lastOp.attributes["prop"]
Mutant 122 in Delta.ts: lastOp.attributes replaced with null
Mutant 123 in Delta.ts: lastOp.attributes replaced with undefined
Mutant 124 in Delta.ts: lastOp.attributes replaced with {}
Mutant 125 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with newOp.insert !== lastOp.insert
Mutant 126 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with newOp.insert >= lastOp.insert
Mutant 127 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with newOp.insert <= lastOp.insert
Mutant 128 in Delta.ts: typeof newOp.attributes === 'object' replaced with typeof newOp.attributes === 'undefined'
Mutant 129 in Delta.ts: typeof newOp.attributes === 'object' replaced with null
Mutant 130 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes == null
Mutant 131 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'number' && typeof lastOp.retain === 'string'
Mutant 132 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'number' && lastOp.retain === 0
Mutant 133 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'number' && lastOp.retain === null
Mutant 134 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes !== 'object'
Mutant 135 in Delta.ts: typeof newOp.attributes === 'object' replaced with typeof newOp.attributes !== 'undefined'
Mutant 136 in Delta.ts: typeof newOp.attributes === 'object' replaced with other.ops.indexOf(newOp) !== -1
Mutant 137 in Delta.ts: index === this.ops.length replaced with index > this.ops.length
Mutant 138 in Delta.ts: index === this.ops.length replaced with index < this.ops.length
Mutant 139 in Delta.ts: index === this.ops.length replaced with index === 0
Mutant 140 in Delta.ts: newOp replaced with null
Mutant 141 in Delta.ts: newOp replaced with this.ops[this.ops.length - 1]
Mutant 142 in Delta.ts: newOp replaced with {}
Mutant 143 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, newOp.length, newOp)
Mutant 144 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, 1, newOp)
Mutant 145 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, Math.random() * this.ops.length, newOp)
Mutant 146 in Delta.ts: index replaced with index + 1
Mutant 147 in Delta.ts: index replaced with index - 1
Mutant 148 in Delta.ts: index replaced with index * 2
Mutant 149 in Delta.ts: 0 replaced with 1
Mutant 150 in Delta.ts: 0 replaced with -1
Mutant 151 in Delta.ts: 0 replaced with Math.random()
Mutant 152 in Delta.ts: newOp replaced with null
Mutant 153 in Delta.ts: newOp replaced with undefined
Mutant 154 in Delta.ts: newOp replaced with 'Hello, world!'
Mutant 155 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp && typeof lastOp.retain === 'number' && otherIter.peekLength() > 1
Mutant 156 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp && typeof lastOp.retain === 'number' && otherIter.peekLength() > 10
Mutant 157 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp && typeof lastOp.retain === 'number' && Math.random() < 0.5
Mutant 158 in Delta.ts: this.ops.forEach replaced with this.ops.push
Mutant 159 in Delta.ts: this.ops.forEach replaced with this.ops.pop
Mutant 160 in Delta.ts: this.ops.forEach replaced with this.ops.shift
Mutant 161 in Delta.ts: predicate replaced with predicate.attributes
Mutant 162 in Delta.ts: predicate replaced with this.ops.length > predicate.attributes.length
Mutant 163 in Delta.ts: predicate replaced with !predicate
Mutant 164 in Delta.ts: predicate replaced with function () {
  predicate(Op.august);
}
Mutant 165 in Delta.ts: predicate replaced with predicate, _ => predicate
Mutant 166 in Delta.ts: predicate replaced with 0
Mutant 167 in Delta.ts: predicate replaced with -1
Mutant 168 in Delta.ts: predicate replaced with this.ops.length + 1
Mutant 169 in Delta.ts: op replaced with op.attributes ? {} : {
  retain: op.length
}
Mutant 170 in Delta.ts: op replaced with op.attributes ? {
  insert: op[insert]
} : op
Mutant 171 in Delta.ts: op replaced with op.attributes ? {
  retain: op.length
} : op
Mutant 172 in Delta.ts: this.ops.reduce(predicate, initialValue) replaced with this.ops.reduce(item => item)
Mutant 173 in Delta.ts: this.ops.reduce(predicate, initialValue) replaced with this.ops.reduce(item => item + 1)
Mutant 174 in Delta.ts: this.ops.reduce(predicate, initialValue) replaced with this.ops.reduce(item => item * 2)
Mutant 175 in Delta.ts: predicate replaced with false
Mutant 176 in Delta.ts: predicate replaced with null
Mutant 177 in Delta.ts: predicate replaced with {}
Mutant 178 in Delta.ts: initialValue replaced with null
Mutant 179 in Delta.ts: initialValue replaced with "string"
Mutant 180 in Delta.ts: initialValue replaced with 42
Mutant 181 in Delta.ts: elem.insert replaced with elem.retain
Mutant 182 in Delta.ts: elem.insert replaced with elem.insert.length
Mutant 183 in Delta.ts: Op.length replaced with Op.length > 0
Mutant 184 in Delta.ts: Op.length replaced with Op.length ^ 2
Mutant 185 in Delta.ts: Op.length replaced with Op.length <= 1
Mutant 186 in Delta.ts: elem.delete replaced with elem.retain
Mutant 187 in Delta.ts: elem.delete replaced with elem.insert
Mutant 188 in Delta.ts: Op.length replaced with Op.length < 0
Mutant 189 in Delta.ts: Op.length replaced with Op.length <= 0
Mutant 190 in Delta.ts: Op.length replaced with Op.length === 0
Mutant 191 in Delta.ts: elem replaced with lastOp.attributes
Mutant 192 in Delta.ts: elem replaced with this
Mutant 193 in Delta.ts: index < end && iter.hasNext() replaced with index > end && iter.hasNext()
Mutant 194 in Delta.ts: index < end && iter.hasNext() replaced with index <= end && iter.hasNext()
Mutant 195 in Delta.ts: index < end && iter.hasNext() replaced with index >= end && iter.hasNext()
Mutant 196 in Delta.ts: iter.hasNext replaced with iter['hasNext']
Mutant 197 in Delta.ts: index < start replaced with index <= start
Mutant 198 in Delta.ts: index < start replaced with index >= start
Mutant 199 in Delta.ts: index < start replaced with index > start
Mutant 200 in Delta.ts: start - index replaced with start + index
Mutant 201 in Delta.ts: start - index replaced with start - index - 1
Mutant 202 in Delta.ts: start - index replaced with start - index + 1
Mutant 203 in Delta.ts: end - index replaced with end - 1
Mutant 204 in Delta.ts: end - index replaced with end + 1
Mutant 205 in Delta.ts: end - index replaced with index + 1
Mutant 206 in Delta.ts: nextOp replaced with nextOp.invert()
Mutant 207 in Delta.ts: nextOp replaced with nextOp.negate()
Mutant 208 in Delta.ts: nextOp replaced with nextOp.fabs()
Mutant 209 in Delta.ts: Op.length replaced with 0
Mutant 210 in Delta.ts: Op.length replaced with -1
Mutant 211 in Delta.ts: nextOp replaced with {
  insert: newOp.insert,
  attributes: newOp.attributes
}
Mutant 212 in Delta.ts: nextOp replaced with {
  insert: lastOp.insert,
  attributes: lastOp.attributes
}
Mutant 213 in Delta.ts: nextOp replaced with {
  insert: newOp.insert,
  attributes: lastOp.attributes
}
Mutant 214 in Delta.ts: firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null replaced with typeof firstOther.retain === 'number' && firstOther.attributes != null
Mutant 215 in Delta.ts: firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null replaced with typeof firstOther.retain !== 'number' || firstOther.attributes == null
Mutant 216 in Delta.ts: firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null replaced with typeof firstOther.retain !== 'number' && firstOther.attributes != null
Mutant 217 in Delta.ts: thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft replaced with thisIter.peekLength() >= firstLeft
Mutant 218 in Delta.ts: thisIter.peekType replaced with thisIter.peekData
Mutant 219 in Delta.ts: thisIter.peekType replaced with thisIter.advance
Mutant 220 in Delta.ts: thisIter.peekLength replaced with this.ops.length - 1
Mutant 221 in Delta.ts: thisIter.peekLength replaced with thisIter.peekLength - 1
Mutant 222 in Delta.ts: thisIter.peekLength replaced with thisIter.peekLength + 1
Mutant 223 in Delta.ts: thisIter.peekLength replaced with otherIter.peekLength
Mutant 224 in Delta.ts: thisIter.next() replaced with thisIter.next(2)
Mutant 225 in Delta.ts: thisIter.next() replaced with otherIter.next()
Mutant 226 in Delta.ts: thisIter.next() replaced with otherIter.previous()
Mutant 227 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with firstOther.retain > firstLeft
Mutant 228 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with firstOther.retain - firstLeft !== 0
Mutant 229 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with firstOther.retain - firstLeft > 1
Mutant 230 in Delta.ts: otherIter.next replaced with {}
Mutant 231 in Delta.ts: firstOther.retain - firstLeft replaced with firstOther.retain + firstLeft
Mutant 232 in Delta.ts: firstOther.retain - firstLeft replaced with firstOther.retain - 1
Mutant 233 in Delta.ts: firstOther.retain - firstLeft replaced with firstOther.retain * 0
Mutant 234 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.hasNext() != otherIter.hasNext()
Mutant 235 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.hasNext() === otherIter.hasNext()
Mutant 236 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.hasNext() + otherIter.hasNext()
Mutant 237 in Delta.ts: thisIter.hasNext replaced with thisIter.nextIndex < this.ops.length
Mutant 238 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() !== 'insert'
Mutant 239 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() === 'retain'
Mutant 240 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() !== 'retain'
Mutant 241 in Delta.ts: otherIter.peekType replaced with thisIter.peekType
Mutant 242 in Delta.ts: otherIter.peekType replaced with otherIter.peekLength
Mutant 243 in Delta.ts: thisIter.peekType() === 'delete' replaced with typeof thisIter.peek() === 'object'
Mutant 244 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekType() === 'retain'
Mutant 245 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekAction() === 'retain'
Mutant 246 in Delta.ts: thisIter.peekType replaced with typeof thisIter.peekText === 'string'
Mutant 247 in Delta.ts: thisIter.peekType replaced with typeof thisIter.peekOp === 'object'
Mutant 248 in Delta.ts: thisIter.peekType replaced with typeof thisIter.peekOp === 'object' && thisIter.peekOp.insert
Mutant 249 in Delta.ts: thisIter.next() replaced with thisIter.next(length - 1)
Mutant 250 in Delta.ts: thisIter.next() replaced with otherIter.next()
Mutant 251 in Delta.ts: thisIter.next() replaced with thisIter.next(length - 1) + otherIter.next()
Mutant 252 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(otherIter.length)
Mutant 253 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() - 1)
Mutant 254 in Delta.ts: Math.min replaced with Math.max
Mutant 255 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekType()
Mutant 256 in Delta.ts: thisIter.peekLength() replaced with otherIter.peekType()
Mutant 257 in Delta.ts: thisIter.peekLength() replaced with length * otherIter.peekLength()
Mutant 258 in Delta.ts: otherIter.peekLength() replaced with length
Mutant 259 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() + 1
Mutant 260 in Delta.ts: otherIter.peekLength() replaced with math.max(length, otherIter.peekLength())
Mutant 261 in Delta.ts: thisIter.next replaced with other
Mutant 262 in Delta.ts: length replaced with length + 1
Mutant 263 in Delta.ts: length replaced with length - 1
Mutant 264 in Delta.ts: length replaced with length * 2
Mutant 265 in Delta.ts: otherOp.retain replaced with -otherOp.retain
Mutant 266 in Delta.ts: otherOp.retain replaced with thisOp
Mutant 267 in Delta.ts: otherOp.retain replaced with otherOp.insert
Mutant 268 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof thisOp.retain === 'string'
Mutant 269 in Delta.ts: typeof thisOp.retain === 'number' replaced with thisOp.retain == null
Mutant 270 in Delta.ts: typeof thisOp.retain === 'number' replaced with thisOp.retain === undefined
Mutant 271 in Delta.ts: typeof otherOp.retain === 'number' replaced with otherOp.retain === 'retain'
Mutant 272 in Delta.ts: typeof otherOp.retain === 'number' replaced with !typeof otherOp.retain
Mutant 273 in Delta.ts: typeof otherOp.retain === 'number' replaced with otherOp.retain instanceof Array
Mutant 274 in Delta.ts: embedType replaced with otherOp.retain
Mutant 275 in Delta.ts: embedType replaced with thisOp.retain
Mutant 276 in Delta.ts: attributes replaced with 1
Mutant 277 in Delta.ts: attributes replaced with undefined
Mutant 278 in Delta.ts: attributes replaced with null
Mutant 279 in Delta.ts: newOp replaced with null
Mutant 280 in Delta.ts: newOp replaced with undefined
Mutant 281 in Delta.ts: newOp replaced with 0
Mutant 282 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with otherIter.peekType() === 'insert' && otherIter.peekLength() === firstLeft
Mutant 283 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with iter.next()
Mutant 284 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with otherIter.peek().retain
Mutant 285 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[0], newOp)
Mutant 286 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[delta.ops.length - 2], newOp)
Mutant 287 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(undefined, newOp)
Mutant 288 in Delta.ts: isEqual replaced with !isEqual
Mutant 289 in Delta.ts: isEqual replaced with isNotEqual
Mutant 290 in Delta.ts: delta.ops[delta.ops.length - 1] replaced with delta.ops[0]
Mutant 291 in Delta.ts: delta.ops[delta.ops.length - 1] replaced with delta.ops[i]
Mutant 292 in Delta.ts: delta.ops[delta.ops.length - 1] replaced with delta.ops[delta.ops.length - 2]
Mutant 293 in Delta.ts: newOp replaced with newOp['retain']
Mutant 294 in Delta.ts: thisIter.rest replaced with delta.ops
Mutant 295 in Delta.ts: rest replaced with length
Mutant 296 in Delta.ts: rest replaced with toString()
Mutant 297 in Delta.ts: rest replaced with null
Mutant 298 in Delta.ts: delta.push replaced with delta.insert
Mutant 299 in Delta.ts: delta.push replaced with delta.concat
Mutant 300 in Delta.ts: otherOp replaced with null
Mutant 301 in Delta.ts: otherOp replaced with thisOp
Mutant 302 in Delta.ts: delta.chop replaced with null
Mutant 303 in Delta.ts: delta.chop replaced with concat
Mutant 304 in Delta.ts: this.ops.slice replaced with this.ops.splice
Mutant 305 in Delta.ts: this.ops.slice replaced with this.ops.concat
Mutant 306 in Delta.ts: this.ops.slice replaced with this.ops.filter
Mutant 307 in Delta.ts: other.ops.length > 0 replaced with `&& other.ops.length === 0;`
Mutant 308 in Delta.ts: other.ops.length > 0 replaced with `&& other.ops.length < 0;`
Mutant 309 in Delta.ts: delta.push replaced with delta.retain
Mutant 310 in Delta.ts: delta.push replaced with other.push
Mutant 311 in Delta.ts: other.ops[0] replaced with other.ops[0] + 1
Mutant 312 in Delta.ts: other.ops[0] replaced with other.ops[0].insert
Mutant 313 in Delta.ts: other.ops[0] replaced with other.ops[0].retain
Mutant 314 in Delta.ts: other.ops.slice(1) replaced with other.ops.slice(2)
Mutant 315 in Delta.ts: other.ops.slice(1) replaced with other.ops.slice(-1)
Mutant 316 in Delta.ts: other.ops.slice(1) replaced with [].concat(...other.ops)
Mutant 317 in Delta.ts: 1 replaced with 0
Mutant 318 in Delta.ts: this.ops === other.ops replaced with this.ops !== other.ops
Mutant 319 in Delta.ts: this.ops === other.ops replaced with !other
Mutant 320 in Delta.ts: op.insert != null replaced with op.attributes != null
Mutant 321 in Delta.ts: op.insert != null replaced with op.attributes === null
Mutant 322 in Delta.ts: op.insert != null replaced with op.attributes && op.attributes.length > 0
Mutant 323 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(strings[0], strings[1], cursor + 1)
Mutant 324 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(strings[1], strings[0], cursor)
Mutant 325 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(strings[0], strings[1], false)
Mutant 326 in Delta.ts: strings[0] replaced with -strings[0] + strings[1]
Mutant 327 in Delta.ts: strings[1] replaced with strings[0]
Mutant 328 in Delta.ts: strings[1] replaced with strings[2]
Mutant 329 in Delta.ts: strings[1] replaced with strings[3]
Mutant 330 in Delta.ts: length > 0 replaced with length < 0
Mutant 331 in Delta.ts: length > 0 replaced with majorVersion > 3
Mutant 332 in Delta.ts: length > 0 replaced with null
Mutant 333 in Delta.ts: component[0] replaced with -component[0] + component[1]
Mutant 334 in Delta.ts: component[0] replaced with -component[0] + components
Mutant 335 in Delta.ts: component[0] replaced with -component[0] + components[0]
Mutant 336 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(otherIter.peekLength() + length)
Mutant 337 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(otherIter.peekLength() - length)
Mutant 338 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(otherIter.peekLength() * length)
Mutant 339 in Delta.ts: Math.min replaced with Math.max
Mutant 340 in Delta.ts: Math.min replaced with Math.abs
Mutant 341 in Delta.ts: Math.min replaced with Math.round
Mutant 342 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() - 1
Mutant 343 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() + 10
Mutant 344 in Delta.ts: otherIter.peekLength() replaced with otherIter.previousLength()
Mutant 345 in Delta.ts: otherIter.peekLength replaced with otherIter.nextLength
Mutant 346 in Delta.ts: otherIter.peekLength replaced with otherIter.peepLength
Mutant 347 in Delta.ts: otherIter.peekLength replaced with otherIter.peekLength = 0
Mutant 348 in Delta.ts: length replaced with 0
Mutant 349 in Delta.ts: length replaced with strings[0].length
Mutant 350 in Delta.ts: length replaced with strings[1].length
Mutant 351 in Delta.ts: retDelta.push replaced with retDelta.insert
Mutant 352 in Delta.ts: otherIter.next(opLength) replaced with otherIter.next(opLength * 2)
Mutant 353 in Delta.ts: otherIter.next(opLength) replaced with otherIter.next(opLength + 1)
Mutant 354 in Delta.ts: otherIter.next(opLength) replaced with otherIter.next(opLength - 1)
Mutant 355 in Delta.ts: opLength replaced with Math.max(opLength, otherIter.peekLength())
Mutant 356 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(0)
Mutant 357 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(-1)
Mutant 358 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(length - 1)
Mutant 359 in Delta.ts: length replaced with -1
Mutant 360 in Delta.ts: length replaced with 0
Mutant 361 in Delta.ts: length replaced with length - 1
Mutant 362 in Delta.ts: thisIter.peekLength() replaced with 0
Mutant 363 in Delta.ts: thisIter.peekLength() replaced with otherIter.peekLength()
Mutant 364 in Delta.ts: thisIter.peekLength() replaced with otherIter.peek().length
Mutant 365 in Delta.ts: opLength replaced with length + 1
Mutant 366 in Delta.ts: opLength replaced with length - 1
Mutant 367 in Delta.ts: opLength replaced with length === 0 ? 1 : 0
Mutant 368 in Delta.ts: retDelta.delete replaced with retDelta.insert
Mutant 369 in Delta.ts: retDelta.delete replaced with retDelta.retain
Mutant 370 in Delta.ts: retDelta.delete replaced with retDelta.concat
Mutant 371 in Delta.ts: opLength replaced with opLength + 1
Mutant 372 in Delta.ts: opLength replaced with opLength - 1
Mutant 373 in Delta.ts: opLength replaced with 2 * opLength
Mutant 374 in Delta.ts: thisIter.peekLength replaced with newOp.retain
Mutant 375 in Delta.ts: otherIter.peekLength replaced with otherIter.nextLength
Mutant 376 in Delta.ts: otherIter.peekLength replaced with sequence.length
Mutant 377 in Delta.ts: otherIter.peekLength replaced with other.length
Mutant 378 in Delta.ts: thisIter.next replaced with null
Mutant 379 in Delta.ts: opLength replaced with opLength + 1
Mutant 380 in Delta.ts: opLength replaced with opLength - 1
Mutant 381 in Delta.ts: opLength replaced with length
Mutant 382 in Delta.ts: opLength replaced with opLength * 2
Mutant 383 in Delta.ts: opLength replaced with opLength - 1
Mutant 384 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(otherOp.insert)
Mutant 385 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(thisOp.retain)
Mutant 386 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(eval(thisOp.insert))
Mutant 387 in Delta.ts: isEqual replaced with isNotEqual
Mutant 388 in Delta.ts: isEqual replaced with isNotIdentical
Mutant 389 in Delta.ts: thisOp.insert replaced with thisOp[action]
Mutant 390 in Delta.ts: thisOp.insert replaced with thisOp[action].unsigned
Mutant 391 in Delta.ts: thisOp.insert replaced with thisOp[action].sepone
Mutant 392 in Delta.ts: otherOp.insert replaced with thisOp.insert
Mutant 393 in Delta.ts: otherOp.insert replaced with otherOp.insert.length
Mutant 394 in Delta.ts: otherOp.insert replaced with null
Mutant 395 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(otherOp.retain)
Mutant 396 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(otherOp.insert)
Mutant 397 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(thisOp.retain)
Mutant 398 in Delta.ts: AttributeMap.diff replaced with AttributeMap.prototype.compose
Mutant 399 in Delta.ts: AttributeMap.diff replaced with AttributeMap.prototype.transform
Mutant 400 in Delta.ts: AttributeMap.diff replaced with AttributeMap.prototype.isEqual
Mutant 401 in Delta.ts: thisOp.attributes replaced with thisOp.retain
Mutant 402 in Delta.ts: thisOp.attributes replaced with null
Mutant 403 in Delta.ts: otherOp.attributes replaced with otherOp === 42
Mutant 404 in Delta.ts: otherOp.attributes replaced with otherOp !== 42
Mutant 405 in Delta.ts: otherOp.attributes replaced with otherOp.attributes[otherOp.retain]
Mutant 406 in Delta.ts: opLength replaced with opLength + 1
Mutant 407 in Delta.ts: opLength replaced with opLength - 1
Mutant 408 in Delta.ts: opLength replaced with opLength * 2
Mutant 409 in Delta.ts: iter.hasNext() replaced with otherIter.hasNext()
Mutant 410 in Delta.ts: iter.hasNext() replaced with otherIter.peekLength() > 0
Mutant 411 in Delta.ts: iter.peekType() !== 'insert' replaced with iter.hasNext() && iter.peekType() !== 'insert'
Mutant 412 in Delta.ts: iter.peekType() !== 'insert' replaced with false
Mutant 413 in Delta.ts: iter.peek replaced with iter.next
Mutant 414 in Delta.ts: iter.peek replaced with iter.peek - 1
Mutant 415 in Delta.ts: iter.peek replaced with iter.peek + 1
Mutant 416 in Delta.ts: Op.length replaced with thisOp.retain + 1
Mutant 417 in Delta.ts: Op.length replaced with otherOp.retain - 1
Mutant 418 in Delta.ts: Op.length replaced with thisOp.retain * 2
Mutant 419 in Delta.ts: thisOp replaced with null
Mutant 420 in Delta.ts: thisOp replaced with undefined
Mutant 421 in Delta.ts: thisOp replaced with 0
Mutant 422 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf(start, newline)
Mutant 423 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf(newline, end)
Mutant 424 in Delta.ts: newline replaced with '\\n'
Mutant 425 in Delta.ts: newline replaced with '\n'
Mutant 426 in Delta.ts: newline replaced with 'hello'
Mutant 427 in Delta.ts: index < 0 replaced with index <= 0
Mutant 428 in Delta.ts: index < 0 replaced with index != 0
Mutant 429 in Delta.ts: index < 0 replaced with base.ptr > 0
Mutant 430 in Delta.ts: line.push replaced with unlink.push
Mutant 431 in Delta.ts: line.push replaced with iter.push
Mutant 432 in Delta.ts: line.push replaced with inverted.push
Mutant 433 in Delta.ts: iter.next() replaced with iter.next(2)
Mutant 434 in Delta.ts: iter.next() replaced with iter.previous()
Mutant 435 in Delta.ts: iter.next() replaced with iter.peekLength()
Mutant 436 in Delta.ts: iter.next replaced with iter.hasPrevious
Mutant 437 in Delta.ts: index > 0 replaced with index < 1
Mutant 438 in Delta.ts: index > 0 replaced with length === 0
Mutant 439 in Delta.ts: iter.next(index) replaced with this.iter.next(other.iter.next(index))
Mutant 440 in Delta.ts: iter.next(index) replaced with this.iter.next(other.iter.length)
Mutant 441 in Delta.ts: iter.next(index) replaced with this.iter.next(other.iter.next(index) + 1)
Mutant 442 in Delta.ts: index replaced with --index
Mutant 443 in Delta.ts: index replaced with index = 0
Mutant 444 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) replaced with predicate(line, otherIter.next(1).attributes || {}, i)
Mutant 445 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) replaced with predicate(line, null, i)
Mutant 446 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) replaced with predicate(line, iter.next(1).attributes || {}, i - 1)
Mutant 447 in Delta.ts: line replaced with console.log("not a line")
Mutant 448 in Delta.ts: line replaced with console.error("line")
Mutant 449 in Delta.ts: line replaced with console.info("not a line")
Mutant 450 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(2).attributes || {}
Mutant 451 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(0).attributes || {}
Mutant 452 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(-1).attributes || {}
Mutant 453 in Delta.ts: iter.next replaced with iter.printStackTrace
Mutant 454 in Delta.ts: iter.next replaced with iter.hasNext + 1
Mutant 455 in Delta.ts: iter.next replaced with iter.isNext
not replacing iter.next with iter.printStackTrace
not replacing iter.next with iter.hasNext + 1
not replacing iter.next with iter.isNext
Mutant 456 in Delta.ts: 1 replaced with '0'
Mutant 457 in Delta.ts: 1 replaced with Infinity
Mutant 458 in Delta.ts: i replaced with n
Mutant 459 in Delta.ts: i replaced with i + 1
Mutant 460 in Delta.ts: i replaced with j
Mutant 461 in Delta.ts: line.length replaced with -1
Mutant 462 in Delta.ts: line.length replaced with String.length
Mutant 463 in Delta.ts: predicate(line, {}, i) replaced with predicate(line, {}, 0)
Mutant 464 in Delta.ts: predicate(line, {}, i) replaced with predicate(line, {}, i + 1)
Mutant 465 in Delta.ts: predicate(line, {}, i) replaced with predicate(line, {}, i * 2)
Mutant 466 in Delta.ts: i replaced with "goodbye"
Mutant 467 in Delta.ts: i replaced with null
Mutant 468 in Delta.ts: i replaced with undefined
Mutant 469 in Delta.ts: op.insert replaced with !op.insert
Mutant 470 in Delta.ts: op.insert replaced with op.insert + 1
Mutant 471 in Delta.ts: Op.length(op) replaced with Op.length(op) + 1
Mutant 472 in Delta.ts: Op.length(op) replaced with Op.length(op) - 1
Mutant 473 in Delta.ts: Op.length(op) replaced with Op.length(op) * 2
Mutant 474 in Delta.ts: op replaced with -retDelta.push(otherOp) + retDelta.insert(otherOp)
Mutant 475 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && op.attributes != null
Mutant 476 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && !op.attributes
Mutant 477 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && op.attributes !== 'object'
Mutant 478 in Delta.ts: op.retain replaced with 0
Mutant 479 in Delta.ts: op.retain replaced with NaN
Mutant 480 in Delta.ts: op.retain replaced with -Infinity
Mutant 481 in Delta.ts: op.delete || typeof op.retain === 'number' replaced with op.retain === null
Mutant 482 in Delta.ts: op.delete || typeof op.retain === 'number' replaced with op.retain !== '123'
Mutant 483 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex, baseIndex + length - 1)
Mutant 484 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex + length, baseIndex + length * 2)
Mutant 485 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex - length, baseIndex + length)
Mutant 486 in Delta.ts: base.slice replaced with undefined
Mutant 487 in Delta.ts: base.slice replaced with null
Mutant 488 in Delta.ts: base.slice replaced with base.splice
Mutant 489 in Delta.ts: baseIndex replaced with baseIndex + 2
Mutant 490 in Delta.ts: baseIndex replaced with baseIndex - 1
Mutant 491 in Delta.ts: baseIndex replaced with 0
Mutant 492 in Delta.ts: baseIndex + length replaced with baseIndex + 1
Mutant 493 in Delta.ts: baseIndex + length replaced with baseIndex - 1
Mutant 494 in Delta.ts: baseIndex + length replaced with -1 * baseIndex
Mutant 495 in Delta.ts: op.delete replaced with op.retain
Mutant 496 in Delta.ts: baseOp replaced with baseOp + 1
Mutant 497 in Delta.ts: baseOp replaced with baseOp - 100
Mutant 498 in Delta.ts: baseOp replaced with baseOp.name
Mutant 499 in Delta.ts: op.retain && op.attributes replaced with op.retain ? op.attributes : op.attributes
Mutant 500 in Delta.ts: op.retain && op.attributes replaced with op.attributes && op.retain
Mutant 501 in Delta.ts: Op.length replaced with 0
Mutant 502 in Delta.ts: Op.length replaced with -1
Mutant 503 in Delta.ts: baseOp replaced with [index]
Mutant 504 in Delta.ts: baseOp replaced with base[index + 1]
Mutant 505 in Delta.ts: baseOp replaced with null
Mutant 506 in Delta.ts: AttributeMap.invert replaced with AttributeMap.filter
Mutant 507 in Delta.ts: AttributeMap.invert replaced with Object.keys
Mutant 508 in Delta.ts: AttributeMap.invert replaced with Math.sqrt
Mutant 509 in Delta.ts: op.attributes replaced with op.attributed
Mutant 510 in Delta.ts: op.attributes replaced with other.attributed
Mutant 511 in Delta.ts: op.attributes replaced with console.log(op.attributes)
Mutant 512 in Delta.ts: baseOp.attributes replaced with baseOp.length
Mutant 513 in Delta.ts: baseOp.attributes replaced with otherOp.attributes
Mutant 514 in Delta.ts: baseOp.attributes replaced with null
Mutant 515 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'function'
Mutant 516 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain instanceof Object
Mutant 517 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'object' && op.retain !== {}
Mutant 518 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIndex + length, baseIndex + length + 1)
Mutant 519 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIndex, baseIndex - 1)
Mutant 520 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIndex - length, baseIndex)
Mutant 521 in Delta.ts: base.slice replaced with base.splice
Mutant 522 in Delta.ts: baseIndex replaced with baseIndex + 1
Mutant 523 in Delta.ts: baseIndex replaced with baseIndex - 1
Mutant 524 in Delta.ts: baseIndex replaced with 2 * baseIndex
Mutant 525 in Delta.ts: baseIndex + 1 replaced with baseIndex + 2
Mutant 526 in Delta.ts: baseIndex + 1 replaced with baseIndex - 1
Mutant 527 in Delta.ts: baseIndex + 1 replaced with length - baseIndex
Mutant 528 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(opData - baseOpData)
Mutant 529 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(opData)
Mutant 530 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert([opData])
Mutant 531 in Delta.ts: handler.invert replaced with handler.insert
Mutant 532 in Delta.ts: handler.invert replaced with handler.retain
Mutant 533 in Delta.ts: opData replaced with opData + 1
Mutant 534 in Delta.ts: opData replaced with null
Mutant 535 in Delta.ts: opData replaced with baseOpData
Mutant 536 in Delta.ts: AttributeMap.invert replaced with AttributeMap.transform
Mutant 537 in Delta.ts: AttributeMap.invert replaced with AttributeMap.prototype.invert
Mutant 538 in Delta.ts: AttributeMap.invert replaced with AttributeMap.prototype.transform
Mutant 539 in Delta.ts: op.attributes replaced with op.length
Mutant 540 in Delta.ts: op.attributes replaced with op.retain + 1
Mutant 541 in Delta.ts: op.attributes replaced with op.attributes - 1
Mutant 542 in Delta.ts: baseOp.attributes replaced with undefined
Mutant 543 in Delta.ts: baseOp.attributes replaced with {}
Mutant 544 in Delta.ts: baseOp.attributes replaced with Object.prototype
Mutant 545 in Delta.ts: inverted.chop replaced with inverted.dup.chop
Mutant 546 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(thisIter.peekLength())
Mutant 547 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(thisIter.peekType())
Mutant 548 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(otherIter.peekType())
Mutant 549 in Delta.ts: this.transformPosition replaced with other.transformPosition
Mutant 550 in Delta.ts: this.transformPosition replaced with typeof other.transformPosition
Mutant 551 in Delta.ts: arg replaced with arg.push(newOp)
Mutant 552 in Delta.ts: arg replaced with arg.shift()
Mutant 553 in Delta.ts: arg replaced with arg.pop()
Mutant 554 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with !thisIter.hasNext() && !otherIter.hasNext()
Mutant 555 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with !otherIter.hasNext() || otherIter.peekType() == null
Mutant 556 in Delta.ts: thisIter.hasNext replaced with thisIter.hasNext && otherIter.hasNext
Mutant 557 in Delta.ts: otherIter.hasNext replaced with otherIter.index < other.ops.length
Mutant 558 in Delta.ts: delta.retain replaced with delta.insert
Mutant 559 in Delta.ts: delta.retain replaced with delta.retain
Mutant 560 in Delta.ts: thisIter.next() replaced with thisIter.next(2)
Mutant 561 in Delta.ts: thisIter.next() replaced with otherIter.next()
Mutant 562 in Delta.ts: thisIter.next() replaced with thisIter.next(0)
Mutant 563 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() !== 'insert'
Mutant 564 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() === 'retain'
Mutant 565 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(otherIter.peekLength())
Mutant 566 in Delta.ts: Math.min replaced with 10
Mutant 567 in Delta.ts: thisIter.peekLength() replaced with -otherIter.peekLength()
Mutant 568 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() + 1
Mutant 569 in Delta.ts: thisIter.peekLength replaced with thisIter.nextLength
Mutant 570 in Delta.ts: thisIter.peekLength replaced with otherIter.nextLength
Mutant 571 in Delta.ts: otherIter.peekLength() replaced with 0
Mutant 572 in Delta.ts: otherIter.peekLength() replaced with 1
Mutant 573 in Delta.ts: otherIter.peekLength() replaced with otherIter.hasNext()
Mutant 574 in Delta.ts: otherIter.peekLength replaced with otherIter.peekLength + 1
Mutant 575 in Delta.ts: otherIter.peekLength replaced with otherIter.peekLength - 1
Mutant 576 in Delta.ts: thisIter.next replaced with thisIter.peek
Mutant 577 in Delta.ts: thisIter.next replaced with otherIter.peek
Mutant 578 in Delta.ts: thisIter.next replaced with otherIter.next
Mutant 579 in Delta.ts: length replaced with 0
Mutant 580 in Delta.ts: length replaced with length - 1
Mutant 581 in Delta.ts: length replaced with length * 2
Mutant 582 in Delta.ts: length replaced with 0
Mutant 583 in Delta.ts: length replaced with Infinity
Mutant 584 in Delta.ts: length replaced with Math.random()
Mutant 585 in Delta.ts: thisOp.delete replaced with thisOp.retain
Mutant 586 in Delta.ts: delta.push replaced with delta.insert
Mutant 587 in Delta.ts: delta.push replaced with delta.pop
Mutant 588 in Delta.ts: otherOp replaced with -otherOp
Mutant 589 in Delta.ts: otherOp replaced with 0
Mutant 590 in Delta.ts: otherOp replaced with Infinity
Mutant 591 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with Object.values(thisData).length && thisData !== null && Object.values(otherData).length && otherData !== null
Mutant 592 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null && typeof Object.values(thisData)[0] === 'object' && typeof Object.values(otherData)[0] === 'object'
Mutant 593 in Delta.ts: thisData replaced with [thisData]
Mutant 594 in Delta.ts: thisData replaced with thisData * thisData
Mutant 595 in Delta.ts: otherData replaced with 1
Mutant 596 in Delta.ts: otherData replaced with 0
Mutant 597 in Delta.ts: otherData replaced with 'a'
Mutant 598 in Delta.ts: Delta.getHandler replaced with null
Mutant 599 in Delta.ts: delta.chop replaced with delta.length
Mutant 600 in Delta.ts: delta.chop replaced with delta.ignore
Mutant 601 in Delta.ts: thisIter.peekLength replaced with thisIter.peekLength + 1
Mutant 602 in Delta.ts: thisIter.peekLength replaced with thisIter.peekLength * 2
Mutant 603 in Delta.ts: thisIter.peekLength replaced with thisIter.peekLength - 1
Mutant 604 in Delta.ts: thisIter.peekType replaced with thisIter.nextType
Mutant 605 in Delta.ts: thisIter.peekType replaced with otherIter.peekType
Mutant 606 in Delta.ts: thisIter.peekType replaced with thisIter.ops.length - 1
Mutant 607 in Delta.ts: nextType === 'delete' replaced with nextType === 'retain'
Mutant 608 in Delta.ts: nextType === 'delete' replaced with nextType === 'retain' && length > 0
Mutant 609 in Delta.ts: nextType === 'delete' replaced with nextType === 'insert'
Mutant 610 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(index * 2)
Mutant 611 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(length + index)
Mutant 612 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(offset - length)
Mutant 613 in Delta.ts: Math.min replaced with 1 + index
Mutant 614 in Delta.ts: Math.min replaced with index / 2
Mutant 615 in Delta.ts: length replaced with index - offset
Mutant 616 in Delta.ts: length replaced with length + 1
Mutant 617 in Delta.ts: length replaced with offset - index
Mutant 618 in Delta.ts: index - offset replaced with index + offset
Mutant 619 in Delta.ts: index - offset replaced with index * offset
Mutant 620 in Delta.ts: index - offset replaced with offset - index
Mutant 621 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with offset > index && priority
Mutant 622 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType !== 'insert' || offset >= index
Mutant 623 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with offset < index || nextType !== 'insert'
Mutant 624 in Delta.ts: typeof module === 'object' replaced with typeof module !== 'object'
Mutant 625 in Delta.ts: typeof module === 'object' replaced with typeof module === 'number'
Mutant 626 in Delta.ts: typeof module === 'object' replaced with typeof module === undefined
Mutant 627 in Op.ts: typeof op.delete === 'number' replaced with typeof op.retain === 'number'
Mutant 628 in Op.ts: typeof op.delete === 'number' replaced with typeof op.insert === 'undefined'
Mutant 629 in Op.ts: typeof op.retain === 'number' replaced with op.retain > 0
Mutant 630 in Op.ts: typeof op.retain === 'number' replaced with Math.abs(op.retain) === Number.MAX_SAFE_INTEGER
Mutant 631 in Op.ts: typeof op.retain === 'number' replaced with op.retain = '1234'
Mutant 632 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain !== 'object'
Mutant 633 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== null
Mutant 634 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'function'
Mutant 635 in OpIterator.ts: this.peekLength replaced with this.index
Mutant 636 in OpIterator.ts: this.peekLength replaced with this.offset
Mutant 637 in OpIterator.ts: this.peekLength replaced with this.ops.length
Mutant 638 in OpIterator.ts: !length replaced with length == 0
Mutant 639 in OpIterator.ts: !length replaced with length - offset > 0
Mutant 640 in OpIterator.ts: !length replaced with length < 0
Mutant 641 in OpIterator.ts: Op.length replaced with Op.size
Mutant 642 in OpIterator.ts: Op.length replaced with Op.prototype.length
Mutant 643 in OpIterator.ts: Op.length replaced with this.ops[this.index].length
Mutant 644 in OpIterator.ts: nextOp replaced with {
  ...nextOp,
  offset: Math.random()
}
Mutant 645 in OpIterator.ts: nextOp replaced with {
  ...nextOp,
  offset: nextOp.offset + 1
}
Mutant 646 in OpIterator.ts: length >= opLength - offset replaced with length < opLength - offset
Mutant 647 in OpIterator.ts: length >= opLength - offset replaced with length <= opLength - offset
Mutant 648 in OpIterator.ts: nextOp.attributes replaced with nextOp.attributes.slice(offset, length)
Mutant 649 in OpIterator.ts: nextOp.attributes replaced with nextOp.attributes.concat([length])
Mutant 650 in OpIterator.ts: nextOp.attributes replaced with nextOp.attributes.filter(attr => attr >= length)
Mutant 651 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with typeofnextOp.retain === 'object'
Mutant 652 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with typeof nextOp.retain === 'function'
Mutant 653 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with typeof nextOp.retain === 'undefined'
Mutant 654 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with typeof nextOp.retain === 'function'
Mutant 655 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with Op.length(nextOp) === 1 ? true : false
Mutant 656 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(this.offset + length)
Mutant 657 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(length + this.offset)
Mutant 658 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(this.offset - length)
Mutant 659 in OpIterator.ts: offset replaced with length
Mutant 660 in OpIterator.ts: offset replaced with offset + 1
Mutant 661 in OpIterator.ts: offset replaced with -offset
Mutant 662 in OpIterator.ts: length replaced with length + 1
Mutant 663 in OpIterator.ts: length replaced with length * 2
Mutant 664 in OpIterator.ts: length replaced with length % 2
Mutant 665 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index - 1]
Mutant 666 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index + 1]
Mutant 667 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index = 0]
Mutant 668 in OpIterator.ts: Op.length replaced with this.offset
Mutant 669 in OpIterator.ts: Op.length replaced with this.index + 1
Mutant 670 in OpIterator.ts: Op.length replaced with 0
Mutant 671 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index + 1]
Mutant 672 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index] - 1
Mutant 673 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index + 2]
Mutant 674 in OpIterator.ts: op replaced with op.type
Mutant 675 in OpIterator.ts: op replaced with op.size
Mutant 676 in OpIterator.ts: op replaced with op.value
Mutant 677 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'object'
Mutant 678 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with op.retain === null
Mutant 679 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'number' && op.retain.length > 1
Mutant 680 in OpIterator.ts: !this.hasNext() replaced with this.hasNext()
Mutant 681 in OpIterator.ts: !this.hasNext() replaced with this.ops.length === 0
Mutant 682 in OpIterator.ts: !this.hasNext() replaced with this.index >= this.ops.length
Mutant 683 in OpIterator.ts: this.hasNext replaced with !this.hasNext
Mutant 684 in OpIterator.ts: this.hasNext replaced with this.hasNext = false
Mutant 685 in OpIterator.ts: this.offset === 0 replaced with this.offset > 0
Mutant 686 in OpIterator.ts: this.offset === 0 replaced with this.offset < Infinity
Mutant 687 in OpIterator.ts: this.offset === 0 replaced with this.offset + 1 === 0
Mutant 688 in OpIterator.ts: this.index replaced with this.index + 1
Mutant 689 in OpIterator.ts: this.index replaced with this.offset
Mutant 690 in OpIterator.ts: this.index replaced with this.index + this.offset
Mutant 691 in OpIterator.ts: this.next replaced with this.rest
Mutant 692 in OpIterator.ts: this.next replaced with this.next - 1
Mutant 693 in OpIterator.ts: this.next replaced with this.next + 1
Mutant 694 in OpIterator.ts: this.ops.slice replaced with this.ops.splice
Mutant 695 in OpIterator.ts: this.index replaced with this.index + 1
Mutant 696 in OpIterator.ts: this.index replaced with this.index - 1
Mutant 697 in OpIterator.ts: this.index replaced with this.ops.length
[32m21:49:57 (2852) INFO Instrumenter[39m Instrumented 4 source file(s) with 698 mutant(s)
[32m21:49:58 (2852) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m21:49:59 (2852) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m21:49:59 (2852) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m21:50:04 (2852) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 4 seconds (net 4871 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~58m) 2/698 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~57m) 4/698 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~57m) 6/698 tested (4 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~57m) 8/698 tested (4 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~57m) 10/698 tested (4 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~57m) 12/698 tested (4 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~57m) 14/698 tested (4 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~56m) 16/698 tested (5 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~53m) 19/698 tested (5 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~53m) 21/698 tested (5 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~53m) 23/698 tested (5 survived, 0 timed out)
Mutation testing 3% (elapsed: ~2m, remaining: ~53m) 25/698 tested (5 survived, 0 timed out)
Mutation testing 3% (elapsed: ~2m, remaining: ~53m) 27/698 tested (6 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~53m) 29/698 tested (6 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~53m) 31/698 tested (6 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~53m) 33/698 tested (6 survived, 0 timed out)
Mutation testing 5% (elapsed: ~2m, remaining: ~52m) 36/698 tested (6 survived, 0 timed out)
Mutation testing 5% (elapsed: ~3m, remaining: ~52m) 38/698 tested (6 survived, 0 timed out)
Mutation testing 5% (elapsed: ~3m, remaining: ~52m) 40/698 tested (6 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~52m) 42/698 tested (6 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~52m) 44/698 tested (7 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~51m) 46/698 tested (7 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~51m) 48/698 tested (7 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~51m) 50/698 tested (7 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~50m) 53/698 tested (8 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~50m) 55/698 tested (8 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~50m) 57/698 tested (8 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~50m) 59/698 tested (9 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~50m) 61/698 tested (10 survived, 0 timed out)
Mutation testing 9% (elapsed: ~5m, remaining: ~49m) 64/698 tested (13 survived, 0 timed out)
Mutation testing 9% (elapsed: ~5m, remaining: ~49m) 66/698 tested (13 survived, 0 timed out)
Mutation testing 9% (elapsed: ~5m, remaining: ~49m) 68/698 tested (13 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~49m) 70/698 tested (13 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~49m) 72/698 tested (13 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~49m) 74/698 tested (13 survived, 0 timed out)
Mutation testing 10% (elapsed: ~6m, remaining: ~49m) 76/698 tested (13 survived, 0 timed out)
Mutation testing 11% (elapsed: ~6m, remaining: ~49m) 78/698 tested (13 survived, 0 timed out)
Mutation testing 11% (elapsed: ~6m, remaining: ~48m) 81/698 tested (13 survived, 0 timed out)
Mutation testing 11% (elapsed: ~6m, remaining: ~48m) 83/698 tested (13 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~48m) 85/698 tested (14 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~47m) 87/698 tested (14 survived, 0 timed out)
Mutation testing 12% (elapsed: ~7m, remaining: ~47m) 89/698 tested (14 survived, 0 timed out)
Mutation testing 13% (elapsed: ~7m, remaining: ~47m) 91/698 tested (14 survived, 0 timed out)
Mutation testing 13% (elapsed: ~7m, remaining: ~47m) 93/698 tested (14 survived, 0 timed out)
Mutation testing 13% (elapsed: ~7m, remaining: ~47m) 95/698 tested (14 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~46m) 98/698 tested (14 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~46m) 100/698 tested (14 survived, 0 timed out)
Mutation testing 14% (elapsed: ~8m, remaining: ~46m) 102/698 tested (14 survived, 0 timed out)
Mutation testing 14% (elapsed: ~8m, remaining: ~46m) 104/698 tested (14 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~46m) 106/698 tested (14 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~46m) 108/698 tested (14 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~46m) 110/698 tested (14 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~45m) 113/698 tested (14 survived, 0 timed out)
Mutation testing 16% (elapsed: ~9m, remaining: ~45m) 115/698 tested (14 survived, 0 timed out)
Mutation testing 16% (elapsed: ~9m, remaining: ~45m) 117/698 tested (15 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~45m) 119/698 tested (15 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~45m) 121/698 tested (16 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~45m) 123/698 tested (16 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~45m) 125/698 tested (16 survived, 0 timed out)
Mutation testing 18% (elapsed: ~10m, remaining: ~44m) 127/698 tested (16 survived, 0 timed out)
Mutation testing 18% (elapsed: ~10m, remaining: ~44m) 130/698 tested (16 survived, 0 timed out)
Mutation testing 18% (elapsed: ~10m, remaining: ~44m) 132/698 tested (16 survived, 0 timed out)
Mutation testing 19% (elapsed: ~10m, remaining: ~44m) 134/698 tested (16 survived, 0 timed out)
Mutation testing 19% (elapsed: ~10m, remaining: ~44m) 136/698 tested (17 survived, 0 timed out)
Mutation testing 19% (elapsed: ~10m, remaining: ~43m) 138/698 tested (18 survived, 0 timed out)
Mutation testing 20% (elapsed: ~11m, remaining: ~43m) 140/698 tested (19 survived, 0 timed out)
Mutation testing 20% (elapsed: ~11m, remaining: ~43m) 142/698 tested (19 survived, 0 timed out)
Mutation testing 20% (elapsed: ~11m, remaining: ~43m) 144/698 tested (20 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~43m) 147/698 tested (20 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~42m) 149/698 tested (20 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~42m) 151/698 tested (21 survived, 0 timed out)
Mutation testing 21% (elapsed: ~12m, remaining: ~42m) 153/698 tested (22 survived, 0 timed out)
Mutation testing 22% (elapsed: ~12m, remaining: ~42m) 155/698 tested (22 survived, 0 timed out)
Mutation testing 22% (elapsed: ~12m, remaining: ~42m) 157/698 tested (22 survived, 0 timed out)
Mutation testing 22% (elapsed: ~12m, remaining: ~42m) 159/698 tested (22 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~41m) 162/698 tested (22 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~41m) 164/698 tested (22 survived, 0 timed out)
Mutation testing 23% (elapsed: ~13m, remaining: ~41m) 166/698 tested (22 survived, 0 timed out)
Mutation testing 24% (elapsed: ~13m, remaining: ~41m) 168/698 tested (22 survived, 0 timed out)
Mutation testing 24% (elapsed: ~13m, remaining: ~41m) 170/698 tested (22 survived, 0 timed out)
Mutation testing 24% (elapsed: ~13m, remaining: ~41m) 172/698 tested (24 survived, 0 timed out)
Mutation testing 24% (elapsed: ~13m, remaining: ~41m) 174/698 tested (24 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~41m) 176/698 tested (24 survived, 0 timed out)
Mutation testing 25% (elapsed: ~14m, remaining: ~40m) 179/698 tested (25 survived, 0 timed out)
Mutation testing 25% (elapsed: ~14m, remaining: ~40m) 181/698 tested (25 survived, 0 timed out)
Mutation testing 26% (elapsed: ~14m, remaining: ~40m) 183/698 tested (26 survived, 0 timed out)
Mutation testing 26% (elapsed: ~14m, remaining: ~40m) 185/698 tested (26 survived, 0 timed out)
Mutation testing 26% (elapsed: ~14m, remaining: ~40m) 187/698 tested (26 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~39m) 189/698 tested (26 survived, 0 timed out)
Mutation testing 27% (elapsed: ~15m, remaining: ~39m) 191/698 tested (26 survived, 0 timed out)
Mutation testing 27% (elapsed: ~15m, remaining: ~39m) 194/698 tested (26 survived, 0 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~39m) 196/698 tested (26 survived, 0 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~39m) 198/698 tested (27 survived, 0 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~39m) 198/698 tested (27 survived, 0 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~39m) 199/698 tested (27 survived, 1 timed out)
Mutation testing 28% (elapsed: ~16m, remaining: ~39m) 201/698 tested (27 survived, 2 timed out)
Mutation testing 29% (elapsed: ~16m, remaining: ~39m) 203/698 tested (27 survived, 2 timed out)
Mutation testing 29% (elapsed: ~16m, remaining: ~39m) 205/698 tested (27 survived, 2 timed out)
Mutation testing 29% (elapsed: ~16m, remaining: ~39m) 207/698 tested (27 survived, 2 timed out)
Mutation testing 29% (elapsed: ~16m, remaining: ~38m) 209/698 tested (27 survived, 2 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~38m) 212/698 tested (27 survived, 2 timed out)
Mutation testing 30% (elapsed: ~17m, remaining: ~38m) 214/698 tested (27 survived, 2 timed out)
Mutation testing 30% (elapsed: ~17m, remaining: ~38m) 216/698 tested (28 survived, 2 timed out)
Mutation testing 31% (elapsed: ~17m, remaining: ~38m) 217/698 tested (29 survived, 2 timed out)
Mutation testing 31% (elapsed: ~17m, remaining: ~38m) 218/698 tested (29 survived, 3 timed out)
Mutation testing 31% (elapsed: ~17m, remaining: ~38m) 221/698 tested (29 survived, 3 timed out)
Mutation testing 31% (elapsed: ~17m, remaining: ~37m) 223/698 tested (29 survived, 3 timed out)
Mutation testing 32% (elapsed: ~18m, remaining: ~37m) 225/698 tested (29 survived, 3 timed out)
Mutation testing 32% (elapsed: ~18m, remaining: ~37m) 227/698 tested (29 survived, 3 timed out)
Mutation testing 32% (elapsed: ~18m, remaining: ~37m) 229/698 tested (31 survived, 3 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~37m) 231/698 tested (31 survived, 3 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~37m) 234/698 tested (31 survived, 3 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~36m) 236/698 tested (31 survived, 3 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~36m) 238/698 tested (32 survived, 3 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~37m) 238/698 tested (32 survived, 3 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~37m) 239/698 tested (32 survived, 4 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~36m) 241/698 tested (32 survived, 5 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~37m) 241/698 tested (32 survived, 5 timed out)
Mutation testing 34% (elapsed: ~19m, remaining: ~36m) 244/698 tested (32 survived, 6 timed out)
Mutation testing 34% (elapsed: ~20m, remaining: ~37m) 244/698 tested (32 survived, 6 timed out)
Mutation testing 35% (elapsed: ~20m, remaining: ~37m) 246/698 tested (32 survived, 7 timed out)
Mutation testing 35% (elapsed: ~20m, remaining: ~36m) 248/698 tested (32 survived, 7 timed out)
Mutation testing 35% (elapsed: ~20m, remaining: ~36m) 250/698 tested (32 survived, 7 timed out)
Mutation testing 35% (elapsed: ~20m, remaining: ~36m) 251/698 tested (32 survived, 8 timed out)
Mutation testing 36% (elapsed: ~20m, remaining: ~36m) 253/698 tested (32 survived, 8 timed out)
Mutation testing 36% (elapsed: ~21m, remaining: ~36m) 255/698 tested (32 survived, 8 timed out)
Mutation testing 36% (elapsed: ~21m, remaining: ~36m) 257/698 tested (32 survived, 8 timed out)
Mutation testing 37% (elapsed: ~21m, remaining: ~36m) 259/698 tested (32 survived, 8 timed out)
Mutation testing 37% (elapsed: ~21m, remaining: ~35m) 261/698 tested (32 survived, 8 timed out)
Mutation testing 37% (elapsed: ~21m, remaining: ~35m) 264/698 tested (32 survived, 8 timed out)
Mutation testing 38% (elapsed: ~21m, remaining: ~35m) 266/698 tested (32 survived, 8 timed out)
Mutation testing 38% (elapsed: ~22m, remaining: ~35m) 268/698 tested (32 survived, 8 timed out)
Mutation testing 38% (elapsed: ~22m, remaining: ~35m) 270/698 tested (32 survived, 8 timed out)
Mutation testing 38% (elapsed: ~22m, remaining: ~34m) 272/698 tested (32 survived, 8 timed out)
Mutation testing 39% (elapsed: ~22m, remaining: ~34m) 274/698 tested (32 survived, 8 timed out)
Mutation testing 39% (elapsed: ~22m, remaining: ~34m) 276/698 tested (32 survived, 8 timed out)
Mutation testing 39% (elapsed: ~22m, remaining: ~34m) 279/698 tested (32 survived, 8 timed out)
Mutation testing 40% (elapsed: ~23m, remaining: ~34m) 281/698 tested (32 survived, 8 timed out)
Mutation testing 40% (elapsed: ~23m, remaining: ~33m) 283/698 tested (32 survived, 8 timed out)
Mutation testing 40% (elapsed: ~23m, remaining: ~33m) 285/698 tested (32 survived, 8 timed out)
Mutation testing 41% (elapsed: ~23m, remaining: ~33m) 287/698 tested (34 survived, 8 timed out)
Mutation testing 41% (elapsed: ~23m, remaining: ~33m) 289/698 tested (35 survived, 8 timed out)
Mutation testing 41% (elapsed: ~23m, remaining: ~33m) 291/698 tested (36 survived, 8 timed out)
Mutation testing 41% (elapsed: ~24m, remaining: ~33m) 293/698 tested (37 survived, 8 timed out)
Mutation testing 42% (elapsed: ~24m, remaining: ~32m) 296/698 tested (38 survived, 8 timed out)
Mutation testing 42% (elapsed: ~24m, remaining: ~32m) 298/698 tested (38 survived, 8 timed out)
Mutation testing 42% (elapsed: ~24m, remaining: ~32m) 300/698 tested (38 survived, 8 timed out)
Mutation testing 43% (elapsed: ~24m, remaining: ~32m) 302/698 tested (38 survived, 8 timed out)
Mutation testing 43% (elapsed: ~24m, remaining: ~32m) 304/698 tested (38 survived, 8 timed out)
Mutation testing 43% (elapsed: ~25m, remaining: ~32m) 306/698 tested (39 survived, 8 timed out)
Mutation testing 44% (elapsed: ~25m, remaining: ~31m) 308/698 tested (39 survived, 8 timed out)
Mutation testing 44% (elapsed: ~25m, remaining: ~31m) 311/698 tested (39 survived, 8 timed out)
Mutation testing 44% (elapsed: ~25m, remaining: ~31m) 313/698 tested (39 survived, 8 timed out)
Mutation testing 45% (elapsed: ~25m, remaining: ~31m) 315/698 tested (39 survived, 8 timed out)
Mutation testing 45% (elapsed: ~25m, remaining: ~31m) 317/698 tested (39 survived, 8 timed out)
Mutation testing 45% (elapsed: ~26m, remaining: ~30m) 319/698 tested (39 survived, 8 timed out)
Mutation testing 45% (elapsed: ~26m, remaining: ~30m) 321/698 tested (40 survived, 8 timed out)
Mutation testing 46% (elapsed: ~26m, remaining: ~30m) 323/698 tested (40 survived, 8 timed out)
Mutation testing 46% (elapsed: ~26m, remaining: ~30m) 325/698 tested (41 survived, 8 timed out)
Mutation testing 46% (elapsed: ~26m, remaining: ~30m) 328/698 tested (41 survived, 8 timed out)
Mutation testing 47% (elapsed: ~26m, remaining: ~29m) 330/698 tested (41 survived, 8 timed out)
Mutation testing 47% (elapsed: ~27m, remaining: ~29m) 332/698 tested (41 survived, 8 timed out)
Mutation testing 47% (elapsed: ~27m, remaining: ~29m) 333/698 tested (41 survived, 8 timed out)
Mutation testing 47% (elapsed: ~27m, remaining: ~29m) 335/698 tested (41 survived, 9 timed out)
Mutation testing 48% (elapsed: ~27m, remaining: ~29m) 337/698 tested (42 survived, 9 timed out)
Mutation testing 48% (elapsed: ~27m, remaining: ~29m) 337/698 tested (42 survived, 9 timed out)
Mutation testing 48% (elapsed: ~27m, remaining: ~29m) 339/698 tested (43 survived, 10 timed out)
Mutation testing 48% (elapsed: ~28m, remaining: ~29m) 341/698 tested (45 survived, 10 timed out)
Mutation testing 49% (elapsed: ~28m, remaining: ~28m) 344/698 tested (47 survived, 10 timed out)
Mutation testing 49% (elapsed: ~28m, remaining: ~28m) 346/698 tested (47 survived, 10 timed out)
Mutation testing 49% (elapsed: ~28m, remaining: ~28m) 348/698 tested (47 survived, 10 timed out)
Mutation testing 49% (elapsed: ~28m, remaining: ~28m) 348/698 tested (47 survived, 10 timed out)
Mutation testing 50% (elapsed: ~28m, remaining: ~28m) 350/698 tested (48 survived, 11 timed out)
Mutation testing 50% (elapsed: ~29m, remaining: ~28m) 353/698 tested (50 survived, 11 timed out)
Mutation testing 50% (elapsed: ~29m, remaining: ~28m) 355/698 tested (51 survived, 11 timed out)
Mutation testing 51% (elapsed: ~29m, remaining: ~28m) 356/698 tested (52 survived, 11 timed out)
Mutation testing 51% (elapsed: ~29m, remaining: ~28m) 357/698 tested (52 survived, 12 timed out)
Mutation testing 51% (elapsed: ~29m, remaining: ~28m) 358/698 tested (52 survived, 13 timed out)
Mutation testing 51% (elapsed: ~29m, remaining: ~28m) 358/698 tested (52 survived, 13 timed out)
Mutation testing 51% (elapsed: ~30m, remaining: ~28m) 359/698 tested (52 survived, 14 timed out)
Mutation testing 51% (elapsed: ~30m, remaining: ~28m) 360/698 tested (52 survived, 15 timed out)
Mutation testing 51% (elapsed: ~30m, remaining: ~28m) 361/698 tested (52 survived, 16 timed out)
Mutation testing 51% (elapsed: ~30m, remaining: ~28m) 362/698 tested (52 survived, 17 timed out)
Mutation testing 51% (elapsed: ~30m, remaining: ~28m) 362/698 tested (52 survived, 17 timed out)
Mutation testing 52% (elapsed: ~30m, remaining: ~28m) 365/698 tested (53 survived, 18 timed out)
Mutation testing 52% (elapsed: ~31m, remaining: ~27m) 367/698 tested (53 survived, 18 timed out)
Mutation testing 52% (elapsed: ~31m, remaining: ~27m) 369/698 tested (53 survived, 18 timed out)
Mutation testing 53% (elapsed: ~31m, remaining: ~27m) 371/698 tested (53 survived, 18 timed out)
Mutation testing 53% (elapsed: ~31m, remaining: ~27m) 373/698 tested (53 survived, 18 timed out)
Mutation testing 53% (elapsed: ~31m, remaining: ~27m) 375/698 tested (53 survived, 18 timed out)
Mutation testing 54% (elapsed: ~31m, remaining: ~27m) 377/698 tested (53 survived, 18 timed out)
Mutation testing 54% (elapsed: ~32m, remaining: ~26m) 379/698 tested (54 survived, 18 timed out)
Mutation testing 54% (elapsed: ~32m, remaining: ~26m) 382/698 tested (55 survived, 18 timed out)
Mutation testing 55% (elapsed: ~32m, remaining: ~26m) 384/698 tested (55 survived, 18 timed out)
Mutation testing 55% (elapsed: ~32m, remaining: ~26m) 386/698 tested (55 survived, 18 timed out)
Mutation testing 55% (elapsed: ~32m, remaining: ~26m) 388/698 tested (55 survived, 18 timed out)
Mutation testing 55% (elapsed: ~32m, remaining: ~25m) 390/698 tested (55 survived, 18 timed out)
Mutation testing 56% (elapsed: ~33m, remaining: ~25m) 392/698 tested (55 survived, 18 timed out)
Mutation testing 56% (elapsed: ~33m, remaining: ~25m) 394/698 tested (55 survived, 18 timed out)
Mutation testing 56% (elapsed: ~33m, remaining: ~25m) 397/698 tested (55 survived, 18 timed out)
Mutation testing 57% (elapsed: ~33m, remaining: ~25m) 399/698 tested (55 survived, 18 timed out)
Mutation testing 57% (elapsed: ~33m, remaining: ~24m) 401/698 tested (55 survived, 18 timed out)
Mutation testing 57% (elapsed: ~33m, remaining: ~24m) 403/698 tested (55 survived, 18 timed out)
Mutation testing 58% (elapsed: ~34m, remaining: ~24m) 405/698 tested (55 survived, 18 timed out)
Mutation testing 58% (elapsed: ~34m, remaining: ~24m) 407/698 tested (55 survived, 18 timed out)
Mutation testing 58% (elapsed: ~34m, remaining: ~24m) 409/698 tested (55 survived, 18 timed out)
Mutation testing 59% (elapsed: ~34m, remaining: ~23m) 412/698 tested (56 survived, 18 timed out)
Mutation testing 59% (elapsed: ~34m, remaining: ~23m) 414/698 tested (56 survived, 18 timed out)
Mutation testing 59% (elapsed: ~34m, remaining: ~23m) 416/698 tested (56 survived, 18 timed out)
Mutation testing 59% (elapsed: ~35m, remaining: ~23m) 418/698 tested (56 survived, 18 timed out)
Mutation testing 60% (elapsed: ~35m, remaining: ~23m) 420/698 tested (56 survived, 18 timed out)
Mutation testing 60% (elapsed: ~35m, remaining: ~23m) 422/698 tested (56 survived, 18 timed out)
Mutation testing 60% (elapsed: ~35m, remaining: ~22m) 424/698 tested (56 survived, 18 timed out)
Mutation testing 61% (elapsed: ~35m, remaining: ~22m) 426/698 tested (57 survived, 18 timed out)
Mutation testing 61% (elapsed: ~35m, remaining: ~22m) 429/698 tested (57 survived, 18 timed out)
Mutation testing 61% (elapsed: ~36m, remaining: ~22m) 431/698 tested (57 survived, 18 timed out)
Mutation testing 62% (elapsed: ~36m, remaining: ~22m) 433/698 tested (57 survived, 18 timed out)
Mutation testing 62% (elapsed: ~36m, remaining: ~21m) 435/698 tested (58 survived, 18 timed out)
Mutation testing 62% (elapsed: ~36m, remaining: ~22m) 435/698 tested (58 survived, 18 timed out)
Mutation testing 62% (elapsed: ~36m, remaining: ~21m) 438/698 tested (58 survived, 19 timed out)
Mutation testing 63% (elapsed: ~36m, remaining: ~21m) 440/698 tested (58 survived, 19 timed out)
Mutation testing 63% (elapsed: ~37m, remaining: ~21m) 442/698 tested (58 survived, 19 timed out)
Mutation testing 63% (elapsed: ~37m, remaining: ~21m) 444/698 tested (58 survived, 19 timed out)
Mutation testing 63% (elapsed: ~37m, remaining: ~21m) 445/698 tested (58 survived, 19 timed out)
Mutation testing 64% (elapsed: ~37m, remaining: ~21m) 447/698 tested (58 survived, 20 timed out)
Mutation testing 64% (elapsed: ~37m, remaining: ~20m) 449/698 tested (58 survived, 20 timed out)
Mutation testing 64% (elapsed: ~37m, remaining: ~20m) 451/698 tested (58 survived, 20 timed out)
Mutation testing 64% (elapsed: ~38m, remaining: ~20m) 452/698 tested (58 survived, 20 timed out)
Mutation testing 64% (elapsed: ~38m, remaining: ~20m) 453/698 tested (58 survived, 21 timed out)
Mutation testing 65% (elapsed: ~38m, remaining: ~20m) 456/698 tested (58 survived, 21 timed out)
Mutation testing 65% (elapsed: ~38m, remaining: ~20m) 456/698 tested (58 survived, 21 timed out)
Mutation testing 65% (elapsed: ~38m, remaining: ~20m) 458/698 tested (58 survived, 22 timed out)
Mutation testing 65% (elapsed: ~38m, remaining: ~20m) 460/698 tested (58 survived, 22 timed out)
Mutation testing 66% (elapsed: ~39m, remaining: ~19m) 463/698 tested (58 survived, 22 timed out)
Mutation testing 66% (elapsed: ~39m, remaining: ~19m) 465/698 tested (58 survived, 22 timed out)
Mutation testing 66% (elapsed: ~39m, remaining: ~19m) 467/698 tested (58 survived, 22 timed out)
Mutation testing 67% (elapsed: ~39m, remaining: ~19m) 469/698 tested (58 survived, 22 timed out)
Mutation testing 67% (elapsed: ~39m, remaining: ~19m) 471/698 tested (59 survived, 22 timed out)
Mutation testing 67% (elapsed: ~39m, remaining: ~18m) 473/698 tested (59 survived, 22 timed out)
Mutation testing 68% (elapsed: ~40m, remaining: ~18m) 475/698 tested (59 survived, 22 timed out)
Mutation testing 68% (elapsed: ~40m, remaining: ~18m) 477/698 tested (60 survived, 22 timed out)
Mutation testing 68% (elapsed: ~40m, remaining: ~18m) 480/698 tested (60 survived, 22 timed out)
Mutation testing 69% (elapsed: ~40m, remaining: ~18m) 482/698 tested (60 survived, 22 timed out)
Mutation testing 69% (elapsed: ~40m, remaining: ~17m) 484/698 tested (60 survived, 22 timed out)
Mutation testing 69% (elapsed: ~40m, remaining: ~17m) 486/698 tested (60 survived, 22 timed out)
Mutation testing 69% (elapsed: ~41m, remaining: ~17m) 488/698 tested (60 survived, 22 timed out)
Mutation testing 70% (elapsed: ~41m, remaining: ~17m) 490/698 tested (60 survived, 22 timed out)
Mutation testing 70% (elapsed: ~41m, remaining: ~17m) 492/698 tested (60 survived, 22 timed out)
Mutation testing 70% (elapsed: ~41m, remaining: ~17m) 495/698 tested (60 survived, 22 timed out)
Mutation testing 71% (elapsed: ~41m, remaining: ~16m) 497/698 tested (60 survived, 22 timed out)
Mutation testing 71% (elapsed: ~41m, remaining: ~16m) 499/698 tested (60 survived, 22 timed out)
Mutation testing 71% (elapsed: ~42m, remaining: ~16m) 501/698 tested (62 survived, 22 timed out)
Mutation testing 72% (elapsed: ~42m, remaining: ~16m) 503/698 tested (62 survived, 22 timed out)
Mutation testing 72% (elapsed: ~42m, remaining: ~16m) 505/698 tested (62 survived, 22 timed out)
Mutation testing 72% (elapsed: ~42m, remaining: ~16m) 507/698 tested (62 survived, 22 timed out)
Mutation testing 72% (elapsed: ~42m, remaining: ~15m) 509/698 tested (62 survived, 22 timed out)
Mutation testing 73% (elapsed: ~42m, remaining: ~15m) 512/698 tested (62 survived, 22 timed out)
Mutation testing 73% (elapsed: ~43m, remaining: ~15m) 514/698 tested (62 survived, 22 timed out)
Mutation testing 73% (elapsed: ~43m, remaining: ~15m) 516/698 tested (62 survived, 22 timed out)
Mutation testing 74% (elapsed: ~43m, remaining: ~15m) 518/698 tested (64 survived, 22 timed out)
Mutation testing 74% (elapsed: ~43m, remaining: ~14m) 520/698 tested (64 survived, 22 timed out)
Mutation testing 74% (elapsed: ~43m, remaining: ~14m) 522/698 tested (64 survived, 22 timed out)
Mutation testing 75% (elapsed: ~43m, remaining: ~14m) 524/698 tested (64 survived, 22 timed out)
Mutation testing 75% (elapsed: ~44m, remaining: ~14m) 527/698 tested (65 survived, 22 timed out)
Mutation testing 75% (elapsed: ~44m, remaining: ~14m) 529/698 tested (65 survived, 22 timed out)
Mutation testing 76% (elapsed: ~44m, remaining: ~13m) 531/698 tested (65 survived, 22 timed out)
Mutation testing 76% (elapsed: ~44m, remaining: ~13m) 533/698 tested (65 survived, 22 timed out)
Mutation testing 76% (elapsed: ~44m, remaining: ~13m) 535/698 tested (65 survived, 22 timed out)
Mutation testing 76% (elapsed: ~44m, remaining: ~13m) 537/698 tested (65 survived, 22 timed out)
Mutation testing 77% (elapsed: ~45m, remaining: ~13m) 539/698 tested (65 survived, 22 timed out)
Mutation testing 77% (elapsed: ~45m, remaining: ~13m) 541/698 tested (65 survived, 22 timed out)
Mutation testing 77% (elapsed: ~45m, remaining: ~12m) 544/698 tested (65 survived, 22 timed out)
Mutation testing 78% (elapsed: ~45m, remaining: ~12m) 546/698 tested (65 survived, 22 timed out)
Mutation testing 78% (elapsed: ~45m, remaining: ~12m) 548/698 tested (65 survived, 22 timed out)
Mutation testing 78% (elapsed: ~45m, remaining: ~12m) 550/698 tested (65 survived, 22 timed out)
Mutation testing 79% (elapsed: ~46m, remaining: ~12m) 552/698 tested (65 survived, 22 timed out)
Mutation testing 79% (elapsed: ~46m, remaining: ~12m) 554/698 tested (65 survived, 22 timed out)
Mutation testing 79% (elapsed: ~46m, remaining: ~11m) 556/698 tested (65 survived, 22 timed out)
Mutation testing 79% (elapsed: ~46m, remaining: ~11m) 558/698 tested (65 survived, 22 timed out)
Mutation testing 80% (elapsed: ~46m, remaining: ~11m) 561/698 tested (67 survived, 22 timed out)
Mutation testing 80% (elapsed: ~46m, remaining: ~11m) 561/698 tested (67 survived, 22 timed out)
Mutation testing 80% (elapsed: ~47m, remaining: ~11m) 563/698 tested (68 survived, 23 timed out)
Mutation testing 80% (elapsed: ~47m, remaining: ~11m) 564/698 tested (68 survived, 24 timed out)
Mutation testing 80% (elapsed: ~47m, remaining: ~11m) 564/698 tested (68 survived, 24 timed out)
Mutation testing 81% (elapsed: ~47m, remaining: ~11m) 566/698 tested (68 survived, 25 timed out)
Mutation testing 81% (elapsed: ~47m, remaining: ~10m) 568/698 tested (68 survived, 25 timed out)
Mutation testing 81% (elapsed: ~47m, remaining: ~10m) 571/698 tested (68 survived, 25 timed out)
Mutation testing 82% (elapsed: ~48m, remaining: ~10m) 573/698 tested (69 survived, 25 timed out)
Mutation testing 82% (elapsed: ~48m, remaining: ~10m) 575/698 tested (70 survived, 25 timed out)
Mutation testing 82% (elapsed: ~48m, remaining: ~10m) 576/698 tested (70 survived, 25 timed out)
Mutation testing 82% (elapsed: ~48m, remaining: ~10m) 577/698 tested (70 survived, 26 timed out)
Mutation testing 82% (elapsed: ~48m, remaining: ~10m) 578/698 tested (70 survived, 26 timed out)
Mutation testing 83% (elapsed: ~48m, remaining: ~9m) 580/698 tested (70 survived, 27 timed out)
Mutation testing 83% (elapsed: ~49m, remaining: ~9m) 582/698 tested (70 survived, 27 timed out)
Mutation testing 83% (elapsed: ~49m, remaining: ~9m) 584/698 tested (70 survived, 27 timed out)
Mutation testing 83% (elapsed: ~49m, remaining: ~9m) 586/698 tested (70 survived, 27 timed out)
Mutation testing 84% (elapsed: ~49m, remaining: ~9m) 589/698 tested (70 survived, 27 timed out)
Mutation testing 84% (elapsed: ~49m, remaining: ~8m) 591/698 tested (70 survived, 27 timed out)
Mutation testing 84% (elapsed: ~49m, remaining: ~8m) 593/698 tested (72 survived, 27 timed out)
Mutation testing 85% (elapsed: ~50m, remaining: ~8m) 595/698 tested (72 survived, 27 timed out)
Mutation testing 85% (elapsed: ~50m, remaining: ~8m) 597/698 tested (72 survived, 27 timed out)
Mutation testing 85% (elapsed: ~50m, remaining: ~8m) 599/698 tested (72 survived, 27 timed out)
Mutation testing 86% (elapsed: ~50m, remaining: ~8m) 601/698 tested (72 survived, 27 timed out)
Mutation testing 86% (elapsed: ~50m, remaining: ~7m) 603/698 tested (72 survived, 27 timed out)
Mutation testing 86% (elapsed: ~50m, remaining: ~7m) 606/698 tested (72 survived, 27 timed out)
Mutation testing 87% (elapsed: ~51m, remaining: ~7m) 608/698 tested (72 survived, 27 timed out)
Mutation testing 87% (elapsed: ~51m, remaining: ~7m) 610/698 tested (72 survived, 27 timed out)
Mutation testing 87% (elapsed: ~51m, remaining: ~7m) 612/698 tested (72 survived, 27 timed out)
Mutation testing 87% (elapsed: ~51m, remaining: ~7m) 614/698 tested (72 survived, 27 timed out)
Mutation testing 88% (elapsed: ~51m, remaining: ~6m) 616/698 tested (72 survived, 27 timed out)
Mutation testing 88% (elapsed: ~51m, remaining: ~6m) 618/698 tested (72 survived, 27 timed out)
Mutation testing 88% (elapsed: ~52m, remaining: ~6m) 621/698 tested (72 survived, 27 timed out)
Mutation testing 89% (elapsed: ~52m, remaining: ~6m) 623/698 tested (72 survived, 27 timed out)
Mutation testing 89% (elapsed: ~52m, remaining: ~6m) 625/698 tested (73 survived, 27 timed out)
Mutation testing 89% (elapsed: ~52m, remaining: ~5m) 627/698 tested (75 survived, 27 timed out)
Mutation testing 90% (elapsed: ~52m, remaining: ~5m) 629/698 tested (75 survived, 27 timed out)
Mutation testing 90% (elapsed: ~52m, remaining: ~5m) 631/698 tested (76 survived, 27 timed out)
Mutation testing 90% (elapsed: ~53m, remaining: ~5m) 633/698 tested (76 survived, 27 timed out)
Mutation testing 90% (elapsed: ~53m, remaining: ~5m) 635/698 tested (77 survived, 27 timed out)
Mutation testing 91% (elapsed: ~53m, remaining: ~5m) 638/698 tested (77 survived, 27 timed out)
Mutation testing 91% (elapsed: ~53m, remaining: ~5m) 638/698 tested (77 survived, 27 timed out)
Mutation testing 91% (elapsed: ~53m, remaining: ~4m) 640/698 tested (77 survived, 28 timed out)
Mutation testing 91% (elapsed: ~53m, remaining: ~4m) 641/698 tested (77 survived, 29 timed out)
Mutation testing 92% (elapsed: ~54m, remaining: ~4m) 643/698 tested (77 survived, 29 timed out)
Mutation testing 92% (elapsed: ~54m, remaining: ~4m) 645/698 tested (78 survived, 29 timed out)
Mutation testing 92% (elapsed: ~54m, remaining: ~4m) 646/698 tested (79 survived, 29 timed out)
Mutation testing 92% (elapsed: ~54m, remaining: ~4m) 647/698 tested (79 survived, 30 timed out)
Mutation testing 92% (elapsed: ~54m, remaining: ~4m) 648/698 tested (79 survived, 31 timed out)
Mutation testing 93% (elapsed: ~54m, remaining: ~4m) 650/698 tested (79 survived, 31 timed out)
Mutation testing 93% (elapsed: ~55m, remaining: ~3m) 652/698 tested (79 survived, 31 timed out)
Mutation testing 93% (elapsed: ~55m, remaining: ~3m) 654/698 tested (79 survived, 31 timed out)
Mutation testing 93% (elapsed: ~55m, remaining: ~3m) 656/698 tested (79 survived, 31 timed out)
Mutation testing 94% (elapsed: ~55m, remaining: ~3m) 659/698 tested (79 survived, 31 timed out)
Mutation testing 94% (elapsed: ~55m, remaining: ~3m) 661/698 tested (79 survived, 31 timed out)
Mutation testing 94% (elapsed: ~55m, remaining: ~2m) 663/698 tested (79 survived, 31 timed out)
Mutation testing 95% (elapsed: ~56m, remaining: ~2m) 665/698 tested (79 survived, 31 timed out)
Mutation testing 95% (elapsed: ~56m, remaining: ~2m) 667/698 tested (79 survived, 31 timed out)
Mutation testing 95% (elapsed: ~56m, remaining: ~2m) 668/698 tested (79 survived, 32 timed out)
Mutation testing 95% (elapsed: ~56m, remaining: ~2m) 670/698 tested (79 survived, 32 timed out)
Mutation testing 96% (elapsed: ~56m, remaining: ~2m) 672/698 tested (79 survived, 32 timed out)
Mutation testing 96% (elapsed: ~56m, remaining: ~2m) 674/698 tested (79 survived, 32 timed out)
Mutation testing 96% (elapsed: ~57m, remaining: ~1m) 676/698 tested (79 survived, 32 timed out)
Mutation testing 97% (elapsed: ~57m, remaining: ~1m) 678/698 tested (79 survived, 32 timed out)
Mutation testing 97% (elapsed: ~57m, remaining: ~1m) 680/698 tested (79 survived, 32 timed out)
Mutation testing 97% (elapsed: ~57m, remaining: ~1m) 682/698 tested (80 survived, 32 timed out)
Mutation testing 97% (elapsed: ~57m, remaining: ~1m) 684/698 tested (81 survived, 32 timed out)
Mutation testing 98% (elapsed: ~57m, remaining: <1m) 687/698 tested (81 survived, 32 timed out)
Mutation testing 98% (elapsed: ~58m, remaining: <1m) 689/698 tested (82 survived, 32 timed out)
Mutation testing 98% (elapsed: ~58m, remaining: <1m) 691/698 tested (83 survived, 32 timed out)
Mutation testing 99% (elapsed: ~58m, remaining: <1m) 693/698 tested (83 survived, 32 timed out)
Mutation testing 99% (elapsed: ~58m, remaining: <1m) 695/698 tested (83 survived, 32 timed out)
Mutation testing 99% (elapsed: ~58m, remaining: <1m) 697/698 tested (83 survived, 32 timed out)

All tests
  ✓ All tests (killed 583)

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (a == null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (Array.isArray(a)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (b == null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (b.constructor !== Object) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:29:23
-       for (const key in a) {
+       for (const key in a || b) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:50:30
-           if (!isEqual(a[key], b[key])) {
+           if (!isEqual(a[key], b[key] !== undefined ? b[key] : null)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:82:9
-       if (typeof a !== 'object') {
+       if (a == null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:91:36
-       const attributes = Object.keys(b).reduce<AttributeMap>((attrs, key) => {
+       const attributes = Object.keys(b || false).reduce<AttributeMap>((attrs, key) => {

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(1); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(''); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:20:7
-     if (typeof a !== 'object' || a === null) {
+     if (typeof a !== 'object' && a !== null) {

[Survived] PrecomputedMutator
src/Delta.ts:20:7
-     if (typeof a !== 'object' || a === null) {
+     if (typeof a !== 'object' && a !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:20:7
-     if (typeof a !== 'object' || a === null) {
+     if (typeof a !== 'object' && a !== typeof b) {

[Survived] PrecomputedMutator
src/Delta.ts:62:45
-       } else if (ops != null && Array.isArray(ops.ops)) {
+       } else if (ops != null && Array.isArray(ops.ops.map(op => op.retain))) {

[Survived] PrecomputedMutator
src/Delta.ts:135:11
-         if (isEqual(newOp.attributes, lastOp.attributes)) {
+         if (isEqual(newOp.attributes, this.ops[index - 1].attributes)) {

[Survived] PrecomputedMutator
src/Delta.ts:135:19
-         if (isEqual(newOp.attributes, lastOp.attributes)) {
+         if (isEqual(newOp["attributes"], lastOp.attributes)) {

[Survived] PrecomputedMutator
src/Delta.ts:150:15
-             if (typeof newOp.attributes === 'object') {
+             if (typeof newOp.attributes !== 'undefined') {

[Survived] PrecomputedMutator
src/Delta.ts:157:9
-       if (index === this.ops.length) {
+       if (index > this.ops.length) {

[Survived] PrecomputedMutator
src/Delta.ts:157:9
-       if (index === this.ops.length) {
+       if (index === 0) {

[Survived] PrecomputedMutator
src/Delta.ts:160:7
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, newOp.length, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:30
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, -1, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:30
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, Math.random(), newOp);

[Survived] PrecomputedMutator
src/Delta.ts:190:19
-         target.push(op);
+         target.push(op.attributes ? {
+     insert: op[insert]
+   } : op);

[Survived] PrecomputedMutator
src/Delta.ts:190:19
-         target.push(op);
+         target.push(op.attributes ? {
+     retain: op.length
+   } : op);

[Survived] PrecomputedMutator
src/Delta.ts:199:39
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, null);

[Survived] PrecomputedMutator
src/Delta.ts:204:11
-         if (elem.insert) {
+         if (elem.retain) {

[Survived] PrecomputedMutator
src/Delta.ts:223:27
-       while (index < end && iter.hasNext()) {
+       while (index < end && iter['hasNext']()) {

[Survived] PrecomputedMutator
src/Delta.ts:242:7
-         firstOther != null &&
-         typeof firstOther.retain === 'number' &&
-         firstOther.attributes == null
+         typeof firstOther.retain !== 'number' || firstOther.attributes == null

[Survived] PrecomputedMutator
src/Delta.ts:242:7
-         firstOther != null &&
-         typeof firstOther.retain === 'number' &&
-         firstOther.attributes == null
+         typeof firstOther.retain !== 'number' && firstOther.attributes != null

[Survived] PrecomputedMutator
src/Delta.ts:254:11
-         if (firstOther.retain - firstLeft > 0) {
+         if (firstOther.retain > firstLeft) {

[Survived] PrecomputedMutator
src/Delta.ts:254:11
-         if (firstOther.retain - firstLeft > 0) {
+         if (firstOther.retain - firstLeft !== 0) {

[Survived] PrecomputedMutator
src/Delta.ts:259:12
-       while (thisIter.hasNext() || otherIter.hasNext()) {
+       while (thisIter.hasNext() + otherIter.hasNext()) {

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 2], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(undefined, newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:21
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:21
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 2], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:54
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 1], newOp['retain'])

[Survived] PrecomputedMutator
src/Delta.ts:331:29
-       const delta = new Delta(this.ops.slice());
+       const delta = new Delta(this.ops.concat());

[Survived] PrecomputedMutator
src/Delta.ts:340:9
-       if (this.ops === other.ops) {
+       if (!other) {

[Survived] PrecomputedMutator
src/Delta.ts:355:24
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], cursor + 1);

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength() + length);

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength() * length);

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.max(otherIter.peekLength(), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.abs(otherIter.peekLength(), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.round(otherIter.peekLength(), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:33
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength() + 10, length);

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), strings[0].length);

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), strings[1].length);

[Survived] PrecomputedMutator
src/Delta.ts:365:27
-               retDelta.push(otherIter.next(opLength));
+               retDelta.push(otherIter.next(opLength * 2));

[Survived] PrecomputedMutator
src/Delta.ts:365:27
-               retDelta.push(otherIter.next(opLength));
+               retDelta.push(otherIter.next(opLength + 1));

[Survived] PrecomputedMutator
src/Delta.ts:365:42
-               retDelta.push(otherIter.next(opLength));
+               retDelta.push(otherIter.next(Math.max(opLength, otherIter.peekLength())));

[Survived] PrecomputedMutator
src/Delta.ts:368:41
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:375:15
-                 otherIter.peekLength(),
+                 other.length(),

[Survived] PrecomputedMutator
src/Delta.ts:378:42
-               const thisOp = thisIter.next(opLength);
+               const thisOp = thisIter.next(length);

[Survived] PrecomputedMutator
src/Delta.ts:408:11
-         if (iter.peekType() !== 'insert') {
+         if (iter.hasNext() && iter.peekType() !== 'insert') {

[Survived] PrecomputedMutator
src/Delta.ts:415:35
-             ? thisOp.insert.indexOf(newline, start) - start
+             ? thisOp.insert.indexOf('\n', start) - start

[Survived] PrecomputedMutator
src/Delta.ts:418:19
-           line.push(iter.next());
+           line.push(iter.next(2));

[Survived] PrecomputedMutator
src/Delta.ts:437:11
-         if (op.insert) {
+         if (op.insert + 1) {

[Survived] PrecomputedMutator
src/Delta.ts:439:18
-         } else if (typeof op.retain === 'number' && op.attributes == null) {
+         } else if (typeof op.retain === 'number' && !op.attributes) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.retain ? op.attributes : op.attributes) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.attributes && op.retain) {

[Survived] PrecomputedMutator
src/Delta.ts:456:18
-         } else if (typeof op.retain === 'object' && op.retain !== null) {
+         } else if (op.retain instanceof Object) {

[Survived] PrecomputedMutator
src/Delta.ts:456:18
-         } else if (typeof op.retain === 'object' && op.retain !== null) {
+         } else if (typeof op.retain === 'object' && op.retain !== {}) {

[Survived] PrecomputedMutator
src/Delta.ts:457:45
-           const slice = base.slice(baseIndex, baseIndex + 1);
+           const slice = base.slice(baseIndex, baseIndex + 2);

[Survived] PrecomputedMutator
src/Delta.ts:491:9
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter.next()));

[Survived] PrecomputedMutator
src/Delta.ts:491:32
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter.next(2)));

[Survived] PrecomputedMutator
src/Delta.ts:491:32
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter.next(0)));

[Survived] PrecomputedMutator
src/Delta.ts:495:56
-           const length = Math.min(thisIter.peekLength(), otherIter.peekLength());
+           const length = Math.min(thisIter.peekLength(), 1);

[Survived] PrecomputedMutator
src/Delta.ts:495:56
-           const length = Math.min(thisIter.peekLength(), otherIter.peekLength());
+           const length = Math.min(thisIter.peekLength(), otherIter.hasNext());

[Survived] PrecomputedMutator
src/Delta.ts:511:13
-               typeof thisData === 'object' &&
-               thisData !== null &&
-               typeof otherData === 'object' &&
-               otherData !== null
+               Object.values(thisData).length && thisData !== null && Object.values(otherData).length && otherData !== null

[Survived] PrecomputedMutator
src/Delta.ts:511:13
-               typeof thisData === 'object' &&
-               thisData !== null &&
-               typeof otherData === 'object' &&
-               otherData !== null
+               typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null && typeof Object.values(thisData)[0] === 'object' && typeof Object.values(otherData)[0] === 'object'

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (typeof module !== 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (typeof module === 'number') {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (typeof module === undefined) {

[Survived] PrecomputedMutator
src/Op.ts:16:16
-       } else if (typeof op.retain === 'number') {
+       } else if (op.retain > 0) {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (typeof op.retain === 'function') {

[Survived] PrecomputedMutator
src/OpIterator.ts:25:34
-         const opLength = Op.length(nextOp);
+         const opLength = Op.length({
+     ...nextOp,
+     offset: Math.random()
+   });

[Survived] PrecomputedMutator
src/OpIterator.ts:25:34
-         const opLength = Op.length(nextOp);
+         const opLength = Op.length({
+     ...nextOp,
+     offset: nextOp.offset + 1
+   });

[Survived] PrecomputedMutator
src/OpIterator.ts:92:9
-       if (!this.hasNext()) {
+       if (this.ops.length === 0) {

[Survived] PrecomputedMutator
src/OpIterator.ts:92:9
-       if (!this.hasNext()) {
+       if (this.index >= this.ops.length) {

[Survived] PrecomputedMutator
src/OpIterator.ts:94:16
-       } else if (this.offset === 0) {
+       } else if (this.offset + 1 === 0) {

[Survived] PrecomputedMutator
src/OpIterator.ts:95:29
-         return this.ops.slice(this.index);
+         return this.ops.slice(this.index + this.offset);

Ran 0.95 tests per mutant on average.
-----------------|---------|----------|-----------|------------|----------|----------|
File             | % score | # killed | # timeout | # survived | # no cov | # errors |
-----------------|---------|----------|-----------|------------|----------|----------|
All files        |   88.11 |      583 |        32 |         83 |        0 |        0 |
 AttributeMap.ts |   86.21 |       50 |         0 |          8 |        0 |        0 |
 Delta.ts        |   88.22 |      475 |        27 |         67 |        0 |        0 |
 Op.ts           |   75.00 |        6 |         0 |          2 |        0 |        0 |
 OpIterator.ts   |   90.48 |       52 |         5 |          6 |        0 |        0 |
-----------------|---------|----------|-----------|------------|----------|----------|
[32m22:48:46 (2852) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/delta/reports/mutation/mutation.html
[32m22:48:46 (2852) INFO MutationTestExecutor[39m Done in 58 minutes 49 seconds.

real	58m51.252s
user	85m48.915s
sys	3m33.774s
