*** using precomputed mutations ***
[32m11:47:02 (3090) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m11:47:02 (3090) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m11:47:03 (3090) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m11:47:03 (3090) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m11:47:03 (3090) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m11:47:03 (3090) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 2073 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.5/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "object"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", function () {})
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", null)
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", 0)
Mutant 6 in q.js: bootstrap replaced with "bootsrap"
Mutant 7 in q.js: bootstrap replaced with 1
Mutant 8 in q.js: bootstrap replaced with null
Mutant 9 in q.js: "promise" replaced with "fulfilled"
Mutant 10 in q.js: "promise" replaced with "rejected"
Mutant 11 in q.js: "promise" replaced with "pending"
Mutant 12 in q.js: definition replaced with 42
Mutant 13 in q.js: definition replaced with "Hello, world!"
Mutant 14 in q.js: definition replaced with null
Mutant 15 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "undefined" && typeof module === "undefined"
Mutant 16 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "function" && typeof module === "function"
Mutant 17 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "function"
Mutant 18 in q.js: typeof define === "function" && define.amd replaced with typeof define !== "function" && define.amd
Mutant 19 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd === undefined
Mutant 20 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd !== "function"
Mutant 21 in q.js: define replaced with 1 + 1
Mutant 22 in q.js: define replaced with "Hello, world!"
Mutant 23 in q.js: define replaced with null
Mutant 24 in q.js: definition replaced with definition()
Mutant 25 in q.js: definition replaced with null
Mutant 26 in q.js: definition replaced with function () {}
Mutant 27 in q.js: typeof ses !== "undefined" replaced with ses.ok() && ses.makeQ
Mutant 28 in q.js: typeof ses !== "undefined" replaced with ses.ok() || ses.makeQ
Mutant 29 in q.js: typeof ses !== "undefined" replaced with ses.ok() ? ses.makeQ : noop
Mutant 30 in q.js: !ses.ok() replaced with ses.ng()
Mutant 31 in q.js: !ses.ok() replaced with ses.ok() && false
Mutant 32 in q.js: !ses.ok() replaced with ses.ok() || true
Mutant 33 in q.js: ses.ok replaced with ses.notOk
Mutant 34 in q.js: ses.ok replaced with ses.isNotOk
Mutant 35 in q.js: ses.ok replaced with ses.isOkay
Mutant 36 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window === "undefined" && typeof self === "undefined"
Mutant 37 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "object" || typeof self !== "object"
Mutant 38 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "function" || typeof self !== "function"
Mutant 39 in q.js: captureLine replaced with captureLine + 1
Mutant 40 in q.js: captureLine replaced with captureLine - 1
Mutant 41 in q.js: captureLine replaced with captureLine * 2
Mutant 42 in q.js: head.next replaced with head.next.next
Mutant 43 in q.js: head.next replaced with head.next.next.next
Mutant 44 in q.js: head.next replaced with head.next.next.next.next
Mutant 45 in q.js: domain replaced with domain && domain.enter()
Mutant 46 in q.js: domain replaced with domain || domain.enter()
Mutant 47 in q.js: domain replaced with !domain && domain.enter()
Mutant 48 in q.js: domain.enter replaced with domain.exit
Mutant 49 in q.js: domain.enter replaced with domain.run
Mutant 50 in q.js: domain.enter replaced with domain.bind
Mutant 51 in q.js: runSingle(task, domain) replaced with runSingle(task, window)
Mutant 52 in q.js: runSingle(task, domain) replaced with runSingle(task, undefined)
Mutant 53 in q.js: runSingle(task, domain) replaced with runSingle(task, null)
Mutant 54 in q.js: task replaced with task()
Mutant 55 in q.js: task replaced with task.call(null)
Mutant 56 in q.js: task replaced with task.apply(null, [])
Mutant 57 in q.js: domain replaced with null
Mutant 58 in q.js: domain replaced with undefined
Mutant 59 in q.js: domain replaced with "domain"
Mutant 60 in q.js: laterQueue.length replaced with laterQueue.length + 1
Mutant 61 in q.js: laterQueue.length replaced with laterQueue.length - 1
Mutant 62 in q.js: laterQueue.length replaced with laterQueue.length * 2
Mutant 63 in q.js: laterQueue.pop replaced with laterQueue.shift
Mutant 64 in q.js: laterQueue.pop replaced with laterQueue.unshift
Mutant 65 in q.js: runSingle replaced with noop
Mutant 66 in q.js: runSingle replaced with undefined
Mutant 67 in q.js: task replaced with undefined
Mutant 68 in q.js: task replaced with null
Mutant 69 in q.js: task replaced with function () {}
Mutant 70 in q.js: task replaced with undefined
Mutant 71 in q.js: task replaced with null
Mutant 72 in q.js: task replaced with 0
Mutant 73 in q.js: isNodeJS replaced with !isNodeJS
Mutant 74 in q.js: isNodeJS replaced with isBrowser
Mutant 75 in q.js: isNodeJS replaced with isMobile
Mutant 76 in q.js: domain replaced with domain.exit()
Mutant 77 in q.js: domain replaced with domain.enter()
Mutant 78 in q.js: domain.exit replaced with domain.enter
Mutant 79 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 80 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 81 in q.js: setTimeout replaced with setInterval
Mutant 82 in q.js: setTimeout replaced with clearTimeout
Mutant 83 in q.js: flush replaced with flush()
Mutant 84 in q.js: flush replaced with flush(1)
Mutant 85 in q.js: flush replaced with flush(function () {})
Mutant 86 in q.js: 0 replaced with 1
Mutant 87 in q.js: 0 replaced with -1
Mutant 88 in q.js: 0 replaced with null
Mutant 89 in q.js: domain replaced with null
Mutant 90 in q.js: domain replaced with undefined
Mutant 91 in q.js: domain replaced with false
Mutant 92 in q.js: domain.enter replaced with domain.exit
Mutant 93 in q.js: domain.enter replaced with domain.run
Mutant 94 in q.js: domain.enter replaced with domain.bind
Mutant 95 in q.js: domain replaced with !domain
Mutant 96 in q.js: domain replaced with domain && false
Mutant 97 in q.js: domain replaced with domain || true
Mutant 98 in q.js: domain.exit replaced with domain.enter
Mutant 99 in q.js: domain.exit replaced with null
Mutant 100 in q.js: !flushing replaced with flushing
Mutant 101 in q.js: !flushing replaced with !flushing && true
Mutant 102 in q.js: !flushing replaced with flushing && false
Mutant 103 in q.js: flush replaced with flush()
Mutant 104 in q.js: flush replaced with flush.call(null)
Mutant 105 in q.js: flush replaced with flush.apply(null)
Mutant 106 in q.js: typeof window !== "undefined" replaced with typeof window === "undefined"
Mutant 107 in q.js: typeof window !== "undefined" replaced with typeof window !== "object"
Mutant 108 in q.js: typeof window !== "undefined" replaced with typeof window !== "string"
Mutant 109 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 110 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 111 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind({})
Mutant 112 in q.js: setImmediate.bind replaced with setInterval.bind
Mutant 113 in q.js: setImmediate.bind replaced with requestAnimationFrame.bind
Mutant 114 in q.js: window replaced with undefined
Mutant 115 in q.js: window replaced with null
Mutant 116 in q.js: window replaced with {}
Mutant 117 in q.js: flush replaced with flush()
Mutant 118 in q.js: flush replaced with null
Mutant 119 in q.js: flush replaced with undefined
Mutant 120 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessagePort !== "undefined"
Mutant 121 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageEvent !== "undefined"
Mutant 122 in q.js: flush replaced with flush + 1
Mutant 123 in q.js: flush replaced with flush = undefined
Mutant 124 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 125 in q.js: 0 replaced with Math.random()
Mutant 126 in q.js: 0 replaced with "hello"
Mutant 127 in q.js: 0 replaced with undefined
Mutant 128 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 129 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 130 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "0")
Mutant 131 in q.js: setTimeout replaced with setInterval
Mutant 132 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 133 in q.js: flush replaced with undefined
Mutant 134 in q.js: 0 replaced with 1
Mutant 135 in q.js: 0 replaced with -1
Mutant 136 in q.js: 0 replaced with null
Mutant 137 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 138 in q.js: setTimeout replaced with setInterval
Mutant 139 in q.js: flush replaced with flush()
Mutant 140 in q.js: flush replaced with requestAnimationFrame(flush)
Mutant 141 in q.js: 0 replaced with 1
Mutant 142 in q.js: 0 replaced with -1
Mutant 143 in q.js: 0 replaced with null
Mutant 144 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 145 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 146 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 147 in q.js: task replaced with undefined
Mutant 148 in q.js: task replaced with null
Mutant 149 in q.js: task replaced with function () {}
Mutant 150 in q.js: !flushing replaced with flushing
Mutant 151 in q.js: !flushing replaced with !flushing || true
Mutant 152 in q.js: !flushing replaced with flushing && false
Mutant 153 in q.js: requestTick replaced with requestPortTick
Mutant 154 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[0])
Mutant 155 in q.js: call.apply(f, arguments) replaced with call.apply(f, null)
Mutant 156 in q.js: call.apply(f, arguments) replaced with call.apply(f, undefined)
Mutant 157 in q.js: call.apply replaced with call.call
Mutant 158 in q.js: call.apply replaced with call.bind
Mutant 159 in q.js: f replaced with f + 1
Mutant 160 in q.js: f replaced with f * 2
Mutant 161 in q.js: f replaced with f - 1
Mutant 162 in q.js: arguments replaced with [1, 2, 3]
Mutant 163 in q.js: arguments replaced with this
Mutant 164 in q.js: arguments replaced with null
Mutant 165 in q.js: Array.prototype.slice replaced with Array.prototype.slice.call(this, 0)
Mutant 166 in q.js: Array.prototype.slice replaced with Array.prototype.slice.call(this, 1)
Mutant 167 in q.js: Array.prototype.slice replaced with Array.prototype.slice.call(this, 2)
Mutant 168 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 169 in q.js: arguments.length === 1 replaced with arguments.length === 0
Mutant 170 in q.js: arguments.length === 1 replaced with !arguments.length
Mutant 171 in q.js: 1 replaced with 1 + 1
Mutant 172 in q.js: 1 replaced with "hello"
Mutant 173 in q.js: 1 replaced with null
Mutant 174 in q.js: index in this replaced with index > this
Mutant 175 in q.js: index in this replaced with index <= this
Mutant 176 in q.js: index in this replaced with index >= this
Mutant 177 in q.js: ++index >= length replaced with ++index > length
Mutant 178 in q.js: ++index >= length replaced with index++ >= length
Mutant 179 in q.js: ++index >= length replaced with index + 1 >= length
Mutant 180 in q.js: index < length replaced with index > length
Mutant 181 in q.js: index < length replaced with index <= length
Mutant 182 in q.js: index < length replaced with index < length - 1
Mutant 183 in q.js: index++ replaced with index--
Mutant 184 in q.js: index++ replaced with index = 0
Mutant 185 in q.js: index++ replaced with index += 2
Mutant 186 in q.js: index in this replaced with this[index]
Mutant 187 in q.js: index in this replaced with this.hasOwnProperty(index)
Mutant 188 in q.js: index in this replaced with Object.prototype.hasOwnProperty.call(this, index)
Mutant 189 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index + 1)
Mutant 190 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index - 1)
Mutant 191 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index * 2)
Mutant 192 in q.js: basis replaced with basis + 1
Mutant 193 in q.js: basis replaced with basis - 1
Mutant 194 in q.js: basis replaced with basis * 2
Mutant 195 in q.js: this[index] replaced with this[index + 1]
Mutant 196 in q.js: this[index] replaced with this[index - 1]
Mutant 197 in q.js: this[index] replaced with this[index] = "foo"
Mutant 198 in q.js: index replaced with index + 1
Mutant 199 in q.js: index replaced with index - 1
Mutant 200 in q.js: index replaced with 0
Mutant 201 in q.js: i < this.length replaced with i <= this.length
Mutant 202 in q.js: i < this.length replaced with i > this.length
Mutant 203 in q.js: i < this.length replaced with i == this.length
Mutant 204 in q.js: i++ replaced with i--
Mutant 205 in q.js: i++ replaced with i += 2
Mutant 206 in q.js: i++ replaced with i = i + 1
Mutant 207 in q.js: this[i] === value replaced with this[i] !== value
Mutant 208 in q.js: this[i] === value replaced with this[i] + value
Mutant 209 in q.js: this[i] === value replaced with this[i] * value
Mutant 210 in q.js: collect.push replaced with collect.pop
Mutant 211 in q.js: collect.push replaced with collect.shift
Mutant 212 in q.js: collect.push replaced with collect.unshift
Mutant 213 in q.js: callback.call(thisp, value, index, self) replaced with callback.apply(thisp, [value, index, self])
Mutant 214 in q.js: callback.call(thisp, value, index, self) replaced with callback.bind(thisp, value, index, self)()
Mutant 215 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self, 42)
Mutant 216 in q.js: thisp replaced with null
Mutant 217 in q.js: thisp replaced with undefined
Mutant 218 in q.js: thisp replaced with {}
Mutant 219 in q.js: value replaced with undefined
Mutant 220 in q.js: value replaced with null
Mutant 221 in q.js: value replaced with value + 1
Mutant 222 in q.js: index replaced with ++index
Mutant 223 in q.js: index replaced with index + 1
Mutant 224 in q.js: index replaced with index - 1
Mutant 225 in q.js: self replaced with undefined
Mutant 226 in q.js: self replaced with null
Mutant 227 in q.js: object replaced with null
Mutant 228 in q.js: object replaced with undefined
Mutant 229 in q.js: object replaced with {}
Mutant 230 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && key !== "prototype"
Mutant 231 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && typeof key !== "string"
Mutant 232 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && key !== "length"
Mutant 233 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object[key])
Mutant 234 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(key in object)
Mutant 235 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object.hasOwnProperty(key))
Mutant 236 in q.js: object_hasOwnProperty replaced with !object_hasOwnProperty
Mutant 237 in q.js: object replaced with null
Mutant 238 in q.js: object replaced with undefined
Mutant 239 in q.js: key replaced with "key" + 1
Mutant 240 in q.js: key replaced with key + 1
Mutant 241 in q.js: key replaced with key + "1"
Mutant 242 in q.js: keys.push replaced with keys.pop
Mutant 243 in q.js: keys.push replaced with keys.shift
Mutant 244 in q.js: keys.push replaced with keys.unshift
Mutant 245 in q.js: key replaced with key++
Mutant 246 in q.js: key replaced with key + 1
Mutant 247 in q.js: key replaced with key * 2
Mutant 248 in q.js: uncurryThis replaced with undefined
Mutant 249 in q.js: uncurryThis replaced with null
Mutant 250 in q.js: uncurryThis replaced with []
Mutant 251 in q.js: Object replaced with Object.prototype
Mutant 252 in q.js: Object replaced with Function
Mutant 253 in q.js: value replaced with value + 1
Mutant 254 in q.js: value replaced with value * 2
Mutant 255 in q.js: value replaced with value - 1
Mutant 256 in q.js: object_toString replaced with object_hasOwnProperty
Mutant 257 in q.js: object_toString replaced with array_reduce
Mutant 258 in q.js: object_toString replaced with isObject
Mutant 259 in q.js: exception replaced with null
Mutant 260 in q.js: exception replaced with undefined
Mutant 261 in q.js: exception replaced with {}
Mutant 262 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue === "undefined"
Mutant 263 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "object"
Mutant 264 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue === "function"
Mutant 265 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with !hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack
Mutant 266 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks || !promise.stack || typeof error !== "object" || error === null || !error.stack
Mutant 267 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.then(); !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 268 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise[Symbol.iterator](); !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 269 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = Promise.resolve(promise); !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 270 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 271 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p.source; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 272 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p.source; p = p) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 273 in q.js: !!p replaced with !p
Mutant 274 in q.js: !!p replaced with p == false
Mutant 275 in q.js: !!p replaced with p != true
Mutant 276 in q.js: p = p.source replaced with p = p.source.source
Mutant 277 in q.js: p = p.source replaced with p = p.source.source.source
Mutant 278 in q.js: p = p.source replaced with p = p.source.source.source.source
Mutant 279 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)
Mutant 280 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)
Mutant 281 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ !== p.stackCounter)
Mutant 282 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 283 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 284 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: Math.random() * p.stackCounter,
  configurable: true
})
Mutant 285 in q.js: error replaced with undefined
Mutant 286 in q.js: error replaced with null
Mutant 287 in q.js: error replaced with {}
Mutant 288 in q.js: "__minimumStackCounter__" replaced with "__maximumStackCounter__"
Mutant 289 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__"
Mutant 290 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__" + 1
Mutant 291 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 292 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 293 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 294 in q.js: stacks.unshift replaced with stacks.pop
Mutant 295 in q.js: stacks.unshift replaced with stacks.shift
Mutant 296 in q.js: stacks.unshift replaced with stacks.push
Mutant 297 in q.js: p.stack replaced with p.stack.slice(1)
Mutant 298 in q.js: p.stack replaced with p.stack.slice(0, -1)
Mutant 299 in q.js: p.stack replaced with p.stack.split("\n").reverse()[0]
Mutant 300 in q.js: stacks.unshift replaced with stacks.push
Mutant 301 in q.js: stacks.unshift replaced with stacks.pop
Mutant 302 in q.js: stacks.unshift replaced with stacks.shift
Mutant 303 in q.js: error.stack replaced with error.message
Mutant 304 in q.js: error.stack replaced with error.name
Mutant 305 in q.js: error.stack replaced with error.fileName
Mutant 306 in q.js: stacks.join replaced with stacks.concat
Mutant 307 in q.js: stacks.join replaced with stacks.push
Mutant 308 in q.js: stacks.join replaced with stacks.pop
Mutant 309 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + "From previous event:\n"
Mutant 310 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + "From previous event:\n" + "\n"
Mutant 311 in q.js: concatedStacks replaced with concatedStacks.split("\n").reverse().join("\n")
Mutant 312 in q.js: concatedStacks replaced with concatedStacks.replace(/^/gm, "> ")
Mutant 313 in q.js: concatedStacks replaced with concatedStacks.split("\n").filter(line => line.indexOf("q.js") === -1).join("\n")
Mutant 314 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  enumerable: true
})
Mutant 315 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  writable: false
})
Mutant 316 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  configurable: false
})
Mutant 317 in q.js: "stack" replaced with "stacktrace"
Mutant 318 in q.js: "stack" replaced with "stack".toLowerCase()
Mutant 319 in q.js: "stack" replaced with "stack".split("").reverse().join("")
Mutant 320 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack + "foo",
  configurable: true
}
Mutant 321 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack.toUpperCase(),
  configurable: true
}
Mutant 322 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack.replace("Q", "q"),
  configurable: true
}
Mutant 323 in q.js: "\n" replaced with " "
Mutant 324 in q.js: "\n" replaced with "\t"
Mutant 325 in q.js: "\n" replaced with "\\n"
Mutant 326 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 327 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = -1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 328 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = Math.floor(Math.random() * array.length); i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 329 in q.js: i < lines.length replaced with i <= lines.length
Mutant 330 in q.js: i < lines.length replaced with i > lines.length
Mutant 331 in q.js: i < lines.length replaced with i !== lines.length
Mutant 332 in q.js: ++i replaced with i--
Mutant 333 in q.js: ++i replaced with i += 2
Mutant 334 in q.js: ++i replaced with i *= 2
Mutant 335 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with line.match(/^at .+ \((.+):(\d+):(\d+)\)$/)
Mutant 336 in q.js: isInternalFrame replaced with isInternalFrame && false
Mutant 337 in q.js: isInternalFrame replaced with isInternalFrame || true
Mutant 338 in q.js: isInternalFrame replaced with isInternalFrame == false
Mutant 339 in q.js: isNodeFrame replaced with isNodeFrame || isInternalFrame
Mutant 340 in q.js: isNodeFrame replaced with isNodeFrame && isInternalFrame
Mutant 341 in q.js: isNodeFrame replaced with isNodeFrame ^ isInternalFrame
Mutant 342 in q.js: desiredLines.push replaced with desiredLines.pop
Mutant 343 in q.js: desiredLines.push replaced with desiredLines.shift
Mutant 344 in q.js: desiredLines.push replaced with desiredLines.unshift
Mutant 345 in q.js: line replaced with line + 1
Mutant 346 in q.js: line replaced with line - 1
Mutant 347 in q.js: line replaced with line * 2
Mutant 348 in q.js: "\n" replaced with "\t"
Mutant 349 in q.js: "\n" replaced with " "
Mutant 350 in q.js: "\n" replaced with "<br>"
Mutant 351 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 352 in q.js: stackLine.indexOf replaced with stackLine.startsWith
Mutant 353 in q.js: stackLine.indexOf replaced with stackLine.endsWith
Mutant 354 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 355 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 356 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 357 in q.js: stackLine replaced with stackLine.replace(/at/g, "at at")
Mutant 358 in q.js: stackLine replaced with stackLine.slice(0, -1)
Mutant 359 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 360 in q.js: attempt1 replaced with attempt1[1] > 0
Mutant 361 in q.js: attempt1 replaced with attempt1[1] === "module.js"
Mutant 362 in q.js: attempt1 replaced with attempt1[1].indexOf("module.js") !== -1
Mutant 363 in q.js: Number replaced with "string"
Mutant 364 in q.js: Number replaced with null
Mutant 365 in q.js: Number replaced with undefined
Mutant 366 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 367 in q.js: attempt1[2] replaced with attempt2[1]
Mutant 368 in q.js: attempt1[2] replaced with attempt3[1]
Mutant 369 in q.js: stackLine replaced with stackLine.trim()
Mutant 370 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 371 in q.js: stackLine replaced with stackLine.substring(0, 10)
Mutant 372 in q.js: attempt2 replaced with attempt2[1]
Mutant 373 in q.js: attempt2 replaced with attempt2.length
Mutant 374 in q.js: attempt2 replaced with attempt2.join("")
Mutant 375 in q.js: Number replaced with "hello"
Mutant 376 in q.js: Number replaced with undefined
Mutant 377 in q.js: Number replaced with null
Mutant 378 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 379 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 380 in q.js: attempt2[2] replaced with attempt2[0]
Mutant 381 in q.js: stackLine replaced with stackLine.replace(")", "(")
Mutant 382 in q.js: stackLine replaced with stackLine.replace("(", ")")
Mutant 383 in q.js: stackLine replaced with stackLine.replace("@", " ")
Mutant 384 in q.js: attempt3 replaced with attempt3[0]
Mutant 385 in q.js: attempt3 replaced with attempt3.length > 0
Mutant 386 in q.js: attempt3 replaced with attempt3.indexOf(stackLine) > -1
Mutant 387 in q.js: Number replaced with String
Mutant 388 in q.js: Number replaced with null
Mutant 389 in q.js: Number replaced with undefined
Mutant 390 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 391 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 392 in q.js: attempt3[2] replaced with attempt3.length
Mutant 393 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[0]
Mutant 394 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[1]
Mutant 395 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[2]
Mutant 396 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 397 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 398 in q.js: stackLine replaced with stackLine.split(" ").slice(-1)[0]
Mutant 399 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 400 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === "undefined"
Mutant 401 in q.js: !hasStacks replaced with hasStacks
Mutant 402 in q.js: e.stack.split replaced with e.stack.slice
Mutant 403 in q.js: e.stack.split replaced with e.stack.indexOf
Mutant 404 in q.js: e.stack.split replaced with e.stack.lastIndexOf
Mutant 405 in q.js: "\n" replaced with "\n\n"
Mutant 406 in q.js: "\n" replaced with "\t"
Mutant 407 in q.js: "\n" replaced with ""
Mutant 408 in q.js: lines[0].indexOf replaced with lines[0].length
Mutant 409 in q.js: "@" replaced with "#"
Mutant 410 in q.js: "@" replaced with "%"
Mutant 411 in q.js: "@" replaced with "&"
Mutant 412 in q.js: getFileNameAndLineNumber replaced with getLineNumber
Mutant 413 in q.js: getFileNameAndLineNumber replaced with lineNumber
Mutant 414 in q.js: firstLine replaced with lastLine
Mutant 415 in q.js: firstLine replaced with lines[lines.length - 1]
Mutant 416 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0]
Mutant 417 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[1]
Mutant 418 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length
Mutant 419 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn("")
Mutant 420 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console.warn === "undefined"
Mutant 421 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console !== "object"
Mutant 422 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback(null, arguments))
Mutant 423 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback(arguments))
Mutant 424 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback(null, arguments[0]))
Mutant 425 in q.js: callback.apply replaced with callback.call
Mutant 426 in q.js: callback.apply replaced with callback.bind
Mutant 427 in q.js: callback replaced with promise
Mutant 428 in q.js: callback replaced with resolvedPromise
Mutant 429 in q.js: callback replaced with undefined
Mutant 430 in q.js: arguments replaced with null
Mutant 431 in q.js: arguments replaced with undefined
Mutant 432 in q.js: arguments replaced with 0
Mutant 433 in q.js: value instanceof Promise replaced with value === Promise
Mutant 434 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 435 in q.js: value instanceof Promise replaced with Object.getPrototypeOf(value) === Promise.prototype
Mutant 436 in q.js: isPromiseAlike(value) replaced with value.then
Mutant 437 in q.js: isPromiseAlike(value) replaced with value instanceof Promise
Mutant 438 in q.js: isPromiseAlike(value) replaced with value.constructor === Promise
Mutant 439 in q.js: isPromiseAlike replaced with typeof value === "object"
Mutant 440 in q.js: isPromiseAlike replaced with value instanceof Array
Mutant 441 in q.js: value replaced with value + 1
Mutant 442 in q.js: value replaced with value * 2
Mutant 443 in q.js: value replaced with value - 1
Mutant 444 in q.js: value replaced with value + 1
Mutant 445 in q.js: value replaced with value - 1
Mutant 446 in q.js: value replaced with value * 2
Mutant 447 in q.js: fulfill replaced with reject
Mutant 448 in q.js: value replaced with 1
Mutant 449 in q.js: value replaced with Q.reject(new Error("foo"))
Mutant 450 in q.js: value replaced with null
Mutant 451 in q.js: defer.prototype replaced with defer.prototype.constructor
Mutant 452 in q.js: defer.prototype replaced with defer.prototype.constructor.prototype
Mutant 453 in q.js: defer.prototype replaced with defer.prototype.constructor.prototype.prototype
Mutant 454 in q.js: object_create replaced with null
Mutant 455 in q.js: object_create replaced with undefined
Mutant 456 in q.js: object_create replaced with {}
Mutant 457 in q.js: Promise.prototype replaced with Object.prototype
Mutant 458 in q.js: Promise.prototype replaced with Array.prototype
Mutant 459 in q.js: Promise.prototype replaced with Function.prototype
Mutant 460 in q.js: arguments replaced with 1 + arguments
Mutant 461 in q.js: arguments replaced with arguments.length
Mutant 462 in q.js: arguments replaced with arguments.callee
Mutant 463 in q.js: messages replaced with messages.length > 0
Mutant 464 in q.js: messages replaced with messages[0] !== undefined
Mutant 465 in q.js: messages replaced with Array.isArray(messages) && messages.length > 0
Mutant 466 in q.js: messages.push replaced with messages.pop
Mutant 467 in q.js: messages.push replaced with messages.shift
Mutant 468 in q.js: messages.push replaced with messages.unshift
Mutant 469 in q.js: args replaced with args[0]
Mutant 470 in q.js: args replaced with args.slice(1)
Mutant 471 in q.js: args replaced with args.reverse()
Mutant 472 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 473 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[1]
Mutant 474 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[1] === undefined
Mutant 475 in q.js: operands[1] replaced with operands[2]
Mutant 476 in q.js: operands[1] replaced with operands[0]
Mutant 477 in q.js: operands[1] replaced with operands[1] + 1
Mutant 478 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(promise)
Mutant 479 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(args)
Mutant 480 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(null)
Mutant 481 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 482 in q.js: resolvedPromise replaced with undefined
Mutant 483 in q.js: resolvedPromise replaced with null
Mutant 484 in q.js: resolvedPromise replaced with 0
Mutant 485 in q.js: args replaced with array_slice(args, 1)
Mutant 486 in q.js: args replaced with array_concat(args, [])
Mutant 487 in q.js: args replaced with array_splice(args, 0, args.length)
Mutant 488 in q.js: messages replaced with messages.length
Mutant 489 in q.js: messages replaced with messages[0]
Mutant 490 in q.js: messages replaced with messages.pop()
Mutant 491 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 492 in q.js: resolvedPromise replaced with reject(resolvedPromise)
Mutant 493 in q.js: resolvedPromise replaced with fulfill(resolvedPromise.promise)
Mutant 494 in q.js: isPromise(nearerValue) replaced with nearerValue === undefined
Mutant 495 in q.js: isPromise(nearerValue) replaced with nearerValue === null
Mutant 496 in q.js: isPromise(nearerValue) replaced with nearerValue === "foo"
Mutant 497 in q.js: isPromise replaced with !isPromise
Mutant 498 in q.js: isPromise replaced with isPromiseAlike
Mutant 499 in q.js: isPromise replaced with isPromiseLike
Mutant 500 in q.js: nearerValue replaced with nearerValue + 1
Mutant 501 in q.js: nearerValue replaced with nearerValue * 2
Mutant 502 in q.js: nearerValue replaced with nearerValue - 1
Mutant 503 in q.js: !resolvedPromise replaced with resolvedPromise === undefined
Mutant 504 in q.js: !resolvedPromise replaced with resolvedPromise == null
Mutant 505 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 506 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 507 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || !hasStacks
Mutant 508 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.lastIndexOf("\n") + 1
Mutant 509 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") - 1
Mutant 510 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") + 2
Mutant 511 in q.js: e.stack.indexOf replaced with e.stack.length
Mutant 512 in q.js: "\n" replaced with "\t"
Mutant 513 in q.js: "\n" replaced with " "
Mutant 514 in q.js: "\n" replaced with ""
Mutant 515 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport && hasStacks
Mutant 516 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 517 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 518 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 519 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.bind
Mutant 520 in q.js: newPromise replaced with newPromise.promise
Mutant 521 in q.js: newPromise replaced with newPromise.resolve
Mutant 522 in q.js: newPromise replaced with newPromise.reject
Mutant 523 in q.js: message replaced with message.reverse()
Mutant 524 in q.js: message replaced with message.slice(1)
Mutant 525 in q.js: message replaced with message.concat(new Promise())
Mutant 526 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 527 in q.js: resolvedPromise replaced with resolvedPromise.valueOf()
Mutant 528 in q.js: resolvedPromise replaced with resolvedPromise.promiseDispatch
Mutant 529 in q.js: Q(value) replaced with Q(reject(value))
Mutant 530 in q.js: Q(value) replaced with Q(value + 1)
Mutant 531 in q.js: Q(value) replaced with Q(value).then(function () {
  return reject(value);
})
Mutant 532 in q.js: Q replaced with undefined
Mutant 533 in q.js: Q replaced with null
Mutant 534 in q.js: value replaced with null
Mutant 535 in q.js: value replaced with undefined
Mutant 536 in q.js: value replaced with 0
Mutant 537 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 538 in q.js: resolvedPromise replaced with resolvedPromise + 1
Mutant 539 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 540 in q.js: fulfill(value) replaced with reject(value)
Mutant 541 in q.js: fulfill(value) replaced with fulfill(undefined)
Mutant 542 in q.js: fulfill(value) replaced with fulfill(value + 1)
Mutant 543 in q.js: fulfill replaced with resolve
Mutant 544 in q.js: fulfill replaced with notify
Mutant 545 in q.js: value replaced with value * 2
Mutant 546 in q.js: value replaced with value - 1
Mutant 547 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 548 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 549 in q.js: resolvedPromise replaced with typeof resolvedPromise === "boolean"
Mutant 550 in q.js: reject(reason) replaced with resolve(reason)
Mutant 551 in q.js: reject(reason) replaced with reject(null)
Mutant 552 in q.js: reason replaced with new Error("Different error message")
Mutant 553 in q.js: reason replaced with Q.reject("Different rejection reason")
Mutant 554 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 555 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 556 in q.js: resolvedPromise replaced with resolvedPromise !== undefined
Mutant 557 in q.js: progress replaced with "progress"
Mutant 558 in q.js: progress replaced with 0
Mutant 559 in q.js: progress replaced with null
Mutant 560 in q.js: error replaced with error.message
Mutant 561 in q.js: error replaced with error.stack
Mutant 562 in q.js: error replaced with error.name
Mutant 563 in q.js: arguments.length > 2 replaced with arguments.length < 2
Mutant 564 in q.js: arguments.length > 2 replaced with arguments.length === 2
Mutant 565 in q.js: arguments.length > 2 replaced with arguments.length > 0
Mutant 566 in q.js: self.resolve replaced with self.fulfill
Mutant 567 in q.js: self.resolve replaced with self.reject
Mutant 568 in q.js: self.resolve replaced with self.notify
Mutant 569 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 570 in q.js: array_slice(arguments, 1) replaced with arguments.slice(1)
Mutant 571 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 1, 2)
Mutant 572 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 573 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 4)
Mutant 574 in q.js: arguments replaced with arguments[0]
Mutant 575 in q.js: arguments replaced with arguments.length
Mutant 576 in q.js: 1 replaced with 0
Mutant 577 in q.js: 1 replaced with -1
Mutant 578 in q.js: self.resolve replaced with self.reject
Mutant 579 in q.js: self.resolve replaced with self.fulfill
Mutant 580 in q.js: self.resolve replaced with self.settle
Mutant 581 in q.js: value replaced with undefined
Mutant 582 in q.js: value replaced with null
Mutant 583 in q.js: value replaced with 0
Mutant 584 in q.js: typeof resolver !== "function" replaced with resolver == null
Mutant 585 in q.js: typeof resolver !== "function" replaced with resolver !== null
Mutant 586 in q.js: typeof resolver !== "function" replaced with typeof resolver !== "object"
Mutant 587 in q.js: defer replaced with defer.promise
Mutant 588 in q.js: defer replaced with defer.resolve
Mutant 589 in q.js: defer replaced with defer.reject
Mutant 590 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve(1), deferred.reject(0), deferred.notify(1))
Mutant 591 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve(deferred.promise), deferred.reject(deferred.promise), deferred.notify(deferred.promise))
Mutant 592 in q.js: deferred.resolve replaced with deferred.reject
Mutant 593 in q.js: deferred.resolve replaced with undefined
Mutant 594 in q.js: deferred.reject replaced with deferred.resolve
Mutant 595 in q.js: deferred.reject replaced with deferred.notify
Mutant 596 in q.js: deferred.reject replaced with deferred.makeNodeResolver
Mutant 597 in q.js: deferred.notify replaced with deferred.reject
Mutant 598 in q.js: deferred.notify replaced with deferred.fulfill
Mutant 599 in q.js: deferred.notify replaced with deferred.promise
Mutant 600 in q.js: x replaced with y
Mutant 601 in q.js: x replaced with x + y
Mutant 602 in q.js: x replaced with null
Mutant 603 in q.js: y replaced with x
Mutant 604 in q.js: y replaced with y + 1
Mutant 605 in q.js: y replaced with x + y
Mutant 606 in q.js: [this, that] replaced with [that, this]
Mutant 607 in q.js: [this, that] replaced with [this, this]
Mutant 608 in q.js: [this, that] replaced with [null, null]
Mutant 609 in q.js: x === y replaced with x !== y
Mutant 610 in q.js: x === y replaced with x + y
Mutant 611 in q.js: x === y replaced with x - y
Mutant 612 in q.js: i < len replaced with i <= len
Mutant 613 in q.js: i < len replaced with i > len
Mutant 614 in q.js: i < len replaced with i == len
Mutant 615 in q.js: i++ replaced with i--
Mutant 616 in q.js: i++ replaced with i += 2
Mutant 617 in q.js: i++ replaced with i = answerPs.length - 1
Mutant 618 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve)
Mutant 619 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve)
Mutant 620 in q.js: Q replaced with Q.reject
Mutant 621 in q.js: Q replaced with Q.all
Mutant 622 in q.js: Q replaced with Q.race
Mutant 623 in q.js: answerPs[i] replaced with answerPs[i + 1]
Mutant 624 in q.js: answerPs[i] replaced with answerPs[i - 1]
Mutant 625 in q.js: resolve replaced with reject
Mutant 626 in q.js: this.then replaced with promise
Mutant 627 in q.js: this.then replaced with deferred.promise
Mutant 628 in q.js: Q.race replaced with Q.resolve
Mutant 629 in q.js: Q.race replaced with Q.reject
Mutant 630 in q.js: Q.race replaced with Q.all
Mutant 631 in q.js: fallback === void 0 replaced with fallback === null
Mutant 632 in q.js: fallback === void 0 replaced with fallback === undefined
Mutant 633 in q.js: fallback === void 0 replaced with fallback !== void 0
Mutant 634 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 635 in q.js: inspect === void 0 replaced with inspect === null
Mutant 636 in q.js: inspect === void 0 replaced with inspect !== null
Mutant 637 in q.js: object_create replaced with {}
Mutant 638 in q.js: Promise.prototype replaced with Object.prototype
Mutant 639 in q.js: Promise.prototype replaced with Function.prototype
Mutant 640 in q.js: Promise.prototype replaced with Array.prototype
Mutant 641 in q.js: descriptor[op] replaced with descriptor[op] = function () {}
Mutant 642 in q.js: descriptor[op] replaced with descriptor[op] = function () {
  throw new Error("Test error");
}
Mutant 643 in q.js: descriptor[op] replaced with descriptor[op] = function () {
  return Q.reject("Test rejection");
}
Mutant 644 in q.js: promise replaced with null
Mutant 645 in q.js: promise replaced with undefined
Mutant 646 in q.js: promise replaced with {}
Mutant 647 in q.js: args replaced with args[0]
Mutant 648 in q.js: args replaced with args.slice(1)
Mutant 649 in q.js: args replaced with [args[0]].concat(args.slice(1))
Mutant 650 in q.js: promise replaced with promise.then(function (value) {
  return value + 1;
})
Mutant 651 in q.js: promise replaced with promise.then(function (value) {
  return value - 1;
})
Mutant 652 in q.js: promise replaced with promise.then(function (value) {
  return value * 2;
})
Mutant 653 in q.js: op replaced with op + 1
Mutant 654 in q.js: op replaced with op - 1
Mutant 655 in q.js: op replaced with op * 2
Mutant 656 in q.js: args replaced with args[0]
Mutant 657 in q.js: args replaced with args.slice(1)
Mutant 658 in q.js: args replaced with args.length
Mutant 659 in q.js: reject replaced with resolve
Mutant 660 in q.js: exception replaced with null
Mutant 661 in q.js: exception replaced with new Error("Different error message")
Mutant 662 in q.js: exception replaced with undefined
Mutant 663 in q.js: resolve replaced with deferred.reject
Mutant 664 in q.js: resolve replaced with deferred.notify
Mutant 665 in q.js: resolve replaced with deferred.promise
Mutant 666 in q.js: result replaced with 1 + result
Mutant 667 in q.js: result replaced with result + "a"
Mutant 668 in q.js: result replaced with result * 2
Mutant 669 in q.js: inspect replaced with inspect.state
Mutant 670 in q.js: inspect replaced with inspect()
Mutant 671 in q.js: inspect replaced with inspect.call()
Mutant 672 in q.js: inspect replaced with promise
Mutant 673 in q.js: inspect replaced with resolve
Mutant 674 in q.js: inspected.state === "rejected" replaced with inspected.state !== "fulfilled"
Mutant 675 in q.js: inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 676 in q.js: inspected.state === "rejected" replaced with inspected.state !== "pending"
Mutant 677 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 678 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "rejected"
Mutant 679 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "pending"
Mutant 680 in q.js: fulfilled replaced with rejected
Mutant 681 in q.js: value replaced with value + 1
Mutant 682 in q.js: value replaced with value * 2
Mutant 683 in q.js: value replaced with value.toString()
Mutant 684 in q.js: reject replaced with resolve
Mutant 685 in q.js: exception replaced with exception.message
Mutant 686 in q.js: exception replaced with exception.stack
Mutant 687 in q.js: exception replaced with new Error(exception.message)
Mutant 688 in q.js: typeof rejected === "function" replaced with rejected !== null
Mutant 689 in q.js: typeof rejected === "function" replaced with rejected !== undefined
Mutant 690 in q.js: typeof rejected === "function" replaced with !rejected.length
Mutant 691 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, this)
Mutant 692 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, null)
Mutant 693 in q.js: self replaced with self.parent
Mutant 694 in q.js: self replaced with self.child
Mutant 695 in q.js: self replaced with self.sibling
Mutant 696 in q.js: rejected replaced with resolve
Mutant 697 in q.js: exception replaced with null
Mutant 698 in q.js: exception replaced with new Error("test")
Mutant 699 in q.js: exception replaced with undefined
Mutant 700 in q.js: newException replaced with newException.message
Mutant 701 in q.js: newException replaced with newException.stack
Mutant 702 in q.js: newException replaced with newException.name
Mutant 703 in q.js: exception replaced with reject(exception)
Mutant 704 in q.js: exception replaced with Q.reject(exception)
Mutant 705 in q.js: progressed replaced with progressed + 1
Mutant 706 in q.js: progressed replaced with progressed * 2
Mutant 707 in q.js: progressed replaced with progressed / 0
Mutant 708 in q.js: value replaced with null
Mutant 709 in q.js: value replaced with undefined
Mutant 710 in q.js: done replaced with !done
Mutant 711 in q.js: done replaced with done && false
Mutant 712 in q.js: done replaced with done || true
Mutant 713 in q.js: deferred.resolve replaced with deferred.reject
Mutant 714 in q.js: deferred.resolve replaced with deferred.notify
Mutant 715 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 716 in q.js: _fulfilled(value) replaced with _fulfilled(value).then(_rejected)
Mutant 717 in q.js: _fulfilled(value) replaced with _rejected(value).then(_fulfilled)
Mutant 718 in q.js: _fulfilled replaced with _progressed
Mutant 719 in q.js: _fulfilled replaced with Q.reject
Mutant 720 in q.js: value replaced with undefined
Mutant 721 in q.js: value replaced with null
Mutant 722 in q.js: value replaced with "foo"
Mutant 723 in q.js: done replaced with !done
Mutant 724 in q.js: done replaced with done && false
Mutant 725 in q.js: done replaced with done || true
Mutant 726 in q.js: deferred.resolve replaced with deferred.reject
Mutant 727 in q.js: deferred.resolve replaced with deferred.notify
Mutant 728 in q.js: _rejected(exception) replaced with _fulfilled(exception)
Mutant 729 in q.js: _rejected(exception) replaced with _rejected("error")
Mutant 730 in q.js: _rejected(exception) replaced with _rejected(new Error("error"))
Mutant 731 in q.js: _rejected replaced with _progressed
Mutant 732 in q.js: exception replaced with exception.message
Mutant 733 in q.js: exception replaced with new Error(exception)
Mutant 734 in q.js: exception replaced with reject(exception)
Mutant 735 in q.js: _progressed replaced with _rejected
Mutant 736 in q.js: _progressed replaced with _fulfilled
Mutant 737 in q.js: value replaced with value + 1
Mutant 738 in q.js: value replaced with value - 1
Mutant 739 in q.js: value replaced with value * 2
Mutant 740 in q.js: Q.onerror replaced with Q.onerror()
Mutant 741 in q.js: Q.onerror replaced with Q.onerror = function () {}
Mutant 742 in q.js: Q.onerror replaced with Q.onerror = function () {
  throw new Error();
}
Mutant 743 in q.js: e replaced with e.message
Mutant 744 in q.js: e replaced with e.stack
Mutant 745 in q.js: e replaced with e.toString()
Mutant 746 in q.js: !threw replaced with threw
Mutant 747 in q.js: !threw replaced with threw && !threw
Mutant 748 in q.js: newValue replaced with null
Mutant 749 in q.js: newValue replaced with undefined
Mutant 750 in q.js: newValue replaced with "hello"
Mutant 751 in q.js: Q replaced with Q.fcall
Mutant 752 in q.js: Q replaced with Q.all
Mutant 753 in q.js: Q replaced with Q.reject
Mutant 754 in q.js: promise replaced with null
Mutant 755 in q.js: promise replaced with undefined
Mutant 756 in q.js: promise replaced with 0
Mutant 757 in q.js: callback replaced with callback(value)
Mutant 758 in q.js: callback replaced with callback(value, value)
Mutant 759 in q.js: callback replaced with callback(value, value, value)
Mutant 760 in q.js: Q replaced with null
Mutant 761 in q.js: Q replaced with undefined
Mutant 762 in q.js: Q replaced with 1
Mutant 763 in q.js: callback replaced with Q.reject(new Error("callback was not a function"))
Mutant 764 in q.js: callback replaced with Q.resolve(callback)
Mutant 765 in q.js: callback replaced with Q.resolve(callback()).then(function (value) {
  return value;
})
Mutant 766 in q.js: callback.fcall replaced with callback.fapply
not replacing callback.fcall with callback.fapply
not replacing callback.fcall with callback.fapply
Mutant 767 in q.js: value replaced with undefined
Mutant 768 in q.js: value replaced with null
Mutant 769 in q.js: value replaced with "foo"
Mutant 770 in q.js: value replaced with null
Mutant 771 in q.js: value replaced with undefined
Mutant 772 in q.js: value replaced with 0
Mutant 773 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed)
Mutant 774 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, progressed, fulfilled)
Mutant 775 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(progressed, fulfilled, rejected)
Mutant 776 in q.js: value replaced with undefined
Mutant 777 in q.js: value replaced with value.then(undefined)
Mutant 778 in q.js: value replaced with value.then(function () {
  throw "error";
})
Mutant 779 in q.js: fulfilled replaced with rejected
Mutant 780 in q.js: fulfilled replaced with deferred
Mutant 781 in q.js: fulfilled replaced with undefined
Mutant 782 in q.js: rejected replaced with resolved
Mutant 783 in q.js: progressed replaced with rejected
Mutant 784 in q.js: progressed replaced with undefined
Mutant 785 in q.js: progressed replaced with null
Mutant 786 in q.js: function () {
  return value;
} replaced with function () {
  return null;
}
Mutant 787 in q.js: function () {
  return value;
} replaced with function () {
  return undefined;
}
Mutant 788 in q.js: function () {
  return value;
} replaced with function () {
  return value + 1;
}
Mutant 789 in q.js: promise replaced with Q.reject(value)
Mutant 790 in q.js: promise replaced with Q.resolve(value)
Mutant 791 in q.js: promise replaced with Q.defer()
Mutant 792 in q.js: value replaced with undefined
Mutant 793 in q.js: value replaced with null
Mutant 794 in q.js: value replaced with 0
Mutant 795 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 796 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error(reason);
}
Mutant 797 in q.js: function () {
  throw reason;
} replaced with function () {
  throw reason.message;
}
Mutant 798 in q.js: promise replaced with null
Mutant 799 in q.js: promise replaced with undefined
Mutant 800 in q.js: promise replaced with 0
Mutant 801 in q.js: reason replaced with null
Mutant 802 in q.js: reason replaced with undefined
Mutant 803 in q.js: reason replaced with "rejected"
Mutant 804 in q.js: isPromise(value) replaced with isPromise(value) && value.inspect().state === "fulfilled"
Mutant 805 in q.js: isPromise(value) replaced with isPromise(value) && value.inspect().state === "rejected"
Mutant 806 in q.js: isPromise(value) replaced with isPromise(value) && value.inspect().state === "pending"
Mutant 807 in q.js: isPromise replaced with !isPromise
Mutant 808 in q.js: isPromise replaced with isPromiseAlike
Mutant 809 in q.js: isPromise replaced with isFulfilled
Mutant 810 in q.js: value replaced with value + 1
Mutant 811 in q.js: value replaced with value - 1
Mutant 812 in q.js: value replaced with value * 2
Mutant 813 in q.js: value.inspect replaced with value.inspect.value
Mutant 814 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 815 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "pending"
Mutant 816 in q.js: inspected.state === "fulfilled" replaced with inspected.state !== "fulfilled"
Mutant 817 in q.js: isObject replaced with isString
Mutant 818 in q.js: isObject replaced with isNumber
Mutant 819 in q.js: isObject replaced with isArray
Mutant 820 in q.js: object replaced with object.valueOf()
Mutant 821 in q.js: object replaced with object.toString()
Mutant 822 in q.js: object replaced with object[Symbol.toPrimitive]('default')
Mutant 823 in q.js: isPromise replaced with isPromiseAlike
Mutant 824 in q.js: isPromise replaced with !isPromise
Mutant 825 in q.js: isPromise replaced with isFulfilled
Mutant 826 in q.js: object replaced with object.then()
Mutant 827 in q.js: object replaced with object.catch()
Mutant 828 in q.js: object replaced with object.finally()
Mutant 829 in q.js: this.inspect replaced with this.inspect.state
Mutant 830 in q.js: this.inspect replaced with this.inspect.fulfilled
Mutant 831 in q.js: this.inspect replaced with this.inspect.rejected
not replacing this.inspect with this.inspect.state
not replacing this.inspect with this.inspect.fulfilled
not replacing this.inspect with this.inspect.rejected
Mutant 832 in q.js: isPromise replaced with isPromiseAlike
Mutant 833 in q.js: isPromise replaced with isFulfilled
Mutant 834 in q.js: isPromise replaced with isRejected
Mutant 835 in q.js: object replaced with !object
Mutant 836 in q.js: object replaced with object.valueOf()
Mutant 837 in q.js: object replaced with object.toString()
Mutant 838 in q.js: this.inspect replaced with this.inspect.state
Mutant 839 in q.js: this.inspect replaced with this.inspect.value
not replacing this.inspect with this.inspect.state
not replacing this.inspect with this.inspect.value
Mutant 840 in q.js: isPromise replaced with isPromiseAlike
Mutant 841 in q.js: isPromise replaced with !isPromise
Mutant 842 in q.js: isPromise replaced with isPending
Mutant 843 in q.js: object replaced with isPromise(object) && object.inspect().state === "rejected"
Mutant 844 in q.js: object replaced with isPromise(object) && object.inspect().state === "pending"
Mutant 845 in q.js: object replaced with isPromise(object) && object.inspect().state === "fulfilled"
Mutant 846 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 847 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections && untrackRejection
Mutant 848 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections == false
Mutant 849 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections != false
Mutant 850 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 851 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 852 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.indexOf(promise) > -1
Mutant 853 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons, reason)
Mutant 854 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, promise)
Mutant 855 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length, 0)
Mutant 856 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 857 in q.js: array_indexOf replaced with array_includes
Mutant 858 in q.js: array_indexOf replaced with array_findIndex
Mutant 859 in q.js: unhandledRejections replaced with unhandledReasons
Mutant 860 in q.js: unhandledRejections replaced with reportedUnhandledRejections
Mutant 861 in q.js: unhandledRejections replaced with rejection
Mutant 862 in q.js: promise replaced with promise.then()
Mutant 863 in q.js: promise replaced with promise.catch()
Mutant 864 in q.js: promise replaced with promise.finally()
Mutant 865 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("rejectionHandled", reason, promise)
Mutant 866 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("rejectionHandled", reason, null)
Mutant 867 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, null)
Mutant 868 in q.js: "unhandledRejection" replaced with "rejectionHandled"
Mutant 869 in q.js: "unhandledRejection" replaced with "rejection"
Mutant 870 in q.js: reason replaced with reason + 1
Mutant 871 in q.js: reason replaced with reason.toString()
Mutant 872 in q.js: reason replaced with reason.message
Mutant 873 in q.js: promise replaced with promise.then(function () {
  throw new Error("Error message");
})
Mutant 874 in q.js: promise replaced with promise.then(function () {
  return Q.reject(reason);
})
Mutant 875 in q.js: promise replaced with promise.then(function () {
  return Q.fulfill(value);
})
Mutant 876 in q.js: promise replaced with promise.then(function () {
  throw new Error("failed");
})
Mutant 877 in q.js: promise replaced with promise.then(function () {
  return null;
})
Mutant 878 in q.js: promise replaced with promise.then(function () {
  return 42;
})
Mutant 879 in q.js: unhandledRejections.push replaced with unhandledRejections.pop
Mutant 880 in q.js: unhandledRejections.push replaced with unhandledRejections.shift
Mutant 881 in q.js: promise replaced with null
Mutant 882 in q.js: promise replaced with undefined
Mutant 883 in q.js: promise replaced with new Promise(() => {})
Mutant 884 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== null
Mutant 885 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== undefined
Mutant 886 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined"
Mutant 887 in q.js: reason.stack replaced with reason.message
Mutant 888 in q.js: reason.stack replaced with reason.name
Mutant 889 in q.js: reason.stack replaced with reason.code
Mutant 890 in q.js: "(no stack) " + reason replaced with reason + " (no stack) "
Mutant 891 in q.js: "(no stack) " + reason replaced with reason + " (no stack)"
Mutant 892 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.toString()
Mutant 893 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 894 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections && unhandledRejections.length > 0
Mutant 895 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.slice())
Mutant 896 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.slice(0, -1))
Mutant 897 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.splice(0, 1))
Mutant 898 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 899 in q.js: array_indexOf replaced with array_includes
Mutant 900 in q.js: array_indexOf replaced with array_findIndex
Mutant 901 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 902 in q.js: unhandledRejections replaced with unhandledRejections.splice(0, unhandledRejections.length)
Mutant 903 in q.js: unhandledRejections replaced with unhandledRejections.pop()
Mutant 904 in q.js: promise replaced with promise.then(function () {})
Mutant 905 in q.js: promise replaced with promise.catch(function () {})
Mutant 906 in q.js: promise replaced with promise.finally(function () {})
Mutant 907 in q.js: at !== -1 replaced with at < 0
Mutant 908 in q.js: at !== -1 replaced with at > 0
Mutant 909 in q.js: at !== -1 replaced with at === 0
Mutant 910 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, unhandledRejections)
Mutant 911 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, unhandledReasons)
Mutant 912 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 913 in q.js: array_indexOf replaced with array_includes
Mutant 914 in q.js: array_indexOf replaced with array_findIndex
Mutant 915 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 916 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.push(promise)
Mutant 917 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.pop()
Mutant 918 in q.js: promise replaced with null
Mutant 919 in q.js: promise replaced with undefined
Mutant 920 in q.js: promise replaced with reportedUnhandledRejections[0]
Mutant 921 in q.js: atReport !== -1 replaced with atReport > -1
Mutant 922 in q.js: atReport !== -1 replaced with atReport !== -1 && reportedUnhandledRejections.indexOf(promise) === -1
Mutant 923 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at + 1], promise)
Mutant 924 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at - 1], promise)
Mutant 925 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", null, promise)
Mutant 926 in q.js: "rejectionHandled" replaced with "unhandledRejection"
Mutant 927 in q.js: "rejectionHandled" replaced with "rejected"
Mutant 928 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 929 in q.js: unhandledReasons[at] replaced with unhandledReasons[at - 1]
Mutant 930 in q.js: unhandledReasons[at] replaced with unhandledReasons[at] + 1
Mutant 931 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport - 1)
Mutant 932 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(reportedUnhandledRejections.length - atReport - 1)
Mutant 933 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport + 1)
Mutant 934 in q.js: atReport replaced with atReport - 1
Mutant 935 in q.js: atReport replaced with atReport + 1
Mutant 936 in q.js: atReport replaced with reportedUnhandledRejections.length - 1
Mutant 937 in q.js: 1 replaced with 2
Mutant 938 in q.js: 1 replaced with 0
Mutant 939 in q.js: 1 replaced with array.length - 1
Mutant 940 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at - 1)
Mutant 941 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at + 1)
Mutant 942 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at = at + 1)
Mutant 943 in q.js: at replaced with at + 1
Mutant 944 in q.js: at replaced with at - 1
Mutant 945 in q.js: at replaced with at + 2
Mutant 946 in q.js: 1 replaced with 2
Mutant 947 in q.js: 1 replaced with 0
Mutant 948 in q.js: 1 replaced with -1
Mutant 949 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at + 1)
Mutant 950 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(unhandledReasons.length - 1)
Mutant 951 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(unhandledReasons.length)
Mutant 952 in q.js: at replaced with at + 1
Mutant 953 in q.js: at replaced with at - 1
Mutant 954 in q.js: at replaced with at.length
Mutant 955 in q.js: 1 replaced with 0
Mutant 956 in q.js: 1 replaced with -1
Mutant 957 in q.js: 1 replaced with null
Mutant 958 in q.js: resetUnhandledRejections replaced with unhandledRejections.length = 0
Mutant 959 in q.js: resetUnhandledRejections replaced with trackUnhandledRejections = false
Mutant 960 in q.js: rejected replaced with rejected && false
Mutant 961 in q.js: rejected replaced with rejected || true
Mutant 962 in q.js: rejected replaced with !rejected
Mutant 963 in q.js: this replaced with null
Mutant 964 in q.js: this replaced with undefined
Mutant 965 in q.js: this replaced with Promise.reject()
Mutant 966 in q.js: rejected replaced with "rejected"
Mutant 967 in q.js: reason replaced with null
Mutant 968 in q.js: reason replaced with undefined
Mutant 969 in q.js: reason replaced with 0
Mutant 970 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, null)
Mutant 971 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, undefined)
Mutant 972 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, null, reason)
Mutant 973 in q.js: trackRejection replaced with untrackRejection
Mutant 974 in q.js: rejection replaced with null
Mutant 975 in q.js: rejection replaced with undefined
Mutant 976 in q.js: rejection replaced with rejection.reason
Mutant 977 in q.js: reason replaced with null
Mutant 978 in q.js: reason replaced with undefined
Mutant 979 in q.js: reason replaced with reason.stack
Mutant 980 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 981 in q.js: name === null || name === void 0 replaced with name === null
Mutant 982 in q.js: name === null || name === void 0 replaced with name === void 0
Mutant 983 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 984 in q.js: value.apply(void 0, args) replaced with value.apply(undefined, args)
Mutant 985 in q.js: value.apply(void 0, args) replaced with value.apply(void 0, null)
Mutant 986 in q.js: value.apply replaced with value.call
Mutant 987 in q.js: value.apply replaced with value.bind
Mutant 988 in q.js: value.apply replaced with value.concat
Mutant 989 in q.js: void 0 replaced with null
Mutant 990 in q.js: void 0 replaced with undefined
Mutant 991 in q.js: void 0 replaced with this
Mutant 992 in q.js: args replaced with args.slice()
Mutant 993 in q.js: args replaced with args.concat()
Mutant 994 in q.js: args replaced with args.map(function (arg) {
  return arg;
})
Mutant 995 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.slice())
Mutant 996 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.concat())
Mutant 997 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, [].concat(args))
Mutant 998 in q.js: value replaced with value + 1
Mutant 999 in q.js: value replaced with value * 2
Mutant 1000 in q.js: value replaced with value - 1
Mutant 1001 in q.js: args replaced with null
Mutant 1002 in q.js: args replaced with []
Mutant 1003 in q.js: args replaced with {}
Mutant 1004 in q.js: value.apply(thisp, args) replaced with value.apply(null)
Mutant 1005 in q.js: value.apply(thisp, args) replaced with value.apply(undefined)
Mutant 1006 in q.js: value.apply(thisp, args) replaced with value.apply({})
Mutant 1007 in q.js: value.apply replaced with value.call
Mutant 1008 in q.js: value.apply replaced with value.bind
Mutant 1009 in q.js: value.apply replaced with value.toString
Mutant 1010 in q.js: thisp replaced with null
Mutant 1011 in q.js: thisp replaced with undefined
Mutant 1012 in q.js: thisp replaced with window
Mutant 1013 in q.js: args replaced with null
Mutant 1014 in q.js: args replaced with []
Mutant 1015 in q.js: object_keys replaced with object_values
Mutant 1016 in q.js: object_keys replaced with Object.values
Mutant 1017 in q.js: object_keys replaced with Object.keys
Mutant 1018 in q.js: value replaced with null
Mutant 1019 in q.js: value replaced with undefined
Mutant 1020 in q.js: value replaced with {}
Mutant 1021 in q.js: promise.then replaced with promise.catch
Mutant 1022 in q.js: promise.then replaced with promise.finally
Mutant 1023 in q.js: promise.then replaced with promise.all
Mutant 1024 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1025 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1026 in q.js: deferred.resolve replaced with Q.reject
Mutant 1027 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1028 in q.js: deferred.reject replaced with deferred.notify
Mutant 1029 in q.js: deferred.reject replaced with deferred.reject(new Error())
Mutant 1030 in q.js: deferred.notify replaced with deferred.reject
Mutant 1031 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1032 in q.js: deferred.notify replaced with deferred.progress
Mutant 1033 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1034 in q.js: deferred.reject replaced with Q.reject
Mutant 1035 in q.js: exception replaced with null
Mutant 1036 in q.js: exception replaced with undefined
Mutant 1037 in q.js: exception replaced with new Error("rejection")
Mutant 1038 in q.js: dispatch(object, op, args) replaced with dispatch(object, args, op)
Mutant 1039 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args.concat(object))
Mutant 1040 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args.slice(1))
Mutant 1041 in q.js: dispatch replaced with "dispatch" + "extra"
Mutant 1042 in q.js: dispatch replaced with "dispatch" * 2
Mutant 1043 in q.js: dispatch replaced with "dispatch" - 1
Mutant 1044 in q.js: object replaced with null
Mutant 1045 in q.js: object replaced with undefined
Mutant 1046 in q.js: object replaced with "foo"
Mutant 1047 in q.js: op replaced with "get"
Mutant 1048 in q.js: op replaced with "set"
Mutant 1049 in q.js: op replaced with "post"
Mutant 1050 in q.js: args replaced with args + 1
Mutant 1051 in q.js: args replaced with args[0]
Mutant 1052 in q.js: args replaced with args.length
Mutant 1053 in q.js: Q replaced with 1 + 1
Mutant 1054 in q.js: Q replaced with null
Mutant 1055 in q.js: Q replaced with undefined
Mutant 1056 in q.js: object replaced with null
Mutant 1057 in q.js: object replaced with undefined
Mutant 1058 in q.js: object replaced with {}
Mutant 1059 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 1060 in q.js: value replaced with null
Mutant 1061 in q.js: value replaced with undefined
Mutant 1062 in q.js: value replaced with []
Mutant 1063 in q.js: fulfilled replaced with rejected
Mutant 1064 in q.js: fulfilled replaced with null
Mutant 1065 in q.js: fulfilled replaced with undefined
Mutant 1066 in q.js: rejected replaced with fulfilled
Mutant 1067 in q.js: rejected replaced with undefined
Mutant 1068 in q.js: rejected replaced with null
Mutant 1069 in q.js: this.all replaced with this.any
Mutant 1070 in q.js: this.all replaced with this.race
Mutant 1071 in q.js: this.all replaced with this.reject
not replacing this.all with this.any
not replacing this.all with this.any
not replacing this.all with this.race
not replacing this.all with this.race
not replacing this.all with this.reject
not replacing this.all with this.reject
Mutant 1072 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 1073 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(undefined)
Mutant 1074 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply({})
Mutant 1075 in q.js: void 0 replaced with null
Mutant 1076 in q.js: void 0 replaced with undefined
Mutant 1077 in q.js: array replaced with array[0]
Mutant 1078 in q.js: array replaced with array.slice(1)
Mutant 1079 in q.js: array replaced with null
Mutant 1080 in q.js: typeof StopIteration === "undefined" replaced with StopIteration === undefined
Mutant 1081 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 1082 in q.js: typeof StopIteration === "undefined" replaced with StopIteration !== undefined
Mutant 1083 in q.js: arg replaced with null
Mutant 1084 in q.js: arg replaced with undefined
Mutant 1085 in q.js: arg replaced with 0
Mutant 1086 in q.js: reject replaced with undefined
Mutant 1087 in q.js: exception replaced with null
Mutant 1088 in q.js: exception replaced with undefined
Mutant 1089 in q.js: result.done replaced with result.fail
Mutant 1090 in q.js: result.done replaced with result.isRejected
Mutant 1091 in q.js: result.done replaced with !result.isFulfilled
Mutant 1092 in q.js: result.value replaced with result.value + 1
Mutant 1093 in q.js: result.value replaced with result.value - 1
Mutant 1094 in q.js: result.value replaced with result.value * 2
Mutant 1095 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, callback)
Mutant 1096 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback, callback)
Mutant 1097 in q.js: when(result.value, callback, errback) replaced with when(result.value, null, callback)
Mutant 1098 in q.js: result.value replaced with result.value + 1
Mutant 1099 in q.js: result.value replaced with result.value * 2
Mutant 1100 in q.js: result.value replaced with result.value - 1
Mutant 1101 in q.js: callback replaced with reject
Mutant 1102 in q.js: callback replaced with resolve
Mutant 1103 in q.js: errback replaced with errback.bind(continuer, "throw")
Mutant 1104 in q.js: errback replaced with null
Mutant 1105 in q.js: errback replaced with () => {
  throw new Error("This is a bug!");
}
Mutant 1106 in q.js: arg replaced with arg + 1
Mutant 1107 in q.js: arg replaced with arg * 2
Mutant 1108 in q.js: arg replaced with arg.toString()
Mutant 1109 in q.js: isStopIteration(exception) replaced with exception.name === "StopIteration"
Mutant 1110 in q.js: isStopIteration(exception) replaced with exception.name === "StopIterationException"
Mutant 1111 in q.js: isStopIteration(exception) replaced with exception.message === "StopIteration"
Mutant 1112 in q.js: isStopIteration replaced with isStopIteration === true
Mutant 1113 in q.js: isStopIteration replaced with isStopIteration !== true
Mutant 1114 in q.js: isStopIteration replaced with typeof isStopIteration === "function"
Mutant 1115 in q.js: exception replaced with exception.value
Mutant 1116 in q.js: exception.value replaced with exception
Mutant 1117 in q.js: exception.value replaced with exception.message
Mutant 1118 in q.js: exception.value replaced with exception.name
Mutant 1119 in q.js: reject replaced with resolve
Mutant 1120 in q.js: exception replaced with exception.message
Mutant 1121 in q.js: exception replaced with "some other error message"
Mutant 1122 in q.js: exception replaced with null
Mutant 1123 in q.js: when(result, callback, errback) replaced with when(result)
Mutant 1124 in q.js: when(result, callback, errback) replaced with when(callback)
Mutant 1125 in q.js: when(result, callback, errback) replaced with when(errback)
Mutant 1126 in q.js: when replaced with reject
Mutant 1127 in q.js: when replaced with resolve
Mutant 1128 in q.js: when replaced with deferred.reject
Mutant 1129 in q.js: result replaced with result + 1
Mutant 1130 in q.js: result replaced with result - 1
Mutant 1131 in q.js: result replaced with result * 2
Mutant 1132 in q.js: callback replaced with errback
Mutant 1133 in q.js: callback replaced with undefined
Mutant 1134 in q.js: callback replaced with () => {}
Mutant 1135 in q.js: errback replaced with reject
Mutant 1136 in q.js: errback replaced with Q.reject
Mutant 1137 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1138 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply([])
Mutant 1139 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply("foo")
Mutant 1140 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 1141 in q.js: makeGenerator.apply replaced with makeGenerator.bind
Mutant 1142 in q.js: this replaced with null
Mutant 1143 in q.js: this replaced with undefined
Mutant 1144 in q.js: this replaced with {}
Mutant 1145 in q.js: arguments replaced with null
Mutant 1146 in q.js: arguments replaced with undefined
Mutant 1147 in q.js: arguments replaced with []
Mutant 1148 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind(undefined))
Mutant 1149 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind(null))
Mutant 1150 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind(continuer))
Mutant 1151 in q.js: continuer.bind replaced with continuer.call
Mutant 1152 in q.js: continuer.bind replaced with continuer.apply
Mutant 1153 in q.js: continuer replaced with continuer.bind(continuer)
Mutant 1154 in q.js: continuer replaced with continuer.bind(null)
Mutant 1155 in q.js: continuer replaced with continuer.bind(function () {})
Mutant 1156 in q.js: "next" replaced with "previous"
Mutant 1157 in q.js: "next" replaced with "return"
Mutant 1158 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "reject"))
Mutant 1159 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "resolve"))
Mutant 1160 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "fulfill"))
Mutant 1161 in q.js: continuer replaced with continuer.bind(continuer, "throw")
Mutant 1162 in q.js: continuer replaced with continuer.bind(null, "throw")
Mutant 1163 in q.js: "throw" replaced with "next"
Mutant 1164 in q.js: "throw" replaced with "return"
Mutant 1165 in q.js: callback replaced with reject
Mutant 1166 in q.js: Q.done replaced with Q.fail
Mutant 1167 in q.js: Q.done replaced with Q.reject
Mutant 1168 in q.js: Q.done replaced with Q.resolve
Mutant 1169 in q.js: Q.async(makeGenerator)() replaced with Q.async(makeGenerator)(1)
Mutant 1170 in q.js: Q.async(makeGenerator)() replaced with Q.async(makeGenerator)("foo")
Mutant 1171 in q.js: Q.async(makeGenerator)() replaced with Q.async(makeGenerator)(Q.when(1))
Mutant 1172 in q.js: makeGenerator replaced with makeGenerator.bind(this)
Mutant 1173 in q.js: makeGenerator replaced with makeGenerator.apply(this)
Mutant 1174 in q.js: makeGenerator replaced with makeGenerator.call(this)
Mutant 1175 in q.js: all replaced with none
Mutant 1176 in q.js: all replaced with len
Mutant 1177 in q.js: all replaced with sum
Mutant 1178 in q.js: arguments replaced with [1, 2, 3]
Mutant 1179 in q.js: arguments replaced with null
Mutant 1180 in q.js: arguments replaced with "hello"
Mutant 1181 in q.js: callback.apply(self, args) replaced with callback.apply(null, args)
Mutant 1182 in q.js: callback.apply(self, args) replaced with callback.apply(undefined, args)
Mutant 1183 in q.js: callback.apply(self, args) replaced with callback.apply({}, args)
Mutant 1184 in q.js: callback.apply replaced with result.apply
Mutant 1185 in q.js: callback.apply replaced with callback.call
Mutant 1186 in q.js: callback.apply replaced with result.resolve
Mutant 1187 in q.js: self replaced with null
Mutant 1188 in q.js: self replaced with undefined
Mutant 1189 in q.js: self replaced with this
Mutant 1190 in q.js: args replaced with args.slice(1)
Mutant 1191 in q.js: args replaced with args.concat([null])
Mutant 1192 in q.js: args replaced with args.map(function (x) {
  return x + 1;
})
Mutant 1193 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args[0])
Mutant 1194 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args[1])
Mutant 1195 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.slice(1))
Mutant 1196 in q.js: Q replaced with Q.reject
Mutant 1197 in q.js: Q replaced with Q.resolve
Mutant 1198 in q.js: Q replaced with Q.all
Mutant 1199 in q.js: object replaced with null
Mutant 1200 in q.js: object replaced with undefined
Mutant 1201 in q.js: object replaced with "foo"
Mutant 1202 in q.js: op replaced with op + 1
Mutant 1203 in q.js: op replaced with op - 1
Mutant 1204 in q.js: op replaced with op * 2
Mutant 1205 in q.js: args replaced with undefined
Mutant 1206 in q.js: args replaced with null
Mutant 1207 in q.js: args replaced with []
Mutant 1208 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1209 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, "foo", args)
Mutant 1210 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, [])
Mutant 1211 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 1212 in q.js: self.promiseDispatch replaced with Q.reject
Mutant 1213 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1214 in q.js: deferred.resolve replaced with null
Mutant 1215 in q.js: deferred.resolve replaced with undefined
Mutant 1216 in q.js: op replaced with op + 1
Mutant 1217 in q.js: op replaced with op - 1
Mutant 1218 in q.js: op replaced with !op
Mutant 1219 in q.js: args replaced with null
Mutant 1220 in q.js: args replaced with undefined
Mutant 1221 in q.js: args replaced with []
Mutant 1222 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("post", [key])
Mutant 1223 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1224 in q.js: Q replaced with null
Mutant 1225 in q.js: Q replaced with 0
Mutant 1226 in q.js: object replaced with Q.reject(new Error("test error"))
Mutant 1227 in q.js: object replaced with Q.resolve(object)
Mutant 1228 in q.js: object replaced with Q.resolve("different value")
Mutant 1229 in q.js: "get" replaced with "set"
Mutant 1230 in q.js: "get" replaced with "post"
Mutant 1231 in q.js: [key] replaced with [key + 1]
Mutant 1232 in q.js: [key] replaced with [key - 1]
Mutant 1233 in q.js: [key] replaced with [key * 2]
Mutant 1234 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key])
Mutant 1235 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key])
Mutant 1236 in q.js: this.dispatch replaced with this.promiseDispatch
Mutant 1237 in q.js: this.dispatch replaced with this.dispatch.resolve
Mutant 1238 in q.js: this.dispatch replaced with this.dispatch.reject
Mutant 1239 in q.js: "get" replaced with "set"
Mutant 1240 in q.js: "get" replaced with "post"
Mutant 1241 in q.js: [key] replaced with [key + 1]
Mutant 1242 in q.js: [key] replaced with [key - 1]
Mutant 1243 in q.js: [key] replaced with [key * 2]
Mutant 1244 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, key])
Mutant 1245 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, key])
Mutant 1246 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, value])
Mutant 1247 in q.js: object replaced with null
Mutant 1248 in q.js: object replaced with undefined
Mutant 1249 in q.js: object replaced with {}
Mutant 1250 in q.js: "set" replaced with "get"
Mutant 1251 in q.js: "set" replaced with "post"
Mutant 1252 in q.js: [key, value] replaced with [value, key]
Mutant 1253 in q.js: [key, value] replaced with [key, value + 1]
Mutant 1254 in q.js: [key, value] replaced with [key, value * 2]
Mutant 1255 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value, key])
Mutant 1256 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, key])
Mutant 1257 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value, value])
Mutant 1258 in q.js: this.dispatch replaced with null
Mutant 1259 in q.js: this.dispatch replaced with undefined
Mutant 1260 in q.js: "set" replaced with "get"
Mutant 1261 in q.js: "set" replaced with "post"
Mutant 1262 in q.js: [key, value] replaced with [key, value, 1]
Mutant 1263 in q.js: [key, value] replaced with [key, undefined]
Mutant 1264 in q.js: [key, value] replaced with [key, null]
Mutant 1265 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1266 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, null])
Mutant 1267 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, ""])
Mutant 1268 in q.js: object replaced with 0
Mutant 1269 in q.js: "delete" replaced with "set"
Mutant 1270 in q.js: "delete" replaced with "get"
Mutant 1271 in q.js: "delete" replaced with "undefined"
Mutant 1272 in q.js: [key] replaced with []
Mutant 1273 in q.js: [key] replaced with null
Mutant 1274 in q.js: [key] replaced with undefined
Mutant 1275 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, value])
Mutant 1276 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("get", [key])
Mutant 1277 in q.js: "delete" replaced with "del"
Mutant 1278 in q.js: "delete" replaced with "remove"
Mutant 1279 in q.js: [key] replaced with [key, key]
Mutant 1280 in q.js: [key] replaced with [key + 1]
Mutant 1281 in q.js: [key] replaced with ["key"]
Mutant 1282 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [args, name])
Mutant 1283 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args[0]])
Mutant 1284 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, [args]])
Mutant 1285 in q.js: object replaced with null
Mutant 1286 in q.js: object replaced with undefined
Mutant 1287 in q.js: object replaced with 1
Mutant 1288 in q.js: "post" replaced with "get"
Mutant 1289 in q.js: "post" replaced with "set"
Mutant 1290 in q.js: [name, args] replaced with [args, name]
Mutant 1291 in q.js: [name, args] replaced with [name, args.reverse()]
Mutant 1292 in q.js: [name, args] replaced with [name, args.concat(["extra_arg"])]
Mutant 1293 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args[0]])
Mutant 1294 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args[1]])
Mutant 1295 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.slice(1)])
Mutant 1296 in q.js: this.dispatch replaced with Promise.prototype.dispatch
Mutant 1297 in q.js: this.dispatch replaced with Promise.prototype.dispatch.apply
Mutant 1298 in q.js: "post" replaced with "put"
Mutant 1299 in q.js: "post" replaced with "apply"
Mutant 1300 in q.js: "post" replaced with "call"
Mutant 1301 in q.js: [name, args] replaced with [name, args, undefined]
Mutant 1302 in q.js: [name, args] replaced with [name, args, null]
Mutant 1303 in q.js: [name, args] replaced with [name, args, 0]
Mutant 1304 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1305 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1306 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 0)])
Mutant 1307 in q.js: Q replaced with Q.reject
Mutant 1308 in q.js: Q replaced with Q.resolve
Mutant 1309 in q.js: Q replaced with Q.when
Mutant 1310 in q.js: object replaced with null
Mutant 1311 in q.js: object replaced with undefined
Mutant 1312 in q.js: object replaced with {}
Mutant 1313 in q.js: "post" replaced with "get"
Mutant 1314 in q.js: "post" replaced with "set"
Mutant 1315 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1316 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 3)]
Mutant 1317 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 4)]
Mutant 1318 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 2))
Mutant 1319 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments[0])
Mutant 1320 in q.js: arguments replaced with null
Mutant 1321 in q.js: arguments replaced with undefined
Mutant 1322 in q.js: arguments replaced with []
Mutant 1323 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1324 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 1, 2)])
Mutant 1325 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2, 1)])
Mutant 1326 in q.js: this.dispatch replaced with deferred.reject
Mutant 1327 in q.js: this.dispatch replaced with deferred.notify
Mutant 1328 in q.js: this.dispatch replaced with undefined
Mutant 1329 in q.js: "post" replaced with "put"
Mutant 1330 in q.js: "post" replaced with "get"
Mutant 1331 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1332 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 0, 1)]
Mutant 1333 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 1, 2)]
Mutant 1334 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1))
Mutant 1335 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1336 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 3))
Mutant 1337 in q.js: arguments replaced with "foo"
Mutant 1338 in q.js: arguments replaced with null
Mutant 1339 in q.js: arguments replaced with undefined
Mutant 1340 in q.js: 1 replaced with null
Mutant 1341 in q.js: 1 replaced with void 0
Mutant 1342 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [void 0, args])
Mutant 1343 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, [args]])
Mutant 1344 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, args.slice(0)])
Mutant 1345 in q.js: object replaced with null
Mutant 1346 in q.js: object replaced with undefined
Mutant 1347 in q.js: object replaced with {}
Mutant 1348 in q.js: "apply" replaced with "call"
Mutant 1349 in q.js: "apply" replaced with "bind"
Mutant 1350 in q.js: "apply" replaced with "concat"
Mutant 1351 in q.js: [void 0, args] replaced with [void 0, args.length]
Mutant 1352 in q.js: [void 0, args] replaced with [void 0, args[0]]
Mutant 1353 in q.js: [void 0, args] replaced with [void 0, args.slice(1)]
Mutant 1354 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [null, args])
Mutant 1355 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [void 0, args.slice()])
Mutant 1356 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [void 0, args.reverse()])
Mutant 1357 in q.js: "apply" replaced with "call"
Mutant 1358 in q.js: "apply" replaced with "bind"
Mutant 1359 in q.js: "apply" replaced with "apply" + "call"
Mutant 1360 in q.js: [void 0, args] replaced with [void 0, args.slice(1)]
Mutant 1361 in q.js: [void 0, args] replaced with [void 0, args.concat(args)]
Mutant 1362 in q.js: [void 0, args] replaced with [void 0, args.reverse()]
Mutant 1363 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [this, array_slice(arguments, 1)])
Mutant 1364 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1365 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)])
Mutant 1366 in q.js: object replaced with null
Mutant 1367 in q.js: object replaced with undefined
Mutant 1368 in q.js: object replaced with {}
Mutant 1369 in q.js: "apply" replaced with "call"
Mutant 1370 in q.js: "apply" replaced with "bind"
Mutant 1371 in q.js: "apply" replaced with "concat"
Mutant 1372 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1373 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 0)]
Mutant 1374 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, -1)]
Mutant 1375 in q.js: array_slice(arguments, 1) replaced with array_slice(args.slice(1))
Mutant 1376 in q.js: arguments replaced with [].slice.call(arguments, 2)
Mutant 1377 in q.js: arguments replaced with arguments.slice(2)
Mutant 1378 in q.js: 1 replaced with arguments.length - 1
Mutant 1379 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1380 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1381 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 3)])
Mutant 1382 in q.js: "apply" replaced with "call"
Mutant 1383 in q.js: "apply" replaced with "bind"
Mutant 1384 in q.js: "apply" replaced with "invoke"
Mutant 1385 in q.js: [void 0, array_slice(arguments)] replaced with [this, array_slice(arguments)]
Mutant 1386 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1387 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1388 in q.js: arguments replaced with null
Mutant 1389 in q.js: arguments replaced with []
Mutant 1390 in q.js: arguments replaced with {}
Mutant 1391 in q.js: Q replaced with null
Mutant 1392 in q.js: object replaced with null
Mutant 1393 in q.js: object replaced with undefined
Mutant 1394 in q.js: object replaced with 0
Mutant 1395 in q.js: array_slice(arguments, 1) replaced with array_slice(args.concat(array_slice(arguments, 2)))
Mutant 1396 in q.js: array_slice(arguments, 1) replaced with array_slice(args.concat(array_slice(arguments, 1, 2)))
Mutant 1397 in q.js: array_slice(arguments, 1) replaced with array_slice(args.concat(array_slice(arguments, 2, 3)))
Mutant 1398 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1399 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1400 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1401 in q.js: 1 replaced with 2
Mutant 1402 in q.js: 1 replaced with 3
Mutant 1403 in q.js: 1 replaced with 4
Mutant 1404 in q.js: args.concat replaced with args.push
Mutant 1405 in q.js: args.concat replaced with args.slice
Mutant 1406 in q.js: args.concat replaced with args.splice
Mutant 1407 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1408 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1409 in q.js: array_slice(arguments) replaced with array_slice(arguments, -1)
Mutant 1410 in q.js: array_slice replaced with array_reverse
Mutant 1411 in q.js: array_slice replaced with array_concat
Mutant 1412 in q.js: array_slice replaced with array_filter
Mutant 1413 in q.js: arguments replaced with void 0
Mutant 1414 in q.js: arguments replaced with null
Mutant 1415 in q.js: arguments replaced with this
Mutant 1416 in q.js: arguments replaced with args.slice(1)
Mutant 1417 in q.js: arguments replaced with args.slice(0, -1)
Mutant 1418 in q.js: arguments replaced with args.reverse()
Mutant 1419 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1420 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1421 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1422 in q.js: arguments replaced with "hello"
Mutant 1423 in q.js: arguments replaced with null
Mutant 1424 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1425 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [1])
Mutant 1426 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("foo", [])
Mutant 1427 in q.js: object replaced with object.keys()
Mutant 1428 in q.js: object replaced with object.values()
Mutant 1429 in q.js: object replaced with object.entries()
Mutant 1430 in q.js: "keys" replaced with "values"
Mutant 1431 in q.js: "keys" replaced with "forEach"
Mutant 1432 in q.js: "keys" replaced with "then"
Mutant 1433 in q.js: [] replaced with [1]
Mutant 1434 in q.js: [] replaced with [undefined]
Mutant 1435 in q.js: [] replaced with [null]
Mutant 1436 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1437 in q.js: this.dispatch("keys", []) replaced with this.dispatch("keys", [1, 2, 3])
Mutant 1438 in q.js: this.dispatch("keys", []) replaced with this.dispatch("keys", ["a", "b", "c"])
Mutant 1439 in q.js: "keys" replaced with "values"
Mutant 1440 in q.js: "keys" replaced with "length"
Mutant 1441 in q.js: "keys" replaced with "toString"
Mutant 1442 in q.js: [] replaced with [1]
Mutant 1443 in q.js: [] replaced with null
Mutant 1444 in q.js: [] replaced with undefined
Mutant 1445 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "rejected"
Mutant 1446 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with !isPromise(promise)
Mutant 1447 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "pending"
Mutant 1448 in q.js: isPromise replaced with promise.state === "rejected"
Mutant 1449 in q.js: isPromise replaced with promise.value
Mutant 1450 in q.js: promise replaced with promise.then(function () {})
Mutant 1451 in q.js: promise replaced with promise.catch(function () {})
Mutant 1452 in q.js: promise replaced with promise.finally(function () {})
Mutant 1453 in q.js: promise.inspect replaced with promise.inspect.value
Mutant 1454 in q.js: promise.inspect replaced with promise.inspect.state
Mutant 1455 in q.js: promise.inspect replaced with promise.inspect.isFulfilled
Mutant 1456 in q.js: --pendingCount === 0 replaced with pendingCount > 0
Mutant 1457 in q.js: --pendingCount === 0 replaced with pendingCount <= 0
Mutant 1458 in q.js: --pendingCount === 0 replaced with pendingCount !== 0
Mutant 1459 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1460 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1461 in q.js: deferred.resolve replaced with undefined
Mutant 1462 in q.js: promises replaced with promises.slice(1)
Mutant 1463 in q.js: promises replaced with promises.concat([Q.reject("error")])
Mutant 1464 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: index
}
Mutant 1465 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: promises[index]
}
Mutant 1466 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: promises[index].value
}
Mutant 1467 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1468 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1469 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1470 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1471 in q.js: deferred.resolve replaced with Q.reject
Mutant 1472 in q.js: deferred.resolve replaced with Promise.reject
Mutant 1473 in q.js: promises replaced with promises.slice(1)
Mutant 1474 in q.js: promises replaced with promises.filter(function (promise) {
  return promise.state === "fulfilled";
})
Mutant 1475 in q.js: promises replaced with promises.map(function (promise) {
  return promise.value;
})
Mutant 1476 in q.js: all replaced with any
Mutant 1477 in q.js: all replaced with allResolved
Mutant 1478 in q.js: all replaced with allSettled
Mutant 1479 in q.js: this replaced with null
Mutant 1480 in q.js: this replaced with undefined
Mutant 1481 in q.js: this replaced with []
Mutant 1482 in q.js: promises.length === 0 replaced with promises.length > 0
Mutant 1483 in q.js: promises.length === 0 replaced with promises.length === 1
Mutant 1484 in q.js: Q.resolve replaced with Q.reject
Mutant 1485 in q.js: Q.resolve replaced with Q.defer
Mutant 1486 in q.js: Q.resolve replaced with Q.when
Mutant 1487 in q.js: Q.defer replaced with Q.defer.reject
Mutant 1488 in q.js: Q.defer replaced with Q.defer.resolve
Mutant 1489 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected, onProgress))
Mutant 1490 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected).catch(onProgress))
Mutant 1491 in q.js: promise replaced with promise.then(onFulfilled, onRejected)
Mutant 1492 in q.js: promise replaced with promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected)
Mutant 1493 in q.js: promise replaced with promise.then(onFulfilled, onRejected).then(onRejected, onFulfilled)
Mutant 1494 in q.js: onFulfilled replaced with onRejected
Mutant 1495 in q.js: onFulfilled replaced with onProgress
Mutant 1496 in q.js: onFulfilled replaced with noop
Mutant 1497 in q.js: onRejected replaced with onFulfilled
Mutant 1498 in q.js: onRejected replaced with onProgress
Mutant 1499 in q.js: onRejected replaced with onResolve
Mutant 1500 in q.js: onProgress replaced with onFulfilled
Mutant 1501 in q.js: onProgress replaced with onRejected
Mutant 1502 in q.js: onProgress replaced with onNotify
Mutant 1503 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1504 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1505 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 1506 in q.js: result replaced with null
Mutant 1507 in q.js: result replaced with undefined
Mutant 1508 in q.js: result replaced with "<PLACEHOLDER>"
Mutant 1509 in q.js: pendingCount === 0 replaced with promise.isRejected()
Mutant 1510 in q.js: pendingCount === 0 replaced with promise.isPending()
Mutant 1511 in q.js: pendingCount === 0 replaced with promise.isFulfilled()
Mutant 1512 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1513 in q.js: deferred.reject replaced with deferred.notify
Mutant 1514 in q.js: deferred.reject replaced with deferred.inspect
Mutant 1515 in q.js: rejection replaced with deferred
Mutant 1516 in q.js: rejection replaced with rejected
Mutant 1517 in q.js: rejection replaced with deferred.reject
Mutant 1518 in q.js: any replaced with all
Mutant 1519 in q.js: any replaced with none
Mutant 1520 in q.js: any replaced with some
Mutant 1521 in q.js: this replaced with this.reject
Mutant 1522 in q.js: this replaced with this.resolve
Mutant 1523 in q.js: this replaced with null
Mutant 1524 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allRejected)
Mutant 1525 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(anyResolved)
Mutant 1526 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(firstResolved)
Mutant 1527 in q.js: allResolved replaced with none
Mutant 1528 in q.js: allResolved replaced with any
Mutant 1529 in q.js: allResolved replaced with some
Mutant 1530 in q.js: "allResolved" replaced with "allRejected"
Mutant 1531 in q.js: "allResolved" replaced with "anyResolved"
Mutant 1532 in q.js: "allResolved" replaced with "allFulfilled"
Mutant 1533 in q.js: "allSettled" replaced with "allResolved"
Mutant 1534 in q.js: "allSettled" replaced with "any"
Mutant 1535 in q.js: "allSettled" replaced with "all"
Mutant 1536 in q.js: array_map(promises, Q) replaced with array_map(promises, 0)
Mutant 1537 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.reject)
Mutant 1538 in q.js: array_map(promises, Q) replaced with array_map(promises, null)
Mutant 1539 in q.js: array_map replaced with array_filter
Mutant 1540 in q.js: array_map replaced with array_reduce
Mutant 1541 in q.js: array_map replaced with array_fill
Mutant 1542 in q.js: promises replaced with promises.reverse()
Mutant 1543 in q.js: promises replaced with promises.slice(1)
Mutant 1544 in q.js: promises replaced with promises.concat(promises)
Mutant 1545 in q.js: Q replaced with Q.reject
Mutant 1546 in q.js: Q replaced with Q.resolve
Mutant 1547 in q.js: Q replaced with Q.defer
Mutant 1548 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop))
Mutant 1549 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop))
Mutant 1550 in q.js: promise replaced with promise.then(function () {})
Mutant 1551 in q.js: promise replaced with promise.then(function () {
  return null;
})
Mutant 1552 in q.js: promise replaced with promise.then(function () {
  throw new Error();
})
Mutant 1553 in q.js: noop replaced with function noop() {}
Mutant 1554 in q.js: noop replaced with function () {}
Mutant 1555 in q.js: noop replaced with function () {
  return undefined;
}
Mutant 1556 in q.js: allResolved replaced with allRejected
Mutant 1557 in q.js: allResolved replaced with allFulfilled
Mutant 1558 in q.js: allResolved replaced with allSettled
Mutant 1559 in q.js: this replaced with null
Mutant 1560 in q.js: this replaced with undefined
Mutant 1561 in q.js: this replaced with []
Mutant 1562 in q.js: promises replaced with promises.reverse()
Mutant 1563 in q.js: promises replaced with promises.slice(1)
Mutant 1564 in q.js: promises replaced with promises.concat(Q.reject())
Mutant 1565 in q.js: Q replaced with null
Mutant 1566 in q.js: Q replaced with undefined
Mutant 1567 in q.js: promise.then(regardless, regardless) replaced with promise.then(promise.inspect())
Mutant 1568 in q.js: promise.then(regardless, regardless) replaced with promise.then(promise.then(promise.inspect))
Mutant 1569 in q.js: promise.then replaced with promise.catch
Mutant 1570 in q.js: promise.then replaced with promise.all
Mutant 1571 in q.js: promise.then replaced with promise.race
Mutant 1572 in q.js: regardless replaced with promise.inspect()
Mutant 1573 in q.js: regardless replaced with Q.reject(promise)
Mutant 1574 in q.js: regardless replaced with Q.resolve(promise)
Mutant 1575 in q.js: regardless replaced with function () {
  throw new Error("test error");
}
Mutant 1576 in q.js: regardless replaced with function () {
  return "test value";
}
Mutant 1577 in q.js: regardless replaced with function () {
  return Q.reject("test rejection");
}
Mutant 1578 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void 0, resolved)
Mutant 1579 in q.js: Q replaced with Q.allSettled
Mutant 1580 in q.js: Q replaced with Q.reject
Mutant 1581 in q.js: object replaced with null
Mutant 1582 in q.js: object replaced with undefined
Mutant 1583 in q.js: object replaced with "Error message"
Mutant 1584 in q.js: void 0 replaced with null
Mutant 1585 in q.js: void 0 replaced with undefined
Mutant 1586 in q.js: rejected replaced with resolved
Mutant 1587 in q.js: rejected replaced with fulfilled
Mutant 1588 in q.js: void 0 replaced with 0
Mutant 1589 in q.js: void 0 replaced with null
Mutant 1590 in q.js: rejected replaced with resolved
Mutant 1591 in q.js: rejected replaced with Q.reject(new Error("rejected"))
Mutant 1592 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(null, null, progressed)
Mutant 1593 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(undefined, undefined, progressed)
Mutant 1594 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(void 0, void 0, progressed.bind(this))
Mutant 1595 in q.js: object replaced with []
Mutant 1596 in q.js: void 0 replaced with null
Mutant 1597 in q.js: void 0 replaced with undefined
Mutant 1598 in q.js: void 0 replaced with function () {}
Mutant 1599 in q.js: void 0 replaced with null
Mutant 1600 in q.js: void 0 replaced with undefined
Mutant 1601 in q.js: void 0 replaced with 0
Mutant 1602 in q.js: progressed replaced with promise.then(void 0, progressed)
Mutant 1603 in q.js: progressed replaced with promise.then(progressed, void 0)
Mutant 1604 in q.js: progressed replaced with promise.then(void 0, function () {})
Mutant 1605 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1606 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, progressed)
Mutant 1607 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(void 0, null, progressed)
Mutant 1608 in q.js: this.then replaced with this["then"]
Mutant 1609 in q.js: void 0 replaced with null
Mutant 1610 in q.js: void 0 replaced with undefined
Mutant 1611 in q.js: void 0 replaced with () => {}
Mutant 1612 in q.js: void 0 replaced with null
Mutant 1613 in q.js: void 0 replaced with undefined
Mutant 1614 in q.js: void 0 replaced with () => {}
Mutant 1615 in q.js: object replaced with null
Mutant 1616 in q.js: object replaced with undefined
Mutant 1617 in q.js: object replaced with new Error("Mutated code")
Mutant 1618 in q.js: callback replaced with callback.fcall().then(function () {
  throw reason;
})
Mutant 1619 in q.js: callback replaced with callback.fcall().then(function () {
  return Q.reject(reason);
})
Mutant 1620 in q.js: callback replaced with callback.fcall().then(function () {
  return Q.resolve(reason);
})
Mutant 1621 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.apply === "function"
Mutant 1622 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && callback.apply !== "function"
Mutant 1623 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.apply !== "function"
Mutant 1624 in q.js: callback replaced with Q.fcall()
Mutant 1625 in q.js: callback replaced with Q.reject()
Mutant 1626 in q.js: callback replaced with Q.defer()
Mutant 1627 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1628 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled)
Mutant 1629 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, progress)
Mutant 1630 in q.js: Q replaced with Q.reject
Mutant 1631 in q.js: Q replaced with Q.resolve
Mutant 1632 in q.js: Q replaced with Q.defer
Mutant 1633 in q.js: object replaced with null
Mutant 1634 in q.js: object replaced with undefined
Mutant 1635 in q.js: object replaced with this
Mutant 1636 in q.js: fulfilled replaced with rejected
Mutant 1637 in q.js: fulfilled replaced with progressed
Mutant 1638 in q.js: fulfilled replaced with null
Mutant 1639 in q.js: rejected replaced with fulfilled
Mutant 1640 in q.js: rejected replaced with progress
Mutant 1641 in q.js: progress replaced with null
Mutant 1642 in q.js: progress replaced with undefined
Mutant 1643 in q.js: progress replaced with 0
Mutant 1644 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.then())
Mutant 1645 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, Q.delay(promise, 1000))
Mutant 1646 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, Q.timeout(promise, 1000))
Mutant 1647 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, "progress")
Mutant 1648 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, null)
Mutant 1649 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, undefined)
Mutant 1650 in q.js: fulfilled replaced with rejected
Mutant 1651 in q.js: fulfilled replaced with null
Mutant 1652 in q.js: fulfilled replaced with undefined
Mutant 1653 in q.js: rejected replaced with resolved
Mutant 1654 in q.js: rejected replaced with deferred.reject
Mutant 1655 in q.js: progress replaced with rejected
Mutant 1656 in q.js: progress replaced with fulfilled
Mutant 1657 in q.js: progress replaced with void 0
Mutant 1658 in q.js: onUnhandledError replaced with onUnhandledError.bind(null)
Mutant 1659 in q.js: onUnhandledError replaced with onUnhandledError.call(null)
Mutant 1660 in q.js: onUnhandledError replaced with onUnhandledError.apply(null)
Mutant 1661 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError(new Error("Something went wrong")))
Mutant 1662 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(Q.reject(new Error("Something went wrong")))
Mutant 1663 in q.js: void 0 replaced with null
Mutant 1664 in q.js: void 0 replaced with undefined
Mutant 1665 in q.js: void 0 replaced with false
Mutant 1666 in q.js: onUnhandledError replaced with onUnhandledError(null)
Mutant 1667 in q.js: onUnhandledError replaced with onUnhandledError(new Error())
Mutant 1668 in q.js: onUnhandledError replaced with onUnhandledError(promise)
Mutant 1669 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, null)
Mutant 1670 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(null, ms)
Mutant 1671 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(0, ms)
Mutant 1672 in q.js: Q replaced with Q.reject
Mutant 1673 in q.js: object replaced with undefined
Mutant 1674 in q.js: object replaced with false
Mutant 1675 in q.js: ms replaced with 0
Mutant 1676 in q.js: ms replaced with -1
Mutant 1677 in q.js: ms replaced with NaN
Mutant 1678 in q.js: error replaced with null
Mutant 1679 in q.js: error replaced with undefined
Mutant 1680 in q.js: error replaced with new Error("Different error")
Mutant 1681 in q.js: defer replaced with deferred
Mutant 1682 in q.js: !error || "string" === typeof error replaced with error == "string"
Mutant 1683 in q.js: !error || "string" === typeof error replaced with error != "string"
Mutant 1684 in q.js: !error || "string" === typeof error replaced with typeof error !== "string"
Mutant 1685 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1686 in q.js: deferred.reject replaced with deferred.notify
Mutant 1687 in q.js: deferred.reject replaced with null
Mutant 1688 in q.js: clearTimeout replaced with clearInterval
Mutant 1689 in q.js: clearTimeout replaced with setInterval
Mutant 1690 in q.js: timeoutId replaced with null
Mutant 1691 in q.js: timeoutId replaced with undefined
Mutant 1692 in q.js: timeoutId replaced with 0
Mutant 1693 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1694 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1695 in q.js: deferred.resolve replaced with undefined
Mutant 1696 in q.js: value replaced with undefined
Mutant 1697 in q.js: value replaced with null
Mutant 1698 in q.js: value replaced with new Error("Q can't apply finally callback")
Mutant 1699 in q.js: clearTimeout replaced with clearInterval
Mutant 1700 in q.js: clearTimeout replaced with null
Mutant 1701 in q.js: timeoutId replaced with null
Mutant 1702 in q.js: timeoutId replaced with undefined
Mutant 1703 in q.js: timeoutId replaced with 0
Mutant 1704 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1705 in q.js: deferred.reject replaced with deferred.notify
Mutant 1706 in q.js: exception replaced with reason
Mutant 1707 in q.js: exception replaced with error
Mutant 1708 in q.js: exception replaced with null
Mutant 1709 in q.js: timeout === void 0 replaced with timeout !== void 0
Mutant 1710 in q.js: timeout === void 0 replaced with timeout !== null
Mutant 1711 in q.js: timeout === void 0 replaced with timeout !== 0
Mutant 1712 in q.js: object replaced with undefined
Mutant 1713 in q.js: object replaced with null
Mutant 1714 in q.js: object replaced with 1
Mutant 1715 in q.js: timeout replaced with 0
Mutant 1716 in q.js: timeout replaced with null
Mutant 1717 in q.js: timeout replaced with undefined
Mutant 1718 in q.js: defer replaced with deferred.reject
Mutant 1719 in q.js: defer replaced with deferred.resolve
Mutant 1720 in q.js: defer replaced with deferred.notify
Mutant 1721 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1722 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1723 in q.js: deferred.resolve replaced with null
Mutant 1724 in q.js: value replaced with null
Mutant 1725 in q.js: value replaced with undefined
Mutant 1726 in q.js: value replaced with 0
Mutant 1727 in q.js: callback replaced with null
Mutant 1728 in q.js: callback replaced with undefined
Mutant 1729 in q.js: callback replaced with function () {}
Mutant 1730 in q.js: args replaced with null
Mutant 1731 in q.js: args replaced with undefined
Mutant 1732 in q.js: args replaced with []
Mutant 1733 in q.js: array_slice replaced with array_slice.length
Mutant 1734 in q.js: args replaced with null
Mutant 1735 in q.js: args replaced with undefined
Mutant 1736 in q.js: args replaced with []
Mutant 1737 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1738 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1739 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1740 in q.js: deferred.makeNodeResolver() replaced with function (err, value) {
  if (err) {
    deferred.reject(err);
  } else {
    deferred.resolve(value);
  }
}
Mutant 1741 in q.js: deferred.makeNodeResolver replaced with deferred.notify
Mutant 1742 in q.js: this.fapply replaced with deferred.fapply
Mutant 1743 in q.js: this.fapply replaced with Q.fapply
not replacing this.fapply with deferred.fapply
not replacing this.fapply with deferred.fapply
not replacing this.fapply with Q.fapply
not replacing this.fapply with Q.fapply
Mutant 1744 in q.js: nodeArgs replaced with null
Mutant 1745 in q.js: nodeArgs replaced with undefined
Mutant 1746 in q.js: nodeArgs replaced with []
Mutant 1747 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1748 in q.js: deferred.reject replaced with deferred.reject("Something went wrong")
Mutant 1749 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1750 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1751 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 1752 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1753 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1754 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1755 in q.js: 1 replaced with 0
Mutant 1756 in q.js: 1 replaced with 2
Mutant 1757 in q.js: 1 replaced with "hello"
Mutant 1758 in q.js: Q replaced with null
Mutant 1759 in q.js: Q replaced with undefined
Mutant 1760 in q.js: Q replaced with 0
Mutant 1761 in q.js: callback replaced with null
Mutant 1762 in q.js: callback replaced with undefined
Mutant 1763 in q.js: callback replaced with Promise.reject()
Mutant 1764 in q.js: args replaced with null
Mutant 1765 in q.js: args replaced with undefined
Mutant 1766 in q.js: args replaced with []
Mutant 1767 in q.js: arguments replaced with null
Mutant 1768 in q.js: arguments replaced with 0
Mutant 1769 in q.js: arguments replaced with undefined
Mutant 1770 in q.js: defer replaced with undefined
Mutant 1771 in q.js: defer replaced with null
Mutant 1772 in q.js: defer replaced with {}
Mutant 1773 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1774 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1775 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1776 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1777 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1778 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err) {
  throw err;
})
Mutant 1779 in q.js: nodeArgs replaced with null
Mutant 1780 in q.js: nodeArgs replaced with undefined
Mutant 1781 in q.js: nodeArgs replaced with []
Mutant 1782 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1783 in q.js: deferred.reject replaced with deferred.notify
Mutant 1784 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1785 in q.js: callback === undefined replaced with callback !== undefined
Mutant 1786 in q.js: callback === undefined replaced with callback === null
Mutant 1787 in q.js: callback === undefined replaced with typeof callback === "function"
Mutant 1788 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1789 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1790 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, -1)
Mutant 1791 in q.js: array_slice replaced with array_slice.length
Mutant 1792 in q.js: arguments replaced with null
Mutant 1793 in q.js: arguments replaced with undefined
Mutant 1794 in q.js: arguments replaced with []
Mutant 1795 in q.js: 1 replaced with 0
Mutant 1796 in q.js: 1 replaced with 2
Mutant 1797 in q.js: 1 replaced with void 0
Mutant 1798 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1799 in q.js: array_slice(arguments) replaced with array_slice(arguments, -1)
Mutant 1800 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 2)
Mutant 1801 in q.js: array_slice replaced with null
Mutant 1802 in q.js: array_slice replaced with undefined
Mutant 1803 in q.js: array_slice replaced with 123
Mutant 1804 in q.js: arguments replaced with null
Mutant 1805 in q.js: arguments replaced with []
Mutant 1806 in q.js: arguments replaced with {
  length: 0
}
Mutant 1807 in q.js: defer replaced with defer.promise
Mutant 1808 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1809 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1810 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1811 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1812 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(undefined)
Mutant 1813 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(42)
Mutant 1814 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeRejector
Mutant 1815 in q.js: Q replaced with deferred
Mutant 1816 in q.js: Q replaced with deferred.promise
Mutant 1817 in q.js: Q replaced with deferred.resolve
Mutant 1818 in q.js: callback replaced with deferred.promise
Mutant 1819 in q.js: callback replaced with Q.resolve(callback)
Mutant 1820 in q.js: callback replaced with Q.reject(callback)
Mutant 1821 in q.js: nodeArgs replaced with nodeArgs.pop()
Mutant 1822 in q.js: nodeArgs replaced with nodeArgs.shift()
Mutant 1823 in q.js: nodeArgs replaced with nodeArgs.reverse()
Mutant 1824 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1825 in q.js: deferred.reject replaced with deferred.notify
Mutant 1826 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1827 in q.js: array_slice replaced with null
Mutant 1828 in q.js: array_slice replaced with undefined
Mutant 1829 in q.js: array_slice replaced with {}
Mutant 1830 in q.js: arguments replaced with 1
Mutant 1831 in q.js: arguments replaced with "hello"
Mutant 1832 in q.js: arguments replaced with [1, 2, 3]
Mutant 1833 in q.js: args.unshift replaced with args.push
Mutant 1834 in q.js: args.unshift replaced with args.concat
Mutant 1835 in q.js: args.unshift replaced with args.slice
Mutant 1836 in q.js: this replaced with function (err, value) {
  if (err) {
    nodeback(err);
  } else {
    nodeback(null, value);
  }
}
Mutant 1837 in q.js: this replaced with function (err, value) {
  if (err) {
    nodeback(err);
  } else {
    nodeback(value);
  }
}
Mutant 1838 in q.js: Q.denodeify.apply replaced with Q.nodeify.apply
Mutant 1839 in q.js: Q.denodeify.apply replaced with Q.nbind.apply
Mutant 1840 in q.js: Q.denodeify.apply replaced with Q.nfbind.apply
Mutant 1841 in q.js: void 0 replaced with this
Mutant 1842 in q.js: void 0 replaced with null
Mutant 1843 in q.js: void 0 replaced with NaN
Mutant 1844 in q.js: args replaced with args.concat(deferred.makeNodeResolver())
Mutant 1845 in q.js: args replaced with args.slice(1)
Mutant 1846 in q.js: args replaced with args.reverse()
Mutant 1847 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1848 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1849 in q.js: array_slice(arguments, 2) replaced with array_slice(args, 2)
Mutant 1850 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1851 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1852 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1853 in q.js: 2 replaced with 1
Mutant 1854 in q.js: 2 replaced with 3
Mutant 1855 in q.js: 2 replaced with 4
Mutant 1856 in q.js: baseArgs.concat replaced with baseArgs + args
Mutant 1857 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1858 in q.js: array_slice(arguments) replaced with array_slice(arguments).concat(1)
Mutant 1859 in q.js: array_slice(arguments) replaced with array_slice(arguments).reverse()
Mutant 1860 in q.js: arguments replaced with null
Mutant 1861 in q.js: arguments replaced with undefined
Mutant 1862 in q.js: arguments replaced with []
Mutant 1863 in q.js: defer replaced with defer.promise
Mutant 1864 in q.js: defer replaced with undefined
Mutant 1865 in q.js: defer replaced with null
Mutant 1866 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1867 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1868 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1869 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1870 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(undefined)
Mutant 1871 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments + 1)
Mutant 1872 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments.length + 1)
Mutant 1873 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments[0])
Mutant 1874 in q.js: callback.apply replaced with callback.call
Mutant 1875 in q.js: callback.apply replaced with callback.bind
Mutant 1876 in q.js: thisp replaced with undefined
Mutant 1877 in q.js: thisp replaced with null
Mutant 1878 in q.js: thisp replaced with {}
Mutant 1879 in q.js: arguments replaced with null
Mutant 1880 in q.js: arguments replaced with undefined
Mutant 1881 in q.js: arguments replaced with []
Mutant 1882 in q.js: bound replaced with undefined
Mutant 1883 in q.js: bound replaced with null
Mutant 1884 in q.js: bound replaced with {}
Mutant 1885 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1886 in q.js: nodeArgs replaced with nodeArgs.concat(deferred.makeNodeResolver())
Mutant 1887 in q.js: nodeArgs replaced with nodeArgs.slice(0, nodeArgs.length - 1)
Mutant 1888 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1889 in q.js: deferred.reject replaced with undefined
Mutant 1890 in q.js: deferred.reject replaced with null
Mutant 1891 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1892 in q.js: array_slice(arguments, 0) replaced with array_slice(args.length)
Mutant 1893 in q.js: array_slice(arguments, 0) replaced with array_slice(args[0])
Mutant 1894 in q.js: arguments replaced with null
Mutant 1895 in q.js: arguments replaced with undefined
Mutant 1896 in q.js: arguments replaced with 0
Mutant 1897 in q.js: 0 replaced with 1
Mutant 1898 in q.js: 0 replaced with null
Mutant 1899 in q.js: 0 replaced with {}
Mutant 1900 in q.js: args.unshift replaced with args.push
Mutant 1901 in q.js: args.unshift replaced with args.shift
Mutant 1902 in q.js: this replaced with null
Mutant 1903 in q.js: this replaced with undefined
Mutant 1904 in q.js: this replaced with 0
Mutant 1905 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null)
Mutant 1906 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this)
Mutant 1907 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(0)
Mutant 1908 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1909 in q.js: Q.nbind.apply replaced with Q.nbind.bind
Mutant 1910 in q.js: Q.nbind.apply replaced with Q.nbind.then
Mutant 1911 in q.js: void 0 replaced with null
Mutant 1912 in q.js: void 0 replaced with undefined
Mutant 1913 in q.js: void 0 replaced with this
Mutant 1914 in q.js: args replaced with args[0]
Mutant 1915 in q.js: args replaced with args.length
Mutant 1916 in q.js: args replaced with args.slice(1)
Mutant 1917 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(args, name)
Mutant 1918 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name + args)
Mutant 1919 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(args[0])
Mutant 1920 in q.js: object replaced with null
Mutant 1921 in q.js: object replaced with undefined
Mutant 1922 in q.js: object replaced with {}
Mutant 1923 in q.js: name replaced with "newName"
Mutant 1924 in q.js: name replaced with null
Mutant 1925 in q.js: name replaced with undefined
Mutant 1926 in q.js: args replaced with null
Mutant 1927 in q.js: args replaced with undefined
Mutant 1928 in q.js: args replaced with 0
Mutant 1929 in q.js: args || [] replaced with args = []
Mutant 1930 in q.js: args || [] replaced with args = null
Mutant 1931 in q.js: args || [] replaced with args = undefined
Mutant 1932 in q.js: defer replaced with deferred
Mutant 1933 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1934 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1935 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1936 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().bind(null)
Mutant 1937 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().call(null)
Mutant 1938 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().apply(null)
Mutant 1939 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("put", [name, nodeArgs])
Mutant 1940 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, 42])
Mutant 1941 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs.concat(42)])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("put", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, 42])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs.concat(42)])
Mutant 1942 in q.js: this.dispatch replaced with this.post
Mutant 1943 in q.js: this.dispatch replaced with this.get
Mutant 1944 in q.js: this.dispatch replaced with this.put
not replacing this.dispatch with this.post
not replacing this.dispatch with this.post
not replacing this.dispatch with this.get
not replacing this.dispatch with this.get
not replacing this.dispatch with this.put
not replacing this.dispatch with this.put
Mutant 1945 in q.js: "post" replaced with "send"
Mutant 1946 in q.js: "post" replaced with "get"
Mutant 1947 in q.js: "post" replaced with "put"
Mutant 1948 in q.js: [name, nodeArgs] replaced with [name, args]
Mutant 1949 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.concat(args)]
Mutant 1950 in q.js: [name, nodeArgs] replaced with [name, args.concat(nodeArgs)]
Mutant 1951 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1952 in q.js: deferred.reject replaced with undefined
Mutant 1953 in q.js: deferred.reject replaced with deferred.reject("ERROR")
Mutant 1954 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1955 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1956 in q.js: array_slice(arguments, 2) replaced with array_slice([])
Mutant 1957 in q.js: arguments replaced with null
Mutant 1958 in q.js: arguments replaced with undefined
Mutant 1959 in q.js: arguments replaced with "string"
Mutant 1960 in q.js: 2 replaced with 1
Mutant 1961 in q.js: 2 replaced with 3
Mutant 1962 in q.js: 2 replaced with 4
Mutant 1963 in q.js: defer replaced with deferred
Mutant 1964 in q.js: defer replaced with deferred.promise
Mutant 1965 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1966 in q.js: nodeArgs.push replaced with nodeArgs.concat
Mutant 1967 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1968 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(true)
Mutant 1969 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(false)
Mutant 1970 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1971 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1972 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, 1])
Mutant 1973 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, undefined])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, 1])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, undefined])
Mutant 1974 in q.js: object replaced with null
Mutant 1975 in q.js: object replaced with this
Mutant 1976 in q.js: "post" replaced with "get"
Mutant 1977 in q.js: "post" replaced with "push"
Mutant 1978 in q.js: "post" replaced with "pop"
Mutant 1979 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1980 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(1)]
Mutant 1981 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.concat([42])]
Mutant 1982 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1983 in q.js: deferred.reject replaced with null
Mutant 1984 in q.js: deferred.reject replaced with undefined
Mutant 1985 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1986 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, "test")
Mutant 1987 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, null)
Mutant 1988 in q.js: array_slice replaced with array_slice.length
Mutant 1989 in q.js: arguments replaced with null
Mutant 1990 in q.js: arguments replaced with undefined
Mutant 1991 in q.js: 1 replaced with 0
Mutant 1992 in q.js: 1 replaced with 2
Mutant 1993 in q.js: 1 replaced with -1
Mutant 1994 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1995 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1996 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1997 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1998 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1999 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 2000 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("put", [name, nodeArgs])
Mutant 2001 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, "foo"])
Mutant 2002 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs.reverse()])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("put", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, "foo"])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs.reverse()])
Mutant 2003 in q.js: "post" replaced with "get"
Mutant 2004 in q.js: "post" replaced with "send"
Mutant 2005 in q.js: "post" replaced with "apply"
Mutant 2006 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, deferred.makeNodeResolver()]
Mutant 2007 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, deferred.reject]
Mutant 2008 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, deferred.resolve]
Mutant 2009 in q.js: deferred.reject replaced with null
Mutant 2010 in q.js: deferred.reject replaced with undefined
Mutant 2011 in q.js: Q replaced with null
Mutant 2012 in q.js: Q replaced with undefined
Mutant 2013 in q.js: object replaced with object.then()
Mutant 2014 in q.js: object replaced with object.catch()
Mutant 2015 in q.js: object replaced with object.finally()
Mutant 2016 in q.js: nodeback replaced with !nodeback
Mutant 2017 in q.js: nodeback replaced with nodeback + 1
Mutant 2018 in q.js: nodeback replaced with nodeback.call(null)
Mutant 2019 in q.js: nodeback replaced with !nodeback
Mutant 2020 in q.js: nodeback replaced with nodeback === null
Mutant 2021 in q.js: nodeback replaced with nodeback !== null
Mutant 2022 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 2023 in q.js: nodeback(null, value) replaced with nodeback(1, value)
Mutant 2024 in q.js: nodeback(null, value) replaced with nodeback("hello", value)
Mutant 2025 in q.js: nodeback replaced with null
Mutant 2026 in q.js: nodeback replaced with undefined
Mutant 2027 in q.js: null replaced with undefined
Mutant 2028 in q.js: null replaced with 0
Mutant 2029 in q.js: null replaced with {}
Mutant 2030 in q.js: value replaced with null
Mutant 2031 in q.js: value replaced with undefined
Mutant 2032 in q.js: value replaced with value + 1
Mutant 2033 in q.js: nodeback replaced with null
Mutant 2034 in q.js: nodeback replaced with undefined
Mutant 2035 in q.js: nodeback replaced with 0
Mutant 2036 in q.js: error replaced with null
Mutant 2037 in q.js: error replaced with undefined
Mutant 2038 in q.js: error replaced with new Error("This is a test error")
Mutant 2039 in q.js: captureLine replaced with captureLine + 1
Mutant 2040 in q.js: captureLine replaced with captureLine - 1
Mutant 2041 in q.js: captureLine replaced with captureLine * 2
Mutant 2042 in queue.js: Q.defer replaced with Q.reject
Mutant 2043 in queue.js: Q.defer replaced with Q.resolve
Mutant 2044 in queue.js: Q.defer replaced with Q.all
Mutant 2045 in queue.js: Q.defer replaced with Q.reject
Mutant 2046 in queue.js: Q.defer replaced with Q.resolve
Mutant 2047 in queue.js: Q.defer replaced with Q.delay
Mutant 2048 in queue.js: Q.defer replaced with Q.reject
Mutant 2049 in queue.js: Q.defer replaced with Q.resolve
Mutant 2050 in queue.js: ends.promise.get replaced with ends.promise.put
Mutant 2051 in queue.js: ends.promise.get replaced with ends.promise.reject
Mutant 2052 in queue.js: "head" replaced with "tail"
Mutant 2053 in queue.js: "head" replaced with "head.tail"
Mutant 2054 in queue.js: "head" replaced with "tail.head"
Mutant 2055 in queue.js: ends.promise.get replaced with ends.promise.reject
Mutant 2056 in queue.js: ends.promise.get replaced with ends.promise.then
Mutant 2057 in queue.js: ends.promise.get replaced with ends.promise.catch
Mutant 2058 in queue.js: "tail" replaced with "head"
Mutant 2059 in queue.js: "tail" replaced with "tail" + "1"
Mutant 2060 in queue.js: "tail" replaced with "tail" + ends.promise.get("head")
Mutant 2061 in queue.js: closed.resolve replaced with closed.reject
Mutant 2062 in queue.js: error replaced with null
Mutant 2063 in queue.js: error replaced with undefined
Mutant 2064 in queue.js: error replaced with {}
Mutant 2065 in queue.js: Q.reject replaced with Q.resolve
Mutant 2066 in queue.js: error replaced with "error"
Mutant 2067 in queue.js: error replaced with null
Mutant 2068 in queue.js: error replaced with undefined
Mutant 2069 in queue.js: ends.resolve replaced with ends.reject
Mutant 2070 in queue.js: ends.resolve replaced with ends.promise.resolve
Mutant 2071 in queue.js: ends.resolve replaced with ends.promise.reject
Mutant 2072 in queue.js: end replaced with null
[32m11:47:04 (3090) INFO Instrumenter[39m Instrumented 2 source file(s) with 2073 mutant(s)
[32m11:47:05 (3090) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m11:47:07 (3090) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m11:47:07 (3090) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m11:47:13 (3090) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6865 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 55m) 3/2073 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 52m) 4/2073 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 52m) 6/2073 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 16m) 7/2073 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 35m) 8/2073 tested (6 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 26m) 10/2073 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 38m) 11/2073 tested (9 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 31m) 13/2073 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 40m) 14/2073 tested (12 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 10m) 18/2073 tested (13 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 8m) 20/2073 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 15m) 21/2073 tested (16 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 13m) 23/2073 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 19m) 24/2073 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 16m) 26/2073 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 22m) 27/2073 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 19m) 29/2073 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 24m) 30/2073 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 21m) 32/2073 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 26m) 33/2073 tested (28 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 23m) 35/2073 tested (30 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 27m) 36/2073 tested (31 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 30m) 37/2073 tested (32 survived, 0 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 18m) 41/2073 tested (34 survived, 0 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 21m) 42/2073 tested (34 survived, 0 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 24m) 43/2073 tested (34 survived, 1 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 32m) 43/2073 tested (34 survived, 1 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 35m) 44/2073 tested (34 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 37m) 45/2073 tested (34 survived, 3 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 40m) 46/2073 tested (35 survived, 3 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 42m) 47/2073 tested (35 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 49m) 47/2073 tested (35 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 52m) 48/2073 tested (35 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 49m) 50/2073 tested (37 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 51m) 51/2073 tested (38 survived, 5 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 53m) 52/2073 tested (38 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 55m) 53/2073 tested (39 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 44m) 57/2073 tested (40 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 45m) 58/2073 tested (41 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 47m) 59/2073 tested (42 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 45m) 61/2073 tested (42 survived, 7 timed out)
Mutation testing 2% (elapsed: ~7m, remaining: ~3h 47m) 62/2073 tested (43 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 41m) 65/2073 tested (45 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 43m) 66/2073 tested (46 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 48m) 66/2073 tested (46 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 39m) 70/2073 tested (47 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 34m) 73/2073 tested (47 survived, 8 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 33m) 75/2073 tested (49 survived, 8 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 34m) 76/2073 tested (50 survived, 8 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 33m) 78/2073 tested (52 survived, 8 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 34m) 79/2073 tested (53 survived, 8 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 33m) 81/2073 tested (55 survived, 8 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 34m) 82/2073 tested (56 survived, 8 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 33m) 84/2073 tested (58 survived, 8 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 34m) 85/2073 tested (59 survived, 8 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 33m) 87/2073 tested (61 survived, 8 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 34m) 88/2073 tested (62 survived, 8 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 32m) 90/2073 tested (64 survived, 8 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 34m) 91/2073 tested (65 survived, 8 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 35m) 92/2073 tested (66 survived, 8 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 34m) 94/2073 tested (68 survived, 8 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 35m) 95/2073 tested (69 survived, 8 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 36m) 96/2073 tested (69 survived, 9 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 37m) 97/2073 tested (70 survived, 9 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 40m) 97/2073 tested (70 survived, 9 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 39m) 99/2073 tested (71 survived, 10 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 40m) 100/2073 tested (72 survived, 10 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 43m) 100/2073 tested (72 survived, 10 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 42m) 102/2073 tested (73 survived, 11 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 45m) 102/2073 tested (73 survived, 11 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 39m) 106/2073 tested (73 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 38m) 108/2073 tested (75 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 39m) 109/2073 tested (76 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 40m) 110/2073 tested (77 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 38m) 112/2073 tested (79 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 39m) 113/2073 tested (80 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 38m) 115/2073 tested (82 survived, 12 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 39m) 116/2073 tested (83 survived, 12 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 38m) 118/2073 tested (85 survived, 12 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 38m) 119/2073 tested (86 survived, 12 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 37m) 121/2073 tested (88 survived, 12 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 38m) 122/2073 tested (89 survived, 12 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 37m) 124/2073 tested (91 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 38m) 125/2073 tested (92 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 37m) 127/2073 tested (94 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 37m) 128/2073 tested (95 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 36m) 130/2073 tested (97 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 37m) 131/2073 tested (98 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 38m) 132/2073 tested (99 survived, 12 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 37m) 134/2073 tested (101 survived, 12 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 37m) 135/2073 tested (102 survived, 12 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 36m) 137/2073 tested (104 survived, 12 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 37m) 138/2073 tested (105 survived, 12 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 36m) 140/2073 tested (107 survived, 12 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 36m) 141/2073 tested (108 survived, 12 timed out)
Mutation testing 6% (elapsed: ~16m, remaining: ~3h 35m) 143/2073 tested (110 survived, 12 timed out)
Mutation testing 6% (elapsed: ~16m, remaining: ~3h 36m) 144/2073 tested (111 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 35m) 146/2073 tested (113 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 33m) 149/2073 tested (114 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 33m) 150/2073 tested (115 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 32m) 152/2073 tested (117 survived, 12 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 28m) 156/2073 tested (118 survived, 12 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 28m) 158/2073 tested (118 survived, 12 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 25m) 161/2073 tested (118 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 18m) 168/2073 tested (118 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 19m) 169/2073 tested (119 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 18m) 171/2073 tested (121 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 18m) 172/2073 tested (122 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 18m) 174/2073 tested (124 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 18m) 175/2073 tested (125 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 18m) 177/2073 tested (127 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 18m) 178/2073 tested (128 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 18m) 180/2073 tested (130 survived, 13 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 18m) 181/2073 tested (131 survived, 13 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 17m) 183/2073 tested (133 survived, 13 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 18m) 184/2073 tested (134 survived, 13 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 17m) 186/2073 tested (136 survived, 13 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 18m) 187/2073 tested (137 survived, 13 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 18m) 188/2073 tested (138 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 18m) 190/2073 tested (140 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 18m) 191/2073 tested (141 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 18m) 193/2073 tested (143 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 18m) 194/2073 tested (144 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 17m) 196/2073 tested (146 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 18m) 197/2073 tested (147 survived, 13 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 17m) 199/2073 tested (149 survived, 13 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 18m) 200/2073 tested (150 survived, 13 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 17m) 202/2073 tested (152 survived, 13 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 18m) 203/2073 tested (153 survived, 13 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 17m) 205/2073 tested (155 survived, 13 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 17m) 206/2073 tested (156 survived, 13 timed out)
Mutation testing 9% (elapsed: ~22m, remaining: ~3h 18m) 207/2073 tested (157 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 17m) 209/2073 tested (159 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 18m) 210/2073 tested (160 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 17m) 212/2073 tested (162 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 17m) 213/2073 tested (163 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 17m) 215/2073 tested (165 survived, 13 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 17m) 216/2073 tested (166 survived, 13 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 17m) 218/2073 tested (168 survived, 13 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 17m) 219/2073 tested (169 survived, 13 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 16m) 221/2073 tested (171 survived, 13 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 17m) 222/2073 tested (172 survived, 13 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 16m) 224/2073 tested (174 survived, 13 timed out)
Mutation testing 10% (elapsed: ~24m, remaining: ~3h 17m) 225/2073 tested (175 survived, 13 timed out)
Mutation testing 10% (elapsed: ~24m, remaining: ~3h 16m) 227/2073 tested (177 survived, 13 timed out)
Mutation testing 10% (elapsed: ~24m, remaining: ~3h 16m) 228/2073 tested (178 survived, 13 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 17m) 229/2073 tested (179 survived, 13 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 16m) 231/2073 tested (181 survived, 13 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 17m) 232/2073 tested (182 survived, 13 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 16m) 234/2073 tested (184 survived, 13 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 16m) 235/2073 tested (185 survived, 13 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 16m) 237/2073 tested (187 survived, 13 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 16m) 238/2073 tested (188 survived, 13 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 16m) 240/2073 tested (190 survived, 13 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 16m) 241/2073 tested (191 survived, 13 timed out)
Mutation testing 11% (elapsed: ~26m, remaining: ~3h 15m) 243/2073 tested (193 survived, 13 timed out)
Mutation testing 11% (elapsed: ~26m, remaining: ~3h 16m) 244/2073 tested (194 survived, 13 timed out)
Mutation testing 11% (elapsed: ~26m, remaining: ~3h 15m) 246/2073 tested (196 survived, 13 timed out)
Mutation testing 11% (elapsed: ~26m, remaining: ~3h 15m) 247/2073 tested (197 survived, 13 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 11m) 253/2073 tested (198 survived, 13 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 12m) 254/2073 tested (198 survived, 13 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 12m) 255/2073 tested (198 survived, 13 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 11m) 257/2073 tested (199 survived, 13 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 12m) 258/2073 tested (200 survived, 13 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 11m) 260/2073 tested (202 survived, 13 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 12m) 261/2073 tested (203 survived, 13 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 10m) 264/2073 tested (204 survived, 13 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 10m) 266/2073 tested (206 survived, 13 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 10m) 267/2073 tested (206 survived, 13 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 10m) 268/2073 tested (207 survived, 13 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 10m) 270/2073 tested (209 survived, 13 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 10m) 271/2073 tested (210 survived, 13 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 10m) 272/2073 tested (211 survived, 13 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 10m) 274/2073 tested (213 survived, 13 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 10m) 275/2073 tested (214 survived, 13 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 10m) 277/2073 tested (216 survived, 13 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 10m) 278/2073 tested (217 survived, 13 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 280/2073 tested (219 survived, 13 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 10m) 281/2073 tested (220 survived, 13 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 9m) 283/2073 tested (222 survived, 13 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 10m) 284/2073 tested (223 survived, 13 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 9m) 286/2073 tested (225 survived, 13 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 9m) 287/2073 tested (226 survived, 13 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 9m) 289/2073 tested (228 survived, 13 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 9m) 290/2073 tested (229 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 9m) 292/2073 tested (231 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 9m) 293/2073 tested (232 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 9m) 294/2073 tested (233 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 9m) 296/2073 tested (235 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 9m) 297/2073 tested (236 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 8m) 299/2073 tested (238 survived, 13 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 9m) 300/2073 tested (239 survived, 13 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 8m) 302/2073 tested (241 survived, 13 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 8m) 303/2073 tested (242 survived, 13 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 8m) 305/2073 tested (244 survived, 13 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 8m) 306/2073 tested (245 survived, 13 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 8m) 308/2073 tested (247 survived, 13 timed out)
Mutation testing 14% (elapsed: ~33m, remaining: ~3h 8m) 309/2073 tested (248 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 7m) 311/2073 tested (250 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 8m) 312/2073 tested (251 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 7m) 314/2073 tested (253 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 7m) 315/2073 tested (254 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 8m) 316/2073 tested (255 survived, 13 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 7m) 318/2073 tested (257 survived, 13 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 7m) 319/2073 tested (258 survived, 13 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 7m) 321/2073 tested (260 survived, 13 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 7m) 322/2073 tested (261 survived, 13 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 7m) 324/2073 tested (263 survived, 13 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 7m) 325/2073 tested (264 survived, 13 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 6m) 327/2073 tested (266 survived, 13 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 7m) 328/2073 tested (267 survived, 13 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 6m) 330/2073 tested (269 survived, 13 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 6m) 331/2073 tested (270 survived, 13 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 6m) 333/2073 tested (272 survived, 13 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 6m) 334/2073 tested (273 survived, 13 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 6m) 336/2073 tested (275 survived, 13 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 6m) 337/2073 tested (276 survived, 13 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 5m) 339/2073 tested (278 survived, 13 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 6m) 340/2073 tested (279 survived, 13 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 6m) 341/2073 tested (280 survived, 13 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 5m) 343/2073 tested (282 survived, 13 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 5m) 344/2073 tested (283 survived, 13 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 5m) 346/2073 tested (285 survived, 13 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 5m) 347/2073 tested (286 survived, 13 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 5m) 349/2073 tested (288 survived, 13 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 5m) 350/2073 tested (289 survived, 13 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 4m) 352/2073 tested (291 survived, 13 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 5m) 353/2073 tested (292 survived, 13 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 4m) 355/2073 tested (294 survived, 13 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 4m) 356/2073 tested (295 survived, 13 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 4m) 358/2073 tested (297 survived, 13 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 4m) 359/2073 tested (298 survived, 13 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 2m) 363/2073 tested (299 survived, 13 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 3m) 364/2073 tested (300 survived, 13 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 2m) 366/2073 tested (302 survived, 13 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 2m) 367/2073 tested (303 survived, 13 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 2m) 369/2073 tested (305 survived, 13 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 2m) 370/2073 tested (306 survived, 13 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 2m) 372/2073 tested (308 survived, 13 timed out)
Mutation testing 17% (elapsed: ~40m, remaining: ~3h 2m) 373/2073 tested (309 survived, 13 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~3h 1m) 376/2073 tested (311 survived, 13 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~3h 0m) 379/2073 tested (312 survived, 13 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~3h 0m) 380/2073 tested (313 survived, 13 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~3h 0m) 382/2073 tested (315 survived, 13 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~3h 0m) 383/2073 tested (316 survived, 13 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 59m) 385/2073 tested (318 survived, 13 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 59m) 386/2073 tested (319 survived, 13 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 59m) 388/2073 tested (321 survived, 13 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 59m) 389/2073 tested (322 survived, 13 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 59m) 390/2073 tested (323 survived, 13 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 59m) 392/2073 tested (325 survived, 13 timed out)
Mutation testing 18% (elapsed: ~42m, remaining: ~2h 59m) 393/2073 tested (326 survived, 13 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 59m) 395/2073 tested (328 survived, 13 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 59m) 396/2073 tested (329 survived, 13 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 58m) 398/2073 tested (331 survived, 13 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 59m) 399/2073 tested (332 survived, 13 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 58m) 401/2073 tested (334 survived, 13 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 58m) 402/2073 tested (335 survived, 13 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 57m) 405/2073 tested (336 survived, 13 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 57m) 407/2073 tested (338 survived, 13 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 56m) 409/2073 tested (339 survived, 13 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 56m) 411/2073 tested (341 survived, 13 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 55m) 415/2073 tested (342 survived, 13 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 55m) 416/2073 tested (343 survived, 13 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 418/2073 tested (345 survived, 13 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 55m) 419/2073 tested (346 survived, 13 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 55m) 420/2073 tested (347 survived, 13 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 422/2073 tested (349 survived, 13 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 423/2073 tested (350 survived, 13 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 425/2073 tested (352 survived, 13 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 426/2073 tested (353 survived, 13 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 428/2073 tested (355 survived, 13 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 429/2073 tested (356 survived, 13 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 53m) 431/2073 tested (358 survived, 13 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 432/2073 tested (359 survived, 13 timed out)
Mutation testing 20% (elapsed: ~46m, remaining: ~2h 53m) 434/2073 tested (361 survived, 13 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 52m) 438/2073 tested (361 survived, 13 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 51m) 441/2073 tested (361 survived, 13 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 51m) 443/2073 tested (361 survived, 13 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 51m) 444/2073 tested (361 survived, 13 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 51m) 445/2073 tested (361 survived, 13 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 50m) 447/2073 tested (361 survived, 13 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 51m) 447/2073 tested (361 survived, 13 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 51m) 448/2073 tested (361 survived, 14 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 51m) 449/2073 tested (361 survived, 15 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 52m) 449/2073 tested (361 survived, 15 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 52m) 450/2073 tested (361 survived, 16 timed out)
Mutation testing 21% (elapsed: ~48m, remaining: ~2h 53m) 450/2073 tested (361 survived, 16 timed out)
Mutation testing 21% (elapsed: ~48m, remaining: ~2h 52m) 452/2073 tested (362 survived, 17 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 50m) 457/2073 tested (363 survived, 17 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 49m) 461/2073 tested (363 survived, 17 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 49m) 462/2073 tested (363 survived, 18 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 48m) 466/2073 tested (363 survived, 18 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 48m) 467/2073 tested (363 survived, 19 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 467/2073 tested (363 survived, 19 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 468/2073 tested (363 survived, 20 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 469/2073 tested (363 survived, 20 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 48m) 471/2073 tested (363 survived, 21 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 48m) 473/2073 tested (364 survived, 21 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 48m) 474/2073 tested (365 survived, 21 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 48m) 476/2073 tested (367 survived, 21 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 48m) 477/2073 tested (368 survived, 21 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 48m) 478/2073 tested (369 survived, 21 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 48m) 479/2073 tested (369 survived, 22 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 49m) 479/2073 tested (369 survived, 22 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 49m) 480/2073 tested (369 survived, 23 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 482/2073 tested (369 survived, 24 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 483/2073 tested (370 survived, 24 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 485/2073 tested (372 survived, 24 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 47m) 488/2073 tested (372 survived, 24 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 47m) 490/2073 tested (374 survived, 24 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 491/2073 tested (375 survived, 24 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 493/2073 tested (377 survived, 24 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 494/2073 tested (378 survived, 24 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 46m) 496/2073 tested (380 survived, 24 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 497/2073 tested (381 survived, 24 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 46m) 499/2073 tested (383 survived, 24 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 500/2073 tested (384 survived, 24 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 502/2073 tested (386 survived, 24 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 503/2073 tested (387 survived, 24 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 505/2073 tested (389 survived, 24 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 506/2073 tested (390 survived, 24 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 507/2073 tested (391 survived, 24 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 509/2073 tested (393 survived, 24 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 46m) 510/2073 tested (394 survived, 24 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 512/2073 tested (396 survived, 24 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 513/2073 tested (397 survived, 24 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 515/2073 tested (399 survived, 24 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 516/2073 tested (400 survived, 24 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 44m) 519/2073 tested (402 survived, 24 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 45m) 519/2073 tested (402 survived, 24 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 45m) 520/2073 tested (402 survived, 25 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 44m) 522/2073 tested (404 survived, 25 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 44m) 525/2073 tested (405 survived, 25 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 43m) 528/2073 tested (406 survived, 25 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 43m) 529/2073 tested (406 survived, 25 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 43m) 530/2073 tested (406 survived, 26 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 44m) 530/2073 tested (406 survived, 26 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 44m) 531/2073 tested (406 survived, 27 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 43m) 534/2073 tested (406 survived, 28 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 43m) 534/2073 tested (406 survived, 28 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 43m) 535/2073 tested (406 survived, 29 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 535/2073 tested (406 survived, 29 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 536/2073 tested (406 survived, 30 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 537/2073 tested (406 survived, 31 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 44m) 539/2073 tested (408 survived, 31 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 44m) 540/2073 tested (409 survived, 31 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 44m) 541/2073 tested (410 survived, 31 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 43m) 543/2073 tested (412 survived, 31 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 43m) 544/2073 tested (413 survived, 31 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 43m) 546/2073 tested (415 survived, 31 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 43m) 548/2073 tested (416 survived, 31 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 42m) 551/2073 tested (416 survived, 31 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 42m) 552/2073 tested (416 survived, 31 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 42m) 553/2073 tested (416 survived, 31 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 42m) 554/2073 tested (416 survived, 31 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 42m) 555/2073 tested (417 survived, 31 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 42m) 557/2073 tested (419 survived, 31 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 42m) 558/2073 tested (420 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 42m) 560/2073 tested (422 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 42m) 561/2073 tested (423 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 42m) 562/2073 tested (424 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 41m) 564/2073 tested (426 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 41m) 565/2073 tested (427 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 41m) 567/2073 tested (429 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 41m) 568/2073 tested (430 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 41m) 570/2073 tested (432 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 41m) 571/2073 tested (433 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 40m) 573/2073 tested (435 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 41m) 574/2073 tested (436 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 40m) 576/2073 tested (438 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 40m) 577/2073 tested (439 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 40m) 579/2073 tested (441 survived, 31 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 40m) 580/2073 tested (442 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 40m) 582/2073 tested (444 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 40m) 583/2073 tested (445 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 40m) 584/2073 tested (446 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 39m) 586/2073 tested (448 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 39m) 587/2073 tested (449 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 39m) 589/2073 tested (451 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 39m) 590/2073 tested (452 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 39m) 592/2073 tested (454 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 39m) 593/2073 tested (455 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 38m) 595/2073 tested (457 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 39m) 596/2073 tested (458 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 38m) 598/2073 tested (460 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 38m) 599/2073 tested (461 survived, 31 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 38m) 601/2073 tested (463 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 38m) 602/2073 tested (464 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 38m) 604/2073 tested (466 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 38m) 605/2073 tested (467 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 38m) 606/2073 tested (468 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 37m) 608/2073 tested (470 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 37m) 609/2073 tested (471 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 37m) 611/2073 tested (473 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 37m) 612/2073 tested (474 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 37m) 614/2073 tested (476 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 37m) 615/2073 tested (477 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 36m) 617/2073 tested (479 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 36m) 618/2073 tested (480 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 36m) 620/2073 tested (482 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 36m) 621/2073 tested (483 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 623/2073 tested (485 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 624/2073 tested (486 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 626/2073 tested (488 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 627/2073 tested (489 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 628/2073 tested (490 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 35m) 630/2073 tested (492 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 35m) 631/2073 tested (493 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 35m) 633/2073 tested (495 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 35m) 634/2073 tested (496 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 35m) 636/2073 tested (498 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 34m) 638/2073 tested (499 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 638/2073 tested (499 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 639/2073 tested (499 survived, 32 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 640/2073 tested (499 survived, 32 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 640/2073 tested (499 survived, 32 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 641/2073 tested (499 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 642/2073 tested (499 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 10m, remaining: ~2h 36m) 642/2073 tested (499 survived, 34 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 36m) 643/2073 tested (499 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 36m) 644/2073 tested (499 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 36m) 645/2073 tested (500 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 35m) 647/2073 tested (502 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 36m) 647/2073 tested (502 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 36m) 648/2073 tested (502 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 36m) 649/2073 tested (502 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 36m) 650/2073 tested (503 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 652/2073 tested (505 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 653/2073 tested (506 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 655/2073 tested (508 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 35m) 656/2073 tested (509 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 35m) 657/2073 tested (510 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 35m) 659/2073 tested (512 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 35m) 660/2073 tested (513 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 34m) 662/2073 tested (515 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 33m) 666/2073 tested (516 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 666/2073 tested (516 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 667/2073 tested (516 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 668/2073 tested (516 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 668/2073 tested (516 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 669/2073 tested (516 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 671/2073 tested (518 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 674/2073 tested (519 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 675/2073 tested (520 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 677/2073 tested (522 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 678/2073 tested (523 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 32m) 680/2073 tested (525 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 680/2073 tested (525 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 33m) 681/2073 tested (525 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 33m) 682/2073 tested (525 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 33m) 682/2073 tested (525 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 33m) 683/2073 tested (525 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 33m) 684/2073 tested (525 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 33m) 685/2073 tested (525 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 686/2073 tested (525 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 687/2073 tested (525 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 688/2073 tested (525 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 689/2073 tested (525 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 690/2073 tested (525 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 34m) 690/2073 tested (525 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 34m) 691/2073 tested (525 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 692/2073 tested (525 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 34m) 692/2073 tested (525 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 34m) 693/2073 tested (525 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 34m) 694/2073 tested (525 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 34m) 694/2073 tested (525 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 34m) 695/2073 tested (525 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 34m) 696/2073 tested (525 survived, 51 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 34m) 696/2073 tested (525 survived, 51 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 34m) 697/2073 tested (525 survived, 52 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 34m) 698/2073 tested (525 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 35m) 698/2073 tested (525 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 35m) 699/2073 tested (525 survived, 54 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 35m) 699/2073 tested (525 survived, 54 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 35m) 700/2073 tested (525 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 35m) 701/2073 tested (525 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 35m) 702/2073 tested (525 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 35m) 703/2073 tested (525 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 20m, remaining: ~2h 35m) 704/2073 tested (525 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 35m) 705/2073 tested (525 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 35m) 706/2073 tested (526 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 35m) 707/2073 tested (527 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 35m) 709/2073 tested (529 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 35m) 710/2073 tested (530 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 35m) 711/2073 tested (530 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 35m) 712/2073 tested (530 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 35m) 712/2073 tested (530 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 35m) 713/2073 tested (530 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 35m) 714/2073 tested (530 survived, 58 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 35m) 714/2073 tested (530 survived, 58 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 35m) 715/2073 tested (530 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 35m) 717/2073 tested (530 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 35m) 718/2073 tested (530 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 35m) 719/2073 tested (530 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 35m) 719/2073 tested (530 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 35m) 720/2073 tested (530 survived, 62 timed out)
Mutation testing 34% (elapsed: ~1h 23m, remaining: ~2h 35m) 720/2073 tested (530 survived, 62 timed out)
Mutation testing 34% (elapsed: ~1h 23m, remaining: ~2h 35m) 721/2073 tested (530 survived, 63 timed out)
Mutation testing 34% (elapsed: ~1h 23m, remaining: ~2h 35m) 722/2073 tested (530 survived, 64 timed out)
Mutation testing 34% (elapsed: ~1h 23m, remaining: ~2h 36m) 722/2073 tested (530 survived, 64 timed out)
Mutation testing 34% (elapsed: ~1h 23m, remaining: ~2h 36m) 723/2073 tested (530 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 23m, remaining: ~2h 36m) 724/2073 tested (530 survived, 66 timed out)
Mutation testing 34% (elapsed: ~1h 24m, remaining: ~2h 36m) 725/2073 tested (531 survived, 66 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 36m) 726/2073 tested (531 survived, 67 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 36m) 726/2073 tested (531 survived, 67 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 36m) 727/2073 tested (531 survived, 68 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 36m) 728/2073 tested (531 survived, 69 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 36m) 728/2073 tested (531 survived, 69 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 36m) 729/2073 tested (531 survived, 70 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 36m) 730/2073 tested (531 survived, 71 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 36m) 730/2073 tested (531 survived, 71 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 36m) 731/2073 tested (531 survived, 72 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 37m) 731/2073 tested (531 survived, 72 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 37m) 732/2073 tested (531 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 37m) 733/2073 tested (531 survived, 74 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 37m) 733/2073 tested (531 survived, 74 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 37m) 734/2073 tested (531 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 37m) 735/2073 tested (531 survived, 76 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 37m) 736/2073 tested (532 survived, 76 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 37m) 738/2073 tested (534 survived, 76 timed out)
Mutation testing 35% (elapsed: ~1h 27m, remaining: ~2h 37m) 739/2073 tested (535 survived, 76 timed out)
Mutation testing 35% (elapsed: ~1h 27m, remaining: ~2h 36m) 741/2073 tested (537 survived, 76 timed out)
Mutation testing 35% (elapsed: ~1h 27m, remaining: ~2h 36m) 742/2073 tested (538 survived, 76 timed out)
Mutation testing 35% (elapsed: ~1h 27m, remaining: ~2h 36m) 744/2073 tested (540 survived, 76 timed out)
Mutation testing 35% (elapsed: ~1h 27m, remaining: ~2h 36m) 745/2073 tested (541 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 35m) 747/2073 tested (543 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 35m) 748/2073 tested (544 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 35m) 750/2073 tested (546 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 35m) 751/2073 tested (547 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 35m) 753/2073 tested (549 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 35m) 754/2073 tested (550 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 34m) 756/2073 tested (552 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 34m) 757/2073 tested (553 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 34m) 758/2073 tested (554 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 34m) 760/2073 tested (556 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 34m) 761/2073 tested (557 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 33m) 763/2073 tested (559 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 33m) 764/2073 tested (560 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 30m, remaining: ~2h 33m) 766/2073 tested (562 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 30m, remaining: ~2h 33m) 767/2073 tested (563 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 33m) 769/2073 tested (565 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 33m) 770/2073 tested (566 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 32m) 772/2073 tested (568 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 32m) 773/2073 tested (569 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 32m) 775/2073 tested (571 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 32m) 776/2073 tested (572 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 32m) 777/2073 tested (573 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 31m) 779/2073 tested (575 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 31m) 780/2073 tested (576 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 31m) 782/2073 tested (578 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 32m, remaining: ~2h 31m) 783/2073 tested (579 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 32m, remaining: ~2h 31m) 785/2073 tested (581 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 32m, remaining: ~2h 31m) 786/2073 tested (582 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 30m) 788/2073 tested (584 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 30m) 789/2073 tested (585 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 30m) 791/2073 tested (587 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 30m) 792/2073 tested (588 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 30m) 794/2073 tested (590 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 30m) 795/2073 tested (591 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 29m) 797/2073 tested (593 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 29m) 798/2073 tested (594 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 29m) 799/2073 tested (595 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 29m) 801/2073 tested (597 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 29m) 802/2073 tested (598 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 28m) 804/2073 tested (600 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 28m) 805/2073 tested (601 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 28m) 807/2073 tested (603 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 28m) 808/2073 tested (604 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 28m) 810/2073 tested (606 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 28m) 811/2073 tested (607 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 27m) 813/2073 tested (609 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 27m) 814/2073 tested (610 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 27m) 816/2073 tested (612 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 26m) 820/2073 tested (613 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 25m) 823/2073 tested (613 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 25m) 825/2073 tested (615 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 25m) 826/2073 tested (616 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 25m) 828/2073 tested (618 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 25m) 829/2073 tested (619 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 24m) 831/2073 tested (621 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 24m) 832/2073 tested (622 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 24m) 834/2073 tested (624 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 24m) 835/2073 tested (625 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 23m) 837/2073 tested (627 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 23m) 838/2073 tested (628 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 23m) 840/2073 tested (630 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 23m) 841/2073 tested (631 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 23m) 843/2073 tested (633 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 23m) 844/2073 tested (634 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 23m) 845/2073 tested (635 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 22m) 847/2073 tested (637 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 22m) 848/2073 tested (638 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 22m) 850/2073 tested (640 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 22m) 851/2073 tested (641 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 22m) 853/2073 tested (643 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 22m) 854/2073 tested (644 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 21m) 857/2073 tested (646 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 20m) 860/2073 tested (647 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 20m) 862/2073 tested (648 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 20m) 863/2073 tested (649 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 19m) 866/2073 tested (651 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 19m) 867/2073 tested (652 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 19m) 869/2073 tested (654 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 19m) 870/2073 tested (655 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 19m) 871/2073 tested (656 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 19m) 873/2073 tested (658 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 19m) 874/2073 tested (659 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 18m) 876/2073 tested (661 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 18m) 877/2073 tested (662 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 18m) 879/2073 tested (664 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 18m) 880/2073 tested (665 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 17m) 882/2073 tested (667 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 17m) 883/2073 tested (668 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 17m) 885/2073 tested (670 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 17m) 886/2073 tested (671 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 17m) 887/2073 tested (672 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 43m, remaining: ~2h 17m) 889/2073 tested (674 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 43m, remaining: ~2h 17m) 890/2073 tested (675 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 16m) 892/2073 tested (677 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 16m) 893/2073 tested (677 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 16m) 895/2073 tested (679 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 16m) 896/2073 tested (680 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 16m) 898/2073 tested (682 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 16m) 898/2073 tested (682 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 16m) 899/2073 tested (682 survived, 77 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 16m) 899/2073 tested (682 survived, 77 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 16m) 900/2073 tested (682 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 16m) 901/2073 tested (682 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 16m) 903/2073 tested (684 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 15m) 904/2073 tested (684 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 16m) 904/2073 tested (684 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 16m) 905/2073 tested (684 survived, 80 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 16m) 906/2073 tested (684 survived, 81 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 16m) 906/2073 tested (684 survived, 81 timed out)
Mutation testing 43% (elapsed: ~1h 46m, remaining: ~2h 16m) 907/2073 tested (684 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 46m, remaining: ~2h 15m) 909/2073 tested (686 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 46m, remaining: ~2h 15m) 910/2073 tested (687 survived, 82 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 15m) 913/2073 tested (689 survived, 82 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 14m) 916/2073 tested (690 survived, 82 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 14m) 918/2073 tested (691 survived, 82 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 14m) 919/2073 tested (692 survived, 82 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 14m) 921/2073 tested (694 survived, 82 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 13m) 922/2073 tested (695 survived, 82 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 13m) 924/2073 tested (697 survived, 82 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 13m) 925/2073 tested (698 survived, 82 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 13m) 927/2073 tested (700 survived, 82 timed out)
Mutation testing 44% (elapsed: ~1h 48m, remaining: ~2h 13m) 928/2073 tested (701 survived, 82 timed out)
Mutation testing 44% (elapsed: ~1h 48m, remaining: ~2h 12m) 930/2073 tested (703 survived, 82 timed out)
Mutation testing 44% (elapsed: ~1h 48m, remaining: ~2h 12m) 931/2073 tested (704 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 12m) 933/2073 tested (706 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 12m) 934/2073 tested (707 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 12m) 935/2073 tested (708 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 12m) 937/2073 tested (710 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 12m) 938/2073 tested (711 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 11m) 940/2073 tested (713 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 11m) 941/2073 tested (714 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 11m) 943/2073 tested (716 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 11m) 944/2073 tested (717 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 11m) 946/2073 tested (719 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 10m) 947/2073 tested (720 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 10m) 949/2073 tested (722 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 10m) 950/2073 tested (723 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 10m) 952/2073 tested (725 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 10m) 953/2073 tested (726 survived, 82 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 9m) 955/2073 tested (728 survived, 82 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 9m) 956/2073 tested (729 survived, 82 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 9m) 957/2073 tested (730 survived, 82 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 9m) 959/2073 tested (732 survived, 82 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 9m) 960/2073 tested (733 survived, 82 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 9m) 962/2073 tested (735 survived, 82 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 9m) 963/2073 tested (736 survived, 82 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 8m) 965/2073 tested (738 survived, 82 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 8m) 965/2073 tested (738 survived, 82 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 8m) 966/2073 tested (738 survived, 83 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 8m) 967/2073 tested (738 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 9m) 967/2073 tested (738 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 8m) 968/2073 tested (738 survived, 85 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 8m) 969/2073 tested (738 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 9m) 969/2073 tested (738 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 9m) 970/2073 tested (738 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 8m) 972/2073 tested (740 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 8m) 973/2073 tested (741 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 8m) 975/2073 tested (743 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 8m) 976/2073 tested (744 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 8m) 978/2073 tested (746 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 7m) 979/2073 tested (747 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 7m) 980/2073 tested (747 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 7m) 982/2073 tested (749 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 7m) 983/2073 tested (750 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 7m) 985/2073 tested (752 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 7m) 986/2073 tested (753 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 6m) 988/2073 tested (755 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 6m) 989/2073 tested (756 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 6m) 991/2073 tested (758 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 56m, remaining: ~2h 6m) 992/2073 tested (759 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 56m, remaining: ~2h 6m) 993/2073 tested (760 survived, 87 timed out)
Mutation testing 47% (elapsed: ~1h 56m, remaining: ~2h 6m) 995/2073 tested (762 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 5m) 996/2073 tested (763 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 5m) 998/2073 tested (765 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 5m) 999/2073 tested (766 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 5m) 1001/2073 tested (768 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 5m) 1002/2073 tested (769 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 4m) 1004/2073 tested (771 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 4m) 1005/2073 tested (772 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 4m) 1007/2073 tested (774 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 4m) 1008/2073 tested (775 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 58m, remaining: ~2h 4m) 1010/2073 tested (777 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 58m, remaining: ~2h 4m) 1011/2073 tested (778 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 58m, remaining: ~2h 3m) 1013/2073 tested (780 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 58m, remaining: ~2h 3m) 1014/2073 tested (781 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 58m, remaining: ~2h 3m) 1015/2073 tested (782 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~2h 3m) 1017/2073 tested (784 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 3m) 1018/2073 tested (785 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 3m) 1020/2073 tested (787 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 2m) 1021/2073 tested (788 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 2m) 1023/2073 tested (788 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 2m) 1024/2073 tested (788 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 2m) 1025/2073 tested (788 survived, 87 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 2m) 1027/2073 tested (788 survived, 87 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 2m) 1028/2073 tested (788 survived, 87 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 2m) 1029/2073 tested (788 survived, 87 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 1m) 1031/2073 tested (789 survived, 87 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 1m) 1032/2073 tested (790 survived, 87 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 1m) 1034/2073 tested (792 survived, 87 timed out)
Mutation testing 49% (elapsed: ~2h 1m, remaining: ~2h 1m) 1035/2073 tested (793 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~2h 1m) 1037/2073 tested (795 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~2h 0m) 1038/2073 tested (796 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~2h 0m) 1040/2073 tested (798 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~2h 0m) 1041/2073 tested (799 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~2h 0m) 1043/2073 tested (801 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~2h 0m) 1044/2073 tested (802 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~2h 0m) 1045/2073 tested (803 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 59m) 1047/2073 tested (805 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 59m) 1048/2073 tested (806 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 59m) 1050/2073 tested (808 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 59m) 1051/2073 tested (809 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 3m, remaining: ~1h 59m) 1053/2073 tested (811 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 3m, remaining: ~1h 59m) 1054/2073 tested (812 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 3m, remaining: ~1h 58m) 1056/2073 tested (814 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 3m, remaining: ~1h 58m) 1057/2073 tested (815 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 58m) 1059/2073 tested (817 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 58m) 1060/2073 tested (818 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 58m) 1062/2073 tested (820 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 57m) 1063/2073 tested (821 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 57m) 1064/2073 tested (822 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 57m) 1066/2073 tested (824 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 57m) 1067/2073 tested (825 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 57m) 1069/2073 tested (827 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 5m, remaining: ~1h 57m) 1070/2073 tested (828 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 5m, remaining: ~1h 56m) 1072/2073 tested (830 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 5m, remaining: ~1h 56m) 1073/2073 tested (831 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 5m, remaining: ~1h 56m) 1075/2073 tested (833 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 5m, remaining: ~1h 56m) 1076/2073 tested (834 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 56m) 1078/2073 tested (836 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 56m) 1079/2073 tested (837 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 55m) 1081/2073 tested (839 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 55m) 1082/2073 tested (840 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 55m) 1083/2073 tested (841 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 55m) 1085/2073 tested (843 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 55m) 1086/2073 tested (844 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 54m) 1088/2073 tested (846 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 54m) 1089/2073 tested (847 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 54m) 1091/2073 tested (849 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 54m) 1092/2073 tested (850 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 54m) 1094/2073 tested (852 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 54m) 1095/2073 tested (853 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 8m, remaining: ~1h 53m) 1097/2073 tested (855 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 8m, remaining: ~1h 53m) 1098/2073 tested (856 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 53m) 1100/2073 tested (858 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 53m) 1101/2073 tested (859 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 53m) 1103/2073 tested (861 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 53m) 1104/2073 tested (862 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 53m) 1105/2073 tested (863 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 52m) 1107/2073 tested (865 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 52m) 1108/2073 tested (866 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 52m) 1110/2073 tested (868 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 52m) 1111/2073 tested (869 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 51m) 1113/2073 tested (871 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 10m, remaining: ~1h 51m) 1114/2073 tested (872 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 10m, remaining: ~1h 51m) 1116/2073 tested (874 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 10m, remaining: ~1h 51m) 1117/2073 tested (875 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 10m, remaining: ~1h 51m) 1119/2073 tested (877 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 51m) 1120/2073 tested (878 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 50m) 1122/2073 tested (880 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 50m) 1123/2073 tested (881 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 50m) 1125/2073 tested (883 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 50m) 1126/2073 tested (884 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 50m) 1127/2073 tested (885 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 50m) 1129/2073 tested (887 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 50m) 1130/2073 tested (888 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 12m, remaining: ~1h 49m) 1132/2073 tested (890 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 12m, remaining: ~1h 49m) 1133/2073 tested (891 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 12m, remaining: ~1h 49m) 1135/2073 tested (893 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 12m, remaining: ~1h 49m) 1136/2073 tested (894 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 12m, remaining: ~1h 49m) 1138/2073 tested (896 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 12m, remaining: ~1h 48m) 1139/2073 tested (897 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 48m) 1141/2073 tested (899 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 48m) 1142/2073 tested (900 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 48m) 1144/2073 tested (902 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 48m) 1145/2073 tested (903 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 47m) 1147/2073 tested (905 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 47m) 1148/2073 tested (906 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 47m) 1149/2073 tested (907 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 47m) 1151/2073 tested (909 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 47m) 1152/2073 tested (910 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 47m) 1154/2073 tested (912 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 47m) 1155/2073 tested (913 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 46m) 1157/2073 tested (915 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 15m, remaining: ~1h 46m) 1158/2073 tested (916 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 15m, remaining: ~1h 46m) 1160/2073 tested (918 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 46m) 1161/2073 tested (919 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 46m) 1163/2073 tested (921 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 45m) 1164/2073 tested (922 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 45m) 1166/2073 tested (924 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 45m) 1167/2073 tested (925 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 45m) 1168/2073 tested (926 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 45m) 1170/2073 tested (928 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 45m) 1171/2073 tested (929 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 44m) 1173/2073 tested (931 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 44m) 1174/2073 tested (932 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 17m, remaining: ~1h 44m) 1176/2073 tested (934 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 17m, remaining: ~1h 44m) 1177/2073 tested (935 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 17m, remaining: ~1h 44m) 1179/2073 tested (937 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 17m, remaining: ~1h 44m) 1180/2073 tested (938 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 43m) 1182/2073 tested (940 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 43m) 1183/2073 tested (941 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 43m) 1185/2073 tested (943 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 43m) 1186/2073 tested (944 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 43m) 1188/2073 tested (946 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 42m) 1189/2073 tested (947 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 42m) 1191/2073 tested (949 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 42m) 1192/2073 tested (950 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 19m, remaining: ~1h 42m) 1193/2073 tested (951 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 19m, remaining: ~1h 42m) 1195/2073 tested (953 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 19m, remaining: ~1h 42m) 1196/2073 tested (954 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 19m, remaining: ~1h 41m) 1198/2073 tested (956 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 19m, remaining: ~1h 41m) 1199/2073 tested (957 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 19m, remaining: ~1h 41m) 1201/2073 tested (959 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 20m, remaining: ~1h 41m) 1202/2073 tested (960 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 41m) 1204/2073 tested (962 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 41m) 1205/2073 tested (963 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 40m) 1207/2073 tested (965 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 40m) 1208/2073 tested (966 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 40m) 1210/2073 tested (968 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 40m) 1211/2073 tested (969 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 40m) 1212/2073 tested (970 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 40m) 1214/2073 tested (972 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 39m) 1215/2073 tested (973 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 39m) 1217/2073 tested (975 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 39m) 1218/2073 tested (976 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 22m, remaining: ~1h 39m) 1220/2073 tested (978 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 22m, remaining: ~1h 39m) 1221/2073 tested (979 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 22m, remaining: ~1h 38m) 1223/2073 tested (981 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 38m) 1224/2073 tested (982 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 38m) 1226/2073 tested (984 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 38m) 1227/2073 tested (985 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 38m) 1229/2073 tested (987 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 38m) 1230/2073 tested (988 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 37m) 1232/2073 tested (990 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 37m) 1233/2073 tested (991 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 37m) 1235/2073 tested (993 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 37m) 1236/2073 tested (994 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 24m, remaining: ~1h 37m) 1237/2073 tested (995 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 24m, remaining: ~1h 37m) 1239/2073 tested (997 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 24m, remaining: ~1h 36m) 1240/2073 tested (998 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 24m, remaining: ~1h 36m) 1242/2073 tested (1000 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 24m, remaining: ~1h 36m) 1243/2073 tested (1001 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 36m) 1245/2073 tested (1003 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 36m) 1246/2073 tested (1004 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 35m) 1248/2073 tested (1006 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 35m) 1249/2073 tested (1007 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 35m) 1251/2073 tested (1009 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 35m) 1252/2073 tested (1010 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 35m) 1254/2073 tested (1012 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 26m, remaining: ~1h 35m) 1255/2073 tested (1013 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 26m, remaining: ~1h 35m) 1256/2073 tested (1014 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 26m, remaining: ~1h 34m) 1258/2073 tested (1016 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 26m, remaining: ~1h 34m) 1259/2073 tested (1017 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 26m, remaining: ~1h 34m) 1261/2073 tested (1019 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 26m, remaining: ~1h 34m) 1262/2073 tested (1020 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 27m, remaining: ~1h 34m) 1264/2073 tested (1022 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 34m) 1265/2073 tested (1023 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 33m) 1267/2073 tested (1025 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 33m) 1268/2073 tested (1026 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 33m) 1270/2073 tested (1028 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 33m) 1271/2073 tested (1029 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 28m, remaining: ~1h 33m) 1273/2073 tested (1031 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 28m, remaining: ~1h 32m) 1274/2073 tested (1032 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 28m, remaining: ~1h 32m) 1276/2073 tested (1034 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 28m, remaining: ~1h 32m) 1277/2073 tested (1035 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 28m, remaining: ~1h 32m) 1279/2073 tested (1037 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 28m, remaining: ~1h 32m) 1280/2073 tested (1038 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 29m, remaining: ~1h 32m) 1281/2073 tested (1039 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 29m, remaining: ~1h 31m) 1283/2073 tested (1041 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 29m, remaining: ~1h 31m) 1284/2073 tested (1042 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 31m) 1286/2073 tested (1044 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 31m) 1287/2073 tested (1045 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 31m) 1289/2073 tested (1047 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 31m) 1290/2073 tested (1048 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 30m) 1292/2073 tested (1050 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 30m) 1293/2073 tested (1051 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 30m) 1295/2073 tested (1053 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 30m) 1296/2073 tested (1054 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 30m) 1298/2073 tested (1056 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 31m, remaining: ~1h 29m) 1299/2073 tested (1057 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 31m, remaining: ~1h 29m) 1301/2073 tested (1059 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 31m, remaining: ~1h 29m) 1302/2073 tested (1060 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 31m, remaining: ~1h 29m) 1303/2073 tested (1061 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 31m, remaining: ~1h 29m) 1305/2073 tested (1063 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 29m) 1306/2073 tested (1064 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 28m) 1308/2073 tested (1066 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 28m) 1309/2073 tested (1067 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 28m) 1311/2073 tested (1069 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 28m) 1312/2073 tested (1070 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 28m) 1314/2073 tested (1072 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 28m) 1315/2073 tested (1073 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 33m, remaining: ~1h 27m) 1317/2073 tested (1075 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 33m, remaining: ~1h 27m) 1318/2073 tested (1076 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 33m, remaining: ~1h 27m) 1320/2073 tested (1078 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 33m, remaining: ~1h 27m) 1321/2073 tested (1079 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 33m, remaining: ~1h 27m) 1323/2073 tested (1081 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 33m, remaining: ~1h 27m) 1324/2073 tested (1082 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 34m, remaining: ~1h 26m) 1325/2073 tested (1083 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 26m) 1327/2073 tested (1085 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 26m) 1328/2073 tested (1086 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 26m) 1330/2073 tested (1088 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 26m) 1331/2073 tested (1089 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 25m) 1333/2073 tested (1091 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 35m, remaining: ~1h 25m) 1334/2073 tested (1092 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 35m, remaining: ~1h 25m) 1336/2073 tested (1094 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 35m, remaining: ~1h 25m) 1337/2073 tested (1095 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 35m, remaining: ~1h 25m) 1339/2073 tested (1097 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 35m, remaining: ~1h 25m) 1340/2073 tested (1098 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 35m, remaining: ~1h 24m) 1342/2073 tested (1100 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 36m, remaining: ~1h 24m) 1343/2073 tested (1101 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 36m, remaining: ~1h 24m) 1345/2073 tested (1103 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 36m, remaining: ~1h 24m) 1346/2073 tested (1104 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 36m, remaining: ~1h 24m) 1347/2073 tested (1105 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 24m) 1349/2073 tested (1107 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 23m) 1350/2073 tested (1108 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 23m) 1352/2073 tested (1110 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 23m) 1353/2073 tested (1111 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 23m) 1355/2073 tested (1113 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 23m) 1356/2073 tested (1114 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 23m) 1358/2073 tested (1116 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 22m) 1359/2073 tested (1117 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 38m, remaining: ~1h 22m) 1361/2073 tested (1119 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 38m, remaining: ~1h 22m) 1362/2073 tested (1120 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 38m, remaining: ~1h 22m) 1364/2073 tested (1122 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 38m, remaining: ~1h 22m) 1365/2073 tested (1123 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 38m, remaining: ~1h 21m) 1367/2073 tested (1125 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 38m, remaining: ~1h 21m) 1368/2073 tested (1126 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 21m) 1370/2073 tested (1128 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 21m) 1371/2073 tested (1129 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 21m) 1372/2073 tested (1130 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 21m) 1374/2073 tested (1132 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 21m) 1375/2073 tested (1133 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 20m) 1377/2073 tested (1135 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 40m, remaining: ~1h 20m) 1378/2073 tested (1136 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 40m, remaining: ~1h 20m) 1380/2073 tested (1138 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 40m, remaining: ~1h 20m) 1381/2073 tested (1139 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 40m, remaining: ~1h 20m) 1383/2073 tested (1141 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 40m, remaining: ~1h 19m) 1384/2073 tested (1142 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 40m, remaining: ~1h 19m) 1386/2073 tested (1144 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 41m, remaining: ~1h 19m) 1387/2073 tested (1145 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 19m) 1389/2073 tested (1147 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 19m) 1390/2073 tested (1148 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 19m) 1392/2073 tested (1150 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 18m) 1393/2073 tested (1151 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 18m) 1394/2073 tested (1152 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 42m, remaining: ~1h 18m) 1396/2073 tested (1154 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 42m, remaining: ~1h 18m) 1397/2073 tested (1155 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 42m, remaining: ~1h 18m) 1399/2073 tested (1157 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 42m, remaining: ~1h 18m) 1400/2073 tested (1158 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 42m, remaining: ~1h 17m) 1402/2073 tested (1160 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 42m, remaining: ~1h 17m) 1403/2073 tested (1161 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 43m, remaining: ~1h 17m) 1405/2073 tested (1163 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 43m, remaining: ~1h 17m) 1406/2073 tested (1164 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 43m, remaining: ~1h 17m) 1408/2073 tested (1166 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 43m, remaining: ~1h 17m) 1409/2073 tested (1167 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 16m) 1411/2073 tested (1169 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 16m) 1412/2073 tested (1170 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 44m, remaining: ~1h 16m) 1414/2073 tested (1172 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 44m, remaining: ~1h 16m) 1415/2073 tested (1173 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 44m, remaining: ~1h 16m) 1417/2073 tested (1175 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 44m, remaining: ~1h 15m) 1418/2073 tested (1176 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 44m, remaining: ~1h 15m) 1419/2073 tested (1177 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 44m, remaining: ~1h 15m) 1421/2073 tested (1179 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 45m, remaining: ~1h 15m) 1422/2073 tested (1180 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 45m, remaining: ~1h 15m) 1424/2073 tested (1182 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 45m, remaining: ~1h 15m) 1425/2073 tested (1183 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 45m, remaining: ~1h 14m) 1427/2073 tested (1185 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 45m, remaining: ~1h 14m) 1428/2073 tested (1186 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 45m, remaining: ~1h 14m) 1430/2073 tested (1188 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 14m) 1431/2073 tested (1189 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 14m) 1433/2073 tested (1191 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 14m) 1434/2073 tested (1192 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 13m) 1436/2073 tested (1194 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 13m) 1437/2073 tested (1195 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 13m) 1439/2073 tested (1197 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 47m, remaining: ~1h 13m) 1440/2073 tested (1198 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 47m, remaining: ~1h 13m) 1441/2073 tested (1199 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 47m, remaining: ~1h 13m) 1443/2073 tested (1201 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 47m, remaining: ~1h 12m) 1444/2073 tested (1202 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 47m, remaining: ~1h 12m) 1446/2073 tested (1204 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 47m, remaining: ~1h 12m) 1447/2073 tested (1205 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 48m, remaining: ~1h 12m) 1449/2073 tested (1207 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 48m, remaining: ~1h 12m) 1450/2073 tested (1208 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 11m) 1452/2073 tested (1210 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 11m) 1453/2073 tested (1211 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 11m) 1455/2073 tested (1213 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 11m) 1456/2073 tested (1214 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 49m, remaining: ~1h 11m) 1458/2073 tested (1216 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 49m, remaining: ~1h 11m) 1459/2073 tested (1217 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 49m, remaining: ~1h 10m) 1461/2073 tested (1219 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 49m, remaining: ~1h 10m) 1462/2073 tested (1220 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 49m, remaining: ~1h 10m) 1463/2073 tested (1221 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 49m, remaining: ~1h 10m) 1465/2073 tested (1223 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 50m, remaining: ~1h 10m) 1466/2073 tested (1224 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 50m, remaining: ~1h 10m) 1468/2073 tested (1226 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 50m, remaining: ~1h 10m) 1469/2073 tested (1227 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 50m, remaining: ~1h 9m) 1471/2073 tested (1229 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 9m) 1472/2073 tested (1230 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 9m) 1474/2073 tested (1232 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 51m, remaining: ~1h 9m) 1475/2073 tested (1233 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 51m, remaining: ~1h 9m) 1477/2073 tested (1235 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 51m, remaining: ~1h 8m) 1478/2073 tested (1236 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 51m, remaining: ~1h 8m) 1480/2073 tested (1238 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 51m, remaining: ~1h 8m) 1481/2073 tested (1239 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 51m, remaining: ~1h 8m) 1483/2073 tested (1241 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 52m, remaining: ~1h 8m) 1484/2073 tested (1242 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 52m, remaining: ~1h 8m) 1485/2073 tested (1243 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 52m, remaining: ~1h 7m) 1487/2073 tested (1245 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 52m, remaining: ~1h 7m) 1488/2073 tested (1246 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 52m, remaining: ~1h 7m) 1490/2073 tested (1248 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 52m, remaining: ~1h 7m) 1491/2073 tested (1249 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 7m) 1493/2073 tested (1251 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 7m) 1494/2073 tested (1252 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 6m) 1496/2073 tested (1254 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 6m) 1497/2073 tested (1255 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 6m) 1499/2073 tested (1257 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 6m) 1500/2073 tested (1258 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 54m, remaining: ~1h 6m) 1502/2073 tested (1260 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 54m, remaining: ~1h 6m) 1503/2073 tested (1261 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 54m, remaining: ~1h 5m) 1505/2073 tested (1263 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 54m, remaining: ~1h 5m) 1506/2073 tested (1264 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 54m, remaining: ~1h 5m) 1508/2073 tested (1266 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 54m, remaining: ~1h 5m) 1509/2073 tested (1267 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 55m, remaining: ~1h 5m) 1510/2073 tested (1268 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 55m, remaining: ~1h 4m) 1512/2073 tested (1270 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 55m, remaining: ~1h 4m) 1513/2073 tested (1271 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 4m) 1515/2073 tested (1273 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 4m) 1516/2073 tested (1274 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 4m) 1518/2073 tested (1276 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 56m, remaining: ~1h 4m) 1519/2073 tested (1277 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 56m, remaining: ~1h 3m) 1521/2073 tested (1279 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 56m, remaining: ~1h 3m) 1522/2073 tested (1280 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 56m, remaining: ~1h 3m) 1524/2073 tested (1282 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 56m, remaining: ~1h 3m) 1528/2073 tested (1282 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 56m, remaining: ~1h 2m) 1531/2073 tested (1284 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 57m, remaining: ~1h 2m) 1532/2073 tested (1285 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 57m, remaining: ~1h 2m) 1534/2073 tested (1287 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 2m) 1535/2073 tested (1288 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 1m) 1537/2073 tested (1290 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 1m) 1538/2073 tested (1291 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 1m) 1540/2073 tested (1293 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 58m, remaining: ~1h 1m) 1541/2073 tested (1294 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 58m, remaining: ~1h 1m) 1543/2073 tested (1296 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 58m, remaining: ~1h 1m) 1544/2073 tested (1297 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 58m, remaining: ~1h 1m) 1545/2073 tested (1298 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 58m, remaining: ~1h 0m) 1547/2073 tested (1300 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 58m, remaining: ~1h 0m) 1548/2073 tested (1301 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 59m, remaining: ~1h 0m) 1550/2073 tested (1303 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 59m, remaining: ~1h 0m) 1551/2073 tested (1304 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 59m, remaining: ~1h 0m) 1553/2073 tested (1306 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 59m, remaining: ~59m) 1554/2073 tested (1307 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~59m) 1556/2073 tested (1309 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~59m) 1557/2073 tested (1310 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~59m) 1559/2073 tested (1312 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~59m) 1560/2073 tested (1313 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~58m) 1562/2073 tested (1315 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~58m) 1563/2073 tested (1316 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~58m) 1565/2073 tested (1318 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~58m) 1566/2073 tested (1319 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 1m, remaining: ~58m) 1567/2073 tested (1320 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 1m, remaining: ~58m) 1569/2073 tested (1322 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 1m, remaining: ~58m) 1570/2073 tested (1323 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 1m, remaining: ~57m) 1572/2073 tested (1325 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 1m, remaining: ~57m) 1573/2073 tested (1326 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 1m, remaining: ~57m) 1575/2073 tested (1328 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~57m) 1576/2073 tested (1329 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~57m) 1578/2073 tested (1331 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~57m) 1579/2073 tested (1332 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~56m) 1581/2073 tested (1334 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~56m) 1582/2073 tested (1335 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~56m) 1584/2073 tested (1337 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 3m, remaining: ~56m) 1585/2073 tested (1338 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 3m, remaining: ~56m) 1587/2073 tested (1340 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 3m, remaining: ~55m) 1588/2073 tested (1341 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 3m, remaining: ~55m) 1589/2073 tested (1342 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 3m, remaining: ~55m) 1591/2073 tested (1344 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 3m, remaining: ~55m) 1592/2073 tested (1345 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 4m, remaining: ~55m) 1594/2073 tested (1347 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 4m, remaining: ~55m) 1595/2073 tested (1348 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~54m) 1597/2073 tested (1350 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~54m) 1598/2073 tested (1351 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~54m) 1600/2073 tested (1353 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~54m) 1601/2073 tested (1354 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 5m, remaining: ~54m) 1603/2073 tested (1356 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 5m, remaining: ~54m) 1604/2073 tested (1357 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 5m, remaining: ~53m) 1606/2073 tested (1359 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 5m, remaining: ~53m) 1607/2073 tested (1360 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 5m, remaining: ~53m) 1609/2073 tested (1362 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 5m, remaining: ~53m) 1610/2073 tested (1363 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 6m, remaining: ~53m) 1611/2073 tested (1364 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 6m, remaining: ~53m) 1613/2073 tested (1366 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 6m, remaining: ~52m) 1614/2073 tested (1367 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 6m, remaining: ~52m) 1616/2073 tested (1369 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~52m) 1617/2073 tested (1370 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~52m) 1619/2073 tested (1372 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 7m, remaining: ~52m) 1620/2073 tested (1373 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 7m, remaining: ~52m) 1622/2073 tested (1375 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 7m, remaining: ~51m) 1623/2073 tested (1376 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 7m, remaining: ~51m) 1625/2073 tested (1378 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 7m, remaining: ~51m) 1626/2073 tested (1379 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 7m, remaining: ~51m) 1628/2073 tested (1381 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 8m, remaining: ~51m) 1629/2073 tested (1382 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 8m, remaining: ~50m) 1631/2073 tested (1384 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 8m, remaining: ~50m) 1632/2073 tested (1385 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 8m, remaining: ~50m) 1634/2073 tested (1387 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 8m, remaining: ~50m) 1635/2073 tested (1388 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 8m, remaining: ~50m) 1636/2073 tested (1389 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~50m) 1638/2073 tested (1391 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~50m) 1639/2073 tested (1392 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~49m) 1641/2073 tested (1394 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~49m) 1642/2073 tested (1395 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~49m) 1644/2073 tested (1397 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~49m) 1645/2073 tested (1398 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 10m, remaining: ~49m) 1647/2073 tested (1400 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 10m, remaining: ~49m) 1648/2073 tested (1401 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 10m, remaining: ~48m) 1650/2073 tested (1403 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 10m, remaining: ~48m) 1651/2073 tested (1404 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 10m, remaining: ~48m) 1653/2073 tested (1406 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 10m, remaining: ~48m) 1654/2073 tested (1407 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 11m, remaining: ~48m) 1656/2073 tested (1409 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 11m, remaining: ~47m) 1657/2073 tested (1410 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 11m, remaining: ~47m) 1658/2073 tested (1411 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~47m) 1660/2073 tested (1413 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~47m) 1661/2073 tested (1414 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~47m) 1663/2073 tested (1416 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 12m, remaining: ~47m) 1664/2073 tested (1417 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 12m, remaining: ~46m) 1666/2073 tested (1419 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 12m, remaining: ~46m) 1667/2073 tested (1420 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 12m, remaining: ~46m) 1669/2073 tested (1422 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 12m, remaining: ~46m) 1670/2073 tested (1423 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 12m, remaining: ~46m) 1672/2073 tested (1425 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 13m, remaining: ~46m) 1673/2073 tested (1426 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 13m, remaining: ~45m) 1675/2073 tested (1428 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 13m, remaining: ~45m) 1676/2073 tested (1429 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 13m, remaining: ~45m) 1678/2073 tested (1431 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 13m, remaining: ~45m) 1679/2073 tested (1432 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~45m) 1680/2073 tested (1433 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 14m, remaining: ~45m) 1682/2073 tested (1435 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 14m, remaining: ~44m) 1683/2073 tested (1436 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 14m, remaining: ~44m) 1685/2073 tested (1438 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 14m, remaining: ~44m) 1686/2073 tested (1439 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 14m, remaining: ~44m) 1688/2073 tested (1441 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 14m, remaining: ~44m) 1689/2073 tested (1442 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 15m, remaining: ~44m) 1691/2073 tested (1444 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 15m, remaining: ~43m) 1692/2073 tested (1445 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 15m, remaining: ~43m) 1694/2073 tested (1447 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 15m, remaining: ~43m) 1695/2073 tested (1448 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 15m, remaining: ~43m) 1697/2073 tested (1450 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 15m, remaining: ~43m) 1698/2073 tested (1451 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 16m, remaining: ~43m) 1699/2073 tested (1452 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~42m) 1701/2073 tested (1454 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~42m) 1702/2073 tested (1455 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~42m) 1704/2073 tested (1457 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~42m) 1705/2073 tested (1458 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~42m) 1707/2073 tested (1460 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 17m, remaining: ~42m) 1708/2073 tested (1461 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 17m, remaining: ~41m) 1710/2073 tested (1463 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 17m, remaining: ~41m) 1711/2073 tested (1464 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 17m, remaining: ~41m) 1713/2073 tested (1466 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 17m, remaining: ~41m) 1714/2073 tested (1467 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 17m, remaining: ~41m) 1716/2073 tested (1469 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 18m, remaining: ~41m) 1717/2073 tested (1470 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 18m, remaining: ~40m) 1718/2073 tested (1471 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 18m, remaining: ~40m) 1720/2073 tested (1473 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~40m) 1721/2073 tested (1474 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~40m) 1723/2073 tested (1476 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~40m) 1724/2073 tested (1477 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 19m, remaining: ~40m) 1726/2073 tested (1479 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 19m, remaining: ~39m) 1727/2073 tested (1480 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 19m, remaining: ~39m) 1729/2073 tested (1482 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 19m, remaining: ~39m) 1730/2073 tested (1483 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 19m, remaining: ~39m) 1732/2073 tested (1485 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 19m, remaining: ~39m) 1733/2073 tested (1486 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 20m, remaining: ~38m) 1735/2073 tested (1488 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 20m, remaining: ~38m) 1736/2073 tested (1489 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 20m, remaining: ~38m) 1738/2073 tested (1491 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 20m, remaining: ~38m) 1739/2073 tested (1492 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 20m, remaining: ~38m) 1740/2073 tested (1493 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~38m) 1742/2073 tested (1495 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 21m, remaining: ~38m) 1743/2073 tested (1496 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 21m, remaining: ~37m) 1745/2073 tested (1498 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 21m, remaining: ~37m) 1746/2073 tested (1499 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 21m, remaining: ~37m) 1748/2073 tested (1501 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 21m, remaining: ~37m) 1749/2073 tested (1502 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 21m, remaining: ~37m) 1751/2073 tested (1504 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 22m, remaining: ~37m) 1752/2073 tested (1505 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 22m, remaining: ~36m) 1754/2073 tested (1507 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 22m, remaining: ~36m) 1755/2073 tested (1508 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 22m, remaining: ~36m) 1756/2073 tested (1509 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 22m, remaining: ~36m) 1758/2073 tested (1511 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 22m, remaining: ~36m) 1759/2073 tested (1512 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 23m, remaining: ~35m) 1761/2073 tested (1514 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 23m, remaining: ~35m) 1762/2073 tested (1515 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 23m, remaining: ~35m) 1764/2073 tested (1517 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 23m, remaining: ~35m) 1765/2073 tested (1518 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 23m, remaining: ~35m) 1767/2073 tested (1520 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 23m, remaining: ~35m) 1768/2073 tested (1521 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 24m, remaining: ~34m) 1770/2073 tested (1523 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 24m, remaining: ~34m) 1771/2073 tested (1524 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 24m, remaining: ~34m) 1772/2073 tested (1525 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 24m, remaining: ~34m) 1774/2073 tested (1527 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 24m, remaining: ~34m) 1775/2073 tested (1528 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 24m, remaining: ~34m) 1777/2073 tested (1530 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 25m, remaining: ~34m) 1778/2073 tested (1531 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 25m, remaining: ~33m) 1780/2073 tested (1533 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 25m, remaining: ~33m) 1781/2073 tested (1534 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~33m) 1783/2073 tested (1536 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~33m) 1784/2073 tested (1537 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~33m) 1786/2073 tested (1539 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 26m, remaining: ~32m) 1787/2073 tested (1540 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 26m, remaining: ~32m) 1788/2073 tested (1541 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 26m, remaining: ~32m) 1790/2073 tested (1543 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 26m, remaining: ~32m) 1791/2073 tested (1544 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 26m, remaining: ~32m) 1793/2073 tested (1546 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 26m, remaining: ~32m) 1794/2073 tested (1547 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 27m, remaining: ~31m) 1796/2073 tested (1549 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 27m, remaining: ~31m) 1797/2073 tested (1550 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 27m, remaining: ~31m) 1799/2073 tested (1552 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 27m, remaining: ~31m) 1800/2073 tested (1553 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 27m, remaining: ~31m) 1802/2073 tested (1555 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 27m, remaining: ~31m) 1803/2073 tested (1556 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 28m, remaining: ~30m) 1805/2073 tested (1558 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 28m, remaining: ~30m) 1806/2073 tested (1559 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 28m, remaining: ~30m) 1808/2073 tested (1561 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 28m, remaining: ~30m) 1809/2073 tested (1562 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 28m, remaining: ~30m) 1810/2073 tested (1563 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 28m, remaining: ~30m) 1812/2073 tested (1565 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 29m, remaining: ~29m) 1813/2073 tested (1566 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 29m, remaining: ~29m) 1815/2073 tested (1568 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 29m, remaining: ~29m) 1816/2073 tested (1569 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 29m, remaining: ~29m) 1818/2073 tested (1571 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 29m, remaining: ~29m) 1819/2073 tested (1572 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 29m, remaining: ~29m) 1821/2073 tested (1574 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 30m, remaining: ~28m) 1822/2073 tested (1575 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 30m, remaining: ~28m) 1824/2073 tested (1577 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 30m, remaining: ~28m) 1825/2073 tested (1578 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 30m, remaining: ~28m) 1827/2073 tested (1580 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 30m, remaining: ~28m) 1828/2073 tested (1581 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 30m, remaining: ~28m) 1829/2073 tested (1582 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 31m, remaining: ~27m) 1831/2073 tested (1584 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 31m, remaining: ~27m) 1832/2073 tested (1585 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 31m, remaining: ~27m) 1834/2073 tested (1587 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 31m, remaining: ~27m) 1835/2073 tested (1588 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 31m, remaining: ~27m) 1837/2073 tested (1590 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 31m, remaining: ~27m) 1838/2073 tested (1591 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 32m, remaining: ~26m) 1840/2073 tested (1593 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 32m, remaining: ~26m) 1841/2073 tested (1594 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 32m, remaining: ~26m) 1843/2073 tested (1596 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 32m, remaining: ~26m) 1844/2073 tested (1597 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 32m, remaining: ~26m) 1845/2073 tested (1598 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 32m, remaining: ~26m) 1847/2073 tested (1600 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 33m, remaining: ~25m) 1848/2073 tested (1601 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 33m, remaining: ~25m) 1850/2073 tested (1603 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 33m, remaining: ~25m) 1851/2073 tested (1604 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 33m, remaining: ~25m) 1853/2073 tested (1606 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 33m, remaining: ~25m) 1854/2073 tested (1607 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 33m, remaining: ~25m) 1856/2073 tested (1609 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 34m, remaining: ~24m) 1857/2073 tested (1610 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 34m, remaining: ~24m) 1859/2073 tested (1612 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 34m, remaining: ~24m) 1860/2073 tested (1613 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 34m, remaining: ~24m) 1861/2073 tested (1614 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 34m, remaining: ~24m) 1863/2073 tested (1616 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 34m, remaining: ~24m) 1864/2073 tested (1617 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 35m, remaining: ~23m) 1866/2073 tested (1619 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 35m, remaining: ~23m) 1867/2073 tested (1620 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 35m, remaining: ~23m) 1869/2073 tested (1622 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 35m, remaining: ~23m) 1870/2073 tested (1623 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 35m, remaining: ~23m) 1872/2073 tested (1625 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 35m, remaining: ~23m) 1873/2073 tested (1626 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 36m, remaining: ~22m) 1875/2073 tested (1628 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 36m, remaining: ~22m) 1876/2073 tested (1629 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 36m, remaining: ~22m) 1878/2073 tested (1631 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 36m, remaining: ~22m) 1879/2073 tested (1632 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 36m, remaining: ~22m) 1880/2073 tested (1633 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 36m, remaining: ~22m) 1882/2073 tested (1635 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 37m, remaining: ~21m) 1883/2073 tested (1636 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 37m, remaining: ~21m) 1885/2073 tested (1638 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 37m, remaining: ~21m) 1886/2073 tested (1639 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 37m, remaining: ~21m) 1888/2073 tested (1641 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 37m, remaining: ~21m) 1889/2073 tested (1642 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 37m, remaining: ~20m) 1891/2073 tested (1644 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 38m, remaining: ~20m) 1892/2073 tested (1645 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 38m, remaining: ~20m) 1894/2073 tested (1647 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 38m, remaining: ~20m) 1895/2073 tested (1648 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 38m, remaining: ~20m) 1897/2073 tested (1650 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 38m, remaining: ~20m) 1898/2073 tested (1651 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 38m, remaining: ~20m) 1899/2073 tested (1652 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 39m, remaining: ~19m) 1901/2073 tested (1654 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 39m, remaining: ~19m) 1902/2073 tested (1655 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 39m, remaining: ~19m) 1904/2073 tested (1657 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 39m, remaining: ~19m) 1905/2073 tested (1658 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 39m, remaining: ~19m) 1907/2073 tested (1660 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 39m, remaining: ~19m) 1908/2073 tested (1661 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 40m, remaining: ~18m) 1910/2073 tested (1663 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 40m, remaining: ~18m) 1911/2073 tested (1664 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 40m, remaining: ~18m) 1913/2073 tested (1666 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 40m, remaining: ~18m) 1914/2073 tested (1667 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 40m, remaining: ~18m) 1916/2073 tested (1669 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 40m, remaining: ~17m) 1917/2073 tested (1670 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 41m, remaining: ~17m) 1918/2073 tested (1671 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 41m, remaining: ~17m) 1920/2073 tested (1673 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 41m, remaining: ~17m) 1921/2073 tested (1674 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 41m, remaining: ~17m) 1923/2073 tested (1676 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 41m, remaining: ~17m) 1924/2073 tested (1677 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 41m, remaining: ~16m) 1926/2073 tested (1679 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 42m, remaining: ~16m) 1927/2073 tested (1680 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 42m, remaining: ~16m) 1929/2073 tested (1682 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 42m, remaining: ~16m) 1930/2073 tested (1683 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 42m, remaining: ~16m) 1932/2073 tested (1685 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 42m, remaining: ~16m) 1933/2073 tested (1686 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 42m, remaining: ~15m) 1935/2073 tested (1688 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 43m, remaining: ~15m) 1936/2073 tested (1689 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 43m, remaining: ~15m) 1937/2073 tested (1690 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 43m, remaining: ~15m) 1939/2073 tested (1692 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 43m, remaining: ~15m) 1940/2073 tested (1693 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 43m, remaining: ~15m) 1942/2073 tested (1695 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 43m, remaining: ~14m) 1943/2073 tested (1696 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 44m, remaining: ~14m) 1945/2073 tested (1698 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 44m, remaining: ~14m) 1946/2073 tested (1699 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 44m, remaining: ~14m) 1948/2073 tested (1701 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 44m, remaining: ~14m) 1949/2073 tested (1702 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 44m, remaining: ~14m) 1951/2073 tested (1704 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 44m, remaining: ~13m) 1952/2073 tested (1705 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 45m, remaining: ~13m) 1954/2073 tested (1707 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 45m, remaining: ~13m) 1955/2073 tested (1708 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 45m, remaining: ~13m) 1956/2073 tested (1709 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 45m, remaining: ~13m) 1958/2073 tested (1711 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 45m, remaining: ~13m) 1959/2073 tested (1712 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 45m, remaining: ~12m) 1961/2073 tested (1714 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 46m, remaining: ~12m) 1962/2073 tested (1715 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 46m, remaining: ~12m) 1964/2073 tested (1717 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 46m, remaining: ~12m) 1965/2073 tested (1718 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 46m, remaining: ~12m) 1967/2073 tested (1720 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 46m, remaining: ~12m) 1968/2073 tested (1721 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 46m, remaining: ~11m) 1970/2073 tested (1723 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 47m, remaining: ~11m) 1971/2073 tested (1724 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 47m, remaining: ~11m) 1972/2073 tested (1725 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 47m, remaining: ~11m) 1974/2073 tested (1727 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 47m, remaining: ~11m) 1975/2073 tested (1728 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 47m, remaining: ~11m) 1977/2073 tested (1730 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 47m, remaining: ~10m) 1978/2073 tested (1731 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 48m, remaining: ~10m) 1980/2073 tested (1733 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 48m, remaining: ~10m) 1981/2073 tested (1734 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 48m, remaining: ~10m) 1983/2073 tested (1736 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 48m, remaining: ~10m) 1984/2073 tested (1737 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 48m, remaining: ~10m) 1986/2073 tested (1739 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 48m, remaining: ~9m) 1987/2073 tested (1740 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 49m, remaining: ~9m) 1989/2073 tested (1742 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 49m, remaining: ~9m) 1990/2073 tested (1743 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 49m, remaining: ~9m) 1991/2073 tested (1744 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 49m, remaining: ~9m) 1993/2073 tested (1746 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 49m, remaining: ~9m) 1994/2073 tested (1747 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 49m, remaining: ~8m) 1996/2073 tested (1749 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 50m, remaining: ~8m) 1997/2073 tested (1750 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 50m, remaining: ~8m) 1999/2073 tested (1752 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 50m, remaining: ~8m) 2000/2073 tested (1753 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 50m, remaining: ~8m) 2002/2073 tested (1755 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 50m, remaining: ~8m) 2003/2073 tested (1756 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 50m, remaining: ~7m) 2005/2073 tested (1758 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 51m, remaining: ~7m) 2006/2073 tested (1759 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 51m, remaining: ~7m) 2008/2073 tested (1761 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 51m, remaining: ~7m) 2009/2073 tested (1762 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 51m, remaining: ~7m) 2010/2073 tested (1763 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 51m, remaining: ~7m) 2012/2073 tested (1765 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 51m, remaining: ~6m) 2013/2073 tested (1766 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 52m, remaining: ~6m) 2015/2073 tested (1768 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 52m, remaining: ~6m) 2016/2073 tested (1769 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 52m, remaining: ~6m) 2018/2073 tested (1771 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 52m, remaining: ~6m) 2019/2073 tested (1772 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 52m, remaining: ~5m) 2021/2073 tested (1774 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 52m, remaining: ~5m) 2022/2073 tested (1775 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 53m, remaining: ~5m) 2024/2073 tested (1777 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 53m, remaining: ~5m) 2025/2073 tested (1778 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 53m, remaining: ~5m) 2027/2073 tested (1780 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 53m, remaining: ~5m) 2028/2073 tested (1781 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 53m, remaining: ~5m) 2029/2073 tested (1782 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 53m, remaining: ~4m) 2031/2073 tested (1784 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 54m, remaining: ~4m) 2032/2073 tested (1785 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 54m, remaining: ~4m) 2034/2073 tested (1787 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 54m, remaining: ~4m) 2035/2073 tested (1788 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 54m, remaining: ~4m) 2037/2073 tested (1790 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 54m, remaining: ~4m) 2038/2073 tested (1791 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 54m, remaining: ~3m) 2042/2073 tested (1792 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 55m, remaining: ~3m) 2044/2073 tested (1794 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 55m, remaining: ~3m) 2045/2073 tested (1795 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 55m, remaining: ~2m) 2047/2073 tested (1797 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 55m, remaining: ~2m) 2048/2073 tested (1798 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 55m, remaining: ~2m) 2050/2073 tested (1800 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 55m, remaining: ~2m) 2051/2073 tested (1801 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 56m, remaining: ~2m) 2052/2073 tested (1802 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 56m, remaining: ~2m) 2054/2073 tested (1804 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 56m, remaining: ~2m) 2055/2073 tested (1805 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 56m, remaining: ~1m) 2057/2073 tested (1807 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 56m, remaining: ~1m) 2058/2073 tested (1808 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 56m, remaining: ~1m) 2060/2073 tested (1810 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 57m, remaining: ~1m) 2061/2073 tested (1811 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 57m, remaining: ~1m) 2063/2073 tested (1813 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 57m, remaining: ~1m) 2064/2073 tested (1814 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 57m, remaining: <1m) 2066/2073 tested (1816 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 57m, remaining: <1m) 2067/2073 tested (1817 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 57m, remaining: <1m) 2068/2073 tested (1818 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 58m, remaining: <1m) 2070/2073 tested (1820 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 58m, remaining: <1m) 2071/2073 tested (1821 survived, 87 timed out)

All tests
  ✓ All tests (killed 163)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap === "object") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {});

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", 0);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "bootsrap"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           1("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           null("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("fulfilled", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("rejected", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("pending", definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", 42);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", "Hello, world!");

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define !== "function" && define.amd) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd === undefined) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd !== "function") {

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           1 + 1(definition);

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           "Hello, world!"(definition);

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           null(definition);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(definition());

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(null);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(function () {});

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses.ok() && ses.makeQ) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses.ok() || ses.makeQ) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses.ok() ? ses.makeQ : noop) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.ng()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.ok() && false) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.ok() || true) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.isNotOk()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.isOkay()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window === "undefined" && typeof self === "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "object" || typeof self !== "object") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "function" || typeof self !== "function") {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (domain && domain.enter()) {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.exit();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.run();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.bind();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length - 1) {

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length * 2) {

[Survived] PrecomputedMutator
q.js:129:20
-               task = laterQueue.pop();
+               task = laterQueue.shift();

[Survived] PrecomputedMutator
q.js:130:13
-               runSingle(task);
+               noop(task);

[Survived] PrecomputedMutator
q.js:130:23
-               runSingle(task);
+               runSingle(function () {});

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isBrowser) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isMobile) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   clearTimeout(flush, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(1), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(function () {}), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (null) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (undefined) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (false) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.run();

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.bind();

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (domain && false) {

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               null();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (!flushing && true) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "object") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "string") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind({});

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setInterval.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind({}, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush());

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, null);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, undefined);

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessagePort !== "undefined") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageEvent !== "undefined") {

[Survived] PrecomputedMutator
q.js:219:13
-               flush();
+               flush + 1();

[Survived] PrecomputedMutator
q.js:219:13
-               flush();
+               flush = undefined();

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(Math.random());

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage("hello");

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(undefined);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, "0");

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(undefined, 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(requestAnimationFrame(flush), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:241:25
-           laterQueue.push(task);
+           laterQueue.push(function () {});

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (!flushing || true) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing && false) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (!arguments.length) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (1 + 1);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while ("hello");

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (null);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index > this) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index <= this) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index >= this) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (++index > length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index++ >= length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index + 1 >= length) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index < length - 1; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = 0) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (this[index]) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (this.hasOwnProperty(index)) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (Object.prototype.hasOwnProperty.call(this, index)) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis * 2, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index - 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] = "foo", index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], 0);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i == this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i = i + 1) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] + value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] * value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.pop(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.shift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, [value, index, self]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self)());

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self, 42));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call({}, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, null, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value + 1, index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, ++index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index - 1, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, undefined));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, null));

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {}) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && key !== "prototype") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && typeof key !== "string") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && key !== "length") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object[key])) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(key in object)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object.hasOwnProperty(key))) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (!object_hasOwnProperty(object, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(undefined, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, "key" + 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + "1")) {

[Survived] PrecomputedMutator
q.js:341:13
-               keys.push(key);
+               keys.pop(key);

[Survived] PrecomputedMutator
q.js:341:13
-               keys.push(key);
+               keys.shift(key);

[Survived] PrecomputedMutator
q.js:341:13
-               keys.push(key);
+               keys.unshift(key);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key++);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key + 1);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key * 2);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_hasOwnProperty(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           array_reduce(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           isObject(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(null) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(undefined) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString({}) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue === "function") {

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (!hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.then(); !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise[Symbol.iterator](); !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = Promise.resolve(promise); !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p.source; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p.source; p = p) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p == false; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p != true; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source.source.source) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ !== p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: Math.random() * p.stackCounter,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(undefined, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(null, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty({}, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__maximumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__" + 1, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.pop(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.shift(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.slice(1));

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.slice(0, -1));

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.split("\n").reverse()[0]);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.pop(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.shift(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.name);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.fileName);

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.concat("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.push("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.pop("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + "From previous event:\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + "From previous event:\n" + "\n");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n").reverse().join("\n"));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.replace(/^/gm, "> "));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n").filter(line => line.indexOf("q.js") === -1).join("\n"));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: false
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stacktrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack".toLowerCase(), {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack".split("").reverse().join(""), {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack.toUpperCase(),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack.replace("Q", "q"),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(" ");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\t");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\\n");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = -1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = Math.floor(Math.random() * array.length); i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i !== lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i *= 2) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (line.match(/^at .+ \((.+):(\d+):(\d+)\)$/)) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame && false(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame || true(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame == false(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame || isInternalFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame && isInternalFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame ^ isInternalFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.pop(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.shift(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.unshift(line);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line + 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line - 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line * 2);

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\t");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("<br>");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.startsWith("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.endsWith("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.match("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.search("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.replace(/at/g, "at at"));

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.slice(0, -1));

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "string"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], null(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], undefined(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.trim());

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.substring(0, 10));

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2.length) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2.join("")) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[0])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.replace(")", "("));

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.replace("(", ")"));

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.replace("@", " "));

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[0]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3.length > 0) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3.indexOf(stackLine) > -1) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], String(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], undefined(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3.length)];

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber[0](stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber[1](stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber[2](stackLine);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(" ").slice(-1)[0]);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (typeof fileNameAndLineNumber === "undefined") {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks) {

[Survived] PrecomputedMutator
q.js:466:21
-           var lines = e.stack.split("\n");
+           var lines = e.stack.slice("\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\n\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\t");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("");

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("%") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("&") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(lines[lines.length - 1]);

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[0]) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[1]) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.length) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn("")) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console.warn === "undefined") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console !== "object") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback(null, arguments));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback(arguments));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback(null, arguments[0]));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.bind(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(promise, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(resolvedPromise, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, undefined);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, 0);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (value === Promise) {

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(defer.prototype.constructor);

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(defer.prototype.constructor.prototype);

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[1] === undefined) { // progress operand

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[1] + 1);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(0, args);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages[0]) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.pop()) {

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.promise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(reject(resolvedPromise));

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(fulfill(resolvedPromise.promise));

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === undefined) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === "foo") {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (!isPromise(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseLike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue + 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue * 2)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue - 1)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise == null) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || !hasStacks) {

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") - 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 2);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(" ") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.promise, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.resolve, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.reject, message);

[Survived] PrecomputedMutator
q.js:624:62
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message.concat(new Promise()));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise + 1) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise.promise) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(undefined));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(value + 1));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(resolve(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(notify(value));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value * 2));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value - 1));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise === true) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== false) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== undefined) {

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener("progress");

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(0);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(null);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.message) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.stack) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.name) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length < 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 0) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.fulfill(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 4));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[0], 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments.length, 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, -1));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.fulfill(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.settle(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(0);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver == null) {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== null) {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== "object") {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.resolve();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.reject();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve(1), deferred.reject(0), deferred.notify(1));

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve(deferred.promise), deferred.reject(deferred.promise), deferred.notify(deferred.promise));

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(undefined, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.makeNodeResolver, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.fulfill);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.promise);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(null).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(y + 1);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x + y);

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([null, null]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x + y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x - y) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i == len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = answerPs.length - 1) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.reject(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.all(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.race(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i + 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i - 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return promise(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return deferred.promise(Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === undefined) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== null) {

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(null, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply({}, args);

[Survived] PrecomputedMutator
q.js:808:56
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, [args[0]].concat(args.slice(1)));

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.then(function (value) {
+     return value + 1;
+   }), op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.then(function (value) {
+     return value - 1;
+   }), op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.then(function (value) {
+     return value * 2;
+   }), op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op + 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op - 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op * 2, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[0]);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args.length);

[Survived] PrecomputedMutator
q.js:813:22
-               result = reject(exception);
+               result = resolve(exception);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("Different error message"));

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(undefined);

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.state) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect()) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.call()) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "pending") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "pending") {

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed + 1(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed * 2(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed / 0(value) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done && false) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value + 1);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value - 1);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value * 2);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror()) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror = function () {}) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror = function () {
+     throw new Error();
+   }) {

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.message);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.stack);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.toString());

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw && !threw) {

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(undefined);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify("hello");

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Q.fcall(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Q.all(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Q.reject(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(null).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(undefined).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(0).tap(callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback(value));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback(value, value));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback(value, value, value));

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = null(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = undefined(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = 1(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q.reject(new Error("callback was not a function")));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q.resolve(callback));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q.resolve(callback()).then(function (value) {
+     return value;
+   }));

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.fapply(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall("foo").thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(0);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, progressed, fulfilled);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(progressed, fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(undefined).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value.then(undefined)).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value.then(function () {
+     throw "error";
+   })).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(deferred, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, resolved, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, rejected);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return undefined;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value + 1;
+   });

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Q.reject(value)).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Q.resolve(value)).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Q.defer()).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(0);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw reason.message;
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(null).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(undefined).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(0).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(undefined);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject("rejected");

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromise(value) && value.inspect().state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromise(value) && value.inspect().state === "rejected") {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromise(value) && value.inspect().state === "pending") {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (!isPromise(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isFulfilled(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value - 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value * 2)) {

[Survived] PrecomputedMutator
q.js:992:25
-           var inspected = value.inspect();
+           var inspected = value.inspect.value();

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return !isPromise(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isFulfilled(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.then()) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.catch()) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.finally()) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.state().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.fulfilled().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.rejected().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromiseAlike(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isFulfilled(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isRejected(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(!object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.valueOf()) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.toString()) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.value().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return !isPromise(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPending(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(isPromise(object) && object.inspect().state === "rejected") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(isPromise(object) && object.inspect().state === "pending") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(isPromise(object) && object.inspect().state === "fulfilled") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections && untrackRejection) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections == false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections != false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.indexOf(promise) > -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.length, 0) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then()) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.catch()) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, null);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejection", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason + 1, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.toString(), promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.message, promise);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function () {
+     throw new Error("Error message");
+   }));

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function () {
+     return Q.reject(reason);
+   }));

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function () {
+     return Q.fulfill(value);
+   }));

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.then(function () {
+     throw new Error("failed");
+   }));

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.then(function () {
+     return null;
+   }));

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.then(function () {
+     return 42;
+   }));

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(new Promise(() => {}));

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== null) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== undefined) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined") {

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.message);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.name);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.code);

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(reason + " (no stack) ");

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(reason + " (no stack)");

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections && unhandledRejections.length > 0) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice());

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(0, -1));

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.splice(0, 1));

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.splice(0, unhandledRejections.length), promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at < 0) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > 0) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === 0) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, unhandledRejections);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, unhandledReasons);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.push(promise), promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, undefined);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, reportedUnhandledRejections[0]);

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport > -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport !== -1 && reportedUnhandledRejections.indexOf(promise) === -1) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", null, promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("unhandledRejection", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejected", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at] + 1, promise);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(reportedUnhandledRejections.length - atReport - 1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(reportedUnhandledRejections.length - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, array.length - 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at = at + 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons.length - 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at.length, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, null);

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledRejections.length = 0();

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       trackUnhandledRejections = false();

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected && false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected || true) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, undefined);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null, reason);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       untrackRejection(rejection, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(rejection.reason, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === null) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === void 0) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.concat(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(this, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.slice());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.concat());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.map(function (arg) {
+     return arg;
+   }));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice());

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat());

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, [].concat(args));

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value + 1, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value * 2, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value - 1, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, null);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, []);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, {});

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(null);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(undefined);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply({});

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.toString(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(window, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.keys(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(undefined);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys({});

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.progress);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               Q.reject(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(new Error("rejection"));

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, args, op);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.concat(object));

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return "dispatch" + "extra"(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return "dispatch" * 2(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return "dispatch" - 1(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch("foo", op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, "get", args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, "set", args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, "post", args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args + 1);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.length);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return 1 + 1(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return null(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return undefined(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(null).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(undefined).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q([]).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.any().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.race().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.reject().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply({});

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array[0]);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.slice(1));

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration === undefined) {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration !== undefined) {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](0);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return undefined(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(null);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(undefined);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.fail) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.isRejected) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (!result.isFulfilled) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value + 1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value - 1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value * 2);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, null, callback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value * 2, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value - 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, reject, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, resolve, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, errback.bind(continuer, "throw"));

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, null);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, () => {
+     throw new Error("This is a bug!");
+   });

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg + 1);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg * 2);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg.toString());

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.name === "StopIteration") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.name === "StopIterationException") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.message === "StopIteration") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration === true(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration !== true(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (typeof isStopIteration === "function"(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.value)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.message);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.name);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return resolve(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject("some other error message");

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(null);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(callback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return reject(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return deferred.reject(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result - 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result * 2, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, errback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, undefined, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, () => {}, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, reject);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, Q.reject);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply([]);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply("foo");

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.bind(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(undefined));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(null));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.call(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.apply(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(null), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(function () {}), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "previous");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "reject"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "resolve"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "fulfill"));

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(null, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return reject();

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.fail(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.reject(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.resolve(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator)(1));

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator)("foo"));

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator)(Q.when(1)));

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.bind(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.apply(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(this))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, len(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, sum(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([1, 2, 3])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all("hello")], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply({}, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return result.apply(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return result.resolve(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(this, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat([null]));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.map(function (x) {
+     return x + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[0]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[1]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.reject(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.resolve(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.all(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q("foo").dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op - 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op * 2, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, undefined);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, []);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, "foo", args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           Q.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op - 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, !op, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, undefined);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return null(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return 0(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(Q.reject(new Error("test error"))).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(Q.resolve(object)).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(Q.resolve("different value")).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key * 2]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.promiseDispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch.resolve("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch.reject("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key * 2]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(undefined).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q({}).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value * 2]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, value]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return null("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return undefined("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, 1]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, ""]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(0).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("undefined", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", []);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", null);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", undefined);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("del", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key + 1]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", ["key"]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args[0]]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, [args]]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(1).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("set", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat(["extra_arg"])]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args[0]]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args[1]]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return Promise.prototype.dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return Promise.prototype.dispatch.apply("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("apply", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("call", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, undefined]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, null]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, 0]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.reject(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.resolve(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.when(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(undefined).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q({}).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("set", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 2))]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments[0])]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(null, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(undefined, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([], 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return deferred.reject("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return deferred.notify("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return undefined("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("put", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("get", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 1))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 2))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 3))]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice("foo", 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(null, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(undefined, 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, null)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, void 0)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, [args]]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice(0)]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q({}).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("concat", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.length]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args[0]]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.slice()]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply" + "call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.concat(args)]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [this, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(null).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q({}).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("concat", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(args.slice(1))]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([].slice.call(arguments, 2), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments.slice(2), 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, arguments.length - 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("invoke", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(null)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice([])]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice({})]);

[Survived] PrecomputedMutator
q.js:1537:19
-       var promise = Q(object);
+       var promise = null(object);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(0);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.concat(array_slice(arguments, 2)));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.concat(array_slice(arguments, 1, 2)));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.concat(array_slice(arguments, 2, 3)));

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3), 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args.push(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args.slice(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args.splice(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, -1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_reverse(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_concat(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_filter(arguments))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(void 0))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(this))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.slice(1));

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.slice(0, -1));

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.reverse());

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 1))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice("hello"))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("foo", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.keys()).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.values()).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.entries()).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("forEach", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("then", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [undefined]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [null]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", ["a", "b", "c"]);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", undefined);

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   !isPromise(promise)

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   promise.state === "rejected"(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   promise.value(promise) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {})) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.catch(function () {})) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.finally(function () {})) &&

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.value()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.isFulfilled()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount <= 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount !== 0) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               undefined(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.concat([Q.reject("error")]));

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: index
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: promises[index]
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: promises[index].value
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               Q.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               Promise.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.filter(function (promise) {
+     return promise.state === "fulfilled";
+   }));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.map(function (promise) {
+     return promise.value;
+   }));

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allResolved(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(null);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(undefined);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all([]);

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === 1) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.defer();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.when();

[Survived] PrecomputedMutator
q.js:1634:20
-       var deferred = Q.defer();
+       var deferred = Q.defer.reject();

[Survived] PrecomputedMutator
q.js:1634:20
-       var deferred = Q.defer();
+       var deferred = Q.defer.resolve();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).catch(onProgress));

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).then(onRejected, onFulfilled), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, noop, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onProgress, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onResolve, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onNotify);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.fulfill(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve("<PLACEHOLDER>");

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (promise.isRejected()) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (promise.isPending()) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (promise.isFulfilled()) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.inspect(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(deferred);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejected);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(deferred.reject);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return all(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return some(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.reject);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.resolve);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(null);

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(any, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allRejected", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "anyResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allFulfilled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "any");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, 0);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, null);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_fill(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.reverse(), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(1), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.concat(promises), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function () {}), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function () {
+     return null;
+   }), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function () {
+     throw new Error();
+   }), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function noop() {}, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function () {}, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function () {
+     return undefined;
+   }, noop);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allRejected(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allFulfilled(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(undefined);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved([]);

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.reverse()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice(1)).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.concat(Q.reject())).allSettled();

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = null(promise);

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = undefined(promise);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(promise.inspect());

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(promise.then(promise.inspect));

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.catch(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.all(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.race(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.inspect(), regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(Q.reject(promise), regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(Q.resolve(promise), regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function () {
+     throw new Error("test error");
+   });

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function () {
+     return "test value";
+   });

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function () {
+     return Q.reject("test rejection");
+   });

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q.allSettled(object).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q.reject(object).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(null).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(undefined).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q("Error message").then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, fulfilled);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(0, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, Q.reject(new Error("rejected")));

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, progressed.bind(this));

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q([]).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, promise.then(void 0, progressed));

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, promise.then(progressed, void 0));

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, promise.then(void 0, function () {}));

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this["then"](void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(() => {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, () => {}, progressed);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(undefined)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(new Error("Mutated code"))["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.fcall().then(function () {
+     throw reason;
+   }));

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.fcall().then(function () {
+     return Q.reject(reason);
+   }));

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.fcall().then(function () {
+     return Q.resolve(reason);
+   }));

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.apply === "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(Q.fcall());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(Q.reject());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(Q.defer());

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.reject(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.resolve(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.defer(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(null).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(undefined).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(this).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progressed, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, progress, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, 0);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.then());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, Q.delay(promise, 1000));

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, Q.timeout(promise, 1000));

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, "progress") :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, null) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, undefined) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(undefined, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, resolved, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, deferred.reject, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, rejected) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, fulfilled) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, void 0) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.call(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.apply(null));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError(new Error("Something went wrong")));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(Q.reject(new Error("Something went wrong")));

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(false, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError(null));

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError(new Error()));

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError(promise));

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(null, ms);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, ms);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.reject(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(false).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(-1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(NaN, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, undefined);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Different error"));

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error == "string") {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error != "string") {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (typeof error !== "string") {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.notify(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           null(error);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           setInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           undefined(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(new Error("Q can't apply finally callback"));

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           null(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(reason);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(error);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== void 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== 0) {

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(1).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(0);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(null);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(undefined);

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = deferred.reject();

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = deferred.resolve();

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = deferred.notify();

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               null(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(0);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice.length(args);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function (err, value) {
+     if (err) {
+       deferred.reject(err);
+     } else {
+       deferred.resolve(value);
+     }
+   });

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.notify());

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       deferred.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       Q.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(undefined).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.reject("Something went wrong"));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3), 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, "hello");

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return null(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return undefined(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return 0(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(Promise.reject()).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(0);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = undefined();

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = null();

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = {}();

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function (err) {
+     throw err;
+   }));

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(undefined).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback === null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback === "function") {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice.length(arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, void 0);

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, -1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, 2));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(null(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(undefined(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(123(arguments));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice({
+     length: 0
+   }));

[Survived] PrecomputedMutator
q.js:1949:24
-           var deferred = defer();
+           var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(undefined));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(42));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeRejector());

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           deferred(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           deferred.promise(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           deferred.resolve(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(deferred.promise).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(Q.resolve(callback)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(Q.reject(callback)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.pop()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.shift()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.reverse()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = null(arguments);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = undefined(arguments);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = {}(arguments);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(1);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice("hello");

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.concat(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.slice(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(function (err, value) {
+     if (err) {
+       nodeback(err);
+     } else {
+       nodeback(null, value);
+     }
+   });

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(function (err, value) {
+     if (err) {
+       nodeback(err);
+     } else {
+       nodeback(value);
+     }
+   });

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.nodeify.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.nbind.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.nfbind.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(NaN, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.concat(deferred.makeNodeResolver()));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.reverse());

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(args, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 1), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 2), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 3), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs + args(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).concat(1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).reverse());

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1967:24
-           var deferred = defer();
+           var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:1967:24
-           var deferred = defer();
+           var deferred = undefined();

[Survived] PrecomputedMutator
q.js:1967:24
-           var deferred = defer();
+           var deferred = null();

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(undefined));

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments + 1);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments.length + 1);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[0]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, undefined);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q({}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.concat(deferred.makeNodeResolver())).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice(0, nodeArgs.length - 1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(args.length);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(args[0]);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(0, 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, {});

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(0);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.then(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args[0]);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.length);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(args, name);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name + args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(args[0]);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q({}).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("newName", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(null, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(undefined, args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, null);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, undefined);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, 0);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(args = []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(args = null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(args = undefined);

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().bind(null));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().call(null));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().apply(null));

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, 42]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.concat(42)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.post("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.get("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.put("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, args]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.concat(args)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, args.concat(nodeArgs)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject("ERROR"));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(undefined, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice("string", 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:2020:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:2020:20
-       var deferred = defer();
+       var deferred = deferred.promise();

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.concat(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(true));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(false));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(null).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(this).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("push", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("pop", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.slice(1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.concat([42])]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, "test");

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice.length(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "foo"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, deferred.makeNodeResolver()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, deferred.reject]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, deferred.resolve]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return null(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return undefined(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(object.then()).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(object.catch()).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(object.finally()).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(!nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback + 1);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback.call(null));

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback === null) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback !== null) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(1, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback("hello", value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   null(null, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   undefined(null, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback({}, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, value + 1);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   null(error);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   undefined(error);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   0(error);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(new Error("This is a test error"));

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.reject();

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.resolve();

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.all();

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.reject();

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.resolve();

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.delay();

[Survived] PrecomputedMutator
queue.js:10:24
-               var next = Q.defer();
+               var next = Q.reject();

[Survived] PrecomputedMutator
queue.js:10:24
-               var next = Q.defer();
+               var next = Q.resolve();

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.put("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.reject("head");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail.head");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.reject("tail");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.then("tail");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.catch("tail");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" + "1");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" + ends.promise.get("head"));

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve({});

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject("error")};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(undefined)};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.promise.resolve(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.promise.reject(end);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(null);

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   12.06 |      163 |        87 |       1823 |        0 |        0 |
 q.js     |   12.24 |      163 |        87 |       1792 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         31 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m15:45:32 (3090) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m15:45:32 (3090) INFO MutationTestExecutor[39m Done in 238 minutes 29 seconds.

real	238m31.024s
user	44m7.425s
sys	7m33.036s
